
# 1 "src/eth/mac.c"

# 13 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\stdint.h"
typedef signed char int8_t;

# 20
typedef signed int int16_t;

# 28
typedef signed short long int int24_t;

# 36
typedef signed long int int32_t;

# 43
typedef unsigned char uint8_t;

# 49
typedef unsigned int uint16_t;

# 56
typedef unsigned short long int uint24_t;

# 63
typedef unsigned long int uint32_t;

# 71
typedef signed char int_least8_t;

# 78
typedef signed int int_least16_t;

# 90
typedef signed short long int int_least24_t;

# 98
typedef signed long int int_least32_t;

# 105
typedef unsigned char uint_least8_t;

# 111
typedef unsigned int uint_least16_t;

# 121
typedef unsigned short long int uint_least24_t;

# 128
typedef unsigned long int uint_least32_t;

# 137
typedef signed char int_fast8_t;

# 144
typedef signed int int_fast16_t;

# 156
typedef signed short long int int_fast24_t;

# 164
typedef signed long int int_fast32_t;

# 171
typedef unsigned char uint_fast8_t;

# 177
typedef unsigned int uint_fast16_t;

# 187
typedef unsigned short long int uint_fast24_t;

# 194
typedef unsigned long int uint_fast32_t;

# 200
typedef int32_t intmax_t;




typedef uint32_t uintmax_t;




typedef int16_t intptr_t;




typedef uint16_t uintptr_t;

# 32 "src/eth/../stack/bool.h"
typedef bit bool_t;

# 36 "src/eth/../enc424j600/rsv.h"
typedef struct RSV {

# 42
uint16_t length;
uint8_t packetPreviouslyIgnored : 1;

# 50
uint8_t carrierEventPreviouslySeen : 1;
uint8_t CRCError : 1;
uint8_t lengthCheckError : 1;
uint8_t lengthOutOfRange : 1;
uint8_t receivedOk : 1;
uint8_t multicast : 1;
uint8_t broadcast : 1;
uint8_t dribbleNibble : 1;
uint8_t controlFrame : 1;
uint8_t pauseFrame : 1;
uint8_t unknownOpcode : 1;
uint8_t vlan : 1;
uint8_t runtFilter : 1;
uint8_t notMeFilter : 1;
uint8_t hashFilter : 1;
uint8_t magicFilter : 1;
uint8_t patternMatch : 1;
uint8_t unicast : 1;
} RSV_t;

# 35 "src/eth/../mem/memoryTypes.h"
typedef struct memoryField {

# 42
uint16_t start;
uint16_t end;
uint16_t length;
uint8_t fIsAssigned;
uint8_t fOutOfMemory;

# 51
uint8_t index;
} memoryField_t;

# 36 "src/eth/../stack/time.h"
typedef uint32_t time_t;

# 42
void updateTime();

# 48
time_t getMillis();

# 49 "src/eth/ethernetTypes.h"
typedef enum etherTypes {
ETHERTYPE_IPv4 = 0x0800,
ETHERTYPE_ARP = 0x0806,
ETHERTYPE_WOL = 0x0842,
ETHERTYPE_FLOW_CONTROL = 0x8808
} etherType_t;

# 58
typedef struct macaddress {
uint8_t address[6];
} macaddress_t;

# 64
typedef enum linkStates {
NO_LINK,
LINK_ESTABLISHED
} linkState_t;

# 71
typedef enum speeds {
TEN_MBIT,
HUNDRED_MBIT
} speed_t;

# 78
typedef enum duplexStates {
HALF_DUPLEX,
FULL_DUPLEX
} duplexState_t;

# 86
typedef struct ethernetFrame {
uint16_t length;
macaddress_t source;
macaddress_t destination;
etherType_t ethertype;
memoryField_t memory;

# 96
RSV_t receiveStatusVector;

# 100
time_t tReceived;
} ethernetFrame_t;

# 106
typedef struct ethernetConnection {
linkState_t link;
speed_t speed;
duplexState_t duplex;
macaddress_t source;
macaddress_t destination;
} ethernetConnection_t;

# 43 "src/eth/mac.h"
bool_t mac_cmp(macaddress_t *a, macaddress_t *b);

# 49
void mac_setToBroadcast(macaddress_t *mac);

# 56
bool_t mac_isBroadcast(macaddress_t *mac);

# 62
void mac_setAllZero(macaddress_t *mac);

# 70
bool_t mac_isAllZero(macaddress_t *mac);

# 26 "src/eth/mac.c"
void mac_setToBroadcast(macaddress_t *mac) {
for (uint8_t i = 0; i < 6; i++)
mac->address[i] = 0xff;
}

bool_t mac_isAllZero(macaddress_t* mac) {
for (uint8_t i = 0; i < 6; i++) {
if (mac->address[i] != 0x00)
return 0;
}
return 1;
}

bool_t mac_cmp(macaddress_t* a, macaddress_t* b) {
for (uint8_t i = 0; i < 6; i++) {
if (a->address[i] != b->address[i])
return 0;
}
return 1;
}

void mac_setAllZero(macaddress_t* mac) {
for (uint8_t i = 0; i < 6; i++)
mac->address[i] = 0x00;
}
