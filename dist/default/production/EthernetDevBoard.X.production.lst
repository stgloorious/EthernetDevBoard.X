

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon May 20 20:56:39 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F27K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,noexec
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=4,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=4,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   158                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   159                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   160  0000                     
   161                           ; Version 1.45
   162                           ; Generated 16/11/2017 GMT
   163                           ; 
   164                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   165                           ; All rights reserved.
   166                           ; 
   167                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   168                           ; 
   169                           ; Redistribution and use in source and binary forms, with or without modification, are
   170                           ; permitted provided that the following conditions are met:
   171                           ; 
   172                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   173                           ;        conditions and the following disclaimer.
   174                           ; 
   175                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   176                           ;        of conditions and the following disclaimer in the documentation and/or other
   177                           ;        materials provided with the distribution.
   178                           ; 
   179                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   180                           ;        software without specific prior written permission.
   181                           ; 
   182                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   183                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   184                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   185                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   186                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   187                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   188                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   189                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   190                           ; 
   191                           ; 
   192                           ; Code-generator required, PIC18F27K42 Definitions
   193                           ; 
   194                           ; SFR Addresses
   195  0000                     
   196                           	psect	idataBANK2
   197  01775C                     __pidataBANK2:
   198                           	opt stack 0
   199                           
   200                           ;initializer for _randx
   201  01775C  0001               	dw	1
   202  01775E  0000               	dw	0
   203                           
   204                           ;initializer for _id
   205  017760  0001               	dw	1
   206                           
   207                           ;initializer for ethernetController_softReset@F18966
   208  017762  12                 	db	18
   209  017763  34                 	db	52
   210                           
   211                           	psect	idataBANK3
   212  0173B0                     __pidataBANK3:
   213                           	opt stack 0
   214                           
   215                           ;initializer for _icmpTxtMessages
   216  0173B0  4D                 	db	low STR_30
   217  0173B1  FF                 	db	high STR_30
   218  0173B2  ED                 	db	low (STR_17+3)
   219  0173B3  FF                 	db	high (STR_17+3)
   220  0173B4  ED                 	db	low (STR_17+3)
   221  0173B5  FF                 	db	high (STR_17+3)
   222  0173B6  D3                 	db	low STR_33
   223  0173B7  FD                 	db	high STR_33
   224  0173B8  AD                 	db	low STR_34
   225  0173B9  FE                 	db	high STR_34
   226  0173BA  5F                 	db	low STR_35
   227  0173BB  FE                 	db	high STR_35
   228  0173BC  ED                 	db	low (STR_17+3)
   229  0173BD  FF                 	db	high (STR_17+3)
   230  0173BE  ED                 	db	low (STR_17+3)
   231  0173BF  FF                 	db	high (STR_17+3)
   232  0173C0  D5                 	db	low STR_38
   233  0173C1  FE                 	db	high STR_38
   234  0173C2  EB                 	db	low STR_39
   235  0173C3  FD                 	db	high STR_39
   236  0173C4  15                 	db	low STR_40
   237  0173C5  FE                 	db	high STR_40
   238  0173C6  9F                 	db	low STR_41
   239  0173C7  FE                 	db	high STR_41
   240  0173C8  B9                 	db	low STR_42
   241  0173C9  FD                 	db	high STR_42
   242  0173CA  58                 	db	low STR_43
   243  0173CB  FF                 	db	high STR_43
   244  0173CC  70                 	db	low STR_44
   245  0173CD  FE                 	db	high STR_44
   246                           
   247                           ;initializer for _sevenSegCharacters
   248  0173CE  3F                 	db	63
   249  0173CF  06                 	db	6
   250  0173D0  5B                 	db	91
   251  0173D1  4F                 	db	79
   252  0173D2  66                 	db	102
   253  0173D3  6D                 	db	109
   254  0173D4  7D                 	db	125
   255  0173D5  07                 	db	7
   256  0173D6  7F                 	db	127
   257  0173D7  6F                 	db	111
   258  0173D8  00                 	db	0
   259  0173D9  40                 	db	64
   260                           
   261                           	psect	mediumconst
   262  00FBBA                     __pmediumconst:
   263                           	opt stack 0
   264  00FBBA  00                 	db	0
   265  00FBBB                     ethernetController_getDeviceName@F18978:
   266                           	opt stack 0
   267  00FBBB  45                 	db	69
   268  00FBBC  4E                 	db	78
   269  00FBBD  43                 	db	67
   270  00FBBE  34                 	db	52
   271  00FBBF  32                 	db	50
   272  00FBC0  34                 	db	52
   273  00FBC1  4A                 	db	74
   274  00FBC2  36                 	db	54
   275  00FBC3  30                 	db	48
   276  00FBC4  30                 	db	48
   277  00FBC5  00                 	db	0
   278  00FBC6                     __end_ofethernetController_getDeviceName@F18978:
   279                           	opt stack 0
   280  0000                     _PIE4bits	set	14740
   281  0000                     _IPR3bits	set	14723
   282  0000                     _PIE3bits	set	14739
   283  0000                     _OSCENbits	set	14813
   284  0000                     _OSCFRQbits	set	14815
   285  0000                     _TMR0IF	set	118047
   286  0000                     _TMR0IE	set	117919
   287  0000                     _CCP1IF	set	118051
   288  0000                     _CCP1IE	set	117923
   289  0000                     _TXIF	set	118028
   290  0000                     _ANSELC	set	14944
   291  0000                     _ANSELA	set	14912
   292  0000                     _ANSELB	set	14928
   293  0000                     _ANSELBbits	set	14928
   294  0000                     _U1BRG	set	15861
   295  0000                     _U1FIFObits	set	15863
   296  0000                     _U1TXB	set	15850
   297  0000                     _U1CON1bits	set	15859
   298  0000                     _U1CON0bits	set	15858
   299  0000                     _SPI1RXB	set	15632
   300  0000                     _SPI1STATUSbits	set	15639
   301  0000                     _SPI1TXB	set	15633
   302  0000                     _SPI1CLKbits	set	15644
   303  0000                     _SPI1CON1bits	set	15637
   304  0000                     _SPI1CON0bits	set	15636
   305  0000                     _CCPR1	set	16252
   306  0000                     _PORTA	set	16330
   307  0000                     _TRISA	set	16322
   308  0000                     _TRISC	set	16324
   309  0000                     _PORTC	set	16332
   310  0000                     _PORTB	set	16331
   311  0000                     _TRISB	set	16323
   312  0000                     _PCON0bits	set	16368
   313  0000                     _CCP1CONbits	set	16254
   314  0000                     _T1CONbits	set	16306
   315  0000                     _T0CON1bits	set	16313
   316  0000                     _T0CON0bits	set	16312
   317  0000                     _INTCON0bits	set	16338
   318  0000                     _TRISBbits	set	16323
   319  0000                     _PORTBbits	set	16331
   320  00FBC6                     STR_18:
   321  00FBC6  0A                 	db	10
   322  00FBC7  0D                 	db	13
   323  00FBC8  2A                 	db	42
   324  00FBC9  2A                 	db	42
   325  00FBCA  2A                 	db	42
   326  00FBCB  20                 	db	32
   327  00FBCC  43                 	db	67	;'C'
   328  00FBCD  52                 	db	82	;'R'
   329  00FBCE  49                 	db	73	;'I'
   330  00FBCF  54                 	db	84	;'T'
   331  00FBD0  49                 	db	73	;'I'
   332  00FBD1  43                 	db	67	;'C'
   333  00FBD2  41                 	db	65	;'A'
   334  00FBD3  4C                 	db	76	;'L'
   335  00FBD4  20                 	db	32
   336  00FBD5  45                 	db	69	;'E'
   337  00FBD6  52                 	db	82	;'R'
   338  00FBD7  52                 	db	82	;'R'
   339  00FBD8  4F                 	db	79	;'O'
   340  00FBD9  52                 	db	82	;'R'
   341  00FBDA  3A                 	db	58	;':'
   342  00FBDB  20                 	db	32
   343  00FBDC  52                 	db	82	;'R'
   344  00FBDD  58                 	db	88	;'X'
   345  00FBDE  20                 	db	32
   346  00FBDF  42                 	db	66	;'B'
   347  00FBE0  55                 	db	85	;'U'
   348  00FBE1  46                 	db	70	;'F'
   349  00FBE2  20                 	db	32
   350  00FBE3  4F                 	db	79	;'O'
   351  00FBE4  56                 	db	86	;'V'
   352  00FBE5  46                 	db	70	;'F'
   353  00FBE6  4C                 	db	76	;'L'
   354  00FBE7  20                 	db	32
   355  00FBE8  43                 	db	67	;'C'
   356  00FBE9  41                 	db	65	;'A'
   357  00FBEA  55                 	db	85	;'U'
   358  00FBEB  53                 	db	83	;'S'
   359  00FBEC  45                 	db	69	;'E'
   360  00FBED  44                 	db	68	;'D'
   361  00FBEE  20                 	db	32
   362  00FBEF  53                 	db	83	;'S'
   363  00FBF0  59                 	db	89	;'Y'
   364  00FBF1  53                 	db	83	;'S'
   365  00FBF2  54                 	db	84	;'T'
   366  00FBF3  45                 	db	69	;'E'
   367  00FBF4  4D                 	db	77	;'M'
   368  00FBF5  20                 	db	32
   369  00FBF6  52                 	db	82	;'R'
   370  00FBF7  45                 	db	69	;'E'
   371  00FBF8  53                 	db	83	;'S'
   372  00FBF9  45                 	db	69	;'E'
   373  00FBFA  54                 	db	84	;'T'
   374  00FBFB  20                 	db	32
   375  00FBFC  2A                 	db	42
   376  00FBFD  2A                 	db	42
   377  00FBFE  2A                 	db	42
   378  00FBFF  0A                 	db	10
   379  00FC00  0D                 	db	13
   380  00FC01  00                 	db	0
   381  00FC02                     STR_53:
   382  00FC02  0A                 	db	10
   383  00FC03  0D                 	db	13
   384  00FC04  2A                 	db	42
   385  00FC05  2A                 	db	42
   386  00FC06  2A                 	db	42
   387  00FC07  20                 	db	32
   388  00FC08  43                 	db	67	;'C'
   389  00FC09  52                 	db	82	;'R'
   390  00FC0A  49                 	db	73	;'I'
   391  00FC0B  54                 	db	84	;'T'
   392  00FC0C  49                 	db	73	;'I'
   393  00FC0D  43                 	db	67	;'C'
   394  00FC0E  41                 	db	65	;'A'
   395  00FC0F  4C                 	db	76	;'L'
   396  00FC10  20                 	db	32
   397  00FC11  45                 	db	69	;'E'
   398  00FC12  52                 	db	82	;'R'
   399  00FC13  52                 	db	82	;'R'
   400  00FC14  4F                 	db	79	;'O'
   401  00FC15  52                 	db	82	;'R'
   402  00FC16  3A                 	db	58	;':'
   403  00FC17  20                 	db	32
   404  00FC18  53                 	db	83	;'S'
   405  00FC19  54                 	db	84	;'T'
   406  00FC1A  41                 	db	65	;'A'
   407  00FC1B  43                 	db	67	;'C'
   408  00FC1C  4B                 	db	75	;'K'
   409  00FC1D  20                 	db	32
   410  00FC1E  55                 	db	85	;'U'
   411  00FC1F  4E                 	db	78	;'N'
   412  00FC20  44                 	db	68	;'D'
   413  00FC21  52                 	db	82	;'R'
   414  00FC22  46                 	db	70	;'F'
   415  00FC23  4C                 	db	76	;'L'
   416  00FC24  20                 	db	32
   417  00FC25  43                 	db	67	;'C'
   418  00FC26  41                 	db	65	;'A'
   419  00FC27  55                 	db	85	;'U'
   420  00FC28  53                 	db	83	;'S'
   421  00FC29  45                 	db	69	;'E'
   422  00FC2A  44                 	db	68	;'D'
   423  00FC2B  20                 	db	32
   424  00FC2C  52                 	db	82	;'R'
   425  00FC2D  45                 	db	69	;'E'
   426  00FC2E  53                 	db	83	;'S'
   427  00FC2F  45                 	db	69	;'E'
   428  00FC30  54                 	db	84	;'T'
   429  00FC31  20                 	db	32
   430  00FC32  2A                 	db	42
   431  00FC33  2A                 	db	42
   432  00FC34  2A                 	db	42
   433  00FC35  0A                 	db	10
   434  00FC36  0D                 	db	13
   435  00FC37  00                 	db	0
   436  00FC38                     STR_51:
   437  00FC38  0A                 	db	10
   438  00FC39  0D                 	db	13
   439  00FC3A  2A                 	db	42
   440  00FC3B  2A                 	db	42
   441  00FC3C  2A                 	db	42
   442  00FC3D  20                 	db	32
   443  00FC3E  43                 	db	67	;'C'
   444  00FC3F  52                 	db	82	;'R'
   445  00FC40  49                 	db	73	;'I'
   446  00FC41  54                 	db	84	;'T'
   447  00FC42  49                 	db	73	;'I'
   448  00FC43  43                 	db	67	;'C'
   449  00FC44  41                 	db	65	;'A'
   450  00FC45  4C                 	db	76	;'L'
   451  00FC46  20                 	db	32
   452  00FC47  45                 	db	69	;'E'
   453  00FC48  52                 	db	82	;'R'
   454  00FC49  52                 	db	82	;'R'
   455  00FC4A  4F                 	db	79	;'O'
   456  00FC4B  52                 	db	82	;'R'
   457  00FC4C  3A                 	db	58	;':'
   458  00FC4D  20                 	db	32
   459  00FC4E  53                 	db	83	;'S'
   460  00FC4F  54                 	db	84	;'T'
   461  00FC50  41                 	db	65	;'A'
   462  00FC51  43                 	db	67	;'C'
   463  00FC52  4B                 	db	75	;'K'
   464  00FC53  20                 	db	32
   465  00FC54  4F                 	db	79	;'O'
   466  00FC55  56                 	db	86	;'V'
   467  00FC56  52                 	db	82	;'R'
   468  00FC57  46                 	db	70	;'F'
   469  00FC58  4C                 	db	76	;'L'
   470  00FC59  20                 	db	32
   471  00FC5A  43                 	db	67	;'C'
   472  00FC5B  41                 	db	65	;'A'
   473  00FC5C  55                 	db	85	;'U'
   474  00FC5D  53                 	db	83	;'S'
   475  00FC5E  45                 	db	69	;'E'
   476  00FC5F  44                 	db	68	;'D'
   477  00FC60  20                 	db	32
   478  00FC61  52                 	db	82	;'R'
   479  00FC62  45                 	db	69	;'E'
   480  00FC63  53                 	db	83	;'S'
   481  00FC64  45                 	db	69	;'E'
   482  00FC65  54                 	db	84	;'T'
   483  00FC66  20                 	db	32
   484  00FC67  2A                 	db	42
   485  00FC68  2A                 	db	42
   486  00FC69  2A                 	db	42
   487  00FC6A  0A                 	db	10
   488  00FC6B  0D                 	db	13
   489  00FC6C  00                 	db	0
   490  00FC6D                     STR_49:
   491  00FC6D  0A                 	db	10
   492  00FC6E  0D                 	db	13
   493  00FC6F  2A                 	db	42
   494  00FC70  2A                 	db	42
   495  00FC71  2A                 	db	42
   496  00FC72  20                 	db	32
   497  00FC73  43                 	db	67	;'C'
   498  00FC74  52                 	db	82	;'R'
   499  00FC75  49                 	db	73	;'I'
   500  00FC76  54                 	db	84	;'T'
   501  00FC77  49                 	db	73	;'I'
   502  00FC78  43                 	db	67	;'C'
   503  00FC79  41                 	db	65	;'A'
   504  00FC7A  4C                 	db	76	;'L'
   505  00FC7B  20                 	db	32
   506  00FC7C  45                 	db	69	;'E'
   507  00FC7D  52                 	db	82	;'R'
   508  00FC7E  52                 	db	82	;'R'
   509  00FC7F  4F                 	db	79	;'O'
   510  00FC80  52                 	db	82	;'R'
   511  00FC81  3A                 	db	58	;':'
   512  00FC82  20                 	db	32
   513  00FC83  42                 	db	66	;'B'
   514  00FC84  52                 	db	82	;'R'
   515  00FC85  4F                 	db	79	;'O'
   516  00FC86  57                 	db	87	;'W'
   517  00FC87  4E                 	db	78	;'N'
   518  00FC88  2D                 	db	45
   519  00FC89  4F                 	db	79	;'O'
   520  00FC8A  55                 	db	85	;'U'
   521  00FC8B  54                 	db	84	;'T'
   522  00FC8C  20                 	db	32
   523  00FC8D  43                 	db	67	;'C'
   524  00FC8E  41                 	db	65	;'A'
   525  00FC8F  55                 	db	85	;'U'
   526  00FC90  53                 	db	83	;'S'
   527  00FC91  45                 	db	69	;'E'
   528  00FC92  44                 	db	68	;'D'
   529  00FC93  20                 	db	32
   530  00FC94  52                 	db	82	;'R'
   531  00FC95  45                 	db	69	;'E'
   532  00FC96  53                 	db	83	;'S'
   533  00FC97  45                 	db	69	;'E'
   534  00FC98  54                 	db	84	;'T'
   535  00FC99  20                 	db	32
   536  00FC9A  2A                 	db	42
   537  00FC9B  2A                 	db	42
   538  00FC9C  2A                 	db	42
   539  00FC9D  0A                 	db	10
   540  00FC9E  0D                 	db	13
   541  00FC9F  00                 	db	0
   542  00FCA0                     STR_72:
   543  00FCA0  2D                 	db	45
   544  00FCA1  2D                 	db	45
   545  00FCA2  2D                 	db	45
   546  00FCA3  2D                 	db	45
   547  00FCA4  2D                 	db	45
   548  00FCA5  2D                 	db	45
   549  00FCA6  2D                 	db	45
   550  00FCA7  2D                 	db	45
   551  00FCA8  2D                 	db	45
   552  00FCA9  2D                 	db	45
   553  00FCAA  2D                 	db	45
   554  00FCAB  2D                 	db	45
   555  00FCAC  2D                 	db	45
   556  00FCAD  2D                 	db	45
   557  00FCAE  2D                 	db	45
   558  00FCAF  2D                 	db	45
   559  00FCB0  2D                 	db	45
   560  00FCB1  2D                 	db	45
   561  00FCB2  2D                 	db	45
   562  00FCB3  2D                 	db	45
   563  00FCB4  2D                 	db	45
   564  00FCB5  2D                 	db	45
   565  00FCB6  2D                 	db	45
   566  00FCB7  2D                 	db	45
   567  00FCB8  2D                 	db	45
   568  00FCB9  2D                 	db	45
   569  00FCBA  2D                 	db	45
   570  00FCBB  2D                 	db	45
   571  00FCBC  2D                 	db	45
   572  00FCBD  2D                 	db	45
   573  00FCBE  2D                 	db	45
   574  00FCBF  2D                 	db	45
   575  00FCC0  2D                 	db	45
   576  00FCC1  2D                 	db	45
   577  00FCC2  2D                 	db	45
   578  00FCC3  2D                 	db	45
   579  00FCC4  2D                 	db	45
   580  00FCC5  2D                 	db	45
   581  00FCC6  2D                 	db	45
   582  00FCC7  2D                 	db	45
   583  00FCC8  2D                 	db	45
   584  00FCC9  2D                 	db	45
   585  00FCCA  2D                 	db	45
   586  00FCCB  2D                 	db	45
   587  00FCCC  2D                 	db	45
   588  00FCCD  2D                 	db	45
   589  00FCCE  2D                 	db	45
   590  00FCCF  2D                 	db	45
   591  00FCD0  2D                 	db	45
   592  00FCD1  00                 	db	0
   593  00FCD2                     STR_47:
   594  00FCD2  0A                 	db	10
   595  00FCD3  0D                 	db	13
   596  00FCD4  2A                 	db	42
   597  00FCD5  2A                 	db	42
   598  00FCD6  2A                 	db	42
   599  00FCD7  20                 	db	32
   600  00FCD8  43                 	db	67	;'C'
   601  00FCD9  52                 	db	82	;'R'
   602  00FCDA  49                 	db	73	;'I'
   603  00FCDB  54                 	db	84	;'T'
   604  00FCDC  49                 	db	73	;'I'
   605  00FCDD  43                 	db	67	;'C'
   606  00FCDE  41                 	db	65	;'A'
   607  00FCDF  4C                 	db	76	;'L'
   608  00FCE0  20                 	db	32
   609  00FCE1  45                 	db	69	;'E'
   610  00FCE2  52                 	db	82	;'R'
   611  00FCE3  52                 	db	82	;'R'
   612  00FCE4  4F                 	db	79	;'O'
   613  00FCE5  52                 	db	82	;'R'
   614  00FCE6  3A                 	db	58	;':'
   615  00FCE7  20                 	db	32
   616  00FCE8  57                 	db	87	;'W'
   617  00FCE9  41                 	db	65	;'A'
   618  00FCEA  54                 	db	84	;'T'
   619  00FCEB  43                 	db	67	;'C'
   620  00FCEC  48                 	db	72	;'H'
   621  00FCED  44                 	db	68	;'D'
   622  00FCEE  4F                 	db	79	;'O'
   623  00FCEF  47                 	db	71	;'G'
   624  00FCF0  20                 	db	32
   625  00FCF1  43                 	db	67	;'C'
   626  00FCF2  41                 	db	65	;'A'
   627  00FCF3  55                 	db	85	;'U'
   628  00FCF4  53                 	db	83	;'S'
   629  00FCF5  45                 	db	69	;'E'
   630  00FCF6  44                 	db	68	;'D'
   631  00FCF7  20                 	db	32
   632  00FCF8  52                 	db	82	;'R'
   633  00FCF9  45                 	db	69	;'E'
   634  00FCFA  53                 	db	83	;'S'
   635  00FCFB  45                 	db	69	;'E'
   636  00FCFC  54                 	db	84	;'T'
   637  00FCFD  20                 	db	32
   638  00FCFE  2A                 	db	42
   639  00FCFF  2A                 	db	42
   640  00FD00  2A                 	db	42
   641  00FD01  0A                 	db	10
   642  00FD02  0D                 	db	13
   643  00FD03  00                 	db	0
   644  00FD04                     STR_27:
   645  00FD04  5B                 	db	91	;'['
   646  00FD05  49                 	db	73	;'I'
   647  00FD06  50                 	db	80	;'P'
   648  00FD07  76                 	db	118	;'v'
   649  00FD08  34                 	db	52	;'4'
   650  00FD09  5D                 	db	93	;']'
   651  00FD0A  3A                 	db	58	;':'
   652  00FD0B  20                 	db	32
   653  00FD0C  41                 	db	65	;'A'
   654  00FD0D  64                 	db	100	;'d'
   655  00FD0E  64                 	db	100	;'d'
   656  00FD0F  72                 	db	114	;'r'
   657  00FD10  65                 	db	101	;'e'
   658  00FD11  73                 	db	115	;'s'
   659  00FD12  73                 	db	115	;'s'
   660  00FD13  20                 	db	32
   661  00FD14  63                 	db	99	;'c'
   662  00FD15  6F                 	db	111	;'o'
   663  00FD16  6E                 	db	110	;'n'
   664  00FD17  66                 	db	102	;'f'
   665  00FD18  6C                 	db	108	;'l'
   666  00FD19  69                 	db	105	;'i'
   667  00FD1A  63                 	db	99	;'c'
   668  00FD1B  74                 	db	116	;'t'
   669  00FD1C  20                 	db	32
   670  00FD1D  64                 	db	100	;'d'
   671  00FD1E  65                 	db	101	;'e'
   672  00FD1F  74                 	db	116	;'t'
   673  00FD20  65                 	db	101	;'e'
   674  00FD21  63                 	db	99	;'c'
   675  00FD22  74                 	db	116	;'t'
   676  00FD23  65                 	db	101	;'e'
   677  00FD24  64                 	db	100	;'d'
   678  00FD25  2E                 	db	46
   679  00FD26  0A                 	db	10
   680  00FD27  0D                 	db	13
   681  00FD28  00                 	db	0
   682  00FD29                     STR_28:
   683  00FD29  5B                 	db	91	;'['
   684  00FD2A  49                 	db	73	;'I'
   685  00FD2B  50                 	db	80	;'P'
   686  00FD2C  76                 	db	118	;'v'
   687  00FD2D  34                 	db	52	;'4'
   688  00FD2E  5D                 	db	93	;']'
   689  00FD2F  3A                 	db	58	;':'
   690  00FD30  20                 	db	32
   691  00FD31  53                 	db	83	;'S'
   692  00FD32  65                 	db	101	;'e'
   693  00FD33  74                 	db	116	;'t'
   694  00FD34  74                 	db	116	;'t'
   695  00FD35  69                 	db	105	;'i'
   696  00FD36  6E                 	db	110	;'n'
   697  00FD37  67                 	db	103	;'g'
   698  00FD38  20                 	db	32
   699  00FD39  49                 	db	73	;'I'
   700  00FD3A  50                 	db	80	;'P'
   701  00FD3B  76                 	db	118	;'v'
   702  00FD3C  34                 	db	52	;'4'
   703  00FD3D  20                 	db	32
   704  00FD3E  53                 	db	83	;'S'
   705  00FD3F  72                 	db	114	;'r'
   706  00FD40  63                 	db	99	;'c'
   707  00FD41  20                 	db	32
   708  00FD42  41                 	db	65	;'A'
   709  00FD43  64                 	db	100	;'d'
   710  00FD44  64                 	db	100	;'d'
   711  00FD45  72                 	db	114	;'r'
   712  00FD46  65                 	db	101	;'e'
   713  00FD47  73                 	db	115	;'s'
   714  00FD48  73                 	db	115	;'s'
   715  00FD49  20                 	db	32
   716  00FD4A  74                 	db	116	;'t'
   717  00FD4B  6F                 	db	111	;'o'
   718  00FD4C  20                 	db	32
   719  00FD4D  00                 	db	0
   720  00FD4E                     STR_124:
   721  00FD4E  5B                 	db	91	;'['
   722  00FD4F  41                 	db	65	;'A'
   723  00FD50  6D                 	db	109	;'m'
   724  00FD51  20                 	db	32
   725  00FD52  6C                 	db	108	;'l'
   726  00FD53  69                 	db	105	;'i'
   727  00FD54  73                 	db	115	;'s'
   728  00FD55  74                 	db	116	;'t'
   729  00FD56  65                 	db	101	;'e'
   730  00FD57  6E                 	db	110	;'n'
   731  00FD58  69                 	db	105	;'i'
   732  00FD59  6E                 	db	110	;'n'
   733  00FD5A  67                 	db	103	;'g'
   734  00FD5B  20                 	db	32
   735  00FD5C  6F                 	db	111	;'o'
   736  00FD5D  6E                 	db	110	;'n'
   737  00FD5E  20                 	db	32
   738  00FD5F  74                 	db	116	;'t'
   739  00FD60  68                 	db	104	;'h'
   740  00FD61  69                 	db	105	;'i'
   741  00FD62  73                 	db	115	;'s'
   742  00FD63  20                 	db	32
   743  00FD64  70                 	db	112	;'p'
   744  00FD65  6F                 	db	111	;'o'
   745  00FD66  72                 	db	114	;'r'
   746  00FD67  74                 	db	116	;'t'
   747  00FD68  5D                 	db	93	;']'
   748  00FD69  00                 	db	0
   749  00FD6A                     STR_25:
   750  00FD6A  5B                 	db	91	;'['
   751  00FD6B  49                 	db	73	;'I'
   752  00FD6C  50                 	db	80	;'P'
   753  00FD6D  76                 	db	118	;'v'
   754  00FD6E  34                 	db	52	;'4'
   755  00FD6F  5D                 	db	93	;']'
   756  00FD70  3A                 	db	58	;':'
   757  00FD71  20                 	db	32
   758  00FD72  46                 	db	70	;'F'
   759  00FD73  61                 	db	97	;'a'
   760  00FD74  69                 	db	105	;'i'
   761  00FD75  6C                 	db	108	;'l'
   762  00FD76  65                 	db	101	;'e'
   763  00FD77  64                 	db	100	;'d'
   764  00FD78  20                 	db	32
   765  00FD79  74                 	db	116	;'t'
   766  00FD7A  6F                 	db	111	;'o'
   767  00FD7B  20                 	db	32
   768  00FD7C  72                 	db	114	;'r'
   769  00FD7D  65                 	db	101	;'e'
   770  00FD7E  73                 	db	115	;'s'
   771  00FD7F  6F                 	db	111	;'o'
   772  00FD80  6C                 	db	108	;'l'
   773  00FD81  76                 	db	118	;'v'
   774  00FD82  65                 	db	101	;'e'
   775  00FD83  20                 	db	32
   776  00FD84  00                 	db	0
   777  00FD85                     STR_126:
   778  00FD85  5B                 	db	91	;'['
   779  00FD86  54                 	db	84	;'T'
   780  00FD87  43                 	db	67	;'C'
   781  00FD88  50                 	db	80	;'P'
   782  00FD89  5D                 	db	93	;']'
   783  00FD8A  3A                 	db	58	;':'
   784  00FD8B  20                 	db	32
   785  00FD8C  4C                 	db	76	;'L'
   786  00FD8D  69                 	db	105	;'i'
   787  00FD8E  73                 	db	115	;'s'
   788  00FD8F  74                 	db	116	;'t'
   789  00FD90  65                 	db	101	;'e'
   790  00FD91  6E                 	db	110	;'n'
   791  00FD92  69                 	db	105	;'i'
   792  00FD93  6E                 	db	110	;'n'
   793  00FD94  67                 	db	103	;'g'
   794  00FD95  20                 	db	32
   795  00FD96  6F                 	db	111	;'o'
   796  00FD97  6E                 	db	110	;'n'
   797  00FD98  20                 	db	32
   798  00FD99  50                 	db	80	;'P'
   799  00FD9A  6F                 	db	111	;'o'
   800  00FD9B  72                 	db	114	;'r'
   801  00FD9C  74                 	db	116	;'t'
   802  00FD9D  20                 	db	32
   803  00FD9E  00                 	db	0
   804  00FD9F                     STR_54:
   805  00FD9F  0A                 	db	10
   806  00FDA0  0D                 	db	13
   807  00FDA1  46                 	db	70	;'F'
   808  00FDA2  49                 	db	73	;'I'
   809  00FDA3  52                 	db	82	;'R'
   810  00FDA4  4D                 	db	77	;'M'
   811  00FDA5  57                 	db	87	;'W'
   812  00FDA6  41                 	db	65	;'A'
   813  00FDA7  52                 	db	82	;'R'
   814  00FDA8  45                 	db	69	;'E'
   815  00FDA9  20                 	db	32
   816  00FDAA  42                 	db	66	;'B'
   817  00FDAB  55                 	db	85	;'U'
   818  00FDAC  49                 	db	73	;'I'
   819  00FDAD  4C                 	db	76	;'L'
   820  00FDAE  44                 	db	68	;'D'
   821  00FDAF  20                 	db	32
   822  00FDB0  44                 	db	68	;'D'
   823  00FDB1  41                 	db	65	;'A'
   824  00FDB2  54                 	db	84	;'T'
   825  00FDB3  45                 	db	69	;'E'
   826  00FDB4  20                 	db	32
   827  00FDB5  49                 	db	73	;'I'
   828  00FDB6  53                 	db	83	;'S'
   829  00FDB7  20                 	db	32
   830  00FDB8  00                 	db	0
   831  00FDB9                     STR_42:
   832  00FDB9  50                 	db	80	;'P'
   833  00FDBA  61                 	db	97	;'a'
   834  00FDBB  72                 	db	114	;'r'
   835  00FDBC  61                 	db	97	;'a'
   836  00FDBD  6D                 	db	109	;'m'
   837  00FDBE  20                 	db	32
   838  00FDBF  50                 	db	80	;'P'
   839  00FDC0  72                 	db	114	;'r'
   840  00FDC1  6F                 	db	111	;'o'
   841  00FDC2  62                 	db	98	;'b'
   842  00FDC3  6C                 	db	108	;'l'
   843  00FDC4  65                 	db	101	;'e'
   844  00FDC5  6D                 	db	109	;'m'
   845  00FDC6  3A                 	db	58	;':'
   846  00FDC7  20                 	db	32
   847  00FDC8  42                 	db	66	;'B'
   848  00FDC9  61                 	db	97	;'a'
   849  00FDCA  64                 	db	100	;'d'
   850  00FDCB  20                 	db	32
   851  00FDCC  48                 	db	72	;'H'
   852  00FDCD  65                 	db	101	;'e'
   853  00FDCE  61                 	db	97	;'a'
   854  00FDCF  64                 	db	100	;'d'
   855  00FDD0  65                 	db	101	;'e'
   856  00FDD1  72                 	db	114	;'r'
   857  00FDD2  00                 	db	0
   858  00FDD3                     STR_33:
   859  00FDD3  44                 	db	68	;'D'
   860  00FDD4  65                 	db	101	;'e'
   861  00FDD5  73                 	db	115	;'s'
   862  00FDD6  74                 	db	116	;'t'
   863  00FDD7  69                 	db	105	;'i'
   864  00FDD8  6E                 	db	110	;'n'
   865  00FDD9  61                 	db	97	;'a'
   866  00FDDA  74                 	db	116	;'t'
   867  00FDDB  69                 	db	105	;'i'
   868  00FDDC  6F                 	db	111	;'o'
   869  00FDDD  6E                 	db	110	;'n'
   870  00FDDE  20                 	db	32
   871  00FDDF  75                 	db	117	;'u'
   872  00FDE0  6E                 	db	110	;'n'
   873  00FDE1  72                 	db	114	;'r'
   874  00FDE2  65                 	db	101	;'e'
   875  00FDE3  61                 	db	97	;'a'
   876  00FDE4  63                 	db	99	;'c'
   877  00FDE5  68                 	db	104	;'h'
   878  00FDE6  61                 	db	97	;'a'
   879  00FDE7  62                 	db	98	;'b'
   880  00FDE8  6C                 	db	108	;'l'
   881  00FDE9  65                 	db	101	;'e'
   882  00FDEA  00                 	db	0
   883  00FDEB                     STR_39:
   884  00FDEB  52                 	db	82	;'R'
   885  00FDEC  6F                 	db	111	;'o'
   886  00FDED  75                 	db	117	;'u'
   887  00FDEE  74                 	db	116	;'t'
   888  00FDEF  65                 	db	101	;'e'
   889  00FDF0  72                 	db	114	;'r'
   890  00FDF1  20                 	db	32
   891  00FDF2  41                 	db	65	;'A'
   892  00FDF3  64                 	db	100	;'d'
   893  00FDF4  76                 	db	118	;'v'
   894  00FDF5  65                 	db	101	;'e'
   895  00FDF6  72                 	db	114	;'r'
   896  00FDF7  74                 	db	116	;'t'
   897  00FDF8  69                 	db	105	;'i'
   898  00FDF9  73                 	db	115	;'s'
   899  00FDFA  65                 	db	101	;'e'
   900  00FDFB  6D                 	db	109	;'m'
   901  00FDFC  65                 	db	101	;'e'
   902  00FDFD  6E                 	db	110	;'n'
   903  00FDFE  74                 	db	116	;'t'
   904  00FDFF  00                 	db	0
   905  00FE00                     STR_23:
   906  00FE00  52                 	db	82	;'R'
   907  00FE01  65                 	db	101	;'e'
   908  00FE02  6D                 	db	109	;'m'
   909  00FE03  61                 	db	97	;'a'
   910  00FE04  69                 	db	105	;'i'
   911  00FE05  6E                 	db	110	;'n'
   912  00FE06  69                 	db	105	;'i'
   913  00FE07  6E                 	db	110	;'n'
   914  00FE08  67                 	db	103	;'g'
   915  00FE09  20                 	db	32
   916  00FE0A  4C                 	db	76	;'L'
   917  00FE0B  65                 	db	101	;'e'
   918  00FE0C  6E                 	db	110	;'n'
   919  00FE0D  67                 	db	103	;'g'
   920  00FE0E  74                 	db	116	;'t'
   921  00FE0F  68                 	db	104	;'h'
   922  00FE10  20                 	db	32
   923  00FE11  69                 	db	105	;'i'
   924  00FE12  73                 	db	115	;'s'
   925  00FE13  20                 	db	32
   926  00FE14  00                 	db	0
   927  00FE15                     STR_40:
   928  00FE15  52                 	db	82	;'R'
   929  00FE16  6F                 	db	111	;'o'
   930  00FE17  75                 	db	117	;'u'
   931  00FE18  74                 	db	116	;'t'
   932  00FE19  65                 	db	101	;'e'
   933  00FE1A  72                 	db	114	;'r'
   934  00FE1B  20                 	db	32
   935  00FE1C  53                 	db	83	;'S'
   936  00FE1D  6F                 	db	111	;'o'
   937  00FE1E  6C                 	db	108	;'l'
   938  00FE1F  69                 	db	105	;'i'
   939  00FE20  63                 	db	99	;'c'
   940  00FE21  69                 	db	105	;'i'
   941  00FE22  74                 	db	116	;'t'
   942  00FE23  61                 	db	97	;'a'
   943  00FE24  74                 	db	116	;'t'
   944  00FE25  69                 	db	105	;'i'
   945  00FE26  6F                 	db	111	;'o'
   946  00FE27  6E                 	db	110	;'n'
   947  00FE28  00                 	db	0
   948  00FE29                     STR_63:
   949  00FE29  4C                 	db	76	;'L'
   950  00FE2A  69                 	db	105	;'i'
   951  00FE2B  6E                 	db	110	;'n'
   952  00FE2C  6B                 	db	107	;'k'
   953  00FE2D  20                 	db	32
   954  00FE2E  65                 	db	101	;'e'
   955  00FE2F  73                 	db	115	;'s'
   956  00FE30  74                 	db	116	;'t'
   957  00FE31  61                 	db	97	;'a'
   958  00FE32  62                 	db	98	;'b'
   959  00FE33  6C                 	db	108	;'l'
   960  00FE34  69                 	db	105	;'i'
   961  00FE35  73                 	db	115	;'s'
   962  00FE36  68                 	db	104	;'h'
   963  00FE37  65                 	db	101	;'e'
   964  00FE38  64                 	db	100	;'d'
   965  00FE39  2E                 	db	46
   966  00FE3A  20                 	db	32
   967  00FE3B  00                 	db	0
   968  00FE3C                     STR_75:
   969  00FE3C  55                 	db	85	;'U'
   970  00FE3D  6E                 	db	110	;'n'
   971  00FE3E  6B                 	db	107	;'k'
   972  00FE3F  6E                 	db	110	;'n'
   973  00FE40  6F                 	db	111	;'o'
   974  00FE41  77                 	db	119	;'w'
   975  00FE42  6E                 	db	110	;'n'
   976  00FE43  20                 	db	32
   977  00FE44  45                 	db	69	;'E'
   978  00FE45  74                 	db	116	;'t'
   979  00FE46  68                 	db	104	;'h'
   980  00FE47  65                 	db	101	;'e'
   981  00FE48  72                 	db	114	;'r'
   982  00FE49  54                 	db	84	;'T'
   983  00FE4A  79                 	db	121	;'y'
   984  00FE4B  70                 	db	112	;'p'
   985  00FE4C  65                 	db	101	;'e'
   986  00FE4D  00                 	db	0
   987  00FE4E  55                 	db	85	;'U'
   988  00FE4F  6E                 	db	110	;'n'
   989  00FE50  6B                 	db	107	;'k'
   990  00FE51  6E                 	db	110	;'n'
   991  00FE52  6F                 	db	111	;'o'
   992  00FE53  77                 	db	119	;'w'
   993  00FE54  6E                 	db	110	;'n'
   994  00FE55  20                 	db	32
   995  00FE56  50                 	db	80	;'P'
   996  00FE57  72                 	db	114	;'r'
   997  00FE58  6F                 	db	111	;'o'
   998  00FE59  74                 	db	116	;'t'
   999  00FE5A  6F                 	db	111	;'o'
  1000  00FE5B  63                 	db	99	;'c'
  1001  00FE5C  6F                 	db	111	;'o'
  1002  00FE5D  6C                 	db	108	;'l'
  1003  00FE5E  00                 	db	0
  1004  00FE5F                     STR_35:
  1005  00FE5F  52                 	db	82	;'R'
  1006  00FE60  65                 	db	101	;'e'
  1007  00FE61  64                 	db	100	;'d'
  1008  00FE62  69                 	db	105	;'i'
  1009  00FE63  72                 	db	114	;'r'
  1010  00FE64  65                 	db	101	;'e'
  1011  00FE65  63                 	db	99	;'c'
  1012  00FE66  74                 	db	116	;'t'
  1013  00FE67  20                 	db	32
  1014  00FE68  4D                 	db	77	;'M'
  1015  00FE69  65                 	db	101	;'e'
  1016  00FE6A  73                 	db	115	;'s'
  1017  00FE6B  73                 	db	115	;'s'
  1018  00FE6C  61                 	db	97	;'a'
  1019  00FE6D  67                 	db	103	;'g'
  1020  00FE6E  65                 	db	101	;'e'
  1021  00FE6F  00                 	db	0
  1022  00FE70                     STR_44:
  1023  00FE70  54                 	db	84	;'T'
  1024  00FE71  69                 	db	105	;'i'
  1025  00FE72  6D                 	db	109	;'m'
  1026  00FE73  65                 	db	101	;'e'
  1027  00FE74  73                 	db	115	;'s'
  1028  00FE75  74                 	db	116	;'t'
  1029  00FE76  61                 	db	97	;'a'
  1030  00FE77  6D                 	db	109	;'m'
  1031  00FE78  70                 	db	112	;'p'
  1032  00FE79  20                 	db	32
  1033  00FE7A  52                 	db	82	;'R'
  1034  00FE7B  65                 	db	101	;'e'
  1035  00FE7C  70                 	db	112	;'p'
  1036  00FE7D  6C                 	db	108	;'l'
  1037  00FE7E  79                 	db	121	;'y'
  1038  00FE7F  00                 	db	0
  1039  00FE80                     STR_5:
  1040  00FE80  5B                 	db	91	;'['
  1041  00FE81  53                 	db	83	;'S'
  1042  00FE82  79                 	db	121	;'y'
  1043  00FE83  6D                 	db	109	;'m'
  1044  00FE84  62                 	db	98	;'b'
  1045  00FE85  6F                 	db	111	;'o'
  1046  00FE86  6C                 	db	108	;'l'
  1047  00FE87  20                 	db	32
  1048  00FE88  45                 	db	69	;'E'
  1049  00FE89  72                 	db	114	;'r'
  1050  00FE8A  72                 	db	114	;'r'
  1051  00FE8B  6F                 	db	111	;'o'
  1052  00FE8C  72                 	db	114	;'r'
  1053  00FE8D  73                 	db	115	;'s'
  1054  00FE8E  5D                 	db	93	;']'
  1055  00FE8F  00                 	db	0
  1056  00FE90                     STR_125:
  1057  00FE90  5B                 	db	91	;'['
  1058  00FE91  53                 	db	83	;'S'
  1059  00FE92  59                 	db	89	;'Y'
  1060  00FE93  4E                 	db	78	;'N'
  1061  00FE94  20                 	db	32
  1062  00FE95  52                 	db	82	;'R'
  1063  00FE96  65                 	db	101	;'e'
  1064  00FE97  63                 	db	99	;'c'
  1065  00FE98  65                 	db	101	;'e'
  1066  00FE99  69                 	db	105	;'i'
  1067  00FE9A  76                 	db	118	;'v'
  1068  00FE9B  65                 	db	101	;'e'
  1069  00FE9C  64                 	db	100	;'d'
  1070  00FE9D  5D                 	db	93	;']'
  1071  00FE9E  00                 	db	0
  1072  00FE9F                     STR_41:
  1073  00FE9F  54                 	db	84	;'T'
  1074  00FEA0  69                 	db	105	;'i'
  1075  00FEA1  6D                 	db	109	;'m'
  1076  00FEA2  65                 	db	101	;'e'
  1077  00FEA3  20                 	db	32
  1078  00FEA4  45                 	db	69	;'E'
  1079  00FEA5  78                 	db	120	;'x'
  1080  00FEA6  63                 	db	99	;'c'
  1081  00FEA7  65                 	db	101	;'e'
  1082  00FEA8  65                 	db	101	;'e'
  1083  00FEA9  64                 	db	100	;'d'
  1084  00FEAA  65                 	db	101	;'e'
  1085  00FEAB  64                 	db	100	;'d'
  1086  00FEAC  00                 	db	0
  1087  00FEAD                     STR_34:
  1088  00FEAD  53                 	db	83	;'S'
  1089  00FEAE  6F                 	db	111	;'o'
  1090  00FEAF  75                 	db	117	;'u'
  1091  00FEB0  72                 	db	114	;'r'
  1092  00FEB1  63                 	db	99	;'c'
  1093  00FEB2  65                 	db	101	;'e'
  1094  00FEB3  20                 	db	32
  1095  00FEB4  51                 	db	81	;'Q'
  1096  00FEB5  75                 	db	117	;'u'
  1097  00FEB6  65                 	db	101	;'e'
  1098  00FEB7  6E                 	db	110	;'n'
  1099  00FEB8  63                 	db	99	;'c'
  1100  00FEB9  68                 	db	104	;'h'
  1101  00FEBA  00                 	db	0
  1102  00FEBB                     STR_70:
  1103  00FEBB  1B                 	db	27
  1104  00FEBC  5B                 	db	91	;'['
  1105  00FEBD  31                 	db	49	;'1'
  1106  00FEBE  30                 	db	48	;'0'
  1107  00FEBF  33                 	db	51	;'3'
  1108  00FEC0  3B                 	db	59	;';'
  1109  00FEC1  33                 	db	51	;'3'
  1110  00FEC2  30                 	db	48	;'0'
  1111  00FEC3  3B                 	db	59	;';'
  1112  00FEC4  31                 	db	49	;'1'
  1113  00FEC5  30                 	db	48	;'0'
  1114  00FEC6  6D                 	db	109	;'m'
  1115  00FEC7  00                 	db	0
  1116  00FEC8                     STR_62:
  1117  00FEC8  4C                 	db	76	;'L'
  1118  00FEC9  69                 	db	105	;'i'
  1119  00FECA  6E                 	db	110	;'n'
  1120  00FECB  6B                 	db	107	;'k'
  1121  00FECC  20                 	db	32
  1122  00FECD  6C                 	db	108	;'l'
  1123  00FECE  6F                 	db	111	;'o'
  1124  00FECF  73                 	db	115	;'s'
  1125  00FED0  74                 	db	116	;'t'
  1126  00FED1  2E                 	db	46
  1127  00FED2  0A                 	db	10
  1128  00FED3  0D                 	db	13
  1129  00FED4  00                 	db	0
  1130  00FED5                     STR_38:
  1131  00FED5  45                 	db	69	;'E'
  1132  00FED6  63                 	db	99	;'c'
  1133  00FED7  68                 	db	104	;'h'
  1134  00FED8  6F                 	db	111	;'o'
  1135  00FED9  20                 	db	32
  1136  00FEDA  52                 	db	82	;'R'
  1137  00FEDB  65                 	db	101	;'e'
  1138  00FEDC  71                 	db	113	;'q'
  1139  00FEDD  75                 	db	117	;'u'
  1140  00FEDE  65                 	db	101	;'e'
  1141  00FEDF  73                 	db	115	;'s'
  1142  00FEE0  74                 	db	116	;'t'
  1143  00FEE1  00                 	db	0
  1144  00FEE2                     STR_65:
  1145  00FEE2  1B                 	db	27
  1146  00FEE3  5B                 	db	91	;'['
  1147  00FEE4  34                 	db	52	;'4'
  1148  00FEE5  31                 	db	49	;'1'
  1149  00FEE6  3B                 	db	59	;';'
  1150  00FEE7  31                 	db	49	;'1'
  1151  00FEE8  30                 	db	48	;'0'
  1152  00FEE9  3B                 	db	59	;';'
  1153  00FEEA  31                 	db	49	;'1'
  1154  00FEEB  30                 	db	48	;'0'
  1155  00FEEC  6D                 	db	109	;'m'
  1156  00FEED  00                 	db	0
  1157  00FEEE                     STR_67:
  1158  00FEEE  1B                 	db	27
  1159  00FEEF  5B                 	db	91	;'['
  1160  00FEF0  34                 	db	52	;'4'
  1161  00FEF1  34                 	db	52	;'4'
  1162  00FEF2  3B                 	db	59	;';'
  1163  00FEF3  31                 	db	49	;'1'
  1164  00FEF4  30                 	db	48	;'0'
  1165  00FEF5  3B                 	db	59	;';'
  1166  00FEF6  31                 	db	49	;'1'
  1167  00FEF7  30                 	db	48	;'0'
  1168  00FEF8  6D                 	db	109	;'m'
  1169  00FEF9  00                 	db	0
  1170  00FEFA                     STR_68:
  1171  00FEFA  1B                 	db	27
  1172  00FEFB  5B                 	db	91	;'['
  1173  00FEFC  34                 	db	52	;'4'
  1174  00FEFD  35                 	db	53	;'5'
  1175  00FEFE  3B                 	db	59	;';'
  1176  00FEFF  31                 	db	49	;'1'
  1177  00FF00  30                 	db	48	;'0'
  1178  00FF01  3B                 	db	59	;';'
  1179  00FF02  31                 	db	49	;'1'
  1180  00FF03  30                 	db	48	;'0'
  1181  00FF04  6D                 	db	109	;'m'
  1182  00FF05  00                 	db	0
  1183  00FF06                     STR_66:
  1184  00FF06  1B                 	db	27
  1185  00FF07  5B                 	db	91	;'['
  1186  00FF08  34                 	db	52	;'4'
  1187  00FF09  32                 	db	50	;'2'
  1188  00FF0A  3B                 	db	59	;';'
  1189  00FF0B  33                 	db	51	;'3'
  1190  00FF0C  30                 	db	48	;'0'
  1191  00FF0D  3B                 	db	59	;';'
  1192  00FF0E  31                 	db	49	;'1'
  1193  00FF0F  30                 	db	48	;'0'
  1194  00FF10  6D                 	db	109	;'m'
  1195  00FF11  00                 	db	0
  1196  00FF12                     STR_69:
  1197  00FF12  1B                 	db	27
  1198  00FF13  5B                 	db	91	;'['
  1199  00FF14  34                 	db	52	;'4'
  1200  00FF15  36                 	db	54	;'6'
  1201  00FF16  3B                 	db	59	;';'
  1202  00FF17  33                 	db	51	;'3'
  1203  00FF18  30                 	db	48	;'0'
  1204  00FF19  3B                 	db	59	;';'
  1205  00FF1A  31                 	db	49	;'1'
  1206  00FF1B  30                 	db	48	;'0'
  1207  00FF1C  6D                 	db	109	;'m'
  1208  00FF1D  00                 	db	0
  1209  00FF1E                     STR_59:
  1210  00FF1E  20                 	db	32
  1211  00FF1F  64                 	db	100	;'d'
  1212  00FF20  65                 	db	101	;'e'
  1213  00FF21  74                 	db	116	;'t'
  1214  00FF22  65                 	db	101	;'e'
  1215  00FF23  63                 	db	99	;'c'
  1216  00FF24  74                 	db	116	;'t'
  1217  00FF25  65                 	db	101	;'e'
  1218  00FF26  64                 	db	100	;'d'
  1219  00FF27  2E                 	db	46
  1220  00FF28  20                 	db	32
  1221  00FF29  00                 	db	0
  1222  00FF2A                     STR_55:
  1223  00FF2A  4D                 	db	77	;'M'
  1224  00FF2B  61                 	db	97	;'a'
  1225  00FF2C  79                 	db	121	;'y'
  1226  00FF2D  20                 	db	32
  1227  00FF2E  32                 	db	50	;'2'
  1228  00FF2F  30                 	db	48	;'0'
  1229  00FF30  20                 	db	32
  1230  00FF31  32                 	db	50	;'2'
  1231  00FF32  30                 	db	48	;'0'
  1232  00FF33  31                 	db	49	;'1'
  1233  00FF34  39                 	db	57	;'9'
  1234  00FF35  00                 	db	0
  1235  00FF36                     STR_3:
  1236  00FF36  5B                 	db	91	;'['
  1237  00FF37  42                 	db	66	;'B'
  1238  00FF38  72                 	db	114	;'r'
  1239  00FF39  6F                 	db	111	;'o'
  1240  00FF3A  61                 	db	97	;'a'
  1241  00FF3B  64                 	db	100	;'d'
  1242  00FF3C  63                 	db	99	;'c'
  1243  00FF3D  61                 	db	97	;'a'
  1244  00FF3E  73                 	db	115	;'s'
  1245  00FF3F  74                 	db	116	;'t'
  1246  00FF40  5D                 	db	93	;']'
  1247  00FF41  00                 	db	0
  1248  00FF42                     STR_71:
  1249  00FF42  1B                 	db	27
  1250  00FF43  5B                 	db	91	;'['
  1251  00FF44  39                 	db	57	;'9'
  1252  00FF45  34                 	db	52	;'4'
  1253  00FF46  3B                 	db	59	;';'
  1254  00FF47  34                 	db	52	;'4'
  1255  00FF48  3B                 	db	59	;';'
  1256  00FF49  31                 	db	49	;'1'
  1257  00FF4A  30                 	db	48	;'0'
  1258  00FF4B  6D                 	db	109	;'m'
  1259  00FF4C  00                 	db	0
  1260  00FF4D                     STR_30:
  1261  00FF4D  45                 	db	69	;'E'
  1262  00FF4E  63                 	db	99	;'c'
  1263  00FF4F  68                 	db	104	;'h'
  1264  00FF50  6F                 	db	111	;'o'
  1265  00FF51  20                 	db	32
  1266  00FF52  52                 	db	82	;'R'
  1267  00FF53  65                 	db	101	;'e'
  1268  00FF54  70                 	db	112	;'p'
  1269  00FF55  6C                 	db	108	;'l'
  1270  00FF56  79                 	db	121	;'y'
  1271  00FF57  00                 	db	0
  1272  00FF58                     STR_43:
  1273  00FF58  54                 	db	84	;'T'
  1274  00FF59  69                 	db	105	;'i'
  1275  00FF5A  6D                 	db	109	;'m'
  1276  00FF5B  65                 	db	101	;'e'
  1277  00FF5C  73                 	db	115	;'s'
  1278  00FF5D  74                 	db	116	;'t'
  1279  00FF5E  61                 	db	97	;'a'
  1280  00FF5F  6D                 	db	109	;'m'
  1281  00FF60  70                 	db	112	;'p'
  1282  00FF61  00                 	db	0
  1283  00FF62                     STR_4:
  1284  00FF62  5B                 	db	91	;'['
  1285  00FF63  55                 	db	85	;'U'
  1286  00FF64  6E                 	db	110	;'n'
  1287  00FF65  69                 	db	105	;'i'
  1288  00FF66  63                 	db	99	;'c'
  1289  00FF67  61                 	db	97	;'a'
  1290  00FF68  73                 	db	115	;'s'
  1291  00FF69  74                 	db	116	;'t'
  1292  00FF6A  5D                 	db	93	;']'
  1293  00FF6B  00                 	db	0
  1294  00FF6C                     STR_57:
  1295  00FF6C  32                 	db	50	;'2'
  1296  00FF6D  30                 	db	48	;'0'
  1297  00FF6E  3A                 	db	58	;':'
  1298  00FF6F  35                 	db	53	;'5'
  1299  00FF70  36                 	db	54	;'6'
  1300  00FF71  3A                 	db	58	;':'
  1301  00FF72  32                 	db	50	;'2'
  1302  00FF73  35                 	db	53	;'5'
  1303  00FF74  00                 	db	0
  1304  00FF75                     STR_127:
  1305  00FF75  20                 	db	32
  1306  00FF76  28                 	db	40
  1307  00FF77  53                 	db	83	;'S'
  1308  00FF78  65                 	db	101	;'e'
  1309  00FF79  71                 	db	113	;'q'
  1310  00FF7A  3D                 	db	61	;'='
  1311  00FF7B  20                 	db	32
  1312  00FF7C  00                 	db	0
  1313  00FF7D                     STR_61:
  1314  00FF7D  5B                 	db	91	;'['
  1315  00FF7E  45                 	db	69	;'E'
  1316  00FF7F  54                 	db	84	;'T'
  1317  00FF80  48                 	db	72	;'H'
  1318  00FF81  5D                 	db	93	;']'
  1319  00FF82  3A                 	db	58	;':'
  1320  00FF83  20                 	db	32
  1321  00FF84  00                 	db	0
  1322  00FF85                     STR_113:
  1323  00FF85  5D                 	db	93	;']'
  1324  00FF86  5B                 	db	91	;'['
  1325  00FF87  53                 	db	83	;'S'
  1326  00FF88  65                 	db	101	;'e'
  1327  00FF89  71                 	db	113	;'q'
  1328  00FF8A  3D                 	db	61	;'='
  1329  00FF8B  00                 	db	0
  1330  00FF8C                     STR_117:
  1331  00FF8C  5B                 	db	91	;'['
  1332  00FF8D  45                 	db	69	;'E'
  1333  00FF8E  43                 	db	67	;'C'
  1334  00FF8F  45                 	db	69	;'E'
  1335  00FF90  5D                 	db	93	;']'
  1336  00FF91  00                 	db	0
  1337  00FF92                     STR_118:
  1338  00FF92  5B                 	db	91	;'['
  1339  00FF93  55                 	db	85	;'U'
  1340  00FF94  52                 	db	82	;'R'
  1341  00FF95  47                 	db	71	;'G'
  1342  00FF96  5D                 	db	93	;']'
  1343  00FF97  00                 	db	0
  1344  00FF98                     STR_120:
  1345  00FF98  5B                 	db	91	;'['
  1346  00FF99  50                 	db	80	;'P'
  1347  00FF9A  53                 	db	83	;'S'
  1348  00FF9B  48                 	db	72	;'H'
  1349  00FF9C  5D                 	db	93	;']'
  1350  00FF9D  00                 	db	0
  1351  00FF9E                     STR_119:
  1352  00FF9E  5B                 	db	91	;'['
  1353  00FF9F  41                 	db	65	;'A'
  1354  00FFA0  43                 	db	67	;'C'
  1355  00FFA1  4B                 	db	75	;'K'
  1356  00FFA2  5D                 	db	93	;']'
  1357  00FFA3  00                 	db	0
  1358  00FFA4                     STR_123:
  1359  00FFA4  5B                 	db	91	;'['
  1360  00FFA5  46                 	db	70	;'F'
  1361  00FFA6  49                 	db	73	;'I'
  1362  00FFA7  4E                 	db	78	;'N'
  1363  00FFA8  5D                 	db	93	;']'
  1364  00FFA9  00                 	db	0
  1365  00FFAA                     STR_122:
  1366  00FFAA  5B                 	db	91	;'['
  1367  00FFAB  53                 	db	83	;'S'
  1368  00FFAC  59                 	db	89	;'Y'
  1369  00FFAD  4E                 	db	78	;'N'
  1370  00FFAE  5D                 	db	93	;']'
  1371  00FFAF  00                 	db	0
  1372  00FFB0                     STR_116:
  1373  00FFB0  5B                 	db	91	;'['
  1374  00FFB1  43                 	db	67	;'C'
  1375  00FFB2  57                 	db	87	;'W'
  1376  00FFB3  52                 	db	82	;'R'
  1377  00FFB4  5D                 	db	93	;']'
  1378  00FFB5  00                 	db	0
  1379  00FFB6                     STR_121:
  1380  00FFB6  5B                 	db	91	;'['
  1381  00FFB7  52                 	db	82	;'R'
  1382  00FFB8  53                 	db	83	;'S'
  1383  00FFB9  54                 	db	84	;'T'
  1384  00FFBA  5D                 	db	93	;']'
  1385  00FFBB  00                 	db	0
  1386  00FFBC                     STR_115:
  1387  00FFBC  5B                 	db	91	;'['
  1388  00FFBD  4E                 	db	78	;'N'
  1389  00FFBE  53                 	db	83	;'S'
  1390  00FFBF  5D                 	db	93	;']'
  1391  00FFC0  00                 	db	0
  1392  00FFC1                     STR_73:
  1393  00FFC1  49                 	db	73	;'I'
  1394  00FFC2  50                 	db	80	;'P'
  1395  00FFC3  76                 	db	118	;'v'
  1396  00FFC4  34                 	db	52	;'4'
  1397  00FFC5  00                 	db	0
  1398  00FFC6  49                 	db	73	;'I'
  1399  00FFC7  43                 	db	67	;'C'
  1400  00FFC8  4D                 	db	77	;'M'
  1401  00FFC9  50                 	db	80	;'P'
  1402  00FFCA  00                 	db	0
  1403  00FFCB                     STR_64:
  1404  00FFCB  1B                 	db	27
  1405  00FFCC  5B                 	db	91	;'['
  1406  00FFCD  30                 	db	48	;'0'
  1407  00FFCE  6D                 	db	109	;'m'
  1408  00FFCF  00                 	db	0
  1409  00FFD0                     STR_20:
  1410  00FFD0  20                 	db	32
  1411  00FFD1  2D                 	db	45
  1412  00FFD2  3E                 	db	62	;'>'
  1413  00FFD3  20                 	db	32
  1414  00FFD4  00                 	db	0
  1415  00FFD5                     STR_14:
  1416  00FFD5  5D                 	db	93	;']'
  1417  00FFD6  5B                 	db	91	;'['
  1418  00FFD7  4C                 	db	76	;'L'
  1419  00FFD8  3D                 	db	61	;'='
  1420  00FFD9  00                 	db	0
  1421  00FFDA                     STR_128:
  1422  00FFDA  29                 	db	41
  1423  00FFDB  0A                 	db	10
  1424  00FFDC  0D                 	db	13
  1425  00FFDD  00                 	db	0
  1426  00FFDE  54                 	db	84	;'T'
  1427  00FFDF  43                 	db	67	;'C'
  1428  00FFE0  50                 	db	80	;'P'
  1429  00FFE1  00                 	db	0
  1430  00FFE2  55                 	db	85	;'U'
  1431  00FFE3  44                 	db	68	;'D'
  1432  00FFE4  50                 	db	80	;'P'
  1433  00FFE5  00                 	db	0
  1434  00FFE6                     STR_74:
  1435  00FFE6  41                 	db	65	;'A'
  1436  00FFE7  52                 	db	82	;'R'
  1437  00FFE8  50                 	db	80	;'P'
  1438  00FFE9  00                 	db	0
  1439  00FFEA                     STR_17:
  1440  00FFEA  07                 	db	7
  1441  00FFEB  0A                 	db	10
  1442  00FFEC  0D                 	db	13
  1443  00FFED  00                 	db	0
  1444  00FFEE                     STR_22:
  1445  00FFEE  29                 	db	41
  1446  00FFEF  20                 	db	32
  1447  00FFF0  00                 	db	0
  1448  00FFF1                     STR_21:
  1449  00FFF1  20                 	db	32
  1450  00FFF2  28                 	db	40
  1451  00FFF3  00                 	db	0
  1452  00FFF4                     STR_15:
  1453  00FFF4  5D                 	db	93	;']'
  1454  00FFF5  20                 	db	32
  1455  00FFF6  00                 	db	0
  1456  00FFF7                     STR_12:
  1457  00FFF7  2D                 	db	45
  1458  00FFF8  3E                 	db	62	;'>'
  1459  00FFF9  00                 	db	0
  1460  00FFFA                     STR_11:
  1461  00FFFA  5D                 	db	93	;']'
  1462  00FFFB  5B                 	db	91	;'['
  1463  00FFFC  00                 	db	0
  1464  00FFFD                     STR_45:
  1465  00FFFD  12                 	db	18
  1466  00FFFE  00                 	db	0
  1467  0000                     
  1468                           ; #config settings
  1469  00FFFF  00                 	db	0	; dummy byte at the end
  1470  0000                     
  1471                           	psect	cinit
  1472  01617A                     __pcinit:
  1473                           	opt stack 0
  1474  01617A                     start_initialization:
  1475                           	opt stack 0
  1476  01617A                     __initialization:
  1477                           	opt stack 0
  1478                           
  1479                           ; Initialize objects allocated to BANK3 (42 bytes)
  1480                           ; load TBLPTR registers with __pidataBANK3
  1481  01617A  0EB0               	movlw	low __pidataBANK3
  1482  01617C  6EF6               	movwf	16374,c
  1483  01617E  0E73               	movlw	high __pidataBANK3
  1484  016180  6EF7               	movwf	16375,c
  1485  016182  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  1486  016184  6EF8               	movwf	16376,c
  1487  016186  EE00  F3CB         	lfsr	0,__pdataBANK3
  1488  01618A  EE10 F02A          	lfsr	1,42
  1489  01618E                     copy_data0:
  1490  01618E  0009               	tblrd		*+
  1491  016190  006F FFD7 FFEE     	movff	16373,16366
  1492  016196  50E5               	movf	16357,w,c
  1493  016198  50E1               	movf	16353,w,c
  1494  01619A  E1F9               	bnz	copy_data0
  1495                           
  1496                           ; Initialize objects allocated to BANK2 (8 bytes)
  1497                           ; load TBLPTR registers with __pidataBANK2
  1498  01619C  0E5C               	movlw	low __pidataBANK2
  1499  01619E  6EF6               	movwf	16374,c
  1500  0161A0  0E77               	movlw	high __pidataBANK2
  1501  0161A2  6EF7               	movwf	16375,c
  1502  0161A4  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1503  0161A6  6EF8               	movwf	16376,c
  1504  0161A8  EE00  F2DC         	lfsr	0,__pdataBANK2
  1505  0161AC  EE10 F008          	lfsr	1,8
  1506  0161B0                     copy_data1:
  1507  0161B0  0009               	tblrd		*+
  1508  0161B2  006F FFD7 FFEE     	movff	16373,16366
  1509  0161B8  50E5               	movf	16357,w,c
  1510  0161BA  50E1               	movf	16353,w,c
  1511  0161BC  E1F9               	bnz	copy_data1
  1512                           
  1513                           ; Clear objects allocated to BANK5 (254 bytes)
  1514  0161BE  EE01  F100         	lfsr	0,__pbssBANK5
  1515  0161C2  0EFE               	movlw	254
  1516  0161C4                     clear_0:
  1517  0161C4  6AEE               	clrf	16366,c
  1518  0161C6  06E8               	decf	16360,f,c
  1519  0161C8  E1FD               	bnz	clear_0
  1520                           
  1521                           ; Clear objects allocated to BANK4 (236 bytes)
  1522  0161CA  EE01  F000         	lfsr	0,__pbssBANK4
  1523  0161CE  0EEC               	movlw	236
  1524  0161D0                     clear_1:
  1525  0161D0  6AEE               	clrf	16366,c
  1526  0161D2  06E8               	decf	16360,f,c
  1527  0161D4  E1FD               	bnz	clear_1
  1528                           
  1529                           ; Clear objects allocated to BANK3 (203 bytes)
  1530  0161D6  EE00  F300         	lfsr	0,__pbssBANK3
  1531  0161DA  0ECB               	movlw	203
  1532  0161DC                     clear_2:
  1533  0161DC  6AEE               	clrf	16366,c
  1534  0161DE  06E8               	decf	16360,f,c
  1535  0161E0  E1FD               	bnz	clear_2
  1536                           
  1537                           ; Clear objects allocated to BANK2 (61 bytes)
  1538  0161E2  EE00  F29F         	lfsr	0,__pbssBANK2
  1539  0161E6  0E3D               	movlw	61
  1540  0161E8                     clear_3:
  1541  0161E8  6AEE               	clrf	16366,c
  1542  0161EA  06E8               	decf	16360,f,c
  1543  0161EC  E1FD               	bnz	clear_3
  1544                           
  1545                           ; Clear objects allocated to BANK1 (5 bytes)
  1546  0161EE  0101               	movlb	1
  1547  0161F0  6BFF               	clrf	(__pbssBANK1+4)& (0+255),b
  1548  0161F2  6BFE               	clrf	(__pbssBANK1+3)& (0+255),b
  1549  0161F4  6BFD               	clrf	(__pbssBANK1+2)& (0+255),b
  1550  0161F6  6BFC               	clrf	(__pbssBANK1+1)& (0+255),b
  1551  0161F8  6BFB               	clrf	__pbssBANK1& (0+255),b
  1552                           
  1553                           ; Clear objects allocated to COMRAM (20 bytes)
  1554  0161FA  EE00  F037         	lfsr	0,__pbssCOMRAM
  1555  0161FE  0E14               	movlw	20
  1556  016200                     clear_4:
  1557  016200  6AEE               	clrf	16366,c
  1558  016202  06E8               	decf	16360,f,c
  1559  016204  E1FD               	bnz	clear_4
  1560                           
  1561                           ;
  1562                           ; Setup IVTBASE
  1563                           ;
  1564  016206  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1565  016208  6ED5               	movwf	213,c
  1566  01620A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1567  01620C  6ED6               	movwf	214,c
  1568  01620E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1569  016210  6ED7               	movwf	215,c
  1570  016212                     end_of_initialization:
  1571                           	opt stack 0
  1572  016212                     __end_of__initialization:
  1573                           	opt stack 0
  1574  016212  0100               	movlb	0
  1575  016214  EF2E  F08D         	goto	_main	;jump to C main() function
  1576                           
  1577                           	psect	bssCOMRAM
  1578  000037                     __pbssCOMRAM:
  1579                           	opt stack 0
  1580  000037                     _arpStatus:
  1581                           	opt stack 0
  1582  000037                     	ds	2
  1583  000039                     ethernetController_streamToTransmitBuffer@pointer:
  1584                           	opt stack 0
  1585  000039                     	ds	2
  1586  00003B                     _nextPacketPointer:
  1587                           	opt stack 0
  1588  00003B                     	ds	2
  1589  00003D                     udp_sendPacket@start:
  1590                           	opt stack 0
  1591  00003D                     	ds	1
  1592  00003E                     ipv4_sendFrame@failedResolveCounter:
  1593                           	opt stack 0
  1594  00003E                     	ds	1
  1595  00003F                     _fSrcAddrChanged:
  1596                           	opt stack 0
  1597  00003F                     	ds	1
  1598  000040                     arp_background@state:
  1599                           	opt stack 0
  1600  000040                     	ds	1
  1601  000041                     	ds	1
  1602  000042                     arp_gratuitous@state:
  1603                           	opt stack 0
  1604  000042                     	ds	1
  1605  000043                     arp_probe@state:
  1606                           	opt stack 0
  1607  000043                     	ds	1
  1608  000044                     sevenSegmentUpdate@digitPointer:
  1609                           	opt stack 0
  1610  000044                     	ds	1
  1611  000045                     buttonHandler@newState:
  1612                           	opt stack 0
  1613  000045                     	ds	1
  1614  000046                     buttonHandler@oldState:
  1615                           	opt stack 0
  1616  000046                     	ds	1
  1617  000047                     	ds	1
  1618  000048                     arp_background@err:
  1619                           	opt stack 0
  1620  000048                     	ds	3
  1621                           
  1622                           	psect	bssBANK1
  1623  0001FB                     __pbssBANK1:
  1624                           	opt stack 0
  1625  0001FB                     arp_gratuitous@announceCounter:
  1626                           	opt stack 0
  1627  0001FB                     	ds	1
  1628  0001FC                     arp_probe@probeCounter:
  1629                           	opt stack 0
  1630  0001FC                     	ds	1
  1631  0001FD                     handleStackBackgroundTasks@numberOfPacketsSent:
  1632                           	opt stack 0
  1633  0001FD                     	ds	1
  1634  0001FE                     handleStackBackgroundTasks@remainingLength:
  1635                           	opt stack 0
  1636  0001FE                     	ds	1
  1637  0001FF                     handleStackBackgroundTasks@state:
  1638                           	opt stack 0
  1639  0001FF                     	ds	1
  1640                           
  1641                           	psect	bssBANK2
  1642  00029F                     __pbssBANK2:
  1643                           	opt stack 0
  1644  00029F                     _time:
  1645                           	opt stack 0
  1646  00029F                     	ds	4
  1647  0002A3                     ipv4_sendFrame@oldTime:
  1648                           	opt stack 0
  1649  0002A3                     	ds	4
  1650  0002A7                     arp_background@ipPreliminary:
  1651                           	opt stack 0
  1652  0002A7                     	ds	4
  1653  0002AB                     arp_gratuitous@timeStart:
  1654                           	opt stack 0
  1655  0002AB                     	ds	4
  1656  0002AF                     buttonHandler@debounceCounter:
  1657                           	opt stack 0
  1658  0002AF                     	ds	4
  1659  0002B3                     _numberToDisplay:
  1660                           	opt stack 0
  1661  0002B3                     	ds	4
  1662  0002B7                     ethernet_rxGetNewFrame@counter:
  1663                           	opt stack 0
  1664  0002B7                     	ds	4
  1665  0002BB                     sevenSegmentUpdate@digitsToDisplay:
  1666                           	opt stack 0
  1667  0002BB                     	ds	3
  1668  0002BE                     _sequence:
  1669                           	opt stack 0
  1670  0002BE                     	ds	2
  1671  0002C0                     handleStackBackgroundTasks@lastEndAddress:
  1672                           	opt stack 0
  1673  0002C0                     	ds	2
  1674  0002C2                     ethernetController_softReset@F18968:
  1675                           	opt stack 0
  1676  0002C2                     	ds	2
  1677  0002C4                     _foo:
  1678                           	opt stack 0
  1679  0002C4                     	ds	1
  1680  0002C5                     _unlocked:
  1681                           	opt stack 0
  1682  0002C5                     	ds	1
  1683  0002C6                     ethernetController_getRSV@temp:
  1684                           	opt stack 0
  1685  0002C6                     	ds	6
  1686  0002CC                     _ipPreliminarySource:
  1687                           	opt stack 0
  1688  0002CC                     	ds	4
  1689  0002D0                     ipAdressToString@number:
  1690                           	opt stack 0
  1691  0002D0                     	ds	4
  1692  0002D4                     _ipSource:
  1693                           	opt stack 0
  1694  0002D4                     	ds	4
  1695  0002D8                     macToString@number:
  1696                           	opt stack 0
  1697  0002D8                     	ds	3
  1698  0002DB                     _buttonState:
  1699                           	opt stack 0
  1700  0002DB                     	ds	1
  1701                           
  1702                           	psect	dataBANK2
  1703  0002DC                     __pdataBANK2:
  1704                           	opt stack 0
  1705  0002DC                     _randx:
  1706                           	opt stack 0
  1707  0002DC                     	ds	4
  1708  0002E0                     _id:
  1709                           	opt stack 0
  1710  0002E0                     	ds	2
  1711  0002E2                     ethernetController_softReset@F18966:
  1712                           	opt stack 0
  1713  0002E2                     	ds	2
  1714                           
  1715                           	psect	bssBANK3
  1716  000300                     __pbssBANK3:
  1717                           	opt stack 0
  1718  000300                     _occupiedMemory:
  1719                           	opt stack 0
  1720  000300                     	ds	72
  1721  000348                     handleStackBackgroundTasks@currentPacket:
  1722                           	opt stack 0
  1723  000348                     	ds	66
  1724  00038A                     printEthernetState@oldState:
  1725                           	opt stack 0
  1726  00038A                     	ds	15
  1727  000399                     ipAdressToString@address:
  1728                           	opt stack 0
  1729  000399                     	ds	20
  1730  0003AD                     macToString@address:
  1731                           	opt stack 0
  1732  0003AD                     	ds	20
  1733  0003C1                     intToString@number:
  1734                           	opt stack 0
  1735  0003C1                     	ds	10
  1736                           
  1737                           	psect	dataBANK3
  1738  0003CB                     __pdataBANK3:
  1739                           	opt stack 0
  1740  0003CB                     _icmpTxtMessages:
  1741                           	opt stack 0
  1742  0003CB                     	ds	30
  1743  0003E9                     _sevenSegCharacters:
  1744                           	opt stack 0
  1745  0003E9                     	ds	12
  1746                           
  1747                           	psect	bssBANK4
  1748  000400                     __pbssBANK4:
  1749                           	opt stack 0
  1750  000400                     _stack:
  1751                           	opt stack 0
  1752  000400                     	ds	124
  1753  00047C                     _arp_table:
  1754                           	opt stack 0
  1755  00047C                     	ds	112
  1756                           
  1757                           	psect	bssBANK5
  1758  000500                     __pbssBANK5:
  1759                           	opt stack 0
  1760  000500                     _tcpListeners:
  1761                           	opt stack 0
  1762  000500                     	ds	204
  1763  0005CC                     arpEntryToString@string:
  1764                           	opt stack 0
  1765  0005CC                     	ds	50
  1766                           
  1767                           	psect	cstackBANK6
  1768  000600                     __pcstackBANK6:
  1769                           	opt stack 0
  1770  000600                     main@prescaler:
  1771                           	opt stack 0
  1772                           
  1773                           ; 4 bytes @ 0x0
  1774  000600                     	ds	4
  1775  000604                     _main$2547:
  1776                           	opt stack 0
  1777                           
  1778                           ; 2 bytes @ 0x4
  1779  000604                     	ds	2
  1780  000606                     main@err:
  1781                           	opt stack 0
  1782                           
  1783                           ; 3 bytes @ 0x6
  1784  000606                     	ds	3
  1785  000609                     main@udp:
  1786                           	opt stack 0
  1787                           
  1788                           ; 8 bytes @ 0x9
  1789  000609                     	ds	8
  1790  000611                     main@ipDst:
  1791                           	opt stack 0
  1792                           
  1793                           ; 4 bytes @ 0x11
  1794  000611                     	ds	4
  1795  000615                     main@connection:
  1796                           	opt stack 0
  1797                           
  1798                           ; 17 bytes @ 0x15
  1799  000615                     	ds	17
  1800                           
  1801                           	psect	cstackBANK2
  1802  000200                     __pcstackBANK2:
  1803                           	opt stack 0
  1804  000200                     icmp_handleNewPacket@foo:
  1805                           	opt stack 0
  1806                           
  1807                           ; 128 bytes @ 0x0
  1808  000200                     	ds	128
  1809  000280                     icmp_handleNewPacket@err:
  1810                           	opt stack 0
  1811                           
  1812                           ; 3 bytes @ 0x80
  1813  000280                     	ds	3
  1814  000283                     icmp_handleNewPacket@i:
  1815                           	opt stack 0
  1816                           
  1817                           ; 2 bytes @ 0x83
  1818  000283                     	ds	2
  1819  000285                     icmp_handleNewPacket@icmpHeader:
  1820                           	opt stack 0
  1821                           
  1822                           ; 8 bytes @ 0x85
  1823  000285                     	ds	8
  1824  00028D                     ??_ethernet_rxGetNewFrame:
  1825                           
  1826                           ; 1 bytes @ 0x8D
  1827  00028D                     	ds	8
  1828  000295                     handleStackBackgroundTasks@errArp:
  1829                           	opt stack 0
  1830                           
  1831                           ; 3 bytes @ 0x95
  1832  000295                     	ds	3
  1833  000298                     handleStackBackgroundTasks@intf:
  1834                           	opt stack 0
  1835                           
  1836                           ; 2 bytes @ 0x98
  1837  000298                     	ds	2
  1838  00029A                     handleStackBackgroundTasks@errIPv4:
  1839                           	opt stack 0
  1840                           
  1841                           ; 3 bytes @ 0x9A
  1842  00029A                     	ds	3
  1843  00029D                     ??_main:
  1844                           
  1845                           ; 1 bytes @ 0x9D
  1846  00029D                     	ds	2
  1847                           
  1848                           	psect	cstackBANK1
  1849  000100                     __pcstackBANK1:
  1850                           	opt stack 0
  1851  000100                     arp_sendRequest@senderMAC:
  1852                           	opt stack 0
  1853  000100                     arp_sendReply@senderMAC:
  1854                           	opt stack 0
  1855  000100                     tcp_sendSYNACK@ipHeaderBuf:
  1856                           	opt stack 0
  1857  000100                     icmp_sendEchoReply@icmpMessage:
  1858                           	opt stack 0
  1859  000100                     udp_sendPacket@headerBuf:
  1860                           	opt stack 0
  1861                           
  1862                           ; 64 bytes @ 0x0
  1863  000100                     	ds	6
  1864  000106                     arp_sendRequest@targetMAC:
  1865                           	opt stack 0
  1866  000106                     arp_sendReply@targetMAC:
  1867                           	opt stack 0
  1868                           
  1869                           ; 6 bytes @ 0x6
  1870  000106                     	ds	6
  1871  00010C                     arp_sendReply@senderIP:
  1872                           	opt stack 0
  1873  00010C                     arp_sendRequest@request:
  1874                           	opt stack 0
  1875                           
  1876                           ; 32 bytes @ 0xC
  1877  00010C                     	ds	4
  1878  000110                     arp_sendReply@targetIP:
  1879                           	opt stack 0
  1880                           
  1881                           ; 4 bytes @ 0x10
  1882  000110                     	ds	4
  1883  000114                     arp_sendReply@myIP:
  1884                           	opt stack 0
  1885                           
  1886                           ; 4 bytes @ 0x14
  1887  000114                     	ds	4
  1888  000118                     arp_sendReply@reply:
  1889                           	opt stack 0
  1890                           
  1891                           ; 32 bytes @ 0x18
  1892  000118                     	ds	8
  1893  000120                     tcp_sendSYNACK@headerBuf:
  1894                           	opt stack 0
  1895                           
  1896                           ; 64 bytes @ 0x20
  1897  000120                     	ds	12
  1898  00012C                     ?_ipv4_sendFrame:
  1899                           	opt stack 0
  1900  00012C                     arp_probe@index:
  1901                           	opt stack 0
  1902  00012C                     ipv4_sendFrame@ipPacket:
  1903                           	opt stack 0
  1904                           
  1905                           ; 66 bytes @ 0x2C
  1906  00012C                     	ds	1
  1907  00012D                     arp_probe@ipSender:
  1908                           	opt stack 0
  1909                           
  1910                           ; 4 bytes @ 0x2D
  1911  00012D                     	ds	4
  1912  000131                     arp_probe@timeStart:
  1913                           	opt stack 0
  1914                           
  1915                           ; 4 bytes @ 0x31
  1916  000131                     	ds	4
  1917  000135                     arp_probe@waitingTime:
  1918                           	opt stack 0
  1919                           
  1920                           ; 4 bytes @ 0x35
  1921  000135                     	ds	3
  1922  000138                     arp_handleNewPacket@frame:
  1923                           	opt stack 0
  1924                           
  1925                           ; 2 bytes @ 0x38
  1926  000138                     	ds	1
  1927  000139                     arp_probe@err:
  1928                           	opt stack 0
  1929                           
  1930                           ; 3 bytes @ 0x39
  1931  000139                     	ds	1
  1932  00013A                     
  1933                           ; 1 bytes @ 0x3A
  1934  00013A                     	ds	2
  1935  00013C                     ?_arp_background:
  1936                           	opt stack 0
  1937  00013C                     arp_handleNewPacket@arp:
  1938                           	opt stack 0
  1939                           
  1940                           ; 32 bytes @ 0x3C
  1941  00013C                     	ds	3
  1942  00013F                     arp_background@link:
  1943                           	opt stack 0
  1944                           
  1945                           ; 1 bytes @ 0x3F
  1946  00013F                     	ds	1
  1947  000140                     arp_background@errAnnounce:
  1948                           	opt stack 0
  1949  000140                     icmp_sendEchoReply@headerBuf:
  1950                           	opt stack 0
  1951  000140                     udp_sendPacket@ipHeaderBuf:
  1952                           	opt stack 0
  1953                           
  1954                           ; 32 bytes @ 0x40
  1955  000140                     	ds	3
  1956  000143                     arp_background@errProbe:
  1957                           	opt stack 0
  1958                           
  1959                           ; 3 bytes @ 0x43
  1960  000143                     	ds	29
  1961  000160                     icmp_sendEchoReply@checksum:
  1962                           	opt stack 0
  1963  000160                     _tcp_sendSYNACK$4842:
  1964                           	opt stack 0
  1965  000160                     udp_sendPacket@foo:
  1966                           	opt stack 0
  1967                           
  1968                           ; 2 bytes @ 0x60
  1969  000160                     	ds	2
  1970  000162                     icmp_sendEchoReply@i:
  1971                           	opt stack 0
  1972  000162                     _tcp_sendSYNACK$4843:
  1973                           	opt stack 0
  1974  000162                     udp_sendPacket@i:
  1975                           	opt stack 0
  1976                           
  1977                           ; 2 bytes @ 0x62
  1978  000162                     	ds	1
  1979  000163                     icmp_sendEchoReply@i_4270:
  1980                           	opt stack 0
  1981                           
  1982                           ; 2 bytes @ 0x63
  1983  000163                     	ds	1
  1984  000164                     _tcp_sendSYNACK$4844:
  1985                           	opt stack 0
  1986  000164                     udp_sendPacket@ipPacket:
  1987                           	opt stack 0
  1988                           
  1989                           ; 66 bytes @ 0x64
  1990  000164                     	ds	1
  1991  000165                     icmp_sendEchoReply@icmpHeader:
  1992                           	opt stack 0
  1993                           
  1994                           ; 8 bytes @ 0x65
  1995  000165                     	ds	1
  1996  000166                     _tcp_sendSYNACK$4845:
  1997                           	opt stack 0
  1998                           
  1999                           ; 2 bytes @ 0x66
  2000  000166                     	ds	2
  2001  000168                     _tcp_sendSYNACK$4846:
  2002                           	opt stack 0
  2003                           
  2004                           ; 2 bytes @ 0x68
  2005  000168                     	ds	2
  2006  00016A                     _tcp_sendSYNACK$4847:
  2007                           	opt stack 0
  2008                           
  2009                           ; 2 bytes @ 0x6A
  2010  00016A                     	ds	2
  2011  00016C                     _tcp_sendSYNACK$4848:
  2012                           	opt stack 0
  2013                           
  2014                           ; 2 bytes @ 0x6C
  2015  00016C                     	ds	1
  2016  00016D                     icmp_sendEchoReply@ipReply:
  2017                           	opt stack 0
  2018                           
  2019                           ; 66 bytes @ 0x6D
  2020  00016D                     	ds	1
  2021  00016E                     tcp_sendSYNACK@i:
  2022                           	opt stack 0
  2023                           
  2024                           ; 2 bytes @ 0x6E
  2025  00016E                     	ds	2
  2026  000170                     tcp_sendSYNACK@ipPacket:
  2027                           	opt stack 0
  2028                           
  2029                           ; 66 bytes @ 0x70
  2030  000170                     	ds	66
  2031  0001B2                     tcp_sendSYNACK@tcpHeader:
  2032                           	opt stack 0
  2033                           
  2034                           ; 21 bytes @ 0xB2
  2035  0001B2                     	ds	21
  2036  0001C7                     _ipv4_handleNewPacket$3905:
  2037                           	opt stack 0
  2038                           
  2039                           ; 2 bytes @ 0xC7
  2040  0001C7                     	ds	2
  2041  0001C9                     ipv4_handleNewPacket@header:
  2042                           	opt stack 0
  2043                           
  2044                           ; 23 bytes @ 0xC9
  2045  0001C9                     	ds	23
  2046  0001E0                     ipv4_handleNewPacket@payloadField:
  2047                           	opt stack 0
  2048                           
  2049                           ; 9 bytes @ 0xE0
  2050  0001E0                     	ds	9
  2051  0001E9                     ipv4_handleNewPacket@headerField:
  2052                           	opt stack 0
  2053                           
  2054                           ; 9 bytes @ 0xE9
  2055  0001E9                     	ds	9
  2056  0001F2                     ethernet_rxGetNewFrame@frame:
  2057                           	opt stack 0
  2058                           
  2059                           ; 2 bytes @ 0xF2
  2060  0001F2                     	ds	2
  2061  0001F4                     ethernet_rxGetNewFrame@err:
  2062                           	opt stack 0
  2063                           
  2064                           ; 3 bytes @ 0xF4
  2065  0001F4                     	ds	3
  2066  0001F7                     handleStackBackgroundTasks@stack:
  2067                           	opt stack 0
  2068                           
  2069                           ; 2 bytes @ 0xF7
  2070  0001F7                     	ds	2
  2071  0001F9                     ??_handleStackBackgroundTasks:
  2072                           
  2073                           ; 1 bytes @ 0xF9
  2074  0001F9                     	ds	2
  2075                           
  2076                           	psect	cstackBANK0
  2077  000060                     __pcstackBANK0:
  2078                           	opt stack 0
  2079  000060                     ??_icmp_parseHeader:
  2080  000060                     ??_tcp_parseHeader:
  2081  000060                     ?_ipv4_parseHeader:
  2082                           	opt stack 0
  2083  000060                     ?_arp_parseFromRXBuffer:
  2084                           	opt stack 0
  2085  000060                     tcp_calculateHeaderChecksum@carry:
  2086                           	opt stack 0
  2087  000060                     ethernetController_pollInterruptFlags@flags:
  2088                           	opt stack 0
  2089  000060                     ethernetController_updateLinkStatus@state:
  2090                           	opt stack 0
  2091  000060                     arp_parseFromRXBuffer@frame:
  2092                           	opt stack 0
  2093  000060                     ipv4_parseHeader@field:
  2094                           	opt stack 0
  2095  000060                     itoa@buf:
  2096                           	opt stack 0
  2097  000060                     ltoa@buf:
  2098                           	opt stack 0
  2099  000060                     ethernetController_writeDestinationMACAddress@data:
  2100                           	opt stack 0
  2101  000060                     checkForOverlap@a:
  2102                           	opt stack 0
  2103  000060                     ipv4_checkHeaderChecksum@testHeader:
  2104                           	opt stack 0
  2105  000060                     ipv4_streamToTransmissionBuffer@packet:
  2106                           	opt stack 0
  2107                           
  2108                           ; 66 bytes @ 0x0
  2109  000060                     	ds	1
  2110  000061                     _tcp_calculateHeaderChecksum$4887:
  2111                           	opt stack 0
  2112                           
  2113                           ; 2 bytes @ 0x1
  2114  000061                     	ds	1
  2115  000062                     ethernetController_updateLinkStatus@temp:
  2116                           	opt stack 0
  2117  000062                     ethernetController_pollInterruptFlags@reg:
  2118                           	opt stack 0
  2119  000062                     itoa@val:
  2120                           	opt stack 0
  2121  000062                     ltoa@val:
  2122                           	opt stack 0
  2123                           
  2124                           ; 4 bytes @ 0x2
  2125  000062                     	ds	1
  2126  000063                     ethernetController_updateLinkStatus@temp16:
  2127                           	opt stack 0
  2128  000063                     _tcp_calculateHeaderChecksum$4888:
  2129                           	opt stack 0
  2130                           
  2131                           ; 2 bytes @ 0x3
  2132  000063                     	ds	1
  2133  000064                     itoa@base:
  2134                           	opt stack 0
  2135                           
  2136                           ; 2 bytes @ 0x4
  2137  000064                     	ds	1
  2138  000065                     _tcp_calculateHeaderChecksum$4889:
  2139                           	opt stack 0
  2140                           
  2141                           ; 2 bytes @ 0x5
  2142  000065                     	ds	1
  2143  000066                     ?_macToString:
  2144                           	opt stack 0
  2145  000066                     ?_ipAdressToString:
  2146                           	opt stack 0
  2147  000066                     ethernetController_writeDestinationMACAddress@opcode:
  2148                           	opt stack 0
  2149  000066                     ltoa@base:
  2150                           	opt stack 0
  2151  000066                     ipAdressToString@ip:
  2152                           	opt stack 0
  2153  000066                     macToString@addr:
  2154                           	opt stack 0
  2155                           
  2156                           ; 6 bytes @ 0x6
  2157  000066                     	ds	1
  2158  000067                     ethernetController_writeDestinationMACAddress@i_539:
  2159                           	opt stack 0
  2160  000067                     _tcp_calculateHeaderChecksum$4890:
  2161                           	opt stack 0
  2162                           
  2163                           ; 2 bytes @ 0x7
  2164  000067                     	ds	1
  2165  000068                     ethernetController_writeDestinationMACAddress@i:
  2166                           	opt stack 0
  2167                           
  2168                           ; 1 bytes @ 0x8
  2169  000068                     	ds	1
  2170  000069                     _tcp_calculateHeaderChecksum$4891:
  2171                           	opt stack 0
  2172  000069                     checkForOverlap@b:
  2173                           	opt stack 0
  2174                           
  2175                           ; 9 bytes @ 0x9
  2176  000069                     	ds	1
  2177  00006A                     ipAdressToString@j:
  2178                           	opt stack 0
  2179                           
  2180                           ; 1 bytes @ 0xA
  2181  00006A                     	ds	1
  2182  00006B                     ipAdressToString@pointer:
  2183                           	opt stack 0
  2184  00006B                     _tcp_calculateHeaderChecksum$4892:
  2185                           	opt stack 0
  2186                           
  2187                           ; 2 bytes @ 0xB
  2188  00006B                     	ds	1
  2189  00006C                     ipAdressToString@i:
  2190                           	opt stack 0
  2191                           
  2192                           ; 1 bytes @ 0xC
  2193  00006C                     	ds	1
  2194  00006D                     UARTTransmitText@str:
  2195                           	opt stack 0
  2196  00006D                     _tcp_calculateHeaderChecksum$4893:
  2197                           	opt stack 0
  2198                           
  2199                           ; 2 bytes @ 0xD
  2200  00006D                     	ds	2
  2201  00006F                     UART_setFormat@color:
  2202                           	opt stack 0
  2203  00006F                     tcp_listen@connection:
  2204                           	opt stack 0
  2205  00006F                     _tcp_calculateHeaderChecksum$4894:
  2206                           	opt stack 0
  2207  00006F                     printEthernetState@state:
  2208                           	opt stack 0
  2209                           
  2210                           ; 15 bytes @ 0xF
  2211  00006F                     	ds	2
  2212  000071                     ??_tcp_listen:
  2213  000071                     tcp_calculateHeaderChecksum@sum:
  2214                           	opt stack 0
  2215                           
  2216                           ; 4 bytes @ 0x11
  2217  000071                     	ds	1
  2218  000072                     ??_memory_txFrameRequest:
  2219                           
  2220                           ; 1 bytes @ 0x12
  2221  000072                     	ds	5
  2222  000077                     ipv4_parseHeader@i:
  2223                           	opt stack 0
  2224                           
  2225                           ; 1 bytes @ 0x17
  2226  000077                     	ds	1
  2227  000078                     ipv4_parseHeader@i_3800:
  2228                           	opt stack 0
  2229  000078                     _memory_txFrameRequest$1083:
  2230                           	opt stack 0
  2231                           
  2232                           ; 2 bytes @ 0x18
  2233  000078                     	ds	1
  2234  000079                     ipv4_parseHeader@temp:
  2235                           	opt stack 0
  2236                           
  2237                           ; 1 bytes @ 0x19
  2238  000079                     	ds	1
  2239  00007A                     memory_txFrameRequest@fNoOverlapMarker:
  2240                           	opt stack 0
  2241  00007A                     ipv4_parseHeader@ip:
  2242                           	opt stack 0
  2243                           
  2244                           ; 23 bytes @ 0x1A
  2245  00007A                     	ds	1
  2246  00007B                     memory_txFrameRequest@i:
  2247                           	opt stack 0
  2248                           
  2249                           ; 1 bytes @ 0x1B
  2250  00007B                     	ds	1
  2251  00007C                     memory_txFrameRequest@i_1087:
  2252                           	opt stack 0
  2253                           
  2254                           ; 1 bytes @ 0x1C
  2255  00007C                     	ds	1
  2256  00007D                     memory_txFrameRequest@field:
  2257                           	opt stack 0
  2258                           
  2259                           ; 9 bytes @ 0x1D
  2260  00007D                     	ds	3
  2261  000080                     arp_parseFromRXBuffer@i:
  2262                           	opt stack 0
  2263                           
  2264                           ; 1 bytes @ 0x20
  2265  000080                     	ds	1
  2266  000081                     arp_parseFromRXBuffer@i_3165:
  2267                           	opt stack 0
  2268                           
  2269                           ; 1 bytes @ 0x21
  2270  000081                     	ds	1
  2271  000082                     arp_parseFromRXBuffer@i_3166:
  2272                           	opt stack 0
  2273                           
  2274                           ; 1 bytes @ 0x22
  2275  000082                     	ds	1
  2276  000083                     arp_parseFromRXBuffer@i_3167:
  2277                           	opt stack 0
  2278                           
  2279                           ; 1 bytes @ 0x23
  2280  000083                     	ds	1
  2281  000084                     arp_parseFromRXBuffer@offset:
  2282                           	opt stack 0
  2283                           
  2284                           ; 2 bytes @ 0x24
  2285  000084                     	ds	2
  2286  000086                     memory_txFrameRequest@freeIndex:
  2287                           	opt stack 0
  2288  000086                     arp_parseFromRXBuffer@arp:
  2289                           	opt stack 0
  2290                           
  2291                           ; 32 bytes @ 0x26
  2292  000086                     	ds	1
  2293  000087                     ethernet_txFrameRequest@err:
  2294                           	opt stack 0
  2295                           
  2296                           ; 3 bytes @ 0x27
  2297  000087                     	ds	3
  2298  00008A                     ipv4_txFrameRequest@packet:
  2299                           	opt stack 0
  2300  00008A                     arp_send@arp:
  2301                           	opt stack 0
  2302                           
  2303                           ; 32 bytes @ 0x2A
  2304  00008A                     	ds	2
  2305  00008C                     ??_ipv4_txFrameRequest:
  2306                           
  2307                           ; 1 bytes @ 0x2C
  2308  00008C                     	ds	22
  2309  0000A2                     tcp_sendSYNACK@connection:
  2310                           	opt stack 0
  2311  0000A2                     udp_sendPacket@header:
  2312                           	opt stack 0
  2313  0000A2                     icmp_sendEchoReply@ipHeader:
  2314                           	opt stack 0
  2315                           
  2316                           ; 23 bytes @ 0x42
  2317  0000A2                     	ds	2
  2318  0000A4                     tcp_sendSYNACK@seq:
  2319                           	opt stack 0
  2320                           
  2321                           ; 4 bytes @ 0x44
  2322  0000A4                     	ds	4
  2323  0000A8                     ??_tcp_sendSYNACK:
  2324                           
  2325                           ; 1 bytes @ 0x48
  2326  0000A8                     	ds	2
  2327  0000AA                     udp_sendPacket@dst:
  2328                           	opt stack 0
  2329  0000AA                     arp_send@destination:
  2330                           	opt stack 0
  2331                           
  2332                           ; 6 bytes @ 0x4A
  2333  0000AA                     	ds	2
  2334  0000AC                     tcp_stateMachine@connection:
  2335                           	opt stack 0
  2336                           
  2337                           ; 2 bytes @ 0x4C
  2338  0000AC                     	ds	2
  2339  0000AE                     ??_udp_sendPacket:
  2340  0000AE                     tcp_stateMachine@newHeader:
  2341                           	opt stack 0
  2342                           
  2343                           ; 2 bytes @ 0x4E
  2344  0000AE                     	ds	2
  2345  0000B0                     arp_send@i:
  2346                           	opt stack 0
  2347  0000B0                     tcp_handleNewPacket@ipHeader:
  2348                           	opt stack 0
  2349                           
  2350                           ; 23 bytes @ 0x50
  2351  0000B0                     	ds	1
  2352  0000B1                     arp_send@i_3240:
  2353                           	opt stack 0
  2354                           
  2355                           ; 1 bytes @ 0x51
  2356  0000B1                     	ds	1
  2357  0000B2                     arp_send@i_3241:
  2358                           	opt stack 0
  2359                           
  2360                           ; 1 bytes @ 0x52
  2361  0000B2                     	ds	1
  2362  0000B3                     arp_send@i_3242:
  2363                           	opt stack 0
  2364                           
  2365                           ; 1 bytes @ 0x53
  2366  0000B3                     	ds	1
  2367  0000B4                     arp_send@ethFrame:
  2368                           	opt stack 0
  2369                           
  2370                           ; 34 bytes @ 0x54
  2371  0000B4                     	ds	5
  2372  0000B9                     icmp_sendEchoReply@icmpRequestHeader:
  2373                           	opt stack 0
  2374                           
  2375                           ; 8 bytes @ 0x59
  2376  0000B9                     	ds	8
  2377  0000C1                     icmp_sendEchoReply@ipPayload:
  2378                           	opt stack 0
  2379                           
  2380                           ; 9 bytes @ 0x61
  2381  0000C1                     	ds	6
  2382  0000C7                     tcp_handleNewPacket@ipPayload:
  2383                           	opt stack 0
  2384                           
  2385                           ; 9 bytes @ 0x67
  2386  0000C7                     	ds	3
  2387  0000CA                     ??_icmp_sendEchoReply:
  2388                           
  2389                           ; 1 bytes @ 0x6A
  2390  0000CA                     	ds	4
  2391  0000CE                     icmp_handleNewPacket@ipHeader:
  2392                           	opt stack 0
  2393                           
  2394                           ; 23 bytes @ 0x6E
  2395  0000CE                     	ds	2
  2396  0000D0                     
  2397                           ; 1 bytes @ 0x70
  2398  0000D0                     	ds	2
  2399  0000D2                     tcp_handleNewPacket@i:
  2400                           	opt stack 0
  2401                           
  2402                           ; 1 bytes @ 0x72
  2403  0000D2                     	ds	1
  2404  0000D3                     tcp_handleNewPacket@tcpHeader:
  2405                           	opt stack 0
  2406                           
  2407                           ; 21 bytes @ 0x73
  2408  0000D3                     	ds	3
  2409  0000D6                     arp_send@field:
  2410                           	opt stack 0
  2411                           
  2412                           ; 9 bytes @ 0x76
  2413  0000D6                     	ds	9
  2414  0000DF                     arp_sendRequest@ipSender:
  2415                           	opt stack 0
  2416  0000DF                     arp_sendReply@request:
  2417                           	opt stack 0
  2418                           
  2419                           ; 32 bytes @ 0x7F
  2420  0000DF                     	ds	4
  2421  0000E3                     arp_sendRequest@ipTarget:
  2422                           	opt stack 0
  2423                           
  2424                           ; 4 bytes @ 0x83
  2425  0000E3                     	ds	2
  2426  0000E5                     icmp_handleNewPacket@ipPayload:
  2427                           	opt stack 0
  2428                           
  2429                           ; 9 bytes @ 0x85
  2430  0000E5                     	ds	2
  2431  0000E7                     ??_ipv4_sendFrame:
  2432  0000E7                     ?_arp_probe:
  2433                           	opt stack 0
  2434  0000E7                     ?_arp_gratuitous:
  2435                           	opt stack 0
  2436  0000E7                     arp_probe@ipTarget:
  2437                           	opt stack 0
  2438  0000E7                     arp_gratuitous@ip:
  2439                           	opt stack 0
  2440                           
  2441                           ; 4 bytes @ 0x87
  2442  0000E7                     	ds	4
  2443  0000EB                     arp_probe@link:
  2444                           	opt stack 0
  2445  0000EB                     arp_gratuitous@link:
  2446                           	opt stack 0
  2447                           
  2448                           ; 1 bytes @ 0x8B
  2449  0000EB                     	ds	1
  2450  0000EC                     ??_arp_probe:
  2451  0000EC                     ??_arp_gratuitous:
  2452                           
  2453                           ; 1 bytes @ 0x8C
  2454  0000EC                     	ds	2
  2455  0000EE                     ??_icmp_handleNewPacket:
  2456                           
  2457                           ; 1 bytes @ 0x8E
  2458  0000EE                     	ds	1
  2459  0000EF                     ipv4_sendFrame@index:
  2460                           	opt stack 0
  2461                           
  2462                           ; 1 bytes @ 0x8F
  2463  0000EF                     	ds	1
  2464  0000F0                     ipv4_handleNewPacket@frame:
  2465                           	opt stack 0
  2466  0000F0                     ipv4_sendFrame@err:
  2467                           	opt stack 0
  2468                           
  2469                           ; 3 bytes @ 0x90
  2470  0000F0                     	ds	2
  2471  0000F2                     ??_ipv4_handleNewPacket:
  2472                           
  2473                           ; 1 bytes @ 0x92
  2474  0000F2                     	ds	2
  2475  0000F4                     arp_gratuitous@index:
  2476                           	opt stack 0
  2477                           
  2478                           ; 1 bytes @ 0x94
  2479  0000F4                     	ds	1
  2480  0000F5                     arp_gratuitous@err:
  2481                           	opt stack 0
  2482                           
  2483                           ; 3 bytes @ 0x95
  2484  0000F5                     	ds	3
  2485  0000F8                     ??_arp_background:
  2486                           
  2487                           ; 1 bytes @ 0x98
  2488  0000F8                     	ds	7
  2489                           
  2490                           	psect	cstackCOMRAM
  2491  000001                     __pcstackCOMRAM:
  2492                           	opt stack 0
  2493  000001                     ?i2___lwdiv:
  2494                           	opt stack 0
  2495  000001                     buttonHandler@state:
  2496                           	opt stack 0
  2497  000001                     i2___lwdiv@dividend:
  2498                           	opt stack 0
  2499                           
  2500                           ; 2 bytes @ 0x0
  2501  000001                     	ds	2
  2502  000003                     i2___lwdiv@divisor:
  2503                           	opt stack 0
  2504  000003                     buttonHandler@resetValue:
  2505                           	opt stack 0
  2506                           
  2507                           ; 4 bytes @ 0x2
  2508  000003                     	ds	2
  2509  000005                     i2___lwdiv@quotient:
  2510                           	opt stack 0
  2511                           
  2512                           ; 2 bytes @ 0x4
  2513  000005                     	ds	2
  2514  000007                     i2___lwdiv@counter:
  2515                           	opt stack 0
  2516  000007                     buttonHandler@debounceValue:
  2517                           	opt stack 0
  2518                           
  2519                           ; 4 bytes @ 0x6
  2520  000007                     	ds	1
  2521  000008                     parseNumber@numberToDisplay:
  2522                           	opt stack 0
  2523                           
  2524                           ; 2 bytes @ 0x7
  2525  000008                     	ds	2
  2526  00000A                     parseNumber@digit:
  2527                           	opt stack 0
  2528                           
  2529                           ; 1 bytes @ 0x9
  2530  00000A                     	ds	1
  2531  00000B                     ??_parseNumber:
  2532                           
  2533                           ; 1 bytes @ 0xA
  2534  00000B                     	ds	1
  2535  00000C                     parseNumber@ones:
  2536                           	opt stack 0
  2537                           
  2538                           ; 1 bytes @ 0xB
  2539  00000C                     	ds	1
  2540  00000D                     parseNumber@tens:
  2541                           	opt stack 0
  2542                           
  2543                           ; 1 bytes @ 0xC
  2544  00000D                     	ds	1
  2545  00000E                     parseNumber@hundreds:
  2546                           	opt stack 0
  2547                           
  2548                           ; 1 bytes @ 0xD
  2549  00000E                     	ds	1
  2550  00000F                     sevenSegmentUpdate@numberToDisplay:
  2551                           	opt stack 0
  2552                           
  2553                           ; 2 bytes @ 0xE
  2554  00000F                     	ds	2
  2555  000011                     ??_sevenSegmentUpdate:
  2556                           
  2557                           ; 1 bytes @ 0x10
  2558  000011                     	ds	2
  2559  000013                     _sevenSegmentUpdate$2612:
  2560                           	opt stack 0
  2561                           
  2562                           ; 2 bytes @ 0x12
  2563  000013                     	ds	2
  2564  000015                     sevenSegmentUpdate@i:
  2565                           	opt stack 0
  2566                           
  2567                           ; 1 bytes @ 0x14
  2568  000015                     	ds	1
  2569  000016                     ?_enc424j600_getNextPacketPointer:
  2570                           	opt stack 0
  2571  000016                     ?_ethernetController_getDeviceName:
  2572                           	opt stack 0
  2573  000016                     ?_etherTypeToString:
  2574                           	opt stack 0
  2575  000016                     ?_UART_special:
  2576                           	opt stack 0
  2577  000016                     ?_icmp_calculateChecksumBuf:
  2578                           	opt stack 0
  2579  000016                     ?_ethernetController_getMTU:
  2580                           	opt stack 0
  2581  000016                     ?___lwdiv:
  2582                           	opt stack 0
  2583  000016                     ?_ipv4_background:
  2584                           	opt stack 0
  2585  000016                     ?_getMillis:
  2586                           	opt stack 0
  2587  000016                     ?_ipv4_getIPSourceAddress:
  2588                           	opt stack 0
  2589  000016                     ?_ipv4_getPreliminaryIPSourceAddress:
  2590                           	opt stack 0
  2591  000016                     ?___lmul:
  2592                           	opt stack 0
  2593  000016                     ?___lldiv:
  2594                           	opt stack 0
  2595  000016                     ?___llmod:
  2596                           	opt stack 0
  2597  000016                     ?_enc424j600_updateReceiveStatusVector:
  2598                           	opt stack 0
  2599  000016                     ?_arp_getEntryFromTable:
  2600                           	opt stack 0
  2601  000016                     entireMemoryEmpty@i:
  2602                           	opt stack 0
  2603  000016                     entireMemoryFull@i:
  2604                           	opt stack 0
  2605  000016                     memory_txFrameClear@index:
  2606                           	opt stack 0
  2607  000016                     tcp_init@i:
  2608                           	opt stack 0
  2609  000016                     enc424j600_writeSPI@data:
  2610                           	opt stack 0
  2611  000016                     enc424j600_readSPI@data:
  2612                           	opt stack 0
  2613  000016                     enc424j600_setNextPacketPointer@ptr:
  2614                           	opt stack 0
  2615  000016                     enc424j600_updateReceiveStatusVector@rsv:
  2616                           	opt stack 0
  2617  000016                     mac_setToBroadcast@mac:
  2618                           	opt stack 0
  2619  000016                     mac_isAllZero@mac:
  2620                           	opt stack 0
  2621  000016                     mac_cmp@a:
  2622                           	opt stack 0
  2623  000016                     mac_setAllZero@mac:
  2624                           	opt stack 0
  2625  000016                     etherTypeToString@ethertype:
  2626                           	opt stack 0
  2627  000016                     ipv4_calculateHeaderChecksum@header:
  2628                           	opt stack 0
  2629  000016                     ipv4_SrcAddrChanged@err:
  2630                           	opt stack 0
  2631  000016                     ipv4_cmp@a:
  2632                           	opt stack 0
  2633  000016                     ipv4_isAllZero@ip:
  2634                           	opt stack 0
  2635  000016                     ipv4_setToAllZero@ip:
  2636                           	opt stack 0
  2637  000016                     icmp_calculateChecksumBuf@buf:
  2638                           	opt stack 0
  2639  000016                     icmp_writeHeaderIntoBuffer@buf:
  2640                           	opt stack 0
  2641  000016                     tcp_calculateHeaderChecksum@tcpHeader:
  2642                           	opt stack 0
  2643  000016                     ___lwdiv@dividend:
  2644                           	opt stack 0
  2645  000016                     printErrorMessage@err:
  2646                           	opt stack 0
  2647  000016                     ipv4_setIPSourceAddress@ip:
  2648                           	opt stack 0
  2649  000016                     ___lmul@multiplier:
  2650                           	opt stack 0
  2651  000016                     ___lldiv@dividend:
  2652                           	opt stack 0
  2653  000016                     ___llmod@dividend:
  2654                           	opt stack 0
  2655  000016                     checkForOverlapSwitched@a:
  2656                           	opt stack 0
  2657  000016                     ipv4_writeHeaderIntoBuffer@header:
  2658                           	opt stack 0
  2659                           
  2660                           ; 23 bytes @ 0x15
  2661  000016                     	ds	2
  2662  000018                     ??_enc424j600_writeSPI:
  2663  000018                     ??_enc424j600_readSPI:
  2664  000018                     ??_etherTypeToString:
  2665  000018                     ??_ipv4_calculateHeaderChecksum:
  2666  000018                     ?_ethernetController_getNextPacketPointer:
  2667                           	opt stack 0
  2668  000018                     mac_setToBroadcast@i:
  2669                           	opt stack 0
  2670  000018                     mac_isAllZero@i:
  2671                           	opt stack 0
  2672  000018                     mac_setAllZero@i:
  2673                           	opt stack 0
  2674  000018                     UART_special@code:
  2675                           	opt stack 0
  2676  000018                     ipv4_isAllZero@i:
  2677                           	opt stack 0
  2678  000018                     ipv4_setToAllZero@i:
  2679                           	opt stack 0
  2680  000018                     mac_cmp@b:
  2681                           	opt stack 0
  2682  000018                     ipv4_cmp@b:
  2683                           	opt stack 0
  2684  000018                     icmp_calculateChecksumBuf@ipPayloadLength:
  2685                           	opt stack 0
  2686  000018                     ___lwdiv@divisor:
  2687                           	opt stack 0
  2688  000018                     icmp_writeHeaderIntoBuffer@header:
  2689                           	opt stack 0
  2690  000018                     ethernetController_getDeviceName@string:
  2691                           	opt stack 0
  2692  000018                     tcp_calculateHeaderChecksum@ipv4Header:
  2693                           	opt stack 0
  2694                           
  2695                           ; 23 bytes @ 0x17
  2696  000018                     	ds	1
  2697  000019                     ??_ipv4_background:
  2698  000019                     arp_init@mac:
  2699                           	opt stack 0
  2700                           
  2701                           ; 6 bytes @ 0x18
  2702  000019                     	ds	1
  2703  00001A                     ??_icmp_calculateChecksumBuf:
  2704  00001A                     ___lwdiv@counter:
  2705                           	opt stack 0
  2706  00001A                     ___lmul@multiplicand:
  2707                           	opt stack 0
  2708  00001A                     ___lldiv@divisor:
  2709                           	opt stack 0
  2710  00001A                     ___llmod@divisor:
  2711                           	opt stack 0
  2712                           
  2713                           ; 4 bytes @ 0x19
  2714  00001A                     	ds	1
  2715  00001B                     ??_enc424j600_updateReceiveStatusVector:
  2716  00001B                     ___lwdiv@quotient:
  2717                           	opt stack 0
  2718  00001B                     ipv4_background@err:
  2719                           	opt stack 0
  2720                           
  2721                           ; 3 bytes @ 0x1A
  2722  00001B                     	ds	1
  2723  00001C                     mac_cmp@i:
  2724                           	opt stack 0
  2725  00001C                     ipv4_cmp@i:
  2726                           	opt stack 0
  2727  00001C                     enc424j600_writeSPI@timeoutCounter:
  2728                           	opt stack 0
  2729  00001C                     enc424j600_readSPI@timeoutCounter:
  2730                           	opt stack 0
  2731                           
  2732                           ; 4 bytes @ 0x1B
  2733  00001C                     	ds	1
  2734  00001D                     arp_getEntryFromTable@index:
  2735                           	opt stack 0
  2736  00001D                     arp_checkForEntry@ip:
  2737                           	opt stack 0
  2738  00001D                     arp_setNewEntry@mac:
  2739                           	opt stack 0
  2740                           
  2741                           ; 6 bytes @ 0x1C
  2742  00001D                     	ds	1
  2743  00001E                     icmp_calculateChecksumBuf@carry:
  2744                           	opt stack 0
  2745  00001E                     ___llmod@counter:
  2746                           	opt stack 0
  2747  00001E                     ___lmul@product:
  2748                           	opt stack 0
  2749  00001E                     ___lldiv@quotient:
  2750                           	opt stack 0
  2751                           
  2752                           ; 4 bytes @ 0x1D
  2753  00001E                     	ds	1
  2754  00001F                     icmp_calculateChecksumBuf@foo:
  2755                           	opt stack 0
  2756  00001F                     arp_init@ip:
  2757                           	opt stack 0
  2758  00001F                     checkForOverlapSwitched@b:
  2759                           	opt stack 0
  2760                           
  2761                           ; 9 bytes @ 0x1E
  2762  00001F                     	ds	1
  2763  000020                     ??_icmp_writeHeaderIntoBuffer:
  2764  000020                     enc424j600_writeSingleByte@opcode:
  2765                           	opt stack 0
  2766  000020                     ipv4_calculateHeaderChecksum@carry:
  2767                           	opt stack 0
  2768  000020                     enc424j600_writeControlRegisterUnbanked@data:
  2769                           	opt stack 0
  2770  000020                     enc424j600_readControlRegisterUnbanked@data:
  2771                           	opt stack 0
  2772  000020                     enc424j600_setGPDATAWritePointer@addr:
  2773                           	opt stack 0
  2774  000020                     enc424j600_setERXDATAReadPointer@addr:
  2775                           	opt stack 0
  2776                           
  2777                           ; 2 bytes @ 0x1F
  2778  000020                     	ds	1
  2779  000021                     arp_checkForEntry@index:
  2780                           	opt stack 0
  2781  000021                     icmp_calculateChecksumBuf@i:
  2782                           	opt stack 0
  2783  000021                     ipv4_calculateHeaderChecksum@sum:
  2784                           	opt stack 0
  2785                           
  2786                           ; 4 bytes @ 0x20
  2787  000021                     	ds	1
  2788  000022                     ?_rand:
  2789                           	opt stack 0
  2790  000022                     enc424j600_writeControlRegisterUnbanked@addr:
  2791                           	opt stack 0
  2792  000022                     enc424j600_readControlRegisterUnbanked@addr:
  2793                           	opt stack 0
  2794  000022                     enc424j600_setGPDATAWritePointer@opcode:
  2795                           	opt stack 0
  2796  000022                     enc424j600_setERXDATAReadPointer@opcode:
  2797                           	opt stack 0
  2798  000022                     ___lldiv@counter:
  2799                           	opt stack 0
  2800  000022                     enc424j600_updateReceiveStatusVector@receiveStatusVector:
  2801                           	opt stack 0
  2802                           
  2803                           ; 5 bytes @ 0x21
  2804  000022                     	ds	1
  2805  000023                     ??_arp_checkForEntry:
  2806  000023                     enc424j600_writeControlRegisterUnbanked@opcode:
  2807                           	opt stack 0
  2808  000023                     enc424j600_readControlRegisterUnbanked@opcode:
  2809                           	opt stack 0
  2810  000023                     enc424j600_setGPDATAWritePointer@lowByte:
  2811                           	opt stack 0
  2812  000023                     enc424j600_setERXDATAReadPointer@lowByte:
  2813                           	opt stack 0
  2814  000023                     arp_init@i:
  2815                           	opt stack 0
  2816  000023                     ultoa@buf:
  2817                           	opt stack 0
  2818  000023                     arp_setNewEntry@ip:
  2819                           	opt stack 0
  2820  000023                     icmp_calculateChecksumBuf@sum:
  2821                           	opt stack 0
  2822                           
  2823                           ; 4 bytes @ 0x22
  2824  000023                     	ds	1
  2825  000024                     ??_enc424j600_clearInterruptFlag:
  2826  000024                     ?_enc424j600_getInterruptFlags:
  2827                           	opt stack 0
  2828  000024                     ?___wmul:
  2829                           	opt stack 0
  2830  000024                     ?___awmod:
  2831                           	opt stack 0
  2832  000024                     ?___lwmod:
  2833                           	opt stack 0
  2834  000024                     ?_ethernetController_softReset:
  2835                           	opt stack 0
  2836  000024                     ?_ethernetController_checkDeviceId:
  2837                           	opt stack 0
  2838  000024                     ?_ethernetController_getMacAddress:
  2839                           	opt stack 0
  2840  000024                     ethernetController_setLEDConfig@conf:
  2841                           	opt stack 0
  2842  000024                     enc424j600_getPacketCount@lowByte:
  2843                           	opt stack 0
  2844  000024                     enc424j600_setGPDATAWritePointer@highByte:
  2845                           	opt stack 0
  2846  000024                     enc424j600_setERXDATAReadPointer@highByte:
  2847                           	opt stack 0
  2848  000024                     enc424j600_enableAutoMACInsertion@temp:
  2849                           	opt stack 0
  2850  000024                     enc424j600_readPHYRegister@data:
  2851                           	opt stack 0
  2852  000024                     enc424j600_setTXLength@len:
  2853                           	opt stack 0
  2854  000024                     enc424j600_setTXStartAddress@addr:
  2855                           	opt stack 0
  2856  000024                     enc424j600_setRXBufferStartAddress@addr:
  2857                           	opt stack 0
  2858  000024                     enc424j600_setRXTailPointer@addr:
  2859                           	opt stack 0
  2860  000024                     ___wmul@multiplier:
  2861                           	opt stack 0
  2862  000024                     ___awmod@dividend:
  2863                           	opt stack 0
  2864  000024                     ___lwmod@dividend:
  2865                           	opt stack 0
  2866  000024                     stack_init@err:
  2867                           	opt stack 0
  2868                           
  2869                           ; 3 bytes @ 0x23
  2870  000024                     	ds	1
  2871  000025                     ??_ethernetController_updateNextPacketPointer:
  2872  000025                     ?_ethernetController_getEtherTypeField:
  2873                           	opt stack 0
  2874  000025                     ?_ethernetController_getSourceMACAddress:
  2875                           	opt stack 0
  2876  000025                     ethernetController_setLEDConfig@LED:
  2877                           	opt stack 0
  2878  000025                     ethernetController_writeEtherTypeFieldToBuffer@ethtype:
  2879                           	opt stack 0
  2880  000025                     ethernetController_streamFromRXBuffer@startAddress:
  2881                           	opt stack 0
  2882  000025                     ipv4_checkHeaderChecksum@header:
  2883                           	opt stack 0
  2884  000025                     ultoa@val:
  2885                           	opt stack 0
  2886  000025                     ethernetController_writeDestinationMACAddress@addr:
  2887                           	opt stack 0
  2888  000025                     ethernetController_streamToTransmitBuffer@field:
  2889                           	opt stack 0
  2890  000025                     ethernetController_getSourceMACAddress@field:
  2891                           	opt stack 0
  2892  000025                     ethernetController_getEtherTypeField@field:
  2893                           	opt stack 0
  2894                           
  2895                           ; 9 bytes @ 0x24
  2896  000025                     	ds	1
  2897  000026                     ??_enc424j600_getInterruptFlags:
  2898  000026                     ??_enc424j600_readPHYRegister:
  2899  000026                     ethernetController_setLEDConfig@data:
  2900                           	opt stack 0
  2901  000026                     enc424j600_setTXLength@lowByte:
  2902                           	opt stack 0
  2903  000026                     enc424j600_setTXStartAddress@lowByte:
  2904                           	opt stack 0
  2905  000026                     enc424j600_setRXBufferStartAddress@lowByte:
  2906                           	opt stack 0
  2907  000026                     enc424j600_setRXTailPointer@lowByte:
  2908                           	opt stack 0
  2909  000026                     enc424j600_clearInterruptFlag@flag:
  2910                           	opt stack 0
  2911  000026                     ___wmul@multiplicand:
  2912                           	opt stack 0
  2913  000026                     ___awmod@divisor:
  2914                           	opt stack 0
  2915  000026                     ___lwmod@divisor:
  2916                           	opt stack 0
  2917                           
  2918                           ; 2 bytes @ 0x25
  2919  000026                     	ds	1
  2920  000027                     ??_ethernetController_softReset:
  2921  000027                     ?_ethernetController_getRSV:
  2922                           	opt stack 0
  2923  000027                     ethernetController_checkDeviceId@data:
  2924                           	opt stack 0
  2925  000027                     ethernetController_streamFromRXBuffer@startEnd:
  2926                           	opt stack 0
  2927  000027                     enc424j600_setTXLength@highByte:
  2928                           	opt stack 0
  2929  000027                     enc424j600_setTXStartAddress@highByte:
  2930                           	opt stack 0
  2931  000027                     enc424j600_setRXBufferStartAddress@highByte:
  2932                           	opt stack 0
  2933  000027                     enc424j600_setRXTailPointer@highByte:
  2934                           	opt stack 0
  2935  000027                     enc424j600_clearInterruptFlag@temp:
  2936                           	opt stack 0
  2937  000027                     ethernetController_getRSV@address:
  2938                           	opt stack 0
  2939  000027                     arp_setNewEntry@timestamp:
  2940                           	opt stack 0
  2941  000027                     ethernetController_writeEtherTypeFieldToBuffer@field:
  2942                           	opt stack 0
  2943                           
  2944                           ; 9 bytes @ 0x26
  2945  000027                     	ds	1
  2946  000028                     ?_ethernetController_dropPacket:
  2947                           	opt stack 0
  2948  000028                     ethernetController_softReset@comFailCount:
  2949                           	opt stack 0
  2950  000028                     ethernetController_clearInterruptFlag@flag:
  2951                           	opt stack 0
  2952  000028                     ethernetController_streamFromRXBuffer@opcode:
  2953                           	opt stack 0
  2954  000028                     ___awmod@counter:
  2955                           	opt stack 0
  2956  000028                     ___lwmod@counter:
  2957                           	opt stack 0
  2958  000028                     ___wmul@product:
  2959                           	opt stack 0
  2960  000028                     ethernetController_checkDeviceId@err:
  2961                           	opt stack 0
  2962  000028                     ethernetController_sendPacket@field:
  2963                           	opt stack 0
  2964                           
  2965                           ; 9 bytes @ 0x27
  2966  000028                     	ds	1
  2967  000029                     ethernetController_streamFromRXBuffer@temp:
  2968                           	opt stack 0
  2969  000029                     ___awmod@sign:
  2970                           	opt stack 0
  2971  000029                     ethernetController_softReset@dataToSend:
  2972                           	opt stack 0
  2973  000029                     utoa@buf:
  2974                           	opt stack 0
  2975  000029                     ultoa@base:
  2976                           	opt stack 0
  2977                           
  2978                           ; 2 bytes @ 0x28
  2979  000029                     	ds	1
  2980  00002A                     ??_arp_parseFromRXBuffer:
  2981  00002A                     ??_ipv4_parseHeader:
  2982  00002A                     ?_ipv4_generateAutoIP:
  2983                           	opt stack 0
  2984  00002A                     ?_memory_txFrameRequest:
  2985                           	opt stack 0
  2986  00002A                     memory_txFrameRequest@length:
  2987                           	opt stack 0
  2988  00002A                     ethernetController_getMacAddress@mac:
  2989                           	opt stack 0
  2990  00002A                     icmp_parseHeader@ipPayload:
  2991                           	opt stack 0
  2992  00002A                     tcp_parseHeader@ipPayload:
  2993                           	opt stack 0
  2994                           
  2995                           ; 9 bytes @ 0x29
  2996  00002A                     	ds	1
  2997  00002B                     arp_checkForEntry@i:
  2998                           	opt stack 0
  2999  00002B                     ethernetController_softReset@receivedData:
  3000                           	opt stack 0
  3001  00002B                     ethernetController_updateNextPacketPointer@nextPktPointer:
  3002                           	opt stack 0
  3003  00002B                     utoa@val:
  3004                           	opt stack 0
  3005  00002B                     ultoa@v:
  3006                           	opt stack 0
  3007  00002B                     ethernetController_writeDestinationMACAddress@field:
  3008                           	opt stack 0
  3009                           
  3010                           ; 9 bytes @ 0x2A
  3011  00002B                     	ds	1
  3012  00002C                     ethernetController_getRSV@opcode:
  3013                           	opt stack 0
  3014  00002C                     enc424j600_readPHYRegister@addr:
  3015                           	opt stack 0
  3016  00002C                     enc424j600_getInterruptFlags@low:
  3017                           	opt stack 0
  3018                           
  3019                           ; 1 bytes @ 0x2B
  3020  00002C                     	ds	1
  3021  00002D                     ethernetController_getRSV@i:
  3022                           	opt stack 0
  3023  00002D                     ethernetController_updateNextPacketPointer@opcode:
  3024                           	opt stack 0
  3025  00002D                     enc424j600_readPHYRegister@PHYaddress:
  3026                           	opt stack 0
  3027  00002D                     enc424j600_getInterruptFlags@high:
  3028                           	opt stack 0
  3029  00002D                     ipv4_writeHeaderIntoBuffer@ptr:
  3030                           	opt stack 0
  3031  00002D                     utoa@base:
  3032                           	opt stack 0
  3033  00002D                     ethernetController_softReset@err:
  3034                           	opt stack 0
  3035                           
  3036                           ; 3 bytes @ 0x2C
  3037  00002D                     	ds	1
  3038  00002E                     ??_ethernetController_streamToTransmitBuffer:
  3039  00002E                     ??_ethernetController_getEtherTypeField:
  3040  00002E                     ?_ethernetController_pollInterruptFlags:
  3041                           	opt stack 0
  3042  00002E                     ethernetController_getSourceMACAddress@opcode:
  3043                           	opt stack 0
  3044  00002E                     ethernetController_updateNextPacketPointer@newPointerL:
  3045                           	opt stack 0
  3046  00002E                     enc424j600_readPHYRegister@unusedBits:
  3047                           	opt stack 0
  3048  00002E                     ipv4_generateAutoIP@ip:
  3049                           	opt stack 0
  3050                           
  3051                           ; 4 bytes @ 0x2D
  3052  00002E                     	ds	1
  3053  00002F                     ??_tcp_calculateHeaderChecksum:
  3054  00002F                     ??_ipv4_writeHeaderIntoBuffer:
  3055  00002F                     ethernetController_updateNextPacketPointer@newPointerH:
  3056                           	opt stack 0
  3057  00002F                     ultoa@c:
  3058                           	opt stack 0
  3059  00002F                     utoa@v:
  3060                           	opt stack 0
  3061  00002F                     enc424j600_readPHYRegister@timeoutCounter:
  3062                           	opt stack 0
  3063  00002F                     arp_setNewEntry@minSeconds:
  3064                           	opt stack 0
  3065  00002F                     ethernetController_getSourceMACAddress@sourceAddress:
  3066                           	opt stack 0
  3067                           
  3068                           ; 6 bytes @ 0x2E
  3069  00002F                     	ds	1
  3070  000030                     ??_ethernetController_pollInterruptFlags:
  3071  000030                     ?_ethernetController_init:
  3072                           	opt stack 0
  3073  000030                     ethernetController_writeEtherTypeFieldToBuffer@lowByte:
  3074                           	opt stack 0
  3075  000030                     ltoa@cp:
  3076                           	opt stack 0
  3077  000030                     srand@x:
  3078                           	opt stack 0
  3079                           
  3080                           ; 2 bytes @ 0x2F
  3081  000030                     	ds	1
  3082  000031                     ethernetController_writeEtherTypeFieldToBuffer@highByte:
  3083                           	opt stack 0
  3084  000031                     utoa@c:
  3085                           	opt stack 0
  3086                           
  3087                           ; 1 bytes @ 0x30
  3088  000031                     	ds	1
  3089  000032                     ?_intToString:
  3090                           	opt stack 0
  3091  000032                     ethernetController_streamToTransmitBuffer@data:
  3092                           	opt stack 0
  3093  000032                     ethernetController_writeEtherTypeFieldToBuffer@opcode:
  3094                           	opt stack 0
  3095  000032                     ethernetController_getEtherTypeField@ethertype:
  3096                           	opt stack 0
  3097  000032                     itoa@cp:
  3098                           	opt stack 0
  3099  000032                     intToString@val:
  3100                           	opt stack 0
  3101                           
  3102                           ; 4 bytes @ 0x31
  3103  000032                     	ds	1
  3104  000033                     ethernetController_streamToTransmitBuffer@opcode:
  3105                           	opt stack 0
  3106  000033                     enc424j600_readPHYRegister@lowByte:
  3107                           	opt stack 0
  3108  000033                     arp_setNewEntry@oldestIndex:
  3109                           	opt stack 0
  3110  000033                     icmp_parseHeader@icmpHeader:
  3111                           	opt stack 0
  3112  000033                     tcp_parseHeader@header:
  3113                           	opt stack 0
  3114  000033                     ethernetController_init@err:
  3115                           	opt stack 0
  3116                           
  3117                           ; 3 bytes @ 0x32
  3118  000033                     	ds	1
  3119  000034                     ??_macToString:
  3120  000034                     ??_ipAdressToString:
  3121  000034                     ethernetController_getEtherTypeField@opcode:
  3122                           	opt stack 0
  3123  000034                     enc424j600_readPHYRegister@highByte:
  3124                           	opt stack 0
  3125  000034                     arp_setNewEntry@i:
  3126                           	opt stack 0
  3127  000034                     ipv4_streamToTransmissionBuffer@data:
  3128                           	opt stack 0
  3129  000034                     ethernet_txFrameRequest@frame:
  3130                           	opt stack 0
  3131                           
  3132                           ; 2 bytes @ 0x33
  3133  000034                     	ds	1
  3134  000035                     ethernetController_getSourceMACAddress@temp:
  3135                           	opt stack 0
  3136  000035                     ethernetController_getEtherTypeField@lowByte:
  3137                           	opt stack 0
  3138  000035                     enc424j600_readPHYRegister@temp:
  3139                           	opt stack 0
  3140  000035                     macToString@i:
  3141                           	opt stack 0
  3142  000035                     tcp_parseHeader@temp:
  3143                           	opt stack 0
  3144                           
  3145                           ; 1 bytes @ 0x34
  3146  000035                     	ds	1
  3147  000036                     ethernetController_getSourceMACAddress@i:
  3148                           	opt stack 0
  3149  000036                     ethernetController_getEtherTypeField@highByte:
  3150                           	opt stack 0
  3151  000036                     intToString@b:
  3152                           	opt stack 0
  3153  000036                     macToString@j:
  3154                           	opt stack 0
  3155                           
  3156                           ; 1 bytes @ 0x35
  3157  000036                     	ds	1
  3158  000037                     
  3159                           ; 1 bytes @ 0x36
  3160 ;;
  3161 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3162 ;;
  3163 ;; *************** function _main *****************
  3164 ;; Defined at:
  3165 ;;		line 39 in file "src/system/main.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;		None
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  connection     17   21[BANK6 ] struct tcp_connection
  3170 ;;  udp             8    9[BANK6 ] struct udpHeader
  3171 ;;  ipDst           4   17[BANK6 ] struct ipv4_address
  3172 ;;  prescaler       4    0[BANK6 ] unsigned long 
  3173 ;;  err             3    6[BANK6 ] struct error
  3174 ;;  oldState        1    0        unsigned char 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3185 ;;      Locals:         0       0       0       0       0       0       0      38       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3186 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3187 ;;      Totals:         0       0       0       2       0       0       0      38       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3188 ;;Total ram usage:       40 bytes
  3189 ;; Hardware stack levels required when called:   16
  3190 ;; This function calls:
  3191 ;;		_UARTInit
  3192 ;;		_UARTTransmitText
  3193 ;;		_UART_resetFormat
  3194 ;;		_UART_setFormat
  3195 ;;		_UART_special
  3196 ;;		_ethernetController_checkDeviceId
  3197 ;;		_ethernetController_getDeviceName
  3198 ;;		_ethernetController_getMacAddress
  3199 ;;		_ethernetController_init
  3200 ;;		_ethernetController_setLEDConfig
  3201 ;;		_handleStackBackgroundTasks
  3202 ;;		_ipv4_generateAutoIP
  3203 ;;		_printErrorMessage
  3204 ;;		_printEthernetState
  3205 ;;		_rand
  3206 ;;		_sevenSegmentInit
  3207 ;;		_srand
  3208 ;;		_stack_init
  3209 ;;		_tcp_listen
  3210 ;;		_udp_sendPacket
  3211 ;; This function is called by:
  3212 ;;		Startup code after reset
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           	psect	text0
  3217  011A5C                     __ptext0:
  3218                           	opt stack 0
  3219  011A5C                     _main:
  3220                           	opt stack 15
  3221                           
  3222                           ;main.c: 46: OSCFRQbits.FRQ = 0b0110;
  3223                           
  3224                           ;incstack = 0
  3225  011A5C  0139               	movlb	57	; () banked
  3226  011A5E  51DF               	movf	223,w,b	;volatile
  3227  011A60  0BF0               	andlw	-16
  3228  011A62  0906               	iorlw	6
  3229  011A64  6FDF               	movwf	223,b	;volatile
  3230                           
  3231                           ; BSR set to: 57
  3232                           ;main.c: 47: OSCENbits.HFOEN = 1;
  3233  011A66  8DDD               	bsf	221,6,b	;volatile
  3234                           
  3235                           ; BSR set to: 57
  3236                           ;main.c: 50: INTCON0bits.GIE = 0;
  3237  011A68  013F               	movlb	63	; () banked
  3238  011A6A  9FD2               	bcf	210,7,b	;volatile
  3239                           
  3240                           ; BSR set to: 63
  3241                           ;main.c: 51: PIE3bits.TMR0IE = 1;
  3242  011A6C  0139               	movlb	57	; () banked
  3243  011A6E  8F93               	bsf	147,7,b	;volatile
  3244                           
  3245                           ; BSR set to: 57
  3246                           ;main.c: 53: PIE3bits.U1RXIE = 1;
  3247  011A70  8793               	bsf	147,3,b	;volatile
  3248                           
  3249                           ; BSR set to: 57
  3250                           ;main.c: 54: IPR3bits.U1RXIP = 0;
  3251  011A72  9783               	bcf	131,3,b	;volatile
  3252                           
  3253                           ; BSR set to: 57
  3254                           ;main.c: 59: T0CON0bits.EN = 1;
  3255  011A74  013F               	movlb	63	; () banked
  3256  011A76  8FB8               	bsf	184,7,b	;volatile
  3257                           
  3258                           ; BSR set to: 63
  3259                           ;main.c: 60: T0CON0bits.MD16 = 0;
  3260  011A78  99B8               	bcf	184,4,b	;volatile
  3261                           
  3262                           ;main.c: 61: T0CON1bits.CS = 0b011;
  3263  011A7A  51B9               	movf	185,w,b	;volatile
  3264  011A7C  0B1F               	andlw	-225
  3265  011A7E  0960               	iorlw	96
  3266  011A80  6FB9               	movwf	185,b	;volatile
  3267                           
  3268                           ; BSR set to: 63
  3269                           ;main.c: 62: T0CON1bits.CKPS = 0b0000;
  3270  011A82  91B9               	bcf	185,0,b	;volatile
  3271  011A84  93B9               	bcf	185,1,b	;volatile
  3272  011A86  95B9               	bcf	185,2,b	;volatile
  3273  011A88  97B9               	bcf	185,3,b	;volatile
  3274                           
  3275                           ;main.c: 63: T0CON0bits.OUTPS = 0b101;
  3276  011A8A  51B8               	movf	184,w,b	;volatile
  3277  011A8C  0BF0               	andlw	-16
  3278  011A8E  0905               	iorlw	5
  3279  011A90  6FB8               	movwf	184,b	;volatile
  3280                           
  3281                           ; BSR set to: 63
  3282                           ;main.c: 67: T1CONbits.TMR1ON = 1;
  3283  011A92  81B2               	bsf	178,0,b	;volatile
  3284                           
  3285                           ;main.c: 68: CCP1CONbits.CCP1MODE = 0b1011;
  3286  011A94  517E               	movf	126,w,b	;volatile
  3287  011A96  0BF0               	andlw	-16
  3288  011A98  090B               	iorlw	11
  3289  011A9A  6F7E               	movwf	126,b	;volatile
  3290                           
  3291                           ;main.c: 69: CCPR1 = 8000;
  3292  011A9C  0E1F               	movlw	31
  3293  011A9E  6F7D               	movwf	125,b	;volatile
  3294  011AA0  0E40               	movlw	64
  3295  011AA2  6F7C               	movwf	124,b	;volatile
  3296                           
  3297                           ; BSR set to: 63
  3298                           ;main.c: 70: PIE4bits.CCP1IE = 1;
  3299  011AA4  0139               	movlb	57	; () banked
  3300  011AA6  8794               	bsf	148,3,b	;volatile
  3301                           
  3302                           ; BSR set to: 57
  3303                           ;main.c: 73: TRISBbits.TRISB6 = 0;
  3304  011AA8  013F               	movlb	63	; () banked
  3305  011AAA  9DC3               	bcf	195,6,b	;volatile
  3306                           
  3307                           ; BSR set to: 63
  3308                           ;main.c: 76: UARTInit();
  3309  011AAC  EC3A  F0BB         	call	_UARTInit	;wreg free
  3310                           
  3311                           ;main.c: 77: sevenSegmentInit();
  3312  011AB0  ECCE  F0BA         	call	_sevenSegmentInit	;wreg free
  3313                           
  3314                           ;main.c: 78: _delay((unsigned long)((10)*(32000000UL/4000.0)));
  3315  011AB4  0E68               	movlw	104
  3316  011AB6  0102               	movlb	2	; () banked
  3317  011AB8  6F9D               	movwf	??_main& (0+255),b
  3318  011ABA  0EE4               	movlw	228
  3319  011ABC                     u15847:
  3320  011ABC  2EE8               	decfsz	16360,f,c
  3321  011ABE  D7FE               	bra	u15847
  3322  011AC0  2F9D               	decfsz	??_main& (0+255),f,b
  3323  011AC2  D7FC               	bra	u15847
  3324  011AC4  F000               	nop	
  3325                           
  3326                           ;main.c: 79: UARTTransmitText("\x12");
  3327  011AC6  0EFD               	movlw	low STR_45
  3328  011AC8  0100               	movlb	0	; () banked
  3329  011ACA  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3330  011ACC  0EFF               	movlw	high STR_45
  3331  011ACE  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3332  011AD0  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3333                           
  3334                           ;main.c: 80: if (!PCON0bits.RWDT) {
  3335  011AD4  013F               	movlb	63	; () banked
  3336  011AD6  B9F0               	btfsc	240,4,b	;volatile
  3337  011AD8  D029               	goto	l690
  3338                           
  3339                           ; BSR set to: 63
  3340                           ;main.c: 81: UART_setFormat(UART_COLOR_BG_RED);
  3341  011ADA  0E00               	movlw	0
  3342  011ADC  EC67  F0B0         	call	_UART_setFormat
  3343                           
  3344                           ;main.c: 82: UARTTransmitText("\a\n\r");
  3345  011AE0  0EEA               	movlw	low STR_17
  3346  011AE2  0100               	movlb	0	; () banked
  3347  011AE4  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3348  011AE6  0EFF               	movlw	high STR_17
  3349  011AE8  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3350  011AEA  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3351                           
  3352                           ;main.c: 83: UARTTransmitText(UART_special(UART_LINE_SEPARATOR));
  3353  011AEE  0E00               	movlw	0
  3354  011AF0  EC2E  F0BB         	call	_UART_special
  3355  011AF4  0060  F058  F06D   	movff	?_UART_special,UARTTransmitText@str
  3356  011AFA  0060  F05C  F06E   	movff	?_UART_special+1,UARTTransmitText@str+1
  3357  011B00  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3358                           
  3359                           ;main.c: 84: UARTTransmitText("\n\r*** CRITICAL ERROR: WATCHDOG CAUSED RESET ***\n\r");
  3360  011B04  0ED2               	movlw	low STR_47
  3361  011B06  0100               	movlb	0	; () banked
  3362  011B08  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3363  011B0A  0EFC               	movlw	high STR_47
  3364  011B0C  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3365  011B0E  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3366                           
  3367                           ;main.c: 85: UARTTransmitText(UART_special(UART_LINE_SEPARATOR));
  3368  011B12  0E00               	movlw	0
  3369  011B14  EC2E  F0BB         	call	_UART_special
  3370  011B18  0060  F058  F06D   	movff	?_UART_special,UARTTransmitText@str
  3371  011B1E  0060  F05C  F06E   	movff	?_UART_special+1,UARTTransmitText@str+1
  3372  011B24  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3373                           
  3374                           ;main.c: 86: UART_resetFormat();
  3375  011B28  EC77  F0BB         	call	_UART_resetFormat	;wreg free
  3376  011B2C                     l690:
  3377                           
  3378                           ;main.c: 87: }
  3379                           ;main.c: 88: if (!PCON0bits.BOR) {
  3380  011B2C  013F               	movlb	63	; () banked
  3381  011B2E  B1F0               	btfsc	240,0,b	;volatile
  3382  011B30  D029               	goto	l691
  3383                           
  3384                           ; BSR set to: 63
  3385                           ;main.c: 89: UART_setFormat(UART_COLOR_BG_RED);
  3386  011B32  0E00               	movlw	0
  3387  011B34  EC67  F0B0         	call	_UART_setFormat
  3388                           
  3389                           ;main.c: 90: UARTTransmitText("\a\n\r");
  3390  011B38  0EEA               	movlw	low STR_17
  3391  011B3A  0100               	movlb	0	; () banked
  3392  011B3C  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3393  011B3E  0EFF               	movlw	high STR_17
  3394  011B40  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3395  011B42  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3396                           
  3397                           ;main.c: 91: UARTTransmitText(UART_special(UART_LINE_SEPARATOR));
  3398  011B46  0E00               	movlw	0
  3399  011B48  EC2E  F0BB         	call	_UART_special
  3400  011B4C  0060  F058  F06D   	movff	?_UART_special,UARTTransmitText@str
  3401  011B52  0060  F05C  F06E   	movff	?_UART_special+1,UARTTransmitText@str+1
  3402  011B58  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3403                           
  3404                           ;main.c: 92: UARTTransmitText("\n\r*** CRITICAL ERROR: BROWN-OUT CAUSED RESET ***\n\r");
  3405  011B5C  0E6D               	movlw	low STR_49
  3406  011B5E  0100               	movlb	0	; () banked
  3407  011B60  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3408  011B62  0EFC               	movlw	high STR_49
  3409  011B64  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3410  011B66  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3411                           
  3412                           ;main.c: 93: UARTTransmitText(UART_special(UART_LINE_SEPARATOR));
  3413  011B6A  0E00               	movlw	0
  3414  011B6C  EC2E  F0BB         	call	_UART_special
  3415  011B70  0060  F058  F06D   	movff	?_UART_special,UARTTransmitText@str
  3416  011B76  0060  F05C  F06E   	movff	?_UART_special+1,UARTTransmitText@str+1
  3417  011B7C  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3418                           
  3419                           ;main.c: 94: UART_resetFormat();
  3420  011B80  EC77  F0BB         	call	_UART_resetFormat	;wreg free
  3421  011B84                     l691:
  3422                           
  3423                           ;main.c: 95: }
  3424                           ;main.c: 96: if (!PCON0bits.STKOVF) {
  3425  011B84  013F               	movlb	63	; () banked
  3426  011B86  BFF0               	btfsc	240,7,b	;volatile
  3427  011B88  D029               	goto	l692
  3428                           
  3429                           ; BSR set to: 63
  3430                           ;main.c: 97: UART_setFormat(UART_COLOR_BG_RED);
  3431  011B8A  0E00               	movlw	0
  3432  011B8C  EC67  F0B0         	call	_UART_setFormat
  3433                           
  3434                           ;main.c: 98: UARTTransmitText("\a\n\r");
  3435  011B90  0EEA               	movlw	low STR_17
  3436  011B92  0100               	movlb	0	; () banked
  3437  011B94  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3438  011B96  0EFF               	movlw	high STR_17
  3439  011B98  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3440  011B9A  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3441                           
  3442                           ;main.c: 99: UARTTransmitText(UART_special(UART_LINE_SEPARATOR));
  3443  011B9E  0E00               	movlw	0
  3444  011BA0  EC2E  F0BB         	call	_UART_special
  3445  011BA4  0060  F058  F06D   	movff	?_UART_special,UARTTransmitText@str
  3446  011BAA  0060  F05C  F06E   	movff	?_UART_special+1,UARTTransmitText@str+1
  3447  011BB0  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3448                           
  3449                           ;main.c: 100: UARTTransmitText("\n\r*** CRITICAL ERROR: STACK OVRFL CAUSED RESET ***\n\r
      +                          ");
  3450  011BB4  0E38               	movlw	low STR_51
  3451  011BB6  0100               	movlb	0	; () banked
  3452  011BB8  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3453  011BBA  0EFC               	movlw	high STR_51
  3454  011BBC  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3455  011BBE  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3456                           
  3457                           ;main.c: 101: UARTTransmitText(UART_special(UART_LINE_SEPARATOR));
  3458  011BC2  0E00               	movlw	0
  3459  011BC4  EC2E  F0BB         	call	_UART_special
  3460  011BC8  0060  F058  F06D   	movff	?_UART_special,UARTTransmitText@str
  3461  011BCE  0060  F05C  F06E   	movff	?_UART_special+1,UARTTransmitText@str+1
  3462  011BD4  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3463                           
  3464                           ;main.c: 102: UART_resetFormat();
  3465  011BD8  EC77  F0BB         	call	_UART_resetFormat	;wreg free
  3466  011BDC                     l692:
  3467                           
  3468                           ;main.c: 103: }
  3469                           ;main.c: 104: if (!PCON0bits.STKUNF) {
  3470  011BDC  013F               	movlb	63	; () banked
  3471  011BDE  BDF0               	btfsc	240,6,b	;volatile
  3472  011BE0  D029               	goto	l693
  3473                           
  3474                           ; BSR set to: 63
  3475                           ;main.c: 105: UART_setFormat(UART_COLOR_BG_RED);
  3476  011BE2  0E00               	movlw	0
  3477  011BE4  EC67  F0B0         	call	_UART_setFormat
  3478                           
  3479                           ;main.c: 106: UARTTransmitText("\a\n\r");
  3480  011BE8  0EEA               	movlw	low STR_17
  3481  011BEA  0100               	movlb	0	; () banked
  3482  011BEC  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3483  011BEE  0EFF               	movlw	high STR_17
  3484  011BF0  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3485  011BF2  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3486                           
  3487                           ;main.c: 107: UARTTransmitText(UART_special(UART_LINE_SEPARATOR));
  3488  011BF6  0E00               	movlw	0
  3489  011BF8  EC2E  F0BB         	call	_UART_special
  3490  011BFC  0060  F058  F06D   	movff	?_UART_special,UARTTransmitText@str
  3491  011C02  0060  F05C  F06E   	movff	?_UART_special+1,UARTTransmitText@str+1
  3492  011C08  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3493                           
  3494                           ;main.c: 108: UARTTransmitText("\n\r*** CRITICAL ERROR: STACK UNDRFL CAUSED RESET ***\n\
      +                          r");
  3495  011C0C  0E02               	movlw	low STR_53
  3496  011C0E  0100               	movlb	0	; () banked
  3497  011C10  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3498  011C12  0EFC               	movlw	high STR_53
  3499  011C14  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3500  011C16  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3501                           
  3502                           ;main.c: 109: UARTTransmitText(UART_special(UART_LINE_SEPARATOR));
  3503  011C1A  0E00               	movlw	0
  3504  011C1C  EC2E  F0BB         	call	_UART_special
  3505  011C20  0060  F058  F06D   	movff	?_UART_special,UARTTransmitText@str
  3506  011C26  0060  F05C  F06E   	movff	?_UART_special+1,UARTTransmitText@str+1
  3507  011C2C  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3508                           
  3509                           ;main.c: 110: UART_resetFormat();
  3510  011C30  EC77  F0BB         	call	_UART_resetFormat	;wreg free
  3511  011C34                     l693:
  3512                           
  3513                           ;main.c: 111: }
  3514                           ;main.c: 112: UARTTransmitText("\n\rFIRMWARE BUILD DATE IS ");
  3515  011C34  0E9F               	movlw	low STR_54
  3516  011C36  0100               	movlb	0	; () banked
  3517  011C38  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3518  011C3A  0EFD               	movlw	high STR_54
  3519  011C3C  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3520  011C3E  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3521                           
  3522                           ;main.c: 113: UARTTransmitText("May 20 2019");
  3523  011C42  0E2A               	movlw	low STR_55
  3524  011C44  0100               	movlb	0	; () banked
  3525  011C46  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3526  011C48  0EFF               	movlw	high STR_55
  3527  011C4A  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3528  011C4C  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3529                           
  3530                           ;main.c: 114: UARTTransmitText(" ");
  3531  011C50  0EEF               	movlw	low (STR_22+1)
  3532  011C52  0100               	movlb	0	; () banked
  3533  011C54  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3534  011C56  0EFF               	movlw	high (STR_22+1)
  3535  011C58  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3536  011C5A  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3537                           
  3538                           ;main.c: 115: UARTTransmitText("20:56:25");
  3539  011C5E  0E6C               	movlw	low STR_57
  3540  011C60  0100               	movlb	0	; () banked
  3541  011C62  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3542  011C64  0EFF               	movlw	high STR_57
  3543  011C66  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3544  011C68  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3545                           
  3546                           ;main.c: 116: UARTTransmitText(".\n\r");
  3547  011C6C  0E25               	movlw	low (STR_27+33)
  3548  011C6E  0100               	movlb	0	; () banked
  3549  011C70  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3550  011C72  0EFD               	movlw	high (STR_27+33)
  3551  011C74  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3552  011C76  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3553                           
  3554                           ;main.c: 117: error_t err;
  3555                           ;main.c: 118: err = ethernetController_init();
  3556  011C7A  EC03  F0AF         	call	_ethernetController_init	;wreg free
  3557  011C7E  0060  F0C0  F606   	movff	?_ethernetController_init,main@err
  3558  011C84  0060  F0C4  F607   	movff	?_ethernetController_init+1,main@err+1
  3559  011C8A  0060  F0C8  F608   	movff	?_ethernetController_init+2,main@err+2
  3560                           
  3561                           ;main.c: 119: if (err.code != (uint16_t)0)
  3562  011C90  0106               	movlb	6	; () banked
  3563  011C92  5107               	movf	(main@err+1)& (0+255),w,b
  3564  011C94  1108               	iorwf	(main@err+2)& (0+255),w,b
  3565  011C96  B4D8               	btfsc	16344,2,c
  3566  011C98  D00B               	goto	l694
  3567                           
  3568                           ; BSR set to: 6
  3569                           ;main.c: 120: printErrorMessage(err);
  3570  011C9A  0061  F818  F016   	movff	main@err,printErrorMessage@err
  3571  011CA0  0061  F81C  F017   	movff	main@err+1,printErrorMessage@err+1
  3572  011CA6  0061  F820  F018   	movff	main@err+2,printErrorMessage@err+2
  3573  011CAC  ECB6  F0BB         	call	_printErrorMessage	;wreg free
  3574  011CB0                     l694:
  3575                           
  3576                           ;main.c: 121: err = ethernetController_checkDeviceId();
  3577  011CB0  EC4E  F0B7         	call	_ethernetController_checkDeviceId	;wreg free
  3578  011CB4  0060  F090  F606   	movff	?_ethernetController_checkDeviceId,main@err
  3579  011CBA  0060  F094  F607   	movff	?_ethernetController_checkDeviceId+1,main@err+1
  3580  011CC0  0060  F098  F608   	movff	?_ethernetController_checkDeviceId+2,main@err+2
  3581                           
  3582                           ;main.c: 122: if (err.code == (uint16_t)0) {
  3583  011CC6  0106               	movlb	6	; () banked
  3584  011CC8  5107               	movf	(main@err+1)& (0+255),w,b
  3585  011CCA  1108               	iorwf	(main@err+2)& (0+255),w,b
  3586  011CCC  A4D8               	btfss	16344,2,c
  3587  011CCE  D011               	goto	l695
  3588                           
  3589                           ; BSR set to: 6
  3590                           ;main.c: 123: UARTTransmitText(ethernetController_getDeviceName());
  3591  011CD0  EC53  F0BA         	call	_ethernetController_getDeviceName	;wreg free
  3592  011CD4  0060  F058  F06D   	movff	?_ethernetController_getDeviceName,UARTTransmitText@str
  3593  011CDA  0060  F05C  F06E   	movff	?_ethernetController_getDeviceName+1,UARTTransmitText@str+1
  3594  011CE0  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3595                           
  3596                           ;main.c: 124: UARTTransmitText(" detected. ");
  3597  011CE4  0E1E               	movlw	low STR_59
  3598  011CE6  0100               	movlb	0	; () banked
  3599  011CE8  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3600  011CEA  0EFF               	movlw	high STR_59
  3601  011CEC  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3602  011CEE  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3603  011CF2                     l695:
  3604                           
  3605                           ;main.c: 125: }
  3606                           ;main.c: 131: UARTTransmitText(UART_special(UART_LINE_SEPARATOR));
  3607  011CF2  0E00               	movlw	0
  3608  011CF4  EC2E  F0BB         	call	_UART_special
  3609  011CF8  0060  F058  F06D   	movff	?_UART_special,UARTTransmitText@str
  3610  011CFE  0060  F05C  F06E   	movff	?_UART_special+1,UARTTransmitText@str+1
  3611  011D04  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3612                           
  3613                           ;main.c: 132: UARTTransmitText("\n\r");
  3614  011D08  0EEB               	movlw	low (STR_17+1)
  3615  011D0A  0100               	movlb	0	; () banked
  3616  011D0C  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  3617  011D0E  0EFF               	movlw	high (STR_17+1)
  3618  011D10  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3619  011D12  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  3620                           
  3621                           ;main.c: 134: stack_init();
  3622  011D16  EC8F  F0BB         	call	_stack_init	;wreg free
  3623                           
  3624                           ;main.c: 136: ethernetController_setLEDConfig(LEDA, LED_ON);
  3625  011D1A  0E00               	movlw	0
  3626  011D1C  6E24               	movwf	ethernetController_setLEDConfig@conf,c
  3627  011D1E  0E00               	movlw	0
  3628  011D20  EC70  F0B2         	call	_ethernetController_setLEDConfig
  3629                           
  3630                           ;main.c: 137: ethernetController_setLEDConfig(LEDA, LED_ON);
  3631  011D24  0E00               	movlw	0
  3632  011D26  6E24               	movwf	ethernetController_setLEDConfig@conf,c
  3633  011D28  0E00               	movlw	0
  3634  011D2A  EC70  F0B2         	call	_ethernetController_setLEDConfig
  3635                           
  3636                           ;main.c: 138: _delay((unsigned long)((500)*(32000000UL/4000.0)));
  3637  011D2E  0E15               	movlw	21
  3638  011D30  0102               	movlb	2	; () banked
  3639  011D32  6F9E               	movwf	(??_main+1)& (0+255),b
  3640  011D34  0E4B               	movlw	75
  3641  011D36  6F9D               	movwf	??_main& (0+255),b
  3642  011D38  0EBE               	movlw	190
  3643  011D3A                     u15857:
  3644  011D3A  2EE8               	decfsz	16360,f,c
  3645  011D3C  D7FE               	bra	u15857
  3646  011D3E  2F9D               	decfsz	??_main& (0+255),f,b
  3647  011D40  D7FC               	bra	u15857
  3648  011D42  2F9E               	decfsz	(??_main+1)& (0+255),f,b
  3649  011D44  D7FA               	bra	u15857
  3650  011D46  F000               	nop	
  3651                           
  3652                           ;main.c: 140: ethernetController_setLEDConfig(LEDA, LED_OFF);
  3653  011D48  0E01               	movlw	1
  3654  011D4A  6E24               	movwf	ethernetController_setLEDConfig@conf,c
  3655  011D4C  0E00               	movlw	0
  3656  011D4E  EC70  F0B2         	call	_ethernetController_setLEDConfig
  3657                           
  3658                           ;main.c: 141: ethernetController_setLEDConfig(LEDA, LED_OFF);
  3659  011D52  0E01               	movlw	1
  3660  011D54  6E24               	movwf	ethernetController_setLEDConfig@conf,c
  3661  011D56  0E00               	movlw	0
  3662  011D58  EC70  F0B2         	call	_ethernetController_setLEDConfig
  3663                           
  3664                           ;main.c: 144: uint32_t prescaler = 0;
  3665  011D5C  0E00               	movlw	0
  3666  011D5E  0106               	movlb	6	; () banked
  3667  011D60  6F00               	movwf	main@prescaler& (0+255),b
  3668  011D62  0E00               	movlw	0
  3669  011D64  6F01               	movwf	(main@prescaler+1)& (0+255),b
  3670  011D66  0E00               	movlw	0
  3671  011D68  6F02               	movwf	(main@prescaler+2)& (0+255),b
  3672  011D6A  0E00               	movlw	0
  3673  011D6C  6F03               	movwf	(main@prescaler+3)& (0+255),b
  3674                           
  3675                           ; BSR set to: 6
  3676                           ;main.c: 146: ANSELB &= ~(1<<5);
  3677  011D6E  013A               	movlb	58	; () banked
  3678  011D70  9B50               	bcf	80,5,b	;volatile
  3679                           
  3680                           ; BSR set to: 58
  3681                           ;main.c: 147: TRISB |= (1<<5);
  3682  011D72  013F               	movlb	63	; () banked
  3683  011D74  8BC3               	bsf	195,5,b	;volatile
  3684                           
  3685                           ; BSR set to: 63
  3686                           ;main.c: 149: uint8_t oldState;
  3687                           ;main.c: 151: ipv4_address_t ipDst;
  3688                           ;main.c: 152: ipDst.address[0] = 169;
  3689  011D76  0EA9               	movlw	169
  3690  011D78  0106               	movlb	6	; () banked
  3691  011D7A  6F11               	movwf	main@ipDst& (0+255),b
  3692                           
  3693                           ; BSR set to: 6
  3694                           ;main.c: 153: ipDst.address[1] = 254;
  3695  011D7C  0EFE               	movlw	254
  3696  011D7E  6F12               	movwf	(main@ipDst+1)& (0+255),b
  3697                           
  3698                           ; BSR set to: 6
  3699                           ;main.c: 154: ipDst.address[2] = 108;
  3700  011D80  0E6C               	movlw	108
  3701  011D82  6F13               	movwf	(main@ipDst+2)& (0+255),b
  3702                           
  3703                           ; BSR set to: 6
  3704                           ;main.c: 155: ipDst.address[3] = 135;
  3705  011D84  0E87               	movlw	135
  3706  011D86  6F14               	movwf	(main@ipDst+3)& (0+255),b
  3707                           
  3708                           ; BSR set to: 6
  3709                           ;main.c: 158: INTCON0bits.GIE = 1;
  3710  011D88  013F               	movlb	63	; () banked
  3711  011D8A  8FD2               	bsf	210,7,b	;volatile
  3712                           
  3713                           ; BSR set to: 63
  3714                           ;main.c: 161: srand(ethernetController_getMacAddress().address[5]);
  3715  011D8C  ECB1  F0B5         	call	_ethernetController_getMacAddress	;wreg free
  3716  011D90  0E05               	movlw	5
  3717  011D92  26E9               	addwf	16361,f,c
  3718  011D94  0E00               	movlw	0
  3719  011D96  22EA               	addwfc	16362,f,c
  3720  011D98  50EF               	movf	16367,w,c
  3721  011D9A  0102               	movlb	2	; () banked
  3722  011D9C  6F9D               	movwf	??_main& (0+255),b
  3723  011D9E  519D               	movf	??_main& (0+255),w,b
  3724  011DA0  6E30               	movwf	srand@x,c
  3725  011DA2  6A31               	clrf	srand@x+1,c
  3726  011DA4  EC51  F0BB         	call	_srand	;wreg free
  3727                           
  3728                           ;main.c: 162: stack.source = ipv4_generateAutoIP();
  3729  011DA8  EC9C  F0B7         	call	_ipv4_generateAutoIP	;wreg free
  3730  011DAC  0060  F0A8  F477   	movff	?_ipv4_generateAutoIP,_stack+119
  3731  011DB2  0060  F0AC  F478   	movff	?_ipv4_generateAutoIP+1,_stack+120
  3732  011DB8  0060  F0B0  F479   	movff	?_ipv4_generateAutoIP+2,_stack+121
  3733  011DBE  0060  F0B4  F47A   	movff	?_ipv4_generateAutoIP+3,_stack+122
  3734                           
  3735                           ;main.c: 164: tcp_connection_t connection;
  3736                           ;main.c: 165: connection.srcPort = 1;
  3737  011DC4  0E00               	movlw	0
  3738  011DC6  0106               	movlb	6	; () banked
  3739  011DC8  6F1E               	movwf	(main@connection+9)& (0+255),b
  3740  011DCA  0E01               	movlw	1
  3741  011DCC  6F1D               	movwf	(main@connection+8)& (0+255),b
  3742                           
  3743                           ; BSR set to: 6
  3744                           ;main.c: 166: connection.seqNumber = (unsigned) rand();
  3745  011DCE  ECE6  F0B5         	call	_rand	;wreg free
  3746  011DD2  0060  F088  F621   	movff	?_rand,main@connection+12
  3747  011DD8  0060  F08C  F622   	movff	?_rand+1,main@connection+13
  3748  011DDE  0106               	movlb	6	; () banked
  3749  011DE0  6B23               	clrf	(main@connection+14)& (0+255),b
  3750  011DE2  6B24               	clrf	(main@connection+15)& (0+255),b
  3751                           
  3752                           ; BSR set to: 6
  3753                           ;main.c: 167: tcp_listen(&connection);
  3754  011DE4  0E15               	movlw	low main@connection
  3755  011DE6  0100               	movlb	0	; () banked
  3756  011DE8  6F6F               	movwf	tcp_listen@connection& (0+255),b
  3757  011DEA  0E06               	movlw	high main@connection
  3758  011DEC  6F70               	movwf	(tcp_listen@connection+1)& (0+255),b
  3759  011DEE  ECCE  F0A7         	call	_tcp_listen	;wreg free
  3760                           
  3761                           ;main.c: 169: udpHeader_t udp;
  3762                           ;main.c: 170: udp.srcPort = 1;
  3763  011DF2  0E00               	movlw	0
  3764  011DF4  0106               	movlb	6	; () banked
  3765  011DF6  6F0A               	movwf	(main@udp+1)& (0+255),b
  3766  011DF8  0E01               	movlw	1
  3767  011DFA  6F09               	movwf	main@udp& (0+255),b
  3768                           
  3769                           ; BSR set to: 6
  3770                           ;main.c: 171: udp.dstPort = 49666;
  3771  011DFC  0EC2               	movlw	194
  3772  011DFE  6F0C               	movwf	(main@udp+3)& (0+255),b
  3773  011E00  0E02               	movlw	2
  3774  011E02  6F0B               	movwf	(main@udp+2)& (0+255),b
  3775                           
  3776                           ; BSR set to: 6
  3777                           ;main.c: 172: udp.length = 100 + 8;
  3778  011E04  0E00               	movlw	0
  3779  011E06  6F0E               	movwf	(main@udp+5)& (0+255),b
  3780  011E08  0E6C               	movlw	108
  3781  011E0A  6F0D               	movwf	(main@udp+4)& (0+255),b
  3782  011E0C                     l696:
  3783  011E0C  0004               	clrwdt		;# 
  3784                           
  3785                           ;main.c: 180: handleStackBackgroundTasks(&stack);
  3786  011E0E  0E00               	movlw	low _stack
  3787  011E10  0101               	movlb	1	; () banked
  3788  011E12  6FF7               	movwf	handleStackBackgroundTasks@stack& (0+255),b
  3789  011E14  0E04               	movlw	high _stack
  3790  011E16  6FF8               	movwf	(handleStackBackgroundTasks@stack+1)& (0+255),b
  3791  011E18  EC00  F083         	call	_handleStackBackgroundTasks	;wreg free
  3792                           
  3793                           ;main.c: 182: printEthernetState(stack.ethernet);
  3794  011E1C  EE21  F022         	lfsr	2,_stack+34
  3795  011E20  EE00  F06F         	lfsr	0,printEthernetState@state
  3796  011E24  0E0E               	movlw	14
  3797  011E26                     u15631:
  3798  011E26  006F FF6F FFEB     	movff	16347,16363
  3799  011E2C  06E8               	decf	16360,f,c
  3800  011E2E  E2FB               	bc	u15631
  3801  011E30  EC75  F0B6         	call	_printEthernetState	;wreg free
  3802                           
  3803                           ;main.c: 183: numberToDisplay = (stack.ethernet.link == NO_LINK) ? 1000u : foo;
  3804  011E34  0104               	movlb	4	; () banked
  3805  011E36  5122               	movf	(_stack+34)& (0+255),w,b
  3806  011E38  B4D8               	btfsc	16344,2,c
  3807  011E3A  D006               	goto	l698
  3808                           
  3809                           ; BSR set to: 4
  3810  011E3C  0060  FB10  F604   	movff	_foo,_main$2547
  3811  011E42  0106               	movlb	6	; () banked
  3812  011E44  6B05               	clrf	(_main$2547+1)& (0+255),b
  3813  011E46  D005               	goto	l700
  3814  011E48                     l698:
  3815                           
  3816                           ; BSR set to: 6
  3817  011E48  0E03               	movlw	3
  3818  011E4A  0106               	movlb	6	; () banked
  3819  011E4C  6F05               	movwf	(_main$2547+1)& (0+255),b
  3820  011E4E  0EE8               	movlw	232
  3821  011E50  6F04               	movwf	_main$2547& (0+255),b
  3822  011E52                     l700:
  3823                           
  3824                           ; BSR set to: 6
  3825                           
  3826                           ; BSR set to: 6
  3827  011E52  0061  F810  F2B3   	movff	_main$2547,_numberToDisplay	;volatile
  3828  011E58  0061  F814  F2B4   	movff	_main$2547+1,_numberToDisplay+1	;volatile
  3829  011E5E  0102               	movlb	2	; () banked
  3830  011E60  6BB5               	clrf	(_numberToDisplay+2)& (0+255),b	;volatile
  3831  011E62  6BB6               	clrf	(_numberToDisplay+3)& (0+255),b	;volatile
  3832                           
  3833                           ; BSR set to: 2
  3834                           ;main.c: 187: if (unlocked) {
  3835  011E64  51C5               	movf	_unlocked& (0+255),w,b
  3836  011E66  B4D8               	btfsc	16344,2,c
  3837  011E68  D021               	goto	l702
  3838                           
  3839                           ; BSR set to: 2
  3840                           ;main.c: 188: if (stack.ethernet.link == LINK_ESTABLISHED && !stack.background.fPacketPe
      +                          nding) {
  3841  011E6A  0104               	movlb	4	; () banked
  3842  011E6C  0522               	decf	(_stack+34)& (0+255),w,b
  3843  011E6E  A4D8               	btfss	16344,2,c
  3844  011E70  D01D               	goto	l702
  3845                           
  3846                           ; BSR set to: 4
  3847  011E72  5134               	movf	(_stack+52)& (0+255),w,b
  3848  011E74  A4D8               	btfss	16344,2,c
  3849  011E76  D01A               	goto	l702
  3850                           
  3851                           ; BSR set to: 4
  3852                           ;main.c: 189: foo++;
  3853  011E78  0102               	movlb	2	; () banked
  3854  011E7A  2BC4               	incf	_foo& (0+255),f,b
  3855                           
  3856                           ; BSR set to: 2
  3857                           ;main.c: 190: udp_sendPacket(udp, ipDst);
  3858  011E7C  EE21  F209         	lfsr	2,main@udp
  3859  011E80  EE00  F0A2         	lfsr	0,udp_sendPacket@header
  3860  011E84  0E07               	movlw	7
  3861  011E86                     u15681:
  3862  011E86  006F FF6F FFEB     	movff	16347,16363
  3863  011E8C  06E8               	decf	16360,f,c
  3864  011E8E  E2FB               	bc	u15681
  3865  011E90  0061  F844  F0AA   	movff	main@ipDst,udp_sendPacket@dst
  3866  011E96  0061  F848  F0AB   	movff	main@ipDst+1,udp_sendPacket@dst+1
  3867  011E9C  0061  F84C  F0AC   	movff	main@ipDst+2,udp_sendPacket@dst+2
  3868  011EA2  0061  F850  F0AD   	movff	main@ipDst+3,udp_sendPacket@dst+3
  3869  011EA8  EC79  F0A0         	call	_udp_sendPacket	;wreg free
  3870  011EAC                     l702:
  3871                           
  3872                           ;main.c: 191: }
  3873                           ;main.c: 192: }
  3874                           ;main.c: 195: if (buttonState) {
  3875  011EAC  0102               	movlb	2	; () banked
  3876  011EAE  51DB               	movf	_buttonState& (0+255),w,b	;volatile
  3877  011EB0  B4D8               	btfsc	16344,2,c
  3878  011EB2  D7AC               	goto	l696
  3879                           
  3880                           ; BSR set to: 2
  3881                           ;main.c: 196: buttonState = 0;
  3882  011EB4  0E00               	movlw	0
  3883  011EB6  6FDB               	movwf	_buttonState& (0+255),b	;volatile
  3884                           
  3885                           ;main.c: 197: foo = 0;
  3886  011EB8  0E00               	movlw	0
  3887  011EBA  6FC4               	movwf	_foo& (0+255),b
  3888                           
  3889                           ;main.c: 198: unlocked = !unlocked;
  3890  011EBC  51C5               	movf	_unlocked& (0+255),w,b
  3891  011EBE  A4D8               	btfss	16344,2,c
  3892  011EC0  D002               	goto	u15700
  3893  011EC2  0E01               	movlw	1
  3894  011EC4  D001               	goto	u15710
  3895  011EC6                     u15700:
  3896  011EC6  0E00               	movlw	0
  3897  011EC8                     u15710:
  3898  011EC8  6FC5               	movwf	_unlocked& (0+255),b
  3899                           
  3900                           ; BSR set to: 2
  3901                           
  3902                           ; BSR set to: 2
  3903  011ECA  D7A0               	goto	l696
  3904  011ECC                     __end_of_main:
  3905                           	opt stack 0
  3906                           
  3907 ;; *************** function _udp_sendPacket *****************
  3908 ;; Defined at:
  3909 ;;		line 29 in file "src/stack/protocols/udp.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  header          8   66[BANK0 ] struct udpHeader
  3912 ;;  dst             4   74[BANK0 ] struct ipv4_address
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  i               2   98[BANK1 ] unsigned int 
  3915 ;;  ipPacket       66  100[BANK1 ] struct ipv4_packet
  3916 ;;  headerBuf      64    0[BANK1 ] unsigned char [64]
  3917 ;;  ipHeaderBuf    32   64[BANK1 ] unsigned char [32]
  3918 ;;  foo             2   96[BANK1 ] unsigned int 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  3   66[BANK0 ] struct error
  3921 ;; Registers used:
  3922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3928 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3929 ;;      Locals:         0       0     166       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3930 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3931 ;;      Totals:         0      14     166       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3932 ;;Total ram usage:      180 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:   10
  3935 ;; This function calls:
  3936 ;;		_ipv4_calculateHeaderChecksum
  3937 ;;		_ipv4_getIPSourceAddress
  3938 ;;		_ipv4_streamToTransmissionBuffer
  3939 ;;		_ipv4_txFrameRequest
  3940 ;;		_ipv4_writeHeaderIntoBuffer
  3941 ;; This function is called by:
  3942 ;;		_main
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text1
  3947  0140F2                     __ptext1:
  3948                           	opt stack 0
  3949  0140F2                     _udp_sendPacket:
  3950                           	opt stack 20
  3951                           
  3952                           ;udp.c: 30: uint8_t headerBuf[64];
  3953                           ;udp.c: 31: uint8_t ipHeaderBuf[32];
  3954                           ;udp.c: 33: uint8_t static start=0;
  3955                           ;udp.c: 35: ipv4_packet_t ipPacket;
  3956                           ;udp.c: 36: ipPacket.ipv4Header.headerLength = 5;
  3957                           
  3958                           ; BSR set to: 2
  3959                           ;incstack = 0
  3960  0140F2  0E05               	movlw	5
  3961  0140F4  0101               	movlb	1	; () banked
  3962  0140F6  6F65               	movwf	(udp_sendPacket@ipPacket+1)& (0+255),b
  3963                           
  3964                           ;udp.c: 37: ipPacket.ipv4Header.dscp = 0x00;
  3965  0140F8  0E00               	movlw	0
  3966  0140FA  6F66               	movwf	(udp_sendPacket@ipPacket+2)& (0+255),b
  3967                           
  3968                           ;udp.c: 38: ipPacket.ipv4Header.ecn = 0x00;
  3969  0140FC  0E00               	movlw	0
  3970  0140FE  6F67               	movwf	(udp_sendPacket@ipPacket+3)& (0+255),b
  3971                           
  3972                           ;udp.c: 39: ipPacket.ipv4Header.flags = 0x00;
  3973  014100  0E00               	movlw	0
  3974  014102  6F6C               	movwf	(udp_sendPacket@ipPacket+8)& (0+255),b
  3975                           
  3976                           ;udp.c: 40: ipPacket.ipv4Header.fragmentOffset = 0x0000;
  3977  014104  0E00               	movlw	0
  3978  014106  6F6E               	movwf	(udp_sendPacket@ipPacket+10)& (0+255),b
  3979  014108  0E00               	movlw	0
  3980  01410A  6F6D               	movwf	(udp_sendPacket@ipPacket+9)& (0+255),b
  3981                           
  3982                           ;udp.c: 41: ipPacket.ipv4Header.protocol = IPv4_PROTOCOL_UDP;
  3983  01410C  0E11               	movlw	17
  3984  01410E  6F70               	movwf	(udp_sendPacket@ipPacket+12)& (0+255),b
  3985                           
  3986                           ; BSR set to: 1
  3987                           ;udp.c: 42: ipPacket.ipv4Header.destination = dst;
  3988  014110  0060  F2A8  F177   	movff	udp_sendPacket@dst,udp_sendPacket@ipPacket+19
  3989  014116  0060  F2AC  F178   	movff	udp_sendPacket@dst+1,udp_sendPacket@ipPacket+20
  3990  01411C  0060  F2B0  F179   	movff	udp_sendPacket@dst+2,udp_sendPacket@ipPacket+21
  3991  014122  0060  F2B4  F17A   	movff	udp_sendPacket@dst+3,udp_sendPacket@ipPacket+22
  3992                           
  3993                           ; BSR set to: 1
  3994                           ;udp.c: 43: ipPacket.ipv4Header.source = ipv4_getIPSourceAddress();
  3995  014128  ECFB  F0BA         	call	_ipv4_getIPSourceAddress	;wreg free
  3996  01412C  0060  F058  F173   	movff	?_ipv4_getIPSourceAddress,udp_sendPacket@ipPacket+15
  3997  014132  0060  F05C  F174   	movff	?_ipv4_getIPSourceAddress+1,udp_sendPacket@ipPacket+16
  3998  014138  0060  F060  F175   	movff	?_ipv4_getIPSourceAddress+2,udp_sendPacket@ipPacket+17
  3999  01413E  0060  F064  F176   	movff	?_ipv4_getIPSourceAddress+3,udp_sendPacket@ipPacket+18
  4000                           
  4001                           ;udp.c: 44: ipPacket.ipv4Header.totalLength = header.length + 20;
  4002  014144  0E14               	movlw	20
  4003  014146  0100               	movlb	0	; () banked
  4004  014148  25A6               	addwf	(udp_sendPacket@header+4)& (0+255),w,b
  4005  01414A  0101               	movlb	1	; () banked
  4006  01414C  6F68               	movwf	(udp_sendPacket@ipPacket+4)& (0+255),b
  4007  01414E  0E00               	movlw	0
  4008  014150  0100               	movlb	0	; () banked
  4009  014152  21A7               	addwfc	(udp_sendPacket@header+5)& (0+255),w,b
  4010  014154  0101               	movlb	1	; () banked
  4011  014156  6F69               	movwf	(udp_sendPacket@ipPacket+5)& (0+255),b
  4012                           
  4013                           ; BSR set to: 1
  4014                           ;udp.c: 45: ipPacket.ipv4Header.timeToLive = 255;
  4015  014158  696F               	setf	(udp_sendPacket@ipPacket+11)& (0+255),b
  4016                           
  4017                           ; BSR set to: 1
  4018                           ;udp.c: 46: ipPacket.ipv4Header.version = 4;
  4019  01415A  0E04               	movlw	4
  4020  01415C  6F64               	movwf	udp_sendPacket@ipPacket& (0+255),b
  4021                           
  4022                           ; BSR set to: 1
  4023                           ;udp.c: 48: ipv4_calculateHeaderChecksum(&ipPacket.ipv4Header);
  4024  01415E  0E64               	movlw	low udp_sendPacket@ipPacket
  4025  014160  6E16               	movwf	ipv4_calculateHeaderChecksum@header,c
  4026  014162  0E01               	movlw	high udp_sendPacket@ipPacket
  4027  014164  6E17               	movwf	ipv4_calculateHeaderChecksum@header+1,c
  4028  014166  EC8C  F093         	call	_ipv4_calculateHeaderChecksum	;wreg free
  4029                           
  4030                           ;udp.c: 49: ipv4_writeHeaderIntoBuffer(ipPacket.ipv4Header, &ipHeaderBuf);
  4031  01416A  EE20  F164         	lfsr	2,udp_sendPacket@ipPacket
  4032  01416E  EE00  F016         	lfsr	0,ipv4_writeHeaderIntoBuffer@header
  4033  014172  0E16               	movlw	22
  4034  014174                     u15451:
  4035  014174  006F FF6F FFEB     	movff	16347,16363
  4036  01417A  06E8               	decf	16360,f,c
  4037  01417C  E2FB               	bc	u15451
  4038  01417E  0E40               	movlw	low udp_sendPacket@ipHeaderBuf
  4039  014180  6E2D               	movwf	ipv4_writeHeaderIntoBuffer@ptr,c
  4040  014182  0E01               	movlw	high udp_sendPacket@ipHeaderBuf
  4041  014184  6E2E               	movwf	ipv4_writeHeaderIntoBuffer@ptr+1,c
  4042  014186  EC1D  F0A3         	call	_ipv4_writeHeaderIntoBuffer	;wreg free
  4043                           
  4044                           ;udp.c: 51: ipv4_txFrameRequest(&ipPacket);
  4045  01418A  0E64               	movlw	low udp_sendPacket@ipPacket
  4046  01418C  0100               	movlb	0	; () banked
  4047  01418E  6F8A               	movwf	ipv4_txFrameRequest@packet& (0+255),b
  4048  014190  0E01               	movlw	high udp_sendPacket@ipPacket
  4049  014192  6F8B               	movwf	(ipv4_txFrameRequest@packet+1)& (0+255),b
  4050  014194  EC97  F0A4         	call	_ipv4_txFrameRequest	;wreg free
  4051                           
  4052                           ;udp.c: 54: header.checksum = 0x0000;
  4053  014198  0E00               	movlw	0
  4054  01419A  0100               	movlb	0	; () banked
  4055  01419C  6FA9               	movwf	(udp_sendPacket@header+7)& (0+255),b
  4056  01419E  0E00               	movlw	0
  4057  0141A0  6FA8               	movwf	(udp_sendPacket@header+6)& (0+255),b
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;udp.c: 56: headerBuf[0] = (header.srcPort & 0xff00) >> 8;
  4061  0141A2  51A3               	movf	(udp_sendPacket@header+1)& (0+255),w,b
  4062  0141A4  0101               	movlb	1	; () banked
  4063  0141A6  6F00               	movwf	udp_sendPacket@headerBuf& (0+255),b
  4064                           
  4065                           ; BSR set to: 1
  4066                           ;udp.c: 57: headerBuf[1] = (header.srcPort & 0x00ff);
  4067  0141A8  0060  F288  F101   	movff	udp_sendPacket@header,udp_sendPacket@headerBuf+1
  4068                           
  4069                           ; BSR set to: 1
  4070                           ;udp.c: 58: headerBuf[2] = (header.dstPort & 0xff00) >> 8;
  4071  0141AE  0100               	movlb	0	; () banked
  4072  0141B0  51A5               	movf	(udp_sendPacket@header+3)& (0+255),w,b
  4073  0141B2  0101               	movlb	1	; () banked
  4074  0141B4  6F02               	movwf	(udp_sendPacket@headerBuf+2)& (0+255),b
  4075                           
  4076                           ; BSR set to: 1
  4077                           ;udp.c: 59: headerBuf[3] = (header.dstPort & 0x00ff);
  4078  0141B6  0060  F290  F103   	movff	udp_sendPacket@header+2,udp_sendPacket@headerBuf+3
  4079                           
  4080                           ; BSR set to: 1
  4081                           ;udp.c: 60: headerBuf[4] = (header.length & 0xff00) >> 8;
  4082  0141BC  0100               	movlb	0	; () banked
  4083  0141BE  51A7               	movf	(udp_sendPacket@header+5)& (0+255),w,b
  4084  0141C0  0101               	movlb	1	; () banked
  4085  0141C2  6F04               	movwf	(udp_sendPacket@headerBuf+4)& (0+255),b
  4086                           
  4087                           ; BSR set to: 1
  4088                           ;udp.c: 61: headerBuf[5] = (header.length & 0x00ff);
  4089  0141C4  0060  F298  F105   	movff	udp_sendPacket@header+4,udp_sendPacket@headerBuf+5
  4090                           
  4091                           ; BSR set to: 1
  4092                           ;udp.c: 62: headerBuf[6] = (header.checksum & 0xff00) >> 8;
  4093  0141CA  0100               	movlb	0	; () banked
  4094  0141CC  51A9               	movf	(udp_sendPacket@header+7)& (0+255),w,b
  4095  0141CE  0101               	movlb	1	; () banked
  4096  0141D0  6F06               	movwf	(udp_sendPacket@headerBuf+6)& (0+255),b
  4097                           
  4098                           ; BSR set to: 1
  4099                           ;udp.c: 63: headerBuf[7] = (header.checksum & 0x00ff);
  4100  0141D2  0060  F2A0  F107   	movff	udp_sendPacket@header+6,udp_sendPacket@headerBuf+7
  4101                           
  4102                           ; BSR set to: 1
  4103                           ;udp.c: 66: uint16_t foo = start++;
  4104  0141D8  0060  F0F4  F160   	movff	udp_sendPacket@start,udp_sendPacket@foo
  4105  0141DE  6B61               	clrf	(udp_sendPacket@foo+1)& (0+255),b
  4106                           
  4107                           ; BSR set to: 1
  4108  0141E0  2A3D               	incf	udp_sendPacket@start,f,c
  4109                           
  4110                           ; BSR set to: 1
  4111                           ;udp.c: 67: for (uint16_t i = 0; i < ipPacket.ipv4Header.totalLength; i++) {
  4112  0141E2  0E00               	movlw	0
  4113  0141E4  6F63               	movwf	(udp_sendPacket@i+1)& (0+255),b
  4114  0141E6  0E00               	movlw	0
  4115  0141E8  6F62               	movwf	udp_sendPacket@i& (0+255),b
  4116  0141EA  D066               	goto	l1493
  4117  0141EC                     
  4118                           ; BSR set to: 1
  4119                           ;udp.c: 68: if (i < ipPacket.ipv4Header.headerLength * 4) {
  4120                           
  4121                           ; BSR set to: 1
  4122  0141EC  5165               	movf	(udp_sendPacket@ipPacket+1)& (0+255),w,b
  4123  0141EE  0D04               	mullw	4
  4124  0141F0  50F3               	movf	16371,w,c
  4125  0141F2  5D62               	subwf	udp_sendPacket@i& (0+255),w,b
  4126  0141F4  50F4               	movf	16372,w,c
  4127  0141F6  5963               	subwfb	(udp_sendPacket@i+1)& (0+255),w,b
  4128  0141F8  B0D8               	btfsc	16344,0,c
  4129  0141FA  D014               	goto	l1495
  4130                           
  4131                           ; BSR set to: 1
  4132                           ;udp.c: 69: ipv4_streamToTransmissionBuffer(ipHeaderBuf[i], ipPacket);
  4133  0141FC  EE20  F164         	lfsr	2,udp_sendPacket@ipPacket
  4134  014200  EE00  F060         	lfsr	0,ipv4_streamToTransmissionBuffer@packet
  4135  014204  0E41               	movlw	65
  4136  014206                     u15471:
  4137  014206  006F FF6F FFEB     	movff	16347,16363
  4138  01420C  06E8               	decf	16360,f,c
  4139  01420E  E2FB               	bc	u15471
  4140  014210  0E40               	movlw	low udp_sendPacket@ipHeaderBuf
  4141  014212  2562               	addwf	udp_sendPacket@i& (0+255),w,b
  4142  014214  6ED9               	movwf	16345,c
  4143  014216  0E01               	movlw	high udp_sendPacket@ipHeaderBuf
  4144  014218  2163               	addwfc	(udp_sendPacket@i+1)& (0+255),w,b
  4145  01421A  6EDA               	movwf	16346,c
  4146  01421C  50DF               	movf	16351,w,c
  4147  01421E  ECEC  F0BA         	call	_ipv4_streamToTransmissionBuffer
  4148                           
  4149                           ;udp.c: 70: } else if (i < ipPacket.ipv4Header.headerLength * 4 + 8) {
  4150  014222  D047               	goto	l1498
  4151  014224                     l1495:
  4152  014224  0101               	movlb	1	; () banked
  4153  014226  5165               	movf	(udp_sendPacket@ipPacket+1)& (0+255),w,b
  4154  014228  0100               	movlb	0	; () banked
  4155  01422A  6FAE               	movwf	??_udp_sendPacket& (0+255),b
  4156  01422C  6BAF               	clrf	(??_udp_sendPacket+1)& (0+255),b
  4157  01422E  90D8               	bcf	16344,0,c
  4158  014230  37AE               	rlcf	??_udp_sendPacket& (0+255),f,b
  4159  014232  37AF               	rlcf	(??_udp_sendPacket+1)& (0+255),f,b
  4160  014234  90D8               	bcf	16344,0,c
  4161  014236  37AE               	rlcf	??_udp_sendPacket& (0+255),f,b
  4162  014238  37AF               	rlcf	(??_udp_sendPacket+1)& (0+255),f,b
  4163  01423A  0E08               	movlw	8
  4164  01423C  27AE               	addwf	??_udp_sendPacket& (0+255),f,b
  4165  01423E  0E00               	movlw	0
  4166  014240  23AF               	addwfc	(??_udp_sendPacket+1)& (0+255),f,b
  4167  014242  51AE               	movf	??_udp_sendPacket& (0+255),w,b
  4168  014244  0101               	movlb	1	; () banked
  4169  014246  5D62               	subwf	udp_sendPacket@i& (0+255),w,b
  4170  014248  0100               	movlb	0	; () banked
  4171  01424A  51AF               	movf	(??_udp_sendPacket+1)& (0+255),w,b
  4172  01424C  0101               	movlb	1	; () banked
  4173  01424E  5963               	subwfb	(udp_sendPacket@i+1)& (0+255),w,b
  4174  014250  B0D8               	btfsc	16344,0,c
  4175  014252  D01E               	goto	l1497
  4176                           
  4177                           ; BSR set to: 1
  4178                           ;udp.c: 71: ipv4_streamToTransmissionBuffer(headerBuf[i - ipPacket.ipv4Header.headerLeng
      +                          th * 4], ipPacket);
  4179  014254  EE20  F164         	lfsr	2,udp_sendPacket@ipPacket
  4180  014258  EE00  F060         	lfsr	0,ipv4_streamToTransmissionBuffer@packet
  4181  01425C  0E41               	movlw	65
  4182  01425E                     u15491:
  4183  01425E  006F FF6F FFEB     	movff	16347,16363
  4184  014264  06E8               	decf	16360,f,c
  4185  014266  E2FB               	bc	u15491
  4186  014268  5165               	movf	(udp_sendPacket@ipPacket+1)& (0+255),w,b
  4187  01426A  0D04               	mullw	4
  4188  01426C  1EF3               	comf	16371,f,c
  4189  01426E  1EF4               	comf	16372,f,c
  4190  014270  4AF3               	infsnz	16371,f,c
  4191  014272  2AF4               	incf	16372,f,c
  4192  014274  5162               	movf	udp_sendPacket@i& (0+255),w,b
  4193  014276  26F3               	addwf	16371,f,c
  4194  014278  5163               	movf	(udp_sendPacket@i+1)& (0+255),w,b
  4195  01427A  22F4               	addwfc	16372,f,c
  4196  01427C  0E00               	movlw	low udp_sendPacket@headerBuf
  4197  01427E  24F3               	addwf	16371,w,c
  4198  014280  6ED9               	movwf	16345,c
  4199  014282  0E01               	movlw	high udp_sendPacket@headerBuf
  4200  014284  20F4               	addwfc	16372,w,c
  4201  014286  6EDA               	movwf	16346,c
  4202  014288  50DF               	movf	16351,w,c
  4203  01428A  ECEC  F0BA         	call	_ipv4_streamToTransmissionBuffer
  4204                           
  4205                           ;udp.c: 72: } else {
  4206  01428E  D011               	goto	l1498
  4207  014290                     l1497:
  4208                           
  4209                           ;udp.c: 73: ipv4_streamToTransmissionBuffer(foo++, ipPacket);
  4210  014290  EE20  F164         	lfsr	2,udp_sendPacket@ipPacket
  4211  014294  EE00  F060         	lfsr	0,ipv4_streamToTransmissionBuffer@packet
  4212  014298  0E41               	movlw	65
  4213  01429A                     u15501:
  4214  01429A  006F FF6F FFEB     	movff	16347,16363
  4215  0142A0  06E8               	decf	16360,f,c
  4216  0142A2  E2FB               	bc	u15501
  4217  0142A4  0101               	movlb	1	; () banked
  4218  0142A6  5160               	movf	udp_sendPacket@foo& (0+255),w,b
  4219  0142A8  ECEC  F0BA         	call	_ipv4_streamToTransmissionBuffer
  4220  0142AC  0101               	movlb	1	; () banked
  4221  0142AE  4B60               	infsnz	udp_sendPacket@foo& (0+255),f,b
  4222  0142B0  2B61               	incf	(udp_sendPacket@foo+1)& (0+255),f,b
  4223  0142B2                     l1498:
  4224                           
  4225                           ; BSR set to: 1
  4226                           
  4227                           ; BSR set to: 1
  4228  0142B2  0101               	movlb	1	; () banked
  4229  0142B4  4B62               	infsnz	udp_sendPacket@i& (0+255),f,b
  4230  0142B6  2B63               	incf	(udp_sendPacket@i+1)& (0+255),f,b
  4231  0142B8                     l1493:
  4232                           
  4233                           ; BSR set to: 1
  4234                           
  4235                           ; BSR set to: 1
  4236  0142B8  5168               	movf	(udp_sendPacket@ipPacket+4)& (0+255),w,b
  4237  0142BA  5D62               	subwf	udp_sendPacket@i& (0+255),w,b
  4238  0142BC  5169               	movf	(udp_sendPacket@ipPacket+5)& (0+255),w,b
  4239  0142BE  5963               	subwfb	(udp_sendPacket@i+1)& (0+255),w,b
  4240  0142C0  A0D8               	btfss	16344,0,c
  4241  0142C2  D794               	goto	l1494
  4242                           
  4243                           ; BSR set to: 1
  4244                           ;udp.c: 74: }
  4245                           ;udp.c: 75: }
  4246                           ;udp.c: 77: stack.pendingPacketToSend = ipPacket;
  4247                           
  4248                           ; BSR set to: 1
  4249  0142C4  EE20  F164         	lfsr	2,udp_sendPacket@ipPacket
  4250  0142C8  EE11  F035         	lfsr	1,_stack+53
  4251  0142CC  0E41               	movlw	65
  4252  0142CE                     u15521:
  4253  0142CE  006F FF6F FFE3     	movff	16347,16355
  4254  0142D4  06E8               	decf	16360,f,c
  4255  0142D6  E2FB               	bc	u15521
  4256                           
  4257                           ; BSR set to: 1
  4258                           ;udp.c: 78: stack.background.fPacketPending = 1u;
  4259  0142D8  0E01               	movlw	1
  4260  0142DA  0104               	movlb	4	; () banked
  4261  0142DC  6F34               	movwf	(_stack+52)& (0+255),b
  4262                           
  4263                           ; BSR set to: 4
  4264  0142DE  0012               	return		;funcret
  4265  0142E0                     __end_of_udp_sendPacket:
  4266                           	opt stack 0
  4267                           
  4268 ;; *************** function _tcp_listen *****************
  4269 ;; Defined at:
  4270 ;;		line 143 in file "src/stack/protocols/tcp.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  connection      2   15[BANK0 ] PTR struct tcp_connectio
  4273 ;;		 -> main@connection(17), 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  3   15[BANK0 ] struct error
  4278 ;; Registers used:
  4279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4285 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4287 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4288 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4289 ;;Total ram usage:        6 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    8
  4292 ;; This function calls:
  4293 ;;		_UARTTransmitText
  4294 ;;		___wmul
  4295 ;;		_intToString
  4296 ;;		_rand
  4297 ;; This function is called by:
  4298 ;;		_main
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text2
  4303  014F9C                     __ptext2:
  4304                           	opt stack 0
  4305  014F9C                     _tcp_listen:
  4306                           	opt stack 22
  4307                           
  4308                           ;tcp.c: 144: connection->state = TCP_STATE_LISTEN;
  4309                           
  4310                           ; BSR set to: 4
  4311                           ;incstack = 0
  4312  014F9C  0100               	movlb	0	; () banked
  4313  014F9E  EE20 F010          	lfsr	2,16
  4314  014FA2  516F               	movf	tcp_listen@connection& (0+255),w,b
  4315  014FA4  26D9               	addwf	16345,f,c
  4316  014FA6  5170               	movf	(tcp_listen@connection+1)& (0+255),w,b
  4317  014FA8  22DA               	addwfc	16346,f,c
  4318  014FAA  0E00               	movlw	0
  4319  014FAC  6EDF               	movwf	16351,c
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;tcp.c: 145: connection->seqNumber = rand() * rand();
  4323  014FAE  ECE6  F0B5         	call	_rand	;wreg free
  4324  014FB2  0060  F088  F024   	movff	?_rand,___wmul@multiplier
  4325  014FB8  0060  F08C  F025   	movff	?_rand+1,___wmul@multiplier+1
  4326  014FBE  ECE6  F0B5         	call	_rand	;wreg free
  4327  014FC2  0060  F088  F026   	movff	?_rand,___wmul@multiplicand
  4328  014FC8  0060  F08C  F027   	movff	?_rand+1,___wmul@multiplicand+1
  4329  014FCE  EC94  F0B9         	call	___wmul	;wreg free
  4330  014FD2  0060  F090  F071   	movff	?___wmul,??_tcp_listen
  4331  014FD8  0060  F094  F072   	movff	?___wmul+1,??_tcp_listen+1
  4332  014FDE  0E00               	movlw	0
  4333  014FE0  0100               	movlb	0	; () banked
  4334  014FE2  BF72               	btfsc	(??_tcp_listen+1)& (0+255),7,b
  4335  014FE4  0EFF               	movlw	255
  4336  014FE6  6F73               	movwf	(??_tcp_listen+2)& (0+255),b
  4337  014FE8  6F74               	movwf	(??_tcp_listen+3)& (0+255),b
  4338  014FEA  EE20 F00C          	lfsr	2,12
  4339  014FEE  516F               	movf	tcp_listen@connection& (0+255),w,b
  4340  014FF0  26D9               	addwf	16345,f,c
  4341  014FF2  5170               	movf	(tcp_listen@connection+1)& (0+255),w,b
  4342  014FF4  22DA               	addwfc	16346,f,c
  4343  014FF6  0060  F1C7  FFDE   	movff	??_tcp_listen,16350
  4344  014FFC  0060  F1CB  FFDE   	movff	??_tcp_listen+1,16350
  4345  015002  0060  F1CF  FFDE   	movff	??_tcp_listen+2,16350
  4346  015008  0060  F1D3  FFDE   	movff	??_tcp_listen+3,16350
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;tcp.c: 146: tcpListeners[0] = *connection;
  4350  01500E  0060  F1BF  FFD9   	movff	tcp_listen@connection,16345
  4351  015014  0060  F1C3  FFDA   	movff	tcp_listen@connection+1,16346
  4352  01501A  EE11  F100         	lfsr	1,_tcpListeners
  4353  01501E  0E10               	movlw	16
  4354  015020                     u15401:
  4355  015020  006F FF6F FFE3     	movff	16347,16355
  4356  015026  06E8               	decf	16360,f,c
  4357  015028  E2FB               	bc	u15401
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;tcp.c: 148: UARTTransmitText("[TCP]: Listening on Port ");
  4361  01502A  0E85               	movlw	low STR_126
  4362  01502C  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  4363  01502E  0EFD               	movlw	high STR_126
  4364  015030  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4365  015032  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  4366                           
  4367                           ;tcp.c: 149: UARTTransmitText(intToString(connection->srcPort, 10));
  4368  015036  0100               	movlb	0	; () banked
  4369  015038  EE20 F008          	lfsr	2,8
  4370  01503C  516F               	movf	tcp_listen@connection& (0+255),w,b
  4371  01503E  26D9               	addwf	16345,f,c
  4372  015040  5170               	movf	(tcp_listen@connection+1)& (0+255),w,b
  4373  015042  22DA               	addwfc	16346,f,c
  4374  015044  006F FF78  F071    	movff	16350,??_tcp_listen
  4375  01504A  006F FF74  F072    	movff	16349,??_tcp_listen+1
  4376  015050  0060  F1C4  F032   	movff	??_tcp_listen,intToString@val
  4377  015056  0060  F1C8  F033   	movff	??_tcp_listen+1,intToString@val+1
  4378  01505C  6A34               	clrf	intToString@val+2,c
  4379  01505E  6A35               	clrf	intToString@val+3,c
  4380  015060  0E0A               	movlw	10
  4381  015062  6E36               	movwf	intToString@b,c
  4382  015064  ECA5  F0B8         	call	_intToString	;wreg free
  4383  015068  0060  F0C8  F06D   	movff	?_intToString,UARTTransmitText@str
  4384  01506E  0060  F0CC  F06E   	movff	?_intToString+1,UARTTransmitText@str+1
  4385  015074  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  4386                           
  4387                           ;tcp.c: 150: UARTTransmitText(" (Seq= ");
  4388  015078  0E75               	movlw	low STR_127
  4389  01507A  0100               	movlb	0	; () banked
  4390  01507C  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  4391  01507E  0EFF               	movlw	high STR_127
  4392  015080  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4393  015082  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  4394                           
  4395                           ;tcp.c: 151: UARTTransmitText(intToString(connection->seqNumber, 10));
  4396  015086  0100               	movlb	0	; () banked
  4397  015088  EE20 F00C          	lfsr	2,12
  4398  01508C  516F               	movf	tcp_listen@connection& (0+255),w,b
  4399  01508E  26D9               	addwf	16345,f,c
  4400  015090  5170               	movf	(tcp_listen@connection+1)& (0+255),w,b
  4401  015092  22DA               	addwfc	16346,f,c
  4402  015094  006F FF78  F032    	movff	16350,intToString@val
  4403  01509A  006F FF78  F033    	movff	16350,intToString@val+1
  4404  0150A0  006F FF78  F034    	movff	16350,intToString@val+2
  4405  0150A6  006F FF78  F035    	movff	16350,intToString@val+3
  4406  0150AC  0E0A               	movlw	10
  4407  0150AE  6E36               	movwf	intToString@b,c
  4408  0150B0  ECA5  F0B8         	call	_intToString	;wreg free
  4409  0150B4  0060  F0C8  F06D   	movff	?_intToString,UARTTransmitText@str
  4410  0150BA  0060  F0CC  F06E   	movff	?_intToString+1,UARTTransmitText@str+1
  4411  0150C0  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  4412                           
  4413                           ;tcp.c: 152: UARTTransmitText(")\n\r");
  4414  0150C4  0EDA               	movlw	low STR_128
  4415  0150C6  0100               	movlb	0	; () banked
  4416  0150C8  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  4417  0150CA  0EFF               	movlw	high STR_128
  4418  0150CC  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4419  0150CE  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  4420  0150D2  0012               	return		;funcret
  4421  0150D4                     __end_of_tcp_listen:
  4422                           	opt stack 0
  4423                           
  4424 ;; *************** function _stack_init *****************
  4425 ;; Defined at:
  4426 ;;		line 27 in file "src/stack/stack.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;		None
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  err             3   35[COMRAM] struct error
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  3  579[None  ] struct error
  4433 ;; Registers used:
  4434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4441 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4443 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4444 ;;Total ram usage:        3 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    6
  4447 ;; This function calls:
  4448 ;;		_arp_init
  4449 ;;		_ipv4_init
  4450 ;;		_tcp_init
  4451 ;; This function is called by:
  4452 ;;		_main
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text3
  4457  01771E                     __ptext3:
  4458                           	opt stack 0
  4459  01771E                     _stack_init:
  4460                           	opt stack 24
  4461                           
  4462                           ;stack.c: 28: error_t err;
  4463                           ;stack.c: 29: arp_init();
  4464                           
  4465                           ;incstack = 0
  4466  01771E  EC0C  F0B1         	call	_arp_init	;wreg free
  4467                           
  4468                           ;stack.c: 30: ipv4_init();
  4469  017722  ECBF  F0BA         	call	_ipv4_init	;wreg free
  4470                           
  4471                           ;stack.c: 31: tcp_init();
  4472  017726  ECA0  F0B1         	call	_tcp_init	;wreg free
  4473  01772A  0012               	return	
  4474  01772C                     __end_of_stack_init:
  4475                           	opt stack 0
  4476                           
  4477 ;; *************** function _tcp_init *****************
  4478 ;; Defined at:
  4479 ;;		line 287 in file "src/stack/protocols/tcp.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;		None
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  i               1   21[COMRAM] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      void 
  4486 ;; Registers used:
  4487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4497 ;;Total ram usage:        1 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    4
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_stack_init
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text4
  4508  016340                     __ptext4:
  4509                           	opt stack 0
  4510  016340                     _tcp_init:
  4511                           	opt stack 25
  4512                           
  4513                           ;tcp.c: 288: for (uint8_t i = 0; i < 12; i++) {
  4514                           
  4515                           ;incstack = 0
  4516  016340  0E00               	movlw	0
  4517  016342  6E16               	movwf	tcp_init@i,c
  4518  016344                     l12242:
  4519  016344  0E0B               	movlw	11
  4520  016346  6416               	cpfsgt	tcp_init@i,c
  4521  016348  D001               	goto	l1472
  4522  01634A  0012               	return	
  4523  01634C                     l1472:
  4524                           
  4525                           ;tcp.c: 289: tcpListeners[i].seqNumber = 0;
  4526  01634C  5016               	movf	tcp_init@i,w,c
  4527  01634E  0D11               	mullw	17
  4528  016350  0E0C               	movlw	12
  4529  016352  26F3               	addwf	16371,f,c
  4530  016354  0E00               	movlw	0
  4531  016356  22F4               	addwfc	16372,f,c
  4532  016358  0E00               	movlw	low _tcpListeners
  4533  01635A  24F3               	addwf	16371,w,c
  4534  01635C  6ED9               	movwf	16345,c
  4535  01635E  0E05               	movlw	high _tcpListeners
  4536  016360  20F4               	addwfc	16372,w,c
  4537  016362  6EDA               	movwf	16346,c
  4538  016364  6ADE               	clrf	16350,c
  4539  016366  6ADE               	clrf	16350,c
  4540  016368  6ADE               	clrf	16350,c
  4541  01636A  6ADD               	clrf	16349,c
  4542                           
  4543                           ;tcp.c: 290: tcpListeners[i].srcPort = 0;
  4544  01636C  5016               	movf	tcp_init@i,w,c
  4545  01636E  0D11               	mullw	17
  4546  016370  0E08               	movlw	8
  4547  016372  26F3               	addwf	16371,f,c
  4548  016374  0E00               	movlw	0
  4549  016376  22F4               	addwfc	16372,f,c
  4550  016378  0E00               	movlw	low _tcpListeners
  4551  01637A  24F3               	addwf	16371,w,c
  4552  01637C  6ED9               	movwf	16345,c
  4553  01637E  0E05               	movlw	high _tcpListeners
  4554  016380  20F4               	addwfc	16372,w,c
  4555  016382  6EDA               	movwf	16346,c
  4556  016384  0E00               	movlw	0
  4557  016386  6EDE               	movwf	16350,c
  4558  016388  0E00               	movlw	0
  4559  01638A  6EDD               	movwf	16349,c
  4560                           
  4561                           ;tcp.c: 291: tcpListeners[i].dstPort = 0;
  4562  01638C  5016               	movf	tcp_init@i,w,c
  4563  01638E  0D11               	mullw	17
  4564  016390  0E0A               	movlw	10
  4565  016392  26F3               	addwf	16371,f,c
  4566  016394  0E00               	movlw	0
  4567  016396  22F4               	addwfc	16372,f,c
  4568  016398  0E00               	movlw	low _tcpListeners
  4569  01639A  24F3               	addwf	16371,w,c
  4570  01639C  6ED9               	movwf	16345,c
  4571  01639E  0E05               	movlw	high _tcpListeners
  4572  0163A0  20F4               	addwfc	16372,w,c
  4573  0163A2  6EDA               	movwf	16346,c
  4574  0163A4  0E00               	movlw	0
  4575  0163A6  6EDE               	movwf	16350,c
  4576  0163A8  0E00               	movlw	0
  4577  0163AA  6EDD               	movwf	16349,c
  4578                           
  4579                           ;tcp.c: 292: tcpListeners[i].state = TCP_STATE_CLOSED;
  4580  0163AC  5016               	movf	tcp_init@i,w,c
  4581  0163AE  0D11               	mullw	17
  4582  0163B0  0E10               	movlw	16
  4583  0163B2  26F3               	addwf	16371,f,c
  4584  0163B4  0E00               	movlw	0
  4585  0163B6  22F4               	addwfc	16372,f,c
  4586  0163B8  0E00               	movlw	low _tcpListeners
  4587  0163BA  24F3               	addwf	16371,w,c
  4588  0163BC  6ED9               	movwf	16345,c
  4589  0163BE  0E05               	movlw	high _tcpListeners
  4590  0163C0  20F4               	addwfc	16372,w,c
  4591  0163C2  6EDA               	movwf	16346,c
  4592  0163C4  0E0A               	movlw	10
  4593  0163C6  6EDF               	movwf	16351,c
  4594  0163C8  2A16               	incf	tcp_init@i,f,c
  4595  0163CA  D7BC               	goto	l12242
  4596  0163CC                     __end_of_tcp_init:
  4597                           	opt stack 0
  4598                           
  4599 ;; *************** function _ipv4_init *****************
  4600 ;; Defined at:
  4601 ;;		line 447 in file "src/stack/protocols/ipv4.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;		None
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4619 ;;Total ram usage:        0 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    5
  4622 ;; This function calls:
  4623 ;;		_ipv4_setToAllZero
  4624 ;; This function is called by:
  4625 ;;		_stack_init
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text5
  4630  01757E                     __ptext5:
  4631                           	opt stack 0
  4632  01757E                     _ipv4_init:
  4633                           	opt stack 24
  4634                           
  4635                           ;ipv4.c: 448: fSrcAddrChanged = 0u;
  4636                           
  4637                           ;incstack = 0
  4638  01757E  0E00               	movlw	0
  4639  017580  6E3F               	movwf	_fSrcAddrChanged,c
  4640                           
  4641                           ;ipv4.c: 449: ipv4_setToAllZero(&ipSource);
  4642  017582  0ED4               	movlw	low _ipSource
  4643  017584  6E16               	movwf	ipv4_setToAllZero@ip,c
  4644  017586  0E02               	movlw	high _ipSource
  4645  017588  6E17               	movwf	ipv4_setToAllZero@ip+1,c
  4646  01758A  EC79  F0BA         	call	_ipv4_setToAllZero	;wreg free
  4647                           
  4648                           ;ipv4.c: 450: ipv4_setToAllZero(&ipPreliminarySource);
  4649  01758E  0ECC               	movlw	low _ipPreliminarySource
  4650  017590  6E16               	movwf	ipv4_setToAllZero@ip,c
  4651  017592  0E02               	movlw	high _ipPreliminarySource
  4652  017594  6E17               	movwf	ipv4_setToAllZero@ip+1,c
  4653  017596  EC79  F0BA         	call	_ipv4_setToAllZero	;wreg free
  4654  01759A  0012               	return		;funcret
  4655  01759C                     __end_of_ipv4_init:
  4656                           	opt stack 0
  4657                           
  4658 ;; *************** function _srand *****************
  4659 ;; Defined at:
  4660 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;  x               2   47[COMRAM] unsigned int 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;		None
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      void 
  4667 ;; Registers used:
  4668 ;;		status,2
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4677 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4678 ;;Total ram usage:        2 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:    4
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_main
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text6
  4689  0176A2                     __ptext6:
  4690                           	opt stack 0
  4691  0176A2                     _srand:
  4692                           	opt stack 26
  4693                           
  4694                           ;incstack = 0
  4695  0176A2  0060  F0C0  F2DC   	movff	srand@x,_randx
  4696  0176A8  0060  F0C4  F2DD   	movff	srand@x+1,_randx+1
  4697  0176AE  0102               	movlb	2	; () banked
  4698  0176B0  6BDE               	clrf	(_randx+2)& (0+255),b
  4699  0176B2  6BDF               	clrf	(_randx+3)& (0+255),b
  4700                           
  4701                           ; BSR set to: 2
  4702  0176B4  0012               	return		;funcret
  4703  0176B6                     __end_of_srand:
  4704                           	opt stack 0
  4705                           
  4706 ;; *************** function _sevenSegmentInit *****************
  4707 ;; Defined at:
  4708 ;;		line 28 in file "src/system/sevenseg.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;		None
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;		None
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2, status,0
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4726 ;;Total ram usage:        0 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; Hardware stack levels required when called:    4
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_main
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           	psect	text7
  4737  01759C                     __ptext7:
  4738                           	opt stack 0
  4739  01759C                     _sevenSegmentInit:
  4740                           	opt stack 26
  4741                           
  4742                           ;sevenseg.c: 30: PORTC &= ~(0x07);
  4743                           
  4744                           ; BSR set to: 2
  4745                           ;incstack = 0
  4746  01759C  0EF8               	movlw	248
  4747  01759E  013F               	movlb	63	; () banked
  4748  0175A0  17CC               	andwf	204,f,b	;volatile
  4749                           
  4750                           ;sevenseg.c: 32: TRISC&= ~0x07;;
  4751  0175A2  0EF8               	movlw	248
  4752  0175A4  17C4               	andwf	196,f,b	;volatile
  4753                           
  4754                           ; BSR set to: 63
  4755                           ;sevenseg.c: 33: TRISA &=~0xff;;
  4756  0175A6  0E00               	movlw	0
  4757  0175A8  6FC2               	movwf	194,b	;volatile
  4758                           
  4759                           ; BSR set to: 63
  4760                           ;sevenseg.c: 35: ANSELA&=~0xff;;
  4761  0175AA  0E00               	movlw	0
  4762  0175AC  013A               	movlb	58	; () banked
  4763  0175AE  6F40               	movwf	64,b	;volatile
  4764                           
  4765                           ;sevenseg.c: 36: ANSELC&= ~0x07;;
  4766  0175B0  0EF8               	movlw	248
  4767  0175B2  1760               	andwf	96,f,b	;volatile
  4768                           
  4769                           ; BSR set to: 58
  4770                           ;sevenseg.c: 38: PORTA = 0xff;
  4771  0175B4  013F               	movlb	63	; () banked
  4772  0175B6  69CA               	setf	202,b	;volatile
  4773                           
  4774                           ; BSR set to: 63
  4775  0175B8  0012               	return		;funcret
  4776  0175BA                     __end_of_sevenSegmentInit:
  4777                           	opt stack 0
  4778                           
  4779 ;; *************** function _printEthernetState *****************
  4780 ;; Defined at:
  4781 ;;		line 204 in file "src/system/main.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  state          15   15[BANK0 ] struct ethernetConnectio
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;		None
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  1    wreg      void 
  4788 ;; Registers used:
  4789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4795 ;;      Params:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4798 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4799 ;;Total ram usage:       15 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:    5
  4802 ;; This function calls:
  4803 ;;		_UARTTransmitText
  4804 ;; This function is called by:
  4805 ;;		_main
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text8
  4810  016CEA                     __ptext8:
  4811                           	opt stack 0
  4812  016CEA                     _printEthernetState:
  4813                           	opt stack 25
  4814                           
  4815                           ;main.c: 205: static ethernetConnection_t oldState;
  4816                           ;main.c: 206: if (state.link != oldState.link) {
  4817                           
  4818                           ; BSR set to: 63
  4819                           ;incstack = 0
  4820  016CEA  0103               	movlb	3	; () banked
  4821  016CEC  518A               	movf	printEthernetState@oldState& (0+255),w,b
  4822  016CEE  0100               	movlb	0	; () banked
  4823  016CF0  196F               	xorwf	printEthernetState@state& (0+255),w,b
  4824  016CF2  B4D8               	btfsc	16344,2,c
  4825  016CF4  D01B               	goto	l714
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;main.c: 207: UARTTransmitText("[ETH]: ");
  4829  016CF6  0E7D               	movlw	low STR_61
  4830  016CF8  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  4831  016CFA  0EFF               	movlw	high STR_61
  4832  016CFC  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4833  016CFE  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  4834                           
  4835                           ;main.c: 208: if (state.link == NO_LINK) {
  4836  016D02  0100               	movlb	0	; () banked
  4837  016D04  516F               	movf	printEthernetState@state& (0+255),w,b
  4838  016D06  A4D8               	btfss	16344,2,c
  4839  016D08  D007               	goto	l712
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;main.c: 209: UARTTransmitText("Link lost.\n\r");
  4843  016D0A  0EC8               	movlw	low STR_62
  4844  016D0C  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  4845  016D0E  0EFE               	movlw	high STR_62
  4846  016D10  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4847  016D12  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  4848                           
  4849                           ;main.c: 210: } else if (state.link == LINK_ESTABLISHED) {
  4850  016D16  D00A               	goto	l714
  4851  016D18                     l712:
  4852  016D18  0100               	movlb	0	; () banked
  4853  016D1A  056F               	decf	printEthernetState@state& (0+255),w,b
  4854  016D1C  A4D8               	btfss	16344,2,c
  4855  016D1E  D006               	goto	l714
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;main.c: 211: UARTTransmitText("Link established. ");
  4859  016D20  0E29               	movlw	low STR_63
  4860  016D22  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  4861  016D24  0EFE               	movlw	high STR_63
  4862  016D26  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4863  016D28  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  4864  016D2C                     l714:
  4865                           
  4866                           ;main.c: 212: }
  4867                           ;main.c: 227: }
  4868                           ;main.c: 228: oldState = state;
  4869  016D2C  EE20  F06F         	lfsr	2,printEthernetState@state
  4870  016D30  EE10  F38A         	lfsr	1,printEthernetState@oldState
  4871  016D34  0E0E               	movlw	14
  4872  016D36                     u15441:
  4873  016D36  006F FF6F FFE3     	movff	16347,16355
  4874  016D3C  06E8               	decf	16360,f,c
  4875  016D3E  E2FB               	bc	u15441
  4876  016D40  0012               	return		;funcret
  4877  016D42                     __end_of_printEthernetState:
  4878                           	opt stack 0
  4879                           
  4880 ;; *************** function _printErrorMessage *****************
  4881 ;; Defined at:
  4882 ;;		line 231 in file "src/system/main.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;  err             3   21[COMRAM] struct error
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;		None
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  1    wreg      void 
  4889 ;; Registers used:
  4890 ;;		None
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4896 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4899 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4900 ;;Total ram usage:        3 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    4
  4903 ;; This function calls:
  4904 ;;		Nothing
  4905 ;; This function is called by:
  4906 ;;		_main
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text9
  4911  01776C                     __ptext9:
  4912                           	opt stack 0
  4913  01776C                     _printErrorMessage:
  4914                           	opt stack 26
  4915                           
  4916                           ;incstack = 0
  4917  01776C  0012               	return		;funcret
  4918  01776E                     __end_of_printErrorMessage:
  4919                           	opt stack 0
  4920                           
  4921 ;; *************** function _handleStackBackgroundTasks *****************
  4922 ;; Defined at:
  4923 ;;		line 40 in file "src/stack/backgroundTasks.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;  stack           2  247[BANK1 ] PTR struct stack
  4926 ;;		 -> stack(124), 
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;  foo            10    0        unsigned char [10]
  4929 ;;  errIPv4         3  154[BANK2 ] struct error
  4930 ;;  errArp          3  149[BANK2 ] struct error
  4931 ;;  intf            2  152[BANK2 ] struct interruptFlags
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  1    wreg      void 
  4934 ;; Registers used:
  4935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4941 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4942 ;;      Locals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4943 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4944 ;;      Totals:         0       0       4       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4945 ;;Total ram usage:       12 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:   15
  4948 ;; This function calls:
  4949 ;;		_UARTTransmitText
  4950 ;;		_UART_resetFormat
  4951 ;;		_UART_setFormat
  4952 ;;		_UART_special
  4953 ;;		_arp_background
  4954 ;;		_arp_init
  4955 ;;		_ethernetController_clearInterruptFlag
  4956 ;;		_ethernetController_disableEthernet
  4957 ;;		_ethernetController_getMTU
  4958 ;;		_ethernetController_init
  4959 ;;		_ethernetController_newPacketAvailable
  4960 ;;		_ethernetController_pollInterruptFlags
  4961 ;;		_ethernetController_setLEDConfig
  4962 ;;		_ethernetController_updateLinkStatus
  4963 ;;		_ethernet_rxGetNewFrame
  4964 ;;		_intToString
  4965 ;;		_ipAdressToString
  4966 ;;		_ipv4_background
  4967 ;;		_ipv4_generateAutoIP
  4968 ;;		_ipv4_sendFrame
  4969 ;;		_ipv4_setIPSourceAddress
  4970 ;; This function is called by:
  4971 ;;		_main
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text10
  4976  010600                     __ptext10:
  4977                           	opt stack 0
  4978  010600                     _handleStackBackgroundTasks:
  4979                           	opt stack 15
  4980                           
  4981                           ;backgroundTasks.c: 41: unsigned char foo[10];
  4982                           ;backgroundTasks.c: 42: error_t errArp;
  4983                           ;backgroundTasks.c: 43: error_t errIPv4;
  4984                           ;backgroundTasks.c: 44: interruptFlags_t intf;
  4985                           ;backgroundTasks.c: 46: intf = ethernetController_pollInterruptFlags();
  4986                           
  4987                           ;incstack = 0
  4988  010600  ECE7  F0A3         	call	_ethernetController_pollInterruptFlags	;wreg free
  4989  010604  0060  F0B8  F298   	movff	?_ethernetController_pollInterruptFlags,handleStackBackgroundTasks@intf
  4990  01060A  0060  F0BC  F299   	movff	?_ethernetController_pollInterruptFlags+1,handleStackBackgroundTasks@intf+1
  4991                           
  4992                           ;backgroundTasks.c: 49: if (intf.LINKIF) {
  4993  010610  0102               	movlb	2	; () banked
  4994  010612  A798               	btfss	handleStackBackgroundTasks@intf& (0+255),3,b
  4995  010614  D045               	goto	l532
  4996                           
  4997                           ; BSR set to: 2
  4998                           ;backgroundTasks.c: 51: ethernetController_updateLinkStatus(&(stack->ethernet));
  4999  010616  0E22               	movlw	34
  5000  010618  0101               	movlb	1	; () banked
  5001  01061A  25F7               	addwf	handleStackBackgroundTasks@stack& (0+255),w,b
  5002  01061C  0100               	movlb	0	; () banked
  5003  01061E  6F60               	movwf	ethernetController_updateLinkStatus@state& (0+255),b
  5004  010620  0E00               	movlw	0
  5005  010622  0101               	movlb	1	; () banked
  5006  010624  21F8               	addwfc	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5007  010626  0100               	movlb	0	; () banked
  5008  010628  6F61               	movwf	(ethernetController_updateLinkStatus@state+1)& (0+255),b
  5009  01062A  EC58  F0B1         	call	_ethernetController_updateLinkStatus	;wreg free
  5010                           
  5011                           ;backgroundTasks.c: 53: if (stack->ethernet.link == LINK_ESTABLISHED) {
  5012  01062E  0101               	movlb	1	; () banked
  5013  010630  EE20 F022          	lfsr	2,34
  5014  010634  51F7               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5015  010636  26D9               	addwf	16345,f,c
  5016  010638  51F8               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5017  01063A  22DA               	addwfc	16346,f,c
  5018  01063C  04DE               	decf	16350,w,c
  5019  01063E  A4D8               	btfss	16344,2,c
  5020  010640  D020               	goto	l533
  5021                           
  5022                           ; BSR set to: 1
  5023                           ;backgroundTasks.c: 54: ethernetController_setLEDConfig(LEDA, LED_ON);
  5024  010642  0E00               	movlw	0
  5025  010644  6E24               	movwf	ethernetController_setLEDConfig@conf,c
  5026  010646  0E00               	movlw	0
  5027  010648  EC70  F0B2         	call	_ethernetController_setLEDConfig
  5028                           
  5029                           ;backgroundTasks.c: 55: ethernetController_setLEDConfig(LEDB, LED_TRANSMIT_RECEIVE_EVENT
      +                          S);
  5030  01064C  0E02               	movlw	2
  5031  01064E  6E24               	movwf	ethernetController_setLEDConfig@conf,c
  5032  010650  0E01               	movlw	1
  5033  010652  EC70  F0B2         	call	_ethernetController_setLEDConfig
  5034                           
  5035                           ;backgroundTasks.c: 56: ipv4_setIPSourceAddress(stack->source);
  5036  010656  0101               	movlb	1	; () banked
  5037  010658  EE20 F077          	lfsr	2,119
  5038  01065C  51F7               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5039  01065E  26D9               	addwf	16345,f,c
  5040  010660  51F8               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5041  010662  22DA               	addwfc	16346,f,c
  5042  010664  006F FF78  F016    	movff	16350,ipv4_setIPSourceAddress@ip
  5043  01066A  006F FF78  F017    	movff	16350,ipv4_setIPSourceAddress@ip+1
  5044  010670  006F FF78  F018    	movff	16350,ipv4_setIPSourceAddress@ip+2
  5045  010676  006F FF78  F019    	movff	16350,ipv4_setIPSourceAddress@ip+3
  5046  01067C  ECDD  F0BA         	call	_ipv4_setIPSourceAddress	;wreg free
  5047                           
  5048                           ;backgroundTasks.c: 57: } else {
  5049  010680  D00C               	goto	l534
  5050  010682                     l533:
  5051                           
  5052                           ;backgroundTasks.c: 58: ethernetController_setLEDConfig(LEDA, LED_OFF);
  5053  010682  0E01               	movlw	1
  5054  010684  6E24               	movwf	ethernetController_setLEDConfig@conf,c
  5055  010686  0E00               	movlw	0
  5056  010688  EC70  F0B2         	call	_ethernetController_setLEDConfig
  5057                           
  5058                           ;backgroundTasks.c: 59: ethernetController_setLEDConfig(LEDB, LED_OFF);
  5059  01068C  0E01               	movlw	1
  5060  01068E  6E24               	movwf	ethernetController_setLEDConfig@conf,c
  5061  010690  0E01               	movlw	1
  5062  010692  EC70  F0B2         	call	_ethernetController_setLEDConfig
  5063                           
  5064                           ;backgroundTasks.c: 60: arp_init();
  5065  010696  EC0C  F0B1         	call	_arp_init	;wreg free
  5066  01069A                     l534:
  5067                           
  5068                           ;backgroundTasks.c: 61: }
  5069                           ;backgroundTasks.c: 62: ethernetController_clearInterruptFlag(LINKIF);
  5070  01069A  0E0B               	movlw	11
  5071  01069C  ECA9  F0BB         	call	_ethernetController_clearInterruptFlag
  5072  0106A0                     l532:
  5073                           
  5074                           ;backgroundTasks.c: 63: }
  5075                           ;backgroundTasks.c: 66: if (intf.PKTIF) {
  5076  0106A0  0102               	movlb	2	; () banked
  5077  0106A2  A998               	btfss	handleStackBackgroundTasks@intf& (0+255),4,b
  5078  0106A4  D00D               	goto	l536
  5079                           
  5080                           ; BSR set to: 2
  5081                           ;backgroundTasks.c: 68: if (ethernetController_newPacketAvailable()) {
  5082  0106A6  EC64  F0BB         	call	_ethernetController_newPacketAvailable	;wreg free
  5083  0106AA  0900               	iorlw	0
  5084  0106AC  B4D8               	btfsc	16344,2,c
  5085  0106AE  D008               	goto	l536
  5086                           
  5087                           ;backgroundTasks.c: 70: ethernet_rxGetNewFrame(&stack->newReceivedFrame);
  5088  0106B0  0060  F7DC  F1F2   	movff	handleStackBackgroundTasks@stack,ethernet_rxGetNewFrame@frame
  5089  0106B6  0060  F7E0  F1F3   	movff	handleStackBackgroundTasks@stack+1,ethernet_rxGetNewFrame@frame+1
  5090  0106BC  EC45  F088         	call	_ethernet_rxGetNewFrame	;wreg free
  5091  0106C0                     l536:
  5092                           
  5093                           ;backgroundTasks.c: 71: }
  5094                           ;backgroundTasks.c: 72: }
  5095                           ;backgroundTasks.c: 75: if (intf.PCFULIF) {
  5096  0106C0  0102               	movlb	2	; () banked
  5097  0106C2  A399               	btfss	(handleStackBackgroundTasks@intf+1)& (0+255),1,b
  5098  0106C4  D035               	goto	l537
  5099                           
  5100                           ; BSR set to: 2
  5101                           ;backgroundTasks.c: 76: UART_setFormat(UART_COLOR_BG_RED);
  5102  0106C6  0E00               	movlw	0
  5103  0106C8  EC67  F0B0         	call	_UART_setFormat
  5104                           
  5105                           ;backgroundTasks.c: 77: UARTTransmitText("\a\n\r");
  5106  0106CC  0EEA               	movlw	low STR_17
  5107  0106CE  0100               	movlb	0	; () banked
  5108  0106D0  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  5109  0106D2  0EFF               	movlw	high STR_17
  5110  0106D4  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5111  0106D6  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5112                           
  5113                           ;backgroundTasks.c: 78: UARTTransmitText(UART_special(UART_LINE_SEPARATOR));
  5114  0106DA  0E00               	movlw	0
  5115  0106DC  EC2E  F0BB         	call	_UART_special
  5116  0106E0  0060  F058  F06D   	movff	?_UART_special,UARTTransmitText@str
  5117  0106E6  0060  F05C  F06E   	movff	?_UART_special+1,UARTTransmitText@str+1
  5118  0106EC  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5119                           
  5120                           ;backgroundTasks.c: 79: UARTTransmitText("\n\r*** CRITICAL ERROR: RX BUF OVFL CAUSED SYS
      +                          TEM RESET ***\n\r");
  5121  0106F0  0EC6               	movlw	low STR_18
  5122  0106F2  0100               	movlb	0	; () banked
  5123  0106F4  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  5124  0106F6  0EFB               	movlw	high STR_18
  5125  0106F8  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5126  0106FA  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5127                           
  5128                           ;backgroundTasks.c: 80: UARTTransmitText(UART_special(UART_LINE_SEPARATOR));
  5129  0106FE  0E00               	movlw	0
  5130  010700  EC2E  F0BB         	call	_UART_special
  5131  010704  0060  F058  F06D   	movff	?_UART_special,UARTTransmitText@str
  5132  01070A  0060  F05C  F06E   	movff	?_UART_special+1,UARTTransmitText@str+1
  5133  010710  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5134                           
  5135                           ;backgroundTasks.c: 81: UART_resetFormat();
  5136  010714  EC77  F0BB         	call	_UART_resetFormat	;wreg free
  5137                           
  5138                           ;backgroundTasks.c: 82: UARTTransmitText("\n\r");
  5139  010718  0EEB               	movlw	low (STR_17+1)
  5140  01071A  0100               	movlb	0	; () banked
  5141  01071C  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  5142  01071E  0EFF               	movlw	high (STR_17+1)
  5143  010720  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5144  010722  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5145                           
  5146                           ;backgroundTasks.c: 83: ethernetController_disableEthernet();
  5147  010726  ECB7  F0BB         	call	_ethernetController_disableEthernet	;wreg free
  5148                           
  5149                           ;backgroundTasks.c: 84: ethernetController_init();
  5150  01072A  EC03  F0AF         	call	_ethernetController_init	;wreg free
  5151  01072E  00FF               	reset		;# 
  5152  010730                     l537:
  5153                           
  5154                           ;backgroundTasks.c: 86: }
  5155                           ;backgroundTasks.c: 93: if (stack->background.fPacketPending == 1) {
  5156  010730  0101               	movlb	1	; () banked
  5157  010732  EE20 F034          	lfsr	2,52
  5158  010736  51F7               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5159  010738  26D9               	addwf	16345,f,c
  5160  01073A  51F8               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5161  01073C  22DA               	addwfc	16346,f,c
  5162  01073E  04DE               	decf	16350,w,c
  5163  010740  B4D8               	btfsc	16344,2,c
  5164  010742  D15F               	goto	l549
  5165  010744  D168               	goto	l553
  5166  010746                     
  5167                           ; BSR set to: 1
  5168                           ;backgroundTasks.c: 107: if (stack->pendingPacketToSend.ipv4Header.totalLength > etherne
      +                          tController_getMTU()) {
  5169                           
  5170                           ; BSR set to: 1
  5171  010746  EE20 F039          	lfsr	2,57
  5172  01074A  51F7               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5173  01074C  26D9               	addwf	16345,f,c
  5174  01074E  51F8               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5175  010750  22DA               	addwfc	16346,f,c
  5176  010752  ECA4  F0BB         	call	_ethernetController_getMTU	;wreg free
  5177  010756  50DE               	movf	16350,w,c
  5178  010758  5C16               	subwf	?_ethernetController_getMTU,w,c
  5179  01075A  50DE               	movf	16350,w,c
  5180  01075C  5817               	subwfb	?_ethernetController_getMTU+1,w,c
  5181  01075E  B0D8               	btfsc	16344,0,c
  5182  010760  D002               	goto	l551
  5183                           
  5184                           ;backgroundTasks.c: 117: state = PREPARE_FRAGMENTING;
  5185  010762  0E01               	movlw	1
  5186  010764  D0C7               	goto	L1
  5187  010766                     l551:
  5188                           
  5189                           ;backgroundTasks.c: 119: state = SEND_FRAME;
  5190                           
  5191                           ; BSR set to: 1
  5192  010766  0E02               	movlw	2
  5193  010768  0101               	movlb	1	; () banked
  5194  01076A  6FFF               	movwf	handleStackBackgroundTasks@state& (0+255),b
  5195                           
  5196                           ; BSR set to: 1
  5197                           ;backgroundTasks.c: 120: currentPacket = stack->pendingPacketToSend;
  5198  01076C  EE20 F035          	lfsr	2,53
  5199  010770  51F7               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5200  010772  26D9               	addwf	16345,f,c
  5201  010774  51F8               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5202  010776  22DA               	addwfc	16346,f,c
  5203  010778  EE10  F348         	lfsr	1,handleStackBackgroundTasks@currentPacket
  5204  01077C  0E41               	movlw	65
  5205  01077E                     u15321:
  5206  01077E  006F FF6F FFE3     	movff	16347,16355
  5207  010784  06E8               	decf	16360,f,c
  5208  010786  E2FB               	bc	u15321
  5209                           
  5210                           ; BSR set to: 1
  5211                           ;backgroundTasks.c: 121: }
  5212                           ;backgroundTasks.c: 122: break;
  5213  010788  D146               	goto	l553
  5214  01078A                     
  5215                           ; BSR set to: 1
  5216                           ;backgroundTasks.c: 124: currentPacket = stack->pendingPacketToSend;
  5217                           
  5218                           ; BSR set to: 1
  5219  01078A  EE20 F035          	lfsr	2,53
  5220  01078E  51F7               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5221  010790  26D9               	addwf	16345,f,c
  5222  010792  51F8               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5223  010794  22DA               	addwfc	16346,f,c
  5224  010796  EE10  F348         	lfsr	1,handleStackBackgroundTasks@currentPacket
  5225  01079A  0E41               	movlw	65
  5226  01079C                     u15331:
  5227  01079C  006F FF6F FFE3     	movff	16347,16355
  5228  0107A2  06E8               	decf	16360,f,c
  5229  0107A4  E2FB               	bc	u15331
  5230                           
  5231                           ; BSR set to: 1
  5232                           ;backgroundTasks.c: 125: if (numberOfPacketsSent == 0) {
  5233  0107A6  51FD               	movf	handleStackBackgroundTasks@numberOfPacketsSent& (0+255),w,b
  5234  0107A8  A4D8               	btfss	16344,2,c
  5235  0107AA  D009               	goto	l555
  5236                           
  5237                           ; BSR set to: 1
  5238                           ;backgroundTasks.c: 127: currentPacket.ethernet.memory.length = ethernetController_getMT
      +                          U();
  5239  0107AC  ECA4  F0BB         	call	_ethernetController_getMTU	;wreg free
  5240  0107B0  0060  F058  F37C   	movff	?_ethernetController_getMTU,handleStackBackgroundTasks@currentPacket+52
  5241  0107B6  0060  F05C  F37D   	movff	?_ethernetController_getMTU+1,handleStackBackgroundTasks@currentPacket+53
  5242  0107BC  D019               	goto	l558
  5243  0107BE                     l555:
  5244                           
  5245                           ; BSR set to: 1
  5246                           ;backgroundTasks.c: 132: if (remainingLength >= ethernetController_getMTU())
  5247                           
  5248                           ; BSR set to: 1
  5249  0107BE  ECA4  F0BB         	call	_ethernetController_getMTU	;wreg free
  5250  0107C2  0101               	movlb	1	; () banked
  5251  0107C4  51FE               	movf	handleStackBackgroundTasks@remainingLength& (0+255),w,b
  5252  0107C6  6FF9               	movwf	??_handleStackBackgroundTasks& (0+255),b
  5253  0107C8  6BFA               	clrf	(??_handleStackBackgroundTasks+1)& (0+255),b
  5254  0107CA  5016               	movf	?_ethernetController_getMTU,w,c
  5255  0107CC  5DF9               	subwf	??_handleStackBackgroundTasks& (0+255),w,b
  5256  0107CE  5017               	movf	?_ethernetController_getMTU+1,w,c
  5257  0107D0  59FA               	subwfb	(??_handleStackBackgroundTasks+1)& (0+255),w,b
  5258  0107D2  A0D8               	btfss	16344,0,c
  5259  0107D4  D009               	goto	l557
  5260                           
  5261                           ; BSR set to: 1
  5262                           ;backgroundTasks.c: 133: currentPacket.ethernet.memory.length = ethernetController_getMT
      +                          U();
  5263  0107D6  ECA4  F0BB         	call	_ethernetController_getMTU	;wreg free
  5264  0107DA  0060  F058  F37C   	movff	?_ethernetController_getMTU,handleStackBackgroundTasks@currentPacket+52
  5265  0107E0  0060  F05C  F37D   	movff	?_ethernetController_getMTU+1,handleStackBackgroundTasks@currentPacket+53
  5266  0107E6  D004               	goto	l558
  5267  0107E8                     l557:
  5268                           
  5269                           ; BSR set to: 1
  5270                           ;backgroundTasks.c: 134: else
  5271                           ;backgroundTasks.c: 135: currentPacket.ethernet.memory.length = remainingLength;
  5272  0107E8  C1FE  F37C         	movff	handleStackBackgroundTasks@remainingLength,handleStackBackgroundTasks@currentPack
      +                          et+52
  5273  0107EC  0103               	movlb	3	; () banked
  5274  0107EE  6B7D               	clrf	(handleStackBackgroundTasks@currentPacket+53)& (0+255),b
  5275  0107F0                     l558:
  5276                           
  5277                           ;backgroundTasks.c: 136: currentPacket.ethernet.memory.end = currentPacket.ethernet.memo
      +                          ry.start + currentPacket.ethernet.memory.length;
  5278                           
  5279                           ; BSR set to: 3
  5280  0107F0  0103               	movlb	3	; () banked
  5281  0107F2  517C               	movf	(handleStackBackgroundTasks@currentPacket+52)& (0+255),w,b
  5282  0107F4  2578               	addwf	(handleStackBackgroundTasks@currentPacket+48)& (0+255),w,b
  5283  0107F6  6F7A               	movwf	(handleStackBackgroundTasks@currentPacket+50)& (0+255),b
  5284  0107F8  517D               	movf	(handleStackBackgroundTasks@currentPacket+53)& (0+255),w,b
  5285  0107FA  2179               	addwfc	(handleStackBackgroundTasks@currentPacket+49)& (0+255),w,b
  5286  0107FC  6F7B               	movwf	(handleStackBackgroundTasks@currentPacket+51)& (0+255),b
  5287                           
  5288                           ;backgroundTasks.c: 137: remainingLength = currentPacket.ipv4Header.totalLength - curren
      +                          tPacket.ethernet.memory.length;
  5289  0107FE  517C               	movf	(handleStackBackgroundTasks@currentPacket+52)& (0+255),w,b
  5290  010800  0800               	sublw	0
  5291  010802  254C               	addwf	(handleStackBackgroundTasks@currentPacket+4)& (0+255),w,b
  5292  010804  0101               	movlb	1	; () banked
  5293  010806  6FFE               	movwf	handleStackBackgroundTasks@remainingLength& (0+255),b
  5294                           
  5295                           ; BSR set to: 1
  5296                           ;backgroundTasks.c: 138: lastEndAddress = currentPacket.ethernet.memory.end;
  5297  010808  C37A  F2C0         	movff	handleStackBackgroundTasks@currentPacket+50,handleStackBackgroundTasks@lastEndAdd
      +                          ress
  5298  01080C  C37B  F2C1         	movff	handleStackBackgroundTasks@currentPacket+51,handleStackBackgroundTasks@lastEndAdd
      +                          ress+1
  5299                           
  5300                           ; BSR set to: 1
  5301                           ;backgroundTasks.c: 139: }
  5302                           ;backgroundTasks.c: 140: UARTTransmitText(intToString(currentPacket.ethernet.memory.star
      +                          t,10));
  5303                           
  5304                           ; BSR set to: 1
  5305  010810  0060  FDE0  F032   	movff	handleStackBackgroundTasks@currentPacket+48,intToString@val
  5306  010816  0060  FDE4  F033   	movff	handleStackBackgroundTasks@currentPacket+49,intToString@val+1
  5307  01081C  6A34               	clrf	intToString@val+2,c
  5308  01081E  6A35               	clrf	intToString@val+3,c
  5309  010820  0E0A               	movlw	10
  5310  010822  6E36               	movwf	intToString@b,c
  5311  010824  ECA5  F0B8         	call	_intToString	;wreg free
  5312  010828  0060  F0C8  F06D   	movff	?_intToString,UARTTransmitText@str
  5313  01082E  0060  F0CC  F06E   	movff	?_intToString+1,UARTTransmitText@str+1
  5314  010834  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5315                           
  5316                           ;backgroundTasks.c: 141: UARTTransmitText(" -> ");
  5317  010838  0ED0               	movlw	low STR_20
  5318  01083A  0100               	movlb	0	; () banked
  5319  01083C  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  5320  01083E  0EFF               	movlw	high STR_20
  5321  010840  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5322  010842  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5323                           
  5324                           ;backgroundTasks.c: 142: UARTTransmitText(intToString(currentPacket.ethernet.memory.end,
      +                          10));
  5325  010846  0060  FDE8  F032   	movff	handleStackBackgroundTasks@currentPacket+50,intToString@val
  5326  01084C  0060  FDEC  F033   	movff	handleStackBackgroundTasks@currentPacket+51,intToString@val+1
  5327  010852  6A34               	clrf	intToString@val+2,c
  5328  010854  6A35               	clrf	intToString@val+3,c
  5329  010856  0E0A               	movlw	10
  5330  010858  6E36               	movwf	intToString@b,c
  5331  01085A  ECA5  F0B8         	call	_intToString	;wreg free
  5332  01085E  0060  F0C8  F06D   	movff	?_intToString,UARTTransmitText@str
  5333  010864  0060  F0CC  F06E   	movff	?_intToString+1,UARTTransmitText@str+1
  5334  01086A  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5335                           
  5336                           ;backgroundTasks.c: 143: UARTTransmitText(" (");
  5337  01086E  0EF1               	movlw	low STR_21
  5338  010870  0100               	movlb	0	; () banked
  5339  010872  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  5340  010874  0EFF               	movlw	high STR_21
  5341  010876  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5342  010878  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5343                           
  5344                           ;backgroundTasks.c: 144: UARTTransmitText(intToString(currentPacket.ethernet.memory.leng
      +                          th,10));
  5345  01087C  0060  FDF0  F032   	movff	handleStackBackgroundTasks@currentPacket+52,intToString@val
  5346  010882  0060  FDF4  F033   	movff	handleStackBackgroundTasks@currentPacket+53,intToString@val+1
  5347  010888  6A34               	clrf	intToString@val+2,c
  5348  01088A  6A35               	clrf	intToString@val+3,c
  5349  01088C  0E0A               	movlw	10
  5350  01088E  6E36               	movwf	intToString@b,c
  5351  010890  ECA5  F0B8         	call	_intToString	;wreg free
  5352  010894  0060  F0C8  F06D   	movff	?_intToString,UARTTransmitText@str
  5353  01089A  0060  F0CC  F06E   	movff	?_intToString+1,UARTTransmitText@str+1
  5354  0108A0  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5355                           
  5356                           ;backgroundTasks.c: 145: UARTTransmitText(") ");
  5357  0108A4  0EEE               	movlw	low STR_22
  5358  0108A6  0100               	movlb	0	; () banked
  5359  0108A8  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  5360  0108AA  0EFF               	movlw	high STR_22
  5361  0108AC  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5362  0108AE  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5363                           
  5364                           ;backgroundTasks.c: 146: UARTTransmitText("Remaining Length is ");
  5365  0108B2  0E00               	movlw	low STR_23
  5366  0108B4  0100               	movlb	0	; () banked
  5367  0108B6  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  5368  0108B8  0EFE               	movlw	high STR_23
  5369  0108BA  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5370  0108BC  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5371                           
  5372                           ;backgroundTasks.c: 147: UARTTransmitText(intToString(remainingLength,10));
  5373  0108C0  0101               	movlb	1	; () banked
  5374  0108C2  51FE               	movf	handleStackBackgroundTasks@remainingLength& (0+255),w,b
  5375  0108C4  6E32               	movwf	intToString@val,c
  5376  0108C6  6A33               	clrf	intToString@val+1,c
  5377  0108C8  6A34               	clrf	intToString@val+2,c
  5378  0108CA  6A35               	clrf	intToString@val+3,c
  5379  0108CC  0E0A               	movlw	10
  5380  0108CE  6E36               	movwf	intToString@b,c
  5381  0108D0  ECA5  F0B8         	call	_intToString	;wreg free
  5382  0108D4  0060  F0C8  F06D   	movff	?_intToString,UARTTransmitText@str
  5383  0108DA  0060  F0CC  F06E   	movff	?_intToString+1,UARTTransmitText@str+1
  5384  0108E0  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5385                           
  5386                           ;backgroundTasks.c: 148: UARTTransmitText("\n\r");
  5387  0108E4  0EEB               	movlw	low (STR_17+1)
  5388  0108E6  0100               	movlb	0	; () banked
  5389  0108E8  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  5390  0108EA  0EFF               	movlw	high (STR_17+1)
  5391  0108EC  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5392  0108EE  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5393                           
  5394                           ;backgroundTasks.c: 149: state = SEND_FRAME;
  5395  0108F2  0E02               	movlw	2
  5396  0108F4                     L1:
  5397  0108F4  0101               	movlb	1	; () banked
  5398  0108F6  D02B               	goto	L2
  5399  0108F8                     
  5400                           ; BSR set to: 1
  5401                           ;backgroundTasks.c: 152: errIPv4 = ipv4_sendFrame(stack->pendingPacketToSend);
  5402                           
  5403                           ; BSR set to: 1
  5404  0108F8  EE20 F035          	lfsr	2,53
  5405  0108FC  51F7               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5406  0108FE  26D9               	addwf	16345,f,c
  5407  010900  51F8               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5408  010902  22DA               	addwfc	16346,f,c
  5409  010904  EE00  F12C         	lfsr	0,ipv4_sendFrame@ipPacket
  5410  010908  0E41               	movlw	65
  5411  01090A                     u15361:
  5412  01090A  006F FF6F FFEB     	movff	16347,16363
  5413  010910  06E8               	decf	16360,f,c
  5414  010912  E2FB               	bc	u15361
  5415  010914  EC70  F0A1         	call	_ipv4_sendFrame	;wreg free
  5416  010918  0060  F4B0  F29A   	movff	?_ipv4_sendFrame,handleStackBackgroundTasks@errIPv4
  5417  01091E  0060  F4B4  F29B   	movff	?_ipv4_sendFrame+1,handleStackBackgroundTasks@errIPv4+1
  5418  010924  0060  F4B8  F29C   	movff	?_ipv4_sendFrame+2,handleStackBackgroundTasks@errIPv4+2
  5419                           
  5420                           ;backgroundTasks.c: 153: numberOfPacketsSent++;
  5421  01092A  0101               	movlb	1	; () banked
  5422  01092C  2BFD               	incf	handleStackBackgroundTasks@numberOfPacketsSent& (0+255),f,b
  5423                           
  5424                           ; BSR set to: 1
  5425                           ;backgroundTasks.c: 154: if (errIPv4.module == ERROR_MODULE_ARP) {
  5426  01092E  0E03               	movlw	3
  5427  010930  0102               	movlb	2	; () banked
  5428  010932  199A               	xorwf	handleStackBackgroundTasks@errIPv4& (0+255),w,b
  5429  010934  B4D8               	btfsc	16344,2,c
  5430  010936  D047               	goto	l561
  5431  010938  D06E               	goto	l553
  5432  01093A                     
  5433                           ;backgroundTasks.c: 159: stack->background.fPacketPending = 0;
  5434                           
  5435                           ; BSR set to: 2
  5436  01093A  0101               	movlb	1	; () banked
  5437  01093C  EE20 F034          	lfsr	2,52
  5438  010940  51F7               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5439  010942  26D9               	addwf	16345,f,c
  5440  010944  51F8               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5441  010946  22DA               	addwfc	16346,f,c
  5442  010948  0E00               	movlw	0
  5443  01094A  6EDF               	movwf	16351,c
  5444                           
  5445                           ; BSR set to: 1
  5446                           ;backgroundTasks.c: 160: state = INIT;
  5447  01094C  0E00               	movlw	0
  5448  01094E                     L2:
  5449  01094E  6FFF               	movwf	handleStackBackgroundTasks@state& (0+255),b
  5450                           
  5451                           ;backgroundTasks.c: 161: break;
  5452  010950  D062               	goto	l553
  5453  010952                     
  5454                           ; BSR set to: 1
  5455                           ;backgroundTasks.c: 164: UART_setFormat(UART_COLOR_BG_RED);
  5456                           
  5457                           ; BSR set to: 1
  5458  010952  0E00               	movlw	0
  5459  010954  EC67  F0B0         	call	_UART_setFormat
  5460                           
  5461                           ;backgroundTasks.c: 165: UARTTransmitText("[IPv4]: Failed to resolve ");
  5462  010958  0E6A               	movlw	low STR_25
  5463  01095A  0100               	movlb	0	; () banked
  5464  01095C  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  5465  01095E  0EFD               	movlw	high STR_25
  5466  010960  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5467  010962  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5468                           
  5469                           ;backgroundTasks.c: 166: UARTTransmitText(ipAdressToString(stack->pendingPacketToSend.ip
      +                          v4Header.destination));
  5470  010966  0101               	movlb	1	; () banked
  5471  010968  EE20 F048          	lfsr	2,72
  5472  01096C  51F7               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5473  01096E  26D9               	addwf	16345,f,c
  5474  010970  51F8               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5475  010972  22DA               	addwfc	16346,f,c
  5476  010974  006F FF78  F066    	movff	16350,ipAdressToString@ip
  5477  01097A  006F FF78  F067    	movff	16350,ipAdressToString@ip+1
  5478  010980  006F FF78  F068    	movff	16350,ipAdressToString@ip+2
  5479  010986  006F FF78  F069    	movff	16350,ipAdressToString@ip+3
  5480  01098C  EC6A  F0A8         	call	_ipAdressToString	;wreg free
  5481  010990  0060  F198  F06D   	movff	?_ipAdressToString,UARTTransmitText@str
  5482  010996  0060  F19C  F06E   	movff	?_ipAdressToString+1,UARTTransmitText@str+1
  5483  01099C  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5484                           
  5485                           ;backgroundTasks.c: 167: UART_resetFormat();
  5486  0109A0  EC77  F0BB         	call	_UART_resetFormat	;wreg free
  5487                           
  5488                           ;backgroundTasks.c: 168: UARTTransmitText("\n\r");
  5489  0109A4  0EEB               	movlw	low (STR_17+1)
  5490  0109A6  0100               	movlb	0	; () banked
  5491  0109A8  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  5492  0109AA  0EFF               	movlw	high (STR_17+1)
  5493  0109AC  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5494  0109AE  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5495                           
  5496                           ;backgroundTasks.c: 171: stack->background.fPacketPending = 0;
  5497  0109B2  0101               	movlb	1	; () banked
  5498  0109B4  EE20 F034          	lfsr	2,52
  5499  0109B8  51F7               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5500  0109BA  26D9               	addwf	16345,f,c
  5501  0109BC  51F8               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5502  0109BE  22DA               	addwfc	16346,f,c
  5503  0109C0  0E00               	movlw	0
  5504  0109C2  6EDF               	movwf	16351,c
  5505                           
  5506                           ; BSR set to: 1
  5507                           ;backgroundTasks.c: 175: }
  5508                           
  5509                           ; BSR set to: 1
  5510                           ;backgroundTasks.c: 174: break;
  5511                           
  5512                           ;backgroundTasks.c: 173: default:
  5513                           
  5514                           ;backgroundTasks.c: 172: break;
  5515  0109C4  D028               	goto	l553
  5516  0109C6                     l561:
  5517                           
  5518                           ; BSR set to: 1
  5519  0109C6  EE20  F29B         	lfsr	2,handleStackBackgroundTasks@errIPv4+1
  5520  0109CA  006F FF78  F1F9    	movff	16350,??_handleStackBackgroundTasks
  5521  0109D0  006F FF74  F1FA    	movff	16349,??_handleStackBackgroundTasks+1
  5522                           
  5523                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5524                           ; Switch size 1, requested type "space"
  5525                           ; Number of cases is 2, Range of values is 0 to 1
  5526                           ; switch strategies available:
  5527                           ; Name         Instructions Cycles
  5528                           ; simple_byte            7     4 (average)
  5529                           ;	Chosen strategy is simple_byte
  5530  0109D6  0101               	movlb	1	; () banked
  5531  0109D8  51FA               	movf	(??_handleStackBackgroundTasks+1)& (0+255),w,b
  5532  0109DA  0A00               	xorlw	0	; case 0
  5533  0109DC  B4D8               	btfsc	16344,2,c
  5534  0109DE  D004               	goto	l12978
  5535  0109E0  0A01               	xorlw	1	; case 1
  5536  0109E2  B4D8               	btfsc	16344,2,c
  5537  0109E4  D006               	goto	l12980
  5538  0109E6  D017               	goto	l553
  5539  0109E8                     l12978:
  5540                           
  5541                           ; BSR set to: 1
  5542                           ; Switch size 1, requested type "space"
  5543                           ; Number of cases is 1, Range of values is 0 to 0
  5544                           ; switch strategies available:
  5545                           ; Name         Instructions Cycles
  5546                           ; simple_byte            4     3 (average)
  5547                           ;	Chosen strategy is simple_byte
  5548  0109E8  51F9               	movf	??_handleStackBackgroundTasks& (0+255),w,b
  5549  0109EA  0A00               	xorlw	0	; case 0
  5550  0109EC  B4D8               	btfsc	16344,2,c
  5551  0109EE  D7A5               	goto	l564
  5552  0109F0  D012               	goto	l553
  5553  0109F2                     l12980:
  5554                           
  5555                           ; BSR set to: 1
  5556                           ; Switch size 1, requested type "space"
  5557                           ; Number of cases is 2, Range of values is 145 to 148
  5558                           ; switch strategies available:
  5559                           ; Name         Instructions Cycles
  5560                           ; simple_byte            7     4 (average)
  5561                           ;	Chosen strategy is simple_byte
  5562  0109F2  51F9               	movf	??_handleStackBackgroundTasks& (0+255),w,b
  5563  0109F4  0A91               	xorlw	145	; case 145
  5564  0109F6  B4D8               	btfsc	16344,2,c
  5565  0109F8  D00E               	goto	l553
  5566  0109FA  0A05               	xorlw	5	; case 148
  5567  0109FC  B4D8               	btfsc	16344,2,c
  5568  0109FE  D7A9               	goto	l565
  5569                           
  5570                           ; BSR set to: 1
  5571                           ;backgroundTasks.c: 180: }
  5572                           
  5573                           ; BSR set to: 1
  5574                           ;backgroundTasks.c: 178: }
  5575                           ;backgroundTasks.c: 179: break;
  5576                           
  5577                           ; BSR set to: 1
  5578                           
  5579                           ; BSR set to: 1
  5580                           ;backgroundTasks.c: 176: } else {
  5581  010A00  D00A               	goto	l553
  5582  010A02                     l549:
  5583                           
  5584                           ; BSR set to: 1
  5585                           
  5586                           ; BSR set to: 1
  5587  010A02  51FF               	movf	handleStackBackgroundTasks@state& (0+255),w,b
  5588                           
  5589                           ; Switch size 1, requested type "space"
  5590                           ; Number of cases is 3, Range of values is 0 to 2
  5591                           ; switch strategies available:
  5592                           ; Name         Instructions Cycles
  5593                           ; simple_byte           10     6 (average)
  5594                           ;	Chosen strategy is simple_byte
  5595  010A04  0A00               	xorlw	0	; case 0
  5596  010A06  B4D8               	btfsc	16344,2,c
  5597  010A08  D69E               	goto	l550
  5598  010A0A  0A01               	xorlw	1	; case 1
  5599  010A0C  B4D8               	btfsc	16344,2,c
  5600  010A0E  D6BD               	goto	l554
  5601  010A10  0A03               	xorlw	3	; case 2
  5602  010A12  B4D8               	btfsc	16344,2,c
  5603  010A14  D771               	goto	l559
  5604  010A16                     l553:
  5605                           
  5606                           ;backgroundTasks.c: 183: }
  5607                           ;backgroundTasks.c: 186: errArp = arp_background(stack->ethernet.link);
  5608                           
  5609                           ; BSR set to: 1
  5610                           
  5611                           ; BSR set to: 1
  5612  010A16  0101               	movlb	1	; () banked
  5613  010A18  EE20 F022          	lfsr	2,34
  5614  010A1C  51F7               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5615  010A1E  26D9               	addwf	16345,f,c
  5616  010A20  51F8               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5617  010A22  22DA               	addwfc	16346,f,c
  5618  010A24  50DF               	movf	16351,w,c
  5619  010A26  ECED  F0A5         	call	_arp_background
  5620  010A2A  0060  F4F0  F295   	movff	?_arp_background,handleStackBackgroundTasks@errArp
  5621  010A30  0060  F4F4  F296   	movff	?_arp_background+1,handleStackBackgroundTasks@errArp+1
  5622  010A36  0060  F4F8  F297   	movff	?_arp_background+2,handleStackBackgroundTasks@errArp+2
  5623                           
  5624                           ;backgroundTasks.c: 187: errIPv4 = ipv4_background(stack->ethernet.link);
  5625  010A3C  0101               	movlb	1	; () banked
  5626  010A3E  EE20 F022          	lfsr	2,34
  5627  010A42  51F7               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5628  010A44  26D9               	addwf	16345,f,c
  5629  010A46  51F8               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5630  010A48  22DA               	addwfc	16346,f,c
  5631  010A4A  50DF               	movf	16351,w,c
  5632  010A4C  EC47  F0A2         	call	_ipv4_background
  5633  010A50  0060  F058  F29A   	movff	?_ipv4_background,handleStackBackgroundTasks@errIPv4
  5634  010A56  0060  F05C  F29B   	movff	?_ipv4_background+1,handleStackBackgroundTasks@errIPv4+1
  5635  010A5C  0060  F060  F29C   	movff	?_ipv4_background+2,handleStackBackgroundTasks@errIPv4+2
  5636                           
  5637                           ;backgroundTasks.c: 189: if (errIPv4.module == ERROR_MODULE_IPv4 &&
  5638                           ;backgroundTasks.c: 190: errIPv4.code == ERROR_IPv4_ADDRESS_ALREADY_IN_USE) {
  5639  010A62  0E04               	movlw	4
  5640  010A64  0102               	movlb	2	; () banked
  5641  010A66  199A               	xorwf	handleStackBackgroundTasks@errIPv4& (0+255),w,b
  5642  010A68  A4D8               	btfss	16344,2,c
  5643  010A6A  0012               	return	
  5644                           
  5645                           ; BSR set to: 2
  5646  010A6C  0EF5               	movlw	245
  5647  010A6E  199B               	xorwf	(handleStackBackgroundTasks@errIPv4+1)& (0+255),w,b
  5648  010A70  E16A               	bnz	l569
  5649  010A72  059C               	decf	(handleStackBackgroundTasks@errIPv4+2)& (0+255),w,b
  5650  010A74  A4D8               	btfss	16344,2,c
  5651  010A76  0012               	return	
  5652                           
  5653                           ; BSR set to: 2
  5654                           ;backgroundTasks.c: 192: UART_setFormat(UART_COLOR_BG_RED);
  5655  010A78  0E00               	movlw	0
  5656  010A7A  EC67  F0B0         	call	_UART_setFormat
  5657                           
  5658                           ;backgroundTasks.c: 193: UARTTransmitText("[IPv4]: Address conflict detected.\n\r");
  5659  010A7E  0E04               	movlw	low STR_27
  5660  010A80  0100               	movlb	0	; () banked
  5661  010A82  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  5662  010A84  0EFD               	movlw	high STR_27
  5663  010A86  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5664  010A88  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5665                           
  5666                           ;backgroundTasks.c: 194: UART_resetFormat();
  5667  010A8C  EC77  F0BB         	call	_UART_resetFormat	;wreg free
  5668                           
  5669                           ;backgroundTasks.c: 196: stack->source = ipv4_generateAutoIP();
  5670  010A90  EC9C  F0B7         	call	_ipv4_generateAutoIP	;wreg free
  5671  010A94  0101               	movlb	1	; () banked
  5672  010A96  EE20 F077          	lfsr	2,119
  5673  010A9A  51F7               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5674  010A9C  26D9               	addwf	16345,f,c
  5675  010A9E  51F8               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5676  010AA0  22DA               	addwfc	16346,f,c
  5677  010AA2  0060  F0AB  FFDE   	movff	?_ipv4_generateAutoIP,16350
  5678  010AA8  0060  F0AF  FFDE   	movff	?_ipv4_generateAutoIP+1,16350
  5679  010AAE  0060  F0B3  FFDE   	movff	?_ipv4_generateAutoIP+2,16350
  5680  010AB4  0060  F0B7  FFDE   	movff	?_ipv4_generateAutoIP+3,16350
  5681                           
  5682                           ; BSR set to: 1
  5683                           ;backgroundTasks.c: 198: UART_setFormat(UART_COLOR_BG_RED);
  5684  010ABA  0E00               	movlw	0
  5685  010ABC  EC67  F0B0         	call	_UART_setFormat
  5686                           
  5687                           ;backgroundTasks.c: 199: UARTTransmitText("[IPv4]: Setting IPv4 Src Address to ");
  5688  010AC0  0E29               	movlw	low STR_28
  5689  010AC2  0100               	movlb	0	; () banked
  5690  010AC4  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  5691  010AC6  0EFD               	movlw	high STR_28
  5692  010AC8  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5693  010ACA  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5694                           
  5695                           ;backgroundTasks.c: 200: UARTTransmitText(ipAdressToString(stack->source));
  5696  010ACE  0101               	movlb	1	; () banked
  5697  010AD0  EE20 F077          	lfsr	2,119
  5698  010AD4  51F7               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5699  010AD6  26D9               	addwf	16345,f,c
  5700  010AD8  51F8               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5701  010ADA  22DA               	addwfc	16346,f,c
  5702  010ADC  006F FF78  F066    	movff	16350,ipAdressToString@ip
  5703  010AE2  006F FF78  F067    	movff	16350,ipAdressToString@ip+1
  5704  010AE8  006F FF78  F068    	movff	16350,ipAdressToString@ip+2
  5705  010AEE  006F FF78  F069    	movff	16350,ipAdressToString@ip+3
  5706  010AF4  EC6A  F0A8         	call	_ipAdressToString	;wreg free
  5707  010AF8  0060  F198  F06D   	movff	?_ipAdressToString,UARTTransmitText@str
  5708  010AFE  0060  F19C  F06E   	movff	?_ipAdressToString+1,UARTTransmitText@str+1
  5709  010B04  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5710                           
  5711                           ;backgroundTasks.c: 201: UARTTransmitText("\n\r");
  5712  010B08  0EEB               	movlw	low (STR_17+1)
  5713  010B0A  0100               	movlb	0	; () banked
  5714  010B0C  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  5715  010B0E  0EFF               	movlw	high (STR_17+1)
  5716  010B10  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5717  010B12  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  5718                           
  5719                           ;backgroundTasks.c: 202: UART_resetFormat();
  5720  010B16  EC77  F0BB         	call	_UART_resetFormat	;wreg free
  5721                           
  5722                           ;backgroundTasks.c: 204: ipv4_setIPSourceAddress(stack->source);
  5723  010B1A  0101               	movlb	1	; () banked
  5724  010B1C  EE20 F077          	lfsr	2,119
  5725  010B20  51F7               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5726  010B22  26D9               	addwf	16345,f,c
  5727  010B24  51F8               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5728  010B26  22DA               	addwfc	16346,f,c
  5729  010B28  006F FF78  F016    	movff	16350,ipv4_setIPSourceAddress@ip
  5730  010B2E  006F FF78  F017    	movff	16350,ipv4_setIPSourceAddress@ip+1
  5731  010B34  006F FF78  F018    	movff	16350,ipv4_setIPSourceAddress@ip+2
  5732  010B3A  006F FF78  F019    	movff	16350,ipv4_setIPSourceAddress@ip+3
  5733  010B40  ECDD  F0BA         	call	_ipv4_setIPSourceAddress	;wreg free
  5734  010B44  0012               	return	
  5735  010B46                     l569:
  5736  010B46  0012               	return		;funcret
  5737  010B48                     __end_of_handleStackBackgroundTasks:
  5738                           	opt stack 0
  5739                           
  5740 ;; *************** function _ipv4_setIPSourceAddress *****************
  5741 ;; Defined at:
  5742 ;;		line 370 in file "src/stack/protocols/ipv4.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;  ip              4   21[COMRAM] struct ipv4_address
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;		None
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  1    wreg      void 
  5749 ;; Registers used:
  5750 ;;		wreg, status,2
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5756 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5759 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5760 ;;Total ram usage:        4 bytes
  5761 ;; Hardware stack levels used:    1
  5762 ;; Hardware stack levels required when called:    4
  5763 ;; This function calls:
  5764 ;;		Nothing
  5765 ;; This function is called by:
  5766 ;;		_handleStackBackgroundTasks
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           	psect	text11
  5771  0175BA                     __ptext11:
  5772                           	opt stack 0
  5773  0175BA                     _ipv4_setIPSourceAddress:
  5774                           	opt stack 25
  5775                           
  5776                           ;ipv4.c: 371: ipPreliminarySource = ip;
  5777                           
  5778                           ;incstack = 0
  5779  0175BA  0060  F058  F2CC   	movff	ipv4_setIPSourceAddress@ip,_ipPreliminarySource
  5780  0175C0  0060  F05C  F2CD   	movff	ipv4_setIPSourceAddress@ip+1,_ipPreliminarySource+1
  5781  0175C6  0060  F060  F2CE   	movff	ipv4_setIPSourceAddress@ip+2,_ipPreliminarySource+2
  5782  0175CC  0060  F064  F2CF   	movff	ipv4_setIPSourceAddress@ip+3,_ipPreliminarySource+3
  5783                           
  5784                           ;ipv4.c: 372: fSrcAddrChanged = 1u;
  5785  0175D2  0E01               	movlw	1
  5786  0175D4  6E3F               	movwf	_fSrcAddrChanged,c
  5787  0175D6  0012               	return		;funcret
  5788  0175D8                     __end_of_ipv4_setIPSourceAddress:
  5789                           	opt stack 0
  5790                           
  5791 ;; *************** function _ipv4_sendFrame *****************
  5792 ;; Defined at:
  5793 ;;		line 54 in file "src/stack/protocols/ipv4.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  ipPacket       66   44[BANK1 ] struct ipv4_packet
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;  err             3  144[BANK0 ] struct error
  5798 ;;  index           1  143[BANK0 ] unsigned char 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  3   44[BANK1 ] struct error
  5801 ;; Registers used:
  5802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5808 ;;      Params:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5809 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5810 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5811 ;;      Totals:         0      12      66       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5812 ;;Total ram usage:       78 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:   11
  5815 ;; This function calls:
  5816 ;;		_arp_checkForEntry
  5817 ;;		_arp_getEntryFromTable
  5818 ;;		_arp_sendRequest
  5819 ;;		_ethernetController_getMacAddress
  5820 ;;		_ethernetController_sendPacket
  5821 ;;		_ethernetController_writeDestinationMACAddress
  5822 ;;		_getMillis
  5823 ;; This function is called by:
  5824 ;;		_handleStackBackgroundTasks
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text12
  5829  0142E0                     __ptext12:
  5830                           	opt stack 0
  5831  0142E0                     _ipv4_sendFrame:
  5832                           	opt stack 18
  5833                           
  5834                           ;ipv4.c: 55: error_t err;
  5835                           ;ipv4.c: 56: err.module = ERROR_MODULE_ARP;
  5836                           
  5837                           ;incstack = 0
  5838  0142E0  0E03               	movlw	3
  5839  0142E2  0100               	movlb	0	; () banked
  5840  0142E4  6FF0               	movwf	ipv4_sendFrame@err& (0+255),b
  5841                           
  5842                           ;ipv4.c: 57: err.code = ERROR_ARP_WAITING;
  5843  0142E6  0E01               	movlw	1
  5844  0142E8  6FF2               	movwf	(ipv4_sendFrame@err+2)& (0+255),b
  5845  0142EA  0E91               	movlw	145
  5846  0142EC  6FF1               	movwf	(ipv4_sendFrame@err+1)& (0+255),b
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;ipv4.c: 58: uint8_t index;
  5850                           ;ipv4.c: 59: uint8_t static failedResolveCounter = 0;
  5851                           ;ipv4.c: 60: time_t static oldTime = 0;
  5852                           ;ipv4.c: 64: if (arp_checkForEntry(ipPacket.ipv4Header.destination, &index)) {
  5853  0142EE  0060  F4FC  F01D   	movff	ipv4_sendFrame@ipPacket+19,arp_checkForEntry@ip
  5854  0142F4  0060  F500  F01E   	movff	ipv4_sendFrame@ipPacket+20,arp_checkForEntry@ip+1
  5855  0142FA  0060  F504  F01F   	movff	ipv4_sendFrame@ipPacket+21,arp_checkForEntry@ip+2
  5856  014300  0060  F508  F020   	movff	ipv4_sendFrame@ipPacket+22,arp_checkForEntry@ip+3
  5857  014306  0EEF               	movlw	low ipv4_sendFrame@index
  5858  014308  6E21               	movwf	arp_checkForEntry@index,c
  5859  01430A  0E00               	movlw	high ipv4_sendFrame@index
  5860  01430C  6E22               	movwf	arp_checkForEntry@index+1,c
  5861  01430E  EC49  F0AE         	call	_arp_checkForEntry	;wreg free
  5862  014312  0900               	iorlw	0
  5863  014314  B4D8               	btfsc	16344,2,c
  5864  014316  D049               	goto	l1149
  5865                           
  5866                           ;ipv4.c: 66: ipPacket.ethernet.destination = arp_getEntryFromTable(index);
  5867  014318  0100               	movlb	0	; () banked
  5868  01431A  51EF               	movf	ipv4_sendFrame@index& (0+255),w,b
  5869  01431C  ECC2  F0B9         	call	_arp_getEntryFromTable
  5870  014320  EE20  F154         	lfsr	2,ipv4_sendFrame@ipPacket+40
  5871  014324  0E05               	movlw	5
  5872  014326                     u15031:
  5873  014326  006F FFAF FFDB     	movff	16363,16347
  5874  01432C  06E8               	decf	16360,f,c
  5875  01432E  E2FB               	bc	u15031
  5876                           
  5877                           ;ipv4.c: 75: ipPacket.ethernet.source = ethernetController_getMacAddress();
  5878  014330  ECB1  F0B5         	call	_ethernetController_getMacAddress	;wreg free
  5879  014334  EE20  F14E         	lfsr	2,ipv4_sendFrame@ipPacket+34
  5880  014338  0E05               	movlw	5
  5881  01433A                     u15041:
  5882  01433A  006F FFAF FFDB     	movff	16363,16347
  5883  014340  06E8               	decf	16360,f,c
  5884  014342  E2FB               	bc	u15041
  5885                           
  5886                           ;ipv4.c: 77: ethernetController_writeDestinationMACAddress(ipPacket.ethernet.destination
      +                          , ipPacket.ethernet.memory);
  5887  014344  EE20  F154         	lfsr	2,ipv4_sendFrame@ipPacket+40
  5888  014348  EE00  F025         	lfsr	0,ethernetController_writeDestinationMACAddress@addr
  5889  01434C  0E05               	movlw	5
  5890  01434E                     u15051:
  5891  01434E  006F FF6F FFEB     	movff	16347,16363
  5892  014354  06E8               	decf	16360,f,c
  5893  014356  E2FB               	bc	u15051
  5894  014358  EE20  F15C         	lfsr	2,ipv4_sendFrame@ipPacket+48
  5895  01435C  EE00  F02B         	lfsr	0,ethernetController_writeDestinationMACAddress@field
  5896  014360  0E08               	movlw	8
  5897  014362                     u15061:
  5898  014362  006F FF6F FFEB     	movff	16347,16363
  5899  014368  06E8               	decf	16360,f,c
  5900  01436A  E2FB               	bc	u15061
  5901  01436C  EC2B  F0B2         	call	_ethernetController_writeDestinationMACAddress	;wreg free
  5902                           
  5903                           ;ipv4.c: 78: ethernetController_sendPacket(ipPacket.ethernet.memory);
  5904  014370  EE20  F15C         	lfsr	2,ipv4_sendFrame@ipPacket+48
  5905  014374  EE00  F028         	lfsr	0,ethernetController_sendPacket@field
  5906  014378  0E08               	movlw	8
  5907  01437A                     u15071:
  5908  01437A  006F FF6F FFEB     	movff	16347,16363
  5909  014380  06E8               	decf	16360,f,c
  5910  014382  E2FB               	bc	u15071
  5911  014384  ECAB  F0B9         	call	_ethernetController_sendPacket	;wreg free
  5912                           
  5913                           ;ipv4.c: 79: err.code = (uint16_t)0;
  5914  014388  0E00               	movlw	0
  5915  01438A  0100               	movlb	0	; () banked
  5916  01438C  6FF2               	movwf	(ipv4_sendFrame@err+2)& (0+255),b
  5917  01438E  0E00               	movlw	0
  5918  014390  6FF1               	movwf	(ipv4_sendFrame@err+1)& (0+255),b
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;ipv4.c: 80: oldTime = 0;
  5922  014392  0E00               	movlw	0
  5923  014394  0102               	movlb	2	; () banked
  5924  014396  6FA3               	movwf	ipv4_sendFrame@oldTime& (0+255),b
  5925  014398  0E00               	movlw	0
  5926  01439A  6FA4               	movwf	(ipv4_sendFrame@oldTime+1)& (0+255),b
  5927  01439C  0E00               	movlw	0
  5928  01439E  6FA5               	movwf	(ipv4_sendFrame@oldTime+2)& (0+255),b
  5929  0143A0  0E00               	movlw	0
  5930  0143A2  6FA6               	movwf	(ipv4_sendFrame@oldTime+3)& (0+255),b
  5931                           
  5932                           ; BSR set to: 2
  5933                           ;ipv4.c: 81: failedResolveCounter = 0;
  5934  0143A4  0E00               	movlw	0
  5935  0143A6  6E3E               	movwf	ipv4_sendFrame@failedResolveCounter,c
  5936                           
  5937                           ;ipv4.c: 82: } else if ((getMillis() - oldTime) > 2000u || oldTime == 0) {
  5938  0143A8  D068               	goto	l1154
  5939  0143AA                     l1149:
  5940                           
  5941                           ; BSR set to: 2
  5942  0143AA  0060  FA8C  F0E7   	movff	ipv4_sendFrame@oldTime,??_ipv4_sendFrame
  5943  0143B0  0060  FA90  F0E8   	movff	ipv4_sendFrame@oldTime+1,??_ipv4_sendFrame+1
  5944  0143B6  0060  FA94  F0E9   	movff	ipv4_sendFrame@oldTime+2,??_ipv4_sendFrame+2
  5945  0143BC  0060  FA98  F0EA   	movff	ipv4_sendFrame@oldTime+3,??_ipv4_sendFrame+3
  5946  0143C2  0100               	movlb	0	; () banked
  5947  0143C4  1FE7               	comf	??_ipv4_sendFrame& (0+255),f,b
  5948  0143C6  1FE8               	comf	(??_ipv4_sendFrame+1)& (0+255),f,b
  5949  0143C8  1FE9               	comf	(??_ipv4_sendFrame+2)& (0+255),f,b
  5950  0143CA  1FEA               	comf	(??_ipv4_sendFrame+3)& (0+255),f,b
  5951  0143CC  2BE7               	incf	??_ipv4_sendFrame& (0+255),f,b
  5952  0143CE  0E00               	movlw	0
  5953  0143D0  23E8               	addwfc	(??_ipv4_sendFrame+1)& (0+255),f,b
  5954  0143D2  23E9               	addwfc	(??_ipv4_sendFrame+2)& (0+255),f,b
  5955  0143D4  23EA               	addwfc	(??_ipv4_sendFrame+3)& (0+255),f,b
  5956  0143D6  EC15  F0BB         	call	_getMillis	;wreg free
  5957  0143DA  0100               	movlb	0	; () banked
  5958  0143DC  51E7               	movf	??_ipv4_sendFrame& (0+255),w,b
  5959  0143DE  2416               	addwf	?_getMillis,w,c
  5960  0143E0  6FEB               	movwf	(??_ipv4_sendFrame+4)& (0+255),b
  5961  0143E2  51E8               	movf	(??_ipv4_sendFrame+1)& (0+255),w,b
  5962  0143E4  2017               	addwfc	?_getMillis+1,w,c
  5963  0143E6  6FEC               	movwf	(??_ipv4_sendFrame+5)& (0+255),b
  5964  0143E8  51E9               	movf	(??_ipv4_sendFrame+2)& (0+255),w,b
  5965  0143EA  2018               	addwfc	?_getMillis+2,w,c
  5966  0143EC  6FED               	movwf	(??_ipv4_sendFrame+6)& (0+255),b
  5967  0143EE  51EA               	movf	(??_ipv4_sendFrame+3)& (0+255),w,b
  5968  0143F0  2019               	addwfc	?_getMillis+3,w,c
  5969  0143F2  6FEE               	movwf	(??_ipv4_sendFrame+7)& (0+255),b
  5970  0143F4  51EE               	movf	(??_ipv4_sendFrame+7)& (0+255),w,b
  5971  0143F6  11ED               	iorwf	(??_ipv4_sendFrame+6)& (0+255),w,b
  5972  0143F8  E10D               	bnz	l12062
  5973  0143FA  0ED1               	movlw	209
  5974  0143FC  5DEB               	subwf	(??_ipv4_sendFrame+4)& (0+255),w,b
  5975  0143FE  0E07               	movlw	7
  5976  014400  59EC               	subwfb	(??_ipv4_sendFrame+5)& (0+255),w,b
  5977  014402  B0D8               	btfsc	16344,0,c
  5978  014404  D007               	goto	u15090
  5979                           
  5980                           ; BSR set to: 0
  5981  014406  0102               	movlb	2	; () banked
  5982  014408  51A3               	movf	ipv4_sendFrame@oldTime& (0+255),w,b
  5983  01440A  11A4               	iorwf	(ipv4_sendFrame@oldTime+1)& (0+255),w,b
  5984  01440C  11A5               	iorwf	(ipv4_sendFrame@oldTime+2)& (0+255),w,b
  5985  01440E  11A6               	iorwf	(ipv4_sendFrame@oldTime+3)& (0+255),w,b
  5986  014410  A4D8               	btfss	16344,2,c
  5987  014412  D033               	goto	l1154
  5988  014414                     u15090:
  5989  014414                     l12062:
  5990                           
  5991                           ;ipv4.c: 83: failedResolveCounter++;
  5992  014414  2A3E               	incf	ipv4_sendFrame@failedResolveCounter,f,c
  5993                           
  5994                           ;ipv4.c: 89: oldTime = getMillis();
  5995  014416  EC15  F0BB         	call	_getMillis	;wreg free
  5996  01441A  0060  F058  F2A3   	movff	?_getMillis,ipv4_sendFrame@oldTime
  5997  014420  0060  F05C  F2A4   	movff	?_getMillis+1,ipv4_sendFrame@oldTime+1
  5998  014426  0060  F060  F2A5   	movff	?_getMillis+2,ipv4_sendFrame@oldTime+2
  5999  01442C  0060  F064  F2A6   	movff	?_getMillis+3,ipv4_sendFrame@oldTime+3
  6000                           
  6001                           ;ipv4.c: 90: arp_sendRequest(ipPacket.ipv4Header.source, ipPacket.ipv4Header.destination
      +                          );
  6002  014432  0060  F4EC  F0DF   	movff	ipv4_sendFrame@ipPacket+15,arp_sendRequest@ipSender
  6003  014438  0060  F4F0  F0E0   	movff	ipv4_sendFrame@ipPacket+16,arp_sendRequest@ipSender+1
  6004  01443E  0060  F4F4  F0E1   	movff	ipv4_sendFrame@ipPacket+17,arp_sendRequest@ipSender+2
  6005  014444  0060  F4F8  F0E2   	movff	ipv4_sendFrame@ipPacket+18,arp_sendRequest@ipSender+3
  6006  01444A  0060  F4FC  F0E3   	movff	ipv4_sendFrame@ipPacket+19,arp_sendRequest@ipTarget
  6007  014450  0060  F500  F0E4   	movff	ipv4_sendFrame@ipPacket+20,arp_sendRequest@ipTarget+1
  6008  014456  0060  F504  F0E5   	movff	ipv4_sendFrame@ipPacket+21,arp_sendRequest@ipTarget+2
  6009  01445C  0060  F508  F0E6   	movff	ipv4_sendFrame@ipPacket+22,arp_sendRequest@ipTarget+3
  6010  014462  EC5D  F0AF         	call	_arp_sendRequest	;wreg free
  6011                           
  6012                           ;ipv4.c: 91: if (failedResolveCounter >= 3u) {
  6013  014466  0E02               	movlw	2
  6014  014468  643E               	cpfsgt	ipv4_sendFrame@failedResolveCounter,c
  6015  01446A  D007               	goto	l1154
  6016                           
  6017                           ;ipv4.c: 92: failedResolveCounter = 0;
  6018  01446C  0E00               	movlw	0
  6019  01446E  6E3E               	movwf	ipv4_sendFrame@failedResolveCounter,c
  6020                           
  6021                           ;ipv4.c: 93: err.code = ERROR_ARP_MAXIMUM_NUMBER_OF_REQUESTS_REACHED;
  6022  014470  0E01               	movlw	1
  6023  014472  0100               	movlb	0	; () banked
  6024  014474  6FF2               	movwf	(ipv4_sendFrame@err+2)& (0+255),b
  6025  014476  0E94               	movlw	148
  6026  014478  6FF1               	movwf	(ipv4_sendFrame@err+1)& (0+255),b
  6027  01447A                     l1154:
  6028                           
  6029                           ;ipv4.c: 94: }
  6030                           ;ipv4.c: 95: }
  6031                           ;ipv4.c: 96: return err;
  6032                           
  6033                           ; BSR set to: 0
  6034                           
  6035                           ; BSR set to: 0
  6036                           
  6037                           ; BSR set to: 0
  6038  01447A  0060  F3C0  F12C   	movff	ipv4_sendFrame@err,?_ipv4_sendFrame
  6039  014480  0060  F3C4  F12D   	movff	ipv4_sendFrame@err+1,?_ipv4_sendFrame+1
  6040  014486  0060  F3C8  F12E   	movff	ipv4_sendFrame@err+2,?_ipv4_sendFrame+2
  6041  01448C  0012               	return	
  6042  01448E                     __end_of_ipv4_sendFrame:
  6043                           	opt stack 0
  6044                           
  6045 ;; *************** function _arp_getEntryFromTable *****************
  6046 ;; Defined at:
  6047 ;;		line 478 in file "src/stack/protocols/arp.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  index           1    wreg     unsigned char 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  index           1   28[COMRAM] unsigned char 
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  6   21[COMRAM] struct macaddress
  6054 ;; Registers used:
  6055 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6061 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6064 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6065 ;;Total ram usage:        8 bytes
  6066 ;; Hardware stack levels used:    1
  6067 ;; Hardware stack levels required when called:    4
  6068 ;; This function calls:
  6069 ;;		Nothing
  6070 ;; This function is called by:
  6071 ;;		_ipv4_sendFrame
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text13
  6076  017384                     __ptext13:
  6077                           	opt stack 0
  6078  017384                     _arp_getEntryFromTable:
  6079                           	opt stack 24
  6080                           
  6081                           ;incstack = 0
  6082                           ;arp_getEntryFromTable@index stored from wreg
  6083  017384  6E1D               	movwf	arp_getEntryFromTable@index,c
  6084                           
  6085                           ;arp.c: 479: return arp_table[index].mac;
  6086  017386  501D               	movf	arp_getEntryFromTable@index,w,c
  6087  017388  0D0E               	mullw	14
  6088  01738A  0E04               	movlw	4
  6089  01738C  26F3               	addwf	16371,f,c
  6090  01738E  0E00               	movlw	0
  6091  017390  22F4               	addwfc	16372,f,c
  6092  017392  0E7C               	movlw	low _arp_table
  6093  017394  24F3               	addwf	16371,w,c
  6094  017396  6ED9               	movwf	16345,c
  6095  017398  0E04               	movlw	high _arp_table
  6096  01739A  20F4               	addwfc	16372,w,c
  6097  01739C  6EDA               	movwf	16346,c
  6098  01739E  EE00  F016         	lfsr	0,?_arp_getEntryFromTable
  6099  0173A2  0E05               	movlw	5
  6100  0173A4                     u14521:
  6101  0173A4  006F FF6F FFEB     	movff	16347,16363
  6102  0173AA  06E8               	decf	16360,f,c
  6103  0173AC  E2FB               	bc	u14521
  6104  0173AE  0012               	return	
  6105  0173B0                     __end_of_arp_getEntryFromTable:
  6106                           	opt stack 0
  6107                           
  6108 ;; *************** function _ipv4_generateAutoIP *****************
  6109 ;; Defined at:
  6110 ;;		line 453 in file "src/stack/protocols/ipv4.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  ip              4   45[COMRAM] struct ipv4_address
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  4   41[COMRAM] struct ipv4_address
  6117 ;; Registers used:
  6118 ;;		wreg, status,2, status,0, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6124 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6125 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6127 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6128 ;;Total ram usage:        8 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    6
  6131 ;; This function calls:
  6132 ;;		___awmod
  6133 ;;		_rand
  6134 ;; This function is called by:
  6135 ;;		_handleStackBackgroundTasks
  6136 ;;		_main
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text14
  6141  016F38                     __ptext14:
  6142                           	opt stack 0
  6143  016F38                     _ipv4_generateAutoIP:
  6144                           	opt stack 24
  6145                           
  6146                           ;ipv4.c: 454: ipv4_address_t ip;
  6147                           ;ipv4.c: 456: ip.address[0] = 169;
  6148                           
  6149                           ;incstack = 0
  6150  016F38  0EA9               	movlw	169
  6151  016F3A  6E2E               	movwf	ipv4_generateAutoIP@ip,c
  6152                           
  6153                           ;ipv4.c: 457: ip.address[1] = 254;
  6154  016F3C  0EFE               	movlw	254
  6155  016F3E  6E2F               	movwf	ipv4_generateAutoIP@ip+1,c
  6156                           
  6157                           ;ipv4.c: 458: ip.address[2] = (rand() % 253) + 1;
  6158  016F40  ECE6  F0B5         	call	_rand	;wreg free
  6159  016F44  0060  F088  F024   	movff	?_rand,___awmod@dividend
  6160  016F4A  0060  F08C  F025   	movff	?_rand+1,___awmod@dividend+1
  6161  016F50  0E00               	movlw	0
  6162  016F52  6E27               	movwf	___awmod@divisor+1,c
  6163  016F54  0EFD               	movlw	253
  6164  016F56  6E26               	movwf	___awmod@divisor,c
  6165  016F58  EC2B  F0B4         	call	___awmod	;wreg free
  6166  016F5C  2824               	incf	?___awmod,w,c
  6167  016F5E  6E30               	movwf	ipv4_generateAutoIP@ip+2,c
  6168                           
  6169                           ;ipv4.c: 459: ip.address[3] = (rand() % 256);
  6170  016F60  ECE6  F0B5         	call	_rand	;wreg free
  6171  016F64  5022               	movf	?_rand,w,c
  6172  016F66  6E31               	movwf	ipv4_generateAutoIP@ip+3,c
  6173                           
  6174                           ;ipv4.c: 460: return ip;
  6175  016F68  0060  F0B8  F02A   	movff	ipv4_generateAutoIP@ip,?_ipv4_generateAutoIP
  6176  016F6E  0060  F0BC  F02B   	movff	ipv4_generateAutoIP@ip+1,?_ipv4_generateAutoIP+1
  6177  016F74  0060  F0C0  F02C   	movff	ipv4_generateAutoIP@ip+2,?_ipv4_generateAutoIP+2
  6178  016F7A  0060  F0C4  F02D   	movff	ipv4_generateAutoIP@ip+3,?_ipv4_generateAutoIP+3
  6179  016F80  0012               	return	
  6180  016F82                     __end_of_ipv4_generateAutoIP:
  6181                           	opt stack 0
  6182                           
  6183 ;; *************** function ___awmod *****************
  6184 ;; Defined at:
  6185 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;  dividend        2   35[COMRAM] int 
  6188 ;;  divisor         2   37[COMRAM] int 
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;  sign            1   40[COMRAM] unsigned char 
  6191 ;;  counter         1   39[COMRAM] unsigned char 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  2   35[COMRAM] int 
  6194 ;; Registers used:
  6195 ;;		wreg, status,2, status,0
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6204 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6205 ;;Total ram usage:        6 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:    4
  6208 ;; This function calls:
  6209 ;;		Nothing
  6210 ;; This function is called by:
  6211 ;;		_ipv4_generateAutoIP
  6212 ;;		_icmp_sendEchoRequest
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           	psect	text15
  6217  016856                     __ptext15:
  6218                           	opt stack 0
  6219  016856                     ___awmod:
  6220                           	opt stack 25
  6221                           
  6222                           ;incstack = 0
  6223  016856  0E00               	movlw	0
  6224  016858  6E29               	movwf	___awmod@sign,c
  6225  01685A  AE25               	btfss	___awmod@dividend+1,7,c
  6226  01685C  D006               	goto	l1685
  6227  01685E  6C24               	negf	___awmod@dividend,c
  6228  016860  1E25               	comf	___awmod@dividend+1,f,c
  6229  016862  B0D8               	btfsc	16344,0,c
  6230  016864  2A25               	incf	___awmod@dividend+1,f,c
  6231  016866  0E01               	movlw	1
  6232  016868  6E29               	movwf	___awmod@sign,c
  6233  01686A                     l1685:
  6234  01686A  AE27               	btfss	___awmod@divisor+1,7,c
  6235  01686C  D004               	goto	l1686
  6236  01686E  6C26               	negf	___awmod@divisor,c
  6237  016870  1E27               	comf	___awmod@divisor+1,f,c
  6238  016872  B0D8               	btfsc	16344,0,c
  6239  016874  2A27               	incf	___awmod@divisor+1,f,c
  6240  016876                     l1686:
  6241  016876  5026               	movf	___awmod@divisor,w,c
  6242  016878  1027               	iorwf	___awmod@divisor+1,w,c
  6243  01687A  B4D8               	btfsc	16344,2,c
  6244  01687C  D018               	goto	l1693
  6245  01687E  0E01               	movlw	1
  6246  016880  6E28               	movwf	___awmod@counter,c
  6247  016882  D004               	goto	l1688
  6248  016884  90D8               	bcf	16344,0,c
  6249  016886  3626               	rlcf	___awmod@divisor,f,c
  6250  016888  3627               	rlcf	___awmod@divisor+1,f,c
  6251  01688A  2A28               	incf	___awmod@counter,f,c
  6252  01688C                     l1688:
  6253  01688C  AE27               	btfss	___awmod@divisor+1,7,c
  6254  01688E  D7FA               	goto	l1689
  6255  016890                     u14560:
  6256  016890  5026               	movf	___awmod@divisor,w,c
  6257  016892  5C24               	subwf	___awmod@dividend,w,c
  6258  016894  5027               	movf	___awmod@divisor+1,w,c
  6259  016896  5825               	subwfb	___awmod@dividend+1,w,c
  6260  016898  A0D8               	btfss	16344,0,c
  6261  01689A  D004               	goto	l1692
  6262  01689C  5026               	movf	___awmod@divisor,w,c
  6263  01689E  5E24               	subwf	___awmod@dividend,f,c
  6264  0168A0  5027               	movf	___awmod@divisor+1,w,c
  6265  0168A2  5A25               	subwfb	___awmod@dividend+1,f,c
  6266  0168A4                     l1692:
  6267  0168A4  90D8               	bcf	16344,0,c
  6268  0168A6  3227               	rrcf	___awmod@divisor+1,f,c
  6269  0168A8  3226               	rrcf	___awmod@divisor,f,c
  6270  0168AA  2E28               	decfsz	___awmod@counter,f,c
  6271  0168AC  D7F1               	goto	u14560
  6272  0168AE                     l1693:
  6273  0168AE  5029               	movf	___awmod@sign,w,c
  6274  0168B0  B4D8               	btfsc	16344,2,c
  6275  0168B2  D004               	goto	l1694
  6276  0168B4  6C24               	negf	___awmod@dividend,c
  6277  0168B6  1E25               	comf	___awmod@dividend+1,f,c
  6278  0168B8  B0D8               	btfsc	16344,0,c
  6279  0168BA  2A25               	incf	___awmod@dividend+1,f,c
  6280  0168BC                     l1694:
  6281  0168BC  0060  F090  F024   	movff	___awmod@dividend,?___awmod
  6282  0168C2  0060  F094  F025   	movff	___awmod@dividend+1,?___awmod+1
  6283  0168C8  0012               	return	
  6284  0168CA                     __end_of___awmod:
  6285                           	opt stack 0
  6286                           
  6287 ;; *************** function _ipv4_background *****************
  6288 ;; Defined at:
  6289 ;;		line 377 in file "src/stack/protocols/ipv4.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  link            1    wreg     enum E73
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;  link            1    0[COMRAM] enum E73
  6294 ;;  err             3   26[COMRAM] struct error
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  3   21[COMRAM] struct error
  6297 ;; Registers used:
  6298 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6304 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6305 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6306 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6307 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6308 ;;Total ram usage:        8 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    4
  6311 ;; This function calls:
  6312 ;;		Nothing
  6313 ;; This function is called by:
  6314 ;;		_handleStackBackgroundTasks
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text16
  6319  01448E                     __ptext16:
  6320                           	opt stack 0
  6321  01448E                     _ipv4_background:
  6322                           	opt stack 25
  6323                           
  6324                           ;ipv4.c: 378: error_t err;
  6325                           ;ipv4.c: 379: err.module = ERROR_MODULE_IPv4;
  6326                           
  6327                           ;incstack = 0
  6328  01448E  0E04               	movlw	4
  6329  014490  6E1B               	movwf	ipv4_background@err,c
  6330                           
  6331                           ;ipv4.c: 380: err.code = (uint16_t)0;
  6332  014492  0E00               	movlw	0
  6333  014494  6E1D               	movwf	ipv4_background@err+2,c
  6334  014496  0E00               	movlw	0
  6335  014498  6E1C               	movwf	ipv4_background@err+1,c
  6336                           
  6337                           ;ipv4.c: 381: if ((*arpStatus).module == ERROR_MODULE_ARP && fSrcAddrChanged) {
  6338  01449A  0060  F0DF  FFD9   	movff	_arpStatus,16345
  6339  0144A0  0060  F0E3  FFDA   	movff	_arpStatus+1,16346
  6340  0144A6  0E03               	movlw	3
  6341  0144A8  18DE               	xorwf	16350,w,c
  6342  0144AA  A4D8               	btfss	16344,2,c
  6343  0144AC  D0B8               	goto	l1208
  6344  0144AE  503F               	movf	_fSrcAddrChanged,w,c
  6345  0144B0  A4D8               	btfss	16344,2,c
  6346  0144B2  D08D               	goto	l1209
  6347  0144B4  D0B4               	goto	l1208
  6348  0144B6                     
  6349                           ;ipv4.c: 384: err = (*arpStatus);
  6350  0144B6  0060  F0DF  FFD9   	movff	_arpStatus,16345
  6351  0144BC  0060  F0E3  FFDA   	movff	_arpStatus+1,16346
  6352  0144C2  006F FF78  F01B    	movff	16350,ipv4_background@err
  6353  0144C8  006F FF78  F01C    	movff	16350,ipv4_background@err+1
  6354  0144CE  006F FF74  F01D    	movff	16349,ipv4_background@err+2
  6355                           
  6356                           ;ipv4.c: 388: ipSource = ipPreliminarySource;
  6357  0144D4  C2CC  F2D4         	movff	_ipPreliminarySource,_ipSource
  6358  0144D8  C2CD  F2D5         	movff	_ipPreliminarySource+1,_ipSource+1
  6359  0144DC  C2CE  F2D6         	movff	_ipPreliminarySource+2,_ipSource+2
  6360  0144E0  C2CF  F2D7         	movff	_ipPreliminarySource+3,_ipSource+3
  6361                           
  6362                           ;ipv4.c: 389: fSrcAddrChanged = 0u;
  6363  0144E4  0E00               	movlw	0
  6364  0144E6  6E3F               	movwf	_fSrcAddrChanged,c
  6365                           
  6366                           ;ipv4.c: 390: return err;
  6367  0144E8  0060  F06C  F016   	movff	ipv4_background@err,?_ipv4_background
  6368  0144EE  0060  F070  F017   	movff	ipv4_background@err+1,?_ipv4_background+1
  6369  0144F4  0060  F074  F018   	movff	ipv4_background@err+2,?_ipv4_background+2
  6370  0144FA  0012               	return	
  6371  0144FC                     
  6372                           ;ipv4.c: 392: err = (*arpStatus);
  6373  0144FC  0060  F0DF  FFD9   	movff	_arpStatus,16345
  6374  014502  0060  F0E3  FFDA   	movff	_arpStatus+1,16346
  6375  014508  006F FF78  F01B    	movff	16350,ipv4_background@err
  6376  01450E  006F FF78  F01C    	movff	16350,ipv4_background@err+1
  6377  014514  006F FF74  F01D    	movff	16349,ipv4_background@err+2
  6378                           
  6379                           ;ipv4.c: 393: return err;
  6380  01451A  0060  F06C  F016   	movff	ipv4_background@err,?_ipv4_background
  6381  014520  0060  F070  F017   	movff	ipv4_background@err+1,?_ipv4_background+1
  6382  014526  0060  F074  F018   	movff	ipv4_background@err+2,?_ipv4_background+2
  6383  01452C  0012               	return	
  6384  01452E                     
  6385                           ;ipv4.c: 395: err.code = ERROR_IPv4_ADDRESS_ALREADY_IN_USE;
  6386  01452E  0E01               	movlw	1
  6387  014530  6E1D               	movwf	ipv4_background@err+2,c
  6388  014532  0EF5               	movlw	245
  6389  014534  6E1C               	movwf	ipv4_background@err+1,c
  6390                           
  6391                           ;ipv4.c: 396: fSrcAddrChanged = 0u;
  6392  014536  0E00               	movlw	0
  6393  014538  6E3F               	movwf	_fSrcAddrChanged,c
  6394                           
  6395                           ;ipv4.c: 397: return err;
  6396  01453A  0060  F06C  F016   	movff	ipv4_background@err,?_ipv4_background
  6397  014540  0060  F070  F017   	movff	ipv4_background@err+1,?_ipv4_background+1
  6398  014546  0060  F074  F018   	movff	ipv4_background@err+2,?_ipv4_background+2
  6399  01454C  0012               	return	
  6400  01454E                     l1214:
  6401                           
  6402                           ;ipv4.c: 401: return err;
  6403  01454E  0060  F06C  F016   	movff	ipv4_background@err,?_ipv4_background
  6404  014554  0060  F070  F017   	movff	ipv4_background@err+1,?_ipv4_background+1
  6405  01455A  0060  F074  F018   	movff	ipv4_background@err+2,?_ipv4_background+2
  6406  014560  0012               	return	
  6407  014562                     
  6408                           ;ipv4.c: 403: err = (*arpStatus);
  6409  014562  0060  F0DF  FFD9   	movff	_arpStatus,16345
  6410  014568  0060  F0E3  FFDA   	movff	_arpStatus+1,16346
  6411  01456E  006F FF78  F01B    	movff	16350,ipv4_background@err
  6412  014574  006F FF78  F01C    	movff	16350,ipv4_background@err+1
  6413  01457A  006F FF74  F01D    	movff	16349,ipv4_background@err+2
  6414                           
  6415                           ;ipv4.c: 404: fSrcAddrChanged = 0u;
  6416  014580  0E00               	movlw	0
  6417  014582  6E3F               	movwf	_fSrcAddrChanged,c
  6418                           
  6419                           ;ipv4.c: 405: return err;
  6420  014584  0060  F06C  F016   	movff	ipv4_background@err,?_ipv4_background
  6421  01458A  0060  F070  F017   	movff	ipv4_background@err+1,?_ipv4_background+1
  6422  014590  0060  F074  F018   	movff	ipv4_background@err+2,?_ipv4_background+2
  6423  014596  0012               	return	
  6424  014598                     
  6425                           ;ipv4.c: 408: fSrcAddrChanged = 0u;
  6426                           
  6427                           ;ipv4.c: 407: case ERROR_ARP_UNKNOWN:
  6428  014598  0E00               	movlw	0
  6429  01459A  6E3F               	movwf	_fSrcAddrChanged,c
  6430                           
  6431                           ;ipv4.c: 409: err = (*arpStatus);
  6432  01459C  0060  F0DF  FFD9   	movff	_arpStatus,16345
  6433  0145A2  0060  F0E3  FFDA   	movff	_arpStatus+1,16346
  6434  0145A8  006F FF78  F01B    	movff	16350,ipv4_background@err
  6435  0145AE  006F FF78  F01C    	movff	16350,ipv4_background@err+1
  6436  0145B4  006F FF74  F01D    	movff	16349,ipv4_background@err+2
  6437                           
  6438                           ;ipv4.c: 410: return err;
  6439  0145BA  0060  F06C  F016   	movff	ipv4_background@err,?_ipv4_background
  6440  0145C0  0060  F070  F017   	movff	ipv4_background@err+1,?_ipv4_background+1
  6441  0145C6  0060  F074  F018   	movff	ipv4_background@err+2,?_ipv4_background+2
  6442  0145CC  0012               	return	
  6443  0145CE                     l1209:
  6444  0145CE  EE20 F001          	lfsr	2,1
  6445  0145D2  5037               	movf	_arpStatus,w,c
  6446  0145D4  26D9               	addwf	16345,f,c
  6447  0145D6  5038               	movf	_arpStatus+1,w,c
  6448  0145D8  22DA               	addwfc	16346,f,c
  6449  0145DA  006F FF78  F019    	movff	16350,??_ipv4_background
  6450  0145E0  006F FF74  F01A    	movff	16349,??_ipv4_background+1
  6451                           
  6452                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6453                           ; Switch size 1, requested type "space"
  6454                           ; Number of cases is 2, Range of values is 0 to 1
  6455                           ; switch strategies available:
  6456                           ; Name         Instructions Cycles
  6457                           ; simple_byte            7     4 (average)
  6458                           ;	Chosen strategy is simple_byte
  6459  0145E6  501A               	movf	??_ipv4_background+1,w,c
  6460  0145E8  0A00               	xorlw	0	; case 0
  6461  0145EA  B4D8               	btfsc	16344,2,c
  6462  0145EC  D004               	goto	l12982
  6463  0145EE  0A01               	xorlw	1	; case 1
  6464  0145F0  B4D8               	btfsc	16344,2,c
  6465  0145F2  D006               	goto	l12984
  6466  0145F4  D7D1               	goto	l1216
  6467  0145F6                     l12982:
  6468                           
  6469                           ; Switch size 1, requested type "space"
  6470                           ; Number of cases is 1, Range of values is 0 to 0
  6471                           ; switch strategies available:
  6472                           ; Name         Instructions Cycles
  6473                           ; simple_byte            4     3 (average)
  6474                           ;	Chosen strategy is simple_byte
  6475  0145F6  5019               	movf	??_ipv4_background,w,c
  6476  0145F8  0A00               	xorlw	0	; case 0
  6477  0145FA  B4D8               	btfsc	16344,2,c
  6478  0145FC  D75C               	goto	l1210
  6479  0145FE  D7CC               	goto	l1216
  6480  014600                     l12984:
  6481                           
  6482                           ; Switch size 1, requested type "space"
  6483                           ; Number of cases is 5, Range of values is 145 to 243
  6484                           ; switch strategies available:
  6485                           ; Name         Instructions Cycles
  6486                           ; simple_byte           16     9 (average)
  6487                           ;	Chosen strategy is simple_byte
  6488  014600  5019               	movf	??_ipv4_background,w,c
  6489  014602  0A91               	xorlw	145	; case 145
  6490  014604  B4D8               	btfsc	16344,2,c
  6491  014606  D77A               	goto	l1212
  6492  014608  0A02               	xorlw	2	; case 147
  6493  01460A  B4D8               	btfsc	16344,2,c
  6494  01460C  D7A0               	goto	l1214
  6495  01460E  0A05               	xorlw	5	; case 150
  6496  014610  B4D8               	btfsc	16344,2,c
  6497  014612  D78D               	goto	l1213
  6498  014614  0A01               	xorlw	1	; case 151
  6499  014616  B4D8               	btfsc	16344,2,c
  6500  014618  D7A4               	goto	l1215
  6501  01461A  0A64               	xorlw	100	; case 243
  6502  01461C  D7BD               	goto	l1216
  6503  01461E                     l1208:
  6504                           
  6505                           ;ipv4.c: 413: err.code = ERROR_IPv4_UNKNOWN;
  6506  01461E  0E02               	movlw	2
  6507  014620  6E1D               	movwf	ipv4_background@err+2,c
  6508  014622  0E57               	movlw	87
  6509  014624  6E1C               	movwf	ipv4_background@err+1,c
  6510                           
  6511                           ;ipv4.c: 414: return err;
  6512  014626  0060  F06C  F016   	movff	ipv4_background@err,?_ipv4_background
  6513  01462C  0060  F070  F017   	movff	ipv4_background@err+1,?_ipv4_background+1
  6514  014632  0060  F074  F018   	movff	ipv4_background@err+2,?_ipv4_background+2
  6515  014638  0012               	return	
  6516  01463A                     __end_of_ipv4_background:
  6517                           	opt stack 0
  6518                           
  6519 ;; *************** function _ipAdressToString *****************
  6520 ;; Defined at:
  6521 ;;		line 138 in file "src/system/uart.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;  ip              4    6[BANK0 ] struct ipv4_address
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;  i               1   12[BANK0 ] unsigned char 
  6526 ;;  pointer         1   11[BANK0 ] unsigned char 
  6527 ;;  j               1   10[BANK0 ] unsigned char 
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  2    6[BANK0 ] PTR unsigned char 
  6530 ;; Registers used:
  6531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6537 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6538 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6540 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6541 ;;Total ram usage:        8 bytes
  6542 ;; Hardware stack levels used:    1
  6543 ;; Hardware stack levels required when called:    7
  6544 ;; This function calls:
  6545 ;;		_itoa
  6546 ;; This function is called by:
  6547 ;;		_handleStackBackgroundTasks
  6548 ;;		_arpEntryToString
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text17
  6553  0150D4                     __ptext17:
  6554                           	opt stack 0
  6555  0150D4                     _ipAdressToString:
  6556                           	opt stack 22
  6557                           
  6558                           ;uart.c: 139: char static address [20];
  6559                           ;uart.c: 140: char static number[4];
  6560                           ;uart.c: 141: uint8_t pointer = 0;
  6561                           
  6562                           ;incstack = 0
  6563  0150D4  0E00               	movlw	0
  6564  0150D6  0100               	movlb	0	; () banked
  6565  0150D8  6F6B               	movwf	ipAdressToString@pointer& (0+255),b
  6566                           
  6567                           ;uart.c: 142: uint8_t j = 0;
  6568  0150DA  0E00               	movlw	0
  6569  0150DC  6F6A               	movwf	ipAdressToString@j& (0+255),b
  6570                           
  6571                           ;uart.c: 144: for (uint8_t i = 0; i < 4; i++) {
  6572  0150DE  0E00               	movlw	0
  6573  0150E0  6F6C               	movwf	ipAdressToString@i& (0+255),b
  6574  0150E2                     l12078:
  6575                           
  6576                           ; BSR set to: 0
  6577  0150E2  0E03               	movlw	3
  6578  0150E4  656C               	cpfsgt	ipAdressToString@i& (0+255),b
  6579  0150E6  D001               	goto	l877
  6580  0150E8  D07F               	goto	u15150
  6581  0150EA                     l877:
  6582                           
  6583                           ; BSR set to: 0
  6584                           ;uart.c: 145: itoa(&number[0], (int) ip.address[i], 10);
  6585                           
  6586                           ; BSR set to: 0
  6587  0150EA  0ED0               	movlw	low ipAdressToString@number
  6588  0150EC  6F60               	movwf	itoa@buf& (0+255),b
  6589  0150EE  0E02               	movlw	high ipAdressToString@number
  6590  0150F0  6F61               	movwf	(itoa@buf+1)& (0+255),b
  6591  0150F2  516C               	movf	ipAdressToString@i& (0+255),w,b
  6592  0150F4  0D01               	mullw	1
  6593  0150F6  0E66               	movlw	low ipAdressToString@ip
  6594  0150F8  24F3               	addwf	16371,w,c
  6595  0150FA  6ED9               	movwf	16345,c
  6596  0150FC  0E00               	movlw	high ipAdressToString@ip
  6597  0150FE  20F4               	addwfc	16372,w,c
  6598  015100  6EDA               	movwf	16346,c
  6599  015102  50DF               	movf	16351,w,c
  6600  015104  6E34               	movwf	??_ipAdressToString& (0+255),c
  6601  015106  5034               	movf	??_ipAdressToString,w,c
  6602  015108  6F62               	movwf	itoa@val& (0+255),b
  6603  01510A  6B63               	clrf	(itoa@val+1)& (0+255),b
  6604  01510C  0E00               	movlw	0
  6605  01510E  6F65               	movwf	(itoa@base+1)& (0+255),b
  6606  015110  0E0A               	movlw	10
  6607  015112  6F64               	movwf	itoa@base& (0+255),b
  6608  015114  ECA1  F0B6         	call	_itoa	;wreg free
  6609                           
  6610                           ;uart.c: 146: if (ip.address[i] >= 100)
  6611  015118  0100               	movlb	0	; () banked
  6612  01511A  516C               	movf	ipAdressToString@i& (0+255),w,b
  6613  01511C  0D01               	mullw	1
  6614  01511E  0E66               	movlw	low ipAdressToString@ip
  6615  015120  24F3               	addwf	16371,w,c
  6616  015122  6ED9               	movwf	16345,c
  6617  015124  0E00               	movlw	high ipAdressToString@ip
  6618  015126  20F4               	addwfc	16372,w,c
  6619  015128  6EDA               	movwf	16346,c
  6620  01512A  0E63               	movlw	99
  6621  01512C  64DF               	cpfsgt	16351,c
  6622  01512E  D015               	goto	l879
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;uart.c: 147: address[pointer++] = number[j++];
  6626  015130  516A               	movf	ipAdressToString@j& (0+255),w,b
  6627  015132  0D01               	mullw	1
  6628  015134  0ED0               	movlw	low ipAdressToString@number
  6629  015136  24F3               	addwf	16371,w,c
  6630  015138  6ED9               	movwf	16345,c
  6631  01513A  0E02               	movlw	high ipAdressToString@number
  6632  01513C  20F4               	addwfc	16372,w,c
  6633  01513E  6EDA               	movwf	16346,c
  6634  015140  516B               	movf	ipAdressToString@pointer& (0+255),w,b
  6635  015142  0D01               	mullw	1
  6636  015144  0E99               	movlw	low ipAdressToString@address
  6637  015146  24F3               	addwf	16371,w,c
  6638  015148  6EE1               	movwf	16353,c
  6639  01514A  0E03               	movlw	high ipAdressToString@address
  6640  01514C  20F4               	addwfc	16372,w,c
  6641  01514E  6EE2               	movwf	16354,c
  6642  015150  006F FF7F FFE7     	movff	16351,16359
  6643                           
  6644                           ; BSR set to: 0
  6645  015156  2B6A               	incf	ipAdressToString@j& (0+255),f,b
  6646                           
  6647                           ; BSR set to: 0
  6648  015158  2B6B               	incf	ipAdressToString@pointer& (0+255),f,b
  6649  01515A                     l879:
  6650                           
  6651                           ; BSR set to: 0
  6652                           ;uart.c: 148: if (ip.address[i] >= 10)
  6653                           
  6654                           ; BSR set to: 0
  6655  01515A  516C               	movf	ipAdressToString@i& (0+255),w,b
  6656  01515C  0D01               	mullw	1
  6657  01515E  0E66               	movlw	low ipAdressToString@ip
  6658  015160  24F3               	addwf	16371,w,c
  6659  015162  6ED9               	movwf	16345,c
  6660  015164  0E00               	movlw	high ipAdressToString@ip
  6661  015166  20F4               	addwfc	16372,w,c
  6662  015168  6EDA               	movwf	16346,c
  6663  01516A  0E09               	movlw	9
  6664  01516C  64DF               	cpfsgt	16351,c
  6665  01516E  D015               	goto	l880
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;uart.c: 149: address[pointer++] = number[j++];
  6669  015170  516A               	movf	ipAdressToString@j& (0+255),w,b
  6670  015172  0D01               	mullw	1
  6671  015174  0ED0               	movlw	low ipAdressToString@number
  6672  015176  24F3               	addwf	16371,w,c
  6673  015178  6ED9               	movwf	16345,c
  6674  01517A  0E02               	movlw	high ipAdressToString@number
  6675  01517C  20F4               	addwfc	16372,w,c
  6676  01517E  6EDA               	movwf	16346,c
  6677  015180  516B               	movf	ipAdressToString@pointer& (0+255),w,b
  6678  015182  0D01               	mullw	1
  6679  015184  0E99               	movlw	low ipAdressToString@address
  6680  015186  24F3               	addwf	16371,w,c
  6681  015188  6EE1               	movwf	16353,c
  6682  01518A  0E03               	movlw	high ipAdressToString@address
  6683  01518C  20F4               	addwfc	16372,w,c
  6684  01518E  6EE2               	movwf	16354,c
  6685  015190  006F FF7F FFE7     	movff	16351,16359
  6686                           
  6687                           ; BSR set to: 0
  6688  015196  2B6A               	incf	ipAdressToString@j& (0+255),f,b
  6689                           
  6690                           ; BSR set to: 0
  6691  015198  2B6B               	incf	ipAdressToString@pointer& (0+255),f,b
  6692  01519A                     l880:
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;uart.c: 150: address[pointer++] = number[j++];
  6696  01519A  516A               	movf	ipAdressToString@j& (0+255),w,b
  6697  01519C  0D01               	mullw	1
  6698  01519E  0ED0               	movlw	low ipAdressToString@number
  6699  0151A0  24F3               	addwf	16371,w,c
  6700  0151A2  6ED9               	movwf	16345,c
  6701  0151A4  0E02               	movlw	high ipAdressToString@number
  6702  0151A6  20F4               	addwfc	16372,w,c
  6703  0151A8  6EDA               	movwf	16346,c
  6704  0151AA  516B               	movf	ipAdressToString@pointer& (0+255),w,b
  6705  0151AC  0D01               	mullw	1
  6706  0151AE  0E99               	movlw	low ipAdressToString@address
  6707  0151B0  24F3               	addwf	16371,w,c
  6708  0151B2  6EE1               	movwf	16353,c
  6709  0151B4  0E03               	movlw	high ipAdressToString@address
  6710  0151B6  20F4               	addwfc	16372,w,c
  6711  0151B8  6EE2               	movwf	16354,c
  6712  0151BA  006F FF7F FFE7     	movff	16351,16359
  6713                           
  6714                           ; BSR set to: 0
  6715  0151C0  2B6A               	incf	ipAdressToString@j& (0+255),f,b
  6716                           
  6717                           ; BSR set to: 0
  6718  0151C2  2B6B               	incf	ipAdressToString@pointer& (0+255),f,b
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;uart.c: 151: j = 0;
  6722  0151C4  0E00               	movlw	0
  6723  0151C6  6F6A               	movwf	ipAdressToString@j& (0+255),b
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;uart.c: 152: if (i < 3)
  6727  0151C8  0E03               	movlw	3
  6728  0151CA  616C               	cpfslt	ipAdressToString@i& (0+255),b
  6729  0151CC  D00B               	goto	l881
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;uart.c: 153: address[pointer++] = '.';
  6733  0151CE  516B               	movf	ipAdressToString@pointer& (0+255),w,b
  6734  0151D0  0D01               	mullw	1
  6735  0151D2  0E99               	movlw	low ipAdressToString@address
  6736  0151D4  24F3               	addwf	16371,w,c
  6737  0151D6  6ED9               	movwf	16345,c
  6738  0151D8  0E03               	movlw	high ipAdressToString@address
  6739  0151DA  20F4               	addwfc	16372,w,c
  6740  0151DC  6EDA               	movwf	16346,c
  6741  0151DE  0E2E               	movlw	46
  6742  0151E0  6EDF               	movwf	16351,c
  6743                           
  6744                           ; BSR set to: 0
  6745  0151E2  2B6B               	incf	ipAdressToString@pointer& (0+255),f,b
  6746  0151E4                     l881:
  6747                           
  6748                           ; BSR set to: 0
  6749                           
  6750                           ; BSR set to: 0
  6751  0151E4  2B6C               	incf	ipAdressToString@i& (0+255),f,b
  6752  0151E6  D77D               	goto	l12078
  6753  0151E8                     u15150:
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;uart.c: 154: }
  6757                           ;uart.c: 155: address[pointer] = '\0';
  6758                           
  6759                           ; BSR set to: 0
  6760  0151E8  516B               	movf	ipAdressToString@pointer& (0+255),w,b
  6761  0151EA  0D01               	mullw	1
  6762  0151EC  0E99               	movlw	low ipAdressToString@address
  6763  0151EE  24F3               	addwf	16371,w,c
  6764  0151F0  6ED9               	movwf	16345,c
  6765  0151F2  0E03               	movlw	high ipAdressToString@address
  6766  0151F4  20F4               	addwfc	16372,w,c
  6767  0151F6  6EDA               	movwf	16346,c
  6768  0151F8  0E00               	movlw	0
  6769  0151FA  6EDF               	movwf	16351,c
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;uart.c: 156: return address;
  6773  0151FC  0E99               	movlw	low ipAdressToString@address
  6774  0151FE  6F66               	movwf	?_ipAdressToString& (0+255),b
  6775  015200  0E03               	movlw	high ipAdressToString@address
  6776  015202  6F67               	movwf	(?_ipAdressToString+1)& (0+255),b
  6777  015204  0012               	return	
  6778  015206                     __end_of_ipAdressToString:
  6779                           	opt stack 0
  6780                           
  6781 ;; *************** function _ethernet_rxGetNewFrame *****************
  6782 ;; Defined at:
  6783 ;;		line 55 in file "src/eth/ethernet.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  frame           2  242[BANK1 ] PTR struct ethernetFrame
  6786 ;;		 -> stack(124), 
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;  err             3  244[BANK1 ] struct error
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  3  242[BANK1 ] struct error
  6791 ;; Registers used:
  6792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6798 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6799 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6800 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6801 ;;      Totals:         0       0       5       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6802 ;;Total ram usage:       13 bytes
  6803 ;; Hardware stack levels used:    1
  6804 ;; Hardware stack levels required when called:   14
  6805 ;; This function calls:
  6806 ;;		_UARTTransmitText
  6807 ;;		_UART_resetFormat
  6808 ;;		_UART_setFormat
  6809 ;;		_arp_handleNewPacket
  6810 ;;		_etherTypeToString
  6811 ;;		_ethernetController_dropPacket
  6812 ;;		_ethernetController_getEtherTypeField
  6813 ;;		_ethernetController_getNextPacketPointer
  6814 ;;		_ethernetController_getRSV
  6815 ;;		_ethernetController_updateNextPacketPointer
  6816 ;;		_getMillis
  6817 ;;		_intToString
  6818 ;;		_ipv4_handleNewPacket
  6819 ;;		_macToString
  6820 ;; This function is called by:
  6821 ;;		_handleStackBackgroundTasks
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text18
  6826  01108A                     __ptext18:
  6827                           	opt stack 0
  6828  01108A                     _ethernet_rxGetNewFrame:
  6829                           	opt stack 15
  6830                           
  6831                           ;ethernet.c: 56: uint32_t static counter = 0;
  6832                           ;ethernet.c: 57: error_t err;
  6833                           ;ethernet.c: 58: err.module = ERROR_MODULE_ETHERNET;
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;incstack = 0
  6837  01108A  0E02               	movlw	2
  6838  01108C  0101               	movlb	1	; () banked
  6839  01108E  6FF4               	movwf	ethernet_rxGetNewFrame@err& (0+255),b
  6840                           
  6841                           ;ethernet.c: 59: err.code = (uint16_t)0;
  6842  011090  0E00               	movlw	0
  6843  011092  6FF6               	movwf	(ethernet_rxGetNewFrame@err+2)& (0+255),b
  6844  011094  0E00               	movlw	0
  6845  011096  6FF5               	movwf	(ethernet_rxGetNewFrame@err+1)& (0+255),b
  6846                           
  6847                           ; BSR set to: 1
  6848                           ;ethernet.c: 62: frame->tReceived = getMillis();
  6849  011098  EC15  F0BB         	call	_getMillis	;wreg free
  6850  01109C  0101               	movlb	1	; () banked
  6851  01109E  EE20 F01E          	lfsr	2,30
  6852  0110A2  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  6853  0110A4  26D9               	addwf	16345,f,c
  6854  0110A6  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  6855  0110A8  22DA               	addwfc	16346,f,c
  6856  0110AA  0060  F05B  FFDE   	movff	?_getMillis,16350
  6857  0110B0  0060  F05F  FFDE   	movff	?_getMillis+1,16350
  6858  0110B6  0060  F063  FFDE   	movff	?_getMillis+2,16350
  6859  0110BC  0060  F067  FFDE   	movff	?_getMillis+3,16350
  6860                           
  6861                           ; BSR set to: 1
  6862                           ;ethernet.c: 63: frame->memory.start = ethernetController_getNextPacketPointer();
  6863  0110C2  EC5B  F0BB         	call	_ethernetController_getNextPacketPointer	;wreg free
  6864  0110C6  0101               	movlb	1	; () banked
  6865  0110C8  EE20 F010          	lfsr	2,16
  6866  0110CC  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  6867  0110CE  26D9               	addwf	16345,f,c
  6868  0110D0  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  6869  0110D2  22DA               	addwfc	16346,f,c
  6870  0110D4  0060  F063  FFDE   	movff	?_ethernetController_getNextPacketPointer,16350
  6871  0110DA  0060  F067  FFDD   	movff	?_ethernetController_getNextPacketPointer+1,16349
  6872                           
  6873                           ; BSR set to: 1
  6874                           ;ethernet.c: 64: ethernetController_updateNextPacketPointer();
  6875  0110E0  EC36  F0B3         	call	_ethernetController_updateNextPacketPointer	;wreg free
  6876                           
  6877                           ;ethernet.c: 65: frame->memory.fIsAssigned = 1;
  6878  0110E4  0101               	movlb	1	; () banked
  6879  0110E6  EE20 F016          	lfsr	2,22
  6880  0110EA  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  6881  0110EC  26D9               	addwf	16345,f,c
  6882  0110EE  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  6883  0110F0  22DA               	addwfc	16346,f,c
  6884  0110F2  0E01               	movlw	1
  6885  0110F4  6EDF               	movwf	16351,c
  6886                           
  6887                           ; BSR set to: 1
  6888                           ;ethernet.c: 66: frame->receiveStatusVector = ethernetController_getRSV(frame->memory.st
      +                          art);
  6889  0110F6  EE20 F010          	lfsr	2,16
  6890  0110FA  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  6891  0110FC  26D9               	addwf	16345,f,c
  6892  0110FE  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  6893  011100  22DA               	addwfc	16346,f,c
  6894  011102  006F FF78  F027    	movff	16350,ethernetController_getRSV@address
  6895  011108  006F FF74  F028    	movff	16349,ethernetController_getRSV@address+1
  6896  01110E  ECF0  F0B3         	call	_ethernetController_getRSV	;wreg free
  6897  011112  0101               	movlb	1	; () banked
  6898  011114  EE20 F019          	lfsr	2,25
  6899  011118  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  6900  01111A  26D9               	addwf	16345,f,c
  6901  01111C  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  6902  01111E  22DA               	addwfc	16346,f,c
  6903  011120  0E04               	movlw	4
  6904  011122                     u14911:
  6905  011122  006F FFAF FFDB     	movff	16363,16347
  6906  011128  06E8               	decf	16360,f,c
  6907  01112A  E2FB               	bc	u14911
  6908                           
  6909                           ; BSR set to: 1
  6910                           ;ethernet.c: 67: frame->memory.length = frame->receiveStatusVector.length;
  6911  01112C  EE20 F019          	lfsr	2,25
  6912  011130  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  6913  011132  26D9               	addwf	16345,f,c
  6914  011134  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  6915  011136  22DA               	addwfc	16346,f,c
  6916  011138  EE10 F014          	lfsr	1,20
  6917  01113C  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  6918  01113E  26E1               	addwf	16353,f,c
  6919  011140  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  6920  011142  22E2               	addwfc	16354,f,c
  6921  011144  006F FF7B FFE6     	movff	16350,16358
  6922  01114A  006F FF77 FFE5     	movff	16349,16357
  6923                           
  6924                           ; BSR set to: 1
  6925                           ;ethernet.c: 71: if (frame->memory.start + frame->memory.length > 0x5FFF) {
  6926  011150  EE20 F014          	lfsr	2,20
  6927  011154  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  6928  011156  26D9               	addwf	16345,f,c
  6929  011158  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  6930  01115A  22DA               	addwfc	16346,f,c
  6931  01115C  006F FF78  F28D    	movff	16350,??_ethernet_rxGetNewFrame
  6932  011162  006F FF74  F28E    	movff	16349,??_ethernet_rxGetNewFrame+1
  6933  011168  EE20 F010          	lfsr	2,16
  6934  01116C  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  6935  01116E  26D9               	addwf	16345,f,c
  6936  011170  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  6937  011172  22DA               	addwfc	16346,f,c
  6938  011174  006F FF78  F28F    	movff	16350,??_ethernet_rxGetNewFrame+2
  6939  01117A  006F FF74  F290    	movff	16349,??_ethernet_rxGetNewFrame+3
  6940  011180  0102               	movlb	2	; () banked
  6941  011182  518D               	movf	??_ethernet_rxGetNewFrame& (0+255),w,b
  6942  011184  278F               	addwf	(??_ethernet_rxGetNewFrame+2)& (0+255),f,b
  6943  011186  518E               	movf	(??_ethernet_rxGetNewFrame+1)& (0+255),w,b
  6944  011188  2390               	addwfc	(??_ethernet_rxGetNewFrame+3)& (0+255),f,b
  6945  01118A  0E60               	movlw	96
  6946  01118C  5D90               	subwf	(??_ethernet_rxGetNewFrame+3)& (0+255),w,b
  6947  01118E  A0D8               	btfss	16344,0,c
  6948  011190  D046               	goto	l369
  6949                           
  6950                           ; BSR set to: 2
  6951                           ;ethernet.c: 73: frame->memory.end = frame->memory.length - ((0x5FFF - 0x3000) - frame->
      +                          memory.start) + 0x3000;
  6952  011192  0E00               	movlw	0
  6953  011194  6F8D               	movwf	??_ethernet_rxGetNewFrame& (0+255),b
  6954  011196  0E30               	movlw	48
  6955  011198  6F8E               	movwf	(??_ethernet_rxGetNewFrame+1)& (0+255),b
  6956  01119A  0101               	movlb	1	; () banked
  6957  01119C  EE20 F014          	lfsr	2,20
  6958  0111A0  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  6959  0111A2  26D9               	addwf	16345,f,c
  6960  0111A4  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  6961  0111A6  22DA               	addwfc	16346,f,c
  6962  0111A8  006F FF78  F28F    	movff	16350,??_ethernet_rxGetNewFrame+2
  6963  0111AE  006F FF74  F290    	movff	16349,??_ethernet_rxGetNewFrame+3
  6964  0111B4  0EFF               	movlw	255
  6965  0111B6  0102               	movlb	2	; () banked
  6966  0111B8  6F91               	movwf	(??_ethernet_rxGetNewFrame+4)& (0+255),b
  6967  0111BA  0E2F               	movlw	47
  6968  0111BC  6F92               	movwf	(??_ethernet_rxGetNewFrame+5)& (0+255),b
  6969  0111BE  0101               	movlb	1	; () banked
  6970  0111C0  EE20 F010          	lfsr	2,16
  6971  0111C4  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  6972  0111C6  26D9               	addwf	16345,f,c
  6973  0111C8  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  6974  0111CA  22DA               	addwfc	16346,f,c
  6975  0111CC  006F FF78  F293    	movff	16350,??_ethernet_rxGetNewFrame+6
  6976  0111D2  006F FF74  F294    	movff	16349,??_ethernet_rxGetNewFrame+7
  6977  0111D8  0102               	movlb	2	; () banked
  6978  0111DA  1F93               	comf	(??_ethernet_rxGetNewFrame+6)& (0+255),f,b
  6979  0111DC  1F94               	comf	(??_ethernet_rxGetNewFrame+7)& (0+255),f,b
  6980  0111DE  4B93               	infsnz	(??_ethernet_rxGetNewFrame+6)& (0+255),f,b
  6981  0111E0  2B94               	incf	(??_ethernet_rxGetNewFrame+7)& (0+255),f,b
  6982  0111E2  5191               	movf	(??_ethernet_rxGetNewFrame+4)& (0+255),w,b
  6983  0111E4  2793               	addwf	(??_ethernet_rxGetNewFrame+6)& (0+255),f,b
  6984  0111E6  5192               	movf	(??_ethernet_rxGetNewFrame+5)& (0+255),w,b
  6985  0111E8  2394               	addwfc	(??_ethernet_rxGetNewFrame+7)& (0+255),f,b
  6986  0111EA  1F93               	comf	(??_ethernet_rxGetNewFrame+6)& (0+255),f,b
  6987  0111EC  1F94               	comf	(??_ethernet_rxGetNewFrame+7)& (0+255),f,b
  6988  0111EE  4B93               	infsnz	(??_ethernet_rxGetNewFrame+6)& (0+255),f,b
  6989  0111F0  2B94               	incf	(??_ethernet_rxGetNewFrame+7)& (0+255),f,b
  6990  0111F2  518F               	movf	(??_ethernet_rxGetNewFrame+2)& (0+255),w,b
  6991  0111F4  2793               	addwf	(??_ethernet_rxGetNewFrame+6)& (0+255),f,b
  6992  0111F6  5190               	movf	(??_ethernet_rxGetNewFrame+3)& (0+255),w,b
  6993  0111F8  2394               	addwfc	(??_ethernet_rxGetNewFrame+7)& (0+255),f,b
  6994  0111FA  518D               	movf	??_ethernet_rxGetNewFrame& (0+255),w,b
  6995  0111FC  2793               	addwf	(??_ethernet_rxGetNewFrame+6)& (0+255),f,b
  6996  0111FE  518E               	movf	(??_ethernet_rxGetNewFrame+1)& (0+255),w,b
  6997  011200  2394               	addwfc	(??_ethernet_rxGetNewFrame+7)& (0+255),f,b
  6998  011202  0101               	movlb	1	; () banked
  6999  011204  EE20 F012          	lfsr	2,18
  7000  011208  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7001  01120A  26D9               	addwf	16345,f,c
  7002  01120C  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7003  01120E  22DA               	addwfc	16346,f,c
  7004  011210  0060  FA4F  FFDE   	movff	??_ethernet_rxGetNewFrame+6,16350
  7005  011216  0060  FA53  FFDD   	movff	??_ethernet_rxGetNewFrame+7,16349
  7006                           
  7007                           ;ethernet.c: 74: } else {
  7008  01121C  D02B               	goto	l370
  7009  01121E                     l369:
  7010                           
  7011                           ;ethernet.c: 75: frame->memory.end = frame->memory.start + frame->memory.length;
  7012                           
  7013                           ; BSR set to: 1
  7014  01121E  0101               	movlb	1	; () banked
  7015  011220  EE20 F014          	lfsr	2,20
  7016  011224  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7017  011226  26D9               	addwf	16345,f,c
  7018  011228  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7019  01122A  22DA               	addwfc	16346,f,c
  7020  01122C  006F FF78  F28D    	movff	16350,??_ethernet_rxGetNewFrame
  7021  011232  006F FF74  F28E    	movff	16349,??_ethernet_rxGetNewFrame+1
  7022  011238  EE20 F010          	lfsr	2,16
  7023  01123C  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7024  01123E  26D9               	addwf	16345,f,c
  7025  011240  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7026  011242  22DA               	addwfc	16346,f,c
  7027  011244  006F FF78  F28F    	movff	16350,??_ethernet_rxGetNewFrame+2
  7028  01124A  006F FF74  F290    	movff	16349,??_ethernet_rxGetNewFrame+3
  7029  011250  0102               	movlb	2	; () banked
  7030  011252  518D               	movf	??_ethernet_rxGetNewFrame& (0+255),w,b
  7031  011254  278F               	addwf	(??_ethernet_rxGetNewFrame+2)& (0+255),f,b
  7032  011256  518E               	movf	(??_ethernet_rxGetNewFrame+1)& (0+255),w,b
  7033  011258  2390               	addwfc	(??_ethernet_rxGetNewFrame+3)& (0+255),f,b
  7034  01125A  0101               	movlb	1	; () banked
  7035  01125C  EE20 F012          	lfsr	2,18
  7036  011260  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7037  011262  26D9               	addwf	16345,f,c
  7038  011264  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7039  011266  22DA               	addwfc	16346,f,c
  7040  011268  0060  FA3F  FFDE   	movff	??_ethernet_rxGetNewFrame+2,16350
  7041  01126E  0060  FA43  FFDD   	movff	??_ethernet_rxGetNewFrame+3,16349
  7042  011274                     l370:
  7043                           
  7044                           ; BSR set to: 1
  7045                           ;ethernet.c: 76: }
  7046                           ;ethernet.c: 77: frame->ethertype = ethernetController_getEtherTypeField(frame->memory);
  7047                           
  7048                           ; BSR set to: 1
  7049  011274  EE20 F010          	lfsr	2,16
  7050  011278  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7051  01127A  26D9               	addwf	16345,f,c
  7052  01127C  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7053  01127E  22DA               	addwfc	16346,f,c
  7054  011280  EE00  F025         	lfsr	0,ethernetController_getEtherTypeField@field
  7055  011284  0E08               	movlw	8
  7056  011286                     u14931:
  7057  011286  006F FF6F FFEB     	movff	16347,16363
  7058  01128C  06E8               	decf	16360,f,c
  7059  01128E  E2FB               	bc	u14931
  7060  011290  EC0D  F0B5         	call	_ethernetController_getEtherTypeField	;wreg free
  7061  011294  0101               	movlb	1	; () banked
  7062  011296  EE20 F00E          	lfsr	2,14
  7063  01129A  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7064  01129C  26D9               	addwf	16345,f,c
  7065  01129E  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7066  0112A0  22DA               	addwfc	16346,f,c
  7067  0112A2  0060  F097  FFDE   	movff	?_ethernetController_getEtherTypeField,16350
  7068  0112A8  0060  F09B  FFDD   	movff	?_ethernetController_getEtherTypeField+1,16349
  7069                           
  7070                           ; BSR set to: 1
  7071                           ;ethernet.c: 80: UARTTransmitText("[");
  7072  0112AE  0EFB               	movlw	low (STR_11+1)
  7073  0112B0  0100               	movlb	0	; () banked
  7074  0112B2  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7075  0112B4  0EFF               	movlw	high (STR_11+1)
  7076  0112B6  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7077  0112B8  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7078                           
  7079                           ;ethernet.c: 81: UARTTransmitText(intToString(counter++, 10));
  7080  0112BC  0060  FADC  F032   	movff	ethernet_rxGetNewFrame@counter,intToString@val
  7081  0112C2  0060  FAE0  F033   	movff	ethernet_rxGetNewFrame@counter+1,intToString@val+1
  7082  0112C8  0060  FAE4  F034   	movff	ethernet_rxGetNewFrame@counter+2,intToString@val+2
  7083  0112CE  0060  FAE8  F035   	movff	ethernet_rxGetNewFrame@counter+3,intToString@val+3
  7084  0112D4  0E0A               	movlw	10
  7085  0112D6  6E36               	movwf	intToString@b,c
  7086  0112D8  ECA5  F0B8         	call	_intToString	;wreg free
  7087  0112DC  0060  F0C8  F06D   	movff	?_intToString,UARTTransmitText@str
  7088  0112E2  0060  F0CC  F06E   	movff	?_intToString+1,UARTTransmitText@str+1
  7089  0112E8  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7090  0112EC  0E01               	movlw	1
  7091  0112EE  0102               	movlb	2	; () banked
  7092  0112F0  27B7               	addwf	ethernet_rxGetNewFrame@counter& (0+255),f,b
  7093  0112F2  0E00               	movlw	0
  7094  0112F4  23B8               	addwfc	(ethernet_rxGetNewFrame@counter+1)& (0+255),f,b
  7095  0112F6  23B9               	addwfc	(ethernet_rxGetNewFrame@counter+2)& (0+255),f,b
  7096  0112F8  23BA               	addwfc	(ethernet_rxGetNewFrame@counter+3)& (0+255),f,b
  7097                           
  7098                           ; BSR set to: 2
  7099                           ;ethernet.c: 82: UARTTransmitText("]");
  7100  0112FA  0E90               	movlw	low (STR_117+4)
  7101  0112FC  0100               	movlb	0	; () banked
  7102  0112FE  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7103  011300  0EFF               	movlw	high (STR_117+4)
  7104  011302  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7105  011304  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7106                           
  7107                           ;ethernet.c: 87: if (frame->receiveStatusVector.broadcast)
  7108  011308  0101               	movlb	1	; () banked
  7109  01130A  EE20 F01B          	lfsr	2,27
  7110  01130E  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7111  011310  26D9               	addwf	16345,f,c
  7112  011312  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7113  011314  22DA               	addwfc	16346,f,c
  7114  011316  AEDF               	btfss	16351,7,c
  7115  011318  D007               	goto	l371
  7116                           
  7117                           ; BSR set to: 1
  7118                           ;ethernet.c: 89: UARTTransmitText("[Broadcast]");
  7119  01131A  0E36               	movlw	low STR_3
  7120  01131C  0100               	movlb	0	; () banked
  7121  01131E  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7122  011320  0EFF               	movlw	high STR_3
  7123  011322  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7124  011324  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7125  011328                     l371:
  7126                           
  7127                           ;ethernet.c: 91: if (frame->receiveStatusVector.unicast)
  7128  011328  0101               	movlb	1	; () banked
  7129  01132A  EE20 F01D          	lfsr	2,29
  7130  01132E  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7131  011330  26D9               	addwf	16345,f,c
  7132  011332  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7133  011334  22DA               	addwfc	16346,f,c
  7134  011336  A4DF               	btfss	16351,2,c
  7135  011338  D007               	goto	l372
  7136                           
  7137                           ; BSR set to: 1
  7138                           ;ethernet.c: 93: UARTTransmitText("[Unicast]");
  7139  01133A  0E62               	movlw	low STR_4
  7140  01133C  0100               	movlb	0	; () banked
  7141  01133E  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7142  011340  0EFF               	movlw	high STR_4
  7143  011342  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7144  011344  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7145  011348                     l372:
  7146                           
  7147                           ;ethernet.c: 95: if (!frame->receiveStatusVector.receivedOk) {
  7148  011348  0101               	movlb	1	; () banked
  7149  01134A  EE20 F01B          	lfsr	2,27
  7150  01134E  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7151  011350  26D9               	addwf	16345,f,c
  7152  011352  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7153  011354  22DA               	addwfc	16346,f,c
  7154  011356  BADF               	btfsc	16351,5,c
  7155  011358  D109               	goto	l374
  7156                           
  7157                           ; BSR set to: 1
  7158                           ;ethernet.c: 97: UART_setFormat(UART_COLOR_BG_RED);
  7159  01135A  0E00               	movlw	0
  7160  01135C  EC67  F0B0         	call	_UART_setFormat
  7161                           
  7162                           ;ethernet.c: 98: UARTTransmitText("[Symbol Errors]");
  7163  011360  0E80               	movlw	low STR_5
  7164  011362  0100               	movlb	0	; () banked
  7165  011364  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7166  011366  0EFE               	movlw	high STR_5
  7167  011368  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7168  01136A  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7169                           
  7170                           ;ethernet.c: 99: UART_resetFormat();
  7171  01136E  EC77  F0BB         	call	_UART_resetFormat	;wreg free
  7172                           
  7173                           ;ethernet.c: 101: }
  7174                           ;ethernet.c: 106: switch (frame->ethertype) {
  7175  011372  D0FC               	goto	l374
  7176  011374                     
  7177                           ;ethernet.c: 109: UART_setFormat(UART_COLOR_BG_BLUE);
  7178  011374  0E02               	movlw	2
  7179  011376  EC67  F0B0         	call	_UART_setFormat
  7180                           
  7181                           ;ethernet.c: 110: UARTTransmitText("[");
  7182  01137A  0EFB               	movlw	low (STR_11+1)
  7183  01137C  0100               	movlb	0	; () banked
  7184  01137E  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7185  011380  0EFF               	movlw	high (STR_11+1)
  7186  011382  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7187  011384  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7188                           
  7189                           ;ethernet.c: 111: UARTTransmitText(etherTypeToString(ETHERTYPE_ARP));
  7190  011388  0E08               	movlw	8
  7191  01138A  6E17               	movwf	etherTypeToString@ethertype+1,c
  7192  01138C  0E06               	movlw	6
  7193  01138E  6E16               	movwf	etherTypeToString@ethertype,c
  7194  011390  EC07  F0B8         	call	_etherTypeToString	;wreg free
  7195  011394  0060  F058  F06D   	movff	?_etherTypeToString,UARTTransmitText@str
  7196  01139A  0060  F05C  F06E   	movff	?_etherTypeToString+1,UARTTransmitText@str+1
  7197  0113A0  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7198                           
  7199                           ;ethernet.c: 112: UARTTransmitText("]");
  7200  0113A4  0E90               	movlw	low (STR_117+4)
  7201  0113A6  0100               	movlb	0	; () banked
  7202  0113A8  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7203  0113AA  0EFF               	movlw	high (STR_117+4)
  7204  0113AC  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7205  0113AE  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7206                           
  7207                           ;ethernet.c: 113: UART_resetFormat();
  7208  0113B2  EC77  F0BB         	call	_UART_resetFormat	;wreg free
  7209                           
  7210                           ;ethernet.c: 115: arp_handleNewPacket(frame);
  7211  0113B6  0060  F7C8  F138   	movff	ethernet_rxGetNewFrame@frame,arp_handleNewPacket@frame
  7212  0113BC  0060  F7CC  F139   	movff	ethernet_rxGetNewFrame@frame+1,arp_handleNewPacket@frame+1
  7213  0113C2  EC46  F0AC         	call	_arp_handleNewPacket	;wreg free
  7214                           
  7215                           ;ethernet.c: 117: break;
  7216  0113C6  D0EC               	goto	l376
  7217  0113C8                     
  7218                           ;ethernet.c: 120: UART_setFormat(UART_COLOR_BG_MAGENTA);
  7219  0113C8  0E04               	movlw	4
  7220  0113CA  EC67  F0B0         	call	_UART_setFormat
  7221                           
  7222                           ;ethernet.c: 121: UARTTransmitText("[");
  7223  0113CE  0EFB               	movlw	low (STR_11+1)
  7224  0113D0  0100               	movlb	0	; () banked
  7225  0113D2  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7226  0113D4  0EFF               	movlw	high (STR_11+1)
  7227  0113D6  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7228  0113D8  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7229                           
  7230                           ;ethernet.c: 122: UARTTransmitText(etherTypeToString(ETHERTYPE_IPv4));
  7231  0113DC  0E08               	movlw	8
  7232  0113DE  6E17               	movwf	etherTypeToString@ethertype+1,c
  7233  0113E0  0E00               	movlw	0
  7234  0113E2  6E16               	movwf	etherTypeToString@ethertype,c
  7235  0113E4  EC07  F0B8         	call	_etherTypeToString	;wreg free
  7236  0113E8  0060  F058  F06D   	movff	?_etherTypeToString,UARTTransmitText@str
  7237  0113EE  0060  F05C  F06E   	movff	?_etherTypeToString+1,UARTTransmitText@str+1
  7238  0113F4  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7239                           
  7240                           ;ethernet.c: 123: UARTTransmitText("]");
  7241  0113F8  0E90               	movlw	low (STR_117+4)
  7242  0113FA  0100               	movlb	0	; () banked
  7243  0113FC  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7244  0113FE  0EFF               	movlw	high (STR_117+4)
  7245  011400  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7246  011402  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7247                           
  7248                           ;ethernet.c: 124: UART_resetFormat();
  7249  011406  EC77  F0BB         	call	_UART_resetFormat	;wreg free
  7250                           
  7251                           ;ethernet.c: 126: ipv4_handleNewPacket(frame);
  7252  01140A  0060  F7C8  F0F0   	movff	ethernet_rxGetNewFrame@frame,ipv4_handleNewPacket@frame
  7253  011410  0060  F7CC  F0F1   	movff	ethernet_rxGetNewFrame@frame+1,ipv4_handleNewPacket@frame+1
  7254  011416  EC0F  F098         	call	_ipv4_handleNewPacket	;wreg free
  7255                           
  7256                           ;ethernet.c: 127: break;
  7257  01141A  D0C2               	goto	l376
  7258  01141C                     
  7259                           ;ethernet.c: 130: UART_setFormat(UART_COLOR_BG_RED);
  7260  01141C  0E00               	movlw	0
  7261  01141E  EC67  F0B0         	call	_UART_setFormat
  7262                           
  7263                           ;ethernet.c: 131: UARTTransmitText("[");
  7264  011422  0EFB               	movlw	low (STR_11+1)
  7265  011424  0100               	movlb	0	; () banked
  7266  011426  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7267  011428  0EFF               	movlw	high (STR_11+1)
  7268  01142A  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7269  01142C  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7270                           
  7271                           ;ethernet.c: 132: UARTTransmitText(etherTypeToString(ETHERTYPE_UNKNOWN));
  7272  011430  0EFF               	movlw	255
  7273  011432  6E17               	movwf	etherTypeToString@ethertype+1,c
  7274  011434  6816               	setf	etherTypeToString@ethertype,c
  7275  011436  EC07  F0B8         	call	_etherTypeToString	;wreg free
  7276  01143A  0060  F058  F06D   	movff	?_etherTypeToString,UARTTransmitText@str
  7277  011440  0060  F05C  F06E   	movff	?_etherTypeToString+1,UARTTransmitText@str+1
  7278  011446  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7279                           
  7280                           ;ethernet.c: 133: UARTTransmitText("][");
  7281  01144A  0EFA               	movlw	low STR_11
  7282  01144C  0100               	movlb	0	; () banked
  7283  01144E  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7284  011450  0EFF               	movlw	high STR_11
  7285  011452  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7286  011454  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7287                           
  7288                           ;ethernet.c: 134: UARTTransmitText(macToString(frame->source));
  7289  011458  0101               	movlb	1	; () banked
  7290  01145A  EE20 F002          	lfsr	2,2
  7291  01145E  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7292  011460  26D9               	addwf	16345,f,c
  7293  011462  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7294  011464  22DA               	addwfc	16346,f,c
  7295  011466  EE00  F066         	lfsr	0,macToString@addr
  7296  01146A  0E05               	movlw	5
  7297  01146C                     u14971:
  7298  01146C  006F FF6F FFEB     	movff	16347,16363
  7299  011472  06E8               	decf	16360,f,c
  7300  011474  E2FB               	bc	u14971
  7301  011476  ECB7  F0AF         	call	_macToString	;wreg free
  7302  01147A  0060  F198  F06D   	movff	?_macToString,UARTTransmitText@str
  7303  011480  0060  F19C  F06E   	movff	?_macToString+1,UARTTransmitText@str+1
  7304  011486  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7305                           
  7306                           ;ethernet.c: 135: UARTTransmitText("->");
  7307  01148A  0EF7               	movlw	low STR_12
  7308  01148C  0100               	movlb	0	; () banked
  7309  01148E  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7310  011490  0EFF               	movlw	high STR_12
  7311  011492  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7312  011494  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7313                           
  7314                           ;ethernet.c: 136: UARTTransmitText(macToString(frame->destination));
  7315  011498  0101               	movlb	1	; () banked
  7316  01149A  EE20 F008          	lfsr	2,8
  7317  01149E  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7318  0114A0  26D9               	addwf	16345,f,c
  7319  0114A2  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7320  0114A4  22DA               	addwfc	16346,f,c
  7321  0114A6  EE00  F066         	lfsr	0,macToString@addr
  7322  0114AA  0E05               	movlw	5
  7323  0114AC                     u14981:
  7324  0114AC  006F FF6F FFEB     	movff	16347,16363
  7325  0114B2  06E8               	decf	16360,f,c
  7326  0114B4  E2FB               	bc	u14981
  7327  0114B6  ECB7  F0AF         	call	_macToString	;wreg free
  7328  0114BA  0060  F198  F06D   	movff	?_macToString,UARTTransmitText@str
  7329  0114C0  0060  F19C  F06E   	movff	?_macToString+1,UARTTransmitText@str+1
  7330  0114C6  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7331                           
  7332                           ;ethernet.c: 137: UARTTransmitText("][");
  7333  0114CA  0EFA               	movlw	low STR_11
  7334  0114CC  0100               	movlb	0	; () banked
  7335  0114CE  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7336  0114D0  0EFF               	movlw	high STR_11
  7337  0114D2  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7338  0114D4  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7339                           
  7340                           ;ethernet.c: 138: UARTTransmitText(etherTypeToString(frame->ethertype));
  7341  0114D8  0101               	movlb	1	; () banked
  7342  0114DA  EE20 F00E          	lfsr	2,14
  7343  0114DE  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7344  0114E0  26D9               	addwf	16345,f,c
  7345  0114E2  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7346  0114E4  22DA               	addwfc	16346,f,c
  7347  0114E6  006F FF78  F016    	movff	16350,etherTypeToString@ethertype
  7348  0114EC  006F FF74  F017    	movff	16349,etherTypeToString@ethertype+1
  7349  0114F2  EC07  F0B8         	call	_etherTypeToString	;wreg free
  7350  0114F6  0060  F058  F06D   	movff	?_etherTypeToString,UARTTransmitText@str
  7351  0114FC  0060  F05C  F06E   	movff	?_etherTypeToString+1,UARTTransmitText@str+1
  7352  011502  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7353                           
  7354                           ;ethernet.c: 139: UARTTransmitText("][L=");
  7355  011506  0ED5               	movlw	low STR_14
  7356  011508  0100               	movlb	0	; () banked
  7357  01150A  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7358  01150C  0EFF               	movlw	high STR_14
  7359  01150E  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7360  011510  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7361                           
  7362                           ;ethernet.c: 140: UARTTransmitText(intToString(frame->length, 10));
  7363  011514  0060  F7CB  FFD9   	movff	ethernet_rxGetNewFrame@frame,16345
  7364  01151A  0060  F7CF  FFDA   	movff	ethernet_rxGetNewFrame@frame+1,16346
  7365  011520  006F FF78  F28D    	movff	16350,??_ethernet_rxGetNewFrame
  7366  011526  006F FF74  F28E    	movff	16349,??_ethernet_rxGetNewFrame+1
  7367  01152C  0060  FA34  F032   	movff	??_ethernet_rxGetNewFrame,intToString@val
  7368  011532  0060  FA38  F033   	movff	??_ethernet_rxGetNewFrame+1,intToString@val+1
  7369  011538  6A34               	clrf	intToString@val+2,c
  7370  01153A  6A35               	clrf	intToString@val+3,c
  7371  01153C  0E0A               	movlw	10
  7372  01153E  6E36               	movwf	intToString@b,c
  7373  011540  ECA5  F0B8         	call	_intToString	;wreg free
  7374  011544  0060  F0C8  F06D   	movff	?_intToString,UARTTransmitText@str
  7375  01154A  0060  F0CC  F06E   	movff	?_intToString+1,UARTTransmitText@str+1
  7376  011550  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7377                           
  7378                           ;ethernet.c: 141: UARTTransmitText("] ");
  7379  011554  0EF4               	movlw	low STR_15
  7380  011556  0100               	movlb	0	; () banked
  7381  011558  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7382  01155A  0EFF               	movlw	high STR_15
  7383  01155C  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7384  01155E  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7385                           
  7386                           ;ethernet.c: 142: UART_resetFormat();
  7387  011562  EC77  F0BB         	call	_UART_resetFormat	;wreg free
  7388                           
  7389                           ;ethernet.c: 144: ethernetController_dropPacket();
  7390  011566  ECC1  F0B8         	call	_ethernetController_dropPacket	;wreg free
  7391                           
  7392                           ;ethernet.c: 146: }
  7393                           
  7394                           ;ethernet.c: 145: break;
  7395  01156A  D01A               	goto	l376
  7396  01156C                     l374:
  7397  01156C  0101               	movlb	1	; () banked
  7398  01156E  EE20 F00E          	lfsr	2,14
  7399  011572  51F2               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7400  011574  26D9               	addwf	16345,f,c
  7401  011576  51F3               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7402  011578  22DA               	addwfc	16346,f,c
  7403  01157A  006F FF78  F28D    	movff	16350,??_ethernet_rxGetNewFrame
  7404  011580  006F FF74  F28E    	movff	16349,??_ethernet_rxGetNewFrame+1
  7405                           
  7406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7407                           ; Switch size 1, requested type "space"
  7408                           ; Number of cases is 1, Range of values is 8 to 8
  7409                           ; switch strategies available:
  7410                           ; Name         Instructions Cycles
  7411                           ; simple_byte            4     3 (average)
  7412                           ;	Chosen strategy is simple_byte
  7413  011586  0102               	movlb	2	; () banked
  7414  011588  518E               	movf	(??_ethernet_rxGetNewFrame+1)& (0+255),w,b
  7415  01158A  0A08               	xorlw	8	; case 8
  7416  01158C  A4D8               	btfss	16344,2,c
  7417  01158E  D746               	goto	l378
  7418                           
  7419                           ; BSR set to: 2
  7420                           ; Switch size 1, requested type "space"
  7421                           ; Number of cases is 2, Range of values is 0 to 6
  7422                           ; switch strategies available:
  7423                           ; Name         Instructions Cycles
  7424                           ; simple_byte            7     4 (average)
  7425                           ;	Chosen strategy is simple_byte
  7426  011590  518D               	movf	??_ethernet_rxGetNewFrame& (0+255),w,b
  7427  011592  0A00               	xorlw	0	; case 0
  7428  011594  B4D8               	btfsc	16344,2,c
  7429  011596  D718               	goto	l377
  7430  011598  0A06               	xorlw	6	; case 6
  7431  01159A  B4D8               	btfsc	16344,2,c
  7432  01159C  D6EB               	goto	l375
  7433  01159E  D73E               	goto	l378
  7434  0115A0                     l376:
  7435                           
  7436                           ;ethernet.c: 159: UARTTransmitText("\n\r");
  7437                           
  7438                           ; BSR set to: 2
  7439  0115A0  0EEB               	movlw	low (STR_17+1)
  7440  0115A2  0100               	movlb	0	; () banked
  7441  0115A4  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  7442  0115A6  0EFF               	movlw	high (STR_17+1)
  7443  0115A8  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7444  0115AA  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  7445  0115AE  0012               	return	
  7446  0115B0                     __end_of_ethernet_rxGetNewFrame:
  7447                           	opt stack 0
  7448                           
  7449 ;; *************** function _macToString *****************
  7450 ;; Defined at:
  7451 ;;		line 97 in file "src/system/uart.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;  addr            6    6[BANK0 ] struct macaddress
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;  i               1   52[COMRAM] unsigned char 
  7456 ;;  j               1   53[COMRAM] unsigned char 
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  2    6[BANK0 ] PTR unsigned char 
  7459 ;; Registers used:
  7460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7466 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7469 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7470 ;;Total ram usage:        9 bytes
  7471 ;; Hardware stack levels used:    1
  7472 ;; Hardware stack levels required when called:    7
  7473 ;; This function calls:
  7474 ;;		_itoa
  7475 ;; This function is called by:
  7476 ;;		_ethernet_rxGetNewFrame
  7477 ;;		_arpEntryToString
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text19
  7482  015F6E                     __ptext19:
  7483                           	opt stack 0
  7484  015F6E                     _macToString:
  7485                           	opt stack 21
  7486                           
  7487                           ;uart.c: 98: char static address[20];
  7488                           ;uart.c: 99: char static number[3];
  7489                           ;uart.c: 101: uint8_t j = 0;
  7490                           
  7491                           ;incstack = 0
  7492  015F6E  0E00               	movlw	0
  7493  015F70  6E36               	movwf	macToString@j,c
  7494                           
  7495                           ;uart.c: 102: for (uint8_t i = 0; i < 6; i++) {
  7496  015F72  0E00               	movlw	0
  7497  015F74  6E35               	movwf	macToString@i,c
  7498  015F76                     l11626:
  7499  015F76  0E05               	movlw	5
  7500  015F78  6435               	cpfsgt	macToString@i,c
  7501  015F7A  D001               	goto	l850
  7502  015F7C  D040               	goto	u14380
  7503  015F7E                     l850:
  7504                           
  7505                           ;uart.c: 103: itoa(&number[0], (int) addr.address[i], 16);
  7506  015F7E  0ED8               	movlw	low macToString@number
  7507  015F80  0100               	movlb	0	; () banked
  7508  015F82  6F60               	movwf	itoa@buf& (0+255),b
  7509  015F84  0E02               	movlw	high macToString@number
  7510  015F86  6F61               	movwf	(itoa@buf+1)& (0+255),b
  7511  015F88  5035               	movf	macToString@i,w,c
  7512  015F8A  0D01               	mullw	1
  7513  015F8C  0E66               	movlw	low macToString@addr
  7514  015F8E  24F3               	addwf	16371,w,c
  7515  015F90  6ED9               	movwf	16345,c
  7516  015F92  0E00               	movlw	high macToString@addr
  7517  015F94  20F4               	addwfc	16372,w,c
  7518  015F96  6EDA               	movwf	16346,c
  7519  015F98  50DF               	movf	16351,w,c
  7520  015F9A  6E34               	movwf	??_macToString& (0+255),c
  7521  015F9C  5034               	movf	??_macToString,w,c
  7522  015F9E  6F62               	movwf	itoa@val& (0+255),b
  7523  015FA0  6B63               	clrf	(itoa@val+1)& (0+255),b
  7524  015FA2  0E00               	movlw	0
  7525  015FA4  6F65               	movwf	(itoa@base+1)& (0+255),b
  7526  015FA6  0E10               	movlw	16
  7527  015FA8  6F64               	movwf	itoa@base& (0+255),b
  7528  015FAA  ECA1  F0B6         	call	_itoa	;wreg free
  7529                           
  7530                           ;uart.c: 104: address[j++] = number[0];
  7531  015FAE  5036               	movf	macToString@j,w,c
  7532  015FB0  0D01               	mullw	1
  7533  015FB2  0EAD               	movlw	low macToString@address
  7534  015FB4  24F3               	addwf	16371,w,c
  7535  015FB6  6ED9               	movwf	16345,c
  7536  015FB8  0E03               	movlw	high macToString@address
  7537  015FBA  20F4               	addwfc	16372,w,c
  7538  015FBC  6EDA               	movwf	16346,c
  7539  015FBE  0060  FB63  FFDF   	movff	macToString@number,16351
  7540  015FC4  2A36               	incf	macToString@j,f,c
  7541                           
  7542                           ;uart.c: 105: address[j++] = number[1];
  7543  015FC6  5036               	movf	macToString@j,w,c
  7544  015FC8  0D01               	mullw	1
  7545  015FCA  0EAD               	movlw	low macToString@address
  7546  015FCC  24F3               	addwf	16371,w,c
  7547  015FCE  6ED9               	movwf	16345,c
  7548  015FD0  0E03               	movlw	high macToString@address
  7549  015FD2  20F4               	addwfc	16372,w,c
  7550  015FD4  6EDA               	movwf	16346,c
  7551  015FD6  0060  FB67  FFDF   	movff	macToString@number+1,16351
  7552  015FDC  2A36               	incf	macToString@j,f,c
  7553                           
  7554                           ;uart.c: 106: if (i < 5)
  7555  015FDE  0E05               	movlw	5
  7556  015FE0  6035               	cpfslt	macToString@i,c
  7557  015FE2  D00B               	goto	l852
  7558                           
  7559                           ;uart.c: 107: address[j++] = ':';
  7560  015FE4  5036               	movf	macToString@j,w,c
  7561  015FE6  0D01               	mullw	1
  7562  015FE8  0EAD               	movlw	low macToString@address
  7563  015FEA  24F3               	addwf	16371,w,c
  7564  015FEC  6ED9               	movwf	16345,c
  7565  015FEE  0E03               	movlw	high macToString@address
  7566  015FF0  20F4               	addwfc	16372,w,c
  7567  015FF2  6EDA               	movwf	16346,c
  7568  015FF4  0E3A               	movlw	58
  7569  015FF6  6EDF               	movwf	16351,c
  7570  015FF8  2A36               	incf	macToString@j,f,c
  7571  015FFA                     l852:
  7572  015FFA  2A35               	incf	macToString@i,f,c
  7573  015FFC  D7BC               	goto	l11626
  7574  015FFE                     u14380:
  7575                           
  7576                           ;uart.c: 108: }
  7577                           ;uart.c: 109: address[j] = '\0';
  7578  015FFE  5036               	movf	macToString@j,w,c
  7579  016000  0D01               	mullw	1
  7580  016002  0EAD               	movlw	low macToString@address
  7581  016004  24F3               	addwf	16371,w,c
  7582  016006  6ED9               	movwf	16345,c
  7583  016008  0E03               	movlw	high macToString@address
  7584  01600A  20F4               	addwfc	16372,w,c
  7585  01600C  6EDA               	movwf	16346,c
  7586  01600E  0E00               	movlw	0
  7587  016010  6EDF               	movwf	16351,c
  7588                           
  7589                           ;uart.c: 111: return address;
  7590  016012  0EAD               	movlw	low macToString@address
  7591  016014  0100               	movlb	0	; () banked
  7592  016016  6F66               	movwf	?_macToString& (0+255),b
  7593  016018  0E03               	movlw	high macToString@address
  7594  01601A  6F67               	movwf	(?_macToString+1)& (0+255),b
  7595  01601C  0012               	return	
  7596  01601E                     __end_of_macToString:
  7597                           	opt stack 0
  7598                           
  7599 ;; *************** function _itoa *****************
  7600 ;; Defined at:
  7601 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;  buf             2    0[BANK0 ] PTR unsigned char 
  7604 ;;		 -> ipAdressToString@number(4), macToString@number(3), 
  7605 ;;  val             2    2[BANK0 ] int 
  7606 ;;  base            2    4[BANK0 ] int 
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;  cp              2   49[COMRAM] PTR unsigned char 
  7609 ;;		 -> ipAdressToString@number(4), macToString@number(3), 
  7610 ;; Return value:  Size  Location     Type
  7611 ;;                  2    0[BANK0 ] PTR unsigned char 
  7612 ;; Registers used:
  7613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7619 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7622 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7623 ;;Total ram usage:        8 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; Hardware stack levels required when called:    6
  7626 ;; This function calls:
  7627 ;;		_utoa
  7628 ;; This function is called by:
  7629 ;;		_macToString
  7630 ;;		_ipAdressToString
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text20
  7635  016D42                     __ptext20:
  7636                           	opt stack 0
  7637  016D42                     _itoa:
  7638                           	opt stack 22
  7639                           
  7640                           ; BSR set to: 0
  7641                           ;incstack = 0
  7642  016D42  0060  F180  F032   	movff	itoa@buf,itoa@cp
  7643  016D48  0060  F184  F033   	movff	itoa@buf+1,itoa@cp+1
  7644  016D4E  0100               	movlb	0	; () banked
  7645  016D50  AF63               	btfss	(itoa@val+1)& (0+255),7,b
  7646  016D52  D00E               	goto	l1835
  7647                           
  7648                           ; BSR set to: 0
  7649  016D54  0060  F183  FFD9   	movff	itoa@buf,16345
  7650  016D5A  0060  F187  FFDA   	movff	itoa@buf+1,16346
  7651  016D60  0E2D               	movlw	45
  7652  016D62  6EDF               	movwf	16351,c
  7653                           
  7654                           ; BSR set to: 0
  7655  016D64  4B60               	infsnz	itoa@buf& (0+255),f,b
  7656  016D66  2B61               	incf	(itoa@buf+1)& (0+255),f,b
  7657                           
  7658                           ; BSR set to: 0
  7659  016D68  6D62               	negf	itoa@val& (0+255),b
  7660  016D6A  1F63               	comf	(itoa@val+1)& (0+255),f,b
  7661  016D6C  B0D8               	btfsc	16344,0,c
  7662  016D6E  2B63               	incf	(itoa@val+1)& (0+255),f,b
  7663  016D70                     l1835:
  7664                           
  7665                           ; BSR set to: 0
  7666                           
  7667                           ; BSR set to: 0
  7668  016D70  0060  F180  F029   	movff	itoa@buf,utoa@buf
  7669  016D76  0060  F184  F02A   	movff	itoa@buf+1,utoa@buf+1
  7670  016D7C  0060  F188  F02B   	movff	itoa@val,utoa@val
  7671  016D82  0060  F18C  F02C   	movff	itoa@val+1,utoa@val+1
  7672  016D88  0060  F190  F02D   	movff	itoa@base,utoa@base
  7673  016D8E  0060  F194  F02E   	movff	itoa@base+1,utoa@base+1
  7674  016D94  ECB9  F0AC         	call	_utoa	;wreg free
  7675  016D98  0012               	return	
  7676  016D9A                     __end_of_itoa:
  7677                           	opt stack 0
  7678                           
  7679 ;; *************** function _utoa *****************
  7680 ;; Defined at:
  7681 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  buf             2   40[COMRAM] PTR unsigned char 
  7684 ;;		 -> ipAdressToString@number(4), macToString@number(3), 
  7685 ;;  val             2   42[COMRAM] unsigned int 
  7686 ;;  base            2   44[COMRAM] int 
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;  v               2   46[COMRAM] unsigned int 
  7689 ;;  c               1   48[COMRAM] unsigned char 
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  2   40[COMRAM] PTR unsigned char 
  7692 ;; Registers used:
  7693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7699 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7700 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7702 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7703 ;;Total ram usage:        9 bytes
  7704 ;; Hardware stack levels used:    1
  7705 ;; Hardware stack levels required when called:    5
  7706 ;; This function calls:
  7707 ;;		___lwdiv
  7708 ;;		___lwmod
  7709 ;; This function is called by:
  7710 ;;		_itoa
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           	psect	text21
  7715  015972                     __ptext21:
  7716                           	opt stack 0
  7717  015972                     _utoa:
  7718                           	opt stack 22
  7719                           
  7720                           ;incstack = 0
  7721  015972  0060  F0AC  F02F   	movff	utoa@val,utoa@v
  7722  015978  0060  F0B0  F030   	movff	utoa@val+1,utoa@v+1
  7723  01597E  0060  F0BC  F016   	movff	utoa@v,___lwdiv@dividend
  7724  015984  0060  F0C0  F017   	movff	utoa@v+1,___lwdiv@dividend+1
  7725  01598A  0060  F0B4  F018   	movff	utoa@base,___lwdiv@divisor
  7726  015990  0060  F0B8  F019   	movff	utoa@base+1,___lwdiv@divisor+1
  7727  015996  ECCD  F0B6         	call	___lwdiv	;wreg free
  7728  01599A  0060  F058  F02F   	movff	?___lwdiv,utoa@v
  7729  0159A0  0060  F05C  F030   	movff	?___lwdiv+1,utoa@v+1
  7730  0159A6  4A29               	infsnz	utoa@buf,f,c
  7731  0159A8  2A2A               	incf	utoa@buf+1,f,c
  7732  0159AA  502F               	movf	utoa@v,w,c
  7733  0159AC  1030               	iorwf	utoa@v+1,w,c
  7734  0159AE  A4D8               	btfss	16344,2,c
  7735  0159B0  D7E6               	goto	l1839
  7736  0159B2  0060  F0A7  FFD9   	movff	utoa@buf,16345
  7737  0159B8  0060  F0AB  FFDA   	movff	utoa@buf+1,16346
  7738  0159BE  0E00               	movlw	0
  7739  0159C0  6EDF               	movwf	16351,c
  7740  0159C2  0629               	decf	utoa@buf,f,c
  7741  0159C4  A0D8               	btfss	16344,0,c
  7742  0159C6  062A               	decf	utoa@buf+1,f,c
  7743  0159C8  0060  F0AC  F024   	movff	utoa@val,___lwmod@dividend
  7744  0159CE  0060  F0B0  F025   	movff	utoa@val+1,___lwmod@dividend+1
  7745  0159D4  0060  F0B4  F026   	movff	utoa@base,___lwmod@divisor
  7746  0159DA  0060  F0B8  F027   	movff	utoa@base+1,___lwmod@divisor+1
  7747  0159E0  ECE4  F0B7         	call	___lwmod	;wreg free
  7748  0159E4  5024               	movf	?___lwmod,w,c
  7749  0159E6  6E31               	movwf	utoa@c,c
  7750  0159E8  0060  F0AC  F016   	movff	utoa@val,___lwdiv@dividend
  7751  0159EE  0060  F0B0  F017   	movff	utoa@val+1,___lwdiv@dividend+1
  7752  0159F4  0060  F0B4  F018   	movff	utoa@base,___lwdiv@divisor
  7753  0159FA  0060  F0B8  F019   	movff	utoa@base+1,___lwdiv@divisor+1
  7754  015A00  ECCD  F0B6         	call	___lwdiv	;wreg free
  7755  015A04  0060  F058  F02B   	movff	?___lwdiv,utoa@val
  7756  015A0A  0060  F05C  F02C   	movff	?___lwdiv+1,utoa@val+1
  7757  015A10  0E09               	movlw	9
  7758  015A12  6431               	cpfsgt	utoa@c,c
  7759  015A14  D002               	goto	l1842
  7760  015A16  0E07               	movlw	7
  7761  015A18  2631               	addwf	utoa@c,f,c
  7762  015A1A                     l1842:
  7763  015A1A  0E30               	movlw	48
  7764  015A1C  2631               	addwf	utoa@c,f,c
  7765  015A1E  0060  F0A7  FFD9   	movff	utoa@buf,16345
  7766  015A24  0060  F0AB  FFDA   	movff	utoa@buf+1,16346
  7767  015A2A  0060  F0C7  FFDF   	movff	utoa@c,16351
  7768  015A30  0629               	decf	utoa@buf,f,c
  7769  015A32  A0D8               	btfss	16344,0,c
  7770  015A34  062A               	decf	utoa@buf+1,f,c
  7771  015A36  502B               	movf	utoa@val,w,c
  7772  015A38  102C               	iorwf	utoa@val+1,w,c
  7773  015A3A  A4D8               	btfss	16344,2,c
  7774  015A3C  D7C5               	goto	l1841
  7775                           
  7776                           ;	Return value of _utoa is never used
  7777  015A3E  4A29               	infsnz	utoa@buf,f,c
  7778  015A40  2A2A               	incf	utoa@buf+1,f,c
  7779  015A42  0012               	return	
  7780  015A44                     __end_of_utoa:
  7781                           	opt stack 0
  7782                           
  7783 ;; *************** function ___lwdiv *****************
  7784 ;; Defined at:
  7785 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  dividend        2   21[COMRAM] unsigned int 
  7788 ;;  divisor         2   23[COMRAM] unsigned int 
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;  quotient        2   26[COMRAM] unsigned int 
  7791 ;;  counter         1   25[COMRAM] unsigned char 
  7792 ;; Return value:  Size  Location     Type
  7793 ;;                  2   21[COMRAM] unsigned int 
  7794 ;; Registers used:
  7795 ;;		wreg, status,2, status,0
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7802 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7804 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7805 ;;Total ram usage:        7 bytes
  7806 ;; Hardware stack levels used:    1
  7807 ;; Hardware stack levels required when called:    4
  7808 ;; This function calls:
  7809 ;;		Nothing
  7810 ;; This function is called by:
  7811 ;;		_utoa
  7812 ;; This function uses a non-reentrant model
  7813 ;;
  7814                           
  7815                           	psect	text22
  7816  016D9A                     __ptext22:
  7817                           	opt stack 0
  7818  016D9A                     ___lwdiv:
  7819                           	opt stack 22
  7820                           
  7821                           ;incstack = 0
  7822  016D9A  0E00               	movlw	0
  7823  016D9C  6E1C               	movwf	___lwdiv@quotient+1,c
  7824  016D9E  0E00               	movlw	0
  7825  016DA0  6E1B               	movwf	___lwdiv@quotient,c
  7826  016DA2  5018               	movf	___lwdiv@divisor,w,c
  7827  016DA4  1019               	iorwf	___lwdiv@divisor+1,w,c
  7828  016DA6  B4D8               	btfsc	16344,2,c
  7829  016DA8  D01C               	goto	l1941
  7830  016DAA  0E01               	movlw	1
  7831  016DAC  6E1A               	movwf	___lwdiv@counter,c
  7832  016DAE  D004               	goto	l1936
  7833  016DB0  90D8               	bcf	16344,0,c
  7834  016DB2  3618               	rlcf	___lwdiv@divisor,f,c
  7835  016DB4  3619               	rlcf	___lwdiv@divisor+1,f,c
  7836  016DB6  2A1A               	incf	___lwdiv@counter,f,c
  7837  016DB8                     l1936:
  7838  016DB8  AE19               	btfss	___lwdiv@divisor+1,7,c
  7839  016DBA  D7FA               	goto	l1937
  7840  016DBC                     u12240:
  7841  016DBC  90D8               	bcf	16344,0,c
  7842  016DBE  361B               	rlcf	___lwdiv@quotient,f,c
  7843  016DC0  361C               	rlcf	___lwdiv@quotient+1,f,c
  7844  016DC2  5018               	movf	___lwdiv@divisor,w,c
  7845  016DC4  5C16               	subwf	___lwdiv@dividend,w,c
  7846  016DC6  5019               	movf	___lwdiv@divisor+1,w,c
  7847  016DC8  5817               	subwfb	___lwdiv@dividend+1,w,c
  7848  016DCA  A0D8               	btfss	16344,0,c
  7849  016DCC  D005               	goto	l1940
  7850  016DCE  5018               	movf	___lwdiv@divisor,w,c
  7851  016DD0  5E16               	subwf	___lwdiv@dividend,f,c
  7852  016DD2  5019               	movf	___lwdiv@divisor+1,w,c
  7853  016DD4  5A17               	subwfb	___lwdiv@dividend+1,f,c
  7854  016DD6  801B               	bsf	___lwdiv@quotient,0,c
  7855  016DD8                     l1940:
  7856  016DD8  90D8               	bcf	16344,0,c
  7857  016DDA  3219               	rrcf	___lwdiv@divisor+1,f,c
  7858  016DDC  3218               	rrcf	___lwdiv@divisor,f,c
  7859  016DDE  2E1A               	decfsz	___lwdiv@counter,f,c
  7860  016DE0  D7ED               	goto	u12240
  7861  016DE2                     l1941:
  7862  016DE2  0060  F06C  F016   	movff	___lwdiv@quotient,?___lwdiv
  7863  016DE8  0060  F070  F017   	movff	___lwdiv@quotient+1,?___lwdiv+1
  7864  016DEE  0012               	return		;funcret
  7865  016DF0                     __end_of___lwdiv:
  7866                           	opt stack 0
  7867                           
  7868 ;; *************** function _ipv4_handleNewPacket *****************
  7869 ;; Defined at:
  7870 ;;		line 218 in file "src/stack/protocols/ipv4.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;  frame           2  144[BANK0 ] PTR struct ethernetFrame
  7873 ;;		 -> stack(124), 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;  header         23  201[BANK1 ] struct ipv4_header
  7876 ;;  headerField     9  233[BANK1 ] struct memoryField
  7877 ;;  payloadField    9  224[BANK1 ] struct memoryField
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  1    wreg      void 
  7880 ;; Registers used:
  7881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7887 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7888 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7889 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7890 ;;      Totals:         0       6      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7891 ;;Total ram usage:       49 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; Hardware stack levels required when called:   13
  7894 ;; This function calls:
  7895 ;;		_ethernetController_dropPacket
  7896 ;;		_icmp_handleNewPacket
  7897 ;;		_ipv4_checkHeaderChecksum
  7898 ;;		_ipv4_parseHeader
  7899 ;;		_tcp_handleNewPacket
  7900 ;; This function is called by:
  7901 ;;		_ethernet_rxGetNewFrame
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text23
  7906  01301E                     __ptext23:
  7907                           	opt stack 0
  7908  01301E                     _ipv4_handleNewPacket:
  7909                           	opt stack 15
  7910                           
  7911                           ;ipv4.c: 219: ipv4_header_t header;
  7912                           ;ipv4.c: 220: memoryField_t headerField;
  7913                           ;ipv4.c: 221: memoryField_t payloadField;
  7914                           ;ipv4.c: 223: if (frame->ethertype != ETHERTYPE_IPv4) {
  7915                           
  7916                           ;incstack = 0
  7917  01301E  0100               	movlb	0	; () banked
  7918  013020  EE20 F00E          	lfsr	2,14
  7919  013024  51F0               	movf	ipv4_handleNewPacket@frame& (0+255),w,b
  7920  013026  26D9               	addwf	16345,f,c
  7921  013028  51F1               	movf	(ipv4_handleNewPacket@frame+1)& (0+255),w,b
  7922  01302A  22DA               	addwfc	16346,f,c
  7923  01302C  50DE               	movf	16350,w,c
  7924  01302E  E104               	bnz	u14230
  7925  013030  0E08               	movlw	8
  7926  013032  18DE               	xorwf	16350,w,c
  7927  013034  B4D8               	btfsc	16344,2,c
  7928  013036  D009               	goto	l1179
  7929  013038                     u14230:
  7930                           
  7931                           ; BSR set to: 0
  7932                           ;ipv4.c: 224: ethernetController_dropPacket(frame);
  7933  013038  0060  F3C0  F028   	movff	ipv4_handleNewPacket@frame,?_ethernetController_dropPacket
  7934  01303E  0060  F3C4  F029   	movff	ipv4_handleNewPacket@frame+1,?_ethernetController_dropPacket+1
  7935  013044  ECC1  F0B8         	call	_ethernetController_dropPacket	;wreg free
  7936                           
  7937                           ;ipv4.c: 225: return;
  7938  013048  0012               	return	
  7939  01304A                     l1179:
  7940                           
  7941                           ;ipv4.c: 226: }
  7942                           ;ipv4.c: 228: headerField = frame->memory;
  7943  01304A  0100               	movlb	0	; () banked
  7944  01304C  EE20 F010          	lfsr	2,16
  7945  013050  51F0               	movf	ipv4_handleNewPacket@frame& (0+255),w,b
  7946  013052  26D9               	addwf	16345,f,c
  7947  013054  51F1               	movf	(ipv4_handleNewPacket@frame+1)& (0+255),w,b
  7948  013056  22DA               	addwfc	16346,f,c
  7949  013058  EE10  F1E9         	lfsr	1,ipv4_handleNewPacket@headerField
  7950  01305C  0E08               	movlw	8
  7951  01305E                     u14241:
  7952  01305E  006F FF6F FFE3     	movff	16347,16355
  7953  013064  06E8               	decf	16360,f,c
  7954  013066  E2FB               	bc	u14241
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;ipv4.c: 229: headerField.start = frame->memory.start + 22;
  7958  013068  EE20 F010          	lfsr	2,16
  7959  01306C  51F0               	movf	ipv4_handleNewPacket@frame& (0+255),w,b
  7960  01306E  26D9               	addwf	16345,f,c
  7961  013070  51F1               	movf	(ipv4_handleNewPacket@frame+1)& (0+255),w,b
  7962  013072  22DA               	addwfc	16346,f,c
  7963  013074  006F FF78  F0F2    	movff	16350,??_ipv4_handleNewPacket
  7964  01307A  006F FF74  F0F3    	movff	16349,??_ipv4_handleNewPacket+1
  7965  013080  0E16               	movlw	22
  7966  013082  25F2               	addwf	??_ipv4_handleNewPacket& (0+255),w,b
  7967  013084  0101               	movlb	1	; () banked
  7968  013086  6FE9               	movwf	ipv4_handleNewPacket@headerField& (0+255),b
  7969  013088  0E00               	movlw	0
  7970  01308A  0100               	movlb	0	; () banked
  7971  01308C  21F3               	addwfc	(??_ipv4_handleNewPacket+1)& (0+255),w,b
  7972  01308E  0101               	movlb	1	; () banked
  7973  013090  6FEA               	movwf	(ipv4_handleNewPacket@headerField+1)& (0+255),b
  7974                           
  7975                           ; BSR set to: 1
  7976                           ;ipv4.c: 231: header = ipv4_parseHeader(&headerField);
  7977  013092  0EE9               	movlw	low ipv4_handleNewPacket@headerField
  7978  013094  0100               	movlb	0	; () banked
  7979  013096  6F60               	movwf	ipv4_parseHeader@field& (0+255),b
  7980  013098  0E01               	movlw	high ipv4_handleNewPacket@headerField
  7981  01309A  6F61               	movwf	(ipv4_parseHeader@field+1)& (0+255),b
  7982  01309C  ECA7  F096         	call	_ipv4_parseHeader	;wreg free
  7983  0130A0  EE20  F1C9         	lfsr	2,ipv4_handleNewPacket@header
  7984  0130A4  0E16               	movlw	22
  7985  0130A6                     u14251:
  7986  0130A6  006F FFAF FFDB     	movff	16363,16347
  7987  0130AC  06E8               	decf	16360,f,c
  7988  0130AE  E2FB               	bc	u14251
  7989                           
  7990                           ;ipv4.c: 233: headerField.length = header.headerLength * 4;
  7991  0130B0  0101               	movlb	1	; () banked
  7992  0130B2  51CA               	movf	(ipv4_handleNewPacket@header+1)& (0+255),w,b
  7993  0130B4  0D04               	mullw	4
  7994  0130B6  006F FFCC  F1ED    	movff	16371,ipv4_handleNewPacket@headerField+4
  7995  0130BC  006F FFD0  F1EE    	movff	16372,ipv4_handleNewPacket@headerField+5
  7996                           
  7997                           ; BSR set to: 1
  7998                           ;ipv4.c: 234: if (headerField.start + headerField.length > 0x5FFF) {
  7999  0130C2  51E9               	movf	ipv4_handleNewPacket@headerField& (0+255),w,b
  8000  0130C4  25ED               	addwf	(ipv4_handleNewPacket@headerField+4)& (0+255),w,b
  8001  0130C6  0100               	movlb	0	; () banked
  8002  0130C8  6FF2               	movwf	??_ipv4_handleNewPacket& (0+255),b
  8003  0130CA  0101               	movlb	1	; () banked
  8004  0130CC  51EA               	movf	(ipv4_handleNewPacket@headerField+1)& (0+255),w,b
  8005  0130CE  21EE               	addwfc	(ipv4_handleNewPacket@headerField+5)& (0+255),w,b
  8006  0130D0  0100               	movlb	0	; () banked
  8007  0130D2  6FF3               	movwf	(??_ipv4_handleNewPacket+1)& (0+255),b
  8008  0130D4  0E60               	movlw	96
  8009  0130D6  5DF3               	subwf	(??_ipv4_handleNewPacket+1)& (0+255),w,b
  8010  0130D8  A0D8               	btfss	16344,0,c
  8011  0130DA  D026               	goto	l1181
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;ipv4.c: 235: headerField.end = headerField.length - (0x5FFF - headerField.start) - 1;
  8015  0130DC  0EFF               	movlw	255
  8016  0130DE  6FF2               	movwf	??_ipv4_handleNewPacket& (0+255),b
  8017  0130E0  0E5F               	movlw	95
  8018  0130E2  6FF3               	movwf	(??_ipv4_handleNewPacket+1)& (0+255),b
  8019  0130E4  0060  F7A4  F0F4   	movff	ipv4_handleNewPacket@headerField,??_ipv4_handleNewPacket+2
  8020  0130EA  0060  F7A8  F0F5   	movff	ipv4_handleNewPacket@headerField+1,??_ipv4_handleNewPacket+3
  8021  0130F0  1FF4               	comf	(??_ipv4_handleNewPacket+2)& (0+255),f,b
  8022  0130F2  1FF5               	comf	(??_ipv4_handleNewPacket+3)& (0+255),f,b
  8023  0130F4  4BF4               	infsnz	(??_ipv4_handleNewPacket+2)& (0+255),f,b
  8024  0130F6  2BF5               	incf	(??_ipv4_handleNewPacket+3)& (0+255),f,b
  8025  0130F8  51F2               	movf	??_ipv4_handleNewPacket& (0+255),w,b
  8026  0130FA  27F4               	addwf	(??_ipv4_handleNewPacket+2)& (0+255),f,b
  8027  0130FC  51F3               	movf	(??_ipv4_handleNewPacket+1)& (0+255),w,b
  8028  0130FE  23F5               	addwfc	(??_ipv4_handleNewPacket+3)& (0+255),f,b
  8029  013100  1FF4               	comf	(??_ipv4_handleNewPacket+2)& (0+255),f,b
  8030  013102  1FF5               	comf	(??_ipv4_handleNewPacket+3)& (0+255),f,b
  8031  013104  4BF4               	infsnz	(??_ipv4_handleNewPacket+2)& (0+255),f,b
  8032  013106  2BF5               	incf	(??_ipv4_handleNewPacket+3)& (0+255),f,b
  8033  013108  0101               	movlb	1	; () banked
  8034  01310A  51ED               	movf	(ipv4_handleNewPacket@headerField+4)& (0+255),w,b
  8035  01310C  0100               	movlb	0	; () banked
  8036  01310E  27F4               	addwf	(??_ipv4_handleNewPacket+2)& (0+255),f,b
  8037  013110  0101               	movlb	1	; () banked
  8038  013112  51EE               	movf	(ipv4_handleNewPacket@headerField+5)& (0+255),w,b
  8039  013114  0100               	movlb	0	; () banked
  8040  013116  23F5               	addwfc	(??_ipv4_handleNewPacket+3)& (0+255),f,b
  8041  013118  0EFF               	movlw	255
  8042  01311A  25F4               	addwf	(??_ipv4_handleNewPacket+2)& (0+255),w,b
  8043  01311C  0101               	movlb	1	; () banked
  8044  01311E  6FEB               	movwf	(ipv4_handleNewPacket@headerField+2)& (0+255),b
  8045  013120  0EFF               	movlw	255
  8046  013122  0100               	movlb	0	; () banked
  8047  013124  21F5               	addwfc	(??_ipv4_handleNewPacket+3)& (0+255),w,b
  8048  013126  D011               	goto	L3
  8049  013128                     l1181:
  8050                           
  8051                           ;ipv4.c: 237: headerField.end = headerField.start + headerField.length - 1;
  8052                           
  8053                           ; BSR set to: 1
  8054  013128  0101               	movlb	1	; () banked
  8055  01312A  51E9               	movf	ipv4_handleNewPacket@headerField& (0+255),w,b
  8056  01312C  25ED               	addwf	(ipv4_handleNewPacket@headerField+4)& (0+255),w,b
  8057  01312E  0100               	movlb	0	; () banked
  8058  013130  6FF2               	movwf	??_ipv4_handleNewPacket& (0+255),b
  8059  013132  0101               	movlb	1	; () banked
  8060  013134  51EA               	movf	(ipv4_handleNewPacket@headerField+1)& (0+255),w,b
  8061  013136  21EE               	addwfc	(ipv4_handleNewPacket@headerField+5)& (0+255),w,b
  8062  013138  0100               	movlb	0	; () banked
  8063  01313A  6FF3               	movwf	(??_ipv4_handleNewPacket+1)& (0+255),b
  8064  01313C  0EFF               	movlw	255
  8065  01313E  25F2               	addwf	??_ipv4_handleNewPacket& (0+255),w,b
  8066  013140  0101               	movlb	1	; () banked
  8067  013142  6FEB               	movwf	(ipv4_handleNewPacket@headerField+2)& (0+255),b
  8068  013144  0EFF               	movlw	255
  8069  013146  0100               	movlb	0	; () banked
  8070  013148  21F3               	addwfc	(??_ipv4_handleNewPacket+1)& (0+255),w,b
  8071  01314A                     L3:
  8072  01314A  0101               	movlb	1	; () banked
  8073  01314C  6FEC               	movwf	(ipv4_handleNewPacket@headerField+3)& (0+255),b
  8074                           
  8075                           ; BSR set to: 1
  8076                           ;ipv4.c: 239: payloadField.start = headerField.end + 1;
  8077  01314E  0E01               	movlw	1
  8078  013150  25EB               	addwf	(ipv4_handleNewPacket@headerField+2)& (0+255),w,b
  8079  013152  6FE0               	movwf	ipv4_handleNewPacket@payloadField& (0+255),b
  8080  013154  0E00               	movlw	0
  8081  013156  21EC               	addwfc	(ipv4_handleNewPacket@headerField+3)& (0+255),w,b
  8082  013158  6FE1               	movwf	(ipv4_handleNewPacket@payloadField+1)& (0+255),b
  8083                           
  8084                           ; BSR set to: 1
  8085                           ;ipv4.c: 240: payloadField.end = frame->memory.end;
  8086  01315A  0100               	movlb	0	; () banked
  8087  01315C  EE20 F012          	lfsr	2,18
  8088  013160  51F0               	movf	ipv4_handleNewPacket@frame& (0+255),w,b
  8089  013162  26D9               	addwf	16345,f,c
  8090  013164  51F1               	movf	(ipv4_handleNewPacket@frame+1)& (0+255),w,b
  8091  013166  22DA               	addwfc	16346,f,c
  8092  013168  006F FF78  F1E2    	movff	16350,ipv4_handleNewPacket@payloadField+2
  8093  01316E  006F FF74  F1E3    	movff	16349,ipv4_handleNewPacket@payloadField+3
  8094                           
  8095                           ; BSR set to: 0
  8096                           ;ipv4.c: 242: payloadField.length = (payloadField.start < payloadField.end) ? (payloadFi
      +                          eld.end - payloadField.start) : ((0x5FFF - payloadField.start) + payloadField.end);
  8097  013174  0101               	movlb	1	; () banked
  8098  013176  51E2               	movf	(ipv4_handleNewPacket@payloadField+2)& (0+255),w,b
  8099  013178  5DE0               	subwf	ipv4_handleNewPacket@payloadField& (0+255),w,b
  8100  01317A  51E3               	movf	(ipv4_handleNewPacket@payloadField+3)& (0+255),w,b
  8101  01317C  59E1               	subwfb	(ipv4_handleNewPacket@payloadField+1)& (0+255),w,b
  8102  01317E  A0D8               	btfss	16344,0,c
  8103  013180  D019               	goto	l1184
  8104                           
  8105                           ; BSR set to: 1
  8106  013182  0060  F780  F0F2   	movff	ipv4_handleNewPacket@payloadField,??_ipv4_handleNewPacket
  8107  013188  0060  F784  F0F3   	movff	ipv4_handleNewPacket@payloadField+1,??_ipv4_handleNewPacket+1
  8108  01318E  0100               	movlb	0	; () banked
  8109  013190  1FF2               	comf	??_ipv4_handleNewPacket& (0+255),f,b
  8110  013192  1FF3               	comf	(??_ipv4_handleNewPacket+1)& (0+255),f,b
  8111  013194  4BF2               	infsnz	??_ipv4_handleNewPacket& (0+255),f,b
  8112  013196  2BF3               	incf	(??_ipv4_handleNewPacket+1)& (0+255),f,b
  8113  013198  0101               	movlb	1	; () banked
  8114  01319A  51E2               	movf	(ipv4_handleNewPacket@payloadField+2)& (0+255),w,b
  8115  01319C  0100               	movlb	0	; () banked
  8116  01319E  27F2               	addwf	??_ipv4_handleNewPacket& (0+255),f,b
  8117  0131A0  0101               	movlb	1	; () banked
  8118  0131A2  51E3               	movf	(ipv4_handleNewPacket@payloadField+3)& (0+255),w,b
  8119  0131A4  0100               	movlb	0	; () banked
  8120  0131A6  23F3               	addwfc	(??_ipv4_handleNewPacket+1)& (0+255),f,b
  8121  0131A8  0EFF               	movlw	255
  8122  0131AA  25F2               	addwf	??_ipv4_handleNewPacket& (0+255),w,b
  8123  0131AC  0101               	movlb	1	; () banked
  8124  0131AE  6FC7               	movwf	_ipv4_handleNewPacket$3905& (0+255),b
  8125  0131B0  0E5F               	movlw	95
  8126  0131B2  D012               	goto	L4
  8127  0131B4                     l1184:
  8128                           
  8129                           ; BSR set to: 1
  8130                           
  8131                           ; BSR set to: 1
  8132  0131B4  0060  F780  F0F2   	movff	ipv4_handleNewPacket@payloadField,??_ipv4_handleNewPacket
  8133  0131BA  0060  F784  F0F3   	movff	ipv4_handleNewPacket@payloadField+1,??_ipv4_handleNewPacket+1
  8134  0131C0  0100               	movlb	0	; () banked
  8135  0131C2  1FF2               	comf	??_ipv4_handleNewPacket& (0+255),f,b
  8136  0131C4  1FF3               	comf	(??_ipv4_handleNewPacket+1)& (0+255),f,b
  8137  0131C6  4BF2               	infsnz	??_ipv4_handleNewPacket& (0+255),f,b
  8138  0131C8  2BF3               	incf	(??_ipv4_handleNewPacket+1)& (0+255),f,b
  8139  0131CA  0101               	movlb	1	; () banked
  8140  0131CC  51E2               	movf	(ipv4_handleNewPacket@payloadField+2)& (0+255),w,b
  8141  0131CE  0100               	movlb	0	; () banked
  8142  0131D0  25F2               	addwf	??_ipv4_handleNewPacket& (0+255),w,b
  8143  0131D2  0101               	movlb	1	; () banked
  8144  0131D4  6FC7               	movwf	_ipv4_handleNewPacket$3905& (0+255),b
  8145  0131D6  51E3               	movf	(ipv4_handleNewPacket@payloadField+3)& (0+255),w,b
  8146  0131D8                     L4:
  8147  0131D8  0100               	movlb	0	; () banked
  8148  0131DA  21F3               	addwfc	(??_ipv4_handleNewPacket+1)& (0+255),w,b
  8149  0131DC  0101               	movlb	1	; () banked
  8150  0131DE  6FC8               	movwf	(_ipv4_handleNewPacket$3905+1)& (0+255),b
  8151                           
  8152                           ; BSR set to: 1
  8153                           
  8154                           ; BSR set to: 1
  8155  0131E0  0060  F71C  F1E4   	movff	_ipv4_handleNewPacket$3905,ipv4_handleNewPacket@payloadField+4
  8156  0131E6  0060  F720  F1E5   	movff	_ipv4_handleNewPacket$3905+1,ipv4_handleNewPacket@payloadField+5
  8157                           
  8158                           ; BSR set to: 1
  8159                           ;ipv4.c: 269: if (!ipv4_checkHeaderChecksum(&header)) {
  8160  0131EC  0EC9               	movlw	low ipv4_handleNewPacket@header
  8161  0131EE  6E25               	movwf	ipv4_checkHeaderChecksum@header,c
  8162  0131F0  0E01               	movlw	high ipv4_handleNewPacket@header
  8163  0131F2  6E26               	movwf	ipv4_checkHeaderChecksum@header+1,c
  8164  0131F4  ECF8  F0B6         	call	_ipv4_checkHeaderChecksum	;wreg free
  8165  0131F8  0900               	iorlw	0
  8166  0131FA  A4D8               	btfss	16344,2,c
  8167  0131FC  D008               	goto	l1187
  8168                           
  8169                           ;ipv4.c: 275: ethernetController_dropPacket(frame);
  8170  0131FE  0060  F3C0  F028   	movff	ipv4_handleNewPacket@frame,?_ethernetController_dropPacket
  8171  013204  0060  F3C4  F029   	movff	ipv4_handleNewPacket@frame+1,?_ethernetController_dropPacket+1
  8172  01320A  ECC1  F0B8         	call	_ethernetController_dropPacket	;wreg free
  8173  01320E                     l1187:
  8174                           
  8175                           ;ipv4.c: 276: }
  8176                           ;ipv4.c: 277: if (header.version != 4) {
  8177  01320E  0E04               	movlw	4
  8178  013210  0101               	movlb	1	; () banked
  8179  013212  19C9               	xorwf	ipv4_handleNewPacket@header& (0+255),w,b
  8180  013214  B4D8               	btfsc	16344,2,c
  8181  013216  D008               	goto	l1188
  8182                           
  8183                           ; BSR set to: 1
  8184                           ;ipv4.c: 278: ethernetController_dropPacket(frame);
  8185  013218  0060  F3C0  F028   	movff	ipv4_handleNewPacket@frame,?_ethernetController_dropPacket
  8186  01321E  0060  F3C4  F029   	movff	ipv4_handleNewPacket@frame+1,?_ethernetController_dropPacket+1
  8187  013224  ECC1  F0B8         	call	_ethernetController_dropPacket	;wreg free
  8188  013228                     l1188:
  8189                           
  8190                           ;ipv4.c: 284: }
  8191                           ;ipv4.c: 285: if (header.timeToLive == 0) {
  8192  013228  0101               	movlb	1	; () banked
  8193  01322A  51D4               	movf	(ipv4_handleNewPacket@header+11)& (0+255),w,b
  8194  01322C  A4D8               	btfss	16344,2,c
  8195  01322E  D008               	goto	l1189
  8196                           
  8197                           ; BSR set to: 1
  8198                           ;ipv4.c: 286: ethernetController_dropPacket(frame);
  8199  013230  0060  F3C0  F028   	movff	ipv4_handleNewPacket@frame,?_ethernetController_dropPacket
  8200  013236  0060  F3C4  F029   	movff	ipv4_handleNewPacket@frame+1,?_ethernetController_dropPacket+1
  8201  01323C  ECC1  F0B8         	call	_ethernetController_dropPacket	;wreg free
  8202  013240                     l1189:
  8203                           
  8204                           ;ipv4.c: 292: }
  8205                           ;ipv4.c: 293: if (header.totalLength == 0) {
  8206  013240  0101               	movlb	1	; () banked
  8207  013242  51CD               	movf	(ipv4_handleNewPacket@header+4)& (0+255),w,b
  8208  013244  11CE               	iorwf	(ipv4_handleNewPacket@header+5)& (0+255),w,b
  8209  013246  A4D8               	btfss	16344,2,c
  8210  013248  D037               	goto	l1191
  8211                           
  8212                           ; BSR set to: 1
  8213                           ;ipv4.c: 294: ethernetController_dropPacket(frame);
  8214  01324A  0060  F3C0  F028   	movff	ipv4_handleNewPacket@frame,?_ethernetController_dropPacket
  8215  013250  0060  F3C4  F029   	movff	ipv4_handleNewPacket@frame+1,?_ethernetController_dropPacket+1
  8216  013256  ECC1  F0B8         	call	_ethernetController_dropPacket	;wreg free
  8217                           
  8218                           ;ipv4.c: 300: }
  8219                           ;ipv4.c: 311: switch (header.protocol) {
  8220  01325A  D02E               	goto	l1191
  8221  01325C                     
  8222                           ;ipv4.c: 320: icmp_handleNewPacket(header, payloadField);
  8223  01325C  EE20  F1C9         	lfsr	2,ipv4_handleNewPacket@header
  8224  013260  EE00  F0CE         	lfsr	0,icmp_handleNewPacket@ipHeader
  8225  013264  0E16               	movlw	22
  8226  013266                     u14321:
  8227  013266  006F FF6F FFEB     	movff	16347,16363
  8228  01326C  06E8               	decf	16360,f,c
  8229  01326E  E2FB               	bc	u14321
  8230  013270  EE20  F1E0         	lfsr	2,ipv4_handleNewPacket@payloadField
  8231  013274  EE00  F0E5         	lfsr	0,icmp_handleNewPacket@ipPayload
  8232  013278  0E08               	movlw	8
  8233  01327A                     u14331:
  8234  01327A  006F FF6F FFEB     	movff	16347,16363
  8235  013280  06E8               	decf	16360,f,c
  8236  013282  E2FB               	bc	u14331
  8237  013284  EC9B  F0A9         	call	_icmp_handleNewPacket	;wreg free
  8238                           
  8239                           ;ipv4.c: 321: break;
  8240  013288  D020               	goto	l1193
  8241  01328A                     
  8242                           ;ipv4.c: 330: tcp_handleNewPacket(header, payloadField);
  8243  01328A  EE20  F1C9         	lfsr	2,ipv4_handleNewPacket@header
  8244  01328E  EE00  F0B0         	lfsr	0,tcp_handleNewPacket@ipHeader
  8245  013292  0E16               	movlw	22
  8246  013294                     u14341:
  8247  013294  006F FF6F FFEB     	movff	16347,16363
  8248  01329A  06E8               	decf	16360,f,c
  8249  01329C  E2FB               	bc	u14341
  8250  01329E  EE20  F1E0         	lfsr	2,ipv4_handleNewPacket@payloadField
  8251  0132A2  EE00  F0C7         	lfsr	0,tcp_handleNewPacket@ipPayload
  8252  0132A6  0E08               	movlw	8
  8253  0132A8                     u14351:
  8254  0132A8  006F FF6F FFEB     	movff	16347,16363
  8255  0132AE  06E8               	decf	16360,f,c
  8256  0132B0  E2FB               	bc	u14351
  8257  0132B2  EC13  F09C         	call	_tcp_handleNewPacket	;wreg free
  8258                           
  8259                           ;ipv4.c: 349: }
  8260                           
  8261                           ;ipv4.c: 348: break;
  8262                           
  8263                           ;ipv4.c: 341: default:
  8264                           
  8265                           ;ipv4.c: 340: break;
  8266                           
  8267                           ;ipv4.c: 332: case IPv4_PROTOCOL_UDP:
  8268                           
  8269                           ;ipv4.c: 331: break;
  8270  0132B6  D009               	goto	l1193
  8271  0132B8                     l1191:
  8272  0132B8  0101               	movlb	1	; () banked
  8273  0132BA  51D5               	movf	(ipv4_handleNewPacket@header+12)& (0+255),w,b
  8274                           
  8275                           ; Switch size 1, requested type "space"
  8276                           ; Number of cases is 3, Range of values is 1 to 17
  8277                           ; switch strategies available:
  8278                           ; Name         Instructions Cycles
  8279                           ; simple_byte           10     6 (average)
  8280                           ;	Chosen strategy is simple_byte
  8281  0132BC  0A01               	xorlw	1	; case 1
  8282  0132BE  B4D8               	btfsc	16344,2,c
  8283  0132C0  D7CD               	goto	l1192
  8284  0132C2  0A07               	xorlw	7	; case 6
  8285  0132C4  B4D8               	btfsc	16344,2,c
  8286  0132C6  D7E1               	goto	l1194
  8287  0132C8  0A17               	xorlw	23	; case 17
  8288  0132CA                     l1193:
  8289                           
  8290                           ;ipv4.c: 350: ethernetController_dropPacket(frame);
  8291                           
  8292                           ; BSR set to: 1
  8293  0132CA  0060  F3C0  F028   	movff	ipv4_handleNewPacket@frame,?_ethernetController_dropPacket
  8294  0132D0  0060  F3C4  F029   	movff	ipv4_handleNewPacket@frame+1,?_ethernetController_dropPacket+1
  8295  0132D6  ECC1  F0B8         	call	_ethernetController_dropPacket	;wreg free
  8296  0132DA  0012               	return		;funcret
  8297  0132DC                     __end_of_ipv4_handleNewPacket:
  8298                           	opt stack 0
  8299                           
  8300 ;; *************** function _tcp_handleNewPacket *****************
  8301 ;; Defined at:
  8302 ;;		line 31 in file "src/stack/protocols/tcp.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;  ipHeader       23   80[BANK0 ] struct ipv4_header
  8305 ;;  ipPayload       9  103[BANK0 ] struct memoryField
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;  i               1  114[BANK0 ] unsigned char 
  8308 ;;  tcpHeader      21  115[BANK0 ] struct tcp_header
  8309 ;; Return value:  Size  Location     Type
  8310 ;;                  3   80[BANK0 ] struct error
  8311 ;; Registers used:
  8312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8313 ;; Tracked objects:
  8314 ;;		On entry : 0/0
  8315 ;;		On exit  : 0/0
  8316 ;;		Unchanged: 0/0
  8317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8318 ;;      Params:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8319 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8320 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8321 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8322 ;;Total ram usage:       56 bytes
  8323 ;; Hardware stack levels used:    1
  8324 ;; Hardware stack levels required when called:   12
  8325 ;; This function calls:
  8326 ;;		_UARTTransmitText
  8327 ;;		_intToString
  8328 ;;		_tcp_parseHeader
  8329 ;;		_tcp_stateMachine
  8330 ;; This function is called by:
  8331 ;;		_ipv4_handleNewPacket
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           	psect	text24
  8336  013826                     __ptext24:
  8337                           	opt stack 0
  8338  013826                     _tcp_handleNewPacket:
  8339                           	opt stack 15
  8340                           
  8341                           ;tcp.c: 32: tcp_header_t tcpHeader;
  8342                           ;tcp.c: 33: tcp_parseHeader(ipPayload, &tcpHeader);
  8343                           
  8344                           ;incstack = 0
  8345  013826  EE20  F0C7         	lfsr	2,tcp_handleNewPacket@ipPayload
  8346  01382A  EE00  F02A         	lfsr	0,tcp_parseHeader@ipPayload
  8347  01382E  0E08               	movlw	8
  8348  013830                     u13881:
  8349  013830  006F FF6F FFEB     	movff	16347,16363
  8350  013836  06E8               	decf	16360,f,c
  8351  013838  E2FB               	bc	u13881
  8352  01383A  0ED3               	movlw	low tcp_handleNewPacket@tcpHeader
  8353  01383C  6E33               	movwf	tcp_parseHeader@header,c
  8354  01383E  0E00               	movlw	high tcp_handleNewPacket@tcpHeader
  8355  013840  6E34               	movwf	tcp_parseHeader@header+1,c
  8356  013842  EC00  F080         	call	_tcp_parseHeader	;wreg free
  8357                           
  8358                           ;tcp.c: 35: UARTTransmitText("[");
  8359  013846  0EFB               	movlw	low (STR_11+1)
  8360  013848  0100               	movlb	0	; () banked
  8361  01384A  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  8362  01384C  0EFF               	movlw	high (STR_11+1)
  8363  01384E  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8364  013850  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8365                           
  8366                           ;tcp.c: 36: UARTTransmitText(intToString(tcpHeader.srcPort, 10));
  8367  013854  0060  F34C  F032   	movff	tcp_handleNewPacket@tcpHeader,intToString@val
  8368  01385A  0060  F350  F033   	movff	tcp_handleNewPacket@tcpHeader+1,intToString@val+1
  8369  013860  6A34               	clrf	intToString@val+2,c
  8370  013862  6A35               	clrf	intToString@val+3,c
  8371  013864  0E0A               	movlw	10
  8372  013866  6E36               	movwf	intToString@b,c
  8373  013868  ECA5  F0B8         	call	_intToString	;wreg free
  8374  01386C  0060  F0C8  F06D   	movff	?_intToString,UARTTransmitText@str
  8375  013872  0060  F0CC  F06E   	movff	?_intToString+1,UARTTransmitText@str+1
  8376  013878  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8377                           
  8378                           ;tcp.c: 37: UARTTransmitText(" -> ");
  8379  01387C  0ED0               	movlw	low STR_20
  8380  01387E  0100               	movlb	0	; () banked
  8381  013880  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  8382  013882  0EFF               	movlw	high STR_20
  8383  013884  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8384  013886  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8385                           
  8386                           ;tcp.c: 38: UARTTransmitText(intToString(tcpHeader.dstPort, 10));
  8387  01388A  0060  F354  F032   	movff	tcp_handleNewPacket@tcpHeader+2,intToString@val
  8388  013890  0060  F358  F033   	movff	tcp_handleNewPacket@tcpHeader+3,intToString@val+1
  8389  013896  6A34               	clrf	intToString@val+2,c
  8390  013898  6A35               	clrf	intToString@val+3,c
  8391  01389A  0E0A               	movlw	10
  8392  01389C  6E36               	movwf	intToString@b,c
  8393  01389E  ECA5  F0B8         	call	_intToString	;wreg free
  8394  0138A2  0060  F0C8  F06D   	movff	?_intToString,UARTTransmitText@str
  8395  0138A8  0060  F0CC  F06E   	movff	?_intToString+1,UARTTransmitText@str+1
  8396  0138AE  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8397                           
  8398                           ;tcp.c: 39: UARTTransmitText("][Seq=");
  8399  0138B2  0E85               	movlw	low STR_113
  8400  0138B4  0100               	movlb	0	; () banked
  8401  0138B6  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  8402  0138B8  0EFF               	movlw	high STR_113
  8403  0138BA  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8404  0138BC  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8405                           
  8406                           ;tcp.c: 40: UARTTransmitText(intToString(tcpHeader.seqNumber, 10));
  8407  0138C0  0060  F35C  F032   	movff	tcp_handleNewPacket@tcpHeader+4,intToString@val
  8408  0138C6  0060  F360  F033   	movff	tcp_handleNewPacket@tcpHeader+5,intToString@val+1
  8409  0138CC  0060  F364  F034   	movff	tcp_handleNewPacket@tcpHeader+6,intToString@val+2
  8410  0138D2  0060  F368  F035   	movff	tcp_handleNewPacket@tcpHeader+7,intToString@val+3
  8411  0138D8  0E0A               	movlw	10
  8412  0138DA  6E36               	movwf	intToString@b,c
  8413  0138DC  ECA5  F0B8         	call	_intToString	;wreg free
  8414  0138E0  0060  F0C8  F06D   	movff	?_intToString,UARTTransmitText@str
  8415  0138E6  0060  F0CC  F06E   	movff	?_intToString+1,UARTTransmitText@str+1
  8416  0138EC  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8417                           
  8418                           ;tcp.c: 41: UARTTransmitText("]");
  8419  0138F0  0E90               	movlw	low (STR_117+4)
  8420  0138F2  0100               	movlb	0	; () banked
  8421  0138F4  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  8422  0138F6  0EFF               	movlw	high (STR_117+4)
  8423  0138F8  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8424  0138FA  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8425                           
  8426                           ;tcp.c: 42: if (tcpHeader.flags.NS)
  8427  0138FE  0100               	movlb	0	; () banked
  8428  013900  A1E0               	btfss	(tcp_handleNewPacket@tcpHeader+13)& (0+255),0,b
  8429  013902  D006               	goto	l1362
  8430                           
  8431                           ; BSR set to: 0
  8432                           ;tcp.c: 43: UARTTransmitText("[NS]");
  8433  013904  0EBC               	movlw	low STR_115
  8434  013906  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  8435  013908  0EFF               	movlw	high STR_115
  8436  01390A  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8437  01390C  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8438  013910                     l1362:
  8439                           
  8440                           ;tcp.c: 44: if (tcpHeader.flags.CWR)
  8441  013910  0100               	movlb	0	; () banked
  8442  013912  A3E0               	btfss	(tcp_handleNewPacket@tcpHeader+13)& (0+255),1,b
  8443  013914  D006               	goto	l1363
  8444                           
  8445                           ; BSR set to: 0
  8446                           ;tcp.c: 45: UARTTransmitText("[CWR]");
  8447  013916  0EB0               	movlw	low STR_116
  8448  013918  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  8449  01391A  0EFF               	movlw	high STR_116
  8450  01391C  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8451  01391E  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8452  013922                     l1363:
  8453                           
  8454                           ;tcp.c: 46: if (tcpHeader.flags.ECE)
  8455  013922  0100               	movlb	0	; () banked
  8456  013924  A5E0               	btfss	(tcp_handleNewPacket@tcpHeader+13)& (0+255),2,b
  8457  013926  D006               	goto	l1364
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;tcp.c: 47: UARTTransmitText("[ECE]");
  8461  013928  0E8C               	movlw	low STR_117
  8462  01392A  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  8463  01392C  0EFF               	movlw	high STR_117
  8464  01392E  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8465  013930  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8466  013934                     l1364:
  8467                           
  8468                           ;tcp.c: 48: if (tcpHeader.flags.URG)
  8469  013934  0100               	movlb	0	; () banked
  8470  013936  A7E0               	btfss	(tcp_handleNewPacket@tcpHeader+13)& (0+255),3,b
  8471  013938  D006               	goto	l1365
  8472                           
  8473                           ; BSR set to: 0
  8474                           ;tcp.c: 49: UARTTransmitText("[URG]");
  8475  01393A  0E92               	movlw	low STR_118
  8476  01393C  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  8477  01393E  0EFF               	movlw	high STR_118
  8478  013940  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8479  013942  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8480  013946                     l1365:
  8481                           
  8482                           ;tcp.c: 50: if (tcpHeader.flags.ACK)
  8483  013946  0100               	movlb	0	; () banked
  8484  013948  A9E0               	btfss	(tcp_handleNewPacket@tcpHeader+13)& (0+255),4,b
  8485  01394A  D006               	goto	l1366
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;tcp.c: 51: UARTTransmitText("[ACK]");
  8489  01394C  0E9E               	movlw	low STR_119
  8490  01394E  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  8491  013950  0EFF               	movlw	high STR_119
  8492  013952  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8493  013954  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8494  013958                     l1366:
  8495                           
  8496                           ;tcp.c: 52: if (tcpHeader.flags.PSH)
  8497  013958  0100               	movlb	0	; () banked
  8498  01395A  ABE0               	btfss	(tcp_handleNewPacket@tcpHeader+13)& (0+255),5,b
  8499  01395C  D006               	goto	l1367
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;tcp.c: 53: UARTTransmitText("[PSH]");
  8503  01395E  0E98               	movlw	low STR_120
  8504  013960  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  8505  013962  0EFF               	movlw	high STR_120
  8506  013964  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8507  013966  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8508  01396A                     l1367:
  8509                           
  8510                           ;tcp.c: 54: if (tcpHeader.flags.RST)
  8511  01396A  0100               	movlb	0	; () banked
  8512  01396C  ADE0               	btfss	(tcp_handleNewPacket@tcpHeader+13)& (0+255),6,b
  8513  01396E  D006               	goto	l1368
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;tcp.c: 55: UARTTransmitText("[RST]");
  8517  013970  0EB6               	movlw	low STR_121
  8518  013972  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  8519  013974  0EFF               	movlw	high STR_121
  8520  013976  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8521  013978  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8522  01397C                     l1368:
  8523                           
  8524                           ;tcp.c: 56: if (tcpHeader.flags.SYN)
  8525  01397C  0100               	movlb	0	; () banked
  8526  01397E  AFE0               	btfss	(tcp_handleNewPacket@tcpHeader+13)& (0+255),7,b
  8527  013980  D006               	goto	l1369
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;tcp.c: 57: UARTTransmitText("[SYN]");
  8531  013982  0EAA               	movlw	low STR_122
  8532  013984  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  8533  013986  0EFF               	movlw	high STR_122
  8534  013988  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8535  01398A  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8536  01398E                     l1369:
  8537                           
  8538                           ;tcp.c: 58: if (tcpHeader.flags.FIN)
  8539  01398E  0100               	movlb	0	; () banked
  8540  013990  A1E1               	btfss	(tcp_handleNewPacket@tcpHeader+14)& (0+255),0,b
  8541  013992  D006               	goto	l1370
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;tcp.c: 59: UARTTransmitText("[FIN]");
  8545  013994  0EA4               	movlw	low STR_123
  8546  013996  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  8547  013998  0EFF               	movlw	high STR_123
  8548  01399A  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8549  01399C  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8550  0139A0                     l1370:
  8551                           
  8552                           ;tcp.c: 61: for (uint8_t i = 0; i < 12; i++) {
  8553  0139A0  0E00               	movlw	0
  8554  0139A2  0100               	movlb	0	; () banked
  8555  0139A4  6FD2               	movwf	tcp_handleNewPacket@i& (0+255),b
  8556  0139A6                     l11278:
  8557                           
  8558                           ; BSR set to: 0
  8559  0139A6  0E0B               	movlw	11
  8560  0139A8  65D2               	cpfsgt	tcp_handleNewPacket@i& (0+255),b
  8561  0139AA  D001               	goto	l1371
  8562  0139AC  0012               	return	
  8563  0139AE                     l1371:
  8564                           
  8565                           ; BSR set to: 0
  8566                           ;tcp.c: 62: if (tcpHeader.dstPort == tcpListeners[i].srcPort &&
  8567                           ;tcp.c: 63: tcpListeners[i].state == TCP_STATE_LISTEN) {
  8568                           
  8569                           ; BSR set to: 0
  8570  0139AE  51D2               	movf	tcp_handleNewPacket@i& (0+255),w,b
  8571  0139B0  0D11               	mullw	17
  8572  0139B2  0E08               	movlw	8
  8573  0139B4  26F3               	addwf	16371,f,c
  8574  0139B6  0E00               	movlw	0
  8575  0139B8  22F4               	addwfc	16372,f,c
  8576  0139BA  0E00               	movlw	low _tcpListeners
  8577  0139BC  24F3               	addwf	16371,w,c
  8578  0139BE  6ED9               	movwf	16345,c
  8579  0139C0  0E05               	movlw	high _tcpListeners
  8580  0139C2  20F4               	addwfc	16372,w,c
  8581  0139C4  6EDA               	movwf	16346,c
  8582  0139C6  50DE               	movf	16350,w,c
  8583  0139C8  19D5               	xorwf	(tcp_handleNewPacket@tcpHeader+2)& (0+255),w,b
  8584  0139CA  E155               	bnz	l11294
  8585  0139CC  50DE               	movf	16350,w,c
  8586  0139CE  19D6               	xorwf	(tcp_handleNewPacket@tcpHeader+3)& (0+255),w,b
  8587  0139D0  A4D8               	btfss	16344,2,c
  8588  0139D2  D051               	goto	l1373
  8589                           
  8590                           ; BSR set to: 0
  8591  0139D4  51D2               	movf	tcp_handleNewPacket@i& (0+255),w,b
  8592  0139D6  0D11               	mullw	17
  8593  0139D8  0E10               	movlw	16
  8594  0139DA  26F3               	addwf	16371,f,c
  8595  0139DC  0E00               	movlw	0
  8596  0139DE  22F4               	addwfc	16372,f,c
  8597  0139E0  0E00               	movlw	low _tcpListeners
  8598  0139E2  24F3               	addwf	16371,w,c
  8599  0139E4  6ED9               	movwf	16345,c
  8600  0139E6  0E05               	movlw	high _tcpListeners
  8601  0139E8  20F4               	addwfc	16372,w,c
  8602  0139EA  6EDA               	movwf	16346,c
  8603  0139EC  50DF               	movf	16351,w,c
  8604  0139EE  A4D8               	btfss	16344,2,c
  8605  0139F0  D042               	goto	l1373
  8606                           
  8607                           ; BSR set to: 0
  8608                           ;tcp.c: 64: UARTTransmitText("[Am listening on this port]");
  8609  0139F2  0E4E               	movlw	low STR_124
  8610  0139F4  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  8611  0139F6  0EFD               	movlw	high STR_124
  8612  0139F8  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8613  0139FA  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8614                           
  8615                           ;tcp.c: 65: tcpListeners[i].ipClient = ipHeader.source;
  8616  0139FE  EE20  F0BF         	lfsr	2,tcp_handleNewPacket@ipHeader+15
  8617  013A02  0100               	movlb	0	; () banked
  8618  013A04  51D2               	movf	tcp_handleNewPacket@i& (0+255),w,b
  8619  013A06  0D11               	mullw	17
  8620  013A08  0E04               	movlw	4
  8621  013A0A  26F3               	addwf	16371,f,c
  8622  013A0C  0E00               	movlw	0
  8623  013A0E  22F4               	addwfc	16372,f,c
  8624  013A10  0E00               	movlw	low _tcpListeners
  8625  013A12  24F3               	addwf	16371,w,c
  8626  013A14  6EE1               	movwf	16353,c
  8627  013A16  0E05               	movlw	high _tcpListeners
  8628  013A18  20F4               	addwfc	16372,w,c
  8629  013A1A  6EE2               	movwf	16354,c
  8630  013A1C  006F FF7B FFE6     	movff	16350,16358
  8631  013A22  006F FF7B FFE6     	movff	16350,16358
  8632  013A28  006F FF7B FFE6     	movff	16350,16358
  8633  013A2E  006F FF7B FFE6     	movff	16350,16358
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;tcp.c: 66: tcpListeners[i].dstPort = tcpHeader.srcPort;
  8637  013A34  51D2               	movf	tcp_handleNewPacket@i& (0+255),w,b
  8638  013A36  0D11               	mullw	17
  8639  013A38  0E0A               	movlw	10
  8640  013A3A  26F3               	addwf	16371,f,c
  8641  013A3C  0E00               	movlw	0
  8642  013A3E  22F4               	addwfc	16372,f,c
  8643  013A40  0E00               	movlw	low _tcpListeners
  8644  013A42  24F3               	addwf	16371,w,c
  8645  013A44  6ED9               	movwf	16345,c
  8646  013A46  0E05               	movlw	high _tcpListeners
  8647  013A48  20F4               	addwfc	16372,w,c
  8648  013A4A  6EDA               	movwf	16346,c
  8649  013A4C  0060  F34F  FFDE   	movff	tcp_handleNewPacket@tcpHeader,16350
  8650  013A52  0060  F353  FFDD   	movff	tcp_handleNewPacket@tcpHeader+1,16349
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;tcp.c: 67: tcp_stateMachine(&tcpListeners[i], &tcpHeader);
  8654  013A58  51D2               	movf	tcp_handleNewPacket@i& (0+255),w,b
  8655  013A5A  0D11               	mullw	17
  8656  013A5C  0E00               	movlw	low _tcpListeners
  8657  013A5E  24F3               	addwf	16371,w,c
  8658  013A60  6FAC               	movwf	tcp_stateMachine@connection& (0+255),b
  8659  013A62  0E05               	movlw	high _tcpListeners
  8660  013A64  20F4               	addwfc	16372,w,c
  8661  013A66  6FAD               	movwf	(tcp_stateMachine@connection+1)& (0+255),b
  8662  013A68  0ED3               	movlw	low tcp_handleNewPacket@tcpHeader
  8663  013A6A  6FAE               	movwf	tcp_stateMachine@newHeader& (0+255),b
  8664  013A6C  0E00               	movlw	high tcp_handleNewPacket@tcpHeader
  8665  013A6E  6FAF               	movwf	(tcp_stateMachine@newHeader+1)& (0+255),b
  8666  013A70  ECA7  F0AE         	call	_tcp_stateMachine	;wreg free
  8667                           
  8668                           ;tcp.c: 68: break;
  8669  013A74  0012               	return	
  8670  013A76                     l1373:
  8671  013A76                     l11294:
  8672  013A76  0100               	movlb	0	; () banked
  8673  013A78  2BD2               	incf	tcp_handleNewPacket@i& (0+255),f,b
  8674  013A7A  D795               	goto	l11278
  8675  013A7C                     __end_of_tcp_handleNewPacket:
  8676                           	opt stack 0
  8677                           
  8678 ;; *************** function _tcp_stateMachine *****************
  8679 ;; Defined at:
  8680 ;;		line 110 in file "src/stack/protocols/tcp.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;  connection      2   76[BANK0 ] PTR struct tcp_connectio
  8683 ;;		 -> tcpListeners(204), 
  8684 ;;  newHeader       2   78[BANK0 ] PTR struct tcp_header
  8685 ;;		 -> tcp_handleNewPacket@tcpHeader(21), 
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;		None
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  3   76[BANK0 ] struct error
  8690 ;; Registers used:
  8691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/0
  8694 ;;		On exit  : 0/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8697 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8700 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8701 ;;Total ram usage:        4 bytes
  8702 ;; Hardware stack levels used:    1
  8703 ;; Hardware stack levels required when called:   11
  8704 ;; This function calls:
  8705 ;;		_UARTTransmitText
  8706 ;;		_tcp_sendSYNACK
  8707 ;; This function is called by:
  8708 ;;		_tcp_handleNewPacket
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712                           	psect	text25
  8713  015D4E                     __ptext25:
  8714                           	opt stack 0
  8715  015D4E                     _tcp_stateMachine:
  8716                           	opt stack 15
  8717                           
  8718                           ;tcp.c: 111: switch (connection->state) {
  8719                           
  8720                           ;incstack = 0
  8721  015D4E  D033               	goto	l1380
  8722  015D50                     
  8723                           ;tcp.c: 127: if (newHeader->flags.SYN) {
  8724  015D50  0100               	movlb	0	; () banked
  8725  015D52  EE20 F00D          	lfsr	2,13
  8726  015D56  51AE               	movf	tcp_stateMachine@newHeader& (0+255),w,b
  8727  015D58  26D9               	addwf	16345,f,c
  8728  015D5A  51AF               	movf	(tcp_stateMachine@newHeader+1)& (0+255),w,b
  8729  015D5C  22DA               	addwfc	16346,f,c
  8730  015D5E  AEDF               	btfss	16351,7,c
  8731  015D60  0012               	return	
  8732                           
  8733                           ; BSR set to: 0
  8734                           ;tcp.c: 128: connection->state = TCP_STATE_SYN_RECEIVED;
  8735  015D62  EE20 F010          	lfsr	2,16
  8736  015D66  51AC               	movf	tcp_stateMachine@connection& (0+255),w,b
  8737  015D68  26D9               	addwf	16345,f,c
  8738  015D6A  51AD               	movf	(tcp_stateMachine@connection+1)& (0+255),w,b
  8739  015D6C  22DA               	addwfc	16346,f,c
  8740  015D6E  0E02               	movlw	2
  8741  015D70  6EDF               	movwf	16351,c
  8742                           
  8743                           ; BSR set to: 0
  8744                           ;tcp.c: 129: UARTTransmitText("[SYN Received]");
  8745  015D72  0E90               	movlw	low STR_125
  8746  015D74  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  8747  015D76  0EFE               	movlw	high STR_125
  8748  015D78  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8749  015D7A  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  8750                           
  8751                           ;tcp.c: 130: tcp_sendSYNACK(connection, newHeader->seqNumber);
  8752  015D7E  0060  F2B0  F0A2   	movff	tcp_stateMachine@connection,tcp_sendSYNACK@connection
  8753  015D84  0060  F2B4  F0A3   	movff	tcp_stateMachine@connection+1,tcp_sendSYNACK@connection+1
  8754  015D8A  0100               	movlb	0	; () banked
  8755  015D8C  EE20 F004          	lfsr	2,4
  8756  015D90  51AE               	movf	tcp_stateMachine@newHeader& (0+255),w,b
  8757  015D92  26D9               	addwf	16345,f,c
  8758  015D94  51AF               	movf	(tcp_stateMachine@newHeader+1)& (0+255),w,b
  8759  015D96  22DA               	addwfc	16346,f,c
  8760  015D98  006F FF78  F0A4    	movff	16350,tcp_sendSYNACK@seq
  8761  015D9E  006F FF78  F0A5    	movff	16350,tcp_sendSYNACK@seq+1
  8762  015DA4  006F FF78  F0A6    	movff	16350,tcp_sendSYNACK@seq+2
  8763  015DAA  006F FF78  F0A7    	movff	16350,tcp_sendSYNACK@seq+3
  8764  015DB0  EC88  F091         	call	_tcp_sendSYNACK	;wreg free
  8765                           
  8766                           ;tcp.c: 139: }
  8767                           
  8768                           ;tcp.c: 138: break;
  8769                           
  8770                           ;tcp.c: 137: case TCP_STATE_TIME_WAIT:
  8771                           
  8772                           ;tcp.c: 136: break;
  8773                           
  8774                           ;tcp.c: 135: case TCP_STATE_SYN_SENT:
  8775                           
  8776                           ;tcp.c: 134: break;
  8777                           
  8778                           ;tcp.c: 133: case TCP_STATE_SYN_RECEIVED:
  8779                           
  8780                           ;tcp.c: 131: }
  8781                           ;tcp.c: 132: break;
  8782  015DB4  0012               	return	
  8783  015DB6                     l1380:
  8784  015DB6  0100               	movlb	0	; () banked
  8785  015DB8  EE20 F010          	lfsr	2,16
  8786  015DBC  51AC               	movf	tcp_stateMachine@connection& (0+255),w,b
  8787  015DBE  26D9               	addwf	16345,f,c
  8788  015DC0  51AD               	movf	(tcp_stateMachine@connection+1)& (0+255),w,b
  8789  015DC2  22DA               	addwfc	16346,f,c
  8790  015DC4  50DF               	movf	16351,w,c
  8791                           
  8792                           ; Switch size 1, requested type "space"
  8793                           ; Number of cases is 11, Range of values is 0 to 10
  8794                           ; switch strategies available:
  8795                           ; Name         Instructions Cycles
  8796                           ; simple_byte           34    18 (average)
  8797                           ;	Chosen strategy is simple_byte
  8798  015DC6  0A00               	xorlw	0	; case 0
  8799  015DC8  B4D8               	btfsc	16344,2,c
  8800  015DCA  D7C2               	goto	l1389
  8801  015DCC  0A01               	xorlw	1	; case 1
  8802  015DCE  B4D8               	btfsc	16344,2,c
  8803  015DD0  0012               	return	
  8804  015DD2  0A03               	xorlw	3	; case 2
  8805  015DD4  B4D8               	btfsc	16344,2,c
  8806  015DD6  0012               	return	
  8807  015DD8  0A01               	xorlw	1	; case 3
  8808  015DDA  B4D8               	btfsc	16344,2,c
  8809  015DDC  0012               	return	
  8810  015DDE  0A07               	xorlw	7	; case 4
  8811  015DE0  B4D8               	btfsc	16344,2,c
  8812  015DE2  0012               	return	
  8813  015DE4  0A01               	xorlw	1	; case 5
  8814  015DE6  B4D8               	btfsc	16344,2,c
  8815  015DE8  0012               	return	
  8816  015DEA  0A03               	xorlw	3	; case 6
  8817  015DEC  B4D8               	btfsc	16344,2,c
  8818  015DEE  0012               	return	
  8819  015DF0  0A01               	xorlw	1	; case 7
  8820  015DF2  B4D8               	btfsc	16344,2,c
  8821  015DF4  0012               	return	
  8822  015DF6  0A0F               	xorlw	15	; case 8
  8823  015DF8  B4D8               	btfsc	16344,2,c
  8824  015DFA  0012               	return	
  8825  015DFC  0A01               	xorlw	1	; case 9
  8826  015DFE  B4D8               	btfsc	16344,2,c
  8827  015E00  0012               	return	
  8828  015E02  0A03               	xorlw	3	; case 10
  8829  015E04  0012               	return	
  8830  015E06                     __end_of_tcp_stateMachine:
  8831                           	opt stack 0
  8832                           
  8833 ;; *************** function _tcp_sendSYNACK *****************
  8834 ;; Defined at:
  8835 ;;		line 156 in file "src/stack/protocols/tcp.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;  connection      2   66[BANK0 ] PTR struct tcp_connectio
  8838 ;;		 -> tcpListeners(204), 
  8839 ;;  seq             4   68[BANK0 ] unsigned long 
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;  i               2  110[BANK1 ] unsigned int 
  8842 ;;  ipPacket       66  112[BANK1 ] struct ipv4_packet
  8843 ;;  headerBuf      64   32[BANK1 ] unsigned char [64]
  8844 ;;  ipHeaderBuf    32    0[BANK1 ] unsigned char [32]
  8845 ;;  tcpHeader      21  178[BANK1 ] struct tcp_header
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  3   66[BANK0 ] struct error
  8848 ;; Registers used:
  8849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8855 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8856 ;;      Locals:         0       0     199       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8857 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8858 ;;      Totals:         0      10     199       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8859 ;;Total ram usage:      209 bytes
  8860 ;; Hardware stack levels used:    1
  8861 ;; Hardware stack levels required when called:   10
  8862 ;; This function calls:
  8863 ;;		_UARTTransmitText
  8864 ;;		_intToString
  8865 ;;		_ipv4_calculateHeaderChecksum
  8866 ;;		_ipv4_getIPSourceAddress
  8867 ;;		_ipv4_streamToTransmissionBuffer
  8868 ;;		_ipv4_txFrameRequest
  8869 ;;		_ipv4_writeHeaderIntoBuffer
  8870 ;;		_tcp_calculateHeaderChecksum
  8871 ;; This function is called by:
  8872 ;;		_tcp_stateMachine
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           	psect	text26
  8877  012310                     __ptext26:
  8878                           	opt stack 0
  8879  012310                     _tcp_sendSYNACK:
  8880                           	opt stack 15
  8881                           
  8882                           ;tcp.c: 157: tcp_header_t tcpHeader;
  8883                           ;tcp.c: 158: uint8_t headerBuf[64];
  8884                           ;tcp.c: 159: uint8_t ipHeaderBuf[32];
  8885                           ;tcp.c: 161: ipv4_packet_t ipPacket;
  8886                           ;tcp.c: 162: ipPacket.ipv4Header.headerLength = 5;
  8887                           
  8888                           ;incstack = 0
  8889  012310  0E05               	movlw	5
  8890  012312  0101               	movlb	1	; () banked
  8891  012314  6F71               	movwf	(tcp_sendSYNACK@ipPacket+1)& (0+255),b
  8892                           
  8893                           ;tcp.c: 163: ipPacket.ipv4Header.dscp = 0x00;
  8894  012316  0E00               	movlw	0
  8895  012318  6F72               	movwf	(tcp_sendSYNACK@ipPacket+2)& (0+255),b
  8896                           
  8897                           ;tcp.c: 164: ipPacket.ipv4Header.ecn = 0x00;
  8898  01231A  0E00               	movlw	0
  8899  01231C  6F73               	movwf	(tcp_sendSYNACK@ipPacket+3)& (0+255),b
  8900                           
  8901                           ;tcp.c: 165: ipPacket.ipv4Header.flags = 0x00;
  8902  01231E  0E00               	movlw	0
  8903  012320  6F78               	movwf	(tcp_sendSYNACK@ipPacket+8)& (0+255),b
  8904                           
  8905                           ;tcp.c: 166: ipPacket.ipv4Header.fragmentOffset = 0x0000;
  8906  012322  0E00               	movlw	0
  8907  012324  6F7A               	movwf	(tcp_sendSYNACK@ipPacket+10)& (0+255),b
  8908  012326  0E00               	movlw	0
  8909  012328  6F79               	movwf	(tcp_sendSYNACK@ipPacket+9)& (0+255),b
  8910                           
  8911                           ;tcp.c: 167: ipPacket.ipv4Header.protocol = IPv4_PROTOCOL_TCP;
  8912  01232A  0E06               	movlw	6
  8913  01232C  6F7C               	movwf	(tcp_sendSYNACK@ipPacket+12)& (0+255),b
  8914                           
  8915                           ; BSR set to: 1
  8916                           ;tcp.c: 168: ipPacket.ipv4Header.destination = connection->ipClient;
  8917  01232E  0100               	movlb	0	; () banked
  8918  012330  EE20 F004          	lfsr	2,4
  8919  012334  51A2               	movf	tcp_sendSYNACK@connection& (0+255),w,b
  8920  012336  26D9               	addwf	16345,f,c
  8921  012338  51A3               	movf	(tcp_sendSYNACK@connection+1)& (0+255),w,b
  8922  01233A  22DA               	addwfc	16346,f,c
  8923  01233C  006F FF78  F183    	movff	16350,tcp_sendSYNACK@ipPacket+19
  8924  012342  006F FF78  F184    	movff	16350,tcp_sendSYNACK@ipPacket+20
  8925  012348  006F FF78  F185    	movff	16350,tcp_sendSYNACK@ipPacket+21
  8926  01234E  006F FF78  F186    	movff	16350,tcp_sendSYNACK@ipPacket+22
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;tcp.c: 169: ipPacket.ipv4Header.source = ipv4_getIPSourceAddress();
  8930  012354  ECFB  F0BA         	call	_ipv4_getIPSourceAddress	;wreg free
  8931  012358  0060  F058  F17F   	movff	?_ipv4_getIPSourceAddress,tcp_sendSYNACK@ipPacket+15
  8932  01235E  0060  F05C  F180   	movff	?_ipv4_getIPSourceAddress+1,tcp_sendSYNACK@ipPacket+16
  8933  012364  0060  F060  F181   	movff	?_ipv4_getIPSourceAddress+2,tcp_sendSYNACK@ipPacket+17
  8934  01236A  0060  F064  F182   	movff	?_ipv4_getIPSourceAddress+3,tcp_sendSYNACK@ipPacket+18
  8935                           
  8936                           ;tcp.c: 170: ipPacket.ipv4Header.totalLength = 40;
  8937  012370  0E00               	movlw	0
  8938  012372  0101               	movlb	1	; () banked
  8939  012374  6F75               	movwf	(tcp_sendSYNACK@ipPacket+5)& (0+255),b
  8940  012376  0E28               	movlw	40
  8941  012378  6F74               	movwf	(tcp_sendSYNACK@ipPacket+4)& (0+255),b
  8942                           
  8943                           ; BSR set to: 1
  8944                           ;tcp.c: 171: ipPacket.ipv4Header.timeToLive = 255;
  8945  01237A  697B               	setf	(tcp_sendSYNACK@ipPacket+11)& (0+255),b
  8946                           
  8947                           ; BSR set to: 1
  8948                           ;tcp.c: 172: ipPacket.ipv4Header.version = 4;
  8949  01237C  0E04               	movlw	4
  8950  01237E  6F70               	movwf	tcp_sendSYNACK@ipPacket& (0+255),b
  8951                           
  8952                           ; BSR set to: 1
  8953                           ;tcp.c: 174: ipv4_calculateHeaderChecksum(&ipPacket.ipv4Header);
  8954  012380  0E70               	movlw	low tcp_sendSYNACK@ipPacket
  8955  012382  6E16               	movwf	ipv4_calculateHeaderChecksum@header,c
  8956  012384  0E01               	movlw	high tcp_sendSYNACK@ipPacket
  8957  012386  6E17               	movwf	ipv4_calculateHeaderChecksum@header+1,c
  8958  012388  EC8C  F093         	call	_ipv4_calculateHeaderChecksum	;wreg free
  8959                           
  8960                           ;tcp.c: 175: ipv4_writeHeaderIntoBuffer(ipPacket.ipv4Header, &ipHeaderBuf);
  8961  01238C  EE20  F170         	lfsr	2,tcp_sendSYNACK@ipPacket
  8962  012390  EE00  F016         	lfsr	0,ipv4_writeHeaderIntoBuffer@header
  8963  012394  0E16               	movlw	22
  8964  012396                     u12051:
  8965  012396  006F FF6F FFEB     	movff	16347,16363
  8966  01239C  06E8               	decf	16360,f,c
  8967  01239E  E2FB               	bc	u12051
  8968  0123A0  0E00               	movlw	low tcp_sendSYNACK@ipHeaderBuf
  8969  0123A2  6E2D               	movwf	ipv4_writeHeaderIntoBuffer@ptr,c
  8970  0123A4  0E01               	movlw	high tcp_sendSYNACK@ipHeaderBuf
  8971  0123A6  6E2E               	movwf	ipv4_writeHeaderIntoBuffer@ptr+1,c
  8972  0123A8  EC1D  F0A3         	call	_ipv4_writeHeaderIntoBuffer	;wreg free
  8973                           
  8974                           ;tcp.c: 177: ipv4_txFrameRequest(&ipPacket);
  8975  0123AC  0E70               	movlw	low tcp_sendSYNACK@ipPacket
  8976  0123AE  0100               	movlb	0	; () banked
  8977  0123B0  6F8A               	movwf	ipv4_txFrameRequest@packet& (0+255),b
  8978  0123B2  0E01               	movlw	high tcp_sendSYNACK@ipPacket
  8979  0123B4  6F8B               	movwf	(ipv4_txFrameRequest@packet+1)& (0+255),b
  8980  0123B6  EC97  F0A4         	call	_ipv4_txFrameRequest	;wreg free
  8981                           
  8982                           ;tcp.c: 179: tcpHeader.dataOffset = 5;
  8983  0123BA  0E05               	movlw	5
  8984  0123BC  0101               	movlb	1	; () banked
  8985  0123BE  6FBE               	movwf	(tcp_sendSYNACK@tcpHeader+12)& (0+255),b
  8986                           
  8987                           ; BSR set to: 1
  8988                           ;tcp.c: 180: tcpHeader.dstPort = connection->dstPort;
  8989  0123C0  0100               	movlb	0	; () banked
  8990  0123C2  EE20 F00A          	lfsr	2,10
  8991  0123C6  51A2               	movf	tcp_sendSYNACK@connection& (0+255),w,b
  8992  0123C8  26D9               	addwf	16345,f,c
  8993  0123CA  51A3               	movf	(tcp_sendSYNACK@connection+1)& (0+255),w,b
  8994  0123CC  22DA               	addwfc	16346,f,c
  8995  0123CE  006F FF78  F1B4    	movff	16350,tcp_sendSYNACK@tcpHeader+2
  8996  0123D4  006F FF74  F1B5    	movff	16349,tcp_sendSYNACK@tcpHeader+3
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;tcp.c: 181: tcpHeader.srcPort = connection->srcPort;
  9000  0123DA  EE20 F008          	lfsr	2,8
  9001  0123DE  51A2               	movf	tcp_sendSYNACK@connection& (0+255),w,b
  9002  0123E0  26D9               	addwf	16345,f,c
  9003  0123E2  51A3               	movf	(tcp_sendSYNACK@connection+1)& (0+255),w,b
  9004  0123E4  22DA               	addwfc	16346,f,c
  9005  0123E6  006F FF78  F1B2    	movff	16350,tcp_sendSYNACK@tcpHeader
  9006  0123EC  006F FF74  F1B3    	movff	16349,tcp_sendSYNACK@tcpHeader+1
  9007                           
  9008                           ; BSR set to: 0
  9009                           ;tcp.c: 182: tcpHeader.ackNumber = seq + 1;
  9010  0123F2  0E01               	movlw	1
  9011  0123F4  25A4               	addwf	tcp_sendSYNACK@seq& (0+255),w,b
  9012  0123F6  0101               	movlb	1	; () banked
  9013  0123F8  6FBA               	movwf	(tcp_sendSYNACK@tcpHeader+8)& (0+255),b
  9014  0123FA  0E00               	movlw	0
  9015  0123FC  0100               	movlb	0	; () banked
  9016  0123FE  21A5               	addwfc	(tcp_sendSYNACK@seq+1)& (0+255),w,b
  9017  012400  0101               	movlb	1	; () banked
  9018  012402  6FBB               	movwf	(tcp_sendSYNACK@tcpHeader+9)& (0+255),b
  9019  012404  0E00               	movlw	0
  9020  012406  0100               	movlb	0	; () banked
  9021  012408  21A6               	addwfc	(tcp_sendSYNACK@seq+2)& (0+255),w,b
  9022  01240A  0101               	movlb	1	; () banked
  9023  01240C  6FBC               	movwf	(tcp_sendSYNACK@tcpHeader+10)& (0+255),b
  9024  01240E  0E00               	movlw	0
  9025  012410  0100               	movlb	0	; () banked
  9026  012412  21A7               	addwfc	(tcp_sendSYNACK@seq+3)& (0+255),w,b
  9027  012414  0101               	movlb	1	; () banked
  9028  012416  6FBD               	movwf	(tcp_sendSYNACK@tcpHeader+11)& (0+255),b
  9029                           
  9030                           ; BSR set to: 1
  9031                           ;tcp.c: 183: tcpHeader.seqNumber = 123;
  9032  012418  0E7B               	movlw	123
  9033  01241A  6FB6               	movwf	(tcp_sendSYNACK@tcpHeader+4)& (0+255),b
  9034  01241C  0E00               	movlw	0
  9035  01241E  6FB7               	movwf	(tcp_sendSYNACK@tcpHeader+5)& (0+255),b
  9036  012420  0E00               	movlw	0
  9037  012422  6FB8               	movwf	(tcp_sendSYNACK@tcpHeader+6)& (0+255),b
  9038  012424  0E00               	movlw	0
  9039  012426  6FB9               	movwf	(tcp_sendSYNACK@tcpHeader+7)& (0+255),b
  9040                           
  9041                           ; BSR set to: 1
  9042                           ;tcp.c: 184: tcpHeader.urgentPointer = 0;
  9043  012428  0E00               	movlw	0
  9044  01242A  6FC6               	movwf	(tcp_sendSYNACK@tcpHeader+20)& (0+255),b
  9045  01242C  0E00               	movlw	0
  9046  01242E  6FC5               	movwf	(tcp_sendSYNACK@tcpHeader+19)& (0+255),b
  9047                           
  9048                           ; BSR set to: 1
  9049                           ;tcp.c: 185: tcpHeader.windowSize = 20;
  9050  012430  0E00               	movlw	0
  9051  012432  6FC2               	movwf	(tcp_sendSYNACK@tcpHeader+16)& (0+255),b
  9052  012434  0E14               	movlw	20
  9053  012436  6FC1               	movwf	(tcp_sendSYNACK@tcpHeader+15)& (0+255),b
  9054                           
  9055                           ; BSR set to: 1
  9056                           ;tcp.c: 186: tcpHeader.flags.ACK = 1;
  9057  012438  89BF               	bsf	(tcp_sendSYNACK@tcpHeader+13)& (0+255),4,b
  9058                           
  9059                           ; BSR set to: 1
  9060                           ;tcp.c: 187: tcpHeader.flags.SYN = 1;
  9061  01243A  8FBF               	bsf	(tcp_sendSYNACK@tcpHeader+13)& (0+255),7,b
  9062                           
  9063                           ; BSR set to: 1
  9064                           ;tcp.c: 188: tcpHeader.flags.NS = 0;
  9065  01243C  91BF               	bcf	(tcp_sendSYNACK@tcpHeader+13)& (0+255),0,b
  9066                           
  9067                           ; BSR set to: 1
  9068                           ;tcp.c: 189: tcpHeader.flags.CWR = 0;
  9069  01243E  93BF               	bcf	(tcp_sendSYNACK@tcpHeader+13)& (0+255),1,b
  9070                           
  9071                           ; BSR set to: 1
  9072                           ;tcp.c: 190: tcpHeader.flags.ECE = 0;
  9073  012440  95BF               	bcf	(tcp_sendSYNACK@tcpHeader+13)& (0+255),2,b
  9074                           
  9075                           ; BSR set to: 1
  9076                           ;tcp.c: 191: tcpHeader.flags.URG = 0;
  9077  012442  97BF               	bcf	(tcp_sendSYNACK@tcpHeader+13)& (0+255),3,b
  9078                           
  9079                           ; BSR set to: 1
  9080                           ;tcp.c: 192: tcpHeader.flags.PSH = 0;
  9081  012444  9BBF               	bcf	(tcp_sendSYNACK@tcpHeader+13)& (0+255),5,b
  9082                           
  9083                           ; BSR set to: 1
  9084                           ;tcp.c: 193: tcpHeader.flags.RST = 0;
  9085  012446  9DBF               	bcf	(tcp_sendSYNACK@tcpHeader+13)& (0+255),6,b
  9086                           
  9087                           ; BSR set to: 1
  9088                           ;tcp.c: 194: tcpHeader.flags.FIN = 0;
  9089  012448  91C0               	bcf	(tcp_sendSYNACK@tcpHeader+14)& (0+255),0,b
  9090                           
  9091                           ; BSR set to: 1
  9092                           ;tcp.c: 196: tcp_calculateHeaderChecksum(&tcpHeader, ipPacket.ipv4Header);
  9093  01244A  0EB2               	movlw	low tcp_sendSYNACK@tcpHeader
  9094  01244C  6E16               	movwf	tcp_calculateHeaderChecksum@tcpHeader,c
  9095  01244E  0E01               	movlw	high tcp_sendSYNACK@tcpHeader
  9096  012450  6E17               	movwf	tcp_calculateHeaderChecksum@tcpHeader+1,c
  9097  012452  EE20  F170         	lfsr	2,tcp_sendSYNACK@ipPacket
  9098  012456  EE00  F018         	lfsr	0,tcp_calculateHeaderChecksum@ipv4Header
  9099  01245A  0E16               	movlw	22
  9100  01245C                     u12061:
  9101  01245C  006F FF6F FFEB     	movff	16347,16363
  9102  012462  06E8               	decf	16360,f,c
  9103  012464  E2FB               	bc	u12061
  9104  012466  ECD8  F08A         	call	_tcp_calculateHeaderChecksum	;wreg free
  9105                           
  9106                           ;tcp.c: 199: UARTTransmitText("[");
  9107  01246A  0EFB               	movlw	low (STR_11+1)
  9108  01246C  0100               	movlb	0	; () banked
  9109  01246E  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  9110  012470  0EFF               	movlw	high (STR_11+1)
  9111  012472  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  9112  012474  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  9113                           
  9114                           ;tcp.c: 200: UARTTransmitText(intToString(tcpHeader.srcPort, 10));
  9115  012478  0060  F6C8  F032   	movff	tcp_sendSYNACK@tcpHeader,intToString@val
  9116  01247E  0060  F6CC  F033   	movff	tcp_sendSYNACK@tcpHeader+1,intToString@val+1
  9117  012484  6A34               	clrf	intToString@val+2,c
  9118  012486  6A35               	clrf	intToString@val+3,c
  9119  012488  0E0A               	movlw	10
  9120  01248A  6E36               	movwf	intToString@b,c
  9121  01248C  ECA5  F0B8         	call	_intToString	;wreg free
  9122  012490  0060  F0C8  F06D   	movff	?_intToString,UARTTransmitText@str
  9123  012496  0060  F0CC  F06E   	movff	?_intToString+1,UARTTransmitText@str+1
  9124  01249C  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  9125                           
  9126                           ;tcp.c: 201: UARTTransmitText(" -> ");
  9127  0124A0  0ED0               	movlw	low STR_20
  9128  0124A2  0100               	movlb	0	; () banked
  9129  0124A4  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  9130  0124A6  0EFF               	movlw	high STR_20
  9131  0124A8  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  9132  0124AA  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  9133                           
  9134                           ;tcp.c: 202: UARTTransmitText(intToString(tcpHeader.dstPort, 10));
  9135  0124AE  0060  F6D0  F032   	movff	tcp_sendSYNACK@tcpHeader+2,intToString@val
  9136  0124B4  0060  F6D4  F033   	movff	tcp_sendSYNACK@tcpHeader+3,intToString@val+1
  9137  0124BA  6A34               	clrf	intToString@val+2,c
  9138  0124BC  6A35               	clrf	intToString@val+3,c
  9139  0124BE  0E0A               	movlw	10
  9140  0124C0  6E36               	movwf	intToString@b,c
  9141  0124C2  ECA5  F0B8         	call	_intToString	;wreg free
  9142  0124C6  0060  F0C8  F06D   	movff	?_intToString,UARTTransmitText@str
  9143  0124CC  0060  F0CC  F06E   	movff	?_intToString+1,UARTTransmitText@str+1
  9144  0124D2  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  9145                           
  9146                           ;tcp.c: 203: UARTTransmitText("]");
  9147  0124D6  0E90               	movlw	low (STR_117+4)
  9148  0124D8  0100               	movlb	0	; () banked
  9149  0124DA  6F6D               	movwf	UARTTransmitText@str& (0+255),b
  9150  0124DC  0EFF               	movlw	high (STR_117+4)
  9151  0124DE  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
  9152  0124E0  EC44  F0B5         	call	_UARTTransmitText	;wreg free
  9153                           
  9154                           ;tcp.c: 204: headerBuf[0] = (tcpHeader.srcPort & 0xff00) >> 8;
  9155  0124E4  0101               	movlb	1	; () banked
  9156  0124E6  51B3               	movf	(tcp_sendSYNACK@tcpHeader+1)& (0+255),w,b
  9157  0124E8  6F20               	movwf	tcp_sendSYNACK@headerBuf& (0+255),b
  9158                           
  9159                           ; BSR set to: 1
  9160                           ;tcp.c: 205: headerBuf[1] = tcpHeader.srcPort & 0x00ff;
  9161  0124EA  0060  F6C8  F121   	movff	tcp_sendSYNACK@tcpHeader,tcp_sendSYNACK@headerBuf+1
  9162                           
  9163                           ; BSR set to: 1
  9164                           ;tcp.c: 206: headerBuf[2] = (tcpHeader.dstPort & 0xff00) >> 8;
  9165  0124F0  51B5               	movf	(tcp_sendSYNACK@tcpHeader+3)& (0+255),w,b
  9166  0124F2  6F22               	movwf	(tcp_sendSYNACK@headerBuf+2)& (0+255),b
  9167                           
  9168                           ; BSR set to: 1
  9169                           ;tcp.c: 207: headerBuf[3] = tcpHeader.dstPort & 0x00ff;
  9170  0124F4  0060  F6D0  F123   	movff	tcp_sendSYNACK@tcpHeader+2,tcp_sendSYNACK@headerBuf+3
  9171                           
  9172                           ; BSR set to: 1
  9173                           ;tcp.c: 208: headerBuf[4] = (tcpHeader.seqNumber & 0xff000000) >> 24;
  9174  0124FA  EE20  F1B6         	lfsr	2,tcp_sendSYNACK@tcpHeader+4
  9175  0124FE  0E00               	movlw	0
  9176  012500  14DE               	andwf	16350,w,c
  9177  012502  0100               	movlb	0	; () banked
  9178  012504  6FA8               	movwf	??_tcp_sendSYNACK& (0+255),b
  9179  012506  0E00               	movlw	0
  9180  012508  14DE               	andwf	16350,w,c
  9181  01250A  6FA9               	movwf	(??_tcp_sendSYNACK+1)& (0+255),b
  9182  01250C  0E00               	movlw	0
  9183  01250E  14DE               	andwf	16350,w,c
  9184  012510  6FAA               	movwf	(??_tcp_sendSYNACK+2)& (0+255),b
  9185  012512  0EFF               	movlw	255
  9186  012514  14DE               	andwf	16350,w,c
  9187  012516  6FAB               	movwf	(??_tcp_sendSYNACK+3)& (0+255),b
  9188  012518  0E19               	movlw	25
  9189  01251A  D005               	goto	u12070
  9190  01251C                     u12075:
  9191  01251C  90D8               	bcf	16344,0,c
  9192  01251E  33AB               	rrcf	(??_tcp_sendSYNACK+3)& (0+255),f,b
  9193  012520  33AA               	rrcf	(??_tcp_sendSYNACK+2)& (0+255),f,b
  9194  012522  33A9               	rrcf	(??_tcp_sendSYNACK+1)& (0+255),f,b
  9195  012524  33A8               	rrcf	??_tcp_sendSYNACK& (0+255),f,b
  9196  012526                     u12070:
  9197  012526  2EE8               	decfsz	16360,f,c
  9198  012528  D7F9               	goto	u12075
  9199  01252A  51A8               	movf	??_tcp_sendSYNACK& (0+255),w,b
  9200  01252C  0101               	movlb	1	; () banked
  9201  01252E  6F24               	movwf	(tcp_sendSYNACK@headerBuf+4)& (0+255),b
  9202                           
  9203                           ; BSR set to: 1
  9204                           ;tcp.c: 209: headerBuf[5] = (tcpHeader.seqNumber & 0x00ff0000) >> 16;
  9205  012530  0060  F6E0  F125   	movff	tcp_sendSYNACK@tcpHeader+6,tcp_sendSYNACK@headerBuf+5
  9206                           
  9207                           ; BSR set to: 1
  9208                           ;tcp.c: 210: headerBuf[6] = (tcpHeader.seqNumber & 0x0000ff00) >> 8;
  9209  012536  0060  F6DC  F126   	movff	tcp_sendSYNACK@tcpHeader+5,tcp_sendSYNACK@headerBuf+6
  9210                           
  9211                           ; BSR set to: 1
  9212                           ;tcp.c: 211: headerBuf[7] = tcpHeader.seqNumber & 0x000000ff;
  9213  01253C  0060  F6D8  F127   	movff	tcp_sendSYNACK@tcpHeader+4,tcp_sendSYNACK@headerBuf+7
  9214                           
  9215                           ; BSR set to: 1
  9216                           ;tcp.c: 212: headerBuf[8] = (tcpHeader.ackNumber & 0xff000000) >> 24;
  9217  012542  EE20  F1BA         	lfsr	2,tcp_sendSYNACK@tcpHeader+8
  9218  012546  0E00               	movlw	0
  9219  012548  14DE               	andwf	16350,w,c
  9220  01254A  0100               	movlb	0	; () banked
  9221  01254C  6FA8               	movwf	??_tcp_sendSYNACK& (0+255),b
  9222  01254E  0E00               	movlw	0
  9223  012550  14DE               	andwf	16350,w,c
  9224  012552  6FA9               	movwf	(??_tcp_sendSYNACK+1)& (0+255),b
  9225  012554  0E00               	movlw	0
  9226  012556  14DE               	andwf	16350,w,c
  9227  012558  6FAA               	movwf	(??_tcp_sendSYNACK+2)& (0+255),b
  9228  01255A  0EFF               	movlw	255
  9229  01255C  14DE               	andwf	16350,w,c
  9230  01255E  6FAB               	movwf	(??_tcp_sendSYNACK+3)& (0+255),b
  9231  012560  0E19               	movlw	25
  9232  012562  D005               	goto	u12080
  9233  012564                     u12085:
  9234  012564  90D8               	bcf	16344,0,c
  9235  012566  33AB               	rrcf	(??_tcp_sendSYNACK+3)& (0+255),f,b
  9236  012568  33AA               	rrcf	(??_tcp_sendSYNACK+2)& (0+255),f,b
  9237  01256A  33A9               	rrcf	(??_tcp_sendSYNACK+1)& (0+255),f,b
  9238  01256C  33A8               	rrcf	??_tcp_sendSYNACK& (0+255),f,b
  9239  01256E                     u12080:
  9240  01256E  2EE8               	decfsz	16360,f,c
  9241  012570  D7F9               	goto	u12085
  9242  012572  51A8               	movf	??_tcp_sendSYNACK& (0+255),w,b
  9243  012574  0101               	movlb	1	; () banked
  9244  012576  6F28               	movwf	(tcp_sendSYNACK@headerBuf+8)& (0+255),b
  9245                           
  9246                           ; BSR set to: 1
  9247                           ;tcp.c: 213: headerBuf[9] = (tcpHeader.ackNumber & 0x00ff0000) >> 16;
  9248  012578  0060  F6F0  F129   	movff	tcp_sendSYNACK@tcpHeader+10,tcp_sendSYNACK@headerBuf+9
  9249                           
  9250                           ; BSR set to: 1
  9251                           ;tcp.c: 214: headerBuf[10] = (tcpHeader.ackNumber & 0x0000ff00) >> 8;
  9252  01257E  0060  F6EC  F12A   	movff	tcp_sendSYNACK@tcpHeader+9,tcp_sendSYNACK@headerBuf+10
  9253                           
  9254                           ; BSR set to: 1
  9255                           ;tcp.c: 215: headerBuf[11] = tcpHeader.ackNumber & 0x000000ff;
  9256  012584  0060  F6E8  F12B   	movff	tcp_sendSYNACK@tcpHeader+8,tcp_sendSYNACK@headerBuf+11
  9257                           
  9258                           ; BSR set to: 1
  9259                           ;tcp.c: 216: headerBuf[12] = (tcpHeader.dataOffset << 4) | (tcpHeader.flags.NS ? 0x01 : 
      +                          0x00);
  9260  01258A  A1BF               	btfss	(tcp_sendSYNACK@tcpHeader+13)& (0+255),0,b
  9261  01258C  D004               	goto	u12090
  9262  01258E  0100               	movlb	0	; () banked
  9263  012590  6BA8               	clrf	??_tcp_sendSYNACK& (0+255),b
  9264  012592  2BA8               	incf	??_tcp_sendSYNACK& (0+255),f,b
  9265  012594  D002               	goto	u12098
  9266  012596                     u12090:
  9267  012596  0100               	movlb	0	; () banked
  9268  012598  6BA8               	clrf	??_tcp_sendSYNACK& (0+255),b
  9269  01259A                     u12098:
  9270  01259A  0101               	movlb	1	; () banked
  9271  01259C  39BE               	swapf	(tcp_sendSYNACK@tcpHeader+12)& (0+255),w,b
  9272  01259E  0BF0               	andlw	240
  9273  0125A0  0100               	movlb	0	; () banked
  9274  0125A2  11A8               	iorwf	??_tcp_sendSYNACK& (0+255),w,b
  9275  0125A4  0101               	movlb	1	; () banked
  9276  0125A6  6F2C               	movwf	(tcp_sendSYNACK@headerBuf+12)& (0+255),b
  9277                           
  9278                           ; BSR set to: 1
  9279                           ;tcp.c: 217: headerBuf[13] = (tcpHeader.flags.CWR ? 0x80 : 0x00) |
  9280                           ;tcp.c: 218: (tcpHeader.flags.CWR ? 0x40 : 0x00) |
  9281                           ;tcp.c: 219: (tcpHeader.flags.URG ? 0x20 : 0x00) |
  9282                           ;tcp.c: 220: (tcpHeader.flags.ACK ? 0x10 : 0x00) |
  9283                           ;tcp.c: 221: (tcpHeader.flags.PSH ? 0x08 : 0x00) |
  9284                           ;tcp.c: 222: (tcpHeader.flags.RST ? 0x04 : 0x00) |
  9285                           ;tcp.c: 223: (tcpHeader.flags.SYN ? 0x02 : 0x00) |
  9286                           ;tcp.c: 224: (tcpHeader.flags.FIN ? 0x01 : 0x00);
  9287  0125A8  BFBF               	btfsc	(tcp_sendSYNACK@tcpHeader+13)& (0+255),7,b
  9288  0125AA  D004               	goto	l1401
  9289                           
  9290                           ; BSR set to: 1
  9291  0125AC  0E00               	movlw	0
  9292  0125AE  6F61               	movwf	(_tcp_sendSYNACK$4842+1)& (0+255),b
  9293  0125B0  0E00               	movlw	0
  9294  0125B2  D003               	goto	L5
  9295  0125B4                     l1401:
  9296                           
  9297                           ; BSR set to: 1
  9298                           
  9299                           ; BSR set to: 1
  9300  0125B4  0E00               	movlw	0
  9301  0125B6  6F61               	movwf	(_tcp_sendSYNACK$4842+1)& (0+255),b
  9302  0125B8  0E02               	movlw	2
  9303  0125BA                     L5:
  9304  0125BA  6F60               	movwf	_tcp_sendSYNACK$4842& (0+255),b
  9305                           
  9306                           ; BSR set to: 1
  9307                           
  9308                           ; BSR set to: 1
  9309  0125BC  BDBF               	btfsc	(tcp_sendSYNACK@tcpHeader+13)& (0+255),6,b
  9310  0125BE  D004               	goto	l1405
  9311                           
  9312                           ; BSR set to: 1
  9313  0125C0  0E00               	movlw	0
  9314  0125C2  6F63               	movwf	(_tcp_sendSYNACK$4843+1)& (0+255),b
  9315  0125C4  0E00               	movlw	0
  9316  0125C6  D003               	goto	L6
  9317  0125C8                     l1405:
  9318                           
  9319                           ; BSR set to: 1
  9320                           
  9321                           ; BSR set to: 1
  9322  0125C8  0E00               	movlw	0
  9323  0125CA  6F63               	movwf	(_tcp_sendSYNACK$4843+1)& (0+255),b
  9324  0125CC  0E04               	movlw	4
  9325  0125CE                     L6:
  9326  0125CE  6F62               	movwf	_tcp_sendSYNACK$4843& (0+255),b
  9327                           
  9328                           ; BSR set to: 1
  9329                           
  9330                           ; BSR set to: 1
  9331  0125D0  BBBF               	btfsc	(tcp_sendSYNACK@tcpHeader+13)& (0+255),5,b
  9332  0125D2  D004               	goto	l1409
  9333                           
  9334                           ; BSR set to: 1
  9335  0125D4  0E00               	movlw	0
  9336  0125D6  6F65               	movwf	(_tcp_sendSYNACK$4844+1)& (0+255),b
  9337  0125D8  0E00               	movlw	0
  9338  0125DA  D003               	goto	L7
  9339  0125DC                     l1409:
  9340                           
  9341                           ; BSR set to: 1
  9342                           
  9343                           ; BSR set to: 1
  9344  0125DC  0E00               	movlw	0
  9345  0125DE  6F65               	movwf	(_tcp_sendSYNACK$4844+1)& (0+255),b
  9346  0125E0  0E08               	movlw	8
  9347  0125E2                     L7:
  9348  0125E2  6F64               	movwf	_tcp_sendSYNACK$4844& (0+255),b
  9349                           
  9350                           ; BSR set to: 1
  9351                           
  9352                           ; BSR set to: 1
  9353  0125E4  B9BF               	btfsc	(tcp_sendSYNACK@tcpHeader+13)& (0+255),4,b
  9354  0125E6  D004               	goto	l1413
  9355                           
  9356                           ; BSR set to: 1
  9357  0125E8  0E00               	movlw	0
  9358  0125EA  6F67               	movwf	(_tcp_sendSYNACK$4845+1)& (0+255),b
  9359  0125EC  0E00               	movlw	0
  9360  0125EE  D003               	goto	L8
  9361  0125F0                     l1413:
  9362                           
  9363                           ; BSR set to: 1
  9364                           
  9365                           ; BSR set to: 1
  9366  0125F0  0E00               	movlw	0
  9367  0125F2  6F67               	movwf	(_tcp_sendSYNACK$4845+1)& (0+255),b
  9368  0125F4  0E10               	movlw	16
  9369  0125F6                     L8:
  9370  0125F6  6F66               	movwf	_tcp_sendSYNACK$4845& (0+255),b
  9371                           
  9372                           ; BSR set to: 1
  9373                           
  9374                           ; BSR set to: 1
  9375  0125F8  B7BF               	btfsc	(tcp_sendSYNACK@tcpHeader+13)& (0+255),3,b
  9376  0125FA  D004               	goto	l1417
  9377                           
  9378                           ; BSR set to: 1
  9379  0125FC  0E00               	movlw	0
  9380  0125FE  6F69               	movwf	(_tcp_sendSYNACK$4846+1)& (0+255),b
  9381  012600  0E00               	movlw	0
  9382  012602  D003               	goto	L9
  9383  012604                     l1417:
  9384                           
  9385                           ; BSR set to: 1
  9386                           
  9387                           ; BSR set to: 1
  9388  012604  0E00               	movlw	0
  9389  012606  6F69               	movwf	(_tcp_sendSYNACK$4846+1)& (0+255),b
  9390  012608  0E20               	movlw	32
  9391  01260A                     L9:
  9392  01260A  6F68               	movwf	_tcp_sendSYNACK$4846& (0+255),b
  9393                           
  9394                           ; BSR set to: 1
  9395                           
  9396                           ; BSR set to: 1
  9397  01260C  B3BF               	btfsc	(tcp_sendSYNACK@tcpHeader+13)& (0+255),1,b
  9398  01260E  D004               	goto	l1421
  9399                           
  9400                           ; BSR set to: 1
  9401  012610  0E00               	movlw	0
  9402  012612  6F6B               	movwf	(_tcp_sendSYNACK$4847+1)& (0+255),b
  9403  012614  0E00               	movlw	0
  9404  012616  D003               	goto	L10
  9405  012618                     l1421:
  9406                           
  9407                           ; BSR set to: 1
  9408                           
  9409                           ; BSR set to: 1
  9410  012618  0E00               	movlw	0
  9411  01261A  6F6B               	movwf	(_tcp_sendSYNACK$4847+1)& (0+255),b
  9412  01261C  0E40               	movlw	64
  9413  01261E                     L10:
  9414  01261E  6F6A               	movwf	_tcp_sendSYNACK$4847& (0+255),b
  9415                           
  9416                           ; BSR set to: 1
  9417                           
  9418                           ; BSR set to: 1
  9419  012620  B3BF               	btfsc	(tcp_sendSYNACK@tcpHeader+13)& (0+255),1,b
  9420  012622  D004               	goto	l1425
  9421                           
  9422                           ; BSR set to: 1
  9423  012624  0E00               	movlw	0
  9424  012626  6F6D               	movwf	(_tcp_sendSYNACK$4848+1)& (0+255),b
  9425  012628  0E00               	movlw	0
  9426  01262A  D003               	goto	L11
  9427  01262C                     l1425:
  9428                           
  9429                           ; BSR set to: 1
  9430                           
  9431                           ; BSR set to: 1
  9432  01262C  0E00               	movlw	0
  9433  01262E  6F6D               	movwf	(_tcp_sendSYNACK$4848+1)& (0+255),b
  9434  012630  0E80               	movlw	128
  9435  012632                     L11:
  9436  012632  6F6C               	movwf	_tcp_sendSYNACK$4848& (0+255),b
  9437                           
  9438                           ; BSR set to: 1
  9439                           
  9440                           ; BSR set to: 1
  9441  012634  A1C0               	btfss	(tcp_sendSYNACK@tcpHeader+14)& (0+255),0,b
  9442  012636  D002               	goto	u12170
  9443  012638  0E01               	movlw	1
  9444  01263A  D001               	goto	u12176
  9445  01263C                     u12170:
  9446  01263C  0E00               	movlw	0
  9447  01263E                     u12176:
  9448  01263E  116C               	iorwf	_tcp_sendSYNACK$4848& (0+255),w,b
  9449  012640  116A               	iorwf	_tcp_sendSYNACK$4847& (0+255),w,b
  9450  012642  1168               	iorwf	_tcp_sendSYNACK$4846& (0+255),w,b
  9451  012644  1166               	iorwf	_tcp_sendSYNACK$4845& (0+255),w,b
  9452  012646  1164               	iorwf	_tcp_sendSYNACK$4844& (0+255),w,b
  9453  012648  1162               	iorwf	_tcp_sendSYNACK$4843& (0+255),w,b
  9454  01264A  1160               	iorwf	_tcp_sendSYNACK$4842& (0+255),w,b
  9455  01264C  6F2D               	movwf	(tcp_sendSYNACK@headerBuf+13)& (0+255),b
  9456                           
  9457                           ; BSR set to: 1
  9458                           ;tcp.c: 225: headerBuf[14] = (tcpHeader.windowSize & 0xff00) >> 8;
  9459  01264E  51C2               	movf	(tcp_sendSYNACK@tcpHeader+16)& (0+255),w,b
  9460  012650  6F2E               	movwf	(tcp_sendSYNACK@headerBuf+14)& (0+255),b
  9461                           
  9462                           ; BSR set to: 1
  9463                           ;tcp.c: 226: headerBuf[15] = tcpHeader.windowSize & 0x00ff;
  9464  012652  0060  F704  F12F   	movff	tcp_sendSYNACK@tcpHeader+15,tcp_sendSYNACK@headerBuf+15
  9465                           
  9466                           ; BSR set to: 1
  9467                           ;tcp.c: 227: headerBuf[16] = (tcpHeader.checksum & 0xff00) >> 8;
  9468  012658  51C4               	movf	(tcp_sendSYNACK@tcpHeader+18)& (0+255),w,b
  9469  01265A  6F30               	movwf	(tcp_sendSYNACK@headerBuf+16)& (0+255),b
  9470                           
  9471                           ; BSR set to: 1
  9472                           ;tcp.c: 228: headerBuf[17] = tcpHeader.checksum & 0x00ff;
  9473  01265C  0060  F70C  F131   	movff	tcp_sendSYNACK@tcpHeader+17,tcp_sendSYNACK@headerBuf+17
  9474                           
  9475                           ; BSR set to: 1
  9476                           ;tcp.c: 229: headerBuf[18] = (tcpHeader.urgentPointer & 0xff00) >> 8;
  9477  012662  51C6               	movf	(tcp_sendSYNACK@tcpHeader+20)& (0+255),w,b
  9478  012664  6F32               	movwf	(tcp_sendSYNACK@headerBuf+18)& (0+255),b
  9479                           
  9480                           ; BSR set to: 1
  9481                           ;tcp.c: 230: headerBuf[19] = tcpHeader.urgentPointer & 0x00ff;
  9482  012666  0060  F714  F133   	movff	tcp_sendSYNACK@tcpHeader+19,tcp_sendSYNACK@headerBuf+19
  9483                           
  9484                           ; BSR set to: 1
  9485                           ;tcp.c: 232: for (uint16_t i = 0; i < ipPacket.ipv4Header.totalLength; i++) {
  9486  01266C  0E00               	movlw	0
  9487  01266E  6F6F               	movwf	(tcp_sendSYNACK@i+1)& (0+255),b
  9488  012670  0E00               	movlw	0
  9489  012672  6F6E               	movwf	tcp_sendSYNACK@i& (0+255),b
  9490  012674  D03D               	goto	l1428
  9491  012676                     
  9492                           ; BSR set to: 1
  9493                           ;tcp.c: 233: if (i < ipPacket.ipv4Header.headerLength * 4) {
  9494                           
  9495                           ; BSR set to: 1
  9496  012676  5171               	movf	(tcp_sendSYNACK@ipPacket+1)& (0+255),w,b
  9497  012678  0D04               	mullw	4
  9498  01267A  50F3               	movf	16371,w,c
  9499  01267C  5D6E               	subwf	tcp_sendSYNACK@i& (0+255),w,b
  9500  01267E  50F4               	movf	16372,w,c
  9501  012680  596F               	subwfb	(tcp_sendSYNACK@i+1)& (0+255),w,b
  9502  012682  B0D8               	btfsc	16344,0,c
  9503  012684  D014               	goto	l1430
  9504                           
  9505                           ; BSR set to: 1
  9506                           ;tcp.c: 234: ipv4_streamToTransmissionBuffer(ipHeaderBuf[i], ipPacket);
  9507  012686  EE20  F170         	lfsr	2,tcp_sendSYNACK@ipPacket
  9508  01268A  EE00  F060         	lfsr	0,ipv4_streamToTransmissionBuffer@packet
  9509  01268E  0E41               	movlw	65
  9510  012690                     u12191:
  9511  012690  006F FF6F FFEB     	movff	16347,16363
  9512  012696  06E8               	decf	16360,f,c
  9513  012698  E2FB               	bc	u12191
  9514  01269A  0E00               	movlw	low tcp_sendSYNACK@ipHeaderBuf
  9515  01269C  256E               	addwf	tcp_sendSYNACK@i& (0+255),w,b
  9516  01269E  6ED9               	movwf	16345,c
  9517  0126A0  0E01               	movlw	high tcp_sendSYNACK@ipHeaderBuf
  9518  0126A2  216F               	addwfc	(tcp_sendSYNACK@i+1)& (0+255),w,b
  9519  0126A4  6EDA               	movwf	16346,c
  9520  0126A6  50DF               	movf	16351,w,c
  9521  0126A8  ECEC  F0BA         	call	_ipv4_streamToTransmissionBuffer
  9522                           
  9523                           ;tcp.c: 235: } else {
  9524  0126AC  D01E               	goto	l1431
  9525  0126AE                     l1430:
  9526                           
  9527                           ;tcp.c: 236: ipv4_streamToTransmissionBuffer(headerBuf[i - ipPacket.ipv4Header.headerLen
      +                          gth * 4], ipPacket);
  9528  0126AE  EE20  F170         	lfsr	2,tcp_sendSYNACK@ipPacket
  9529  0126B2  EE00  F060         	lfsr	0,ipv4_streamToTransmissionBuffer@packet
  9530  0126B6  0E41               	movlw	65
  9531  0126B8                     u12201:
  9532  0126B8  006F FF6F FFEB     	movff	16347,16363
  9533  0126BE  06E8               	decf	16360,f,c
  9534  0126C0  E2FB               	bc	u12201
  9535  0126C2  0101               	movlb	1	; () banked
  9536  0126C4  5171               	movf	(tcp_sendSYNACK@ipPacket+1)& (0+255),w,b
  9537  0126C6  0D04               	mullw	4
  9538  0126C8  1EF3               	comf	16371,f,c
  9539  0126CA  1EF4               	comf	16372,f,c
  9540  0126CC  4AF3               	infsnz	16371,f,c
  9541  0126CE  2AF4               	incf	16372,f,c
  9542  0126D0  516E               	movf	tcp_sendSYNACK@i& (0+255),w,b
  9543  0126D2  26F3               	addwf	16371,f,c
  9544  0126D4  516F               	movf	(tcp_sendSYNACK@i+1)& (0+255),w,b
  9545  0126D6  22F4               	addwfc	16372,f,c
  9546  0126D8  0E20               	movlw	low tcp_sendSYNACK@headerBuf
  9547  0126DA  24F3               	addwf	16371,w,c
  9548  0126DC  6ED9               	movwf	16345,c
  9549  0126DE  0E01               	movlw	high tcp_sendSYNACK@headerBuf
  9550  0126E0  20F4               	addwfc	16372,w,c
  9551  0126E2  6EDA               	movwf	16346,c
  9552  0126E4  50DF               	movf	16351,w,c
  9553  0126E6  ECEC  F0BA         	call	_ipv4_streamToTransmissionBuffer
  9554  0126EA                     l1431:
  9555  0126EA  0101               	movlb	1	; () banked
  9556  0126EC  4B6E               	infsnz	tcp_sendSYNACK@i& (0+255),f,b
  9557  0126EE  2B6F               	incf	(tcp_sendSYNACK@i+1)& (0+255),f,b
  9558  0126F0                     l1428:
  9559                           
  9560                           ; BSR set to: 1
  9561                           
  9562                           ; BSR set to: 1
  9563  0126F0  5174               	movf	(tcp_sendSYNACK@ipPacket+4)& (0+255),w,b
  9564  0126F2  5D6E               	subwf	tcp_sendSYNACK@i& (0+255),w,b
  9565  0126F4  5175               	movf	(tcp_sendSYNACK@ipPacket+5)& (0+255),w,b
  9566  0126F6  596F               	subwfb	(tcp_sendSYNACK@i+1)& (0+255),w,b
  9567  0126F8  A0D8               	btfss	16344,0,c
  9568  0126FA  D7BD               	goto	l1429
  9569                           
  9570                           ; BSR set to: 1
  9571                           ;tcp.c: 237: }
  9572                           ;tcp.c: 238: }
  9573                           ;tcp.c: 240: stack.pendingPacketToSend = ipPacket;
  9574                           
  9575                           ; BSR set to: 1
  9576  0126FC  EE20  F170         	lfsr	2,tcp_sendSYNACK@ipPacket
  9577  012700  EE11  F035         	lfsr	1,_stack+53
  9578  012704  0E41               	movlw	65
  9579  012706                     u12221:
  9580  012706  006F FF6F FFE3     	movff	16347,16355
  9581  01270C  06E8               	decf	16360,f,c
  9582  01270E  E2FB               	bc	u12221
  9583                           
  9584                           ; BSR set to: 1
  9585                           ;tcp.c: 241: stack.background.fPacketPending = 1u;
  9586  012710  0E01               	movlw	1
  9587  012712  0104               	movlb	4	; () banked
  9588  012714  6F34               	movwf	(_stack+52)& (0+255),b
  9589                           
  9590                           ; BSR set to: 4
  9591  012716  0012               	return		;funcret
  9592  012718                     __end_of_tcp_sendSYNACK:
  9593                           	opt stack 0
  9594                           
  9595 ;; *************** function _tcp_calculateHeaderChecksum *****************
  9596 ;; Defined at:
  9597 ;;		line 245 in file "src/stack/protocols/tcp.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;  tcpHeader       2   21[COMRAM] PTR struct tcp_header
  9600 ;;		 -> tcp_sendSYNACK@tcpHeader(21), 
  9601 ;;  ipv4Header     23   23[COMRAM] struct ipv4_header
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;  sum             4   17[BANK0 ] unsigned long 
  9604 ;;  carry           1    0[BANK0 ] unsigned char 
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  3   21[COMRAM] struct error
  9607 ;; Registers used:
  9608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9609 ;; Tracked objects:
  9610 ;;		On entry : 0/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9614 ;;      Params:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9615 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9616 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9617 ;;      Totals:        29      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9618 ;;Total ram usage:       50 bytes
  9619 ;; Hardware stack levels used:    1
  9620 ;; Hardware stack levels required when called:    4
  9621 ;; This function calls:
  9622 ;;		Nothing
  9623 ;; This function is called by:
  9624 ;;		_tcp_sendSYNACK
  9625 ;; This function uses a non-reentrant model
  9626 ;;
  9627                           
  9628                           	psect	text27
  9629  0115B0                     __ptext27:
  9630                           	opt stack 0
  9631  0115B0                     _tcp_calculateHeaderChecksum:
  9632                           	opt stack 20
  9633                           
  9634                           ;tcp.c: 246: uint32_t sum = 0;
  9635                           
  9636                           ; BSR set to: 4
  9637                           ;incstack = 0
  9638  0115B0  0E00               	movlw	0
  9639  0115B2  0100               	movlb	0	; () banked
  9640  0115B4  6F71               	movwf	tcp_calculateHeaderChecksum@sum& (0+255),b
  9641  0115B6  0E00               	movlw	0
  9642  0115B8  6F72               	movwf	(tcp_calculateHeaderChecksum@sum+1)& (0+255),b
  9643  0115BA  0E00               	movlw	0
  9644  0115BC  6F73               	movwf	(tcp_calculateHeaderChecksum@sum+2)& (0+255),b
  9645  0115BE  0E00               	movlw	0
  9646  0115C0  6F74               	movwf	(tcp_calculateHeaderChecksum@sum+3)& (0+255),b
  9647                           
  9648                           ; BSR set to: 0
  9649                           ;tcp.c: 248: sum += ((uint16_t) ipv4Header.source.address[0] << 8) | (ipv4Header.source.
      +                          address[1]);
  9650  0115C2  5028               	movf	tcp_calculateHeaderChecksum@ipv4Header+16,w,c
  9651  0115C4  0060  F09C  F02F   	movff	tcp_calculateHeaderChecksum@ipv4Header+15,??_tcp_calculateHeaderChecksum
  9652  0115CA  6A30               	clrf	(??_tcp_calculateHeaderChecksum+1)& (0+255),c
  9653  0115CC  0060  F0BC  F030   	movff	??_tcp_calculateHeaderChecksum,??_tcp_calculateHeaderChecksum+1
  9654  0115D2  6A2F               	clrf	??_tcp_calculateHeaderChecksum,c
  9655  0115D4  122F               	iorwf	??_tcp_calculateHeaderChecksum,f,c
  9656  0115D6  0E00               	movlw	0
  9657  0115D8  1230               	iorwf	??_tcp_calculateHeaderChecksum+1,f,c
  9658  0115DA  502F               	movf	??_tcp_calculateHeaderChecksum,w,c
  9659  0115DC  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
  9660  0115DE  5030               	movf	??_tcp_calculateHeaderChecksum+1,w,c
  9661  0115E0  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
  9662  0115E2  0E00               	movlw	0
  9663  0115E4  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
  9664  0115E6  0E00               	movlw	0
  9665  0115E8  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;tcp.c: 249: sum += ((uint16_t) ipv4Header.source.address[2] << 8) | (ipv4Header.source.
      +                          address[3]);
  9669  0115EA  502A               	movf	tcp_calculateHeaderChecksum@ipv4Header+18,w,c
  9670  0115EC  0060  F0A4  F02F   	movff	tcp_calculateHeaderChecksum@ipv4Header+17,??_tcp_calculateHeaderChecksum
  9671  0115F2  6A30               	clrf	(??_tcp_calculateHeaderChecksum+1)& (0+255),c
  9672  0115F4  0060  F0BC  F030   	movff	??_tcp_calculateHeaderChecksum,??_tcp_calculateHeaderChecksum+1
  9673  0115FA  6A2F               	clrf	??_tcp_calculateHeaderChecksum,c
  9674  0115FC  122F               	iorwf	??_tcp_calculateHeaderChecksum,f,c
  9675  0115FE  0E00               	movlw	0
  9676  011600  1230               	iorwf	??_tcp_calculateHeaderChecksum+1,f,c
  9677  011602  502F               	movf	??_tcp_calculateHeaderChecksum,w,c
  9678  011604  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
  9679  011606  5030               	movf	??_tcp_calculateHeaderChecksum+1,w,c
  9680  011608  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
  9681  01160A  0E00               	movlw	0
  9682  01160C  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
  9683  01160E  0E00               	movlw	0
  9684  011610  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
  9685                           
  9686                           ; BSR set to: 0
  9687                           ;tcp.c: 250: sum += ((uint16_t) ipv4Header.destination.address[0] << 8) | (ipv4Header.de
      +                          stination.address[1]);
  9688  011612  502C               	movf	tcp_calculateHeaderChecksum@ipv4Header+20,w,c
  9689  011614  0060  F0AC  F02F   	movff	tcp_calculateHeaderChecksum@ipv4Header+19,??_tcp_calculateHeaderChecksum
  9690  01161A  6A30               	clrf	(??_tcp_calculateHeaderChecksum+1)& (0+255),c
  9691  01161C  0060  F0BC  F030   	movff	??_tcp_calculateHeaderChecksum,??_tcp_calculateHeaderChecksum+1
  9692  011622  6A2F               	clrf	??_tcp_calculateHeaderChecksum,c
  9693  011624  122F               	iorwf	??_tcp_calculateHeaderChecksum,f,c
  9694  011626  0E00               	movlw	0
  9695  011628  1230               	iorwf	??_tcp_calculateHeaderChecksum+1,f,c
  9696  01162A  502F               	movf	??_tcp_calculateHeaderChecksum,w,c
  9697  01162C  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
  9698  01162E  5030               	movf	??_tcp_calculateHeaderChecksum+1,w,c
  9699  011630  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
  9700  011632  0E00               	movlw	0
  9701  011634  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
  9702  011636  0E00               	movlw	0
  9703  011638  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
  9704                           
  9705                           ; BSR set to: 0
  9706                           ;tcp.c: 251: sum += ((uint16_t) ipv4Header.destination.address[2] << 8) | (ipv4Header.de
      +                          stination.address[3]);
  9707  01163A  502E               	movf	tcp_calculateHeaderChecksum@ipv4Header+22,w,c
  9708  01163C  0060  F0B4  F02F   	movff	tcp_calculateHeaderChecksum@ipv4Header+21,??_tcp_calculateHeaderChecksum
  9709  011642  6A30               	clrf	(??_tcp_calculateHeaderChecksum+1)& (0+255),c
  9710  011644  0060  F0BC  F030   	movff	??_tcp_calculateHeaderChecksum,??_tcp_calculateHeaderChecksum+1
  9711  01164A  6A2F               	clrf	??_tcp_calculateHeaderChecksum,c
  9712  01164C  122F               	iorwf	??_tcp_calculateHeaderChecksum,f,c
  9713  01164E  0E00               	movlw	0
  9714  011650  1230               	iorwf	??_tcp_calculateHeaderChecksum+1,f,c
  9715  011652  502F               	movf	??_tcp_calculateHeaderChecksum,w,c
  9716  011654  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
  9717  011656  5030               	movf	??_tcp_calculateHeaderChecksum+1,w,c
  9718  011658  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
  9719  01165A  0E00               	movlw	0
  9720  01165C  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
  9721  01165E  0E00               	movlw	0
  9722  011660  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;tcp.c: 252: sum += ipv4Header.protocol;
  9726  011662  5024               	movf	tcp_calculateHeaderChecksum@ipv4Header+12,w,c
  9727  011664  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
  9728  011666  0E00               	movlw	0
  9729  011668  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
  9730  01166A  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
  9731  01166C  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
  9732                           
  9733                           ; BSR set to: 0
  9734                           ;tcp.c: 253: sum += 20;
  9735  01166E  0E14               	movlw	20
  9736  011670  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
  9737  011672  0E00               	movlw	0
  9738  011674  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
  9739  011676  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
  9740  011678  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;tcp.c: 256: sum += (tcpHeader->srcPort);
  9744  01167A  0060  F05B  FFD9   	movff	tcp_calculateHeaderChecksum@tcpHeader,16345
  9745  011680  0060  F05F  FFDA   	movff	tcp_calculateHeaderChecksum@tcpHeader+1,16346
  9746  011686  006F FF78  F02F    	movff	16350,??_tcp_calculateHeaderChecksum
  9747  01168C  006F FF74  F030    	movff	16349,??_tcp_calculateHeaderChecksum+1
  9748  011692  502F               	movf	??_tcp_calculateHeaderChecksum,w,c
  9749  011694  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
  9750  011696  5030               	movf	??_tcp_calculateHeaderChecksum+1,w,c
  9751  011698  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
  9752  01169A  0E00               	movlw	0
  9753  01169C  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
  9754  01169E  0E00               	movlw	0
  9755  0116A0  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
  9756                           
  9757                           ; BSR set to: 0
  9758                           ;tcp.c: 257: sum += (tcpHeader->dstPort);
  9759  0116A2  EE20 F002          	lfsr	2,2
  9760  0116A6  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
  9761  0116A8  26D9               	addwf	16345,f,c
  9762  0116AA  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
  9763  0116AC  22DA               	addwfc	16346,f,c
  9764  0116AE  006F FF78  F02F    	movff	16350,??_tcp_calculateHeaderChecksum
  9765  0116B4  006F FF74  F030    	movff	16349,??_tcp_calculateHeaderChecksum+1
  9766  0116BA  502F               	movf	??_tcp_calculateHeaderChecksum,w,c
  9767  0116BC  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
  9768  0116BE  5030               	movf	??_tcp_calculateHeaderChecksum+1,w,c
  9769  0116C0  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
  9770  0116C2  0E00               	movlw	0
  9771  0116C4  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
  9772  0116C6  0E00               	movlw	0
  9773  0116C8  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
  9774                           
  9775                           ; BSR set to: 0
  9776                           ;tcp.c: 258: sum += (tcpHeader->seqNumber)&0x0000ffff;
  9777  0116CA  EE20 F004          	lfsr	2,4
  9778  0116CE  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
  9779  0116D0  26D9               	addwf	16345,f,c
  9780  0116D2  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
  9781  0116D4  22DA               	addwfc	16346,f,c
  9782  0116D6  0EFF               	movlw	255
  9783  0116D8  14DE               	andwf	16350,w,c
  9784  0116DA  6E2F               	movwf	??_tcp_calculateHeaderChecksum& (0+255),c
  9785  0116DC  0EFF               	movlw	255
  9786  0116DE  14DE               	andwf	16350,w,c
  9787  0116E0  6E30               	movwf	(??_tcp_calculateHeaderChecksum+1)& (0+255),c
  9788  0116E2  0E00               	movlw	0
  9789  0116E4  14DE               	andwf	16350,w,c
  9790  0116E6  6E31               	movwf	(??_tcp_calculateHeaderChecksum+2)& (0+255),c
  9791  0116E8  0E00               	movlw	0
  9792  0116EA  14DE               	andwf	16350,w,c
  9793  0116EC  6E32               	movwf	(??_tcp_calculateHeaderChecksum+3)& (0+255),c
  9794  0116EE  502F               	movf	??_tcp_calculateHeaderChecksum,w,c
  9795  0116F0  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
  9796  0116F2  5030               	movf	??_tcp_calculateHeaderChecksum+1,w,c
  9797  0116F4  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
  9798  0116F6  5031               	movf	??_tcp_calculateHeaderChecksum+2,w,c
  9799  0116F8  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
  9800  0116FA  5032               	movf	??_tcp_calculateHeaderChecksum+3,w,c
  9801  0116FC  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;tcp.c: 259: sum += (uint16_t) (((tcpHeader->seqNumber)&0xffff0000) >> 16);
  9805  0116FE  EE20 F004          	lfsr	2,4
  9806  011702  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
  9807  011704  26D9               	addwf	16345,f,c
  9808  011706  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
  9809  011708  22DA               	addwfc	16346,f,c
  9810  01170A  0E00               	movlw	0
  9811  01170C  14DE               	andwf	16350,w,c
  9812  01170E  6E2F               	movwf	??_tcp_calculateHeaderChecksum& (0+255),c
  9813  011710  0E00               	movlw	0
  9814  011712  14DE               	andwf	16350,w,c
  9815  011714  6E30               	movwf	(??_tcp_calculateHeaderChecksum+1)& (0+255),c
  9816  011716  0EFF               	movlw	255
  9817  011718  14DE               	andwf	16350,w,c
  9818  01171A  6E31               	movwf	(??_tcp_calculateHeaderChecksum+2)& (0+255),c
  9819  01171C  0EFF               	movlw	255
  9820  01171E  14DE               	andwf	16350,w,c
  9821  011720  6E32               	movwf	(??_tcp_calculateHeaderChecksum+3)& (0+255),c
  9822  011722  0E11               	movlw	17
  9823  011724  D005               	goto	u11790
  9824  011726                     u11795:
  9825  011726  90D8               	bcf	16344,0,c
  9826  011728  3232               	rrcf	??_tcp_calculateHeaderChecksum+3,f,c
  9827  01172A  3231               	rrcf	??_tcp_calculateHeaderChecksum+2,f,c
  9828  01172C  3230               	rrcf	??_tcp_calculateHeaderChecksum+1,f,c
  9829  01172E  322F               	rrcf	??_tcp_calculateHeaderChecksum,f,c
  9830  011730                     u11790:
  9831  011730  2EE8               	decfsz	16360,f,c
  9832  011732  D7F9               	goto	u11795
  9833  011734  502F               	movf	??_tcp_calculateHeaderChecksum,w,c
  9834  011736  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
  9835  011738  5030               	movf	??_tcp_calculateHeaderChecksum+1,w,c
  9836  01173A  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
  9837  01173C  0E00               	movlw	0
  9838  01173E  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
  9839  011740  0E00               	movlw	0
  9840  011742  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
  9841                           
  9842                           ; BSR set to: 0
  9843                           ;tcp.c: 260: sum += (tcpHeader->ackNumber)&0x0000ffff;
  9844  011744  EE20 F008          	lfsr	2,8
  9845  011748  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
  9846  01174A  26D9               	addwf	16345,f,c
  9847  01174C  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
  9848  01174E  22DA               	addwfc	16346,f,c
  9849  011750  0EFF               	movlw	255
  9850  011752  14DE               	andwf	16350,w,c
  9851  011754  6E2F               	movwf	??_tcp_calculateHeaderChecksum& (0+255),c
  9852  011756  0EFF               	movlw	255
  9853  011758  14DE               	andwf	16350,w,c
  9854  01175A  6E30               	movwf	(??_tcp_calculateHeaderChecksum+1)& (0+255),c
  9855  01175C  0E00               	movlw	0
  9856  01175E  14DE               	andwf	16350,w,c
  9857  011760  6E31               	movwf	(??_tcp_calculateHeaderChecksum+2)& (0+255),c
  9858  011762  0E00               	movlw	0
  9859  011764  14DE               	andwf	16350,w,c
  9860  011766  6E32               	movwf	(??_tcp_calculateHeaderChecksum+3)& (0+255),c
  9861  011768  502F               	movf	??_tcp_calculateHeaderChecksum,w,c
  9862  01176A  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
  9863  01176C  5030               	movf	??_tcp_calculateHeaderChecksum+1,w,c
  9864  01176E  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
  9865  011770  5031               	movf	??_tcp_calculateHeaderChecksum+2,w,c
  9866  011772  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
  9867  011774  5032               	movf	??_tcp_calculateHeaderChecksum+3,w,c
  9868  011776  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;tcp.c: 261: sum += (uint16_t) (((tcpHeader->ackNumber)&0xffff0000) >> 16);
  9872  011778  EE20 F008          	lfsr	2,8
  9873  01177C  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
  9874  01177E  26D9               	addwf	16345,f,c
  9875  011780  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
  9876  011782  22DA               	addwfc	16346,f,c
  9877  011784  0E00               	movlw	0
  9878  011786  14DE               	andwf	16350,w,c
  9879  011788  6E2F               	movwf	??_tcp_calculateHeaderChecksum& (0+255),c
  9880  01178A  0E00               	movlw	0
  9881  01178C  14DE               	andwf	16350,w,c
  9882  01178E  6E30               	movwf	(??_tcp_calculateHeaderChecksum+1)& (0+255),c
  9883  011790  0EFF               	movlw	255
  9884  011792  14DE               	andwf	16350,w,c
  9885  011794  6E31               	movwf	(??_tcp_calculateHeaderChecksum+2)& (0+255),c
  9886  011796  0EFF               	movlw	255
  9887  011798  14DE               	andwf	16350,w,c
  9888  01179A  6E32               	movwf	(??_tcp_calculateHeaderChecksum+3)& (0+255),c
  9889  01179C  0E11               	movlw	17
  9890  01179E  D005               	goto	u11800
  9891  0117A0                     u11805:
  9892  0117A0  90D8               	bcf	16344,0,c
  9893  0117A2  3232               	rrcf	??_tcp_calculateHeaderChecksum+3,f,c
  9894  0117A4  3231               	rrcf	??_tcp_calculateHeaderChecksum+2,f,c
  9895  0117A6  3230               	rrcf	??_tcp_calculateHeaderChecksum+1,f,c
  9896  0117A8  322F               	rrcf	??_tcp_calculateHeaderChecksum,f,c
  9897  0117AA                     u11800:
  9898  0117AA  2EE8               	decfsz	16360,f,c
  9899  0117AC  D7F9               	goto	u11805
  9900  0117AE  502F               	movf	??_tcp_calculateHeaderChecksum,w,c
  9901  0117B0  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
  9902  0117B2  5030               	movf	??_tcp_calculateHeaderChecksum+1,w,c
  9903  0117B4  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
  9904  0117B6  0E00               	movlw	0
  9905  0117B8  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
  9906  0117BA  0E00               	movlw	0
  9907  0117BC  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
  9908                           
  9909                           ; BSR set to: 0
  9910                           ;tcp.c: 262: sum += (((uint16_t) tcpHeader->dataOffset & 0x0f) << 12) |
  9911                           ;tcp.c: 263: (tcpHeader->flags.NS ? 0x100 : 0x00) |
  9912                           ;tcp.c: 264: (tcpHeader->flags.CWR ? 0x80 : 0x00) |
  9913                           ;tcp.c: 265: (tcpHeader->flags.ECE ? 0x40 : 0x00) |
  9914                           ;tcp.c: 266: (tcpHeader->flags.URG ? 0x20 : 0x00) |
  9915                           ;tcp.c: 267: (tcpHeader->flags.ACK ? 0x10 : 0x00) |
  9916                           ;tcp.c: 268: (tcpHeader->flags.PSH ? 0x08 : 0x00) |
  9917                           ;tcp.c: 269: (tcpHeader->flags.RST ? 0x04 : 0x00) |
  9918                           ;tcp.c: 270: (tcpHeader->flags.SYN ? 0x02 : 0x00) |
  9919                           ;tcp.c: 271: (tcpHeader->flags.FIN ? 0x01 : 0x00);
  9920  0117BE  EE20 F00D          	lfsr	2,13
  9921  0117C2  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
  9922  0117C4  26D9               	addwf	16345,f,c
  9923  0117C6  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
  9924  0117C8  22DA               	addwfc	16346,f,c
  9925  0117CA  BEDF               	btfsc	16351,7,c
  9926  0117CC  D004               	goto	l1437
  9927                           
  9928                           ; BSR set to: 0
  9929  0117CE  0E00               	movlw	0
  9930  0117D0  6F62               	movwf	(_tcp_calculateHeaderChecksum$4887+1)& (0+255),b
  9931  0117D2  0E00               	movlw	0
  9932  0117D4  D003               	goto	L12
  9933  0117D6                     l1437:
  9934                           
  9935                           ; BSR set to: 0
  9936                           
  9937                           ; BSR set to: 0
  9938  0117D6  0E00               	movlw	0
  9939  0117D8  6F62               	movwf	(_tcp_calculateHeaderChecksum$4887+1)& (0+255),b
  9940  0117DA  0E02               	movlw	2
  9941  0117DC                     L12:
  9942  0117DC  6F61               	movwf	_tcp_calculateHeaderChecksum$4887& (0+255),b
  9943                           
  9944                           ; BSR set to: 0
  9945                           
  9946                           ; BSR set to: 0
  9947  0117DE  EE20 F00D          	lfsr	2,13
  9948  0117E2  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
  9949  0117E4  26D9               	addwf	16345,f,c
  9950  0117E6  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
  9951  0117E8  22DA               	addwfc	16346,f,c
  9952  0117EA  BCDF               	btfsc	16351,6,c
  9953  0117EC  D004               	goto	l1441
  9954                           
  9955                           ; BSR set to: 0
  9956  0117EE  0E00               	movlw	0
  9957  0117F0  6F64               	movwf	(_tcp_calculateHeaderChecksum$4888+1)& (0+255),b
  9958  0117F2  0E00               	movlw	0
  9959  0117F4  D003               	goto	L13
  9960  0117F6                     l1441:
  9961                           
  9962                           ; BSR set to: 0
  9963                           
  9964                           ; BSR set to: 0
  9965  0117F6  0E00               	movlw	0
  9966  0117F8  6F64               	movwf	(_tcp_calculateHeaderChecksum$4888+1)& (0+255),b
  9967  0117FA  0E04               	movlw	4
  9968  0117FC                     L13:
  9969  0117FC  6F63               	movwf	_tcp_calculateHeaderChecksum$4888& (0+255),b
  9970                           
  9971                           ; BSR set to: 0
  9972                           
  9973                           ; BSR set to: 0
  9974  0117FE  EE20 F00D          	lfsr	2,13
  9975  011802  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
  9976  011804  26D9               	addwf	16345,f,c
  9977  011806  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
  9978  011808  22DA               	addwfc	16346,f,c
  9979  01180A  BADF               	btfsc	16351,5,c
  9980  01180C  D004               	goto	l1445
  9981                           
  9982                           ; BSR set to: 0
  9983  01180E  0E00               	movlw	0
  9984  011810  6F66               	movwf	(_tcp_calculateHeaderChecksum$4889+1)& (0+255),b
  9985  011812  0E00               	movlw	0
  9986  011814  D003               	goto	L14
  9987  011816                     l1445:
  9988                           
  9989                           ; BSR set to: 0
  9990                           
  9991                           ; BSR set to: 0
  9992  011816  0E00               	movlw	0
  9993  011818  6F66               	movwf	(_tcp_calculateHeaderChecksum$4889+1)& (0+255),b
  9994  01181A  0E08               	movlw	8
  9995  01181C                     L14:
  9996  01181C  6F65               	movwf	_tcp_calculateHeaderChecksum$4889& (0+255),b
  9997                           
  9998                           ; BSR set to: 0
  9999                           
 10000                           ; BSR set to: 0
 10001  01181E  EE20 F00D          	lfsr	2,13
 10002  011822  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
 10003  011824  26D9               	addwf	16345,f,c
 10004  011826  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
 10005  011828  22DA               	addwfc	16346,f,c
 10006  01182A  B8DF               	btfsc	16351,4,c
 10007  01182C  D004               	goto	l1449
 10008                           
 10009                           ; BSR set to: 0
 10010  01182E  0E00               	movlw	0
 10011  011830  6F68               	movwf	(_tcp_calculateHeaderChecksum$4890+1)& (0+255),b
 10012  011832  0E00               	movlw	0
 10013  011834  D003               	goto	L15
 10014  011836                     l1449:
 10015                           
 10016                           ; BSR set to: 0
 10017                           
 10018                           ; BSR set to: 0
 10019  011836  0E00               	movlw	0
 10020  011838  6F68               	movwf	(_tcp_calculateHeaderChecksum$4890+1)& (0+255),b
 10021  01183A  0E10               	movlw	16
 10022  01183C                     L15:
 10023  01183C  6F67               	movwf	_tcp_calculateHeaderChecksum$4890& (0+255),b
 10024                           
 10025                           ; BSR set to: 0
 10026                           
 10027                           ; BSR set to: 0
 10028  01183E  EE20 F00D          	lfsr	2,13
 10029  011842  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
 10030  011844  26D9               	addwf	16345,f,c
 10031  011846  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
 10032  011848  22DA               	addwfc	16346,f,c
 10033  01184A  B6DF               	btfsc	16351,3,c
 10034  01184C  D004               	goto	l1453
 10035                           
 10036                           ; BSR set to: 0
 10037  01184E  0E00               	movlw	0
 10038  011850  6F6A               	movwf	(_tcp_calculateHeaderChecksum$4891+1)& (0+255),b
 10039  011852  0E00               	movlw	0
 10040  011854  D003               	goto	L16
 10041  011856                     l1453:
 10042                           
 10043                           ; BSR set to: 0
 10044                           
 10045                           ; BSR set to: 0
 10046  011856  0E00               	movlw	0
 10047  011858  6F6A               	movwf	(_tcp_calculateHeaderChecksum$4891+1)& (0+255),b
 10048  01185A  0E20               	movlw	32
 10049  01185C                     L16:
 10050  01185C  6F69               	movwf	_tcp_calculateHeaderChecksum$4891& (0+255),b
 10051                           
 10052                           ; BSR set to: 0
 10053                           
 10054                           ; BSR set to: 0
 10055  01185E  EE20 F00D          	lfsr	2,13
 10056  011862  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
 10057  011864  26D9               	addwf	16345,f,c
 10058  011866  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
 10059  011868  22DA               	addwfc	16346,f,c
 10060  01186A  B4DF               	btfsc	16351,2,c
 10061  01186C  D004               	goto	l1457
 10062                           
 10063                           ; BSR set to: 0
 10064  01186E  0E00               	movlw	0
 10065  011870  6F6C               	movwf	(_tcp_calculateHeaderChecksum$4892+1)& (0+255),b
 10066  011872  0E00               	movlw	0
 10067  011874  D003               	goto	L17
 10068  011876                     l1457:
 10069                           
 10070                           ; BSR set to: 0
 10071                           
 10072                           ; BSR set to: 0
 10073  011876  0E00               	movlw	0
 10074  011878  6F6C               	movwf	(_tcp_calculateHeaderChecksum$4892+1)& (0+255),b
 10075  01187A  0E40               	movlw	64
 10076  01187C                     L17:
 10077  01187C  6F6B               	movwf	_tcp_calculateHeaderChecksum$4892& (0+255),b
 10078                           
 10079                           ; BSR set to: 0
 10080                           
 10081                           ; BSR set to: 0
 10082  01187E  EE20 F00D          	lfsr	2,13
 10083  011882  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
 10084  011884  26D9               	addwf	16345,f,c
 10085  011886  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
 10086  011888  22DA               	addwfc	16346,f,c
 10087  01188A  B2DF               	btfsc	16351,1,c
 10088  01188C  D004               	goto	l1461
 10089                           
 10090                           ; BSR set to: 0
 10091  01188E  0E00               	movlw	0
 10092  011890  6F6E               	movwf	(_tcp_calculateHeaderChecksum$4893+1)& (0+255),b
 10093  011892  0E00               	movlw	0
 10094  011894  D003               	goto	L18
 10095  011896                     l1461:
 10096                           
 10097                           ; BSR set to: 0
 10098                           
 10099                           ; BSR set to: 0
 10100  011896  0E00               	movlw	0
 10101  011898  6F6E               	movwf	(_tcp_calculateHeaderChecksum$4893+1)& (0+255),b
 10102  01189A  0E80               	movlw	128
 10103  01189C                     L18:
 10104  01189C  6F6D               	movwf	_tcp_calculateHeaderChecksum$4893& (0+255),b
 10105                           
 10106                           ; BSR set to: 0
 10107                           
 10108                           ; BSR set to: 0
 10109  01189E  EE20 F00D          	lfsr	2,13
 10110  0118A2  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
 10111  0118A4  26D9               	addwf	16345,f,c
 10112  0118A6  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
 10113  0118A8  22DA               	addwfc	16346,f,c
 10114  0118AA  B0DF               	btfsc	16351,0,c
 10115  0118AC  D002               	goto	l1465
 10116                           
 10117                           ; BSR set to: 0
 10118  0118AE  0E00               	movlw	0
 10119  0118B0  D001               	goto	L19
 10120  0118B2                     l1465:
 10121                           
 10122                           ; BSR set to: 0
 10123                           
 10124                           ; BSR set to: 0
 10125  0118B2  0E01               	movlw	1
 10126  0118B4                     L19:
 10127  0118B4  6F70               	movwf	(_tcp_calculateHeaderChecksum$4894+1)& (0+255),b
 10128  0118B6  0E00               	movlw	0
 10129  0118B8  6F6F               	movwf	_tcp_calculateHeaderChecksum$4894& (0+255),b
 10130                           
 10131                           ; BSR set to: 0
 10132                           
 10133                           ; BSR set to: 0
 10134  0118BA  EE20 F00C          	lfsr	2,12
 10135  0118BE  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
 10136  0118C0  26D9               	addwf	16345,f,c
 10137  0118C2  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
 10138  0118C4  22DA               	addwfc	16346,f,c
 10139  0118C6  50DF               	movf	16351,w,c
 10140  0118C8  0B0F               	andlw	15
 10141  0118CA  6E2F               	movwf	??_tcp_calculateHeaderChecksum& (0+255),c
 10142  0118CC  6A30               	clrf	(??_tcp_calculateHeaderChecksum+1)& (0+255),c
 10143  0118CE  0E0C               	movlw	12
 10144  0118D0                     u11895:
 10145  0118D0  90D8               	bcf	16344,0,c
 10146  0118D2  362F               	rlcf	??_tcp_calculateHeaderChecksum,f,c
 10147  0118D4  3630               	rlcf	??_tcp_calculateHeaderChecksum+1,f,c
 10148  0118D6  2EE8               	decfsz	16360,f,c
 10149  0118D8  D7FB               	goto	u11895
 10150  0118DA  EE20 F00E          	lfsr	2,14
 10151  0118DE  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
 10152  0118E0  26D9               	addwf	16345,f,c
 10153  0118E2  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
 10154  0118E4  22DA               	addwfc	16346,f,c
 10155  0118E6  A0DF               	btfss	16351,0,c
 10156  0118E8  D003               	goto	u11900
 10157  0118EA  6A31               	clrf	(??_tcp_calculateHeaderChecksum+2)& (0+255),c
 10158  0118EC  2A31               	incf	(??_tcp_calculateHeaderChecksum+2)& (0+255),f,c
 10159  0118EE  D001               	goto	u11908
 10160  0118F0                     u11900:
 10161  0118F0  6A31               	clrf	(??_tcp_calculateHeaderChecksum+2)& (0+255),c
 10162  0118F2                     u11908:
 10163  0118F2  5031               	movf	??_tcp_calculateHeaderChecksum+2,w,c
 10164  0118F4  122F               	iorwf	??_tcp_calculateHeaderChecksum,f,c
 10165  0118F6  0E00               	movlw	0
 10166  0118F8  1230               	iorwf	??_tcp_calculateHeaderChecksum+1,f,c
 10167  0118FA  0100               	movlb	0	; () banked
 10168  0118FC  516F               	movf	_tcp_calculateHeaderChecksum$4894& (0+255),w,b
 10169  0118FE  122F               	iorwf	??_tcp_calculateHeaderChecksum,f,c
 10170  011900  5170               	movf	(_tcp_calculateHeaderChecksum$4894+1)& (0+255),w,b
 10171  011902  1230               	iorwf	??_tcp_calculateHeaderChecksum+1,f,c
 10172  011904  516D               	movf	_tcp_calculateHeaderChecksum$4893& (0+255),w,b
 10173  011906  122F               	iorwf	??_tcp_calculateHeaderChecksum,f,c
 10174  011908  516E               	movf	(_tcp_calculateHeaderChecksum$4893+1)& (0+255),w,b
 10175  01190A  1230               	iorwf	??_tcp_calculateHeaderChecksum+1,f,c
 10176  01190C  516B               	movf	_tcp_calculateHeaderChecksum$4892& (0+255),w,b
 10177  01190E  122F               	iorwf	??_tcp_calculateHeaderChecksum,f,c
 10178  011910  516C               	movf	(_tcp_calculateHeaderChecksum$4892+1)& (0+255),w,b
 10179  011912  1230               	iorwf	??_tcp_calculateHeaderChecksum+1,f,c
 10180  011914  5169               	movf	_tcp_calculateHeaderChecksum$4891& (0+255),w,b
 10181  011916  122F               	iorwf	??_tcp_calculateHeaderChecksum,f,c
 10182  011918  516A               	movf	(_tcp_calculateHeaderChecksum$4891+1)& (0+255),w,b
 10183  01191A  1230               	iorwf	??_tcp_calculateHeaderChecksum+1,f,c
 10184  01191C  5167               	movf	_tcp_calculateHeaderChecksum$4890& (0+255),w,b
 10185  01191E  122F               	iorwf	??_tcp_calculateHeaderChecksum,f,c
 10186  011920  5168               	movf	(_tcp_calculateHeaderChecksum$4890+1)& (0+255),w,b
 10187  011922  1230               	iorwf	??_tcp_calculateHeaderChecksum+1,f,c
 10188  011924  5165               	movf	_tcp_calculateHeaderChecksum$4889& (0+255),w,b
 10189  011926  122F               	iorwf	??_tcp_calculateHeaderChecksum,f,c
 10190  011928  5166               	movf	(_tcp_calculateHeaderChecksum$4889+1)& (0+255),w,b
 10191  01192A  1230               	iorwf	??_tcp_calculateHeaderChecksum+1,f,c
 10192  01192C  5163               	movf	_tcp_calculateHeaderChecksum$4888& (0+255),w,b
 10193  01192E  122F               	iorwf	??_tcp_calculateHeaderChecksum,f,c
 10194  011930  5164               	movf	(_tcp_calculateHeaderChecksum$4888+1)& (0+255),w,b
 10195  011932  1230               	iorwf	??_tcp_calculateHeaderChecksum+1,f,c
 10196  011934  5161               	movf	_tcp_calculateHeaderChecksum$4887& (0+255),w,b
 10197  011936  122F               	iorwf	??_tcp_calculateHeaderChecksum,f,c
 10198  011938  5162               	movf	(_tcp_calculateHeaderChecksum$4887+1)& (0+255),w,b
 10199  01193A  1230               	iorwf	??_tcp_calculateHeaderChecksum+1,f,c
 10200  01193C  502F               	movf	??_tcp_calculateHeaderChecksum,w,c
 10201  01193E  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
 10202  011940  5030               	movf	??_tcp_calculateHeaderChecksum+1,w,c
 10203  011942  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
 10204  011944  0E00               	movlw	0
 10205  011946  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
 10206  011948  0E00               	movlw	0
 10207  01194A  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;tcp.c: 272: sum += (tcpHeader->windowSize);
 10211  01194C  EE20 F00F          	lfsr	2,15
 10212  011950  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
 10213  011952  26D9               	addwf	16345,f,c
 10214  011954  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
 10215  011956  22DA               	addwfc	16346,f,c
 10216  011958  006F FF78  F02F    	movff	16350,??_tcp_calculateHeaderChecksum
 10217  01195E  006F FF74  F030    	movff	16349,??_tcp_calculateHeaderChecksum+1
 10218  011964  502F               	movf	??_tcp_calculateHeaderChecksum,w,c
 10219  011966  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
 10220  011968  5030               	movf	??_tcp_calculateHeaderChecksum+1,w,c
 10221  01196A  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
 10222  01196C  0E00               	movlw	0
 10223  01196E  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
 10224  011970  0E00               	movlw	0
 10225  011972  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;tcp.c: 273: sum += (tcpHeader->urgentPointer);
 10229  011974  EE20 F013          	lfsr	2,19
 10230  011978  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
 10231  01197A  26D9               	addwf	16345,f,c
 10232  01197C  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
 10233  01197E  22DA               	addwfc	16346,f,c
 10234  011980  006F FF78  F02F    	movff	16350,??_tcp_calculateHeaderChecksum
 10235  011986  006F FF74  F030    	movff	16349,??_tcp_calculateHeaderChecksum+1
 10236  01198C  502F               	movf	??_tcp_calculateHeaderChecksum,w,c
 10237  01198E  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
 10238  011990  5030               	movf	??_tcp_calculateHeaderChecksum+1,w,c
 10239  011992  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
 10240  011994  0E00               	movlw	0
 10241  011996  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
 10242  011998  0E00               	movlw	0
 10243  01199A  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
 10244                           
 10245                           ; BSR set to: 0
 10246                           ;tcp.c: 276: uint8_t carry = (sum & 0xffff0000) >> 16;
 10247  01199C  0E00               	movlw	0
 10248  01199E  1571               	andwf	tcp_calculateHeaderChecksum@sum& (0+255),w,b
 10249  0119A0  6E2F               	movwf	??_tcp_calculateHeaderChecksum& (0+255),c
 10250  0119A2  0E00               	movlw	0
 10251  0119A4  1572               	andwf	(tcp_calculateHeaderChecksum@sum+1)& (0+255),w,b
 10252  0119A6  6E30               	movwf	(??_tcp_calculateHeaderChecksum+1)& (0+255),c
 10253  0119A8  0EFF               	movlw	255
 10254  0119AA  1573               	andwf	(tcp_calculateHeaderChecksum@sum+2)& (0+255),w,b
 10255  0119AC  6E31               	movwf	(??_tcp_calculateHeaderChecksum+2)& (0+255),c
 10256  0119AE  0EFF               	movlw	255
 10257  0119B0  1574               	andwf	(tcp_calculateHeaderChecksum@sum+3)& (0+255),w,b
 10258  0119B2  6E32               	movwf	(??_tcp_calculateHeaderChecksum+3)& (0+255),c
 10259  0119B4  0E11               	movlw	17
 10260  0119B6  D005               	goto	u11910
 10261  0119B8                     u11915:
 10262  0119B8  90D8               	bcf	16344,0,c
 10263  0119BA  3232               	rrcf	??_tcp_calculateHeaderChecksum+3,f,c
 10264  0119BC  3231               	rrcf	??_tcp_calculateHeaderChecksum+2,f,c
 10265  0119BE  3230               	rrcf	??_tcp_calculateHeaderChecksum+1,f,c
 10266  0119C0  322F               	rrcf	??_tcp_calculateHeaderChecksum,f,c
 10267  0119C2                     u11910:
 10268  0119C2  2EE8               	decfsz	16360,f,c
 10269  0119C4  D7F9               	goto	u11915
 10270  0119C6  502F               	movf	??_tcp_calculateHeaderChecksum,w,c
 10271  0119C8  6F60               	movwf	tcp_calculateHeaderChecksum@carry& (0+255),b
 10272                           
 10273                           ; BSR set to: 0
 10274                           ;tcp.c: 277: sum &= 0xffff;
 10275  0119CA  0EFF               	movlw	255
 10276  0119CC  1771               	andwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
 10277  0119CE  0EFF               	movlw	255
 10278  0119D0  1772               	andwf	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
 10279  0119D2  0E00               	movlw	0
 10280  0119D4  1773               	andwf	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
 10281  0119D6  0E00               	movlw	0
 10282  0119D8  1774               	andwf	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
 10283                           
 10284                           ; BSR set to: 0
 10285                           ;tcp.c: 278: sum += carry;
 10286  0119DA  5160               	movf	tcp_calculateHeaderChecksum@carry& (0+255),w,b
 10287  0119DC  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
 10288  0119DE  0E00               	movlw	0
 10289  0119E0  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
 10290  0119E2  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
 10291  0119E4  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
 10292                           
 10293                           ; BSR set to: 0
 10294                           ;tcp.c: 279: if (sum > 0xffff) {
 10295  0119E6  5174               	movf	(tcp_calculateHeaderChecksum@sum+3)& (0+255),w,b
 10296  0119E8  E103               	bnz	u11920
 10297  0119EA  0573               	decf	(tcp_calculateHeaderChecksum@sum+2)& (0+255),w,b
 10298  0119EC  A0D8               	btfss	16344,0,c
 10299  0119EE  D025               	goto	l1468
 10300  0119F0                     u11920:
 10301                           
 10302                           ; BSR set to: 0
 10303                           ;tcp.c: 280: sum += ((sum & 0xffff0000) >> 16);
 10304  0119F0  0E00               	movlw	0
 10305  0119F2  1571               	andwf	tcp_calculateHeaderChecksum@sum& (0+255),w,b
 10306  0119F4  6E2F               	movwf	??_tcp_calculateHeaderChecksum& (0+255),c
 10307  0119F6  0E00               	movlw	0
 10308  0119F8  1572               	andwf	(tcp_calculateHeaderChecksum@sum+1)& (0+255),w,b
 10309  0119FA  6E30               	movwf	(??_tcp_calculateHeaderChecksum+1)& (0+255),c
 10310  0119FC  0EFF               	movlw	255
 10311  0119FE  1573               	andwf	(tcp_calculateHeaderChecksum@sum+2)& (0+255),w,b
 10312  011A00  6E31               	movwf	(??_tcp_calculateHeaderChecksum+2)& (0+255),c
 10313  011A02  0EFF               	movlw	255
 10314  011A04  1574               	andwf	(tcp_calculateHeaderChecksum@sum+3)& (0+255),w,b
 10315  011A06  6E32               	movwf	(??_tcp_calculateHeaderChecksum+3)& (0+255),c
 10316  011A08  0E11               	movlw	17
 10317  011A0A  D005               	goto	u11930
 10318  011A0C                     u11935:
 10319  011A0C  90D8               	bcf	16344,0,c
 10320  011A0E  3232               	rrcf	??_tcp_calculateHeaderChecksum+3,f,c
 10321  011A10  3231               	rrcf	??_tcp_calculateHeaderChecksum+2,f,c
 10322  011A12  3230               	rrcf	??_tcp_calculateHeaderChecksum+1,f,c
 10323  011A14  322F               	rrcf	??_tcp_calculateHeaderChecksum,f,c
 10324  011A16                     u11930:
 10325  011A16  2EE8               	decfsz	16360,f,c
 10326  011A18  D7F9               	goto	u11935
 10327  011A1A  502F               	movf	??_tcp_calculateHeaderChecksum,w,c
 10328  011A1C  2771               	addwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
 10329  011A1E  5030               	movf	??_tcp_calculateHeaderChecksum+1,w,c
 10330  011A20  2372               	addwfc	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
 10331  011A22  5031               	movf	??_tcp_calculateHeaderChecksum+2,w,c
 10332  011A24  2373               	addwfc	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
 10333  011A26  5032               	movf	??_tcp_calculateHeaderChecksum+3,w,c
 10334  011A28  2374               	addwfc	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
 10335                           
 10336                           ;tcp.c: 281: sum &= 0xffff;
 10337  011A2A  0EFF               	movlw	255
 10338  011A2C  1771               	andwf	tcp_calculateHeaderChecksum@sum& (0+255),f,b
 10339  011A2E  0EFF               	movlw	255
 10340  011A30  1772               	andwf	(tcp_calculateHeaderChecksum@sum+1)& (0+255),f,b
 10341  011A32  0E00               	movlw	0
 10342  011A34  1773               	andwf	(tcp_calculateHeaderChecksum@sum+2)& (0+255),f,b
 10343  011A36  0E00               	movlw	0
 10344  011A38  1774               	andwf	(tcp_calculateHeaderChecksum@sum+3)& (0+255),f,b
 10345  011A3A                     l1468:
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;tcp.c: 282: }
 10349                           ;tcp.c: 284: tcpHeader->checksum = ~sum;
 10350                           
 10351                           ; BSR set to: 0
 10352  011A3A  1D71               	comf	tcp_calculateHeaderChecksum@sum& (0+255),w,b
 10353  011A3C  6E2F               	movwf	??_tcp_calculateHeaderChecksum& (0+255),c
 10354  011A3E  1D72               	comf	(tcp_calculateHeaderChecksum@sum+1)& (0+255),w,b
 10355  011A40  6E30               	movwf	(??_tcp_calculateHeaderChecksum+1)& (0+255),c
 10356  011A42  EE20 F011          	lfsr	2,17
 10357  011A46  5016               	movf	tcp_calculateHeaderChecksum@tcpHeader,w,c
 10358  011A48  26D9               	addwf	16345,f,c
 10359  011A4A  5017               	movf	tcp_calculateHeaderChecksum@tcpHeader+1,w,c
 10360  011A4C  22DA               	addwfc	16346,f,c
 10361  011A4E  0060  F0BF  FFDE   	movff	??_tcp_calculateHeaderChecksum,16350
 10362  011A54  0060  F0C3  FFDD   	movff	??_tcp_calculateHeaderChecksum+1,16349
 10363                           
 10364                           ; BSR set to: 0
 10365  011A5A  0012               	return		;funcret
 10366  011A5C                     __end_of_tcp_calculateHeaderChecksum:
 10367                           	opt stack 0
 10368                           
 10369 ;; *************** function _intToString *****************
 10370 ;; Defined at:
 10371 ;;		line 88 in file "src/system/uart.c"
 10372 ;; Parameters:    Size  Location     Type
 10373 ;;  val             4   49[COMRAM] unsigned long 
 10374 ;;  b               1   53[COMRAM] unsigned char 
 10375 ;; Auto vars:     Size  Location     Type
 10376 ;;		None
 10377 ;; Return value:  Size  Location     Type
 10378 ;;                  2   49[COMRAM] PTR unsigned char 
 10379 ;; Registers used:
 10380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10381 ;; Tracked objects:
 10382 ;;		On entry : 0/0
 10383 ;;		On exit  : 0/0
 10384 ;;		Unchanged: 0/0
 10385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10386 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10389 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10390 ;;Total ram usage:        5 bytes
 10391 ;; Hardware stack levels used:    1
 10392 ;; Hardware stack levels required when called:    7
 10393 ;; This function calls:
 10394 ;;		_ltoa
 10395 ;; This function is called by:
 10396 ;;		_ethernet_rxGetNewFrame
 10397 ;;		_handleStackBackgroundTasks
 10398 ;;		_tcp_handleNewPacket
 10399 ;;		_tcp_listen
 10400 ;;		_tcp_sendSYNACK
 10401 ;;		_arpEntryToString
 10402 ;; This function uses a non-reentrant model
 10403 ;;
 10404                           
 10405                           	psect	text28
 10406  01714A                     __ptext28:
 10407                           	opt stack 0
 10408  01714A                     _intToString:
 10409                           	opt stack 22
 10410                           
 10411                           ;uart.c: 89: char static number [10];
 10412                           ;uart.c: 90: ltoa(&number[0], (long) val, b);
 10413                           
 10414                           ; BSR set to: 0
 10415                           ;incstack = 0
 10416  01714A  0EC1               	movlw	low intToString@number
 10417  01714C  0100               	movlb	0	; () banked
 10418  01714E  6F60               	movwf	ltoa@buf& (0+255),b
 10419  017150  0E03               	movlw	high intToString@number
 10420  017152  6F61               	movwf	(ltoa@buf+1)& (0+255),b
 10421  017154  0060  F0C8  F062   	movff	intToString@val,ltoa@val
 10422  01715A  0060  F0CC  F063   	movff	intToString@val+1,ltoa@val+1
 10423  017160  0060  F0D0  F064   	movff	intToString@val+2,ltoa@val+2
 10424  017166  0060  F0D4  F065   	movff	intToString@val+3,ltoa@val+3
 10425  01716C  0060  F0D8  F066   	movff	intToString@b,ltoa@base
 10426  017172  6B67               	clrf	(ltoa@base+1)& (0+255),b
 10427  017174  EC7B  F0B5         	call	_ltoa	;wreg free
 10428                           
 10429                           ;uart.c: 94: return number;
 10430  017178  0EC1               	movlw	low intToString@number
 10431  01717A  6E32               	movwf	?_intToString,c
 10432  01717C  0E03               	movlw	high intToString@number
 10433  01717E  6E33               	movwf	?_intToString+1,c
 10434  017180  0012               	return	
 10435  017182                     __end_of_intToString:
 10436                           	opt stack 0
 10437                           
 10438 ;; *************** function _ltoa *****************
 10439 ;; Defined at:
 10440 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
 10441 ;; Parameters:    Size  Location     Type
 10442 ;;  buf             2    0[BANK0 ] PTR unsigned char 
 10443 ;;		 -> intToString@number(10), 
 10444 ;;  val             4    2[BANK0 ] long 
 10445 ;;  base            2    6[BANK0 ] int 
 10446 ;; Auto vars:     Size  Location     Type
 10447 ;;  cp              2   47[COMRAM] PTR unsigned char 
 10448 ;;		 -> intToString@number(10), 
 10449 ;; Return value:  Size  Location     Type
 10450 ;;                  2    0[BANK0 ] PTR unsigned char 
 10451 ;; Registers used:
 10452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10453 ;; Tracked objects:
 10454 ;;		On entry : 0/0
 10455 ;;		On exit  : 0/0
 10456 ;;		Unchanged: 0/0
 10457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10458 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10461 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10462 ;;Total ram usage:       10 bytes
 10463 ;; Hardware stack levels used:    1
 10464 ;; Hardware stack levels required when called:    6
 10465 ;; This function calls:
 10466 ;;		_ultoa
 10467 ;; This function is called by:
 10468 ;;		_intToString
 10469 ;; This function uses a non-reentrant model
 10470 ;;
 10471                           
 10472                           	psect	text29
 10473  016AF6                     __ptext29:
 10474                           	opt stack 0
 10475  016AF6                     _ltoa:
 10476                           	opt stack 22
 10477                           
 10478                           ;incstack = 0
 10479  016AF6  0060  F180  F030   	movff	ltoa@buf,ltoa@cp
 10480  016AFC  0060  F184  F031   	movff	ltoa@buf+1,ltoa@cp+1
 10481  016B02  0100               	movlb	0	; () banked
 10482  016B04  AF65               	btfss	(ltoa@val+3)& (0+255),7,b
 10483  016B06  D012               	goto	l1918
 10484                           
 10485                           ; BSR set to: 0
 10486  016B08  0060  F183  FFD9   	movff	ltoa@buf,16345
 10487  016B0E  0060  F187  FFDA   	movff	ltoa@buf+1,16346
 10488  016B14  0E2D               	movlw	45
 10489  016B16  6EDF               	movwf	16351,c
 10490                           
 10491                           ; BSR set to: 0
 10492  016B18  4B60               	infsnz	ltoa@buf& (0+255),f,b
 10493  016B1A  2B61               	incf	(ltoa@buf+1)& (0+255),f,b
 10494                           
 10495                           ; BSR set to: 0
 10496  016B1C  1F65               	comf	(ltoa@val+3)& (0+255),f,b
 10497  016B1E  1F64               	comf	(ltoa@val+2)& (0+255),f,b
 10498  016B20  1F63               	comf	(ltoa@val+1)& (0+255),f,b
 10499  016B22  6D62               	negf	ltoa@val& (0+255),b
 10500  016B24  0E00               	movlw	0
 10501  016B26  2363               	addwfc	(ltoa@val+1)& (0+255),f,b
 10502  016B28  2364               	addwfc	(ltoa@val+2)& (0+255),f,b
 10503  016B2A  2365               	addwfc	(ltoa@val+3)& (0+255),f,b
 10504  016B2C                     l1918:
 10505                           
 10506                           ; BSR set to: 0
 10507                           
 10508                           ; BSR set to: 0
 10509  016B2C  0060  F180  F023   	movff	ltoa@buf,ultoa@buf
 10510  016B32  0060  F184  F024   	movff	ltoa@buf+1,ultoa@buf+1
 10511  016B38  0060  F188  F025   	movff	ltoa@val,ultoa@val
 10512  016B3E  0060  F18C  F026   	movff	ltoa@val+1,ultoa@val+1
 10513  016B44  0060  F190  F027   	movff	ltoa@val+2,ultoa@val+2
 10514  016B4A  0060  F194  F028   	movff	ltoa@val+3,ultoa@val+3
 10515  016B50  0060  F198  F029   	movff	ltoa@base,ultoa@base
 10516  016B56  0060  F19C  F02A   	movff	ltoa@base+1,ultoa@base+1
 10517  016B5C  EC93  F0A6         	call	_ultoa	;wreg free
 10518  016B60  0012               	return	
 10519  016B62                     __end_of_ltoa:
 10520                           	opt stack 0
 10521                           
 10522 ;; *************** function _ultoa *****************
 10523 ;; Defined at:
 10524 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
 10525 ;; Parameters:    Size  Location     Type
 10526 ;;  buf             2   34[COMRAM] PTR unsigned char 
 10527 ;;		 -> intToString@number(10), 
 10528 ;;  val             4   36[COMRAM] unsigned long 
 10529 ;;  base            2   40[COMRAM] int 
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;  v               4   42[COMRAM] unsigned long 
 10532 ;;  c               1   46[COMRAM] unsigned char 
 10533 ;; Return value:  Size  Location     Type
 10534 ;;                  2   34[COMRAM] PTR unsigned char 
 10535 ;; Registers used:
 10536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10537 ;; Tracked objects:
 10538 ;;		On entry : 0/0
 10539 ;;		On exit  : 0/0
 10540 ;;		Unchanged: 0/0
 10541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10542 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10543 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10545 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10546 ;;Total ram usage:       13 bytes
 10547 ;; Hardware stack levels used:    1
 10548 ;; Hardware stack levels required when called:    5
 10549 ;; This function calls:
 10550 ;;		___lldiv
 10551 ;;		___llmod
 10552 ;; This function is called by:
 10553 ;;		_ltoa
 10554 ;; This function uses a non-reentrant model
 10555 ;;
 10556                           
 10557                           	psect	text30
 10558  014D26                     __ptext30:
 10559                           	opt stack 0
 10560  014D26                     _ultoa:
 10561                           	opt stack 22
 10562                           
 10563                           ;incstack = 0
 10564  014D26  0060  F094  F02B   	movff	ultoa@val,ultoa@v
 10565  014D2C  0060  F098  F02C   	movff	ultoa@val+1,ultoa@v+1
 10566  014D32  0060  F09C  F02D   	movff	ultoa@val+2,ultoa@v+2
 10567  014D38  0060  F0A0  F02E   	movff	ultoa@val+3,ultoa@v+3
 10568  014D3E  0060  F0AC  F016   	movff	ultoa@v,___lldiv@dividend
 10569  014D44  0060  F0B0  F017   	movff	ultoa@v+1,___lldiv@dividend+1
 10570  014D4A  0060  F0B4  F018   	movff	ultoa@v+2,___lldiv@dividend+2
 10571  014D50  0060  F0B8  F019   	movff	ultoa@v+3,___lldiv@dividend+3
 10572  014D56  0060  F0A4  F01A   	movff	ultoa@base,___lldiv@divisor
 10573  014D5C  0060  F0A8  F01B   	movff	ultoa@base+1,___lldiv@divisor+1
 10574  014D62  0E00               	movlw	0
 10575  014D64  BE1B               	btfsc	___lldiv@divisor+1,7,c
 10576  014D66  0EFF               	movlw	-1
 10577  014D68  6E1C               	movwf	___lldiv@divisor+2,c
 10578  014D6A  6E1D               	movwf	___lldiv@divisor+3,c
 10579  014D6C  ECE6  F0B1         	call	___lldiv	;wreg free
 10580  014D70  0060  F058  F02B   	movff	?___lldiv,ultoa@v
 10581  014D76  0060  F05C  F02C   	movff	?___lldiv+1,ultoa@v+1
 10582  014D7C  0060  F060  F02D   	movff	?___lldiv+2,ultoa@v+2
 10583  014D82  0060  F064  F02E   	movff	?___lldiv+3,ultoa@v+3
 10584  014D88  4A23               	infsnz	ultoa@buf,f,c
 10585  014D8A  2A24               	incf	ultoa@buf+1,f,c
 10586  014D8C  502B               	movf	ultoa@v,w,c
 10587  014D8E  102C               	iorwf	ultoa@v+1,w,c
 10588  014D90  102D               	iorwf	ultoa@v+2,w,c
 10589  014D92  102E               	iorwf	ultoa@v+3,w,c
 10590  014D94  A4D8               	btfss	16344,2,c
 10591  014D96  D7D3               	goto	l1922
 10592  014D98  0060  F08F  FFD9   	movff	ultoa@buf,16345
 10593  014D9E  0060  F093  FFDA   	movff	ultoa@buf+1,16346
 10594  014DA4  0E00               	movlw	0
 10595  014DA6  6EDF               	movwf	16351,c
 10596  014DA8  0623               	decf	ultoa@buf,f,c
 10597  014DAA  A0D8               	btfss	16344,0,c
 10598  014DAC  0624               	decf	ultoa@buf+1,f,c
 10599  014DAE  0060  F094  F016   	movff	ultoa@val,___llmod@dividend
 10600  014DB4  0060  F098  F017   	movff	ultoa@val+1,___llmod@dividend+1
 10601  014DBA  0060  F09C  F018   	movff	ultoa@val+2,___llmod@dividend+2
 10602  014DC0  0060  F0A0  F019   	movff	ultoa@val+3,___llmod@dividend+3
 10603  014DC6  0060  F0A4  F01A   	movff	ultoa@base,___llmod@divisor
 10604  014DCC  0060  F0A8  F01B   	movff	ultoa@base+1,___llmod@divisor+1
 10605  014DD2  0E00               	movlw	0
 10606  014DD4  BE1B               	btfsc	___llmod@divisor+1,7,c
 10607  014DD6  0EFF               	movlw	-1
 10608  014DD8  6E1C               	movwf	___llmod@divisor+2,c
 10609  014DDA  6E1D               	movwf	___llmod@divisor+3,c
 10610  014DDC  ECD6  F0B4         	call	___llmod	;wreg free
 10611  014DE0  5016               	movf	?___llmod,w,c
 10612  014DE2  6E2F               	movwf	ultoa@c,c
 10613  014DE4  0060  F094  F016   	movff	ultoa@val,___lldiv@dividend
 10614  014DEA  0060  F098  F017   	movff	ultoa@val+1,___lldiv@dividend+1
 10615  014DF0  0060  F09C  F018   	movff	ultoa@val+2,___lldiv@dividend+2
 10616  014DF6  0060  F0A0  F019   	movff	ultoa@val+3,___lldiv@dividend+3
 10617  014DFC  0060  F0A4  F01A   	movff	ultoa@base,___lldiv@divisor
 10618  014E02  0060  F0A8  F01B   	movff	ultoa@base+1,___lldiv@divisor+1
 10619  014E08  0E00               	movlw	0
 10620  014E0A  BE1B               	btfsc	___lldiv@divisor+1,7,c
 10621  014E0C  0EFF               	movlw	-1
 10622  014E0E  6E1C               	movwf	___lldiv@divisor+2,c
 10623  014E10  6E1D               	movwf	___lldiv@divisor+3,c
 10624  014E12  ECE6  F0B1         	call	___lldiv	;wreg free
 10625  014E16  0060  F058  F025   	movff	?___lldiv,ultoa@val
 10626  014E1C  0060  F05C  F026   	movff	?___lldiv+1,ultoa@val+1
 10627  014E22  0060  F060  F027   	movff	?___lldiv+2,ultoa@val+2
 10628  014E28  0060  F064  F028   	movff	?___lldiv+3,ultoa@val+3
 10629  014E2E  0E09               	movlw	9
 10630  014E30  642F               	cpfsgt	ultoa@c,c
 10631  014E32  D002               	goto	l1925
 10632  014E34  0E07               	movlw	7
 10633  014E36  262F               	addwf	ultoa@c,f,c
 10634  014E38                     l1925:
 10635  014E38  0E30               	movlw	48
 10636  014E3A  262F               	addwf	ultoa@c,f,c
 10637  014E3C  0060  F08F  FFD9   	movff	ultoa@buf,16345
 10638  014E42  0060  F093  FFDA   	movff	ultoa@buf+1,16346
 10639  014E48  0060  F0BF  FFDF   	movff	ultoa@c,16351
 10640  014E4E  0623               	decf	ultoa@buf,f,c
 10641  014E50  A0D8               	btfss	16344,0,c
 10642  014E52  0624               	decf	ultoa@buf+1,f,c
 10643  014E54  5025               	movf	ultoa@val,w,c
 10644  014E56  1026               	iorwf	ultoa@val+1,w,c
 10645  014E58  1027               	iorwf	ultoa@val+2,w,c
 10646  014E5A  1028               	iorwf	ultoa@val+3,w,c
 10647  014E5C  B4D8               	btfsc	16344,2,c
 10648  014E5E  0012               	return	
 10649  014E60  D7A6               	goto	l1924
 10650  014E62                     __end_of_ultoa:
 10651                           	opt stack 0
 10652                           
 10653 ;; *************** function ___llmod *****************
 10654 ;; Defined at:
 10655 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;  dividend        4   21[COMRAM] unsigned long 
 10658 ;;  divisor         4   25[COMRAM] unsigned long 
 10659 ;; Auto vars:     Size  Location     Type
 10660 ;;  counter         1   29[COMRAM] unsigned char 
 10661 ;; Return value:  Size  Location     Type
 10662 ;;                  4   21[COMRAM] unsigned long 
 10663 ;; Registers used:
 10664 ;;		wreg, status,2, status,0
 10665 ;; Tracked objects:
 10666 ;;		On entry : 0/0
 10667 ;;		On exit  : 0/0
 10668 ;;		Unchanged: 0/0
 10669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10670 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10673 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10674 ;;Total ram usage:        9 bytes
 10675 ;; Hardware stack levels used:    1
 10676 ;; Hardware stack levels required when called:    4
 10677 ;; This function calls:
 10678 ;;		Nothing
 10679 ;; This function is called by:
 10680 ;;		_ultoa
 10681 ;; This function uses a non-reentrant model
 10682 ;;
 10683                           
 10684                           	psect	text31
 10685  0169AC                     __ptext31:
 10686                           	opt stack 0
 10687  0169AC                     ___llmod:
 10688                           	opt stack 22
 10689                           
 10690                           ;incstack = 0
 10691  0169AC  501A               	movf	___llmod@divisor,w,c
 10692  0169AE  101B               	iorwf	___llmod@divisor+1,w,c
 10693  0169B0  101C               	iorwf	___llmod@divisor+2,w,c
 10694  0169B2  101D               	iorwf	___llmod@divisor+3,w,c
 10695  0169B4  B4D8               	btfsc	16344,2,c
 10696  0169B6  D024               	goto	l1884
 10697  0169B8  0E01               	movlw	1
 10698  0169BA  6E1E               	movwf	___llmod@counter,c
 10699  0169BC  D006               	goto	l1879
 10700  0169BE  90D8               	bcf	16344,0,c
 10701  0169C0  361A               	rlcf	___llmod@divisor,f,c
 10702  0169C2  361B               	rlcf	___llmod@divisor+1,f,c
 10703  0169C4  361C               	rlcf	___llmod@divisor+2,f,c
 10704  0169C6  361D               	rlcf	___llmod@divisor+3,f,c
 10705  0169C8  2A1E               	incf	___llmod@counter,f,c
 10706  0169CA                     l1879:
 10707  0169CA  AE1D               	btfss	___llmod@divisor+3,7,c
 10708  0169CC  D7F8               	goto	l1880
 10709  0169CE                     u11130:
 10710  0169CE  501A               	movf	___llmod@divisor,w,c
 10711  0169D0  5C16               	subwf	___llmod@dividend,w,c
 10712  0169D2  501B               	movf	___llmod@divisor+1,w,c
 10713  0169D4  5817               	subwfb	___llmod@dividend+1,w,c
 10714  0169D6  501C               	movf	___llmod@divisor+2,w,c
 10715  0169D8  5818               	subwfb	___llmod@dividend+2,w,c
 10716  0169DA  501D               	movf	___llmod@divisor+3,w,c
 10717  0169DC  5819               	subwfb	___llmod@dividend+3,w,c
 10718  0169DE  A0D8               	btfss	16344,0,c
 10719  0169E0  D008               	goto	l1883
 10720  0169E2  501A               	movf	___llmod@divisor,w,c
 10721  0169E4  5E16               	subwf	___llmod@dividend,f,c
 10722  0169E6  501B               	movf	___llmod@divisor+1,w,c
 10723  0169E8  5A17               	subwfb	___llmod@dividend+1,f,c
 10724  0169EA  501C               	movf	___llmod@divisor+2,w,c
 10725  0169EC  5A18               	subwfb	___llmod@dividend+2,f,c
 10726  0169EE  501D               	movf	___llmod@divisor+3,w,c
 10727  0169F0  5A19               	subwfb	___llmod@dividend+3,f,c
 10728  0169F2                     l1883:
 10729  0169F2  90D8               	bcf	16344,0,c
 10730  0169F4  321D               	rrcf	___llmod@divisor+3,f,c
 10731  0169F6  321C               	rrcf	___llmod@divisor+2,f,c
 10732  0169F8  321B               	rrcf	___llmod@divisor+1,f,c
 10733  0169FA  321A               	rrcf	___llmod@divisor,f,c
 10734  0169FC  2E1E               	decfsz	___llmod@counter,f,c
 10735  0169FE  D7E7               	goto	u11130
 10736  016A00                     l1884:
 10737  016A00  0060  F058  F016   	movff	___llmod@dividend,?___llmod
 10738  016A06  0060  F05C  F017   	movff	___llmod@dividend+1,?___llmod+1
 10739  016A0C  0060  F060  F018   	movff	___llmod@dividend+2,?___llmod+2
 10740  016A12  0060  F064  F019   	movff	___llmod@dividend+3,?___llmod+3
 10741  016A18  0012               	return		;funcret
 10742  016A1A                     __end_of___llmod:
 10743                           	opt stack 0
 10744                           
 10745 ;; *************** function ___lldiv *****************
 10746 ;; Defined at:
 10747 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;  dividend        4   21[COMRAM] unsigned long 
 10750 ;;  divisor         4   25[COMRAM] unsigned long 
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;  quotient        4   29[COMRAM] unsigned long 
 10753 ;;  counter         1   33[COMRAM] unsigned char 
 10754 ;; Return value:  Size  Location     Type
 10755 ;;                  4   21[COMRAM] unsigned long 
 10756 ;; Registers used:
 10757 ;;		wreg, status,2, status,0
 10758 ;; Tracked objects:
 10759 ;;		On entry : 0/0
 10760 ;;		On exit  : 0/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10763 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10764 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10766 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10767 ;;Total ram usage:       13 bytes
 10768 ;; Hardware stack levels used:    1
 10769 ;; Hardware stack levels required when called:    4
 10770 ;; This function calls:
 10771 ;;		Nothing
 10772 ;; This function is called by:
 10773 ;;		_ultoa
 10774 ;; This function uses a non-reentrant model
 10775 ;;
 10776                           
 10777                           	psect	text32
 10778  0163CC                     __ptext32:
 10779                           	opt stack 0
 10780  0163CC                     ___lldiv:
 10781                           	opt stack 22
 10782                           
 10783                           ;incstack = 0
 10784  0163CC  0E00               	movlw	0
 10785  0163CE  6E1E               	movwf	___lldiv@quotient,c
 10786  0163D0  0E00               	movlw	0
 10787  0163D2  6E1F               	movwf	___lldiv@quotient+1,c
 10788  0163D4  0E00               	movlw	0
 10789  0163D6  6E20               	movwf	___lldiv@quotient+2,c
 10790  0163D8  0E00               	movlw	0
 10791  0163DA  6E21               	movwf	___lldiv@quotient+3,c
 10792  0163DC  501A               	movf	___lldiv@divisor,w,c
 10793  0163DE  101B               	iorwf	___lldiv@divisor+1,w,c
 10794  0163E0  101C               	iorwf	___lldiv@divisor+2,w,c
 10795  0163E2  101D               	iorwf	___lldiv@divisor+3,w,c
 10796  0163E4  B4D8               	btfsc	16344,2,c
 10797  0163E6  D02A               	goto	l1874
 10798  0163E8  0E01               	movlw	1
 10799  0163EA  6E22               	movwf	___lldiv@counter,c
 10800  0163EC  D006               	goto	l1869
 10801  0163EE  90D8               	bcf	16344,0,c
 10802  0163F0  361A               	rlcf	___lldiv@divisor,f,c
 10803  0163F2  361B               	rlcf	___lldiv@divisor+1,f,c
 10804  0163F4  361C               	rlcf	___lldiv@divisor+2,f,c
 10805  0163F6  361D               	rlcf	___lldiv@divisor+3,f,c
 10806  0163F8  2A22               	incf	___lldiv@counter,f,c
 10807  0163FA                     l1869:
 10808  0163FA  AE1D               	btfss	___lldiv@divisor+3,7,c
 10809  0163FC  D7F8               	goto	l1870
 10810  0163FE                     u11100:
 10811  0163FE  90D8               	bcf	16344,0,c
 10812  016400  361E               	rlcf	___lldiv@quotient,f,c
 10813  016402  361F               	rlcf	___lldiv@quotient+1,f,c
 10814  016404  3620               	rlcf	___lldiv@quotient+2,f,c
 10815  016406  3621               	rlcf	___lldiv@quotient+3,f,c
 10816  016408  501A               	movf	___lldiv@divisor,w,c
 10817  01640A  5C16               	subwf	___lldiv@dividend,w,c
 10818  01640C  501B               	movf	___lldiv@divisor+1,w,c
 10819  01640E  5817               	subwfb	___lldiv@dividend+1,w,c
 10820  016410  501C               	movf	___lldiv@divisor+2,w,c
 10821  016412  5818               	subwfb	___lldiv@dividend+2,w,c
 10822  016414  501D               	movf	___lldiv@divisor+3,w,c
 10823  016416  5819               	subwfb	___lldiv@dividend+3,w,c
 10824  016418  A0D8               	btfss	16344,0,c
 10825  01641A  D009               	goto	l1873
 10826  01641C  501A               	movf	___lldiv@divisor,w,c
 10827  01641E  5E16               	subwf	___lldiv@dividend,f,c
 10828  016420  501B               	movf	___lldiv@divisor+1,w,c
 10829  016422  5A17               	subwfb	___lldiv@dividend+1,f,c
 10830  016424  501C               	movf	___lldiv@divisor+2,w,c
 10831  016426  5A18               	subwfb	___lldiv@dividend+2,f,c
 10832  016428  501D               	movf	___lldiv@divisor+3,w,c
 10833  01642A  5A19               	subwfb	___lldiv@dividend+3,f,c
 10834  01642C  801E               	bsf	___lldiv@quotient,0,c
 10835  01642E                     l1873:
 10836  01642E  90D8               	bcf	16344,0,c
 10837  016430  321D               	rrcf	___lldiv@divisor+3,f,c
 10838  016432  321C               	rrcf	___lldiv@divisor+2,f,c
 10839  016434  321B               	rrcf	___lldiv@divisor+1,f,c
 10840  016436  321A               	rrcf	___lldiv@divisor,f,c
 10841  016438  2E22               	decfsz	___lldiv@counter,f,c
 10842  01643A  D7E1               	goto	u11100
 10843  01643C                     l1874:
 10844  01643C  0060  F078  F016   	movff	___lldiv@quotient,?___lldiv
 10845  016442  0060  F07C  F017   	movff	___lldiv@quotient+1,?___lldiv+1
 10846  016448  0060  F080  F018   	movff	___lldiv@quotient+2,?___lldiv+2
 10847  01644E  0060  F084  F019   	movff	___lldiv@quotient+3,?___lldiv+3
 10848  016454  0012               	return		;funcret
 10849  016456                     __end_of___lldiv:
 10850                           	opt stack 0
 10851                           
 10852 ;; *************** function _tcp_parseHeader *****************
 10853 ;; Defined at:
 10854 ;;		line 74 in file "src/stack/protocols/tcp.c"
 10855 ;; Parameters:    Size  Location     Type
 10856 ;;  ipPayload       9   41[COMRAM] struct memoryField
 10857 ;;  header          2   50[COMRAM] PTR struct tcp_header
 10858 ;;		 -> tcp_handleNewPacket@tcpHeader(21), 
 10859 ;; Auto vars:     Size  Location     Type
 10860 ;;  temp            1   52[COMRAM] unsigned char 
 10861 ;; Return value:  Size  Location     Type
 10862 ;;                  3   41[COMRAM] struct error
 10863 ;; Registers used:
 10864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10865 ;; Tracked objects:
 10866 ;;		On entry : 0/0
 10867 ;;		On exit  : 0/0
 10868 ;;		Unchanged: 0/0
 10869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10870 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10872 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10873 ;;      Totals:        12       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10874 ;;Total ram usage:       17 bytes
 10875 ;; Hardware stack levels used:    1
 10876 ;; Hardware stack levels required when called:    8
 10877 ;; This function calls:
 10878 ;;		_ethernetController_streamFromRXBuffer
 10879 ;; This function is called by:
 10880 ;;		_tcp_handleNewPacket
 10881 ;; This function uses a non-reentrant model
 10882 ;;
 10883                           
 10884                           	psect	text33
 10885  010000                     __ptext33:
 10886                           	opt stack 0
 10887  010000                     _tcp_parseHeader:
 10888                           	opt stack 18
 10889                           
 10890                           ;tcp.c: 75: uint8_t temp;
 10891                           ;tcp.c: 76: ethernetController_streamFromRXBuffer(0, ipPayload.start);
 10892                           
 10893                           ;incstack = 0
 10894  010000  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 10895  010006  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 10896  01000C  0E00               	movlw	0
 10897  01000E  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 10898                           
 10899                           ;tcp.c: 77: header->srcPort = ((uint16_t) ethernetController_streamFromRXBuffer(1, ipPay
      +                          load.start) << 8);
 10900  010012  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 10901  010018  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 10902  01001E  0E01               	movlw	1
 10903  010020  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 10904  010024  0100               	movlb	0	; () banked
 10905  010026  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 10906  010028  5160               	movf	??_tcp_parseHeader& (0+255),w,b
 10907  01002A  6F62               	movwf	(??_tcp_parseHeader+2)& (0+255),b
 10908  01002C  6B61               	clrf	(??_tcp_parseHeader+1)& (0+255),b
 10909  01002E  0060  F0CF  FFD9   	movff	tcp_parseHeader@header,16345
 10910  010034  0060  F0D3  FFDA   	movff	tcp_parseHeader@header+1,16346
 10911  01003A  0060  F187  FFDE   	movff	??_tcp_parseHeader+1,16350
 10912  010040  0060  F18B  FFDD   	movff	??_tcp_parseHeader+2,16349
 10913                           
 10914                           ;tcp.c: 78: header->srcPort |= (uint16_t) ethernetController_streamFromRXBuffer(1, ipPay
      +                          load.start);
 10915  010046  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 10916  01004C  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 10917  010052  0E01               	movlw	1
 10918  010054  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 10919  010058  0100               	movlb	0	; () banked
 10920  01005A  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 10921  01005C  5160               	movf	??_tcp_parseHeader& (0+255),w,b
 10922  01005E  0060  F0CF  FFD9   	movff	tcp_parseHeader@header,16345
 10923  010064  0060  F0D3  FFDA   	movff	tcp_parseHeader@header+1,16346
 10924  01006A  12DE               	iorwf	16350,f,c
 10925  01006C  0E00               	movlw	0
 10926  01006E  12DD               	iorwf	16349,f,c
 10927                           
 10928                           ;tcp.c: 79: header->dstPort = ((uint16_t) ethernetController_streamFromRXBuffer(1, ipPay
      +                          load.start) << 8);
 10929  010070  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 10930  010076  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 10931  01007C  0E01               	movlw	1
 10932  01007E  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 10933  010082  0100               	movlb	0	; () banked
 10934  010084  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 10935  010086  5160               	movf	??_tcp_parseHeader& (0+255),w,b
 10936  010088  6F62               	movwf	(??_tcp_parseHeader+2)& (0+255),b
 10937  01008A  6B61               	clrf	(??_tcp_parseHeader+1)& (0+255),b
 10938  01008C  EE20 F002          	lfsr	2,2
 10939  010090  5033               	movf	tcp_parseHeader@header,w,c
 10940  010092  26D9               	addwf	16345,f,c
 10941  010094  5034               	movf	tcp_parseHeader@header+1,w,c
 10942  010096  22DA               	addwfc	16346,f,c
 10943  010098  0060  F187  FFDE   	movff	??_tcp_parseHeader+1,16350
 10944  01009E  0060  F18B  FFDD   	movff	??_tcp_parseHeader+2,16349
 10945                           
 10946                           ;tcp.c: 80: header->dstPort |= (uint16_t) ethernetController_streamFromRXBuffer(1, ipPay
      +                          load.start);
 10947  0100A4  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 10948  0100AA  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 10949  0100B0  0E01               	movlw	1
 10950  0100B2  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 10951  0100B6  0100               	movlb	0	; () banked
 10952  0100B8  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 10953  0100BA  6B61               	clrf	(??_tcp_parseHeader+1)& (0+255),b
 10954  0100BC  EE20 F002          	lfsr	2,2
 10955  0100C0  5033               	movf	tcp_parseHeader@header,w,c
 10956  0100C2  26D9               	addwf	16345,f,c
 10957  0100C4  5034               	movf	tcp_parseHeader@header+1,w,c
 10958  0100C6  22DA               	addwfc	16346,f,c
 10959  0100C8  5160               	movf	??_tcp_parseHeader& (0+255),w,b
 10960  0100CA  12DE               	iorwf	16350,f,c
 10961  0100CC  5161               	movf	(??_tcp_parseHeader+1)& (0+255),w,b
 10962  0100CE  12DD               	iorwf	16349,f,c
 10963                           
 10964                           ;tcp.c: 81: header->seqNumber = ((uint32_t) ethernetController_streamFromRXBuffer(1, ipP
      +                          ayload.start) << 24);
 10965  0100D0  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 10966  0100D6  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 10967  0100DC  0E01               	movlw	1
 10968  0100DE  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 10969  0100E2  0100               	movlb	0	; () banked
 10970  0100E4  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 10971  0100E6  0060  F180  F061   	movff	??_tcp_parseHeader,??_tcp_parseHeader+1
 10972  0100EC  6B62               	clrf	(??_tcp_parseHeader+2)& (0+255),b
 10973  0100EE  6B63               	clrf	(??_tcp_parseHeader+3)& (0+255),b
 10974  0100F0  6B64               	clrf	(??_tcp_parseHeader+4)& (0+255),b
 10975  0100F2  0060  F184  F064   	movff	??_tcp_parseHeader+1,??_tcp_parseHeader+4
 10976  0100F8  6B63               	clrf	(??_tcp_parseHeader+3)& (0+255),b
 10977  0100FA  6B62               	clrf	(??_tcp_parseHeader+2)& (0+255),b
 10978  0100FC  6B61               	clrf	(??_tcp_parseHeader+1)& (0+255),b
 10979  0100FE  EE20 F004          	lfsr	2,4
 10980  010102  5033               	movf	tcp_parseHeader@header,w,c
 10981  010104  26D9               	addwf	16345,f,c
 10982  010106  5034               	movf	tcp_parseHeader@header+1,w,c
 10983  010108  22DA               	addwfc	16346,f,c
 10984  01010A  0060  F187  FFDE   	movff	??_tcp_parseHeader+1,16350
 10985  010110  0060  F18B  FFDE   	movff	??_tcp_parseHeader+2,16350
 10986  010116  0060  F18F  FFDE   	movff	??_tcp_parseHeader+3,16350
 10987  01011C  0060  F193  FFDE   	movff	??_tcp_parseHeader+4,16350
 10988                           
 10989                           ;tcp.c: 82: header->seqNumber |= ((uint32_t) ethernetController_streamFromRXBuffer(1, ip
      +                          Payload.start) << 16);
 10990  010122  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 10991  010128  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 10992  01012E  0E01               	movlw	1
 10993  010130  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 10994  010134  0100               	movlb	0	; () banked
 10995  010136  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 10996  010138  0060  F180  F061   	movff	??_tcp_parseHeader,??_tcp_parseHeader+1
 10997  01013E  6B62               	clrf	(??_tcp_parseHeader+2)& (0+255),b
 10998  010140  6B63               	clrf	(??_tcp_parseHeader+3)& (0+255),b
 10999  010142  6B64               	clrf	(??_tcp_parseHeader+4)& (0+255),b
 11000  010144  0060  F188  F064   	movff	??_tcp_parseHeader+2,??_tcp_parseHeader+4
 11001  01014A  0060  F184  F063   	movff	??_tcp_parseHeader+1,??_tcp_parseHeader+3
 11002  010150  6B62               	clrf	(??_tcp_parseHeader+2)& (0+255),b
 11003  010152  6B61               	clrf	(??_tcp_parseHeader+1)& (0+255),b
 11004  010154  EE20 F004          	lfsr	2,4
 11005  010158  5033               	movf	tcp_parseHeader@header,w,c
 11006  01015A  26D9               	addwf	16345,f,c
 11007  01015C  5034               	movf	tcp_parseHeader@header+1,w,c
 11008  01015E  22DA               	addwfc	16346,f,c
 11009  010160  5161               	movf	(??_tcp_parseHeader+1)& (0+255),w,b
 11010  010162  12DE               	iorwf	16350,f,c
 11011  010164  5162               	movf	(??_tcp_parseHeader+2)& (0+255),w,b
 11012  010166  12DE               	iorwf	16350,f,c
 11013  010168  5163               	movf	(??_tcp_parseHeader+3)& (0+255),w,b
 11014  01016A  12DE               	iorwf	16350,f,c
 11015  01016C  5164               	movf	(??_tcp_parseHeader+4)& (0+255),w,b
 11016  01016E  12DE               	iorwf	16350,f,c
 11017                           
 11018                           ;tcp.c: 83: header->seqNumber |= ((uint32_t) ethernetController_streamFromRXBuffer(1, ip
      +                          Payload.start) << 8);
 11019  010170  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 11020  010176  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 11021  01017C  0E01               	movlw	1
 11022  01017E  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11023  010182  0100               	movlb	0	; () banked
 11024  010184  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 11025  010186  0060  F180  F061   	movff	??_tcp_parseHeader,??_tcp_parseHeader+1
 11026  01018C  6B62               	clrf	(??_tcp_parseHeader+2)& (0+255),b
 11027  01018E  6B63               	clrf	(??_tcp_parseHeader+3)& (0+255),b
 11028  010190  6B64               	clrf	(??_tcp_parseHeader+4)& (0+255),b
 11029  010192  0060  F18C  F064   	movff	??_tcp_parseHeader+3,??_tcp_parseHeader+4
 11030  010198  0060  F188  F063   	movff	??_tcp_parseHeader+2,??_tcp_parseHeader+3
 11031  01019E  0060  F184  F062   	movff	??_tcp_parseHeader+1,??_tcp_parseHeader+2
 11032  0101A4  6B61               	clrf	(??_tcp_parseHeader+1)& (0+255),b
 11033  0101A6  EE20 F004          	lfsr	2,4
 11034  0101AA  5033               	movf	tcp_parseHeader@header,w,c
 11035  0101AC  26D9               	addwf	16345,f,c
 11036  0101AE  5034               	movf	tcp_parseHeader@header+1,w,c
 11037  0101B0  22DA               	addwfc	16346,f,c
 11038  0101B2  5161               	movf	(??_tcp_parseHeader+1)& (0+255),w,b
 11039  0101B4  12DE               	iorwf	16350,f,c
 11040  0101B6  5162               	movf	(??_tcp_parseHeader+2)& (0+255),w,b
 11041  0101B8  12DE               	iorwf	16350,f,c
 11042  0101BA  5163               	movf	(??_tcp_parseHeader+3)& (0+255),w,b
 11043  0101BC  12DE               	iorwf	16350,f,c
 11044  0101BE  5164               	movf	(??_tcp_parseHeader+4)& (0+255),w,b
 11045  0101C0  12DE               	iorwf	16350,f,c
 11046                           
 11047                           ;tcp.c: 84: header->seqNumber |= (uint32_t) ethernetController_streamFromRXBuffer(1, ipP
      +                          ayload.start);
 11048  0101C2  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 11049  0101C8  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 11050  0101CE  0E01               	movlw	1
 11051  0101D0  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11052  0101D4  0100               	movlb	0	; () banked
 11053  0101D6  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 11054  0101D8  0060  F180  F061   	movff	??_tcp_parseHeader,??_tcp_parseHeader+1
 11055  0101DE  6B62               	clrf	(??_tcp_parseHeader+2)& (0+255),b
 11056  0101E0  6B63               	clrf	(??_tcp_parseHeader+3)& (0+255),b
 11057  0101E2  6B64               	clrf	(??_tcp_parseHeader+4)& (0+255),b
 11058  0101E4  EE20 F004          	lfsr	2,4
 11059  0101E8  5033               	movf	tcp_parseHeader@header,w,c
 11060  0101EA  26D9               	addwf	16345,f,c
 11061  0101EC  5034               	movf	tcp_parseHeader@header+1,w,c
 11062  0101EE  22DA               	addwfc	16346,f,c
 11063  0101F0  5161               	movf	(??_tcp_parseHeader+1)& (0+255),w,b
 11064  0101F2  12DE               	iorwf	16350,f,c
 11065  0101F4  5162               	movf	(??_tcp_parseHeader+2)& (0+255),w,b
 11066  0101F6  12DE               	iorwf	16350,f,c
 11067  0101F8  5163               	movf	(??_tcp_parseHeader+3)& (0+255),w,b
 11068  0101FA  12DE               	iorwf	16350,f,c
 11069  0101FC  5164               	movf	(??_tcp_parseHeader+4)& (0+255),w,b
 11070  0101FE  12DE               	iorwf	16350,f,c
 11071                           
 11072                           ;tcp.c: 85: header->ackNumber = ((uint32_t) ethernetController_streamFromRXBuffer(1, ipP
      +                          ayload.start) << 24);
 11073  010200  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 11074  010206  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 11075  01020C  0E01               	movlw	1
 11076  01020E  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11077  010212  0100               	movlb	0	; () banked
 11078  010214  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 11079  010216  0060  F180  F061   	movff	??_tcp_parseHeader,??_tcp_parseHeader+1
 11080  01021C  6B62               	clrf	(??_tcp_parseHeader+2)& (0+255),b
 11081  01021E  6B63               	clrf	(??_tcp_parseHeader+3)& (0+255),b
 11082  010220  6B64               	clrf	(??_tcp_parseHeader+4)& (0+255),b
 11083  010222  0060  F184  F064   	movff	??_tcp_parseHeader+1,??_tcp_parseHeader+4
 11084  010228  6B63               	clrf	(??_tcp_parseHeader+3)& (0+255),b
 11085  01022A  6B62               	clrf	(??_tcp_parseHeader+2)& (0+255),b
 11086  01022C  6B61               	clrf	(??_tcp_parseHeader+1)& (0+255),b
 11087  01022E  EE20 F008          	lfsr	2,8
 11088  010232  5033               	movf	tcp_parseHeader@header,w,c
 11089  010234  26D9               	addwf	16345,f,c
 11090  010236  5034               	movf	tcp_parseHeader@header+1,w,c
 11091  010238  22DA               	addwfc	16346,f,c
 11092  01023A  0060  F187  FFDE   	movff	??_tcp_parseHeader+1,16350
 11093  010240  0060  F18B  FFDE   	movff	??_tcp_parseHeader+2,16350
 11094  010246  0060  F18F  FFDE   	movff	??_tcp_parseHeader+3,16350
 11095  01024C  0060  F193  FFDE   	movff	??_tcp_parseHeader+4,16350
 11096                           
 11097                           ;tcp.c: 86: header->ackNumber |= ((uint32_t) ethernetController_streamFromRXBuffer(1, ip
      +                          Payload.start) << 16);
 11098  010252  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 11099  010258  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 11100  01025E  0E01               	movlw	1
 11101  010260  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11102  010264  0100               	movlb	0	; () banked
 11103  010266  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 11104  010268  0060  F180  F061   	movff	??_tcp_parseHeader,??_tcp_parseHeader+1
 11105  01026E  6B62               	clrf	(??_tcp_parseHeader+2)& (0+255),b
 11106  010270  6B63               	clrf	(??_tcp_parseHeader+3)& (0+255),b
 11107  010272  6B64               	clrf	(??_tcp_parseHeader+4)& (0+255),b
 11108  010274  0060  F188  F064   	movff	??_tcp_parseHeader+2,??_tcp_parseHeader+4
 11109  01027A  0060  F184  F063   	movff	??_tcp_parseHeader+1,??_tcp_parseHeader+3
 11110  010280  6B62               	clrf	(??_tcp_parseHeader+2)& (0+255),b
 11111  010282  6B61               	clrf	(??_tcp_parseHeader+1)& (0+255),b
 11112  010284  EE20 F008          	lfsr	2,8
 11113  010288  5033               	movf	tcp_parseHeader@header,w,c
 11114  01028A  26D9               	addwf	16345,f,c
 11115  01028C  5034               	movf	tcp_parseHeader@header+1,w,c
 11116  01028E  22DA               	addwfc	16346,f,c
 11117  010290  5161               	movf	(??_tcp_parseHeader+1)& (0+255),w,b
 11118  010292  12DE               	iorwf	16350,f,c
 11119  010294  5162               	movf	(??_tcp_parseHeader+2)& (0+255),w,b
 11120  010296  12DE               	iorwf	16350,f,c
 11121  010298  5163               	movf	(??_tcp_parseHeader+3)& (0+255),w,b
 11122  01029A  12DE               	iorwf	16350,f,c
 11123  01029C  5164               	movf	(??_tcp_parseHeader+4)& (0+255),w,b
 11124  01029E  12DE               	iorwf	16350,f,c
 11125                           
 11126                           ;tcp.c: 87: header->ackNumber |= ((uint32_t) ethernetController_streamFromRXBuffer(1, ip
      +                          Payload.start) << 8);
 11127  0102A0  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 11128  0102A6  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 11129  0102AC  0E01               	movlw	1
 11130  0102AE  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11131  0102B2  0100               	movlb	0	; () banked
 11132  0102B4  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 11133  0102B6  0060  F180  F061   	movff	??_tcp_parseHeader,??_tcp_parseHeader+1
 11134  0102BC  6B62               	clrf	(??_tcp_parseHeader+2)& (0+255),b
 11135  0102BE  6B63               	clrf	(??_tcp_parseHeader+3)& (0+255),b
 11136  0102C0  6B64               	clrf	(??_tcp_parseHeader+4)& (0+255),b
 11137  0102C2  0060  F18C  F064   	movff	??_tcp_parseHeader+3,??_tcp_parseHeader+4
 11138  0102C8  0060  F188  F063   	movff	??_tcp_parseHeader+2,??_tcp_parseHeader+3
 11139  0102CE  0060  F184  F062   	movff	??_tcp_parseHeader+1,??_tcp_parseHeader+2
 11140  0102D4  6B61               	clrf	(??_tcp_parseHeader+1)& (0+255),b
 11141  0102D6  EE20 F008          	lfsr	2,8
 11142  0102DA  5033               	movf	tcp_parseHeader@header,w,c
 11143  0102DC  26D9               	addwf	16345,f,c
 11144  0102DE  5034               	movf	tcp_parseHeader@header+1,w,c
 11145  0102E0  22DA               	addwfc	16346,f,c
 11146  0102E2  5161               	movf	(??_tcp_parseHeader+1)& (0+255),w,b
 11147  0102E4  12DE               	iorwf	16350,f,c
 11148  0102E6  5162               	movf	(??_tcp_parseHeader+2)& (0+255),w,b
 11149  0102E8  12DE               	iorwf	16350,f,c
 11150  0102EA  5163               	movf	(??_tcp_parseHeader+3)& (0+255),w,b
 11151  0102EC  12DE               	iorwf	16350,f,c
 11152  0102EE  5164               	movf	(??_tcp_parseHeader+4)& (0+255),w,b
 11153  0102F0  12DE               	iorwf	16350,f,c
 11154                           
 11155                           ;tcp.c: 88: header->ackNumber |= ethernetController_streamFromRXBuffer(1, ipPayload.star
      +                          t);
 11156  0102F2  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 11157  0102F8  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 11158  0102FE  0E01               	movlw	1
 11159  010300  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11160  010304  0100               	movlb	0	; () banked
 11161  010306  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 11162  010308  0060  F180  F061   	movff	??_tcp_parseHeader,??_tcp_parseHeader+1
 11163  01030E  6B62               	clrf	(??_tcp_parseHeader+2)& (0+255),b
 11164  010310  6B63               	clrf	(??_tcp_parseHeader+3)& (0+255),b
 11165  010312  6B64               	clrf	(??_tcp_parseHeader+4)& (0+255),b
 11166  010314  EE20 F008          	lfsr	2,8
 11167  010318  5033               	movf	tcp_parseHeader@header,w,c
 11168  01031A  26D9               	addwf	16345,f,c
 11169  01031C  5034               	movf	tcp_parseHeader@header+1,w,c
 11170  01031E  22DA               	addwfc	16346,f,c
 11171  010320  5161               	movf	(??_tcp_parseHeader+1)& (0+255),w,b
 11172  010322  12DE               	iorwf	16350,f,c
 11173  010324  5162               	movf	(??_tcp_parseHeader+2)& (0+255),w,b
 11174  010326  12DE               	iorwf	16350,f,c
 11175  010328  5163               	movf	(??_tcp_parseHeader+3)& (0+255),w,b
 11176  01032A  12DE               	iorwf	16350,f,c
 11177  01032C  5164               	movf	(??_tcp_parseHeader+4)& (0+255),w,b
 11178  01032E  12DE               	iorwf	16350,f,c
 11179                           
 11180                           ;tcp.c: 89: temp = ethernetController_streamFromRXBuffer(1, ipPayload.start);
 11181  010330  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 11182  010336  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 11183  01033C  0E01               	movlw	1
 11184  01033E  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11185  010342  6E35               	movwf	tcp_parseHeader@temp,c
 11186                           
 11187                           ;tcp.c: 90: header->dataOffset = (temp & 0xf0) >> 4;
 11188  010344  EE20 F00C          	lfsr	2,12
 11189  010348  5033               	movf	tcp_parseHeader@header,w,c
 11190  01034A  26D9               	addwf	16345,f,c
 11191  01034C  5034               	movf	tcp_parseHeader@header+1,w,c
 11192  01034E  22DA               	addwfc	16346,f,c
 11193  010350  3835               	swapf	tcp_parseHeader@temp,w,c
 11194  010352  0B0F               	andlw	15
 11195  010354  0B0F               	andlw	15
 11196  010356  6EDF               	movwf	16351,c
 11197                           
 11198                           ;tcp.c: 91: header->flags.NS = temp & 0x01;
 11199  010358  0060  F0D4  F060   	movff	tcp_parseHeader@temp,??_tcp_parseHeader
 11200  01035E  0E01               	movlw	1
 11201  010360  0100               	movlb	0	; () banked
 11202  010362  1760               	andwf	??_tcp_parseHeader& (0+255),f,b
 11203  010364  EE20 F00D          	lfsr	2,13
 11204  010368  5033               	movf	tcp_parseHeader@header,w,c
 11205  01036A  26D9               	addwf	16345,f,c
 11206  01036C  5034               	movf	tcp_parseHeader@header+1,w,c
 11207  01036E  22DA               	addwfc	16346,f,c
 11208  010370  50DF               	movf	16351,w,c
 11209  010372  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11210  010374  0BFE               	andlw	-2
 11211  010376  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11212  010378  6EDF               	movwf	16351,c
 11213                           
 11214                           ;tcp.c: 92: temp = ethernetController_streamFromRXBuffer(1, ipPayload.start);
 11215  01037A  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 11216  010380  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 11217  010386  0E01               	movlw	1
 11218  010388  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11219  01038C  6E35               	movwf	tcp_parseHeader@temp,c
 11220                           
 11221                           ;tcp.c: 93: header->flags.CWR = temp & (0x01 << 7) ? 1 : 0;
 11222  01038E  AE35               	btfss	tcp_parseHeader@temp,7,c
 11223  010390  D004               	goto	u12730
 11224  010392  0100               	movlb	0	; () banked
 11225  010394  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11226  010396  2B60               	incf	??_tcp_parseHeader& (0+255),f,b
 11227  010398  D002               	goto	u12748
 11228  01039A                     u12730:
 11229  01039A  0100               	movlb	0	; () banked
 11230  01039C  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11231  01039E                     u12748:
 11232  01039E  EE20 F00D          	lfsr	2,13
 11233  0103A2  5033               	movf	tcp_parseHeader@header,w,c
 11234  0103A4  26D9               	addwf	16345,f,c
 11235  0103A6  5034               	movf	tcp_parseHeader@header+1,w,c
 11236  0103A8  22DA               	addwfc	16346,f,c
 11237  0103AA  4760               	rlncf	??_tcp_parseHeader& (0+255),f,b
 11238  0103AC  50DF               	movf	16351,w,c
 11239  0103AE  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11240  0103B0  0BFD               	andlw	-3
 11241  0103B2  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11242  0103B4  6EDF               	movwf	16351,c
 11243                           
 11244                           ; BSR set to: 0
 11245                           ;tcp.c: 94: header->flags.ECE = temp & (0x01 << 6) ? 1 : 0;
 11246  0103B6  AC35               	btfss	tcp_parseHeader@temp,6,c
 11247  0103B8  D003               	goto	u12750
 11248  0103BA  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11249  0103BC  2B60               	incf	??_tcp_parseHeader& (0+255),f,b
 11250  0103BE  D002               	goto	u12768
 11251  0103C0                     u12750:
 11252  0103C0  0100               	movlb	0	; () banked
 11253  0103C2  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11254  0103C4                     u12768:
 11255  0103C4  EE20 F00D          	lfsr	2,13
 11256  0103C8  5033               	movf	tcp_parseHeader@header,w,c
 11257  0103CA  26D9               	addwf	16345,f,c
 11258  0103CC  5034               	movf	tcp_parseHeader@header+1,w,c
 11259  0103CE  22DA               	addwfc	16346,f,c
 11260  0103D0  4760               	rlncf	??_tcp_parseHeader& (0+255),f,b
 11261  0103D2  4760               	rlncf	??_tcp_parseHeader& (0+255),f,b
 11262  0103D4  50DF               	movf	16351,w,c
 11263  0103D6  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11264  0103D8  0BFB               	andlw	-5
 11265  0103DA  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11266  0103DC  6EDF               	movwf	16351,c
 11267                           
 11268                           ; BSR set to: 0
 11269                           ;tcp.c: 95: header->flags.URG = temp & (0x01 << 5) ? 1 : 0;
 11270  0103DE  AA35               	btfss	tcp_parseHeader@temp,5,c
 11271  0103E0  D003               	goto	u12770
 11272  0103E2  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11273  0103E4  2B60               	incf	??_tcp_parseHeader& (0+255),f,b
 11274  0103E6  D002               	goto	u12788
 11275  0103E8                     u12770:
 11276  0103E8  0100               	movlb	0	; () banked
 11277  0103EA  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11278  0103EC                     u12788:
 11279  0103EC  EE20 F00D          	lfsr	2,13
 11280  0103F0  5033               	movf	tcp_parseHeader@header,w,c
 11281  0103F2  26D9               	addwf	16345,f,c
 11282  0103F4  5034               	movf	tcp_parseHeader@header+1,w,c
 11283  0103F6  22DA               	addwfc	16346,f,c
 11284  0103F8  4760               	rlncf	??_tcp_parseHeader& (0+255),f,b
 11285  0103FA  4760               	rlncf	??_tcp_parseHeader& (0+255),f,b
 11286  0103FC  4760               	rlncf	??_tcp_parseHeader& (0+255),f,b
 11287  0103FE  50DF               	movf	16351,w,c
 11288  010400  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11289  010402  0BF7               	andlw	-9
 11290  010404  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11291  010406  6EDF               	movwf	16351,c
 11292                           
 11293                           ; BSR set to: 0
 11294                           ;tcp.c: 96: header->flags.ACK = temp & (0x01 << 4) ? 1 : 0;
 11295  010408  A835               	btfss	tcp_parseHeader@temp,4,c
 11296  01040A  D003               	goto	u12790
 11297  01040C  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11298  01040E  2B60               	incf	??_tcp_parseHeader& (0+255),f,b
 11299  010410  D002               	goto	u12808
 11300  010412                     u12790:
 11301  010412  0100               	movlb	0	; () banked
 11302  010414  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11303  010416                     u12808:
 11304  010416  EE20 F00D          	lfsr	2,13
 11305  01041A  5033               	movf	tcp_parseHeader@header,w,c
 11306  01041C  26D9               	addwf	16345,f,c
 11307  01041E  5034               	movf	tcp_parseHeader@header+1,w,c
 11308  010420  22DA               	addwfc	16346,f,c
 11309  010422  3B60               	swapf	??_tcp_parseHeader& (0+255),f,b
 11310  010424  50DF               	movf	16351,w,c
 11311  010426  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11312  010428  0BEF               	andlw	-17
 11313  01042A  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11314  01042C  6EDF               	movwf	16351,c
 11315                           
 11316                           ; BSR set to: 0
 11317                           ;tcp.c: 97: header->flags.PSH = temp & (0x01 << 3) ? 1 : 0;
 11318  01042E  A635               	btfss	tcp_parseHeader@temp,3,c
 11319  010430  D003               	goto	u12810
 11320  010432  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11321  010434  2B60               	incf	??_tcp_parseHeader& (0+255),f,b
 11322  010436  D002               	goto	u12828
 11323  010438                     u12810:
 11324  010438  0100               	movlb	0	; () banked
 11325  01043A  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11326  01043C                     u12828:
 11327  01043C  EE20 F00D          	lfsr	2,13
 11328  010440  5033               	movf	tcp_parseHeader@header,w,c
 11329  010442  26D9               	addwf	16345,f,c
 11330  010444  5034               	movf	tcp_parseHeader@header+1,w,c
 11331  010446  22DA               	addwfc	16346,f,c
 11332  010448  3B60               	swapf	??_tcp_parseHeader& (0+255),f,b
 11333  01044A  4760               	rlncf	??_tcp_parseHeader& (0+255),f,b
 11334  01044C  50DF               	movf	16351,w,c
 11335  01044E  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11336  010450  0BDF               	andlw	-33
 11337  010452  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11338  010454  6EDF               	movwf	16351,c
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;tcp.c: 98: header->flags.RST = temp & (0x01 << 2) ? 1 : 0;
 11342  010456  A435               	btfss	tcp_parseHeader@temp,2,c
 11343  010458  D003               	goto	u12830
 11344  01045A  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11345  01045C  2B60               	incf	??_tcp_parseHeader& (0+255),f,b
 11346  01045E  D002               	goto	u12848
 11347  010460                     u12830:
 11348  010460  0100               	movlb	0	; () banked
 11349  010462  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11350  010464                     u12848:
 11351  010464  EE20 F00D          	lfsr	2,13
 11352  010468  5033               	movf	tcp_parseHeader@header,w,c
 11353  01046A  26D9               	addwf	16345,f,c
 11354  01046C  5034               	movf	tcp_parseHeader@header+1,w,c
 11355  01046E  22DA               	addwfc	16346,f,c
 11356  010470  3B60               	swapf	??_tcp_parseHeader& (0+255),f,b
 11357  010472  4760               	rlncf	??_tcp_parseHeader& (0+255),f,b
 11358  010474  4760               	rlncf	??_tcp_parseHeader& (0+255),f,b
 11359  010476  50DF               	movf	16351,w,c
 11360  010478  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11361  01047A  0BBF               	andlw	-65
 11362  01047C  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11363  01047E  6EDF               	movwf	16351,c
 11364                           
 11365                           ; BSR set to: 0
 11366                           ;tcp.c: 99: header->flags.SYN = temp & (0x01 << 1) ? 1 : 0;
 11367  010480  A235               	btfss	tcp_parseHeader@temp,1,c
 11368  010482  D003               	goto	u12850
 11369  010484  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11370  010486  2B60               	incf	??_tcp_parseHeader& (0+255),f,b
 11371  010488  D002               	goto	u12868
 11372  01048A                     u12850:
 11373  01048A  0100               	movlb	0	; () banked
 11374  01048C  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11375  01048E                     u12868:
 11376  01048E  EE20 F00D          	lfsr	2,13
 11377  010492  5033               	movf	tcp_parseHeader@header,w,c
 11378  010494  26D9               	addwf	16345,f,c
 11379  010496  5034               	movf	tcp_parseHeader@header+1,w,c
 11380  010498  22DA               	addwfc	16346,f,c
 11381  01049A  3360               	rrcf	??_tcp_parseHeader& (0+255),f,b
 11382  01049C  3360               	rrcf	??_tcp_parseHeader& (0+255),f,b
 11383  01049E  50DF               	movf	16351,w,c
 11384  0104A0  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11385  0104A2  0B7F               	andlw	-129
 11386  0104A4  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11387  0104A6  6EDF               	movwf	16351,c
 11388                           
 11389                           ; BSR set to: 0
 11390                           ;tcp.c: 100: header->flags.FIN = temp & (0x01 << 0) ? 1 : 0;
 11391  0104A8  A035               	btfss	tcp_parseHeader@temp,0,c
 11392  0104AA  D003               	goto	u12870
 11393  0104AC  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11394  0104AE  2B60               	incf	??_tcp_parseHeader& (0+255),f,b
 11395  0104B0  D002               	goto	u12888
 11396  0104B2                     u12870:
 11397  0104B2  0100               	movlb	0	; () banked
 11398  0104B4  6B60               	clrf	??_tcp_parseHeader& (0+255),b
 11399  0104B6                     u12888:
 11400  0104B6  EE20 F00E          	lfsr	2,14
 11401  0104BA  5033               	movf	tcp_parseHeader@header,w,c
 11402  0104BC  26D9               	addwf	16345,f,c
 11403  0104BE  5034               	movf	tcp_parseHeader@header+1,w,c
 11404  0104C0  22DA               	addwfc	16346,f,c
 11405  0104C2  50DF               	movf	16351,w,c
 11406  0104C4  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11407  0104C6  0BFE               	andlw	-2
 11408  0104C8  1960               	xorwf	??_tcp_parseHeader& (0+255),w,b
 11409  0104CA  6EDF               	movwf	16351,c
 11410                           
 11411                           ;tcp.c: 101: header->windowSize = ((uint16_t) ethernetController_streamFromRXBuffer(1, i
      +                          pPayload.start) << 8);
 11412  0104CC  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 11413  0104D2  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 11414  0104D8  0E01               	movlw	1
 11415  0104DA  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11416  0104DE  0100               	movlb	0	; () banked
 11417  0104E0  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 11418  0104E2  5160               	movf	??_tcp_parseHeader& (0+255),w,b
 11419  0104E4  6F62               	movwf	(??_tcp_parseHeader+2)& (0+255),b
 11420  0104E6  6B61               	clrf	(??_tcp_parseHeader+1)& (0+255),b
 11421  0104E8  EE20 F00F          	lfsr	2,15
 11422  0104EC  5033               	movf	tcp_parseHeader@header,w,c
 11423  0104EE  26D9               	addwf	16345,f,c
 11424  0104F0  5034               	movf	tcp_parseHeader@header+1,w,c
 11425  0104F2  22DA               	addwfc	16346,f,c
 11426  0104F4  0060  F187  FFDE   	movff	??_tcp_parseHeader+1,16350
 11427  0104FA  0060  F18B  FFDD   	movff	??_tcp_parseHeader+2,16349
 11428                           
 11429                           ;tcp.c: 102: header->windowSize |= (uint16_t) ethernetController_streamFromRXBuffer(1, i
      +                          pPayload.start);
 11430  010500  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 11431  010506  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 11432  01050C  0E01               	movlw	1
 11433  01050E  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11434  010512  0100               	movlb	0	; () banked
 11435  010514  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 11436  010516  6B61               	clrf	(??_tcp_parseHeader+1)& (0+255),b
 11437  010518  EE20 F00F          	lfsr	2,15
 11438  01051C  5033               	movf	tcp_parseHeader@header,w,c
 11439  01051E  26D9               	addwf	16345,f,c
 11440  010520  5034               	movf	tcp_parseHeader@header+1,w,c
 11441  010522  22DA               	addwfc	16346,f,c
 11442  010524  5160               	movf	??_tcp_parseHeader& (0+255),w,b
 11443  010526  12DE               	iorwf	16350,f,c
 11444  010528  5161               	movf	(??_tcp_parseHeader+1)& (0+255),w,b
 11445  01052A  12DD               	iorwf	16349,f,c
 11446                           
 11447                           ;tcp.c: 103: header->checksum = ((uint16_t) ethernetController_streamFromRXBuffer(1, ipP
      +                          ayload.start) << 8);
 11448  01052C  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 11449  010532  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 11450  010538  0E01               	movlw	1
 11451  01053A  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11452  01053E  0100               	movlb	0	; () banked
 11453  010540  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 11454  010542  5160               	movf	??_tcp_parseHeader& (0+255),w,b
 11455  010544  6F62               	movwf	(??_tcp_parseHeader+2)& (0+255),b
 11456  010546  6B61               	clrf	(??_tcp_parseHeader+1)& (0+255),b
 11457  010548  EE20 F011          	lfsr	2,17
 11458  01054C  5033               	movf	tcp_parseHeader@header,w,c
 11459  01054E  26D9               	addwf	16345,f,c
 11460  010550  5034               	movf	tcp_parseHeader@header+1,w,c
 11461  010552  22DA               	addwfc	16346,f,c
 11462  010554  0060  F187  FFDE   	movff	??_tcp_parseHeader+1,16350
 11463  01055A  0060  F18B  FFDD   	movff	??_tcp_parseHeader+2,16349
 11464                           
 11465                           ;tcp.c: 104: header->checksum |= (uint16_t) ethernetController_streamFromRXBuffer(1, ipP
      +                          ayload.start);
 11466  010560  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 11467  010566  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 11468  01056C  0E01               	movlw	1
 11469  01056E  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11470  010572  0100               	movlb	0	; () banked
 11471  010574  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 11472  010576  6B61               	clrf	(??_tcp_parseHeader+1)& (0+255),b
 11473  010578  EE20 F011          	lfsr	2,17
 11474  01057C  5033               	movf	tcp_parseHeader@header,w,c
 11475  01057E  26D9               	addwf	16345,f,c
 11476  010580  5034               	movf	tcp_parseHeader@header+1,w,c
 11477  010582  22DA               	addwfc	16346,f,c
 11478  010584  5160               	movf	??_tcp_parseHeader& (0+255),w,b
 11479  010586  12DE               	iorwf	16350,f,c
 11480  010588  5161               	movf	(??_tcp_parseHeader+1)& (0+255),w,b
 11481  01058A  12DD               	iorwf	16349,f,c
 11482                           
 11483                           ;tcp.c: 105: header->urgentPointer = ((uint16_t) ethernetController_streamFromRXBuffer(1
      +                          , ipPayload.start) << 8);
 11484  01058C  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 11485  010592  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 11486  010598  0E01               	movlw	1
 11487  01059A  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11488  01059E  0100               	movlb	0	; () banked
 11489  0105A0  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 11490  0105A2  5160               	movf	??_tcp_parseHeader& (0+255),w,b
 11491  0105A4  6F62               	movwf	(??_tcp_parseHeader+2)& (0+255),b
 11492  0105A6  6B61               	clrf	(??_tcp_parseHeader+1)& (0+255),b
 11493  0105A8  EE20 F013          	lfsr	2,19
 11494  0105AC  5033               	movf	tcp_parseHeader@header,w,c
 11495  0105AE  26D9               	addwf	16345,f,c
 11496  0105B0  5034               	movf	tcp_parseHeader@header+1,w,c
 11497  0105B2  22DA               	addwfc	16346,f,c
 11498  0105B4  0060  F187  FFDE   	movff	??_tcp_parseHeader+1,16350
 11499  0105BA  0060  F18B  FFDD   	movff	??_tcp_parseHeader+2,16349
 11500                           
 11501                           ;tcp.c: 106: header->urgentPointer |= (uint16_t) ethernetController_streamFromRXBuffer(1
      +                          , ipPayload.start);
 11502  0105C0  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 11503  0105C6  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 11504  0105CC  0E01               	movlw	1
 11505  0105CE  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11506  0105D2  0100               	movlb	0	; () banked
 11507  0105D4  6F60               	movwf	??_tcp_parseHeader& (0+255),b
 11508  0105D6  6B61               	clrf	(??_tcp_parseHeader+1)& (0+255),b
 11509  0105D8  EE20 F013          	lfsr	2,19
 11510  0105DC  5033               	movf	tcp_parseHeader@header,w,c
 11511  0105DE  26D9               	addwf	16345,f,c
 11512  0105E0  5034               	movf	tcp_parseHeader@header+1,w,c
 11513  0105E2  22DA               	addwfc	16346,f,c
 11514  0105E4  5160               	movf	??_tcp_parseHeader& (0+255),w,b
 11515  0105E6  12DE               	iorwf	16350,f,c
 11516  0105E8  5161               	movf	(??_tcp_parseHeader+1)& (0+255),w,b
 11517  0105EA  12DD               	iorwf	16349,f,c
 11518                           
 11519                           ;tcp.c: 107: ethernetController_streamFromRXBuffer(2, ipPayload.start);
 11520  0105EC  0060  F0A8  F025   	movff	tcp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 11521  0105F2  0060  F0AC  F026   	movff	tcp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 11522  0105F8  0E02               	movlw	2
 11523  0105FA  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11524  0105FE  0012               	return		;funcret
 11525  010600                     __end_of_tcp_parseHeader:
 11526                           	opt stack 0
 11527                           
 11528 ;; *************** function _ipv4_parseHeader *****************
 11529 ;; Defined at:
 11530 ;;		line 154 in file "src/stack/protocols/ipv4.c"
 11531 ;; Parameters:    Size  Location     Type
 11532 ;;  field           2    0[BANK0 ] PTR struct memoryField
 11533 ;;		 -> ipv4_handleNewPacket@headerField(9), 
 11534 ;; Auto vars:     Size  Location     Type
 11535 ;;  i               1   24[BANK0 ] unsigned char 
 11536 ;;  i               1   23[BANK0 ] unsigned char 
 11537 ;;  ip             23   26[BANK0 ] struct ipv4_header
 11538 ;;  temp            1   25[BANK0 ] unsigned char 
 11539 ;; Return value:  Size  Location     Type
 11540 ;;                  23    0[BANK0 ] struct ipv4_header
 11541 ;; Registers used:
 11542 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11543 ;; Tracked objects:
 11544 ;;		On entry : 0/0
 11545 ;;		On exit  : 0/0
 11546 ;;		Unchanged: 0/0
 11547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11548 ;;      Params:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11549 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11550 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11551 ;;      Totals:         1      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11552 ;;Total ram usage:       50 bytes
 11553 ;; Hardware stack levels used:    1
 11554 ;; Hardware stack levels required when called:    8
 11555 ;; This function calls:
 11556 ;;		_ethernetController_streamFromRXBuffer
 11557 ;; This function is called by:
 11558 ;;		_ipv4_handleNewPacket
 11559 ;; This function uses a non-reentrant model
 11560 ;;
 11561                           
 11562                           	psect	text34
 11563  012D4E                     __ptext34:
 11564                           	opt stack 0
 11565  012D4E                     _ipv4_parseHeader:
 11566                           	opt stack 19
 11567                           
 11568                           ;ipv4.c: 155: ipv4_header_t ip;
 11569                           ;ipv4.c: 156: uint8_t temp;
 11570                           ;ipv4.c: 158: ethernetController_streamFromRXBuffer(0, field->start);
 11571                           
 11572                           ;incstack = 0
 11573  012D4E  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11574  012D54  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11575  012D5A  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11576  012D60  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11577  012D66  0E00               	movlw	0
 11578  012D68  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11579                           
 11580                           ;ipv4.c: 160: temp = ethernetController_streamFromRXBuffer(1, field->start);
 11581  012D6C  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11582  012D72  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11583  012D78  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11584  012D7E  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11585  012D84  0E01               	movlw	1
 11586  012D86  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11587  012D8A  0100               	movlb	0	; () banked
 11588  012D8C  6F79               	movwf	ipv4_parseHeader@temp& (0+255),b
 11589                           
 11590                           ; BSR set to: 0
 11591                           ;ipv4.c: 161: ip.version = (temp & 0xf0) >> 4;
 11592  012D8E  3979               	swapf	ipv4_parseHeader@temp& (0+255),w,b
 11593  012D90  0B0F               	andlw	15
 11594  012D92  0B0F               	andlw	15
 11595  012D94  6F7A               	movwf	ipv4_parseHeader@ip& (0+255),b
 11596                           
 11597                           ; BSR set to: 0
 11598                           ;ipv4.c: 162: ip.headerLength = temp & 0x0f;
 11599  012D96  5179               	movf	ipv4_parseHeader@temp& (0+255),w,b
 11600  012D98  0B0F               	andlw	15
 11601  012D9A  6F7B               	movwf	(ipv4_parseHeader@ip+1)& (0+255),b
 11602                           
 11603                           ;ipv4.c: 164: temp = ethernetController_streamFromRXBuffer(1, field->start);
 11604  012D9C  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11605  012DA2  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11606  012DA8  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11607  012DAE  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11608  012DB4  0E01               	movlw	1
 11609  012DB6  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11610  012DBA  0100               	movlb	0	; () banked
 11611  012DBC  6F79               	movwf	ipv4_parseHeader@temp& (0+255),b
 11612                           
 11613                           ; BSR set to: 0
 11614                           ;ipv4.c: 165: ip.dscp = (temp & 0x1f);
 11615  012DBE  5179               	movf	ipv4_parseHeader@temp& (0+255),w,b
 11616  012DC0  0B1F               	andlw	31
 11617  012DC2  6F7C               	movwf	(ipv4_parseHeader@ip+2)& (0+255),b
 11618                           
 11619                           ; BSR set to: 0
 11620                           ;ipv4.c: 166: ip.ecn = (temp & 0xC0) >> 6;
 11621  012DC4  4579               	rlncf	ipv4_parseHeader@temp& (0+255),w,b
 11622  012DC6  46E8               	rlncf	16360,f,c
 11623  012DC8  0B03               	andlw	3
 11624  012DCA  0B03               	andlw	3
 11625  012DCC  6F7D               	movwf	(ipv4_parseHeader@ip+3)& (0+255),b
 11626                           
 11627                           ;ipv4.c: 168: ip.totalLength = (ethernetController_streamFromRXBuffer(1, field->start) <
      +                          < 8);
 11628  012DCE  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11629  012DD4  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11630  012DDA  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11631  012DE0  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11632  012DE6  0E01               	movlw	1
 11633  012DE8  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11634  012DEC  0100               	movlb	0	; () banked
 11635  012DEE  6F7F               	movwf	(ipv4_parseHeader@ip+5)& (0+255),b
 11636  012DF0  6B7E               	clrf	(ipv4_parseHeader@ip+4)& (0+255),b
 11637                           
 11638                           ;ipv4.c: 169: ip.totalLength |= ethernetController_streamFromRXBuffer(1, field->start);
 11639  012DF2  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11640  012DF8  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11641  012DFE  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11642  012E04  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11643  012E0A  0E01               	movlw	1
 11644  012E0C  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11645  012E10  6E2A               	movwf	??_ipv4_parseHeader& (0+255),c
 11646  012E12  502A               	movf	??_ipv4_parseHeader,w,c
 11647  012E14  0100               	movlb	0	; () banked
 11648  012E16  137E               	iorwf	(ipv4_parseHeader@ip+4)& (0+255),f,b
 11649                           
 11650                           ;ipv4.c: 171: ip.identification = (ethernetController_streamFromRXBuffer(1, field->start
      +                          ) << 8);
 11651  012E18  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11652  012E1E  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11653  012E24  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11654  012E2A  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11655  012E30  0E01               	movlw	1
 11656  012E32  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11657  012E36  0100               	movlb	0	; () banked
 11658  012E38  6F81               	movwf	(ipv4_parseHeader@ip+7)& (0+255),b
 11659  012E3A  6B80               	clrf	(ipv4_parseHeader@ip+6)& (0+255),b
 11660                           
 11661                           ;ipv4.c: 172: ip.identification |= ethernetController_streamFromRXBuffer(1, field->start
      +                          );
 11662  012E3C  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11663  012E42  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11664  012E48  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11665  012E4E  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11666  012E54  0E01               	movlw	1
 11667  012E56  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11668  012E5A  6E2A               	movwf	??_ipv4_parseHeader& (0+255),c
 11669  012E5C  502A               	movf	??_ipv4_parseHeader,w,c
 11670  012E5E  0100               	movlb	0	; () banked
 11671  012E60  1380               	iorwf	(ipv4_parseHeader@ip+6)& (0+255),f,b
 11672                           
 11673                           ;ipv4.c: 174: temp = ethernetController_streamFromRXBuffer(1, field->start);
 11674  012E62  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11675  012E68  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11676  012E6E  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11677  012E74  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11678  012E7A  0E01               	movlw	1
 11679  012E7C  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11680  012E80  0100               	movlb	0	; () banked
 11681  012E82  6F79               	movwf	ipv4_parseHeader@temp& (0+255),b
 11682                           
 11683                           ; BSR set to: 0
 11684                           ;ipv4.c: 175: ip.flags = ((temp & 0xE0) >> 5);
 11685  012E84  3979               	swapf	ipv4_parseHeader@temp& (0+255),w,b
 11686  012E86  42E8               	rrncf	16360,f,c
 11687  012E88  0B07               	andlw	7
 11688  012E8A  0B07               	andlw	7
 11689  012E8C  6F82               	movwf	(ipv4_parseHeader@ip+8)& (0+255),b
 11690                           
 11691                           ; BSR set to: 0
 11692                           ;ipv4.c: 176: ip.fragmentOffset = ((temp & 0x1f) << 8);
 11693  012E8E  5179               	movf	ipv4_parseHeader@temp& (0+255),w,b
 11694  012E90  0B1F               	andlw	31
 11695  012E92  6F84               	movwf	(ipv4_parseHeader@ip+10)& (0+255),b
 11696  012E94  6B83               	clrf	(ipv4_parseHeader@ip+9)& (0+255),b
 11697                           
 11698                           ;ipv4.c: 178: ip.fragmentOffset |= ethernetController_streamFromRXBuffer(1, field->start
      +                          );
 11699  012E96  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11700  012E9C  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11701  012EA2  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11702  012EA8  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11703  012EAE  0E01               	movlw	1
 11704  012EB0  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11705  012EB4  6E2A               	movwf	??_ipv4_parseHeader& (0+255),c
 11706  012EB6  502A               	movf	??_ipv4_parseHeader,w,c
 11707  012EB8  0100               	movlb	0	; () banked
 11708  012EBA  1383               	iorwf	(ipv4_parseHeader@ip+9)& (0+255),f,b
 11709                           
 11710                           ;ipv4.c: 180: ip.timeToLive = ethernetController_streamFromRXBuffer(1, field->start);
 11711  012EBC  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11712  012EC2  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11713  012EC8  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11714  012ECE  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11715  012ED4  0E01               	movlw	1
 11716  012ED6  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11717  012EDA  0100               	movlb	0	; () banked
 11718  012EDC  6F85               	movwf	(ipv4_parseHeader@ip+11)& (0+255),b
 11719                           
 11720                           ;ipv4.c: 182: ip.protocol = ethernetController_streamFromRXBuffer(1, field->start);
 11721  012EDE  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11722  012EE4  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11723  012EEA  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11724  012EF0  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11725  012EF6  0E01               	movlw	1
 11726  012EF8  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11727  012EFC  0100               	movlb	0	; () banked
 11728  012EFE  6F86               	movwf	(ipv4_parseHeader@ip+12)& (0+255),b
 11729                           
 11730                           ;ipv4.c: 184: ip.checksum = (ethernetController_streamFromRXBuffer(1, field->start) << 8
      +                          );
 11731  012F00  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11732  012F06  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11733  012F0C  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11734  012F12  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11735  012F18  0E01               	movlw	1
 11736  012F1A  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11737  012F1E  0100               	movlb	0	; () banked
 11738  012F20  6F88               	movwf	(ipv4_parseHeader@ip+14)& (0+255),b
 11739  012F22  6B87               	clrf	(ipv4_parseHeader@ip+13)& (0+255),b
 11740                           
 11741                           ;ipv4.c: 185: ip.checksum |= ethernetController_streamFromRXBuffer(1, field->start);
 11742  012F24  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11743  012F2A  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11744  012F30  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11745  012F36  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11746  012F3C  0E01               	movlw	1
 11747  012F3E  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11748  012F42  6E2A               	movwf	??_ipv4_parseHeader& (0+255),c
 11749  012F44  502A               	movf	??_ipv4_parseHeader,w,c
 11750  012F46  0100               	movlb	0	; () banked
 11751  012F48  1387               	iorwf	(ipv4_parseHeader@ip+13)& (0+255),f,b
 11752                           
 11753                           ; BSR set to: 0
 11754                           ;ipv4.c: 187: for (uint8_t i = 0; i < 4; i++)
 11755  012F4A  0E00               	movlw	0
 11756  012F4C  6F77               	movwf	ipv4_parseHeader@i& (0+255),b
 11757  012F4E                     l11150:
 11758                           
 11759                           ; BSR set to: 0
 11760  012F4E  0E03               	movlw	3
 11761  012F50  6577               	cpfsgt	ipv4_parseHeader@i& (0+255),b
 11762  012F52  D001               	goto	l1168
 11763  012F54  D022               	goto	u13750
 11764  012F56                     l1168:
 11765                           
 11766                           ; BSR set to: 0
 11767                           ;ipv4.c: 188: ip.source.address[i] = ethernetController_streamFromRXBuffer(1, field->sta
      +                          rt);
 11768                           
 11769                           ; BSR set to: 0
 11770  012F56  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11771  012F5C  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11772  012F62  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11773  012F68  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11774  012F6E  0E01               	movlw	1
 11775  012F70  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11776  012F74  6E2A               	movwf	??_ipv4_parseHeader& (0+255),c
 11777  012F76  0100               	movlb	0	; () banked
 11778  012F78  5177               	movf	ipv4_parseHeader@i& (0+255),w,b
 11779  012F7A  0D01               	mullw	1
 11780  012F7C  0E0F               	movlw	15
 11781  012F7E  26F3               	addwf	16371,f,c
 11782  012F80  0E00               	movlw	0
 11783  012F82  22F4               	addwfc	16372,f,c
 11784  012F84  0E7A               	movlw	low ipv4_parseHeader@ip
 11785  012F86  24F3               	addwf	16371,w,c
 11786  012F88  6ED9               	movwf	16345,c
 11787  012F8A  0E00               	movlw	high ipv4_parseHeader@ip
 11788  012F8C  20F4               	addwfc	16372,w,c
 11789  012F8E  6EDA               	movwf	16346,c
 11790  012F90  0060  F0AB  FFDF   	movff	??_ipv4_parseHeader,16351
 11791                           
 11792                           ; BSR set to: 0
 11793  012F96  2B77               	incf	ipv4_parseHeader@i& (0+255),f,b
 11794  012F98  D7DA               	goto	l11150
 11795  012F9A                     u13750:
 11796                           
 11797                           ; BSR set to: 0
 11798                           ;ipv4.c: 190: for (uint8_t i = 0; i < 4; i++)
 11799                           
 11800                           ; BSR set to: 0
 11801  012F9A  0E00               	movlw	0
 11802  012F9C  6F78               	movwf	ipv4_parseHeader@i_3800& (0+255),b
 11803  012F9E                     l11162:
 11804                           
 11805                           ; BSR set to: 0
 11806  012F9E  0E03               	movlw	3
 11807  012FA0  6578               	cpfsgt	ipv4_parseHeader@i_3800& (0+255),b
 11808  012FA2  D001               	goto	l1170
 11809  012FA4  D022               	goto	u13770
 11810  012FA6                     l1170:
 11811                           
 11812                           ; BSR set to: 0
 11813                           ;ipv4.c: 191: ip.destination.address[i] = ethernetController_streamFromRXBuffer(1, field
      +                          ->start);
 11814                           
 11815                           ; BSR set to: 0
 11816  012FA6  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11817  012FAC  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11818  012FB2  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11819  012FB8  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11820  012FBE  0E01               	movlw	1
 11821  012FC0  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11822  012FC4  6E2A               	movwf	??_ipv4_parseHeader& (0+255),c
 11823  012FC6  0100               	movlb	0	; () banked
 11824  012FC8  5178               	movf	ipv4_parseHeader@i_3800& (0+255),w,b
 11825  012FCA  0D01               	mullw	1
 11826  012FCC  0E13               	movlw	19
 11827  012FCE  26F3               	addwf	16371,f,c
 11828  012FD0  0E00               	movlw	0
 11829  012FD2  22F4               	addwfc	16372,f,c
 11830  012FD4  0E7A               	movlw	low ipv4_parseHeader@ip
 11831  012FD6  24F3               	addwf	16371,w,c
 11832  012FD8  6ED9               	movwf	16345,c
 11833  012FDA  0E00               	movlw	high ipv4_parseHeader@ip
 11834  012FDC  20F4               	addwfc	16372,w,c
 11835  012FDE  6EDA               	movwf	16346,c
 11836  012FE0  0060  F0AB  FFDF   	movff	??_ipv4_parseHeader,16351
 11837                           
 11838                           ; BSR set to: 0
 11839  012FE6  2B78               	incf	ipv4_parseHeader@i_3800& (0+255),f,b
 11840  012FE8  D7DA               	goto	l11162
 11841  012FEA                     u13770:
 11842                           
 11843                           ; BSR set to: 0
 11844                           ;ipv4.c: 193: ethernetController_streamFromRXBuffer(2, field->start);
 11845                           
 11846                           ; BSR set to: 0
 11847  012FEA  0060  F183  FFD9   	movff	ipv4_parseHeader@field,16345
 11848  012FF0  0060  F187  FFDA   	movff	ipv4_parseHeader@field+1,16346
 11849  012FF6  006F FF78  F025    	movff	16350,ethernetController_streamFromRXBuffer@startAddress
 11850  012FFC  006F FF74  F026    	movff	16349,ethernetController_streamFromRXBuffer@startAddress+1
 11851  013002  0E02               	movlw	2
 11852  013004  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 11853                           
 11854                           ;ipv4.c: 195: return ip;
 11855  013008  EE20  F07A         	lfsr	2,ipv4_parseHeader@ip
 11856  01300C  EE00  F060         	lfsr	0,?_ipv4_parseHeader
 11857  013010  0E16               	movlw	22
 11858  013012                     u13781:
 11859  013012  006F FF6F FFEB     	movff	16347,16363
 11860  013018  06E8               	decf	16360,f,c
 11861  01301A  E2FB               	bc	u13781
 11862  01301C  0012               	return	
 11863  01301E                     __end_of_ipv4_parseHeader:
 11864                           	opt stack 0
 11865                           
 11866 ;; *************** function _ipv4_checkHeaderChecksum *****************
 11867 ;; Defined at:
 11868 ;;		line 198 in file "src/stack/protocols/ipv4.c"
 11869 ;; Parameters:    Size  Location     Type
 11870 ;;  header          2   36[COMRAM] PTR struct ipv4_header
 11871 ;;		 -> ipv4_handleNewPacket@header(23), 
 11872 ;; Auto vars:     Size  Location     Type
 11873 ;;  testHeader     23    0[BANK0 ] struct ipv4_header
 11874 ;; Return value:  Size  Location     Type
 11875 ;;                  1    wreg      unsigned char 
 11876 ;; Registers used:
 11877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11878 ;; Tracked objects:
 11879 ;;		On entry : 0/0
 11880 ;;		On exit  : 0/0
 11881 ;;		Unchanged: 0/0
 11882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11884 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11886 ;;      Totals:         4      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11887 ;;Total ram usage:       27 bytes
 11888 ;; Hardware stack levels used:    1
 11889 ;; Hardware stack levels required when called:    5
 11890 ;; This function calls:
 11891 ;;		_ipv4_calculateHeaderChecksum
 11892 ;; This function is called by:
 11893 ;;		_ipv4_handleNewPacket
 11894 ;; This function uses a non-reentrant model
 11895 ;;
 11896                           
 11897                           	psect	text35
 11898  016DF0                     __ptext35:
 11899                           	opt stack 0
 11900  016DF0                     _ipv4_checkHeaderChecksum:
 11901                           	opt stack 22
 11902                           
 11903                           ;ipv4.c: 199: ipv4_header_t testHeader;
 11904                           ;ipv4.c: 200: testHeader = *header;
 11905                           
 11906                           ;incstack = 0
 11907  016DF0  0060  F097  FFD9   	movff	ipv4_checkHeaderChecksum@header,16345
 11908  016DF6  0060  F09B  FFDA   	movff	ipv4_checkHeaderChecksum@header+1,16346
 11909  016DFC  EE10  F060         	lfsr	1,ipv4_checkHeaderChecksum@testHeader
 11910  016E00  0E16               	movlw	22
 11911  016E02                     u13791:
 11912  016E02  006F FF6F FFE3     	movff	16347,16355
 11913  016E08  06E8               	decf	16360,f,c
 11914  016E0A  E2FB               	bc	u13791
 11915                           
 11916                           ;ipv4.c: 201: testHeader.checksum = 0x0000;
 11917  016E0C  0E00               	movlw	0
 11918  016E0E  0100               	movlb	0	; () banked
 11919  016E10  6F6E               	movwf	(ipv4_checkHeaderChecksum@testHeader+14)& (0+255),b
 11920  016E12  0E00               	movlw	0
 11921  016E14  6F6D               	movwf	(ipv4_checkHeaderChecksum@testHeader+13)& (0+255),b
 11922                           
 11923                           ; BSR set to: 0
 11924                           ;ipv4.c: 202: ipv4_calculateHeaderChecksum(&testHeader);
 11925  016E16  0E60               	movlw	low ipv4_checkHeaderChecksum@testHeader
 11926  016E18  6E16               	movwf	ipv4_calculateHeaderChecksum@header,c
 11927  016E1A  0E00               	movlw	high ipv4_checkHeaderChecksum@testHeader
 11928  016E1C  6E17               	movwf	ipv4_calculateHeaderChecksum@header+1,c
 11929  016E1E  EC8C  F093         	call	_ipv4_calculateHeaderChecksum	;wreg free
 11930                           
 11931                           ;ipv4.c: 203: if (testHeader.checksum == header->checksum) {
 11932  016E22  EE20 F00D          	lfsr	2,13
 11933  016E26  5025               	movf	ipv4_checkHeaderChecksum@header,w,c
 11934  016E28  26D9               	addwf	16345,f,c
 11935  016E2A  5026               	movf	ipv4_checkHeaderChecksum@header+1,w,c
 11936  016E2C  22DA               	addwfc	16346,f,c
 11937  016E2E  50DE               	movf	16350,w,c
 11938  016E30  0100               	movlb	0	; () banked
 11939  016E32  196D               	xorwf	(ipv4_checkHeaderChecksum@testHeader+13)& (0+255),w,b
 11940  016E34  E106               	bnz	l11190
 11941  016E36  50DE               	movf	16350,w,c
 11942  016E38  196E               	xorwf	(ipv4_checkHeaderChecksum@testHeader+14)& (0+255),w,b
 11943  016E3A  A4D8               	btfss	16344,2,c
 11944  016E3C  D002               	goto	l1175
 11945                           
 11946                           ; BSR set to: 0
 11947                           ;ipv4.c: 204: return 1u;
 11948  016E3E  0E01               	movlw	1
 11949                           
 11950                           ; BSR set to: 0
 11951  016E40  0012               	return	
 11952  016E42                     l1175:
 11953  016E42                     l11190:
 11954                           
 11955                           ; BSR set to: 0
 11956                           ;ipv4.c: 205: }
 11957                           ;ipv4.c: 213: return 0u;
 11958  016E42  0E00               	movlw	0
 11959  016E44  0012               	return	
 11960  016E46                     __end_of_ipv4_checkHeaderChecksum:
 11961                           	opt stack 0
 11962                           
 11963 ;; *************** function _icmp_handleNewPacket *****************
 11964 ;; Defined at:
 11965 ;;		line 33 in file "src/stack/protocols/icmp.c"
 11966 ;; Parameters:    Size  Location     Type
 11967 ;;  ipHeader       23  110[BANK0 ] struct ipv4_header
 11968 ;;  ipPayload       9  133[BANK0 ] struct memoryField
 11969 ;; Auto vars:     Size  Location     Type
 11970 ;;  i               2  131[BANK2 ] unsigned int 
 11971 ;;  foo           128    0[BANK2 ] unsigned char [128]
 11972 ;;  icmpHeader      8  133[BANK2 ] struct icmpHeader
 11973 ;;  err             3  128[BANK2 ] struct error
 11974 ;; Return value:  Size  Location     Type
 11975 ;;                  3  110[BANK0 ] struct error
 11976 ;; Registers used:
 11977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11978 ;; Tracked objects:
 11979 ;;		On entry : 0/0
 11980 ;;		On exit  : 0/0
 11981 ;;		Unchanged: 0/0
 11982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11983 ;;      Params:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11984 ;;      Locals:         0       0       0     141       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11985 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11986 ;;      Totals:         0      34       0     141       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11987 ;;Total ram usage:      175 bytes
 11988 ;; Hardware stack levels used:    1
 11989 ;; Hardware stack levels required when called:   11
 11990 ;; This function calls:
 11991 ;;		_ethernetController_streamFromRXBuffer
 11992 ;;		_icmp_calculateChecksumBuf
 11993 ;;		_icmp_parseHeader
 11994 ;;		_icmp_sendEchoReply
 11995 ;; This function is called by:
 11996 ;;		_ipv4_handleNewPacket
 11997 ;; This function uses a non-reentrant model
 11998 ;;
 11999                           
 12000                           	psect	text36
 12001  015336                     __ptext36:
 12002                           	opt stack 0
 12003  015336                     _icmp_handleNewPacket:
 12004                           	opt stack 16
 12005                           
 12006                           ;icmp.c: 34: error_t err;
 12007                           ;icmp.c: 35: icmpHeader_t icmpHeader;
 12008                           ;icmp.c: 37: err.module = ERROR_MODULE_ICMP;
 12009                           
 12010                           ; BSR set to: 0
 12011                           ;incstack = 0
 12012  015336  0E05               	movlw	5
 12013  015338  0102               	movlb	2	; () banked
 12014  01533A  6F80               	movwf	icmp_handleNewPacket@err& (0+255),b
 12015                           
 12016                           ; BSR set to: 2
 12017                           ;icmp.c: 38: err.code = (uint16_t)0xffff;
 12018  01533C  6981               	setf	(icmp_handleNewPacket@err+1)& (0+255),b
 12019  01533E  6982               	setf	(icmp_handleNewPacket@err+2)& (0+255),b
 12020                           
 12021                           ; BSR set to: 2
 12022                           ;icmp.c: 40: if (ipPayload.length > 128) {
 12023  015340  0100               	movlb	0	; () banked
 12024  015342  51EA               	movf	(icmp_handleNewPacket@ipPayload+5)& (0+255),w,b
 12025  015344  E104               	bnz	u13810
 12026  015346  0E81               	movlw	129
 12027  015348  5DE9               	subwf	(icmp_handleNewPacket@ipPayload+4)& (0+255),w,b
 12028  01534A  A0D8               	btfss	16344,0,c
 12029  01534C  D008               	goto	l1286
 12030  01534E                     u13810:
 12031                           
 12032                           ; BSR set to: 0
 12033                           ;icmp.c: 41: err.module = ERROR_ICMP_MESSAGE_TOO_LONG;
 12034  01534E  0E59               	movlw	89
 12035  015350  6FEE               	movwf	??_icmp_handleNewPacket& (0+255),b
 12036  015352  0E02               	movlw	2
 12037  015354  6FEF               	movwf	(??_icmp_handleNewPacket+1)& (0+255),b
 12038  015356  0060  F3B8  F280   	movff	??_icmp_handleNewPacket,icmp_handleNewPacket@err
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;icmp.c: 42: return err;
 12042                           ;	Return value of _icmp_handleNewPacket is never used
 12043  01535C  0012               	return	
 12044  01535E                     l1286:
 12045                           
 12046                           ; BSR set to: 0
 12047                           ;icmp.c: 43: }
 12048                           ;icmp.c: 46: icmp_parseHeader(ipPayload, &icmpHeader);
 12049                           
 12050                           ; BSR set to: 0
 12051  01535E  EE20  F0E5         	lfsr	2,icmp_handleNewPacket@ipPayload
 12052  015362  EE00  F02A         	lfsr	0,icmp_parseHeader@ipPayload
 12053  015366  0E08               	movlw	8
 12054  015368                     u13821:
 12055  015368  006F FF6F FFEB     	movff	16347,16363
 12056  01536E  06E8               	decf	16360,f,c
 12057  015370  E2FB               	bc	u13821
 12058  015372  0E85               	movlw	low icmp_handleNewPacket@icmpHeader
 12059  015374  6E33               	movwf	icmp_parseHeader@icmpHeader,c
 12060  015376  0E02               	movlw	high icmp_handleNewPacket@icmpHeader
 12061  015378  6E34               	movwf	icmp_parseHeader@icmpHeader+1,c
 12062  01537A  EC7A  F09F         	call	_icmp_parseHeader	;wreg free
 12063                           
 12064                           ;icmp.c: 56: uint8_t foo[128];
 12065                           ;icmp.c: 57: ethernetController_streamFromRXBuffer(0, ipPayload.start);
 12066  01537E  0060  F394  F025   	movff	icmp_handleNewPacket@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 12067  015384  0060  F398  F026   	movff	icmp_handleNewPacket@ipPayload+1,ethernetController_streamFromRXBuffer@startAddre
      +                          ss+1
 12068  01538A  0E00               	movlw	0
 12069  01538C  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 12070                           
 12071                           ;icmp.c: 58: for (uint16_t i = 0; i < ipPayload.length + 4; i++) {
 12072  015390  0E00               	movlw	0
 12073  015392  0102               	movlb	2	; () banked
 12074  015394  6F84               	movwf	(icmp_handleNewPacket@i+1)& (0+255),b
 12075  015396  0E00               	movlw	0
 12076  015398  6F83               	movwf	icmp_handleNewPacket@i& (0+255),b
 12077  01539A  D017               	goto	l1288
 12078  01539C                     
 12079                           ; BSR set to: 2
 12080                           ;icmp.c: 59: foo[i] = ethernetController_streamFromRXBuffer(1, ipPayload.start);
 12081                           
 12082                           ; BSR set to: 2
 12083  01539C  0060  F394  F025   	movff	icmp_handleNewPacket@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 12084  0153A2  0060  F398  F026   	movff	icmp_handleNewPacket@ipPayload+1,ethernetController_streamFromRXBuffer@startAddre
      +                          ss+1
 12085  0153A8  0E01               	movlw	1
 12086  0153AA  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 12087  0153AE  0100               	movlb	0	; () banked
 12088  0153B0  6FEE               	movwf	??_icmp_handleNewPacket& (0+255),b
 12089  0153B2  0E00               	movlw	low icmp_handleNewPacket@foo
 12090  0153B4  0102               	movlb	2	; () banked
 12091  0153B6  2583               	addwf	icmp_handleNewPacket@i& (0+255),w,b
 12092  0153B8  6ED9               	movwf	16345,c
 12093  0153BA  0E02               	movlw	high icmp_handleNewPacket@foo
 12094  0153BC  2184               	addwfc	(icmp_handleNewPacket@i+1)& (0+255),w,b
 12095  0153BE  6EDA               	movwf	16346,c
 12096  0153C0  0060  F3BB  FFDF   	movff	??_icmp_handleNewPacket,16351
 12097                           
 12098                           ; BSR set to: 2
 12099  0153C6  4B83               	infsnz	icmp_handleNewPacket@i& (0+255),f,b
 12100  0153C8  2B84               	incf	(icmp_handleNewPacket@i+1)& (0+255),f,b
 12101  0153CA                     l1288:
 12102                           
 12103                           ; BSR set to: 2
 12104                           
 12105                           ; BSR set to: 2
 12106  0153CA  0E04               	movlw	4
 12107  0153CC  0100               	movlb	0	; () banked
 12108  0153CE  25E9               	addwf	(icmp_handleNewPacket@ipPayload+4)& (0+255),w,b
 12109  0153D0  6FEE               	movwf	??_icmp_handleNewPacket& (0+255),b
 12110  0153D2  0E00               	movlw	0
 12111  0153D4  21EA               	addwfc	(icmp_handleNewPacket@ipPayload+5)& (0+255),w,b
 12112  0153D6  6FEF               	movwf	(??_icmp_handleNewPacket+1)& (0+255),b
 12113  0153D8  51EE               	movf	??_icmp_handleNewPacket& (0+255),w,b
 12114  0153DA  0102               	movlb	2	; () banked
 12115  0153DC  5D83               	subwf	icmp_handleNewPacket@i& (0+255),w,b
 12116  0153DE  0100               	movlb	0	; () banked
 12117  0153E0  51EF               	movf	(??_icmp_handleNewPacket+1)& (0+255),w,b
 12118  0153E2  0102               	movlb	2	; () banked
 12119  0153E4  5984               	subwfb	(icmp_handleNewPacket@i+1)& (0+255),w,b
 12120  0153E6  A0D8               	btfss	16344,0,c
 12121  0153E8  D7D9               	goto	l1289
 12122                           
 12123                           ; BSR set to: 2
 12124                           ;icmp.c: 60: }
 12125                           ;icmp.c: 61: ethernetController_streamFromRXBuffer(2, ipPayload.start);
 12126                           
 12127                           ; BSR set to: 2
 12128  0153EA  0060  F394  F025   	movff	icmp_handleNewPacket@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 12129  0153F0  0060  F398  F026   	movff	icmp_handleNewPacket@ipPayload+1,ethernetController_streamFromRXBuffer@startAddre
      +                          ss+1
 12130  0153F6  0E02               	movlw	2
 12131  0153F8  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 12132                           
 12133                           ;icmp.c: 63: if (icmp_calculateChecksumBuf(&foo[0], ipPayload.length) != icmpHeader.chec
      +                          ksum) {
 12134  0153FC  0E00               	movlw	low icmp_handleNewPacket@foo
 12135  0153FE  6E16               	movwf	icmp_calculateChecksumBuf@buf,c
 12136  015400  0E02               	movlw	high icmp_handleNewPacket@foo
 12137  015402  6E17               	movwf	icmp_calculateChecksumBuf@buf+1,c
 12138  015404  0060  F3A4  F018   	movff	icmp_handleNewPacket@ipPayload+4,icmp_calculateChecksumBuf@ipPayloadLength
 12139  01540A  0060  F3A8  F019   	movff	icmp_handleNewPacket@ipPayload+5,icmp_calculateChecksumBuf@ipPayloadLength+1
 12140  015410  EC31  F0A7         	call	_icmp_calculateChecksumBuf	;wreg free
 12141                           
 12142                           ;icmp.c: 69: }
 12143                           ;icmp.c: 71: if (icmpHeader.typeOfMessage == ICMP_ECHO_REQUEST) {
 12144  015414  0E08               	movlw	8
 12145  015416  0102               	movlb	2	; () banked
 12146  015418  1985               	xorwf	icmp_handleNewPacket@icmpHeader& (0+255),w,b
 12147  01541A  A4D8               	btfss	16344,2,c
 12148  01541C  0012               	return	
 12149                           
 12150                           ; BSR set to: 2
 12151                           ;icmp.c: 80: icmp_sendEchoReply(ipHeader, icmpHeader, ipPayload);
 12152  01541E  EE20  F0CE         	lfsr	2,icmp_handleNewPacket@ipHeader
 12153  015422  EE00  F0A2         	lfsr	0,icmp_sendEchoReply@ipHeader
 12154  015426  0E16               	movlw	22
 12155  015428                     u13851:
 12156  015428  006F FF6F FFEB     	movff	16347,16363
 12157  01542E  06E8               	decf	16360,f,c
 12158  015430  E2FB               	bc	u13851
 12159  015432  EE20  F285         	lfsr	2,icmp_handleNewPacket@icmpHeader
 12160  015436  EE00  F0B9         	lfsr	0,icmp_sendEchoReply@icmpRequestHeader
 12161  01543A  0E07               	movlw	7
 12162  01543C                     u13861:
 12163  01543C  006F FF6F FFEB     	movff	16347,16363
 12164  015442  06E8               	decf	16360,f,c
 12165  015444  E2FB               	bc	u13861
 12166  015446  EE20  F0E5         	lfsr	2,icmp_handleNewPacket@ipPayload
 12167  01544A  EE00  F0C1         	lfsr	0,icmp_sendEchoReply@ipPayload
 12168  01544E  0E08               	movlw	8
 12169  015450                     u13871:
 12170  015450  006F FF6F FFEB     	movff	16347,16363
 12171  015456  06E8               	decf	16360,f,c
 12172  015458  E2FB               	bc	u13871
 12173  01545A  EC3E  F09D         	call	_icmp_sendEchoReply	;wreg free
 12174  01545E  0012               	return	
 12175  015460                     __end_of_icmp_handleNewPacket:
 12176                           	opt stack 0
 12177                           
 12178 ;; *************** function _icmp_sendEchoReply *****************
 12179 ;; Defined at:
 12180 ;;		line 127 in file "src/stack/protocols/icmp.c"
 12181 ;; Parameters:    Size  Location     Type
 12182 ;;  ipHeader       23   66[BANK0 ] struct ipv4_header
 12183 ;;  icmpRequestH    8   89[BANK0 ] struct icmpHeader
 12184 ;;  ipPayload       9   97[BANK0 ] struct memoryField
 12185 ;; Auto vars:     Size  Location     Type
 12186 ;;  i               2   99[BANK1 ] unsigned int 
 12187 ;;  i               1   98[BANK1 ] unsigned char 
 12188 ;;  ipReply        66  109[BANK1 ] struct ipv4_packet
 12189 ;;  icmpMessage    64    0[BANK1 ] unsigned char [64]
 12190 ;;  headerBuf      32   64[BANK1 ] unsigned char [32]
 12191 ;;  icmpHeader      8  101[BANK1 ] struct icmpHeader
 12192 ;;  checksum        2   96[BANK1 ] unsigned int 
 12193 ;; Return value:  Size  Location     Type
 12194 ;;                  1    wreg      void 
 12195 ;; Registers used:
 12196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12197 ;; Tracked objects:
 12198 ;;		On entry : 0/0
 12199 ;;		On exit  : 0/0
 12200 ;;		Unchanged: 0/0
 12201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12202 ;;      Params:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12203 ;;      Locals:         0       0     175       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12204 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12205 ;;      Totals:         0      44     175       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12206 ;;Total ram usage:      219 bytes
 12207 ;; Hardware stack levels used:    1
 12208 ;; Hardware stack levels required when called:   10
 12209 ;; This function calls:
 12210 ;;		_ethernetController_streamFromRXBuffer
 12211 ;;		_icmp_calculateChecksumBuf
 12212 ;;		_icmp_writeHeaderIntoBuffer
 12213 ;;		_ipv4_calculateHeaderChecksum
 12214 ;;		_ipv4_getIPSourceAddress
 12215 ;;		_ipv4_streamToTransmissionBuffer
 12216 ;;		_ipv4_txFrameRequest
 12217 ;;		_ipv4_writeHeaderIntoBuffer
 12218 ;; This function is called by:
 12219 ;;		_icmp_handleNewPacket
 12220 ;; This function uses a non-reentrant model
 12221 ;;
 12222                           
 12223                           	psect	text37
 12224  013A7C                     __ptext37:
 12225                           	opt stack 0
 12226  013A7C                     _icmp_sendEchoReply:
 12227                           	opt stack 16
 12228                           
 12229                           ;icmp.c: 128: ipv4_packet_t ipReply;
 12230                           ;icmp.c: 129: icmpHeader_t icmpHeader;
 12231                           ;icmp.c: 131: uint8_t headerBuf[32];
 12232                           ;icmp.c: 132: ipReply.ipv4Header.headerLength = 5;
 12233                           
 12234                           ;incstack = 0
 12235  013A7C  0E05               	movlw	5
 12236  013A7E  0101               	movlb	1	; () banked
 12237  013A80  6F6E               	movwf	(icmp_sendEchoReply@ipReply+1)& (0+255),b
 12238                           
 12239                           ;icmp.c: 133: ipReply.ipv4Header.dscp = 0x00;
 12240  013A82  0E00               	movlw	0
 12241  013A84  6F6F               	movwf	(icmp_sendEchoReply@ipReply+2)& (0+255),b
 12242                           
 12243                           ;icmp.c: 134: ipReply.ipv4Header.ecn = 0x00;
 12244  013A86  0E00               	movlw	0
 12245  013A88  6F70               	movwf	(icmp_sendEchoReply@ipReply+3)& (0+255),b
 12246                           
 12247                           ;icmp.c: 135: ipReply.ipv4Header.flags = 0x00;
 12248  013A8A  0E00               	movlw	0
 12249  013A8C  6F75               	movwf	(icmp_sendEchoReply@ipReply+8)& (0+255),b
 12250                           
 12251                           ;icmp.c: 136: ipReply.ipv4Header.fragmentOffset = 0x0000;
 12252  013A8E  0E00               	movlw	0
 12253  013A90  6F77               	movwf	(icmp_sendEchoReply@ipReply+10)& (0+255),b
 12254  013A92  0E00               	movlw	0
 12255  013A94  6F76               	movwf	(icmp_sendEchoReply@ipReply+9)& (0+255),b
 12256                           
 12257                           ;icmp.c: 137: ipReply.ipv4Header.protocol = IPv4_PROTOCOL_ICMP;
 12258  013A96  0E01               	movlw	1
 12259  013A98  6F79               	movwf	(icmp_sendEchoReply@ipReply+12)& (0+255),b
 12260                           
 12261                           ; BSR set to: 1
 12262                           ;icmp.c: 138: ipReply.ipv4Header.destination = ipHeader.source;
 12263  013A9A  0060  F2C4  F180   	movff	icmp_sendEchoReply@ipHeader+15,icmp_sendEchoReply@ipReply+19
 12264  013AA0  0060  F2C8  F181   	movff	icmp_sendEchoReply@ipHeader+16,icmp_sendEchoReply@ipReply+20
 12265  013AA6  0060  F2CC  F182   	movff	icmp_sendEchoReply@ipHeader+17,icmp_sendEchoReply@ipReply+21
 12266  013AAC  0060  F2D0  F183   	movff	icmp_sendEchoReply@ipHeader+18,icmp_sendEchoReply@ipReply+22
 12267                           
 12268                           ; BSR set to: 1
 12269                           ;icmp.c: 139: ipReply.ipv4Header.source = ipv4_getIPSourceAddress();
 12270  013AB2  ECFB  F0BA         	call	_ipv4_getIPSourceAddress	;wreg free
 12271  013AB6  0060  F058  F17C   	movff	?_ipv4_getIPSourceAddress,icmp_sendEchoReply@ipReply+15
 12272  013ABC  0060  F05C  F17D   	movff	?_ipv4_getIPSourceAddress+1,icmp_sendEchoReply@ipReply+16
 12273  013AC2  0060  F060  F17E   	movff	?_ipv4_getIPSourceAddress+2,icmp_sendEchoReply@ipReply+17
 12274  013AC8  0060  F064  F17F   	movff	?_ipv4_getIPSourceAddress+3,icmp_sendEchoReply@ipReply+18
 12275                           
 12276                           ;icmp.c: 140: ipReply.ipv4Header.totalLength = ipHeader.totalLength;
 12277  013ACE  0060  F298  F171   	movff	icmp_sendEchoReply@ipHeader+4,icmp_sendEchoReply@ipReply+4
 12278  013AD4  0060  F29C  F172   	movff	icmp_sendEchoReply@ipHeader+5,icmp_sendEchoReply@ipReply+5
 12279                           
 12280                           ;icmp.c: 141: ipReply.ipv4Header.timeToLive = 255;
 12281  013ADA  0101               	movlb	1	; () banked
 12282  013ADC  6978               	setf	(icmp_sendEchoReply@ipReply+11)& (0+255),b
 12283                           
 12284                           ; BSR set to: 1
 12285                           ;icmp.c: 142: ipReply.ipv4Header.version = 4;
 12286  013ADE  0E04               	movlw	4
 12287  013AE0  6F6D               	movwf	icmp_sendEchoReply@ipReply& (0+255),b
 12288                           
 12289                           ; BSR set to: 1
 12290                           ;icmp.c: 144: ipv4_calculateHeaderChecksum(&ipReply.ipv4Header);
 12291  013AE2  0E6D               	movlw	low icmp_sendEchoReply@ipReply
 12292  013AE4  6E16               	movwf	ipv4_calculateHeaderChecksum@header,c
 12293  013AE6  0E01               	movlw	high icmp_sendEchoReply@ipReply
 12294  013AE8  6E17               	movwf	ipv4_calculateHeaderChecksum@header+1,c
 12295  013AEA  EC8C  F093         	call	_ipv4_calculateHeaderChecksum	;wreg free
 12296                           
 12297                           ;icmp.c: 145: ipv4_writeHeaderIntoBuffer(ipReply.ipv4Header, &headerBuf);
 12298  013AEE  EE20  F16D         	lfsr	2,icmp_sendEchoReply@ipReply
 12299  013AF2  EE00  F016         	lfsr	0,ipv4_writeHeaderIntoBuffer@header
 12300  013AF6  0E16               	movlw	22
 12301  013AF8                     u12651:
 12302  013AF8  006F FF6F FFEB     	movff	16347,16363
 12303  013AFE  06E8               	decf	16360,f,c
 12304  013B00  E2FB               	bc	u12651
 12305  013B02  0E40               	movlw	low icmp_sendEchoReply@headerBuf
 12306  013B04  6E2D               	movwf	ipv4_writeHeaderIntoBuffer@ptr,c
 12307  013B06  0E01               	movlw	high icmp_sendEchoReply@headerBuf
 12308  013B08  6E2E               	movwf	ipv4_writeHeaderIntoBuffer@ptr+1,c
 12309  013B0A  EC1D  F0A3         	call	_ipv4_writeHeaderIntoBuffer	;wreg free
 12310                           
 12311                           ;icmp.c: 147: icmpHeader.typeOfMessage = ICMP_ECHO_REPLY;
 12312  013B0E  0E00               	movlw	0
 12313  013B10  0101               	movlb	1	; () banked
 12314  013B12  6F65               	movwf	icmp_sendEchoReply@icmpHeader& (0+255),b
 12315                           
 12316                           ; BSR set to: 1
 12317                           ;icmp.c: 148: icmpHeader.code = 0x00;
 12318  013B14  0E00               	movlw	0
 12319  013B16  6F66               	movwf	(icmp_sendEchoReply@icmpHeader+1)& (0+255),b
 12320                           
 12321                           ; BSR set to: 1
 12322                           ;icmp.c: 149: icmpHeader.headerData = icmpRequestHeader.headerData;
 12323  013B18  0060  F2F4  F169   	movff	icmp_sendEchoReply@icmpRequestHeader+4,icmp_sendEchoReply@icmpHeader+4
 12324  013B1E  0060  F2F8  F16A   	movff	icmp_sendEchoReply@icmpRequestHeader+5,icmp_sendEchoReply@icmpHeader+5
 12325  013B24  0060  F2FC  F16B   	movff	icmp_sendEchoReply@icmpRequestHeader+6,icmp_sendEchoReply@icmpHeader+6
 12326  013B2A  0060  F300  F16C   	movff	icmp_sendEchoReply@icmpRequestHeader+7,icmp_sendEchoReply@icmpHeader+7
 12327                           
 12328                           ; BSR set to: 1
 12329                           ;icmp.c: 150: icmpHeader.checksum = icmpRequestHeader.checksum;
 12330  013B30  0060  F2EC  F167   	movff	icmp_sendEchoReply@icmpRequestHeader+2,icmp_sendEchoReply@icmpHeader+2
 12331  013B36  0060  F2F0  F168   	movff	icmp_sendEchoReply@icmpRequestHeader+3,icmp_sendEchoReply@icmpHeader+3
 12332                           
 12333                           ; BSR set to: 1
 12334                           ;icmp.c: 152: uint8_t icmpMessage[64];
 12335                           ;icmp.c: 153: icmp_writeHeaderIntoBuffer(&icmpMessage[0], icmpHeader);
 12336  013B3C  0E00               	movlw	low icmp_sendEchoReply@icmpMessage
 12337  013B3E  6E16               	movwf	icmp_writeHeaderIntoBuffer@buf,c
 12338  013B40  0E01               	movlw	high icmp_sendEchoReply@icmpMessage
 12339  013B42  6E17               	movwf	icmp_writeHeaderIntoBuffer@buf+1,c
 12340  013B44  EE20  F165         	lfsr	2,icmp_sendEchoReply@icmpHeader
 12341  013B48  EE00  F018         	lfsr	0,icmp_writeHeaderIntoBuffer@header
 12342  013B4C  0E07               	movlw	7
 12343  013B4E                     u12661:
 12344  013B4E  006F FF6F FFEB     	movff	16347,16363
 12345  013B54  06E8               	decf	16360,f,c
 12346  013B56  E2FB               	bc	u12661
 12347  013B58  ECEB  F0AD         	call	_icmp_writeHeaderIntoBuffer	;wreg free
 12348                           
 12349                           ;icmp.c: 155: ethernetController_streamFromRXBuffer(0, ipPayload.start + 8);
 12350  013B5C  0E08               	movlw	8
 12351  013B5E  0100               	movlb	0	; () banked
 12352  013B60  25C1               	addwf	icmp_sendEchoReply@ipPayload& (0+255),w,b
 12353  013B62  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 12354  013B64  0E00               	movlw	0
 12355  013B66  21C2               	addwfc	(icmp_sendEchoReply@ipPayload+1)& (0+255),w,b
 12356  013B68  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 12357  013B6A  0E00               	movlw	0
 12358  013B6C  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 12359                           
 12360                           ;icmp.c: 156: for (uint8_t i = 8; i < ipPayload.length + 4; i++) {
 12361  013B70  0E08               	movlw	8
 12362  013B72  0101               	movlb	1	; () banked
 12363  013B74  6F62               	movwf	icmp_sendEchoReply@i& (0+255),b
 12364  013B76  D019               	goto	l1306
 12365  013B78                     
 12366                           ;icmp.c: 157: icmpMessage[i] = ethernetController_streamFromRXBuffer(1, ipPayload.start 
      +                          + 8);
 12367                           
 12368                           ; BSR set to: 1
 12369  013B78  0E08               	movlw	8
 12370  013B7A  0100               	movlb	0	; () banked
 12371  013B7C  25C1               	addwf	icmp_sendEchoReply@ipPayload& (0+255),w,b
 12372  013B7E  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 12373  013B80  0E00               	movlw	0
 12374  013B82  21C2               	addwfc	(icmp_sendEchoReply@ipPayload+1)& (0+255),w,b
 12375  013B84  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 12376  013B86  0E01               	movlw	1
 12377  013B88  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 12378  013B8C  0100               	movlb	0	; () banked
 12379  013B8E  6FCA               	movwf	??_icmp_sendEchoReply& (0+255),b
 12380  013B90  0101               	movlb	1	; () banked
 12381  013B92  5162               	movf	icmp_sendEchoReply@i& (0+255),w,b
 12382  013B94  0D01               	mullw	1
 12383  013B96  0E00               	movlw	low icmp_sendEchoReply@icmpMessage
 12384  013B98  24F3               	addwf	16371,w,c
 12385  013B9A  6ED9               	movwf	16345,c
 12386  013B9C  0E01               	movlw	high icmp_sendEchoReply@icmpMessage
 12387  013B9E  20F4               	addwfc	16372,w,c
 12388  013BA0  6EDA               	movwf	16346,c
 12389  013BA2  0060  F32B  FFDF   	movff	??_icmp_sendEchoReply,16351
 12390                           
 12391                           ; BSR set to: 1
 12392  013BA8  2B62               	incf	icmp_sendEchoReply@i& (0+255),f,b
 12393  013BAA                     l1306:
 12394                           
 12395                           ; BSR set to: 1
 12396                           
 12397                           ; BSR set to: 1
 12398  013BAA  0E04               	movlw	4
 12399  013BAC  0100               	movlb	0	; () banked
 12400  013BAE  25C5               	addwf	(icmp_sendEchoReply@ipPayload+4)& (0+255),w,b
 12401  013BB0  6FCA               	movwf	??_icmp_sendEchoReply& (0+255),b
 12402  013BB2  0E00               	movlw	0
 12403  013BB4  21C6               	addwfc	(icmp_sendEchoReply@ipPayload+5)& (0+255),w,b
 12404  013BB6  6FCB               	movwf	(??_icmp_sendEchoReply+1)& (0+255),b
 12405  013BB8  0101               	movlb	1	; () banked
 12406  013BBA  5162               	movf	icmp_sendEchoReply@i& (0+255),w,b
 12407  013BBC  0100               	movlb	0	; () banked
 12408  013BBE  6FCC               	movwf	(??_icmp_sendEchoReply+2)& (0+255),b
 12409  013BC0  6BCD               	clrf	(??_icmp_sendEchoReply+3)& (0+255),b
 12410  013BC2  51CA               	movf	??_icmp_sendEchoReply& (0+255),w,b
 12411  013BC4  5DCC               	subwf	(??_icmp_sendEchoReply+2)& (0+255),w,b
 12412  013BC6  51CB               	movf	(??_icmp_sendEchoReply+1)& (0+255),w,b
 12413  013BC8  59CD               	subwfb	(??_icmp_sendEchoReply+3)& (0+255),w,b
 12414  013BCA  A0D8               	btfss	16344,0,c
 12415  013BCC  D7D5               	goto	l1307
 12416                           
 12417                           ; BSR set to: 0
 12418                           ;icmp.c: 158: }
 12419                           ;icmp.c: 159: ethernetController_streamFromRXBuffer(2, ipPayload.start + 8);
 12420                           
 12421                           ; BSR set to: 0
 12422  013BCE  0E08               	movlw	8
 12423  013BD0  25C1               	addwf	icmp_sendEchoReply@ipPayload& (0+255),w,b
 12424  013BD2  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 12425  013BD4  0E00               	movlw	0
 12426  013BD6  21C2               	addwfc	(icmp_sendEchoReply@ipPayload+1)& (0+255),w,b
 12427  013BD8  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 12428  013BDA  0E02               	movlw	2
 12429  013BDC  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 12430                           
 12431                           ;icmp.c: 161: uint16_t checksum = icmp_calculateChecksumBuf(&icmpMessage[0], ipPayload.l
      +                          ength);
 12432  013BE0  0E00               	movlw	low icmp_sendEchoReply@icmpMessage
 12433  013BE2  6E16               	movwf	icmp_calculateChecksumBuf@buf,c
 12434  013BE4  0E01               	movlw	high icmp_sendEchoReply@icmpMessage
 12435  013BE6  6E17               	movwf	icmp_calculateChecksumBuf@buf+1,c
 12436  013BE8  0060  F314  F018   	movff	icmp_sendEchoReply@ipPayload+4,icmp_calculateChecksumBuf@ipPayloadLength
 12437  013BEE  0060  F318  F019   	movff	icmp_sendEchoReply@ipPayload+5,icmp_calculateChecksumBuf@ipPayloadLength+1
 12438  013BF4  EC31  F0A7         	call	_icmp_calculateChecksumBuf	;wreg free
 12439  013BF8  0060  F058  F160   	movff	?_icmp_calculateChecksumBuf,icmp_sendEchoReply@checksum
 12440  013BFE  0060  F05C  F161   	movff	?_icmp_calculateChecksumBuf+1,icmp_sendEchoReply@checksum+1
 12441                           
 12442                           ;icmp.c: 163: icmpMessage [2] = (checksum & 0xff00) >> 8;
 12443  013C04  0101               	movlb	1	; () banked
 12444  013C06  5161               	movf	(icmp_sendEchoReply@checksum+1)& (0+255),w,b
 12445  013C08  6F02               	movwf	(icmp_sendEchoReply@icmpMessage+2)& (0+255),b
 12446                           
 12447                           ; BSR set to: 1
 12448                           ;icmp.c: 164: icmpMessage [3] = checksum & 0x00ff;
 12449  013C0A  0060  F580  F103   	movff	icmp_sendEchoReply@checksum,icmp_sendEchoReply@icmpMessage+3
 12450                           
 12451                           ; BSR set to: 1
 12452                           ;icmp.c: 166: ipv4_txFrameRequest(&ipReply);
 12453  013C10  0E6D               	movlw	low icmp_sendEchoReply@ipReply
 12454  013C12  0100               	movlb	0	; () banked
 12455  013C14  6F8A               	movwf	ipv4_txFrameRequest@packet& (0+255),b
 12456  013C16  0E01               	movlw	high icmp_sendEchoReply@ipReply
 12457  013C18  6F8B               	movwf	(ipv4_txFrameRequest@packet+1)& (0+255),b
 12458  013C1A  EC97  F0A4         	call	_ipv4_txFrameRequest	;wreg free
 12459                           
 12460                           ;icmp.c: 168: for (uint16_t i = 0; i < ipReply.ipv4Header.totalLength; i++) {
 12461  013C1E  0E00               	movlw	0
 12462  013C20  0101               	movlb	1	; () banked
 12463  013C22  6F64               	movwf	(icmp_sendEchoReply@i_4270+1)& (0+255),b
 12464  013C24  0E00               	movlw	0
 12465  013C26  6F63               	movwf	icmp_sendEchoReply@i_4270& (0+255),b
 12466  013C28  D03D               	goto	l1309
 12467  013C2A                     
 12468                           ; BSR set to: 1
 12469                           ;icmp.c: 169: if (i < ipReply.ipv4Header.headerLength * 4) {
 12470                           
 12471                           ; BSR set to: 1
 12472  013C2A  516E               	movf	(icmp_sendEchoReply@ipReply+1)& (0+255),w,b
 12473  013C2C  0D04               	mullw	4
 12474  013C2E  50F3               	movf	16371,w,c
 12475  013C30  5D63               	subwf	icmp_sendEchoReply@i_4270& (0+255),w,b
 12476  013C32  50F4               	movf	16372,w,c
 12477  013C34  5964               	subwfb	(icmp_sendEchoReply@i_4270+1)& (0+255),w,b
 12478  013C36  B0D8               	btfsc	16344,0,c
 12479  013C38  D014               	goto	l1311
 12480                           
 12481                           ; BSR set to: 1
 12482                           ;icmp.c: 170: ipv4_streamToTransmissionBuffer(headerBuf[i], ipReply);
 12483  013C3A  EE20  F16D         	lfsr	2,icmp_sendEchoReply@ipReply
 12484  013C3E  EE00  F060         	lfsr	0,ipv4_streamToTransmissionBuffer@packet
 12485  013C42  0E41               	movlw	65
 12486  013C44                     u12691:
 12487  013C44  006F FF6F FFEB     	movff	16347,16363
 12488  013C4A  06E8               	decf	16360,f,c
 12489  013C4C  E2FB               	bc	u12691
 12490  013C4E  0E40               	movlw	low icmp_sendEchoReply@headerBuf
 12491  013C50  2563               	addwf	icmp_sendEchoReply@i_4270& (0+255),w,b
 12492  013C52  6ED9               	movwf	16345,c
 12493  013C54  0E01               	movlw	high icmp_sendEchoReply@headerBuf
 12494  013C56  2164               	addwfc	(icmp_sendEchoReply@i_4270+1)& (0+255),w,b
 12495  013C58  6EDA               	movwf	16346,c
 12496  013C5A  50DF               	movf	16351,w,c
 12497  013C5C  ECEC  F0BA         	call	_ipv4_streamToTransmissionBuffer
 12498                           
 12499                           ;icmp.c: 171: } else {
 12500  013C60  D01E               	goto	l1312
 12501  013C62                     l1311:
 12502                           
 12503                           ;icmp.c: 172: ipv4_streamToTransmissionBuffer(icmpMessage[i - (ipReply.ipv4Header.header
      +                          Length * 4)], ipReply);
 12504  013C62  EE20  F16D         	lfsr	2,icmp_sendEchoReply@ipReply
 12505  013C66  EE00  F060         	lfsr	0,ipv4_streamToTransmissionBuffer@packet
 12506  013C6A  0E41               	movlw	65
 12507  013C6C                     u12701:
 12508  013C6C  006F FF6F FFEB     	movff	16347,16363
 12509  013C72  06E8               	decf	16360,f,c
 12510  013C74  E2FB               	bc	u12701
 12511  013C76  0101               	movlb	1	; () banked
 12512  013C78  516E               	movf	(icmp_sendEchoReply@ipReply+1)& (0+255),w,b
 12513  013C7A  0D04               	mullw	4
 12514  013C7C  1EF3               	comf	16371,f,c
 12515  013C7E  1EF4               	comf	16372,f,c
 12516  013C80  4AF3               	infsnz	16371,f,c
 12517  013C82  2AF4               	incf	16372,f,c
 12518  013C84  5163               	movf	icmp_sendEchoReply@i_4270& (0+255),w,b
 12519  013C86  26F3               	addwf	16371,f,c
 12520  013C88  5164               	movf	(icmp_sendEchoReply@i_4270+1)& (0+255),w,b
 12521  013C8A  22F4               	addwfc	16372,f,c
 12522  013C8C  0E00               	movlw	low icmp_sendEchoReply@icmpMessage
 12523  013C8E  24F3               	addwf	16371,w,c
 12524  013C90  6ED9               	movwf	16345,c
 12525  013C92  0E01               	movlw	high icmp_sendEchoReply@icmpMessage
 12526  013C94  20F4               	addwfc	16372,w,c
 12527  013C96  6EDA               	movwf	16346,c
 12528  013C98  50DF               	movf	16351,w,c
 12529  013C9A  ECEC  F0BA         	call	_ipv4_streamToTransmissionBuffer
 12530  013C9E                     l1312:
 12531  013C9E  0101               	movlb	1	; () banked
 12532  013CA0  4B63               	infsnz	icmp_sendEchoReply@i_4270& (0+255),f,b
 12533  013CA2  2B64               	incf	(icmp_sendEchoReply@i_4270+1)& (0+255),f,b
 12534  013CA4                     l1309:
 12535                           
 12536                           ; BSR set to: 1
 12537                           
 12538                           ; BSR set to: 1
 12539  013CA4  5171               	movf	(icmp_sendEchoReply@ipReply+4)& (0+255),w,b
 12540  013CA6  5D63               	subwf	icmp_sendEchoReply@i_4270& (0+255),w,b
 12541  013CA8  5172               	movf	(icmp_sendEchoReply@ipReply+5)& (0+255),w,b
 12542  013CAA  5964               	subwfb	(icmp_sendEchoReply@i_4270+1)& (0+255),w,b
 12543  013CAC  A0D8               	btfss	16344,0,c
 12544  013CAE  D7BD               	goto	l1310
 12545                           
 12546                           ; BSR set to: 1
 12547                           ;icmp.c: 173: }
 12548                           ;icmp.c: 174: }
 12549                           ;icmp.c: 183: stack.pendingPacketToSend = ipReply;
 12550                           
 12551                           ; BSR set to: 1
 12552  013CB0  EE20  F16D         	lfsr	2,icmp_sendEchoReply@ipReply
 12553  013CB4  EE11  F035         	lfsr	1,_stack+53
 12554  013CB8  0E41               	movlw	65
 12555  013CBA                     u12721:
 12556  013CBA  006F FF6F FFE3     	movff	16347,16355
 12557  013CC0  06E8               	decf	16360,f,c
 12558  013CC2  E2FB               	bc	u12721
 12559                           
 12560                           ; BSR set to: 1
 12561                           ;icmp.c: 184: stack.background.fPacketPending = 1u;
 12562  013CC4  0E01               	movlw	1
 12563  013CC6  0104               	movlb	4	; () banked
 12564  013CC8  6F34               	movwf	(_stack+52)& (0+255),b
 12565                           
 12566                           ; BSR set to: 4
 12567  013CCA  0012               	return		;funcret
 12568  013CCC                     __end_of_icmp_sendEchoReply:
 12569                           	opt stack 0
 12570                           
 12571 ;; *************** function _ipv4_writeHeaderIntoBuffer *****************
 12572 ;; Defined at:
 12573 ;;		line 105 in file "src/stack/protocols/ipv4.c"
 12574 ;; Parameters:    Size  Location     Type
 12575 ;;  header         23   21[COMRAM] struct ipv4_header
 12576 ;;  ptr             2   44[COMRAM] PTR unsigned char 
 12577 ;;		 -> udp_sendPacket@ipHeaderBuf(32), tcp_sendSYNACK@ipHeaderBuf(32), icmp_sendEchoRequest@headerBuf(32), icmp_sendEch
      +oReply@headerBuf(32), 
 12578 ;; Auto vars:     Size  Location     Type
 12579 ;;		None
 12580 ;; Return value:  Size  Location     Type
 12581 ;;                  1    wreg      void 
 12582 ;; Registers used:
 12583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12584 ;; Tracked objects:
 12585 ;;		On entry : 0/0
 12586 ;;		On exit  : 0/0
 12587 ;;		Unchanged: 0/0
 12588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12589 ;;      Params:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12591 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12592 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12593 ;;Total ram usage:       27 bytes
 12594 ;; Hardware stack levels used:    1
 12595 ;; Hardware stack levels required when called:    4
 12596 ;; This function calls:
 12597 ;;		Nothing
 12598 ;; This function is called by:
 12599 ;;		_icmp_sendEchoReply
 12600 ;;		_tcp_sendSYNACK
 12601 ;;		_udp_sendPacket
 12602 ;;		_icmp_sendEchoRequest
 12603 ;; This function uses a non-reentrant model
 12604 ;;
 12605                           
 12606                           	psect	text38
 12607  01463A                     __ptext38:
 12608                           	opt stack 0
 12609  01463A                     _ipv4_writeHeaderIntoBuffer:
 12610                           	opt stack 25
 12611                           
 12612                           ;ipv4.c: 106: *ptr = (header.version << 4) | (header.headerLength);
 12613                           
 12614                           ; BSR set to: 4
 12615                           ;incstack = 0
 12616  01463A  3816               	swapf	ipv4_writeHeaderIntoBuffer@header,w,c
 12617  01463C  0BF0               	andlw	240
 12618  01463E  1017               	iorwf	ipv4_writeHeaderIntoBuffer@header+1,w,c
 12619  014640  0060  F0B7  FFD9   	movff	ipv4_writeHeaderIntoBuffer@ptr,16345
 12620  014646  0060  F0BB  FFDA   	movff	ipv4_writeHeaderIntoBuffer@ptr+1,16346
 12621  01464C  6EDF               	movwf	16351,c
 12622                           
 12623                           ;ipv4.c: 107: *(ptr + 1) = (header.dscp << 2) | (header.ecn & 0x03);
 12624  01464E  EE20 F001          	lfsr	2,1
 12625  014652  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12626  014654  26D9               	addwf	16345,f,c
 12627  014656  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12628  014658  22DA               	addwfc	16346,f,c
 12629  01465A  0060  F064  F02F   	movff	ipv4_writeHeaderIntoBuffer@header+3,??_ipv4_writeHeaderIntoBuffer
 12630  014660  0E03               	movlw	3
 12631  014662  162F               	andwf	??_ipv4_writeHeaderIntoBuffer,f,c
 12632  014664  4418               	rlncf	ipv4_writeHeaderIntoBuffer@header+2,w,c
 12633  014666  46E8               	rlncf	16360,f,c
 12634  014668  0BFC               	andlw	252
 12635  01466A  102F               	iorwf	??_ipv4_writeHeaderIntoBuffer,w,c
 12636  01466C  6EDF               	movwf	16351,c
 12637                           
 12638                           ;ipv4.c: 108: *(ptr + 2) = (header.totalLength & 0xff00) >> 8;
 12639  01466E  EE20 F002          	lfsr	2,2
 12640  014672  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12641  014674  26D9               	addwf	16345,f,c
 12642  014676  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12643  014678  22DA               	addwfc	16346,f,c
 12644  01467A  501B               	movf	ipv4_writeHeaderIntoBuffer@header+5,w,c
 12645  01467C  6EDF               	movwf	16351,c
 12646                           
 12647                           ;ipv4.c: 109: *(ptr + 3) = header.totalLength & 0x00ff;
 12648  01467E  EE20 F003          	lfsr	2,3
 12649  014682  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12650  014684  26D9               	addwf	16345,f,c
 12651  014686  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12652  014688  22DA               	addwfc	16346,f,c
 12653  01468A  0060  F06B  FFDF   	movff	ipv4_writeHeaderIntoBuffer@header+4,16351
 12654                           
 12655                           ;ipv4.c: 110: *(ptr + 4) = (header.identification & 0xff00) >> 8;
 12656  014690  EE20 F004          	lfsr	2,4
 12657  014694  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12658  014696  26D9               	addwf	16345,f,c
 12659  014698  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12660  01469A  22DA               	addwfc	16346,f,c
 12661  01469C  501D               	movf	ipv4_writeHeaderIntoBuffer@header+7,w,c
 12662  01469E  6EDF               	movwf	16351,c
 12663                           
 12664                           ;ipv4.c: 111: *(ptr + 5) = header.identification & 0x00ff;
 12665  0146A0  EE20 F005          	lfsr	2,5
 12666  0146A4  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12667  0146A6  26D9               	addwf	16345,f,c
 12668  0146A8  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12669  0146AA  22DA               	addwfc	16346,f,c
 12670  0146AC  0060  F073  FFDF   	movff	ipv4_writeHeaderIntoBuffer@header+6,16351
 12671                           
 12672                           ;ipv4.c: 112: *(ptr + 6) = (header.flags << 5) | ((header.fragmentOffset & 0x1f00) >> 8)
      +                          ;
 12673  0146B2  EE20 F006          	lfsr	2,6
 12674  0146B6  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12675  0146B8  26D9               	addwf	16345,f,c
 12676  0146BA  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12677  0146BC  22DA               	addwfc	16346,f,c
 12678  0146BE  EE10  F01F         	lfsr	1,ipv4_writeHeaderIntoBuffer@header+9
 12679  0146C2  006F FF98  F02F    	movff	16358,??_ipv4_writeHeaderIntoBuffer
 12680  0146C8  006F FF94  F030    	movff	16357,??_ipv4_writeHeaderIntoBuffer+1
 12681  0146CE  0060  F0C0  F02F   	movff	??_ipv4_writeHeaderIntoBuffer+1,??_ipv4_writeHeaderIntoBuffer
 12682  0146D4  6A30               	clrf	??_ipv4_writeHeaderIntoBuffer+1,c
 12683  0146D6  0E1F               	movlw	31
 12684  0146D8  162F               	andwf	??_ipv4_writeHeaderIntoBuffer,f,c
 12685  0146DA  381E               	swapf	ipv4_writeHeaderIntoBuffer@header+8,w,c
 12686  0146DC  46E8               	rlncf	16360,f,c
 12687  0146DE  0BE0               	andlw	224
 12688  0146E0  102F               	iorwf	??_ipv4_writeHeaderIntoBuffer,w,c
 12689  0146E2  6EDF               	movwf	16351,c
 12690                           
 12691                           ;ipv4.c: 113: *(ptr + 7) = (header.fragmentOffset & 0x00ff);
 12692  0146E4  EE20 F007          	lfsr	2,7
 12693  0146E8  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12694  0146EA  26D9               	addwf	16345,f,c
 12695  0146EC  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12696  0146EE  22DA               	addwfc	16346,f,c
 12697  0146F0  0060  F07F  FFDF   	movff	ipv4_writeHeaderIntoBuffer@header+9,16351
 12698                           
 12699                           ;ipv4.c: 114: *(ptr + 8) = (header.timeToLive);
 12700  0146F6  EE20 F008          	lfsr	2,8
 12701  0146FA  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12702  0146FC  26D9               	addwf	16345,f,c
 12703  0146FE  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12704  014700  22DA               	addwfc	16346,f,c
 12705  014702  0060  F087  FFDF   	movff	ipv4_writeHeaderIntoBuffer@header+11,16351
 12706                           
 12707                           ;ipv4.c: 115: *(ptr + 9) = (header.protocol);
 12708  014708  EE20 F009          	lfsr	2,9
 12709  01470C  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12710  01470E  26D9               	addwf	16345,f,c
 12711  014710  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12712  014712  22DA               	addwfc	16346,f,c
 12713  014714  0060  F08B  FFDF   	movff	ipv4_writeHeaderIntoBuffer@header+12,16351
 12714                           
 12715                           ;ipv4.c: 116: *(ptr + 10) = (header.checksum & 0xff00) >> 8;
 12716  01471A  EE20 F00A          	lfsr	2,10
 12717  01471E  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12718  014720  26D9               	addwf	16345,f,c
 12719  014722  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12720  014724  22DA               	addwfc	16346,f,c
 12721  014726  5024               	movf	ipv4_writeHeaderIntoBuffer@header+14,w,c
 12722  014728  6EDF               	movwf	16351,c
 12723                           
 12724                           ;ipv4.c: 117: *(ptr + 11) = (header.checksum & 0x00ff);
 12725  01472A  EE20 F00B          	lfsr	2,11
 12726  01472E  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12727  014730  26D9               	addwf	16345,f,c
 12728  014732  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12729  014734  22DA               	addwfc	16346,f,c
 12730  014736  0060  F08F  FFDF   	movff	ipv4_writeHeaderIntoBuffer@header+13,16351
 12731                           
 12732                           ;ipv4.c: 118: *(ptr + 12) = (header.source.address[0]);
 12733  01473C  EE20 F00C          	lfsr	2,12
 12734  014740  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12735  014742  26D9               	addwf	16345,f,c
 12736  014744  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12737  014746  22DA               	addwfc	16346,f,c
 12738  014748  0060  F097  FFDF   	movff	ipv4_writeHeaderIntoBuffer@header+15,16351
 12739                           
 12740                           ;ipv4.c: 119: *(ptr + 13) = (header.source.address[1]);
 12741  01474E  EE20 F00D          	lfsr	2,13
 12742  014752  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12743  014754  26D9               	addwf	16345,f,c
 12744  014756  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12745  014758  22DA               	addwfc	16346,f,c
 12746  01475A  0060  F09B  FFDF   	movff	ipv4_writeHeaderIntoBuffer@header+16,16351
 12747                           
 12748                           ;ipv4.c: 120: *(ptr + 14) = (header.source.address[2]);
 12749  014760  EE20 F00E          	lfsr	2,14
 12750  014764  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12751  014766  26D9               	addwf	16345,f,c
 12752  014768  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12753  01476A  22DA               	addwfc	16346,f,c
 12754  01476C  0060  F09F  FFDF   	movff	ipv4_writeHeaderIntoBuffer@header+17,16351
 12755                           
 12756                           ;ipv4.c: 121: *(ptr + 15) = (header.source.address[3]);
 12757  014772  EE20 F00F          	lfsr	2,15
 12758  014776  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12759  014778  26D9               	addwf	16345,f,c
 12760  01477A  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12761  01477C  22DA               	addwfc	16346,f,c
 12762  01477E  0060  F0A3  FFDF   	movff	ipv4_writeHeaderIntoBuffer@header+18,16351
 12763                           
 12764                           ;ipv4.c: 122: *(ptr + 16) = (header.destination.address[0]);
 12765  014784  EE20 F010          	lfsr	2,16
 12766  014788  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12767  01478A  26D9               	addwf	16345,f,c
 12768  01478C  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12769  01478E  22DA               	addwfc	16346,f,c
 12770  014790  0060  F0A7  FFDF   	movff	ipv4_writeHeaderIntoBuffer@header+19,16351
 12771                           
 12772                           ;ipv4.c: 123: *(ptr + 17) = (header.destination.address[1]);
 12773  014796  EE20 F011          	lfsr	2,17
 12774  01479A  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12775  01479C  26D9               	addwf	16345,f,c
 12776  01479E  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12777  0147A0  22DA               	addwfc	16346,f,c
 12778  0147A2  0060  F0AB  FFDF   	movff	ipv4_writeHeaderIntoBuffer@header+20,16351
 12779                           
 12780                           ;ipv4.c: 124: *(ptr + 18) = (header.destination.address[2]);
 12781  0147A8  EE20 F012          	lfsr	2,18
 12782  0147AC  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12783  0147AE  26D9               	addwf	16345,f,c
 12784  0147B0  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12785  0147B2  22DA               	addwfc	16346,f,c
 12786  0147B4  0060  F0AF  FFDF   	movff	ipv4_writeHeaderIntoBuffer@header+21,16351
 12787                           
 12788                           ;ipv4.c: 125: *(ptr + 19) = (header.destination.address[3]);
 12789  0147BA  EE20 F013          	lfsr	2,19
 12790  0147BE  502D               	movf	ipv4_writeHeaderIntoBuffer@ptr,w,c
 12791  0147C0  26D9               	addwf	16345,f,c
 12792  0147C2  502E               	movf	ipv4_writeHeaderIntoBuffer@ptr+1,w,c
 12793  0147C4  22DA               	addwfc	16346,f,c
 12794  0147C6  0060  F0B3  FFDF   	movff	ipv4_writeHeaderIntoBuffer@header+22,16351
 12795  0147CC  0012               	return		;funcret
 12796  0147CE                     __end_of_ipv4_writeHeaderIntoBuffer:
 12797                           	opt stack 0
 12798                           
 12799 ;; *************** function _ipv4_txFrameRequest *****************
 12800 ;; Defined at:
 12801 ;;		line 41 in file "src/stack/protocols/ipv4.c"
 12802 ;; Parameters:    Size  Location     Type
 12803 ;;  packet          2   42[BANK0 ] PTR struct ipv4_packet
 12804 ;;		 -> udp_sendPacket@ipPacket(66), tcp_sendSYNACK@ipPacket(66), icmp_sendEchoRequest@ipRequest(66), icmp_sendEchoReply
      +@ipReply(66), 
 12805 ;; Auto vars:     Size  Location     Type
 12806 ;;		None
 12807 ;; Return value:  Size  Location     Type
 12808 ;;                  1    wreg      void 
 12809 ;; Registers used:
 12810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12811 ;; Tracked objects:
 12812 ;;		On entry : 0/0
 12813 ;;		On exit  : 0/0
 12814 ;;		Unchanged: 0/0
 12815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12816 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12818 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12819 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12820 ;;Total ram usage:        6 bytes
 12821 ;; Hardware stack levels used:    1
 12822 ;; Hardware stack levels required when called:    9
 12823 ;; This function calls:
 12824 ;;		_ethernet_txFrameRequest
 12825 ;; This function is called by:
 12826 ;;		_icmp_sendEchoReply
 12827 ;;		_tcp_sendSYNACK
 12828 ;;		_udp_sendPacket
 12829 ;;		_icmp_sendEchoRequest
 12830 ;; This function uses a non-reentrant model
 12831 ;;
 12832                           
 12833                           	psect	text39
 12834  01492E                     __ptext39:
 12835                           	opt stack 0
 12836  01492E                     _ipv4_txFrameRequest:
 12837                           	opt stack 20
 12838                           
 12839                           ;ipv4.c: 42: packet->ethernet.length = packet->ipv4Header.totalLength + 8;
 12840                           
 12841                           ;incstack = 0
 12842  01492E  0100               	movlb	0	; () banked
 12843  014930  EE20 F004          	lfsr	2,4
 12844  014934  518A               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
 12845  014936  26D9               	addwf	16345,f,c
 12846  014938  518B               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12847  01493A  22DA               	addwfc	16346,f,c
 12848  01493C  006F FF78  F08C    	movff	16350,??_ipv4_txFrameRequest
 12849  014942  006F FF74  F08D    	movff	16349,??_ipv4_txFrameRequest+1
 12850  014948  0E08               	movlw	8
 12851  01494A  278C               	addwf	??_ipv4_txFrameRequest& (0+255),f,b
 12852  01494C  0E00               	movlw	0
 12853  01494E  238D               	addwfc	(??_ipv4_txFrameRequest+1)& (0+255),f,b
 12854  014950  EE20 F020          	lfsr	2,32
 12855  014954  518A               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
 12856  014956  26D9               	addwf	16345,f,c
 12857  014958  518B               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12858  01495A  22DA               	addwfc	16346,f,c
 12859  01495C  0060  F233  FFDE   	movff	??_ipv4_txFrameRequest,16350
 12860  014962  0060  F237  FFDD   	movff	??_ipv4_txFrameRequest+1,16349
 12861                           
 12862                           ;ipv4.c: 43: packet->ethernet.ethertype = ETHERTYPE_IPv4;
 12863  014968  EE20 F02E          	lfsr	2,46
 12864  01496C  518A               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
 12865  01496E  26D9               	addwf	16345,f,c
 12866  014970  518B               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12867  014972  22DA               	addwfc	16346,f,c
 12868  014974  0E00               	movlw	0
 12869  014976  6EDE               	movwf	16350,c
 12870  014978  0E08               	movlw	8
 12871  01497A  6EDD               	movwf	16349,c
 12872                           
 12873                           ; BSR set to: 0
 12874                           ;ipv4.c: 44: ethernet_txFrameRequest(&packet->ethernet);
 12875  01497C  0E20               	movlw	32
 12876  01497E  258A               	addwf	ipv4_txFrameRequest@packet& (0+255),w,b
 12877  014980  6E34               	movwf	ethernet_txFrameRequest@frame,c
 12878  014982  0E00               	movlw	0
 12879  014984  218B               	addwfc	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12880  014986  6E35               	movwf	ethernet_txFrameRequest@frame+1,c
 12881  014988  ECC8  F0AB         	call	_ethernet_txFrameRequest	;wreg free
 12882                           
 12883                           ;ipv4.c: 46: packet->memory.fIsAssigned = packet->ethernet.memory.fIsAssigned;
 12884  01498C  0100               	movlb	0	; () banked
 12885  01498E  EE20 F036          	lfsr	2,54
 12886  014992  518A               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
 12887  014994  26D9               	addwf	16345,f,c
 12888  014996  518B               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12889  014998  22DA               	addwfc	16346,f,c
 12890  01499A  EE10 F01D          	lfsr	1,29
 12891  01499E  518A               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
 12892  0149A0  26E1               	addwf	16353,f,c
 12893  0149A2  518B               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12894  0149A4  22E2               	addwfc	16354,f,c
 12895  0149A6  006F FF7F FFE7     	movff	16351,16359
 12896                           
 12897                           ; BSR set to: 0
 12898                           ;ipv4.c: 47: packet->memory.fOutOfMemory = packet->ethernet.memory.fOutOfMemory;
 12899  0149AC  EE20 F037          	lfsr	2,55
 12900  0149B0  518A               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
 12901  0149B2  26D9               	addwf	16345,f,c
 12902  0149B4  518B               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12903  0149B6  22DA               	addwfc	16346,f,c
 12904  0149B8  EE10 F01E          	lfsr	1,30
 12905  0149BC  518A               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
 12906  0149BE  26E1               	addwf	16353,f,c
 12907  0149C0  518B               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12908  0149C2  22E2               	addwfc	16354,f,c
 12909  0149C4  006F FF7F FFE7     	movff	16351,16359
 12910                           
 12911                           ; BSR set to: 0
 12912                           ;ipv4.c: 48: packet->memory.index = packet->ethernet.memory.index;
 12913  0149CA  EE20 F038          	lfsr	2,56
 12914  0149CE  518A               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
 12915  0149D0  26D9               	addwf	16345,f,c
 12916  0149D2  518B               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12917  0149D4  22DA               	addwfc	16346,f,c
 12918  0149D6  EE10 F01F          	lfsr	1,31
 12919  0149DA  518A               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
 12920  0149DC  26E1               	addwf	16353,f,c
 12921  0149DE  518B               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12922  0149E0  22E2               	addwfc	16354,f,c
 12923  0149E2  006F FF7F FFE7     	movff	16351,16359
 12924                           
 12925                           ; BSR set to: 0
 12926                           ;ipv4.c: 49: packet->memory.start = packet->ethernet.memory.start + 8;
 12927  0149E8  EE20 F030          	lfsr	2,48
 12928  0149EC  518A               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
 12929  0149EE  26D9               	addwf	16345,f,c
 12930  0149F0  518B               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12931  0149F2  22DA               	addwfc	16346,f,c
 12932  0149F4  006F FF78  F08C    	movff	16350,??_ipv4_txFrameRequest
 12933  0149FA  006F FF74  F08D    	movff	16349,??_ipv4_txFrameRequest+1
 12934  014A00  0E08               	movlw	8
 12935  014A02  278C               	addwf	??_ipv4_txFrameRequest& (0+255),f,b
 12936  014A04  0E00               	movlw	0
 12937  014A06  238D               	addwfc	(??_ipv4_txFrameRequest+1)& (0+255),f,b
 12938  014A08  EE20 F017          	lfsr	2,23
 12939  014A0C  518A               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
 12940  014A0E  26D9               	addwf	16345,f,c
 12941  014A10  518B               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12942  014A12  22DA               	addwfc	16346,f,c
 12943  014A14  0060  F233  FFDE   	movff	??_ipv4_txFrameRequest,16350
 12944  014A1A  0060  F237  FFDD   	movff	??_ipv4_txFrameRequest+1,16349
 12945                           
 12946                           ; BSR set to: 0
 12947                           ;ipv4.c: 50: packet->memory.end = packet->ethernet.memory.end;
 12948  014A20  EE20 F032          	lfsr	2,50
 12949  014A24  518A               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
 12950  014A26  26D9               	addwf	16345,f,c
 12951  014A28  518B               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12952  014A2A  22DA               	addwfc	16346,f,c
 12953  014A2C  EE10 F019          	lfsr	1,25
 12954  014A30  518A               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
 12955  014A32  26E1               	addwf	16353,f,c
 12956  014A34  518B               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12957  014A36  22E2               	addwfc	16354,f,c
 12958  014A38  006F FF7B FFE6     	movff	16350,16358
 12959  014A3E  006F FF77 FFE5     	movff	16349,16357
 12960                           
 12961                           ; BSR set to: 0
 12962                           ;ipv4.c: 51: packet->memory.length = packet->ethernet.memory.length - 8;
 12963  014A44  0EF8               	movlw	248
 12964  014A46  6F8C               	movwf	??_ipv4_txFrameRequest& (0+255),b
 12965  014A48  0EFF               	movlw	255
 12966  014A4A  6F8D               	movwf	(??_ipv4_txFrameRequest+1)& (0+255),b
 12967  014A4C  EE20 F034          	lfsr	2,52
 12968  014A50  518A               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
 12969  014A52  26D9               	addwf	16345,f,c
 12970  014A54  518B               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12971  014A56  22DA               	addwfc	16346,f,c
 12972  014A58  006F FF78  F08E    	movff	16350,??_ipv4_txFrameRequest+2
 12973  014A5E  006F FF74  F08F    	movff	16349,??_ipv4_txFrameRequest+3
 12974  014A64  518C               	movf	??_ipv4_txFrameRequest& (0+255),w,b
 12975  014A66  278E               	addwf	(??_ipv4_txFrameRequest+2)& (0+255),f,b
 12976  014A68  518D               	movf	(??_ipv4_txFrameRequest+1)& (0+255),w,b
 12977  014A6A  238F               	addwfc	(??_ipv4_txFrameRequest+3)& (0+255),f,b
 12978  014A6C  EE20 F01B          	lfsr	2,27
 12979  014A70  518A               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
 12980  014A72  26D9               	addwf	16345,f,c
 12981  014A74  518B               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
 12982  014A76  22DA               	addwfc	16346,f,c
 12983  014A78  0060  F23B  FFDE   	movff	??_ipv4_txFrameRequest+2,16350
 12984  014A7E  0060  F23F  FFDD   	movff	??_ipv4_txFrameRequest+3,16349
 12985                           
 12986                           ; BSR set to: 0
 12987  014A84  0012               	return		;funcret
 12988  014A86                     __end_of_ipv4_txFrameRequest:
 12989                           	opt stack 0
 12990                           
 12991 ;; *************** function _ipv4_streamToTransmissionBuffer *****************
 12992 ;; Defined at:
 12993 ;;		line 99 in file "src/stack/protocols/ipv4.c"
 12994 ;; Parameters:    Size  Location     Type
 12995 ;;  data            1    wreg     unsigned char 
 12996 ;;  packet         66    0[BANK0 ] struct ipv4_packet
 12997 ;; Auto vars:     Size  Location     Type
 12998 ;;  data            1   51[COMRAM] unsigned char 
 12999 ;; Return value:  Size  Location     Type
 13000 ;;                  1    wreg      void 
 13001 ;; Registers used:
 13002 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 13003 ;; Tracked objects:
 13004 ;;		On entry : 0/0
 13005 ;;		On exit  : 0/0
 13006 ;;		Unchanged: 0/0
 13007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13008 ;;      Params:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13011 ;;      Totals:         1      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13012 ;;Total ram usage:       67 bytes
 13013 ;; Hardware stack levels used:    1
 13014 ;; Hardware stack levels required when called:    8
 13015 ;; This function calls:
 13016 ;;		_ethernetController_streamToTransmitBuffer
 13017 ;; This function is called by:
 13018 ;;		_icmp_sendEchoReply
 13019 ;;		_tcp_sendSYNACK
 13020 ;;		_udp_sendPacket
 13021 ;;		_icmp_sendEchoRequest
 13022 ;; This function uses a non-reentrant model
 13023 ;;
 13024                           
 13025                           	psect	text40
 13026  0175D8                     __ptext40:
 13027                           	opt stack 0
 13028  0175D8                     _ipv4_streamToTransmissionBuffer:
 13029                           	opt stack 21
 13030                           
 13031                           ; BSR set to: 0
 13032                           ;incstack = 0
 13033                           ;ipv4_streamToTransmissionBuffer@data stored from wreg
 13034  0175D8  6E34               	movwf	ipv4_streamToTransmissionBuffer@data,c
 13035                           
 13036                           ;ipv4.c: 100: ethernetController_streamToTransmitBuffer(data, packet.memory);
 13037  0175DA  EE20  F077         	lfsr	2,ipv4_streamToTransmissionBuffer@packet+23
 13038  0175DE  EE00  F025         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 13039  0175E2  0E08               	movlw	8
 13040  0175E4                     u11731:
 13041  0175E4  006F FF6F FFEB     	movff	16347,16363
 13042  0175EA  06E8               	decf	16360,f,c
 13043  0175EC  E2FB               	bc	u11731
 13044  0175EE  5034               	movf	ipv4_streamToTransmissionBuffer@data,w,c
 13045  0175F0  EC75  F0B3         	call	_ethernetController_streamToTransmitBuffer
 13046  0175F4  0012               	return		;funcret
 13047  0175F6                     __end_of_ipv4_streamToTransmissionBuffer:
 13048                           	opt stack 0
 13049                           
 13050 ;; *************** function _ipv4_calculateHeaderChecksum *****************
 13051 ;; Defined at:
 13052 ;;		line 128 in file "src/stack/protocols/ipv4.c"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;  header          2   21[COMRAM] PTR struct ipv4_header
 13055 ;;		 -> udp_sendPacket@ipPacket(66), tcp_sendSYNACK@ipPacket(66), icmp_sendEchoRequest@ipRequest(66), icmp_sendEchoReply
      +@ipReply(66), 
 13056 ;;		 -> ipv4_checkHeaderChecksum@testHeader(23), 
 13057 ;; Auto vars:     Size  Location     Type
 13058 ;;  sum             4   32[COMRAM] unsigned long 
 13059 ;;  carry           1   31[COMRAM] unsigned char 
 13060 ;; Return value:  Size  Location     Type
 13061 ;;                  1    wreg      void 
 13062 ;; Registers used:
 13063 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13064 ;; Tracked objects:
 13065 ;;		On entry : 0/0
 13066 ;;		On exit  : 0/0
 13067 ;;		Unchanged: 0/0
 13068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13070 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13071 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13072 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13073 ;;Total ram usage:       15 bytes
 13074 ;; Hardware stack levels used:    1
 13075 ;; Hardware stack levels required when called:    4
 13076 ;; This function calls:
 13077 ;;		Nothing
 13078 ;; This function is called by:
 13079 ;;		_ipv4_checkHeaderChecksum
 13080 ;;		_icmp_sendEchoReply
 13081 ;;		_tcp_sendSYNACK
 13082 ;;		_udp_sendPacket
 13083 ;;		_icmp_sendEchoRequest
 13084 ;; This function uses a non-reentrant model
 13085 ;;
 13086                           
 13087                           	psect	text41
 13088  012718                     __ptext41:
 13089                           	opt stack 0
 13090  012718                     _ipv4_calculateHeaderChecksum:
 13091                           	opt stack 25
 13092                           
 13093                           ;ipv4.c: 130: uint32_t sum = 0;
 13094                           
 13095                           ;incstack = 0
 13096  012718  0E00               	movlw	0
 13097  01271A  6E21               	movwf	ipv4_calculateHeaderChecksum@sum,c
 13098  01271C  0E00               	movlw	0
 13099  01271E  6E22               	movwf	ipv4_calculateHeaderChecksum@sum+1,c
 13100  012720  0E00               	movlw	0
 13101  012722  6E23               	movwf	ipv4_calculateHeaderChecksum@sum+2,c
 13102  012724  0E00               	movlw	0
 13103  012726  6E24               	movwf	ipv4_calculateHeaderChecksum@sum+3,c
 13104                           
 13105                           ;ipv4.c: 131: uint8_t carry = 0;
 13106  012728  0E00               	movlw	0
 13107  01272A  6E20               	movwf	ipv4_calculateHeaderChecksum@carry,c
 13108                           
 13109                           ;ipv4.c: 132: sum = ((header->version << 12) | (header->headerLength << 8) | (header->ds
      +                          cp << 2) | (header->ecn))&0xffff;
 13110  01272C  EE20 F002          	lfsr	2,2
 13111  012730  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13112  012732  26D9               	addwf	16345,f,c
 13113  012734  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13114  012736  22DA               	addwfc	16346,f,c
 13115  012738  50DF               	movf	16351,w,c
 13116  01273A  6E18               	movwf	??_ipv4_calculateHeaderChecksum& (0+255),c
 13117  01273C  6A19               	clrf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),c
 13118  01273E  90D8               	bcf	16344,0,c
 13119  012740  3618               	rlcf	??_ipv4_calculateHeaderChecksum,f,c
 13120  012742  3619               	rlcf	??_ipv4_calculateHeaderChecksum+1,f,c
 13121  012744  90D8               	bcf	16344,0,c
 13122  012746  3618               	rlcf	??_ipv4_calculateHeaderChecksum,f,c
 13123  012748  3619               	rlcf	??_ipv4_calculateHeaderChecksum+1,f,c
 13124  01274A  EE20 F001          	lfsr	2,1
 13125  01274E  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13126  012750  26D9               	addwf	16345,f,c
 13127  012752  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13128  012754  22DA               	addwfc	16346,f,c
 13129  012756  50DF               	movf	16351,w,c
 13130  012758  6E1A               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),c
 13131  01275A  501A               	movf	??_ipv4_calculateHeaderChecksum+2,w,c
 13132  01275C  6E1C               	movwf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),c
 13133  01275E  6A1B               	clrf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),c
 13134  012760  0060  F05B  FFD9   	movff	ipv4_calculateHeaderChecksum@header,16345
 13135  012766  0060  F05F  FFDA   	movff	ipv4_calculateHeaderChecksum@header+1,16346
 13136  01276C  50DF               	movf	16351,w,c
 13137  01276E  6E1D               	movwf	(??_ipv4_calculateHeaderChecksum+5)& (0+255),c
 13138  012770  6A1E               	clrf	(??_ipv4_calculateHeaderChecksum+6)& (0+255),c
 13139  012772  0E0C               	movlw	12
 13140  012774                     u11745:
 13141  012774  90D8               	bcf	16344,0,c
 13142  012776  361D               	rlcf	??_ipv4_calculateHeaderChecksum+5,f,c
 13143  012778  361E               	rlcf	??_ipv4_calculateHeaderChecksum+6,f,c
 13144  01277A  2EE8               	decfsz	16360,f,c
 13145  01277C  D7FB               	goto	u11745
 13146  01277E  501B               	movf	??_ipv4_calculateHeaderChecksum+3,w,c
 13147  012780  121D               	iorwf	??_ipv4_calculateHeaderChecksum+5,f,c
 13148  012782  501C               	movf	??_ipv4_calculateHeaderChecksum+4,w,c
 13149  012784  121E               	iorwf	??_ipv4_calculateHeaderChecksum+6,f,c
 13150  012786  5018               	movf	??_ipv4_calculateHeaderChecksum,w,c
 13151  012788  121D               	iorwf	??_ipv4_calculateHeaderChecksum+5,f,c
 13152  01278A  5019               	movf	??_ipv4_calculateHeaderChecksum+1,w,c
 13153  01278C  121E               	iorwf	??_ipv4_calculateHeaderChecksum+6,f,c
 13154  01278E  EE20 F003          	lfsr	2,3
 13155  012792  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13156  012794  26D9               	addwf	16345,f,c
 13157  012796  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13158  012798  22DA               	addwfc	16346,f,c
 13159  01279A  50DF               	movf	16351,w,c
 13160  01279C  6E1F               	movwf	(??_ipv4_calculateHeaderChecksum+7)& (0+255),c
 13161  01279E  501F               	movf	??_ipv4_calculateHeaderChecksum+7,w,c
 13162  0127A0  121D               	iorwf	??_ipv4_calculateHeaderChecksum+5,f,c
 13163  0127A2  0E00               	movlw	0
 13164  0127A4  121E               	iorwf	??_ipv4_calculateHeaderChecksum+6,f,c
 13165  0127A6  0060  F074  F021   	movff	??_ipv4_calculateHeaderChecksum+5,ipv4_calculateHeaderChecksum@sum
 13166  0127AC  0060  F078  F022   	movff	??_ipv4_calculateHeaderChecksum+6,ipv4_calculateHeaderChecksum@sum+1
 13167  0127B2  6A23               	clrf	ipv4_calculateHeaderChecksum@sum+2,c
 13168  0127B4  6A24               	clrf	ipv4_calculateHeaderChecksum@sum+3,c
 13169                           
 13170                           ;ipv4.c: 133: sum += header->totalLength;
 13171  0127B6  EE20 F004          	lfsr	2,4
 13172  0127BA  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13173  0127BC  26D9               	addwf	16345,f,c
 13174  0127BE  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13175  0127C0  22DA               	addwfc	16346,f,c
 13176  0127C2  006F FF78  F018    	movff	16350,??_ipv4_calculateHeaderChecksum
 13177  0127C8  006F FF74  F019    	movff	16349,??_ipv4_calculateHeaderChecksum+1
 13178  0127CE  5018               	movf	??_ipv4_calculateHeaderChecksum,w,c
 13179  0127D0  2621               	addwf	ipv4_calculateHeaderChecksum@sum,f,c
 13180  0127D2  5019               	movf	??_ipv4_calculateHeaderChecksum+1,w,c
 13181  0127D4  2222               	addwfc	ipv4_calculateHeaderChecksum@sum+1,f,c
 13182  0127D6  0E00               	movlw	0
 13183  0127D8  2223               	addwfc	ipv4_calculateHeaderChecksum@sum+2,f,c
 13184  0127DA  0E00               	movlw	0
 13185  0127DC  2224               	addwfc	ipv4_calculateHeaderChecksum@sum+3,f,c
 13186                           
 13187                           ;ipv4.c: 134: sum += header->identification;
 13188  0127DE  EE20 F006          	lfsr	2,6
 13189  0127E2  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13190  0127E4  26D9               	addwf	16345,f,c
 13191  0127E6  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13192  0127E8  22DA               	addwfc	16346,f,c
 13193  0127EA  006F FF78  F018    	movff	16350,??_ipv4_calculateHeaderChecksum
 13194  0127F0  006F FF74  F019    	movff	16349,??_ipv4_calculateHeaderChecksum+1
 13195  0127F6  5018               	movf	??_ipv4_calculateHeaderChecksum,w,c
 13196  0127F8  2621               	addwf	ipv4_calculateHeaderChecksum@sum,f,c
 13197  0127FA  5019               	movf	??_ipv4_calculateHeaderChecksum+1,w,c
 13198  0127FC  2222               	addwfc	ipv4_calculateHeaderChecksum@sum+1,f,c
 13199  0127FE  0E00               	movlw	0
 13200  012800  2223               	addwfc	ipv4_calculateHeaderChecksum@sum+2,f,c
 13201  012802  0E00               	movlw	0
 13202  012804  2224               	addwfc	ipv4_calculateHeaderChecksum@sum+3,f,c
 13203                           
 13204                           ;ipv4.c: 135: sum += ((header->flags << 13) | (header->fragmentOffset))&0xffff;
 13205  012806  EE20 F009          	lfsr	2,9
 13206  01280A  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13207  01280C  26D9               	addwf	16345,f,c
 13208  01280E  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13209  012810  22DA               	addwfc	16346,f,c
 13210  012812  006F FF78  F018    	movff	16350,??_ipv4_calculateHeaderChecksum
 13211  012818  006F FF74  F019    	movff	16349,??_ipv4_calculateHeaderChecksum+1
 13212  01281E  EE20 F008          	lfsr	2,8
 13213  012822  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13214  012824  26D9               	addwf	16345,f,c
 13215  012826  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13216  012828  22DA               	addwfc	16346,f,c
 13217  01282A  50DF               	movf	16351,w,c
 13218  01282C  6E1A               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),c
 13219  01282E  6A1B               	clrf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),c
 13220  012830  0E0D               	movlw	13
 13221  012832                     u11755:
 13222  012832  90D8               	bcf	16344,0,c
 13223  012834  361A               	rlcf	??_ipv4_calculateHeaderChecksum+2,f,c
 13224  012836  361B               	rlcf	??_ipv4_calculateHeaderChecksum+3,f,c
 13225  012838  2EE8               	decfsz	16360,f,c
 13226  01283A  D7FB               	goto	u11755
 13227  01283C  5018               	movf	??_ipv4_calculateHeaderChecksum,w,c
 13228  01283E  121A               	iorwf	??_ipv4_calculateHeaderChecksum+2,f,c
 13229  012840  5019               	movf	??_ipv4_calculateHeaderChecksum+1,w,c
 13230  012842  121B               	iorwf	??_ipv4_calculateHeaderChecksum+3,f,c
 13231  012844  501A               	movf	??_ipv4_calculateHeaderChecksum+2,w,c
 13232  012846  2621               	addwf	ipv4_calculateHeaderChecksum@sum,f,c
 13233  012848  501B               	movf	??_ipv4_calculateHeaderChecksum+3,w,c
 13234  01284A  2222               	addwfc	ipv4_calculateHeaderChecksum@sum+1,f,c
 13235  01284C  0E00               	movlw	0
 13236  01284E  2223               	addwfc	ipv4_calculateHeaderChecksum@sum+2,f,c
 13237  012850  0E00               	movlw	0
 13238  012852  2224               	addwfc	ipv4_calculateHeaderChecksum@sum+3,f,c
 13239                           
 13240                           ;ipv4.c: 136: sum += ((header->timeToLive << 8) | (header->protocol))&0xffff;
 13241  012854  EE20 F00B          	lfsr	2,11
 13242  012858  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13243  01285A  26D9               	addwf	16345,f,c
 13244  01285C  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13245  01285E  22DA               	addwfc	16346,f,c
 13246  012860  50DF               	movf	16351,w,c
 13247  012862  6E18               	movwf	??_ipv4_calculateHeaderChecksum& (0+255),c
 13248  012864  5018               	movf	??_ipv4_calculateHeaderChecksum,w,c
 13249  012866  6E1A               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),c
 13250  012868  6A19               	clrf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),c
 13251  01286A  EE20 F00C          	lfsr	2,12
 13252  01286E  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13253  012870  26D9               	addwf	16345,f,c
 13254  012872  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13255  012874  22DA               	addwfc	16346,f,c
 13256  012876  50DF               	movf	16351,w,c
 13257  012878  6E1B               	movwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),c
 13258  01287A  501B               	movf	??_ipv4_calculateHeaderChecksum+3,w,c
 13259  01287C  1219               	iorwf	??_ipv4_calculateHeaderChecksum+1,f,c
 13260  01287E  0E00               	movlw	0
 13261  012880  121A               	iorwf	??_ipv4_calculateHeaderChecksum+2,f,c
 13262  012882  5019               	movf	??_ipv4_calculateHeaderChecksum+1,w,c
 13263  012884  2621               	addwf	ipv4_calculateHeaderChecksum@sum,f,c
 13264  012886  501A               	movf	??_ipv4_calculateHeaderChecksum+2,w,c
 13265  012888  2222               	addwfc	ipv4_calculateHeaderChecksum@sum+1,f,c
 13266  01288A  0E00               	movlw	0
 13267  01288C  2223               	addwfc	ipv4_calculateHeaderChecksum@sum+2,f,c
 13268  01288E  0E00               	movlw	0
 13269  012890  2224               	addwfc	ipv4_calculateHeaderChecksum@sum+3,f,c
 13270                           
 13271                           ;ipv4.c: 138: sum += ((header->source.address[1] | (header->source.address[0] << 8)))&0x
      +                          ffff;
 13272  012892  EE20 F00F          	lfsr	2,15
 13273  012896  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13274  012898  26D9               	addwf	16345,f,c
 13275  01289A  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13276  01289C  22DA               	addwfc	16346,f,c
 13277  01289E  50DF               	movf	16351,w,c
 13278  0128A0  6E18               	movwf	??_ipv4_calculateHeaderChecksum& (0+255),c
 13279  0128A2  5018               	movf	??_ipv4_calculateHeaderChecksum,w,c
 13280  0128A4  6E1A               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),c
 13281  0128A6  6A19               	clrf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),c
 13282  0128A8  EE20 F010          	lfsr	2,16
 13283  0128AC  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13284  0128AE  26D9               	addwf	16345,f,c
 13285  0128B0  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13286  0128B2  22DA               	addwfc	16346,f,c
 13287  0128B4  50DF               	movf	16351,w,c
 13288  0128B6  6E1B               	movwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),c
 13289  0128B8  6A1C               	clrf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),c
 13290  0128BA  5019               	movf	??_ipv4_calculateHeaderChecksum+1,w,c
 13291  0128BC  121B               	iorwf	??_ipv4_calculateHeaderChecksum+3,f,c
 13292  0128BE  501A               	movf	??_ipv4_calculateHeaderChecksum+2,w,c
 13293  0128C0  121C               	iorwf	??_ipv4_calculateHeaderChecksum+4,f,c
 13294  0128C2  501B               	movf	??_ipv4_calculateHeaderChecksum+3,w,c
 13295  0128C4  2621               	addwf	ipv4_calculateHeaderChecksum@sum,f,c
 13296  0128C6  501C               	movf	??_ipv4_calculateHeaderChecksum+4,w,c
 13297  0128C8  2222               	addwfc	ipv4_calculateHeaderChecksum@sum+1,f,c
 13298  0128CA  0E00               	movlw	0
 13299  0128CC  2223               	addwfc	ipv4_calculateHeaderChecksum@sum+2,f,c
 13300  0128CE  0E00               	movlw	0
 13301  0128D0  2224               	addwfc	ipv4_calculateHeaderChecksum@sum+3,f,c
 13302                           
 13303                           ;ipv4.c: 139: sum += ((header->source.address[3] | (header->source.address[2] << 8)))&0x
      +                          ffff;
 13304  0128D2  EE20 F011          	lfsr	2,17
 13305  0128D6  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13306  0128D8  26D9               	addwf	16345,f,c
 13307  0128DA  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13308  0128DC  22DA               	addwfc	16346,f,c
 13309  0128DE  50DF               	movf	16351,w,c
 13310  0128E0  6E18               	movwf	??_ipv4_calculateHeaderChecksum& (0+255),c
 13311  0128E2  5018               	movf	??_ipv4_calculateHeaderChecksum,w,c
 13312  0128E4  6E1A               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),c
 13313  0128E6  6A19               	clrf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),c
 13314  0128E8  EE20 F012          	lfsr	2,18
 13315  0128EC  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13316  0128EE  26D9               	addwf	16345,f,c
 13317  0128F0  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13318  0128F2  22DA               	addwfc	16346,f,c
 13319  0128F4  50DF               	movf	16351,w,c
 13320  0128F6  6E1B               	movwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),c
 13321  0128F8  6A1C               	clrf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),c
 13322  0128FA  5019               	movf	??_ipv4_calculateHeaderChecksum+1,w,c
 13323  0128FC  121B               	iorwf	??_ipv4_calculateHeaderChecksum+3,f,c
 13324  0128FE  501A               	movf	??_ipv4_calculateHeaderChecksum+2,w,c
 13325  012900  121C               	iorwf	??_ipv4_calculateHeaderChecksum+4,f,c
 13326  012902  501B               	movf	??_ipv4_calculateHeaderChecksum+3,w,c
 13327  012904  2621               	addwf	ipv4_calculateHeaderChecksum@sum,f,c
 13328  012906  501C               	movf	??_ipv4_calculateHeaderChecksum+4,w,c
 13329  012908  2222               	addwfc	ipv4_calculateHeaderChecksum@sum+1,f,c
 13330  01290A  0E00               	movlw	0
 13331  01290C  2223               	addwfc	ipv4_calculateHeaderChecksum@sum+2,f,c
 13332  01290E  0E00               	movlw	0
 13333  012910  2224               	addwfc	ipv4_calculateHeaderChecksum@sum+3,f,c
 13334                           
 13335                           ;ipv4.c: 140: sum += ((header->destination.address[1] | (header->destination.address[0] 
      +                          << 8)))&0xffff;
 13336  012912  EE20 F013          	lfsr	2,19
 13337  012916  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13338  012918  26D9               	addwf	16345,f,c
 13339  01291A  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13340  01291C  22DA               	addwfc	16346,f,c
 13341  01291E  50DF               	movf	16351,w,c
 13342  012920  6E18               	movwf	??_ipv4_calculateHeaderChecksum& (0+255),c
 13343  012922  5018               	movf	??_ipv4_calculateHeaderChecksum,w,c
 13344  012924  6E1A               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),c
 13345  012926  6A19               	clrf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),c
 13346  012928  EE20 F014          	lfsr	2,20
 13347  01292C  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13348  01292E  26D9               	addwf	16345,f,c
 13349  012930  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13350  012932  22DA               	addwfc	16346,f,c
 13351  012934  50DF               	movf	16351,w,c
 13352  012936  6E1B               	movwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),c
 13353  012938  6A1C               	clrf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),c
 13354  01293A  5019               	movf	??_ipv4_calculateHeaderChecksum+1,w,c
 13355  01293C  121B               	iorwf	??_ipv4_calculateHeaderChecksum+3,f,c
 13356  01293E  501A               	movf	??_ipv4_calculateHeaderChecksum+2,w,c
 13357  012940  121C               	iorwf	??_ipv4_calculateHeaderChecksum+4,f,c
 13358  012942  501B               	movf	??_ipv4_calculateHeaderChecksum+3,w,c
 13359  012944  2621               	addwf	ipv4_calculateHeaderChecksum@sum,f,c
 13360  012946  501C               	movf	??_ipv4_calculateHeaderChecksum+4,w,c
 13361  012948  2222               	addwfc	ipv4_calculateHeaderChecksum@sum+1,f,c
 13362  01294A  0E00               	movlw	0
 13363  01294C  2223               	addwfc	ipv4_calculateHeaderChecksum@sum+2,f,c
 13364  01294E  0E00               	movlw	0
 13365  012950  2224               	addwfc	ipv4_calculateHeaderChecksum@sum+3,f,c
 13366                           
 13367                           ;ipv4.c: 141: sum += ((header->destination.address[3] | (header->destination.address[2] 
      +                          << 8)))&0xffff;
 13368  012952  EE20 F015          	lfsr	2,21
 13369  012956  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13370  012958  26D9               	addwf	16345,f,c
 13371  01295A  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13372  01295C  22DA               	addwfc	16346,f,c
 13373  01295E  50DF               	movf	16351,w,c
 13374  012960  6E18               	movwf	??_ipv4_calculateHeaderChecksum& (0+255),c
 13375  012962  5018               	movf	??_ipv4_calculateHeaderChecksum,w,c
 13376  012964  6E1A               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),c
 13377  012966  6A19               	clrf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),c
 13378  012968  EE20 F016          	lfsr	2,22
 13379  01296C  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13380  01296E  26D9               	addwf	16345,f,c
 13381  012970  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13382  012972  22DA               	addwfc	16346,f,c
 13383  012974  50DF               	movf	16351,w,c
 13384  012976  6E1B               	movwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),c
 13385  012978  6A1C               	clrf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),c
 13386  01297A  5019               	movf	??_ipv4_calculateHeaderChecksum+1,w,c
 13387  01297C  121B               	iorwf	??_ipv4_calculateHeaderChecksum+3,f,c
 13388  01297E  501A               	movf	??_ipv4_calculateHeaderChecksum+2,w,c
 13389  012980  121C               	iorwf	??_ipv4_calculateHeaderChecksum+4,f,c
 13390  012982  501B               	movf	??_ipv4_calculateHeaderChecksum+3,w,c
 13391  012984  2621               	addwf	ipv4_calculateHeaderChecksum@sum,f,c
 13392  012986  501C               	movf	??_ipv4_calculateHeaderChecksum+4,w,c
 13393  012988  2222               	addwfc	ipv4_calculateHeaderChecksum@sum+1,f,c
 13394  01298A  0E00               	movlw	0
 13395  01298C  2223               	addwfc	ipv4_calculateHeaderChecksum@sum+2,f,c
 13396  01298E  0E00               	movlw	0
 13397  012990  2224               	addwfc	ipv4_calculateHeaderChecksum@sum+3,f,c
 13398                           
 13399                           ;ipv4.c: 143: uint8_t carry = (sum & 0xffff0000) >> 16;
 13400  012992  0E00               	movlw	0
 13401  012994  1421               	andwf	ipv4_calculateHeaderChecksum@sum,w,c
 13402  012996  6E18               	movwf	??_ipv4_calculateHeaderChecksum& (0+255),c
 13403  012998  0E00               	movlw	0
 13404  01299A  1422               	andwf	ipv4_calculateHeaderChecksum@sum+1,w,c
 13405  01299C  6E19               	movwf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),c
 13406  01299E  0EFF               	movlw	255
 13407  0129A0  1423               	andwf	ipv4_calculateHeaderChecksum@sum+2,w,c
 13408  0129A2  6E1A               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),c
 13409  0129A4  0EFF               	movlw	255
 13410  0129A6  1424               	andwf	ipv4_calculateHeaderChecksum@sum+3,w,c
 13411  0129A8  6E1B               	movwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),c
 13412  0129AA  0E11               	movlw	17
 13413  0129AC  D005               	goto	u11760
 13414  0129AE                     u11765:
 13415  0129AE  90D8               	bcf	16344,0,c
 13416  0129B0  321B               	rrcf	??_ipv4_calculateHeaderChecksum+3,f,c
 13417  0129B2  321A               	rrcf	??_ipv4_calculateHeaderChecksum+2,f,c
 13418  0129B4  3219               	rrcf	??_ipv4_calculateHeaderChecksum+1,f,c
 13419  0129B6  3218               	rrcf	??_ipv4_calculateHeaderChecksum,f,c
 13420  0129B8                     u11760:
 13421  0129B8  2EE8               	decfsz	16360,f,c
 13422  0129BA  D7F9               	goto	u11765
 13423  0129BC  5018               	movf	??_ipv4_calculateHeaderChecksum,w,c
 13424  0129BE  6E20               	movwf	ipv4_calculateHeaderChecksum@carry,c
 13425                           
 13426                           ;ipv4.c: 144: sum &= 0xffff;
 13427  0129C0  0EFF               	movlw	255
 13428  0129C2  1621               	andwf	ipv4_calculateHeaderChecksum@sum,f,c
 13429  0129C4  0EFF               	movlw	255
 13430  0129C6  1622               	andwf	ipv4_calculateHeaderChecksum@sum+1,f,c
 13431  0129C8  0E00               	movlw	0
 13432  0129CA  1623               	andwf	ipv4_calculateHeaderChecksum@sum+2,f,c
 13433  0129CC  0E00               	movlw	0
 13434  0129CE  1624               	andwf	ipv4_calculateHeaderChecksum@sum+3,f,c
 13435                           
 13436                           ;ipv4.c: 145: sum += carry;
 13437  0129D0  5020               	movf	ipv4_calculateHeaderChecksum@carry,w,c
 13438  0129D2  2621               	addwf	ipv4_calculateHeaderChecksum@sum,f,c
 13439  0129D4  0E00               	movlw	0
 13440  0129D6  2222               	addwfc	ipv4_calculateHeaderChecksum@sum+1,f,c
 13441  0129D8  2223               	addwfc	ipv4_calculateHeaderChecksum@sum+2,f,c
 13442  0129DA  2224               	addwfc	ipv4_calculateHeaderChecksum@sum+3,f,c
 13443                           
 13444                           ;ipv4.c: 146: if (sum > 0xffff) {
 13445  0129DC  5024               	movf	ipv4_calculateHeaderChecksum@sum+3,w,c
 13446  0129DE  E103               	bnz	u11770
 13447  0129E0  0423               	decf	ipv4_calculateHeaderChecksum@sum+2,w,c
 13448  0129E2  A0D8               	btfss	16344,0,c
 13449  0129E4  D025               	goto	l1164
 13450  0129E6                     u11770:
 13451                           
 13452                           ;ipv4.c: 147: sum += ((sum & 0xffff0000) >> 16);
 13453  0129E6  0E00               	movlw	0
 13454  0129E8  1421               	andwf	ipv4_calculateHeaderChecksum@sum,w,c
 13455  0129EA  6E18               	movwf	??_ipv4_calculateHeaderChecksum& (0+255),c
 13456  0129EC  0E00               	movlw	0
 13457  0129EE  1422               	andwf	ipv4_calculateHeaderChecksum@sum+1,w,c
 13458  0129F0  6E19               	movwf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),c
 13459  0129F2  0EFF               	movlw	255
 13460  0129F4  1423               	andwf	ipv4_calculateHeaderChecksum@sum+2,w,c
 13461  0129F6  6E1A               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),c
 13462  0129F8  0EFF               	movlw	255
 13463  0129FA  1424               	andwf	ipv4_calculateHeaderChecksum@sum+3,w,c
 13464  0129FC  6E1B               	movwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),c
 13465  0129FE  0E11               	movlw	17
 13466  012A00  D005               	goto	u11780
 13467  012A02                     u11785:
 13468  012A02  90D8               	bcf	16344,0,c
 13469  012A04  321B               	rrcf	??_ipv4_calculateHeaderChecksum+3,f,c
 13470  012A06  321A               	rrcf	??_ipv4_calculateHeaderChecksum+2,f,c
 13471  012A08  3219               	rrcf	??_ipv4_calculateHeaderChecksum+1,f,c
 13472  012A0A  3218               	rrcf	??_ipv4_calculateHeaderChecksum,f,c
 13473  012A0C                     u11780:
 13474  012A0C  2EE8               	decfsz	16360,f,c
 13475  012A0E  D7F9               	goto	u11785
 13476  012A10  5018               	movf	??_ipv4_calculateHeaderChecksum,w,c
 13477  012A12  2621               	addwf	ipv4_calculateHeaderChecksum@sum,f,c
 13478  012A14  5019               	movf	??_ipv4_calculateHeaderChecksum+1,w,c
 13479  012A16  2222               	addwfc	ipv4_calculateHeaderChecksum@sum+1,f,c
 13480  012A18  501A               	movf	??_ipv4_calculateHeaderChecksum+2,w,c
 13481  012A1A  2223               	addwfc	ipv4_calculateHeaderChecksum@sum+2,f,c
 13482  012A1C  501B               	movf	??_ipv4_calculateHeaderChecksum+3,w,c
 13483  012A1E  2224               	addwfc	ipv4_calculateHeaderChecksum@sum+3,f,c
 13484                           
 13485                           ;ipv4.c: 148: sum &= 0xffff;
 13486  012A20  0EFF               	movlw	255
 13487  012A22  1621               	andwf	ipv4_calculateHeaderChecksum@sum,f,c
 13488  012A24  0EFF               	movlw	255
 13489  012A26  1622               	andwf	ipv4_calculateHeaderChecksum@sum+1,f,c
 13490  012A28  0E00               	movlw	0
 13491  012A2A  1623               	andwf	ipv4_calculateHeaderChecksum@sum+2,f,c
 13492  012A2C  0E00               	movlw	0
 13493  012A2E  1624               	andwf	ipv4_calculateHeaderChecksum@sum+3,f,c
 13494  012A30                     l1164:
 13495                           
 13496                           ;ipv4.c: 149: }
 13497                           ;ipv4.c: 151: header->checksum = ~sum;
 13498  012A30  1C21               	comf	ipv4_calculateHeaderChecksum@sum,w,c
 13499  012A32  6E18               	movwf	??_ipv4_calculateHeaderChecksum& (0+255),c
 13500  012A34  1C22               	comf	ipv4_calculateHeaderChecksum@sum+1,w,c
 13501  012A36  6E19               	movwf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),c
 13502  012A38  EE20 F00D          	lfsr	2,13
 13503  012A3C  5016               	movf	ipv4_calculateHeaderChecksum@header,w,c
 13504  012A3E  26D9               	addwf	16345,f,c
 13505  012A40  5017               	movf	ipv4_calculateHeaderChecksum@header+1,w,c
 13506  012A42  22DA               	addwfc	16346,f,c
 13507  012A44  0060  F063  FFDE   	movff	??_ipv4_calculateHeaderChecksum,16350
 13508  012A4A  0060  F067  FFDD   	movff	??_ipv4_calculateHeaderChecksum+1,16349
 13509  012A50  0012               	return		;funcret
 13510  012A52                     __end_of_ipv4_calculateHeaderChecksum:
 13511                           	opt stack 0
 13512                           
 13513 ;; *************** function _icmp_writeHeaderIntoBuffer *****************
 13514 ;; Defined at:
 13515 ;;		line 245 in file "src/stack/protocols/icmp.c"
 13516 ;; Parameters:    Size  Location     Type
 13517 ;;  buf             2   21[COMRAM] PTR unsigned char 
 13518 ;;		 -> icmp_sendEchoRequest@icmpMessage(64), icmp_sendEchoReply@icmpMessage(64), 
 13519 ;;  header          8   23[COMRAM] struct icmpHeader
 13520 ;; Auto vars:     Size  Location     Type
 13521 ;;		None
 13522 ;; Return value:  Size  Location     Type
 13523 ;;                  1    wreg      void 
 13524 ;; Registers used:
 13525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13526 ;; Tracked objects:
 13527 ;;		On entry : 0/0
 13528 ;;		On exit  : 0/0
 13529 ;;		Unchanged: 0/0
 13530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13531 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13533 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13534 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13535 ;;Total ram usage:       14 bytes
 13536 ;; Hardware stack levels used:    1
 13537 ;; Hardware stack levels required when called:    4
 13538 ;; This function calls:
 13539 ;;		Nothing
 13540 ;; This function is called by:
 13541 ;;		_icmp_sendEchoReply
 13542 ;;		_icmp_sendEchoRequest
 13543 ;; This function uses a non-reentrant model
 13544 ;;
 13545                           
 13546                           	psect	text42
 13547  015BD6                     __ptext42:
 13548                           	opt stack 0
 13549  015BD6                     _icmp_writeHeaderIntoBuffer:
 13550                           	opt stack 21
 13551                           
 13552                           ;icmp.c: 246: *buf = header.typeOfMessage;
 13553                           
 13554                           ;incstack = 0
 13555  015BD6  0060  F05B  FFD9   	movff	icmp_writeHeaderIntoBuffer@buf,16345
 13556  015BDC  0060  F05F  FFDA   	movff	icmp_writeHeaderIntoBuffer@buf+1,16346
 13557  015BE2  0060  F063  FFDF   	movff	icmp_writeHeaderIntoBuffer@header,16351
 13558                           
 13559                           ;icmp.c: 247: *(buf + 1) = header.code;
 13560  015BE8  EE20 F001          	lfsr	2,1
 13561  015BEC  5016               	movf	icmp_writeHeaderIntoBuffer@buf,w,c
 13562  015BEE  26D9               	addwf	16345,f,c
 13563  015BF0  5017               	movf	icmp_writeHeaderIntoBuffer@buf+1,w,c
 13564  015BF2  22DA               	addwfc	16346,f,c
 13565  015BF4  0060  F067  FFDF   	movff	icmp_writeHeaderIntoBuffer@header+1,16351
 13566                           
 13567                           ;icmp.c: 248: *(buf + 2) = (header.checksum & 0xff00) >> 8;
 13568  015BFA  EE20 F002          	lfsr	2,2
 13569  015BFE  5016               	movf	icmp_writeHeaderIntoBuffer@buf,w,c
 13570  015C00  26D9               	addwf	16345,f,c
 13571  015C02  5017               	movf	icmp_writeHeaderIntoBuffer@buf+1,w,c
 13572  015C04  22DA               	addwfc	16346,f,c
 13573  015C06  501B               	movf	icmp_writeHeaderIntoBuffer@header+3,w,c
 13574  015C08  6EDF               	movwf	16351,c
 13575                           
 13576                           ;icmp.c: 249: *(buf + 3) = header.checksum & 0xff;
 13577  015C0A  EE20 F003          	lfsr	2,3
 13578  015C0E  5016               	movf	icmp_writeHeaderIntoBuffer@buf,w,c
 13579  015C10  26D9               	addwf	16345,f,c
 13580  015C12  5017               	movf	icmp_writeHeaderIntoBuffer@buf+1,w,c
 13581  015C14  22DA               	addwfc	16346,f,c
 13582  015C16  0060  F06B  FFDF   	movff	icmp_writeHeaderIntoBuffer@header+2,16351
 13583                           
 13584                           ;icmp.c: 250: *(buf + 4) = (header.headerData & 0xff000000) >> 24;
 13585  015C1C  EE20 F004          	lfsr	2,4
 13586  015C20  5016               	movf	icmp_writeHeaderIntoBuffer@buf,w,c
 13587  015C22  26D9               	addwf	16345,f,c
 13588  015C24  5017               	movf	icmp_writeHeaderIntoBuffer@buf+1,w,c
 13589  015C26  22DA               	addwfc	16346,f,c
 13590  015C28  EE10  F01C         	lfsr	1,icmp_writeHeaderIntoBuffer@header+4
 13591  015C2C  0E00               	movlw	0
 13592  015C2E  14E6               	andwf	16358,w,c
 13593  015C30  6E20               	movwf	??_icmp_writeHeaderIntoBuffer& (0+255),c
 13594  015C32  0E00               	movlw	0
 13595  015C34  14E6               	andwf	16358,w,c
 13596  015C36  6E21               	movwf	(??_icmp_writeHeaderIntoBuffer+1)& (0+255),c
 13597  015C38  0E00               	movlw	0
 13598  015C3A  14E6               	andwf	16358,w,c
 13599  015C3C  6E22               	movwf	(??_icmp_writeHeaderIntoBuffer+2)& (0+255),c
 13600  015C3E  0EFF               	movlw	255
 13601  015C40  14E6               	andwf	16358,w,c
 13602  015C42  6E23               	movwf	(??_icmp_writeHeaderIntoBuffer+3)& (0+255),c
 13603  015C44  0E19               	movlw	25
 13604  015C46  D005               	goto	u12040
 13605  015C48                     u12045:
 13606  015C48  90D8               	bcf	16344,0,c
 13607  015C4A  3223               	rrcf	??_icmp_writeHeaderIntoBuffer+3,f,c
 13608  015C4C  3222               	rrcf	??_icmp_writeHeaderIntoBuffer+2,f,c
 13609  015C4E  3221               	rrcf	??_icmp_writeHeaderIntoBuffer+1,f,c
 13610  015C50  3220               	rrcf	??_icmp_writeHeaderIntoBuffer,f,c
 13611  015C52                     u12040:
 13612  015C52  2EE8               	decfsz	16360,f,c
 13613  015C54  D7F9               	goto	u12045
 13614  015C56  5020               	movf	??_icmp_writeHeaderIntoBuffer,w,c
 13615  015C58  6EDF               	movwf	16351,c
 13616                           
 13617                           ;icmp.c: 251: *(buf + 5) = (header.headerData & 0x00ff0000) >> 16;
 13618  015C5A  EE20 F005          	lfsr	2,5
 13619  015C5E  5016               	movf	icmp_writeHeaderIntoBuffer@buf,w,c
 13620  015C60  26D9               	addwf	16345,f,c
 13621  015C62  5017               	movf	icmp_writeHeaderIntoBuffer@buf+1,w,c
 13622  015C64  22DA               	addwfc	16346,f,c
 13623  015C66  0060  F07B  FFDF   	movff	icmp_writeHeaderIntoBuffer@header+6,16351
 13624                           
 13625                           ;icmp.c: 252: *(buf + 6) = (header.headerData & 0x0000ff00) >> 8;
 13626  015C6C  EE20 F006          	lfsr	2,6
 13627  015C70  5016               	movf	icmp_writeHeaderIntoBuffer@buf,w,c
 13628  015C72  26D9               	addwf	16345,f,c
 13629  015C74  5017               	movf	icmp_writeHeaderIntoBuffer@buf+1,w,c
 13630  015C76  22DA               	addwfc	16346,f,c
 13631  015C78  0060  F077  FFDF   	movff	icmp_writeHeaderIntoBuffer@header+5,16351
 13632                           
 13633                           ;icmp.c: 253: *(buf + 7) = (header.headerData & 0x000000ff);
 13634  015C7E  EE20 F007          	lfsr	2,7
 13635  015C82  5016               	movf	icmp_writeHeaderIntoBuffer@buf,w,c
 13636  015C84  26D9               	addwf	16345,f,c
 13637  015C86  5017               	movf	icmp_writeHeaderIntoBuffer@buf+1,w,c
 13638  015C88  22DA               	addwfc	16346,f,c
 13639  015C8A  0060  F073  FFDF   	movff	icmp_writeHeaderIntoBuffer@header+4,16351
 13640  015C90  0012               	return		;funcret
 13641  015C92                     __end_of_icmp_writeHeaderIntoBuffer:
 13642                           	opt stack 0
 13643                           
 13644 ;; *************** function _icmp_calculateChecksumBuf *****************
 13645 ;; Defined at:
 13646 ;;		line 102 in file "src/stack/protocols/icmp.c"
 13647 ;; Parameters:    Size  Location     Type
 13648 ;;  buf             2   21[COMRAM] PTR unsigned char 
 13649 ;;		 -> icmp_sendEchoRequest@icmpMessage(64), icmp_sendEchoReply@icmpMessage(64), icmp_handleNewPacket@foo(128), 
 13650 ;;  ipPayloadLen    2   23[COMRAM] unsigned int 
 13651 ;; Auto vars:     Size  Location     Type
 13652 ;;  foo             2   30[COMRAM] unsigned int 
 13653 ;;  i               2   32[COMRAM] unsigned int 
 13654 ;;  sum             4   34[COMRAM] unsigned long 
 13655 ;;  carry           1   29[COMRAM] unsigned char 
 13656 ;; Return value:  Size  Location     Type
 13657 ;;                  2   21[COMRAM] unsigned int 
 13658 ;; Registers used:
 13659 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13660 ;; Tracked objects:
 13661 ;;		On entry : 0/0
 13662 ;;		On exit  : 0/0
 13663 ;;		Unchanged: 0/0
 13664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13666 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13667 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13668 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13669 ;;Total ram usage:       17 bytes
 13670 ;; Hardware stack levels used:    1
 13671 ;; Hardware stack levels required when called:    4
 13672 ;; This function calls:
 13673 ;;		Nothing
 13674 ;; This function is called by:
 13675 ;;		_icmp_handleNewPacket
 13676 ;;		_icmp_sendEchoReply
 13677 ;;		_icmp_sendEchoRequest
 13678 ;; This function uses a non-reentrant model
 13679 ;;
 13680                           
 13681                           	psect	text43
 13682  014E62                     __ptext43:
 13683                           	opt stack 0
 13684  014E62                     _icmp_calculateChecksumBuf:
 13685                           	opt stack 21
 13686                           
 13687                           ;icmp.c: 103: ipPayloadLength += 4;
 13688                           
 13689                           ;incstack = 0
 13690  014E62  0E04               	movlw	4
 13691  014E64  2618               	addwf	icmp_calculateChecksumBuf@ipPayloadLength,f,c
 13692  014E66  0E00               	movlw	0
 13693  014E68  2219               	addwfc	icmp_calculateChecksumBuf@ipPayloadLength+1,f,c
 13694                           
 13695                           ;icmp.c: 104: uint32_t sum = 0;
 13696  014E6A  0E00               	movlw	0
 13697  014E6C  6E23               	movwf	icmp_calculateChecksumBuf@sum,c
 13698  014E6E  0E00               	movlw	0
 13699  014E70  6E24               	movwf	icmp_calculateChecksumBuf@sum+1,c
 13700  014E72  0E00               	movlw	0
 13701  014E74  6E25               	movwf	icmp_calculateChecksumBuf@sum+2,c
 13702  014E76  0E00               	movlw	0
 13703  014E78  6E26               	movwf	icmp_calculateChecksumBuf@sum+3,c
 13704                           
 13705                           ;icmp.c: 106: for (uint16_t i = 0; i < ipPayloadLength / 2; i++) {
 13706  014E7A  0E00               	movlw	0
 13707  014E7C  6E22               	movwf	icmp_calculateChecksumBuf@i+1,c
 13708  014E7E  0E00               	movlw	0
 13709  014E80  6E21               	movwf	icmp_calculateChecksumBuf@i,c
 13710  014E82  D02D               	goto	l1298
 13711  014E84                     
 13712                           ;icmp.c: 107: uint16_t foo = 0;
 13713  014E84  0E00               	movlw	0
 13714  014E86  6E20               	movwf	icmp_calculateChecksumBuf@foo+1,c
 13715  014E88  0E00               	movlw	0
 13716  014E8A  6E1F               	movwf	icmp_calculateChecksumBuf@foo,c
 13717                           
 13718                           ;icmp.c: 108: foo = (uint16_t) (*(buf++) << 8);
 13719  014E8C  0060  F05B  FFD9   	movff	icmp_calculateChecksumBuf@buf,16345
 13720  014E92  0060  F05F  FFDA   	movff	icmp_calculateChecksumBuf@buf+1,16346
 13721  014E98  50DF               	movf	16351,w,c
 13722  014E9A  6E20               	movwf	icmp_calculateChecksumBuf@foo+1,c
 13723  014E9C  6A1F               	clrf	icmp_calculateChecksumBuf@foo,c
 13724  014E9E  4A16               	infsnz	icmp_calculateChecksumBuf@buf,f,c
 13725  014EA0  2A17               	incf	icmp_calculateChecksumBuf@buf+1,f,c
 13726                           
 13727                           ;icmp.c: 109: foo |= *(buf++);
 13728  014EA2  0060  F05B  FFD9   	movff	icmp_calculateChecksumBuf@buf,16345
 13729  014EA8  0060  F05F  FFDA   	movff	icmp_calculateChecksumBuf@buf+1,16346
 13730  014EAE  50DF               	movf	16351,w,c
 13731  014EB0  6E1A               	movwf	??_icmp_calculateChecksumBuf& (0+255),c
 13732  014EB2  501A               	movf	??_icmp_calculateChecksumBuf,w,c
 13733  014EB4  121F               	iorwf	icmp_calculateChecksumBuf@foo,f,c
 13734  014EB6  4A16               	infsnz	icmp_calculateChecksumBuf@buf,f,c
 13735  014EB8  2A17               	incf	icmp_calculateChecksumBuf@buf+1,f,c
 13736                           
 13737                           ;icmp.c: 110: if (i == 1) {
 13738  014EBA  0421               	decf	icmp_calculateChecksumBuf@i,w,c
 13739  014EBC  1022               	iorwf	icmp_calculateChecksumBuf@i+1,w,c
 13740  014EBE  A4D8               	btfss	16344,2,c
 13741  014EC0  D004               	goto	l1300
 13742                           
 13743                           ;icmp.c: 111: foo = 0x0000;
 13744  014EC2  0E00               	movlw	0
 13745  014EC4  6E20               	movwf	icmp_calculateChecksumBuf@foo+1,c
 13746  014EC6  0E00               	movlw	0
 13747  014EC8  6E1F               	movwf	icmp_calculateChecksumBuf@foo,c
 13748  014ECA                     l1300:
 13749                           
 13750                           ;icmp.c: 112: }
 13751                           ;icmp.c: 113: sum += foo;
 13752  014ECA  501F               	movf	icmp_calculateChecksumBuf@foo,w,c
 13753  014ECC  2623               	addwf	icmp_calculateChecksumBuf@sum,f,c
 13754  014ECE  5020               	movf	icmp_calculateChecksumBuf@foo+1,w,c
 13755  014ED0  2224               	addwfc	icmp_calculateChecksumBuf@sum+1,f,c
 13756  014ED2  0E00               	movlw	0
 13757  014ED4  2225               	addwfc	icmp_calculateChecksumBuf@sum+2,f,c
 13758  014ED6  0E00               	movlw	0
 13759  014ED8  2226               	addwfc	icmp_calculateChecksumBuf@sum+3,f,c
 13760  014EDA  4A21               	infsnz	icmp_calculateChecksumBuf@i,f,c
 13761  014EDC  2A22               	incf	icmp_calculateChecksumBuf@i+1,f,c
 13762  014EDE                     l1298:
 13763  014EDE  90D8               	bcf	16344,0,c
 13764  014EE0  3019               	rrcf	icmp_calculateChecksumBuf@ipPayloadLength+1,w,c
 13765  014EE2  6E1B               	movwf	(??_icmp_calculateChecksumBuf+1)& (0+255),c
 13766  014EE4  3018               	rrcf	icmp_calculateChecksumBuf@ipPayloadLength,w,c
 13767  014EE6  6E1A               	movwf	??_icmp_calculateChecksumBuf& (0+255),c
 13768  014EE8  501A               	movf	??_icmp_calculateChecksumBuf,w,c
 13769  014EEA  5C21               	subwf	icmp_calculateChecksumBuf@i,w,c
 13770  014EEC  501B               	movf	??_icmp_calculateChecksumBuf+1,w,c
 13771  014EEE  5822               	subwfb	icmp_calculateChecksumBuf@i+1,w,c
 13772  014EF0  A0D8               	btfss	16344,0,c
 13773  014EF2  D7C8               	goto	l1299
 13774                           
 13775                           ;icmp.c: 114: }
 13776                           ;icmp.c: 116: uint8_t carry = (sum & 0xffff0000) >> 16;
 13777  014EF4  0E00               	movlw	0
 13778  014EF6  1423               	andwf	icmp_calculateChecksumBuf@sum,w,c
 13779  014EF8  6E1A               	movwf	??_icmp_calculateChecksumBuf& (0+255),c
 13780  014EFA  0E00               	movlw	0
 13781  014EFC  1424               	andwf	icmp_calculateChecksumBuf@sum+1,w,c
 13782  014EFE  6E1B               	movwf	(??_icmp_calculateChecksumBuf+1)& (0+255),c
 13783  014F00  0EFF               	movlw	255
 13784  014F02  1425               	andwf	icmp_calculateChecksumBuf@sum+2,w,c
 13785  014F04  6E1C               	movwf	(??_icmp_calculateChecksumBuf+2)& (0+255),c
 13786  014F06  0EFF               	movlw	255
 13787  014F08  1426               	andwf	icmp_calculateChecksumBuf@sum+3,w,c
 13788  014F0A  6E1D               	movwf	(??_icmp_calculateChecksumBuf+3)& (0+255),c
 13789  014F0C  0E11               	movlw	17
 13790  014F0E  D005               	goto	u12010
 13791  014F10                     u12015:
 13792  014F10  90D8               	bcf	16344,0,c
 13793  014F12  321D               	rrcf	??_icmp_calculateChecksumBuf+3,f,c
 13794  014F14  321C               	rrcf	??_icmp_calculateChecksumBuf+2,f,c
 13795  014F16  321B               	rrcf	??_icmp_calculateChecksumBuf+1,f,c
 13796  014F18  321A               	rrcf	??_icmp_calculateChecksumBuf,f,c
 13797  014F1A                     u12010:
 13798  014F1A  2EE8               	decfsz	16360,f,c
 13799  014F1C  D7F9               	goto	u12015
 13800  014F1E  501A               	movf	??_icmp_calculateChecksumBuf,w,c
 13801  014F20  6E1E               	movwf	icmp_calculateChecksumBuf@carry,c
 13802                           
 13803                           ;icmp.c: 117: sum &= 0xffff;
 13804  014F22  0EFF               	movlw	255
 13805  014F24  1623               	andwf	icmp_calculateChecksumBuf@sum,f,c
 13806  014F26  0EFF               	movlw	255
 13807  014F28  1624               	andwf	icmp_calculateChecksumBuf@sum+1,f,c
 13808  014F2A  0E00               	movlw	0
 13809  014F2C  1625               	andwf	icmp_calculateChecksumBuf@sum+2,f,c
 13810  014F2E  0E00               	movlw	0
 13811  014F30  1626               	andwf	icmp_calculateChecksumBuf@sum+3,f,c
 13812                           
 13813                           ;icmp.c: 118: sum += carry;
 13814  014F32  501E               	movf	icmp_calculateChecksumBuf@carry,w,c
 13815  014F34  2623               	addwf	icmp_calculateChecksumBuf@sum,f,c
 13816  014F36  0E00               	movlw	0
 13817  014F38  2224               	addwfc	icmp_calculateChecksumBuf@sum+1,f,c
 13818  014F3A  2225               	addwfc	icmp_calculateChecksumBuf@sum+2,f,c
 13819  014F3C  2226               	addwfc	icmp_calculateChecksumBuf@sum+3,f,c
 13820                           
 13821                           ;icmp.c: 119: if (sum > 0xffff) {
 13822  014F3E  5026               	movf	icmp_calculateChecksumBuf@sum+3,w,c
 13823  014F40  E103               	bnz	u12020
 13824  014F42  0425               	decf	icmp_calculateChecksumBuf@sum+2,w,c
 13825  014F44  A0D8               	btfss	16344,0,c
 13826  014F46  D025               	goto	l1302
 13827  014F48                     u12020:
 13828                           
 13829                           ;icmp.c: 120: sum += ((sum & 0xffff0000) >> 16);
 13830  014F48  0E00               	movlw	0
 13831  014F4A  1423               	andwf	icmp_calculateChecksumBuf@sum,w,c
 13832  014F4C  6E1A               	movwf	??_icmp_calculateChecksumBuf& (0+255),c
 13833  014F4E  0E00               	movlw	0
 13834  014F50  1424               	andwf	icmp_calculateChecksumBuf@sum+1,w,c
 13835  014F52  6E1B               	movwf	(??_icmp_calculateChecksumBuf+1)& (0+255),c
 13836  014F54  0EFF               	movlw	255
 13837  014F56  1425               	andwf	icmp_calculateChecksumBuf@sum+2,w,c
 13838  014F58  6E1C               	movwf	(??_icmp_calculateChecksumBuf+2)& (0+255),c
 13839  014F5A  0EFF               	movlw	255
 13840  014F5C  1426               	andwf	icmp_calculateChecksumBuf@sum+3,w,c
 13841  014F5E  6E1D               	movwf	(??_icmp_calculateChecksumBuf+3)& (0+255),c
 13842  014F60  0E11               	movlw	17
 13843  014F62  D005               	goto	u12030
 13844  014F64                     u12035:
 13845  014F64  90D8               	bcf	16344,0,c
 13846  014F66  321D               	rrcf	??_icmp_calculateChecksumBuf+3,f,c
 13847  014F68  321C               	rrcf	??_icmp_calculateChecksumBuf+2,f,c
 13848  014F6A  321B               	rrcf	??_icmp_calculateChecksumBuf+1,f,c
 13849  014F6C  321A               	rrcf	??_icmp_calculateChecksumBuf,f,c
 13850  014F6E                     u12030:
 13851  014F6E  2EE8               	decfsz	16360,f,c
 13852  014F70  D7F9               	goto	u12035
 13853  014F72  501A               	movf	??_icmp_calculateChecksumBuf,w,c
 13854  014F74  2623               	addwf	icmp_calculateChecksumBuf@sum,f,c
 13855  014F76  501B               	movf	??_icmp_calculateChecksumBuf+1,w,c
 13856  014F78  2224               	addwfc	icmp_calculateChecksumBuf@sum+1,f,c
 13857  014F7A  501C               	movf	??_icmp_calculateChecksumBuf+2,w,c
 13858  014F7C  2225               	addwfc	icmp_calculateChecksumBuf@sum+2,f,c
 13859  014F7E  501D               	movf	??_icmp_calculateChecksumBuf+3,w,c
 13860  014F80  2226               	addwfc	icmp_calculateChecksumBuf@sum+3,f,c
 13861                           
 13862                           ;icmp.c: 121: sum &= 0xffff;
 13863  014F82  0EFF               	movlw	255
 13864  014F84  1623               	andwf	icmp_calculateChecksumBuf@sum,f,c
 13865  014F86  0EFF               	movlw	255
 13866  014F88  1624               	andwf	icmp_calculateChecksumBuf@sum+1,f,c
 13867  014F8A  0E00               	movlw	0
 13868  014F8C  1625               	andwf	icmp_calculateChecksumBuf@sum+2,f,c
 13869  014F8E  0E00               	movlw	0
 13870  014F90  1626               	andwf	icmp_calculateChecksumBuf@sum+3,f,c
 13871  014F92                     l1302:
 13872                           
 13873                           ;icmp.c: 122: }
 13874                           ;icmp.c: 124: return ~sum;
 13875  014F92  1C23               	comf	icmp_calculateChecksumBuf@sum,w,c
 13876  014F94  6E16               	movwf	?_icmp_calculateChecksumBuf,c
 13877  014F96  1C24               	comf	icmp_calculateChecksumBuf@sum+1,w,c
 13878  014F98  6E17               	movwf	?_icmp_calculateChecksumBuf+1,c
 13879  014F9A  0012               	return	
 13880  014F9C                     __end_of_icmp_calculateChecksumBuf:
 13881                           	opt stack 0
 13882                           
 13883 ;; *************** function _icmp_parseHeader *****************
 13884 ;; Defined at:
 13885 ;;		line 87 in file "src/stack/protocols/icmp.c"
 13886 ;; Parameters:    Size  Location     Type
 13887 ;;  ipPayload       9   41[COMRAM] struct memoryField
 13888 ;;  icmpHeader      2   50[COMRAM] PTR struct icmpHeader
 13889 ;;		 -> icmp_handleNewPacket@icmpHeader(8), 
 13890 ;; Auto vars:     Size  Location     Type
 13891 ;;		None
 13892 ;; Return value:  Size  Location     Type
 13893 ;;                  3   41[COMRAM] struct error
 13894 ;; Registers used:
 13895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13896 ;; Tracked objects:
 13897 ;;		On entry : 0/0
 13898 ;;		On exit  : 0/0
 13899 ;;		Unchanged: 0/0
 13900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13901 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13903 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13904 ;;      Totals:        11       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13905 ;;Total ram usage:       16 bytes
 13906 ;; Hardware stack levels used:    1
 13907 ;; Hardware stack levels required when called:    8
 13908 ;; This function calls:
 13909 ;;		_ethernetController_streamFromRXBuffer
 13910 ;; This function is called by:
 13911 ;;		_icmp_handleNewPacket
 13912 ;; This function uses a non-reentrant model
 13913 ;;
 13914                           
 13915                           	psect	text44
 13916  013EF4                     __ptext44:
 13917                           	opt stack 0
 13918  013EF4                     _icmp_parseHeader:
 13919                           	opt stack 18
 13920                           
 13921                           ;icmp.c: 88: ethernetController_streamFromRXBuffer(0, ipPayload.start);
 13922                           
 13923                           ;incstack = 0
 13924  013EF4  0060  F0A8  F025   	movff	icmp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 13925  013EFA  0060  F0AC  F026   	movff	icmp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 13926  013F00  0E00               	movlw	0
 13927  013F02  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 13928                           
 13929                           ;icmp.c: 89: icmpHeader->typeOfMessage = ethernetController_streamFromRXBuffer(1, ipPayl
      +                          oad.start);
 13930  013F06  0060  F0A8  F025   	movff	icmp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 13931  013F0C  0060  F0AC  F026   	movff	icmp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 13932  013F12  0E01               	movlw	1
 13933  013F14  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 13934  013F18  0060  F0CF  FFD9   	movff	icmp_parseHeader@icmpHeader,16345
 13935  013F1E  0060  F0D3  FFDA   	movff	icmp_parseHeader@icmpHeader+1,16346
 13936  013F24  6EDF               	movwf	16351,c
 13937                           
 13938                           ;icmp.c: 90: icmpHeader->code = ethernetController_streamFromRXBuffer(1, ipPayload.start
      +                          );
 13939  013F26  0060  F0A8  F025   	movff	icmp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 13940  013F2C  0060  F0AC  F026   	movff	icmp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 13941  013F32  0E01               	movlw	1
 13942  013F34  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 13943  013F38  0100               	movlb	0	; () banked
 13944  013F3A  6F60               	movwf	??_icmp_parseHeader& (0+255),b
 13945  013F3C  EE20 F001          	lfsr	2,1
 13946  013F40  5033               	movf	icmp_parseHeader@icmpHeader,w,c
 13947  013F42  26D9               	addwf	16345,f,c
 13948  013F44  5034               	movf	icmp_parseHeader@icmpHeader+1,w,c
 13949  013F46  22DA               	addwfc	16346,f,c
 13950  013F48  0060  F183  FFDF   	movff	??_icmp_parseHeader,16351
 13951                           
 13952                           ;icmp.c: 91: icmpHeader->checksum = ((uint32_t) ethernetController_streamFromRXBuffer(1,
      +                           ipPayload.start) << 8);
 13953  013F4E  0060  F0A8  F025   	movff	icmp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 13954  013F54  0060  F0AC  F026   	movff	icmp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 13955  013F5A  0E01               	movlw	1
 13956  013F5C  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 13957  013F60  0100               	movlb	0	; () banked
 13958  013F62  6F60               	movwf	??_icmp_parseHeader& (0+255),b
 13959  013F64  5160               	movf	??_icmp_parseHeader& (0+255),w,b
 13960  013F66  6F62               	movwf	(??_icmp_parseHeader+2)& (0+255),b
 13961  013F68  6B61               	clrf	(??_icmp_parseHeader+1)& (0+255),b
 13962  013F6A  EE20 F002          	lfsr	2,2
 13963  013F6E  5033               	movf	icmp_parseHeader@icmpHeader,w,c
 13964  013F70  26D9               	addwf	16345,f,c
 13965  013F72  5034               	movf	icmp_parseHeader@icmpHeader+1,w,c
 13966  013F74  22DA               	addwfc	16346,f,c
 13967  013F76  0060  F187  FFDE   	movff	??_icmp_parseHeader+1,16350
 13968  013F7C  0060  F18B  FFDD   	movff	??_icmp_parseHeader+2,16349
 13969                           
 13970                           ;icmp.c: 92: icmpHeader->checksum |= ethernetController_streamFromRXBuffer(1, ipPayload.
      +                          start);
 13971  013F82  0060  F0A8  F025   	movff	icmp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 13972  013F88  0060  F0AC  F026   	movff	icmp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 13973  013F8E  0E01               	movlw	1
 13974  013F90  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 13975  013F94  0100               	movlb	0	; () banked
 13976  013F96  6F60               	movwf	??_icmp_parseHeader& (0+255),b
 13977  013F98  6B61               	clrf	(??_icmp_parseHeader+1)& (0+255),b
 13978  013F9A  EE20 F002          	lfsr	2,2
 13979  013F9E  5033               	movf	icmp_parseHeader@icmpHeader,w,c
 13980  013FA0  26D9               	addwf	16345,f,c
 13981  013FA2  5034               	movf	icmp_parseHeader@icmpHeader+1,w,c
 13982  013FA4  22DA               	addwfc	16346,f,c
 13983  013FA6  5160               	movf	??_icmp_parseHeader& (0+255),w,b
 13984  013FA8  12DE               	iorwf	16350,f,c
 13985  013FAA  5161               	movf	(??_icmp_parseHeader+1)& (0+255),w,b
 13986  013FAC  12DD               	iorwf	16349,f,c
 13987                           
 13988                           ;icmp.c: 94: icmpHeader->headerData = ((uint32_t) ethernetController_streamFromRXBuffer(
      +                          1, ipPayload.start) << 24);
 13989  013FAE  0060  F0A8  F025   	movff	icmp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 13990  013FB4  0060  F0AC  F026   	movff	icmp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 13991  013FBA  0E01               	movlw	1
 13992  013FBC  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 13993  013FC0  0100               	movlb	0	; () banked
 13994  013FC2  6F60               	movwf	??_icmp_parseHeader& (0+255),b
 13995  013FC4  0060  F180  F061   	movff	??_icmp_parseHeader,??_icmp_parseHeader+1
 13996  013FCA  6B62               	clrf	(??_icmp_parseHeader+2)& (0+255),b
 13997  013FCC  6B63               	clrf	(??_icmp_parseHeader+3)& (0+255),b
 13998  013FCE  6B64               	clrf	(??_icmp_parseHeader+4)& (0+255),b
 13999  013FD0  0060  F184  F064   	movff	??_icmp_parseHeader+1,??_icmp_parseHeader+4
 14000  013FD6  6B63               	clrf	(??_icmp_parseHeader+3)& (0+255),b
 14001  013FD8  6B62               	clrf	(??_icmp_parseHeader+2)& (0+255),b
 14002  013FDA  6B61               	clrf	(??_icmp_parseHeader+1)& (0+255),b
 14003  013FDC  EE20 F004          	lfsr	2,4
 14004  013FE0  5033               	movf	icmp_parseHeader@icmpHeader,w,c
 14005  013FE2  26D9               	addwf	16345,f,c
 14006  013FE4  5034               	movf	icmp_parseHeader@icmpHeader+1,w,c
 14007  013FE6  22DA               	addwfc	16346,f,c
 14008  013FE8  0060  F187  FFDE   	movff	??_icmp_parseHeader+1,16350
 14009  013FEE  0060  F18B  FFDE   	movff	??_icmp_parseHeader+2,16350
 14010  013FF4  0060  F18F  FFDE   	movff	??_icmp_parseHeader+3,16350
 14011  013FFA  0060  F193  FFDE   	movff	??_icmp_parseHeader+4,16350
 14012                           
 14013                           ;icmp.c: 95: icmpHeader->headerData |= ((uint32_t) ethernetController_streamFromRXBuffer
      +                          (1, ipPayload.start) << 16);
 14014  014000  0060  F0A8  F025   	movff	icmp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 14015  014006  0060  F0AC  F026   	movff	icmp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 14016  01400C  0E01               	movlw	1
 14017  01400E  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 14018  014012  0100               	movlb	0	; () banked
 14019  014014  6F60               	movwf	??_icmp_parseHeader& (0+255),b
 14020  014016  0060  F180  F061   	movff	??_icmp_parseHeader,??_icmp_parseHeader+1
 14021  01401C  6B62               	clrf	(??_icmp_parseHeader+2)& (0+255),b
 14022  01401E  6B63               	clrf	(??_icmp_parseHeader+3)& (0+255),b
 14023  014020  6B64               	clrf	(??_icmp_parseHeader+4)& (0+255),b
 14024  014022  0060  F188  F064   	movff	??_icmp_parseHeader+2,??_icmp_parseHeader+4
 14025  014028  0060  F184  F063   	movff	??_icmp_parseHeader+1,??_icmp_parseHeader+3
 14026  01402E  6B62               	clrf	(??_icmp_parseHeader+2)& (0+255),b
 14027  014030  6B61               	clrf	(??_icmp_parseHeader+1)& (0+255),b
 14028  014032  EE20 F004          	lfsr	2,4
 14029  014036  5033               	movf	icmp_parseHeader@icmpHeader,w,c
 14030  014038  26D9               	addwf	16345,f,c
 14031  01403A  5034               	movf	icmp_parseHeader@icmpHeader+1,w,c
 14032  01403C  22DA               	addwfc	16346,f,c
 14033  01403E  5161               	movf	(??_icmp_parseHeader+1)& (0+255),w,b
 14034  014040  12DE               	iorwf	16350,f,c
 14035  014042  5162               	movf	(??_icmp_parseHeader+2)& (0+255),w,b
 14036  014044  12DE               	iorwf	16350,f,c
 14037  014046  5163               	movf	(??_icmp_parseHeader+3)& (0+255),w,b
 14038  014048  12DE               	iorwf	16350,f,c
 14039  01404A  5164               	movf	(??_icmp_parseHeader+4)& (0+255),w,b
 14040  01404C  12DE               	iorwf	16350,f,c
 14041                           
 14042                           ;icmp.c: 96: icmpHeader->headerData |= ((uint32_t) ethernetController_streamFromRXBuffer
      +                          (1, ipPayload.start) << 8);
 14043  01404E  0060  F0A8  F025   	movff	icmp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 14044  014054  0060  F0AC  F026   	movff	icmp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 14045  01405A  0E01               	movlw	1
 14046  01405C  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 14047  014060  0100               	movlb	0	; () banked
 14048  014062  6F60               	movwf	??_icmp_parseHeader& (0+255),b
 14049  014064  0060  F180  F061   	movff	??_icmp_parseHeader,??_icmp_parseHeader+1
 14050  01406A  6B62               	clrf	(??_icmp_parseHeader+2)& (0+255),b
 14051  01406C  6B63               	clrf	(??_icmp_parseHeader+3)& (0+255),b
 14052  01406E  6B64               	clrf	(??_icmp_parseHeader+4)& (0+255),b
 14053  014070  0060  F18C  F064   	movff	??_icmp_parseHeader+3,??_icmp_parseHeader+4
 14054  014076  0060  F188  F063   	movff	??_icmp_parseHeader+2,??_icmp_parseHeader+3
 14055  01407C  0060  F184  F062   	movff	??_icmp_parseHeader+1,??_icmp_parseHeader+2
 14056  014082  6B61               	clrf	(??_icmp_parseHeader+1)& (0+255),b
 14057  014084  EE20 F004          	lfsr	2,4
 14058  014088  5033               	movf	icmp_parseHeader@icmpHeader,w,c
 14059  01408A  26D9               	addwf	16345,f,c
 14060  01408C  5034               	movf	icmp_parseHeader@icmpHeader+1,w,c
 14061  01408E  22DA               	addwfc	16346,f,c
 14062  014090  5161               	movf	(??_icmp_parseHeader+1)& (0+255),w,b
 14063  014092  12DE               	iorwf	16350,f,c
 14064  014094  5162               	movf	(??_icmp_parseHeader+2)& (0+255),w,b
 14065  014096  12DE               	iorwf	16350,f,c
 14066  014098  5163               	movf	(??_icmp_parseHeader+3)& (0+255),w,b
 14067  01409A  12DE               	iorwf	16350,f,c
 14068  01409C  5164               	movf	(??_icmp_parseHeader+4)& (0+255),w,b
 14069  01409E  12DE               	iorwf	16350,f,c
 14070                           
 14071                           ;icmp.c: 97: icmpHeader->headerData |= ethernetController_streamFromRXBuffer(1, ipPayloa
      +                          d.start);
 14072  0140A0  0060  F0A8  F025   	movff	icmp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 14073  0140A6  0060  F0AC  F026   	movff	icmp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 14074  0140AC  0E01               	movlw	1
 14075  0140AE  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 14076  0140B2  0100               	movlb	0	; () banked
 14077  0140B4  6F60               	movwf	??_icmp_parseHeader& (0+255),b
 14078  0140B6  0060  F180  F061   	movff	??_icmp_parseHeader,??_icmp_parseHeader+1
 14079  0140BC  6B62               	clrf	(??_icmp_parseHeader+2)& (0+255),b
 14080  0140BE  6B63               	clrf	(??_icmp_parseHeader+3)& (0+255),b
 14081  0140C0  6B64               	clrf	(??_icmp_parseHeader+4)& (0+255),b
 14082  0140C2  EE20 F004          	lfsr	2,4
 14083  0140C6  5033               	movf	icmp_parseHeader@icmpHeader,w,c
 14084  0140C8  26D9               	addwf	16345,f,c
 14085  0140CA  5034               	movf	icmp_parseHeader@icmpHeader+1,w,c
 14086  0140CC  22DA               	addwfc	16346,f,c
 14087  0140CE  5161               	movf	(??_icmp_parseHeader+1)& (0+255),w,b
 14088  0140D0  12DE               	iorwf	16350,f,c
 14089  0140D2  5162               	movf	(??_icmp_parseHeader+2)& (0+255),w,b
 14090  0140D4  12DE               	iorwf	16350,f,c
 14091  0140D6  5163               	movf	(??_icmp_parseHeader+3)& (0+255),w,b
 14092  0140D8  12DE               	iorwf	16350,f,c
 14093  0140DA  5164               	movf	(??_icmp_parseHeader+4)& (0+255),w,b
 14094  0140DC  12DE               	iorwf	16350,f,c
 14095                           
 14096                           ;icmp.c: 99: ethernetController_streamFromRXBuffer(2, ipPayload.start);
 14097  0140DE  0060  F0A8  F025   	movff	icmp_parseHeader@ipPayload,ethernetController_streamFromRXBuffer@startAddress
 14098  0140E4  0060  F0AC  F026   	movff	icmp_parseHeader@ipPayload+1,ethernetController_streamFromRXBuffer@startAddress+1
 14099  0140EA  0E02               	movlw	2
 14100  0140EC  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 14101  0140F0  0012               	return		;funcret
 14102  0140F2                     __end_of_icmp_parseHeader:
 14103                           	opt stack 0
 14104                           
 14105 ;; *************** function _ethernetController_updateNextPacketPointer *****************
 14106 ;; Defined at:
 14107 ;;		line 334 in file "src/enc424j600/ENC424J600.c"
 14108 ;; Parameters:    Size  Location     Type
 14109 ;;		None
 14110 ;; Auto vars:     Size  Location     Type
 14111 ;;  nextPktPoint    2   42[COMRAM] unsigned int 
 14112 ;;  newPointerH     1   46[COMRAM] unsigned char 
 14113 ;;  newPointerL     1   45[COMRAM] unsigned char 
 14114 ;;  opcode          1   44[COMRAM] unsigned char 
 14115 ;; Return value:  Size  Location     Type
 14116 ;;                  1    wreg      void 
 14117 ;; Registers used:
 14118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14119 ;; Tracked objects:
 14120 ;;		On entry : 0/0
 14121 ;;		On exit  : 0/0
 14122 ;;		Unchanged: 0/0
 14123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14125 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14126 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14127 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14128 ;;Total ram usage:       11 bytes
 14129 ;; Hardware stack levels used:    1
 14130 ;; Hardware stack levels required when called:    7
 14131 ;; This function calls:
 14132 ;;		_enc424j600_getNextPacketPointer
 14133 ;;		_enc424j600_readSPI
 14134 ;;		_enc424j600_setERXDATAReadPointer
 14135 ;;		_enc424j600_setNextPacketPointer
 14136 ;;		_enc424j600_writeSPI
 14137 ;; This function is called by:
 14138 ;;		_ethernet_rxGetNewFrame
 14139 ;; This function uses a non-reentrant model
 14140 ;;
 14141                           
 14142                           	psect	text45
 14143  01666C                     __ptext45:
 14144                           	opt stack 0
 14145  01666C                     _ethernetController_updateNextPacketPointer:
 14146                           	opt stack 21
 14147                           
 14148                           ;ENC424J600.c: 335: uint16_t nextPktPointer;
 14149                           ;ENC424J600.c: 336: uint8_t opcode;
 14150                           ;ENC424J600.c: 337: uint8_t newPointerL, newPointerH;
 14151                           ;ENC424J600.c: 338: nextPktPointer = enc424j600_getNextPacketPointer();
 14152                           
 14153                           ;incstack = 0
 14154  01666C  EC96  F0BB         	call	_enc424j600_getNextPacketPointer	;wreg free
 14155  016670  0060  F058  F02B   	movff	?_enc424j600_getNextPacketPointer,ethernetController_updateNextPacketPointer@next
      +                          PktPointer
 14156  016676  0060  F05C  F02C   	movff	?_enc424j600_getNextPacketPointer+1,ethernetController_updateNextPacketPointer@ne
      +                          xtPktPointer+1
 14157                           
 14158                           ;ENC424J600.c: 339: enc424j600_setERXDATAReadPointer(nextPktPointer);
 14159  01667C  0060  F0AC  F020   	movff	ethernetController_updateNextPacketPointer@nextPktPointer,enc424j600_setERXDATARe
      +                          adPointer@addr
 14160  016682  0060  F0B0  F021   	movff	ethernetController_updateNextPacketPointer@nextPktPointer+1,enc424j600_setERXDATA
      +                          ReadPointer@addr+1
 14161  016688  EC87  F0B8         	call	_enc424j600_setERXDATAReadPointer	;wreg free
 14162                           
 14163                           ;ENC424J600.c: 340: opcode = 0x2C;
 14164  01668C  0E2C               	movlw	44
 14165  01668E  6E2D               	movwf	ethernetController_updateNextPacketPointer@opcode,c
 14166                           
 14167                           ;ENC424J600.c: 341: PORTBbits.RB4=0;
 14168  016690  013F               	movlb	63	; () banked
 14169  016692  99CB               	bcf	203,4,b	;volatile
 14170                           
 14171                           ; BSR set to: 63
 14172                           ;ENC424J600.c: 342: enc424j600_writeSPI(&opcode);
 14173  016694  0E2D               	movlw	low ethernetController_updateNextPacketPointer@opcode
 14174  016696  6E16               	movwf	enc424j600_writeSPI@data,c
 14175  016698  0E00               	movlw	high ethernetController_updateNextPacketPointer@opcode
 14176  01669A  6E17               	movwf	enc424j600_writeSPI@data+1,c
 14177  01669C  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 14178                           
 14179                           ;ENC424J600.c: 343: enc424j600_readSPI(&newPointerL);
 14180  0166A0  0E2E               	movlw	low ethernetController_updateNextPacketPointer@newPointerL
 14181  0166A2  6E16               	movwf	enc424j600_readSPI@data,c
 14182  0166A4  0E00               	movlw	high ethernetController_updateNextPacketPointer@newPointerL
 14183  0166A6  6E17               	movwf	enc424j600_readSPI@data+1,c
 14184  0166A8  ECB3  F0B3         	call	_enc424j600_readSPI	;wreg free
 14185                           
 14186                           ;ENC424J600.c: 344: enc424j600_readSPI(&newPointerH);
 14187  0166AC  0E2F               	movlw	low ethernetController_updateNextPacketPointer@newPointerH
 14188  0166AE  6E16               	movwf	enc424j600_readSPI@data,c
 14189  0166B0  0E00               	movlw	high ethernetController_updateNextPacketPointer@newPointerH
 14190  0166B2  6E17               	movwf	enc424j600_readSPI@data+1,c
 14191  0166B4  ECB3  F0B3         	call	_enc424j600_readSPI	;wreg free
 14192                           
 14193                           ;ENC424J600.c: 345: PORTBbits.RB4=1;
 14194  0166B8  013F               	movlb	63	; () banked
 14195  0166BA  89CB               	bsf	203,4,b	;volatile
 14196                           
 14197                           ; BSR set to: 63
 14198                           ;ENC424J600.c: 347: enc424j600_setNextPacketPointer((uint16_t) ((newPointerL & (unsigned
      +                          ) 0x00ff) | ((unsigned) (newPointerH << 8)&(unsigned) 0xff00)));
 14199  0166BC  0E00               	movlw	0
 14200  0166BE  6E25               	movwf	??_ethernetController_updateNextPacketPointer& (0+255),c
 14201  0166C0  0EFF               	movlw	255
 14202  0166C2  6E26               	movwf	(??_ethernetController_updateNextPacketPointer+1)& (0+255),c
 14203  0166C4  502F               	movf	ethernetController_updateNextPacketPointer@newPointerH,w,c
 14204  0166C6  6E28               	movwf	(??_ethernetController_updateNextPacketPointer+3)& (0+255),c
 14205  0166C8  6A27               	clrf	(??_ethernetController_updateNextPacketPointer+2)& (0+255),c
 14206  0166CA  5025               	movf	??_ethernetController_updateNextPacketPointer,w,c
 14207  0166CC  1627               	andwf	??_ethernetController_updateNextPacketPointer+2,f,c
 14208  0166CE  5026               	movf	??_ethernetController_updateNextPacketPointer+1,w,c
 14209  0166D0  1628               	andwf	??_ethernetController_updateNextPacketPointer+3,f,c
 14210  0166D2  502E               	movf	ethernetController_updateNextPacketPointer@newPointerL,w,c
 14211  0166D4  6E29               	movwf	(??_ethernetController_updateNextPacketPointer+4)& (0+255),c
 14212  0166D6  6A2A               	clrf	(??_ethernetController_updateNextPacketPointer+5)& (0+255),c
 14213  0166D8  5027               	movf	??_ethernetController_updateNextPacketPointer+2,w,c
 14214  0166DA  1029               	iorwf	??_ethernetController_updateNextPacketPointer+4,w,c
 14215  0166DC  6E16               	movwf	enc424j600_setNextPacketPointer@ptr,c
 14216  0166DE  5028               	movf	??_ethernetController_updateNextPacketPointer+3,w,c
 14217  0166E0  102A               	iorwf	??_ethernetController_updateNextPacketPointer+5,w,c
 14218  0166E2  6E17               	movwf	enc424j600_setNextPacketPointer@ptr+1,c
 14219  0166E4  EC9D  F0BB         	call	_enc424j600_setNextPacketPointer	;wreg free
 14220  0166E8  0012               	return		;funcret
 14221  0166EA                     __end_of_ethernetController_updateNextPacketPointer:
 14222                           	opt stack 0
 14223                           
 14224 ;; *************** function _ethernetController_getRSV *****************
 14225 ;; Defined at:
 14226 ;;		line 299 in file "src/enc424j600/ENC424J600.c"
 14227 ;; Parameters:    Size  Location     Type
 14228 ;;  address         2   38[COMRAM] unsigned int 
 14229 ;; Auto vars:     Size  Location     Type
 14230 ;;  i               1   44[COMRAM] unsigned char 
 14231 ;;  opcode          1   43[COMRAM] unsigned char 
 14232 ;; Return value:  Size  Location     Type
 14233 ;;                  5   38[COMRAM] struct RSV
 14234 ;; Registers used:
 14235 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14236 ;; Tracked objects:
 14237 ;;		On entry : 0/0
 14238 ;;		On exit  : 0/0
 14239 ;;		Unchanged: 0/0
 14240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14241 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14242 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14244 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14245 ;;Total ram usage:        7 bytes
 14246 ;; Hardware stack levels used:    1
 14247 ;; Hardware stack levels required when called:    7
 14248 ;; This function calls:
 14249 ;;		_enc424j600_readSPI
 14250 ;;		_enc424j600_setERXDATAReadPointer
 14251 ;;		_enc424j600_updateReceiveStatusVector
 14252 ;;		_enc424j600_writeSPI
 14253 ;; This function is called by:
 14254 ;;		_ethernet_rxGetNewFrame
 14255 ;; This function uses a non-reentrant model
 14256 ;;
 14257                           
 14258                           	psect	text46
 14259  0167E0                     __ptext46:
 14260                           	opt stack 0
 14261  0167E0                     _ethernetController_getRSV:
 14262                           	opt stack 21
 14263                           
 14264                           ;ENC424J600.c: 300: uint8_t static temp[6];
 14265                           ;ENC424J600.c: 301: enc424j600_setERXDATAReadPointer(address + 2);
 14266                           
 14267                           ;incstack = 0
 14268  0167E0  0E02               	movlw	2
 14269  0167E2  2427               	addwf	ethernetController_getRSV@address,w,c
 14270  0167E4  6E20               	movwf	enc424j600_setERXDATAReadPointer@addr,c
 14271  0167E6  0E00               	movlw	0
 14272  0167E8  2028               	addwfc	ethernetController_getRSV@address+1,w,c
 14273  0167EA  6E21               	movwf	enc424j600_setERXDATAReadPointer@addr+1,c
 14274  0167EC  EC87  F0B8         	call	_enc424j600_setERXDATAReadPointer	;wreg free
 14275                           
 14276                           ;ENC424J600.c: 302: uint8_t opcode = 0x2C;
 14277  0167F0  0E2C               	movlw	44
 14278  0167F2  6E2C               	movwf	ethernetController_getRSV@opcode,c
 14279                           
 14280                           ;ENC424J600.c: 303: PORTBbits.RB4=0;
 14281  0167F4  013F               	movlb	63	; () banked
 14282  0167F6  99CB               	bcf	203,4,b	;volatile
 14283                           
 14284                           ; BSR set to: 63
 14285                           ;ENC424J600.c: 304: enc424j600_writeSPI(&opcode);
 14286  0167F8  0E2C               	movlw	low ethernetController_getRSV@opcode
 14287  0167FA  6E16               	movwf	enc424j600_writeSPI@data,c
 14288  0167FC  0E00               	movlw	high ethernetController_getRSV@opcode
 14289  0167FE  6E17               	movwf	enc424j600_writeSPI@data+1,c
 14290  016800  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 14291                           
 14292                           ;ENC424J600.c: 305: for (uint8_t i = 0; i < 6; i++) {
 14293  016804  0E00               	movlw	0
 14294  016806  6E2D               	movwf	ethernetController_getRSV@i,c
 14295  016808                     l11402:
 14296  016808  0E05               	movlw	5
 14297  01680A  642D               	cpfsgt	ethernetController_getRSV@i,c
 14298  01680C  D001               	goto	l166
 14299  01680E  D00C               	goto	u14090
 14300  016810                     l166:
 14301                           
 14302                           ;ENC424J600.c: 306: enc424j600_readSPI(&temp[i]);
 14303  016810  502D               	movf	ethernetController_getRSV@i,w,c
 14304  016812  0D01               	mullw	1
 14305  016814  0EC6               	movlw	low ethernetController_getRSV@temp
 14306  016816  24F3               	addwf	16371,w,c
 14307  016818  6E16               	movwf	enc424j600_readSPI@data,c
 14308  01681A  0E02               	movlw	high ethernetController_getRSV@temp
 14309  01681C  20F4               	addwfc	16372,w,c
 14310  01681E  6E17               	movwf	enc424j600_readSPI@data+1,c
 14311  016820  ECB3  F0B3         	call	_enc424j600_readSPI	;wreg free
 14312  016824  2A2D               	incf	ethernetController_getRSV@i,f,c
 14313  016826  D7F0               	goto	l11402
 14314  016828                     u14090:
 14315                           
 14316                           ;ENC424J600.c: 307: }
 14317                           ;ENC424J600.c: 308: PORTBbits.RB4=1;
 14318  016828  013F               	movlb	63	; () banked
 14319  01682A  89CB               	bsf	203,4,b	;volatile
 14320                           
 14321                           ; BSR set to: 63
 14322                           ;ENC424J600.c: 309: return enc424j600_updateReceiveStatusVector(&temp[0]);
 14323  01682C  0EC6               	movlw	low ethernetController_getRSV@temp
 14324  01682E  6E16               	movwf	enc424j600_updateReceiveStatusVector@rsv,c
 14325  016830  0E02               	movlw	high ethernetController_getRSV@temp
 14326  016832  6E17               	movwf	enc424j600_updateReceiveStatusVector@rsv+1,c
 14327  016834  EC29  F095         	call	_enc424j600_updateReceiveStatusVector	;wreg free
 14328  016838  006F FFA7 FFD9     	movff	16361,16345
 14329  01683E  006F FFAB FFDA     	movff	16362,16346
 14330  016844  EE00  F027         	lfsr	0,?_ethernetController_getRSV
 14331  016848  0E04               	movlw	4
 14332  01684A                     u14101:
 14333  01684A  006F FF6F FFEB     	movff	16347,16363
 14334  016850  06E8               	decf	16360,f,c
 14335  016852  E2FB               	bc	u14101
 14336  016854  0012               	return	
 14337  016856                     __end_of_ethernetController_getRSV:
 14338                           	opt stack 0
 14339                           
 14340 ;; *************** function _enc424j600_updateReceiveStatusVector *****************
 14341 ;; Defined at:
 14342 ;;		line 737 in file "src/enc424j600/ENC424J600.c"
 14343 ;; Parameters:    Size  Location     Type
 14344 ;;  rsv             2   21[COMRAM] PTR unsigned char 
 14345 ;;		 -> ethernetController_getRSV@temp(6), 
 14346 ;; Auto vars:     Size  Location     Type
 14347 ;;  receiveStatu    5   33[COMRAM] struct RSV
 14348 ;; Return value:  Size  Location     Type
 14349 ;;                  5   21[COMRAM] struct RSV
 14350 ;; Registers used:
 14351 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 14352 ;; Tracked objects:
 14353 ;;		On entry : 0/0
 14354 ;;		On exit  : 0/0
 14355 ;;		Unchanged: 0/0
 14356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14357 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14358 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14359 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14360 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14361 ;;Total ram usage:       17 bytes
 14362 ;; Hardware stack levels used:    1
 14363 ;; Hardware stack levels required when called:    4
 14364 ;; This function calls:
 14365 ;;		Nothing
 14366 ;; This function is called by:
 14367 ;;		_ethernetController_getRSV
 14368 ;; This function uses a non-reentrant model
 14369 ;;
 14370                           
 14371                           	psect	text47
 14372  012A52                     __ptext47:
 14373                           	opt stack 0
 14374  012A52                     _enc424j600_updateReceiveStatusVector:
 14375                           	opt stack 23
 14376                           
 14377                           ;ENC424J600.c: 738: RSV_t receiveStatusVector;
 14378                           ;ENC424J600.c: 741: receiveStatusVector.length = (uint16_t) ((*(rsv + 0)) | (uint16_t) (
      +                          ((*(rsv + 1)) << 8)&0xff00));
 14379                           
 14380                           ;incstack = 0
 14381  012A52  0E00               	movlw	0
 14382  012A54  6E1B               	movwf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14383  012A56  0EFF               	movlw	255
 14384  012A58  6E1C               	movwf	(??_enc424j600_updateReceiveStatusVector+1)& (0+255),c
 14385  012A5A  EE20 F001          	lfsr	2,1
 14386  012A5E  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14387  012A60  26D9               	addwf	16345,f,c
 14388  012A62  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14389  012A64  22DA               	addwfc	16346,f,c
 14390  012A66  50DF               	movf	16351,w,c
 14391  012A68  6E1D               	movwf	(??_enc424j600_updateReceiveStatusVector+2)& (0+255),c
 14392  012A6A  501D               	movf	??_enc424j600_updateReceiveStatusVector+2,w,c
 14393  012A6C  6E1F               	movwf	(??_enc424j600_updateReceiveStatusVector+4)& (0+255),c
 14394  012A6E  6A1E               	clrf	(??_enc424j600_updateReceiveStatusVector+3)& (0+255),c
 14395  012A70  501B               	movf	??_enc424j600_updateReceiveStatusVector,w,c
 14396  012A72  161E               	andwf	??_enc424j600_updateReceiveStatusVector+3,f,c
 14397  012A74  501C               	movf	??_enc424j600_updateReceiveStatusVector+1,w,c
 14398  012A76  161F               	andwf	??_enc424j600_updateReceiveStatusVector+4,f,c
 14399  012A78  0060  F05B  FFD9   	movff	enc424j600_updateReceiveStatusVector@rsv,16345
 14400  012A7E  0060  F05F  FFDA   	movff	enc424j600_updateReceiveStatusVector@rsv+1,16346
 14401  012A84  50DF               	movf	16351,w,c
 14402  012A86  6E20               	movwf	(??_enc424j600_updateReceiveStatusVector+5)& (0+255),c
 14403  012A88  6A21               	clrf	(??_enc424j600_updateReceiveStatusVector+6)& (0+255),c
 14404  012A8A  501E               	movf	??_enc424j600_updateReceiveStatusVector+3,w,c
 14405  012A8C  1020               	iorwf	??_enc424j600_updateReceiveStatusVector+5,w,c
 14406  012A8E  6E22               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector,c
 14407  012A90  501F               	movf	??_enc424j600_updateReceiveStatusVector+4,w,c
 14408  012A92  1021               	iorwf	??_enc424j600_updateReceiveStatusVector+6,w,c
 14409  012A94  6E23               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+1,c
 14410                           
 14411                           ;ENC424J600.c: 743: receiveStatusVector.packetPreviouslyIgnored = (uint8_t) (*(rsv + 2) 
      +                          & 0b00000001) != 0 ? 1u : 0u;
 14412  012A96  EE20 F002          	lfsr	2,2
 14413  012A9A  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14414  012A9C  26D9               	addwf	16345,f,c
 14415  012A9E  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14416  012AA0  22DA               	addwfc	16346,f,c
 14417  012AA2  A0DF               	btfss	16351,0,c
 14418  012AA4  D003               	goto	u12950
 14419  012AA6  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14420  012AA8  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14421  012AAA  D001               	goto	u12968
 14422  012AAC                     u12950:
 14423  012AAC  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14424  012AAE                     u12968:
 14425  012AAE  5024               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,w,c
 14426  012AB0  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14427  012AB2  0BFE               	andlw	-2
 14428  012AB4  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14429  012AB6  6E24               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,c
 14430                           
 14431                           ;ENC424J600.c: 744: receiveStatusVector.carrierEventPreviouslySeen = (uint8_t) (*(rsv + 
      +                          2) & 0b00000100) != 0 ? 1u : 0u;
 14432  012AB8  EE20 F002          	lfsr	2,2
 14433  012ABC  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14434  012ABE  26D9               	addwf	16345,f,c
 14435  012AC0  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14436  012AC2  22DA               	addwfc	16346,f,c
 14437  012AC4  A4DF               	btfss	16351,2,c
 14438  012AC6  D003               	goto	u12970
 14439  012AC8  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14440  012ACA  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14441  012ACC  D001               	goto	u12988
 14442  012ACE                     u12970:
 14443  012ACE  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14444  012AD0                     u12988:
 14445  012AD0  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14446  012AD2  5024               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,w,c
 14447  012AD4  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14448  012AD6  0BFD               	andlw	-3
 14449  012AD8  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14450  012ADA  6E24               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,c
 14451                           
 14452                           ;ENC424J600.c: 745: receiveStatusVector.CRCError = (uint8_t) (*(rsv + 2) & 0b00010000) !
      +                          = 0 ? 1u : 0u;
 14453  012ADC  EE20 F002          	lfsr	2,2
 14454  012AE0  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14455  012AE2  26D9               	addwf	16345,f,c
 14456  012AE4  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14457  012AE6  22DA               	addwfc	16346,f,c
 14458  012AE8  A8DF               	btfss	16351,4,c
 14459  012AEA  D003               	goto	u12990
 14460  012AEC  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14461  012AEE  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14462  012AF0  D001               	goto	u13008
 14463  012AF2                     u12990:
 14464  012AF2  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14465  012AF4                     u13008:
 14466  012AF4  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14467  012AF6  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14468  012AF8  5024               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,w,c
 14469  012AFA  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14470  012AFC  0BFB               	andlw	-5
 14471  012AFE  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14472  012B00  6E24               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,c
 14473                           
 14474                           ;ENC424J600.c: 746: receiveStatusVector.lengthCheckError = (uint8_t) (*(rsv + 2) & 0b001
      +                          00000) != 0 ? 1u : 0u;
 14475  012B02  EE20 F002          	lfsr	2,2
 14476  012B06  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14477  012B08  26D9               	addwf	16345,f,c
 14478  012B0A  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14479  012B0C  22DA               	addwfc	16346,f,c
 14480  012B0E  AADF               	btfss	16351,5,c
 14481  012B10  D003               	goto	u13010
 14482  012B12  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14483  012B14  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14484  012B16  D001               	goto	u13028
 14485  012B18                     u13010:
 14486  012B18  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14487  012B1A                     u13028:
 14488  012B1A  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14489  012B1C  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14490  012B1E  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14491  012B20  5024               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,w,c
 14492  012B22  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14493  012B24  0BF7               	andlw	-9
 14494  012B26  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14495  012B28  6E24               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,c
 14496                           
 14497                           ;ENC424J600.c: 747: receiveStatusVector.lengthOutOfRange = (uint8_t) (*(rsv + 2) & 0b010
      +                          00000) != 0 ? 1u : 0u;
 14498  012B2A  EE20 F002          	lfsr	2,2
 14499  012B2E  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14500  012B30  26D9               	addwf	16345,f,c
 14501  012B32  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14502  012B34  22DA               	addwfc	16346,f,c
 14503  012B36  ACDF               	btfss	16351,6,c
 14504  012B38  D003               	goto	u13030
 14505  012B3A  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14506  012B3C  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14507  012B3E  D001               	goto	u13048
 14508  012B40                     u13030:
 14509  012B40  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14510  012B42                     u13048:
 14511  012B42  3A1B               	swapf	??_enc424j600_updateReceiveStatusVector,f,c
 14512  012B44  5024               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,w,c
 14513  012B46  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14514  012B48  0BEF               	andlw	-17
 14515  012B4A  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14516  012B4C  6E24               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,c
 14517                           
 14518                           ;ENC424J600.c: 748: receiveStatusVector.receivedOk = (uint8_t) (*(rsv + 2) & 0b10000000)
      +                           != 0 ? 1u : 0u;
 14519  012B4E  EE20 F002          	lfsr	2,2
 14520  012B52  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14521  012B54  26D9               	addwf	16345,f,c
 14522  012B56  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14523  012B58  22DA               	addwfc	16346,f,c
 14524  012B5A  AEDF               	btfss	16351,7,c
 14525  012B5C  D003               	goto	u13050
 14526  012B5E  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14527  012B60  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14528  012B62  D001               	goto	u13068
 14529  012B64                     u13050:
 14530  012B64  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14531  012B66                     u13068:
 14532  012B66  3A1B               	swapf	??_enc424j600_updateReceiveStatusVector,f,c
 14533  012B68  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14534  012B6A  5024               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,w,c
 14535  012B6C  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14536  012B6E  0BDF               	andlw	-33
 14537  012B70  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14538  012B72  6E24               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,c
 14539                           
 14540                           ;ENC424J600.c: 750: receiveStatusVector.multicast = (uint8_t) (*(rsv + 3) & 0b00000001) 
      +                          != 0 ? 1u : 0u;
 14541  012B74  EE20 F003          	lfsr	2,3
 14542  012B78  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14543  012B7A  26D9               	addwf	16345,f,c
 14544  012B7C  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14545  012B7E  22DA               	addwfc	16346,f,c
 14546  012B80  A0DF               	btfss	16351,0,c
 14547  012B82  D003               	goto	u13070
 14548  012B84  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14549  012B86  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14550  012B88  D001               	goto	u13088
 14551  012B8A                     u13070:
 14552  012B8A  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14553  012B8C                     u13088:
 14554  012B8C  3A1B               	swapf	??_enc424j600_updateReceiveStatusVector,f,c
 14555  012B8E  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14556  012B90  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14557  012B92  5024               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,w,c
 14558  012B94  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14559  012B96  0BBF               	andlw	-65
 14560  012B98  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14561  012B9A  6E24               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,c
 14562                           
 14563                           ;ENC424J600.c: 751: receiveStatusVector.broadcast = (uint8_t) (*(rsv + 3) & 0b00000010) 
      +                          != 0 ? 1u : 0u;
 14564  012B9C  EE20 F003          	lfsr	2,3
 14565  012BA0  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14566  012BA2  26D9               	addwf	16345,f,c
 14567  012BA4  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14568  012BA6  22DA               	addwfc	16346,f,c
 14569  012BA8  A2DF               	btfss	16351,1,c
 14570  012BAA  D003               	goto	u13090
 14571  012BAC  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14572  012BAE  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14573  012BB0  D001               	goto	u13108
 14574  012BB2                     u13090:
 14575  012BB2  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14576  012BB4                     u13108:
 14577  012BB4  321B               	rrcf	??_enc424j600_updateReceiveStatusVector,f,c
 14578  012BB6  321B               	rrcf	??_enc424j600_updateReceiveStatusVector,f,c
 14579  012BB8  5024               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,w,c
 14580  012BBA  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14581  012BBC  0B7F               	andlw	-129
 14582  012BBE  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14583  012BC0  6E24               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+2,c
 14584                           
 14585                           ;ENC424J600.c: 752: receiveStatusVector.controlFrame = (uint8_t) (*(rsv + 3) & 0b0000100
      +                          0) != 0 ? 1u : 0u;
 14586  012BC2  EE20 F003          	lfsr	2,3
 14587  012BC6  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14588  012BC8  26D9               	addwf	16345,f,c
 14589  012BCA  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14590  012BCC  22DA               	addwfc	16346,f,c
 14591  012BCE  A6DF               	btfss	16351,3,c
 14592  012BD0  D003               	goto	u13110
 14593  012BD2  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14594  012BD4  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14595  012BD6  D001               	goto	u13128
 14596  012BD8                     u13110:
 14597  012BD8  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14598  012BDA                     u13128:
 14599  012BDA  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14600  012BDC  5025               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+3,w,c
 14601  012BDE  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14602  012BE0  0BFD               	andlw	-3
 14603  012BE2  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14604  012BE4  6E25               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+3,c
 14605                           
 14606                           ;ENC424J600.c: 753: receiveStatusVector.pauseFrame = (uint8_t) (*(rsv + 3) & 0b00010000)
      +                           != 0 ? 1u : 0u;
 14607  012BE6  EE20 F003          	lfsr	2,3
 14608  012BEA  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14609  012BEC  26D9               	addwf	16345,f,c
 14610  012BEE  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14611  012BF0  22DA               	addwfc	16346,f,c
 14612  012BF2  A8DF               	btfss	16351,4,c
 14613  012BF4  D003               	goto	u13130
 14614  012BF6  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14615  012BF8  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14616  012BFA  D001               	goto	u13148
 14617  012BFC                     u13130:
 14618  012BFC  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14619  012BFE                     u13148:
 14620  012BFE  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14621  012C00  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14622  012C02  5025               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+3,w,c
 14623  012C04  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14624  012C06  0BFB               	andlw	-5
 14625  012C08  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14626  012C0A  6E25               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+3,c
 14627                           
 14628                           ;ENC424J600.c: 754: receiveStatusVector.unknownOpcode = (uint8_t) (*(rsv + 3) & 0b001000
      +                          00) != 0 ? 1u : 0u;
 14629  012C0C  EE20 F003          	lfsr	2,3
 14630  012C10  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14631  012C12  26D9               	addwf	16345,f,c
 14632  012C14  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14633  012C16  22DA               	addwfc	16346,f,c
 14634  012C18  AADF               	btfss	16351,5,c
 14635  012C1A  D003               	goto	u13150
 14636  012C1C  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14637  012C1E  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14638  012C20  D001               	goto	u13168
 14639  012C22                     u13150:
 14640  012C22  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14641  012C24                     u13168:
 14642  012C24  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14643  012C26  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14644  012C28  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14645  012C2A  5025               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+3,w,c
 14646  012C2C  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14647  012C2E  0BF7               	andlw	-9
 14648  012C30  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14649  012C32  6E25               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+3,c
 14650                           
 14651                           ;ENC424J600.c: 755: receiveStatusVector.vlan = (uint8_t) (*(rsv + 3) & 0b01000000) != 0 
      +                          ? 1u : 0u;
 14652  012C34  EE20 F003          	lfsr	2,3
 14653  012C38  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14654  012C3A  26D9               	addwf	16345,f,c
 14655  012C3C  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14656  012C3E  22DA               	addwfc	16346,f,c
 14657  012C40  ACDF               	btfss	16351,6,c
 14658  012C42  D003               	goto	u13170
 14659  012C44  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14660  012C46  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14661  012C48  D001               	goto	u13188
 14662  012C4A                     u13170:
 14663  012C4A  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14664  012C4C                     u13188:
 14665  012C4C  3A1B               	swapf	??_enc424j600_updateReceiveStatusVector,f,c
 14666  012C4E  5025               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+3,w,c
 14667  012C50  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14668  012C52  0BEF               	andlw	-17
 14669  012C54  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14670  012C56  6E25               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+3,c
 14671                           
 14672                           ;ENC424J600.c: 756: receiveStatusVector.runtFilter = (uint8_t) (*(rsv + 3) & 0b10000000)
      +                           != 0 ? 1u : 0u;
 14673  012C58  EE20 F003          	lfsr	2,3
 14674  012C5C  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14675  012C5E  26D9               	addwf	16345,f,c
 14676  012C60  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14677  012C62  22DA               	addwfc	16346,f,c
 14678  012C64  AEDF               	btfss	16351,7,c
 14679  012C66  D003               	goto	u13190
 14680  012C68  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14681  012C6A  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14682  012C6C  D001               	goto	u13208
 14683  012C6E                     u13190:
 14684  012C6E  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14685  012C70                     u13208:
 14686  012C70  3A1B               	swapf	??_enc424j600_updateReceiveStatusVector,f,c
 14687  012C72  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14688  012C74  5025               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+3,w,c
 14689  012C76  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14690  012C78  0BDF               	andlw	-33
 14691  012C7A  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14692  012C7C  6E25               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+3,c
 14693                           
 14694                           ;ENC424J600.c: 758: receiveStatusVector.notMeFilter = (uint8_t) (*(rsv + 4) & 0b00000001
      +                          ) != 0 ? 1u : 0u;
 14695  012C7E  EE20 F004          	lfsr	2,4
 14696  012C82  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14697  012C84  26D9               	addwf	16345,f,c
 14698  012C86  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14699  012C88  22DA               	addwfc	16346,f,c
 14700  012C8A  A0DF               	btfss	16351,0,c
 14701  012C8C  D003               	goto	u13210
 14702  012C8E  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14703  012C90  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14704  012C92  D001               	goto	u13228
 14705  012C94                     u13210:
 14706  012C94  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14707  012C96                     u13228:
 14708  012C96  3A1B               	swapf	??_enc424j600_updateReceiveStatusVector,f,c
 14709  012C98  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14710  012C9A  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14711  012C9C  5025               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+3,w,c
 14712  012C9E  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14713  012CA0  0BBF               	andlw	-65
 14714  012CA2  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14715  012CA4  6E25               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+3,c
 14716                           
 14717                           ;ENC424J600.c: 759: receiveStatusVector.hashFilter = (uint8_t) (*(rsv + 4) & 0b00000010)
      +                           != 0 ? 1u : 0u;
 14718  012CA6  EE20 F004          	lfsr	2,4
 14719  012CAA  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14720  012CAC  26D9               	addwf	16345,f,c
 14721  012CAE  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14722  012CB0  22DA               	addwfc	16346,f,c
 14723  012CB2  A2DF               	btfss	16351,1,c
 14724  012CB4  D003               	goto	u13230
 14725  012CB6  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14726  012CB8  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14727  012CBA  D001               	goto	u13248
 14728  012CBC                     u13230:
 14729  012CBC  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14730  012CBE                     u13248:
 14731  012CBE  321B               	rrcf	??_enc424j600_updateReceiveStatusVector,f,c
 14732  012CC0  321B               	rrcf	??_enc424j600_updateReceiveStatusVector,f,c
 14733  012CC2  5025               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+3,w,c
 14734  012CC4  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14735  012CC6  0B7F               	andlw	-129
 14736  012CC8  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14737  012CCA  6E25               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+3,c
 14738                           
 14739                           ;ENC424J600.c: 760: receiveStatusVector.magicFilter = (uint8_t) (*(rsv + 4) & 0b00000100
      +                          ) != 0 ? 1u : 0u;
 14740  012CCC  EE20 F004          	lfsr	2,4
 14741  012CD0  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14742  012CD2  26D9               	addwf	16345,f,c
 14743  012CD4  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14744  012CD6  22DA               	addwfc	16346,f,c
 14745  012CD8  A4DF               	btfss	16351,2,c
 14746  012CDA  D003               	goto	u13250
 14747  012CDC  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14748  012CDE  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14749  012CE0  D001               	goto	u13268
 14750  012CE2                     u13250:
 14751  012CE2  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14752  012CE4                     u13268:
 14753  012CE4  5026               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+4,w,c
 14754  012CE6  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14755  012CE8  0BFE               	andlw	-2
 14756  012CEA  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14757  012CEC  6E26               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+4,c
 14758                           
 14759                           ;ENC424J600.c: 761: receiveStatusVector.patternMatch = (uint8_t) (*(rsv + 4) & 0b0000100
      +                          0) != 0 ? 1u : 0u;
 14760  012CEE  EE20 F004          	lfsr	2,4
 14761  012CF2  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14762  012CF4  26D9               	addwf	16345,f,c
 14763  012CF6  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14764  012CF8  22DA               	addwfc	16346,f,c
 14765  012CFA  A6DF               	btfss	16351,3,c
 14766  012CFC  D003               	goto	u13270
 14767  012CFE  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14768  012D00  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14769  012D02  D001               	goto	u13288
 14770  012D04                     u13270:
 14771  012D04  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14772  012D06                     u13288:
 14773  012D06  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14774  012D08  5026               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+4,w,c
 14775  012D0A  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14776  012D0C  0BFD               	andlw	-3
 14777  012D0E  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14778  012D10  6E26               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+4,c
 14779                           
 14780                           ;ENC424J600.c: 762: receiveStatusVector.unicast = (uint8_t) (*(rsv + 4) & 0b00010000) !=
      +                           0 ? 1u : 0u;
 14781  012D12  EE20 F004          	lfsr	2,4
 14782  012D16  5016               	movf	enc424j600_updateReceiveStatusVector@rsv,w,c
 14783  012D18  26D9               	addwf	16345,f,c
 14784  012D1A  5017               	movf	enc424j600_updateReceiveStatusVector@rsv+1,w,c
 14785  012D1C  22DA               	addwfc	16346,f,c
 14786  012D1E  A8DF               	btfss	16351,4,c
 14787  012D20  D003               	goto	u13290
 14788  012D22  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14789  012D24  2A1B               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,c
 14790  012D26  D001               	goto	u13308
 14791  012D28                     u13290:
 14792  012D28  6A1B               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),c
 14793  012D2A                     u13308:
 14794  012D2A  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14795  012D2C  461B               	rlncf	??_enc424j600_updateReceiveStatusVector,f,c
 14796  012D2E  5026               	movf	enc424j600_updateReceiveStatusVector@receiveStatusVector+4,w,c
 14797  012D30  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14798  012D32  0BFB               	andlw	-5
 14799  012D34  181B               	xorwf	??_enc424j600_updateReceiveStatusVector,w,c
 14800  012D36  6E26               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector+4,c
 14801                           
 14802                           ;ENC424J600.c: 764: return receiveStatusVector;
 14803  012D38  EE20  F022         	lfsr	2,enc424j600_updateReceiveStatusVector@receiveStatusVector
 14804  012D3C  EE00  F016         	lfsr	0,?_enc424j600_updateReceiveStatusVector
 14805  012D40  0E04               	movlw	4
 14806  012D42                     u13311:
 14807  012D42  006F FF6F FFEB     	movff	16347,16363
 14808  012D48  06E8               	decf	16360,f,c
 14809  012D4A  E2FB               	bc	u13311
 14810  012D4C  0012               	return	
 14811  012D4E                     __end_of_enc424j600_updateReceiveStatusVector:
 14812                           	opt stack 0
 14813                           
 14814 ;; *************** function _ethernetController_getEtherTypeField *****************
 14815 ;; Defined at:
 14816 ;;		line 283 in file "src/enc424j600/ENC424J600.c"
 14817 ;; Parameters:    Size  Location     Type
 14818 ;;  field           9   36[COMRAM] struct memoryField
 14819 ;; Auto vars:     Size  Location     Type
 14820 ;;  ethertype       2   49[COMRAM] enum E18411
 14821 ;;  highByte        1   53[COMRAM] unsigned char 
 14822 ;;  lowByte         1   52[COMRAM] unsigned char 
 14823 ;;  opcode          1   51[COMRAM] unsigned char 
 14824 ;; Return value:  Size  Location     Type
 14825 ;;                  2   36[COMRAM] enum E18411
 14826 ;; Registers used:
 14827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14828 ;; Tracked objects:
 14829 ;;		On entry : 0/0
 14830 ;;		On exit  : 0/0
 14831 ;;		Unchanged: 0/0
 14832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14833 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14834 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14835 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14836 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14837 ;;Total ram usage:       18 bytes
 14838 ;; Hardware stack levels used:    1
 14839 ;; Hardware stack levels required when called:    7
 14840 ;; This function calls:
 14841 ;;		_enc424j600_readSPI
 14842 ;;		_enc424j600_setERXDATAReadPointer
 14843 ;;		_enc424j600_writeSPI
 14844 ;; This function is called by:
 14845 ;;		_ethernet_rxGetNewFrame
 14846 ;; This function uses a non-reentrant model
 14847 ;;
 14848                           
 14849                           	psect	text48
 14850  016A1A                     __ptext48:
 14851                           	opt stack 0
 14852  016A1A                     _ethernetController_getEtherTypeField:
 14853                           	opt stack 21
 14854                           
 14855                           ;ENC424J600.c: 284: etherType_t ethertype = 0x0000;
 14856                           
 14857                           ;incstack = 0
 14858  016A1A  0E00               	movlw	0
 14859  016A1C  6E33               	movwf	ethernetController_getEtherTypeField@ethertype+1,c
 14860  016A1E  0E00               	movlw	0
 14861  016A20  6E32               	movwf	ethernetController_getEtherTypeField@ethertype,c
 14862                           
 14863                           ;ENC424J600.c: 285: enc424j600_setERXDATAReadPointer(field.start + 20);
 14864  016A22  0E14               	movlw	20
 14865  016A24  2425               	addwf	ethernetController_getEtherTypeField@field,w,c
 14866  016A26  6E20               	movwf	enc424j600_setERXDATAReadPointer@addr,c
 14867  016A28  0E00               	movlw	0
 14868  016A2A  2026               	addwfc	ethernetController_getEtherTypeField@field+1,w,c
 14869  016A2C  6E21               	movwf	enc424j600_setERXDATAReadPointer@addr+1,c
 14870  016A2E  EC87  F0B8         	call	_enc424j600_setERXDATAReadPointer	;wreg free
 14871                           
 14872                           ;ENC424J600.c: 286: uint8_t opcode = 0x2C;
 14873  016A32  0E2C               	movlw	44
 14874  016A34  6E34               	movwf	ethernetController_getEtherTypeField@opcode,c
 14875                           
 14876                           ;ENC424J600.c: 287: PORTBbits.RB4=0;
 14877  016A36  013F               	movlb	63	; () banked
 14878  016A38  99CB               	bcf	203,4,b	;volatile
 14879                           
 14880                           ;ENC424J600.c: 288: enc424j600_writeSPI(&opcode);
 14881  016A3A  0E34               	movlw	low ethernetController_getEtherTypeField@opcode
 14882  016A3C  6E16               	movwf	enc424j600_writeSPI@data,c
 14883  016A3E  0E00               	movlw	high ethernetController_getEtherTypeField@opcode
 14884  016A40  6E17               	movwf	enc424j600_writeSPI@data+1,c
 14885  016A42  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 14886                           
 14887                           ;ENC424J600.c: 290: uint8_t lowByte;
 14888                           ;ENC424J600.c: 291: uint8_t highByte;
 14889                           ;ENC424J600.c: 292: enc424j600_readSPI(&highByte);
 14890  016A46  0E36               	movlw	low ethernetController_getEtherTypeField@highByte
 14891  016A48  6E16               	movwf	enc424j600_readSPI@data,c
 14892  016A4A  0E00               	movlw	high ethernetController_getEtherTypeField@highByte
 14893  016A4C  6E17               	movwf	enc424j600_readSPI@data+1,c
 14894  016A4E  ECB3  F0B3         	call	_enc424j600_readSPI	;wreg free
 14895                           
 14896                           ;ENC424J600.c: 293: enc424j600_readSPI(&lowByte);
 14897  016A52  0E35               	movlw	low ethernetController_getEtherTypeField@lowByte
 14898  016A54  6E16               	movwf	enc424j600_readSPI@data,c
 14899  016A56  0E00               	movlw	high ethernetController_getEtherTypeField@lowByte
 14900  016A58  6E17               	movwf	enc424j600_readSPI@data+1,c
 14901  016A5A  ECB3  F0B3         	call	_enc424j600_readSPI	;wreg free
 14902                           
 14903                           ;ENC424J600.c: 294: ethertype = (uint16_t) (lowByte | (highByte << 8));
 14904  016A5E  5036               	movf	ethernetController_getEtherTypeField@highByte,w,c
 14905  016A60  6E2F               	movwf	(??_ethernetController_getEtherTypeField+1)& (0+255),c
 14906  016A62  6A2E               	clrf	??_ethernetController_getEtherTypeField& (0+255),c
 14907  016A64  5035               	movf	ethernetController_getEtherTypeField@lowByte,w,c
 14908  016A66  6E30               	movwf	(??_ethernetController_getEtherTypeField+2)& (0+255),c
 14909  016A68  6A31               	clrf	(??_ethernetController_getEtherTypeField+3)& (0+255),c
 14910  016A6A  502E               	movf	??_ethernetController_getEtherTypeField,w,c
 14911  016A6C  1030               	iorwf	??_ethernetController_getEtherTypeField+2,w,c
 14912  016A6E  6E32               	movwf	ethernetController_getEtherTypeField@ethertype,c
 14913  016A70  502F               	movf	??_ethernetController_getEtherTypeField+1,w,c
 14914  016A72  1031               	iorwf	??_ethernetController_getEtherTypeField+3,w,c
 14915  016A74  6E33               	movwf	ethernetController_getEtherTypeField@ethertype+1,c
 14916                           
 14917                           ;ENC424J600.c: 295: PORTBbits.RB4=1;
 14918  016A76  013F               	movlb	63	; () banked
 14919  016A78  89CB               	bsf	203,4,b	;volatile
 14920                           
 14921                           ; BSR set to: 63
 14922                           ;ENC424J600.c: 296: return ethertype;
 14923  016A7A  0060  F0C8  F025   	movff	ethernetController_getEtherTypeField@ethertype,?_ethernetController_getEtherTypeF
      +                          ield
 14924  016A80  0060  F0CC  F026   	movff	ethernetController_getEtherTypeField@ethertype+1,?_ethernetController_getEtherTyp
      +                          eField+1
 14925  016A86  0012               	return	
 14926  016A88                     __end_of_ethernetController_getEtherTypeField:
 14927                           	opt stack 0
 14928                           
 14929 ;; *************** function _etherTypeToString *****************
 14930 ;; Defined at:
 14931 ;;		line 114 in file "src/system/uart.c"
 14932 ;; Parameters:    Size  Location     Type
 14933 ;;  ethertype       2   21[COMRAM] enum E18488
 14934 ;; Auto vars:     Size  Location     Type
 14935 ;;		None
 14936 ;; Return value:  Size  Location     Type
 14937 ;;                  2   21[COMRAM] PTR unsigned char 
 14938 ;; Registers used:
 14939 ;;		wreg, status,2, status,0
 14940 ;; Tracked objects:
 14941 ;;		On entry : 0/0
 14942 ;;		On exit  : 0/0
 14943 ;;		Unchanged: 0/0
 14944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14948 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14949 ;;Total ram usage:        4 bytes
 14950 ;; Hardware stack levels used:    1
 14951 ;; Hardware stack levels required when called:    4
 14952 ;; This function calls:
 14953 ;;		Nothing
 14954 ;; This function is called by:
 14955 ;;		_ethernet_rxGetNewFrame
 14956 ;; This function uses a non-reentrant model
 14957 ;;
 14958                           
 14959                           	psect	text49
 14960  01700E                     __ptext49:
 14961                           	opt stack 0
 14962  01700E                     _etherTypeToString:
 14963                           	opt stack 24
 14964                           
 14965                           ;uart.c: 115: switch (ethertype) {
 14966                           
 14967                           ; BSR set to: 63
 14968                           ;incstack = 0
 14969  01700E  D00F               	goto	l856
 14970  017010                     
 14971                           ;uart.c: 117: return "IPv4";
 14972  017010  0EC1               	movlw	low STR_73
 14973  017012  6E16               	movwf	?_etherTypeToString,c
 14974  017014  0EFF               	movlw	high STR_73
 14975  017016  6E17               	movwf	?_etherTypeToString+1,c
 14976  017018  0012               	return	
 14977  01701A                     
 14978                           ;uart.c: 119: return "ARP";
 14979  01701A  0EE6               	movlw	low STR_74
 14980  01701C  6E16               	movwf	?_etherTypeToString,c
 14981  01701E  0EFF               	movlw	high STR_74
 14982  017020  6E17               	movwf	?_etherTypeToString+1,c
 14983  017022  0012               	return	
 14984  017024                     
 14985                           ;uart.c: 121: return "Unknown EtherType";
 14986  017024  0E3C               	movlw	low STR_75
 14987  017026  6E16               	movwf	?_etherTypeToString,c
 14988  017028  0EFE               	movlw	high STR_75
 14989  01702A  6E17               	movwf	?_etherTypeToString+1,c
 14990                           
 14991                           ;uart.c: 122: }
 14992  01702C  0012               	return	
 14993  01702E                     l856:
 14994  01702E  0060  F058  F018   	movff	etherTypeToString@ethertype,??_etherTypeToString
 14995  017034  0060  F05C  F019   	movff	etherTypeToString@ethertype+1,??_etherTypeToString+1
 14996                           
 14997                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14998                           ; Switch size 1, requested type "space"
 14999                           ; Number of cases is 1, Range of values is 8 to 8
 15000                           ; switch strategies available:
 15001                           ; Name         Instructions Cycles
 15002                           ; simple_byte            4     3 (average)
 15003                           ;	Chosen strategy is simple_byte
 15004  01703A  5019               	movf	??_etherTypeToString+1,w,c
 15005  01703C  0A08               	xorlw	8	; case 8
 15006  01703E  A4D8               	btfss	16344,2,c
 15007  017040  D7F1               	goto	l860
 15008                           
 15009                           ; Switch size 1, requested type "space"
 15010                           ; Number of cases is 2, Range of values is 0 to 6
 15011                           ; switch strategies available:
 15012                           ; Name         Instructions Cycles
 15013                           ; simple_byte            7     4 (average)
 15014                           ;	Chosen strategy is simple_byte
 15015  017042  5018               	movf	??_etherTypeToString,w,c
 15016  017044  0A00               	xorlw	0	; case 0
 15017  017046  B4D8               	btfsc	16344,2,c
 15018  017048  D7E3               	goto	l857
 15019  01704A  0A06               	xorlw	6	; case 6
 15020  01704C  B4D8               	btfsc	16344,2,c
 15021  01704E  D7E5               	goto	l859
 15022  017050  D7E9               	goto	l860
 15023  017052                     __end_of_etherTypeToString:
 15024                           	opt stack 0
 15025                           
 15026 ;; *************** function _arp_handleNewPacket *****************
 15027 ;; Defined at:
 15028 ;;		line 33 in file "src/stack/protocols/arp.c"
 15029 ;; Parameters:    Size  Location     Type
 15030 ;;  frame           2   56[BANK1 ] PTR struct ethernetFrame
 15031 ;;		 -> stack(124), 
 15032 ;; Auto vars:     Size  Location     Type
 15033 ;;  arp            32   60[BANK1 ] struct arp_message
 15034 ;; Return value:  Size  Location     Type
 15035 ;;                  1    wreg      void 
 15036 ;; Registers used:
 15037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15038 ;; Tracked objects:
 15039 ;;		On entry : 0/0
 15040 ;;		On exit  : 0/0
 15041 ;;		Unchanged: 0/0
 15042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15043 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15044 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15045 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15046 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15047 ;;Total ram usage:       36 bytes
 15048 ;; Hardware stack levels used:    1
 15049 ;; Hardware stack levels required when called:   11
 15050 ;; This function calls:
 15051 ;;		_arp_parseFromRXBuffer
 15052 ;;		_arp_sendReply
 15053 ;;		_arp_setNewEntry
 15054 ;;		_ethernetController_dropPacket
 15055 ;;		_getMillis
 15056 ;;		_ipv4_isAllZero
 15057 ;; This function is called by:
 15058 ;;		_ethernet_rxGetNewFrame
 15059 ;; This function uses a non-reentrant model
 15060 ;;
 15061                           
 15062                           	psect	text50
 15063  01588C                     __ptext50:
 15064                           	opt stack 0
 15065  01588C                     _arp_handleNewPacket:
 15066                           	opt stack 17
 15067                           
 15068                           ;arp.c: 34: arp_message_t arp;
 15069                           ;arp.c: 35: if (frame->ethertype != ETHERTYPE_ARP) {
 15070                           
 15071                           ;incstack = 0
 15072  01588C  0101               	movlb	1	; () banked
 15073  01588E  EE20 F00E          	lfsr	2,14
 15074  015892  5138               	movf	arp_handleNewPacket@frame& (0+255),w,b
 15075  015894  26D9               	addwf	16345,f,c
 15076  015896  5139               	movf	(arp_handleNewPacket@frame+1)& (0+255),w,b
 15077  015898  22DA               	addwfc	16346,f,c
 15078  01589A  0E06               	movlw	6
 15079  01589C  18DE               	xorwf	16350,w,c
 15080  01589E  E104               	bnz	u14170
 15081  0158A0  0E08               	movlw	8
 15082  0158A2  18DE               	xorwf	16350,w,c
 15083  0158A4  B4D8               	btfsc	16344,2,c
 15084  0158A6  D009               	goto	l953
 15085  0158A8                     u14170:
 15086                           
 15087                           ; BSR set to: 1
 15088                           ;arp.c: 36: ethernetController_dropPacket(frame);
 15089  0158A8  0060  F4E0  F028   	movff	arp_handleNewPacket@frame,?_ethernetController_dropPacket
 15090  0158AE  0060  F4E4  F029   	movff	arp_handleNewPacket@frame+1,?_ethernetController_dropPacket+1
 15091  0158B4  ECC1  F0B8         	call	_ethernetController_dropPacket	;wreg free
 15092                           
 15093                           ;arp.c: 37: return;
 15094  0158B8  0012               	return	
 15095  0158BA                     l953:
 15096                           
 15097                           ;arp.c: 38: }
 15098                           ;arp.c: 40: arp = arp_parseFromRXBuffer(frame);
 15099  0158BA  0060  F4E0  F060   	movff	arp_handleNewPacket@frame,arp_parseFromRXBuffer@frame
 15100  0158C0  0060  F4E4  F061   	movff	arp_handleNewPacket@frame+1,arp_parseFromRXBuffer@frame+1
 15101  0158C6  EC66  F08F         	call	_arp_parseFromRXBuffer	;wreg free
 15102  0158CA  EE20  F13C         	lfsr	2,arp_handleNewPacket@arp
 15103  0158CE  0E1F               	movlw	31
 15104  0158D0                     u14181:
 15105  0158D0  006F FFAF FFDB     	movff	16363,16347
 15106  0158D6  06E8               	decf	16360,f,c
 15107  0158D8  E2FB               	bc	u14181
 15108                           
 15109                           ;arp.c: 41: if (arp.err.code != (uint16_t)0) {
 15110  0158DA  0101               	movlb	1	; () banked
 15111  0158DC  515A               	movf	(arp_handleNewPacket@arp+30)& (0+255),w,b
 15112  0158DE  115B               	iorwf	(arp_handleNewPacket@arp+31)& (0+255),w,b
 15113  0158E0  B4D8               	btfsc	16344,2,c
 15114  0158E2  D009               	goto	l955
 15115                           
 15116                           ; BSR set to: 1
 15117                           ;arp.c: 42: ethernetController_dropPacket(frame);
 15118  0158E4  0060  F4E0  F028   	movff	arp_handleNewPacket@frame,?_ethernetController_dropPacket
 15119  0158EA  0060  F4E4  F029   	movff	arp_handleNewPacket@frame+1,?_ethernetController_dropPacket+1
 15120  0158F0  ECC1  F0B8         	call	_ethernetController_dropPacket	;wreg free
 15121                           
 15122                           ;arp.c: 46: return;
 15123  0158F4  0012               	return	
 15124  0158F6                     l955:
 15125                           
 15126                           ;arp.c: 47: }
 15127                           ;arp.c: 65: arp_sendReply(arp);
 15128  0158F6  EE20  F13C         	lfsr	2,arp_handleNewPacket@arp
 15129  0158FA  EE00  F0DF         	lfsr	0,arp_sendReply@request
 15130  0158FE  0E1F               	movlw	31
 15131  015900                     u14201:
 15132  015900  006F FF6F FFEB     	movff	16347,16363
 15133  015906  06E8               	decf	16360,f,c
 15134  015908  E2FB               	bc	u14201
 15135  01590A  EC03  F0A9         	call	_arp_sendReply	;wreg free
 15136                           
 15137                           ;arp.c: 66: if (!ipv4_isAllZero(&arp.senderIPAddress)) {
 15138  01590E  0E4A               	movlw	low (arp_handleNewPacket@arp+14)
 15139  015910  6E16               	movwf	ipv4_isAllZero@ip,c
 15140  015912  0E01               	movlw	high (arp_handleNewPacket@arp+14)
 15141  015914  6E17               	movwf	ipv4_isAllZero@ip+1,c
 15142  015916  EC7D  F0B9         	call	_ipv4_isAllZero	;wreg free
 15143  01591A  0900               	iorlw	0
 15144  01591C  A4D8               	btfss	16344,2,c
 15145  01591E  D026               	goto	l956
 15146                           
 15147                           ;arp.c: 67: arp_setNewEntry(arp.senderMACAddress, arp.senderIPAddress, getMillis());
 15148  015920  EE20  F144         	lfsr	2,arp_handleNewPacket@arp+8
 15149  015924  EE00  F01D         	lfsr	0,arp_setNewEntry@mac
 15150  015928  0E05               	movlw	5
 15151  01592A                     u14221:
 15152  01592A  006F FF6F FFEB     	movff	16347,16363
 15153  015930  06E8               	decf	16360,f,c
 15154  015932  E2FB               	bc	u14221
 15155  015934  0060  F528  F023   	movff	arp_handleNewPacket@arp+14,arp_setNewEntry@ip
 15156  01593A  0060  F52C  F024   	movff	arp_handleNewPacket@arp+15,arp_setNewEntry@ip+1
 15157  015940  0060  F530  F025   	movff	arp_handleNewPacket@arp+16,arp_setNewEntry@ip+2
 15158  015946  0060  F534  F026   	movff	arp_handleNewPacket@arp+17,arp_setNewEntry@ip+3
 15159  01594C  EC15  F0BB         	call	_getMillis	;wreg free
 15160  015950  0060  F058  F027   	movff	?_getMillis,arp_setNewEntry@timestamp
 15161  015956  0060  F05C  F028   	movff	?_getMillis+1,arp_setNewEntry@timestamp+1
 15162  01595C  0060  F060  F029   	movff	?_getMillis+2,arp_setNewEntry@timestamp+2
 15163  015962  0060  F064  F02A   	movff	?_getMillis+3,arp_setNewEntry@timestamp+3
 15164  015968  EC43  F0A5         	call	_arp_setNewEntry	;wreg free
 15165  01596C                     l956:
 15166                           
 15167                           ;arp.c: 68: }
 15168                           ;arp.c: 69: ethernetController_dropPacket();
 15169  01596C  ECC1  F0B8         	call	_ethernetController_dropPacket	;wreg free
 15170  015970  0012               	return		;funcret
 15171  015972                     __end_of_arp_handleNewPacket:
 15172                           	opt stack 0
 15173                           
 15174 ;; *************** function _ethernetController_dropPacket *****************
 15175 ;; Defined at:
 15176 ;;		line 379 in file "src/enc424j600/ENC424J600.c"
 15177 ;; Parameters:    Size  Location     Type
 15178 ;;		None
 15179 ;; Auto vars:     Size  Location     Type
 15180 ;;		None
 15181 ;; Return value:  Size  Location     Type
 15182 ;;                  1    wreg      void 
 15183 ;; Registers used:
 15184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15185 ;; Tracked objects:
 15186 ;;		On entry : 0/0
 15187 ;;		On exit  : 0/0
 15188 ;;		Unchanged: 0/0
 15189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15194 ;;Total ram usage:        2 bytes
 15195 ;; Hardware stack levels used:    1
 15196 ;; Hardware stack levels required when called:    8
 15197 ;; This function calls:
 15198 ;;		_enc424j600_setRXTailPointer
 15199 ;;		_enc424j600_writeSingleByte
 15200 ;;		_ethernetController_getNextPacketPointer
 15201 ;; This function is called by:
 15202 ;;		_ethernet_rxGetNewFrame
 15203 ;;		_arp_handleNewPacket
 15204 ;;		_ipv4_handleNewPacket
 15205 ;; This function uses a non-reentrant model
 15206 ;;
 15207                           
 15208                           	psect	text51
 15209  017182                     __ptext51:
 15210                           	opt stack 0
 15211  017182                     _ethernetController_dropPacket:
 15212                           	opt stack 19
 15213                           
 15214                           ;ENC424J600.c: 381: if (ethernetController_getNextPacketPointer() == 0x3000) {
 15215                           
 15216                           ;incstack = 0
 15217  017182  EC5B  F0BB         	call	_ethernetController_getNextPacketPointer	;wreg free
 15218  017186  0E30               	movlw	48
 15219  017188  1819               	xorwf	?_ethernetController_getNextPacketPointer+1,w,c
 15220  01718A  1018               	iorwf	?_ethernetController_getNextPacketPointer,w,c
 15221  01718C  A4D8               	btfss	16344,2,c
 15222  01718E  D007               	goto	l188
 15223                           
 15224                           ;ENC424J600.c: 382: enc424j600_setRXTailPointer(0x5FFF - 1);
 15225  017190  0E5F               	movlw	95
 15226  017192  6E25               	movwf	enc424j600_setRXTailPointer@addr+1,c
 15227  017194  0EFE               	movlw	254
 15228  017196  6E24               	movwf	enc424j600_setRXTailPointer@addr,c
 15229  017198  EC03  F0BA         	call	_enc424j600_setRXTailPointer	;wreg free
 15230                           
 15231                           ;ENC424J600.c: 383: } else {
 15232  01719C  D00A               	goto	l189
 15233  01719E                     l188:
 15234                           
 15235                           ;ENC424J600.c: 384: enc424j600_setRXTailPointer(ethernetController_getNextPacketPointer(
      +                          ) - 2);
 15236  01719E  EC5B  F0BB         	call	_ethernetController_getNextPacketPointer	;wreg free
 15237  0171A2  0EFE               	movlw	254
 15238  0171A4  2418               	addwf	?_ethernetController_getNextPacketPointer,w,c
 15239  0171A6  6E24               	movwf	enc424j600_setRXTailPointer@addr,c
 15240  0171A8  0EFF               	movlw	255
 15241  0171AA  2019               	addwfc	?_ethernetController_getNextPacketPointer+1,w,c
 15242  0171AC  6E25               	movwf	enc424j600_setRXTailPointer@addr+1,c
 15243  0171AE  EC03  F0BA         	call	_enc424j600_setRXTailPointer	;wreg free
 15244  0171B2                     l189:
 15245                           
 15246                           ;ENC424J600.c: 385: }
 15247                           ;ENC424J600.c: 387: enc424j600_writeSingleByte(0b11001100);
 15248  0171B2  0ECC               	movlw	204
 15249  0171B4  EC22  F0BB         	call	_enc424j600_writeSingleByte
 15250  0171B8  0012               	return		;funcret
 15251  0171BA                     __end_of_ethernetController_dropPacket:
 15252                           	opt stack 0
 15253                           
 15254 ;; *************** function _ethernetController_getNextPacketPointer *****************
 15255 ;; Defined at:
 15256 ;;		line 461 in file "src/enc424j600/ENC424J600.c"
 15257 ;; Parameters:    Size  Location     Type
 15258 ;;		None
 15259 ;; Auto vars:     Size  Location     Type
 15260 ;;		None
 15261 ;; Return value:  Size  Location     Type
 15262 ;;                  2   23[COMRAM] unsigned int 
 15263 ;; Registers used:
 15264 ;;		cstack
 15265 ;; Tracked objects:
 15266 ;;		On entry : 0/0
 15267 ;;		On exit  : 0/0
 15268 ;;		Unchanged: 0/0
 15269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15273 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15274 ;;Total ram usage:        2 bytes
 15275 ;; Hardware stack levels used:    1
 15276 ;; Hardware stack levels required when called:    5
 15277 ;; This function calls:
 15278 ;;		_enc424j600_getNextPacketPointer
 15279 ;; This function is called by:
 15280 ;;		_ethernetController_dropPacket
 15281 ;;		_ethernet_rxGetNewFrame
 15282 ;; This function uses a non-reentrant model
 15283 ;;
 15284                           
 15285                           	psect	text52
 15286  0176B6                     __ptext52:
 15287                           	opt stack 0
 15288  0176B6                     _ethernetController_getNextPacketPointer:
 15289                           	opt stack 21
 15290                           
 15291                           ;ENC424J600.c: 462: return enc424j600_getNextPacketPointer();
 15292                           
 15293                           ;incstack = 0
 15294  0176B6  EC96  F0BB         	call	_enc424j600_getNextPacketPointer	;wreg free
 15295  0176BA  0060  F058  F018   	movff	?_enc424j600_getNextPacketPointer,?_ethernetController_getNextPacketPointer
 15296  0176C0  0060  F05C  F019   	movff	?_enc424j600_getNextPacketPointer+1,?_ethernetController_getNextPacketPointer+1
 15297  0176C6  0012               	return	
 15298  0176C8                     __end_of_ethernetController_getNextPacketPointer:
 15299                           	opt stack 0
 15300                           
 15301 ;; *************** function _enc424j600_getNextPacketPointer *****************
 15302 ;; Defined at:
 15303 ;;		line 608 in file "src/enc424j600/ENC424J600.c"
 15304 ;; Parameters:    Size  Location     Type
 15305 ;;		None
 15306 ;; Auto vars:     Size  Location     Type
 15307 ;;		None
 15308 ;; Return value:  Size  Location     Type
 15309 ;;                  2   21[COMRAM] unsigned int 
 15310 ;; Registers used:
 15311 ;;		None
 15312 ;; Tracked objects:
 15313 ;;		On entry : 0/0
 15314 ;;		On exit  : 0/0
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15317 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15320 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15321 ;;Total ram usage:        2 bytes
 15322 ;; Hardware stack levels used:    1
 15323 ;; Hardware stack levels required when called:    4
 15324 ;; This function calls:
 15325 ;;		Nothing
 15326 ;; This function is called by:
 15327 ;;		_ethernetController_updateNextPacketPointer
 15328 ;;		_ethernetController_getNextPacketPointer
 15329 ;; This function uses a non-reentrant model
 15330 ;;
 15331                           
 15332                           	psect	text53
 15333  01772C                     __ptext53:
 15334                           	opt stack 0
 15335  01772C                     _enc424j600_getNextPacketPointer:
 15336                           	opt stack 21
 15337                           
 15338                           ;ENC424J600.c: 609: return nextPacketPointer;
 15339                           
 15340                           ;incstack = 0
 15341  01772C  0060  F0EC  F016   	movff	_nextPacketPointer,?_enc424j600_getNextPacketPointer
 15342  017732  0060  F0F0  F017   	movff	_nextPacketPointer+1,?_enc424j600_getNextPacketPointer+1
 15343  017738  0012               	return		;funcret
 15344  01773A                     __end_of_enc424j600_getNextPacketPointer:
 15345                           	opt stack 0
 15346                           
 15347 ;; *************** function _arp_setNewEntry *****************
 15348 ;; Defined at:
 15349 ;;		line 482 in file "src/stack/protocols/arp.c"
 15350 ;; Parameters:    Size  Location     Type
 15351 ;;  mac             6   28[COMRAM] struct macaddress
 15352 ;;  ip              4   34[COMRAM] struct ipv4_address
 15353 ;;  timestamp       4   38[COMRAM] unsigned long 
 15354 ;; Auto vars:     Size  Location     Type
 15355 ;;  i               1   51[COMRAM] unsigned char 
 15356 ;;  minSeconds      4   46[COMRAM] unsigned long 
 15357 ;;  oldestIndex     1   50[COMRAM] unsigned char 
 15358 ;; Return value:  Size  Location     Type
 15359 ;;                  1    wreg      void 
 15360 ;; Registers used:
 15361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15362 ;; Tracked objects:
 15363 ;;		On entry : 0/0
 15364 ;;		On exit  : 0/0
 15365 ;;		Unchanged: 0/0
 15366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15367 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15368 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15369 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15370 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15371 ;;Total ram usage:       24 bytes
 15372 ;; Hardware stack levels used:    1
 15373 ;; Hardware stack levels required when called:    5
 15374 ;; This function calls:
 15375 ;;		_ipv4_cmp
 15376 ;;		_mac_cmp
 15377 ;; This function is called by:
 15378 ;;		_arp_handleNewPacket
 15379 ;; This function uses a non-reentrant model
 15380 ;;
 15381                           
 15382                           	psect	text54
 15383  014A86                     __ptext54:
 15384                           	opt stack 0
 15385  014A86                     _arp_setNewEntry:
 15386                           	opt stack 22
 15387                           
 15388                           ;arp.c: 483: time_t minSeconds = 0xffffffff;
 15389                           
 15390                           ;incstack = 0
 15391  014A86  682F               	setf	arp_setNewEntry@minSeconds,c
 15392  014A88  6830               	setf	arp_setNewEntry@minSeconds+1,c
 15393  014A8A  6831               	setf	arp_setNewEntry@minSeconds+2,c
 15394  014A8C  6832               	setf	arp_setNewEntry@minSeconds+3,c
 15395                           
 15396                           ;arp.c: 484: uint8_t oldestIndex = 0;
 15397  014A8E  0E00               	movlw	0
 15398  014A90  6E33               	movwf	arp_setNewEntry@oldestIndex,c
 15399                           
 15400                           ;arp.c: 486: for (uint8_t i = 0; i < 8u; i++) {
 15401  014A92  0E00               	movlw	0
 15402  014A94  6E34               	movwf	arp_setNewEntry@i,c
 15403  014A96                     l11048:
 15404  014A96  0E07               	movlw	7
 15405  014A98  6434               	cpfsgt	arp_setNewEntry@i,c
 15406  014A9A  D001               	goto	l1087
 15407  014A9C  D05D               	goto	u13620
 15408  014A9E                     l1087:
 15409                           
 15410                           ;arp.c: 487: if (arp_table[i].timeCreated <= minSeconds) {
 15411  014A9E  5034               	movf	arp_setNewEntry@i,w,c
 15412  014AA0  0D0E               	mullw	14
 15413  014AA2  0E0A               	movlw	10
 15414  014AA4  26F3               	addwf	16371,f,c
 15415  014AA6  0E00               	movlw	0
 15416  014AA8  22F4               	addwfc	16372,f,c
 15417  014AAA  0E7C               	movlw	low _arp_table
 15418  014AAC  24F3               	addwf	16371,w,c
 15419  014AAE  6ED9               	movwf	16345,c
 15420  014AB0  0E04               	movlw	high _arp_table
 15421  014AB2  20F4               	addwfc	16372,w,c
 15422  014AB4  6EDA               	movwf	16346,c
 15423  014AB6  50DE               	movf	16350,w,c
 15424  014AB8  5C2F               	subwf	arp_setNewEntry@minSeconds,w,c
 15425  014ABA  50DE               	movf	16350,w,c
 15426  014ABC  5830               	subwfb	arp_setNewEntry@minSeconds+1,w,c
 15427  014ABE  50DE               	movf	16350,w,c
 15428  014AC0  5831               	subwfb	arp_setNewEntry@minSeconds+2,w,c
 15429  014AC2  50DE               	movf	16350,w,c
 15430  014AC4  5832               	subwfb	arp_setNewEntry@minSeconds+3,w,c
 15431  014AC6  A0D8               	btfss	16344,0,c
 15432  014AC8  D01B               	goto	l1089
 15433                           
 15434                           ;arp.c: 488: minSeconds = arp_table[i].timeCreated;
 15435  014ACA  5034               	movf	arp_setNewEntry@i,w,c
 15436  014ACC  0D0E               	mullw	14
 15437  014ACE  0E0A               	movlw	10
 15438  014AD0  26F3               	addwf	16371,f,c
 15439  014AD2  0E00               	movlw	0
 15440  014AD4  22F4               	addwfc	16372,f,c
 15441  014AD6  0E7C               	movlw	low _arp_table
 15442  014AD8  24F3               	addwf	16371,w,c
 15443  014ADA  6ED9               	movwf	16345,c
 15444  014ADC  0E04               	movlw	high _arp_table
 15445  014ADE  20F4               	addwfc	16372,w,c
 15446  014AE0  6EDA               	movwf	16346,c
 15447  014AE2  006F FF78  F02F    	movff	16350,arp_setNewEntry@minSeconds
 15448  014AE8  006F FF78  F030    	movff	16350,arp_setNewEntry@minSeconds+1
 15449  014AEE  006F FF78  F031    	movff	16350,arp_setNewEntry@minSeconds+2
 15450  014AF4  006F FF78  F032    	movff	16350,arp_setNewEntry@minSeconds+3
 15451                           
 15452                           ;arp.c: 489: oldestIndex = i;
 15453  014AFA  0060  F0D0  F033   	movff	arp_setNewEntry@i,arp_setNewEntry@oldestIndex
 15454  014B00                     l1089:
 15455                           
 15456                           ;arp.c: 490: }
 15457                           ;arp.c: 491: if (mac_cmp(&arp_table[i].mac, &mac) && ipv4_cmp(&arp_table[i].ip, &ip)) {
 15458  014B00  5034               	movf	arp_setNewEntry@i,w,c
 15459  014B02  0D0E               	mullw	14
 15460  014B04  0E04               	movlw	4
 15461  014B06  26F3               	addwf	16371,f,c
 15462  014B08  0E00               	movlw	0
 15463  014B0A  22F4               	addwfc	16372,f,c
 15464  014B0C  0E7C               	movlw	low _arp_table
 15465  014B0E  24F3               	addwf	16371,w,c
 15466  014B10  6E16               	movwf	mac_cmp@a,c
 15467  014B12  0E04               	movlw	high _arp_table
 15468  014B14  20F4               	addwfc	16372,w,c
 15469  014B16  6E17               	movwf	mac_cmp@a+1,c
 15470  014B18  0E1D               	movlw	low arp_setNewEntry@mac
 15471  014B1A  6E18               	movwf	mac_cmp@b,c
 15472  014B1C  0E00               	movlw	high arp_setNewEntry@mac
 15473  014B1E  6E19               	movwf	mac_cmp@b+1,c
 15474  014B20  EC29  F0B8         	call	_mac_cmp	;wreg free
 15475  014B24  0900               	iorlw	0
 15476  014B26  B4D8               	btfsc	16344,2,c
 15477  014B28  D015               	goto	l1090
 15478  014B2A  5034               	movf	arp_setNewEntry@i,w,c
 15479  014B2C  0D0E               	mullw	14
 15480  014B2E  0E7C               	movlw	low _arp_table
 15481  014B30  24F3               	addwf	16371,w,c
 15482  014B32  6E16               	movwf	ipv4_cmp@a,c
 15483  014B34  0E04               	movlw	high _arp_table
 15484  014B36  20F4               	addwfc	16372,w,c
 15485  014B38  6E17               	movwf	ipv4_cmp@a+1,c
 15486  014B3A  0E23               	movlw	low arp_setNewEntry@ip
 15487  014B3C  6E18               	movwf	ipv4_cmp@b,c
 15488  014B3E  0E00               	movlw	high arp_setNewEntry@ip
 15489  014B40  6E19               	movwf	ipv4_cmp@b+1,c
 15490  014B42  EC49  F0B8         	call	_ipv4_cmp	;wreg free
 15491  014B46  0900               	iorlw	0
 15492  014B48  B4D8               	btfsc	16344,2,c
 15493  014B4A  D004               	goto	l1090
 15494                           
 15495                           ;arp.c: 493: oldestIndex = i;
 15496  014B4C  0060  F0D0  F033   	movff	arp_setNewEntry@i,arp_setNewEntry@oldestIndex
 15497                           
 15498                           ;arp.c: 494: break;
 15499  014B52  D002               	goto	u13620
 15500  014B54                     l1090:
 15501  014B54  2A34               	incf	arp_setNewEntry@i,f,c
 15502  014B56  D79F               	goto	l11048
 15503  014B58                     u13620:
 15504                           
 15505                           ;arp.c: 495: }
 15506                           ;arp.c: 496: }
 15507                           ;arp.c: 498: arp_table[oldestIndex].ip = ip;
 15508  014B58  5033               	movf	arp_setNewEntry@oldestIndex,w,c
 15509  014B5A  0D0E               	mullw	14
 15510  014B5C  0E7C               	movlw	low _arp_table
 15511  014B5E  24F3               	addwf	16371,w,c
 15512  014B60  6ED9               	movwf	16345,c
 15513  014B62  0E04               	movlw	high _arp_table
 15514  014B64  20F4               	addwfc	16372,w,c
 15515  014B66  6EDA               	movwf	16346,c
 15516  014B68  0060  F08F  FFDE   	movff	arp_setNewEntry@ip,16350
 15517  014B6E  0060  F093  FFDE   	movff	arp_setNewEntry@ip+1,16350
 15518  014B74  0060  F097  FFDE   	movff	arp_setNewEntry@ip+2,16350
 15519  014B7A  0060  F09B  FFDE   	movff	arp_setNewEntry@ip+3,16350
 15520                           
 15521                           ;arp.c: 499: arp_table[oldestIndex].mac = mac;
 15522  014B80  EE20  F01D         	lfsr	2,arp_setNewEntry@mac
 15523  014B84  5033               	movf	arp_setNewEntry@oldestIndex,w,c
 15524  014B86  0D0E               	mullw	14
 15525  014B88  0E04               	movlw	4
 15526  014B8A  26F3               	addwf	16371,f,c
 15527  014B8C  0E00               	movlw	0
 15528  014B8E  22F4               	addwfc	16372,f,c
 15529  014B90  0E7C               	movlw	low _arp_table
 15530  014B92  24F3               	addwf	16371,w,c
 15531  014B94  6EE1               	movwf	16353,c
 15532  014B96  0E04               	movlw	high _arp_table
 15533  014B98  20F4               	addwfc	16372,w,c
 15534  014B9A  6EE2               	movwf	16354,c
 15535  014B9C  0E05               	movlw	5
 15536  014B9E                     u13631:
 15537  014B9E  006F FF6F FFE3     	movff	16347,16355
 15538  014BA4  06E8               	decf	16360,f,c
 15539  014BA6  E2FB               	bc	u13631
 15540                           
 15541                           ;arp.c: 500: arp_table[oldestIndex].timeCreated = timestamp;
 15542  014BA8  5033               	movf	arp_setNewEntry@oldestIndex,w,c
 15543  014BAA  0D0E               	mullw	14
 15544  014BAC  0E0A               	movlw	10
 15545  014BAE  26F3               	addwf	16371,f,c
 15546  014BB0  0E00               	movlw	0
 15547  014BB2  22F4               	addwfc	16372,f,c
 15548  014BB4  0E7C               	movlw	low _arp_table
 15549  014BB6  24F3               	addwf	16371,w,c
 15550  014BB8  6ED9               	movwf	16345,c
 15551  014BBA  0E04               	movlw	high _arp_table
 15552  014BBC  20F4               	addwfc	16372,w,c
 15553  014BBE  6EDA               	movwf	16346,c
 15554  014BC0  0060  F09F  FFDE   	movff	arp_setNewEntry@timestamp,16350
 15555  014BC6  0060  F0A3  FFDE   	movff	arp_setNewEntry@timestamp+1,16350
 15556  014BCC  0060  F0A7  FFDE   	movff	arp_setNewEntry@timestamp+2,16350
 15557  014BD2  0060  F0AB  FFDE   	movff	arp_setNewEntry@timestamp+3,16350
 15558  014BD8  0012               	return		;funcret
 15559  014BDA                     __end_of_arp_setNewEntry:
 15560                           	opt stack 0
 15561                           
 15562 ;; *************** function _arp_sendReply *****************
 15563 ;; Defined at:
 15564 ;;		line 211 in file "src/stack/protocols/arp.c"
 15565 ;; Parameters:    Size  Location     Type
 15566 ;;  request        32  127[BANK0 ] struct arp_message
 15567 ;; Auto vars:     Size  Location     Type
 15568 ;;  reply          32   24[BANK1 ] struct arp_message
 15569 ;;  targetMAC       6    6[BANK1 ] struct macaddress
 15570 ;;  senderMAC       6    0[BANK1 ] struct macaddress
 15571 ;;  myIP            4   20[BANK1 ] struct ipv4_address
 15572 ;;  targetIP        4   16[BANK1 ] struct ipv4_address
 15573 ;;  senderIP        4   12[BANK1 ] struct ipv4_address
 15574 ;; Return value:  Size  Location     Type
 15575 ;;                  1    wreg      void 
 15576 ;; Registers used:
 15577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15578 ;; Tracked objects:
 15579 ;;		On entry : 0/0
 15580 ;;		On exit  : 0/0
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15583 ;;      Params:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15584 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15586 ;;      Totals:         0      32      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15587 ;;Total ram usage:       88 bytes
 15588 ;; Hardware stack levels used:    1
 15589 ;; Hardware stack levels required when called:   10
 15590 ;; This function calls:
 15591 ;;		_arp_send
 15592 ;;		_ethernetController_getMacAddress
 15593 ;;		_ipv4_cmp
 15594 ;;		_ipv4_getIPSourceAddress
 15595 ;; This function is called by:
 15596 ;;		_arp_handleNewPacket
 15597 ;; This function uses a non-reentrant model
 15598 ;;
 15599                           
 15600                           	psect	text55
 15601  015206                     __ptext55:
 15602                           	opt stack 0
 15603  015206                     _arp_sendReply:
 15604                           	opt stack 17
 15605                           
 15606                           ;arp.c: 212: if (request.operation != ARP_REQUEST)
 15607                           
 15608                           ;incstack = 0
 15609  015206  0100               	movlb	0	; () banked
 15610  015208  05E5               	decf	(arp_sendReply@request+6)& (0+255),w,b
 15611  01520A  11E6               	iorwf	(arp_sendReply@request+7)& (0+255),w,b
 15612  01520C  A4D8               	btfss	16344,2,c
 15613  01520E  0012               	return	
 15614                           
 15615                           ; BSR set to: 0
 15616                           ;arp.c: 215: ipv4_address_t myIP = ipv4_getIPSourceAddress();
 15617                           
 15618                           ; BSR set to: 0
 15619                           
 15620                           ; BSR set to: 0
 15621                           ;arp.c: 213: return;
 15622  015210  ECFB  F0BA         	call	_ipv4_getIPSourceAddress	;wreg free
 15623  015214  0060  F058  F114   	movff	?_ipv4_getIPSourceAddress,arp_sendReply@myIP
 15624  01521A  0060  F05C  F115   	movff	?_ipv4_getIPSourceAddress+1,arp_sendReply@myIP+1
 15625  015220  0060  F060  F116   	movff	?_ipv4_getIPSourceAddress+2,arp_sendReply@myIP+2
 15626  015226  0060  F064  F117   	movff	?_ipv4_getIPSourceAddress+3,arp_sendReply@myIP+3
 15627                           
 15628                           ;arp.c: 216: if (!(ipv4_cmp(&request.targetIPAddress, &myIP)))
 15629  01522C  0EF7               	movlw	low (arp_sendReply@request+24)
 15630  01522E  6E16               	movwf	ipv4_cmp@a,c
 15631  015230  0E00               	movlw	high (arp_sendReply@request+24)
 15632  015232  6E17               	movwf	ipv4_cmp@a+1,c
 15633  015234  0E14               	movlw	low arp_sendReply@myIP
 15634  015236  6E18               	movwf	ipv4_cmp@b,c
 15635  015238  0E01               	movlw	high arp_sendReply@myIP
 15636  01523A  6E19               	movwf	ipv4_cmp@b+1,c
 15637  01523C  EC49  F0B8         	call	_ipv4_cmp	;wreg free
 15638  015240  0900               	iorlw	0
 15639  015242  B4D8               	btfsc	16344,2,c
 15640  015244  0012               	return	
 15641                           
 15642                           ;arp.c: 219: arp_message_t reply;
 15643                           ;arp.c: 220: ipv4_address_t senderIP;
 15644                           ;arp.c: 221: ipv4_address_t targetIP;
 15645                           ;arp.c: 222: macaddress_t senderMAC;
 15646                           ;arp.c: 223: macaddress_t targetMAC;
 15647                           ;arp.c: 225: senderMAC = ethernetController_getMacAddress();
 15648                           
 15649                           ;arp.c: 217: return;
 15650  015246  ECB1  F0B5         	call	_ethernetController_getMacAddress	;wreg free
 15651  01524A  EE20  F100         	lfsr	2,arp_sendReply@senderMAC
 15652  01524E  0E05               	movlw	5
 15653  015250                     u13531:
 15654  015250  006F FFAF FFDB     	movff	16363,16347
 15655  015256  06E8               	decf	16360,f,c
 15656  015258  E2FB               	bc	u13531
 15657                           
 15658                           ;arp.c: 226: targetMAC = request.senderMACAddress;
 15659  01525A  EE20  F0E7         	lfsr	2,arp_sendReply@request+8
 15660  01525E  EE10  F106         	lfsr	1,arp_sendReply@targetMAC
 15661  015262  0E05               	movlw	5
 15662  015264                     u13541:
 15663  015264  006F FF6F FFE3     	movff	16347,16355
 15664  01526A  06E8               	decf	16360,f,c
 15665  01526C  E2FB               	bc	u13541
 15666                           
 15667                           ;arp.c: 227: senderIP = ipv4_getIPSourceAddress();
 15668  01526E  ECFB  F0BA         	call	_ipv4_getIPSourceAddress	;wreg free
 15669  015272  0060  F058  F10C   	movff	?_ipv4_getIPSourceAddress,arp_sendReply@senderIP
 15670  015278  0060  F05C  F10D   	movff	?_ipv4_getIPSourceAddress+1,arp_sendReply@senderIP+1
 15671  01527E  0060  F060  F10E   	movff	?_ipv4_getIPSourceAddress+2,arp_sendReply@senderIP+2
 15672  015284  0060  F064  F10F   	movff	?_ipv4_getIPSourceAddress+3,arp_sendReply@senderIP+3
 15673                           
 15674                           ;arp.c: 228: targetIP = request.senderIPAddress;
 15675  01528A  0060  F3B4  F110   	movff	arp_sendReply@request+14,arp_sendReply@targetIP
 15676  015290  0060  F3B8  F111   	movff	arp_sendReply@request+15,arp_sendReply@targetIP+1
 15677  015296  0060  F3BC  F112   	movff	arp_sendReply@request+16,arp_sendReply@targetIP+2
 15678  01529C  0060  F3C0  F113   	movff	arp_sendReply@request+17,arp_sendReply@targetIP+3
 15679                           
 15680                           ;arp.c: 230: reply.hlen = 6u;
 15681  0152A2  0E06               	movlw	6
 15682  0152A4  0101               	movlb	1	; () banked
 15683  0152A6  6F1C               	movwf	(arp_sendReply@reply+4)& (0+255),b
 15684                           
 15685                           ; BSR set to: 1
 15686                           ;arp.c: 231: reply.plen = 4u;
 15687  0152A8  0E04               	movlw	4
 15688  0152AA  6F1D               	movwf	(arp_sendReply@reply+5)& (0+255),b
 15689                           
 15690                           ; BSR set to: 1
 15691                           ;arp.c: 232: reply.htype = ARP_HTYPE_ETHERNET;
 15692  0152AC  0E00               	movlw	0
 15693  0152AE  6F19               	movwf	(arp_sendReply@reply+1)& (0+255),b
 15694  0152B0  0E01               	movlw	1
 15695  0152B2  6F18               	movwf	arp_sendReply@reply& (0+255),b
 15696                           
 15697                           ; BSR set to: 1
 15698                           ;arp.c: 233: reply.ptype = ARP_PTYPE_IPv4;
 15699  0152B4  0E08               	movlw	8
 15700  0152B6  6F1B               	movwf	(arp_sendReply@reply+3)& (0+255),b
 15701  0152B8  0E00               	movlw	0
 15702  0152BA  6F1A               	movwf	(arp_sendReply@reply+2)& (0+255),b
 15703                           
 15704                           ; BSR set to: 1
 15705                           ;arp.c: 234: reply.operation = ARP_REPLY;
 15706  0152BC  0E00               	movlw	0
 15707  0152BE  6F1F               	movwf	(arp_sendReply@reply+7)& (0+255),b
 15708  0152C0  0E02               	movlw	2
 15709  0152C2  6F1E               	movwf	(arp_sendReply@reply+6)& (0+255),b
 15710                           
 15711                           ; BSR set to: 1
 15712                           ;arp.c: 235: reply.senderIPAddress = senderIP;
 15713  0152C4  0060  F430  F126   	movff	arp_sendReply@senderIP,arp_sendReply@reply+14
 15714  0152CA  0060  F434  F127   	movff	arp_sendReply@senderIP+1,arp_sendReply@reply+15
 15715  0152D0  0060  F438  F128   	movff	arp_sendReply@senderIP+2,arp_sendReply@reply+16
 15716  0152D6  0060  F43C  F129   	movff	arp_sendReply@senderIP+3,arp_sendReply@reply+17
 15717                           
 15718                           ; BSR set to: 1
 15719                           ;arp.c: 236: reply.senderMACAddress = senderMAC;
 15720  0152DC  EE20  F100         	lfsr	2,arp_sendReply@senderMAC
 15721  0152E0  EE10  F120         	lfsr	1,arp_sendReply@reply+8
 15722  0152E4  0E05               	movlw	5
 15723  0152E6                     u13551:
 15724  0152E6  006F FF6F FFE3     	movff	16347,16355
 15725  0152EC  06E8               	decf	16360,f,c
 15726  0152EE  E2FB               	bc	u13551
 15727                           
 15728                           ; BSR set to: 1
 15729                           ;arp.c: 237: reply.targetIPAddress = targetIP;
 15730  0152F0  0060  F440  F130   	movff	arp_sendReply@targetIP,arp_sendReply@reply+24
 15731  0152F6  0060  F444  F131   	movff	arp_sendReply@targetIP+1,arp_sendReply@reply+25
 15732  0152FC  0060  F448  F132   	movff	arp_sendReply@targetIP+2,arp_sendReply@reply+26
 15733  015302  0060  F44C  F133   	movff	arp_sendReply@targetIP+3,arp_sendReply@reply+27
 15734                           
 15735                           ; BSR set to: 1
 15736                           ;arp.c: 238: reply.targetMACAddress = targetMAC;
 15737  015308  EE20  F106         	lfsr	2,arp_sendReply@targetMAC
 15738  01530C  EE10  F12A         	lfsr	1,arp_sendReply@reply+18
 15739  015310  0E05               	movlw	5
 15740  015312                     u13561:
 15741  015312  006F FF6F FFE3     	movff	16347,16355
 15742  015318  06E8               	decf	16360,f,c
 15743  01531A  E2FB               	bc	u13561
 15744                           
 15745                           ; BSR set to: 1
 15746                           ;arp.c: 240: arp_send(reply);
 15747  01531C  EE20  F118         	lfsr	2,arp_sendReply@reply
 15748  015320  EE00  F08A         	lfsr	0,arp_send@arp
 15749  015324  0E1F               	movlw	31
 15750  015326                     u13571:
 15751  015326  006F FF6F FFEB     	movff	16347,16363
 15752  01532C  06E8               	decf	16360,f,c
 15753  01532E  E2FB               	bc	u13571
 15754  015330  ECC6  F09A         	call	_arp_send	;wreg free
 15755  015334  0012               	return		;funcret
 15756  015336                     __end_of_arp_sendReply:
 15757                           	opt stack 0
 15758                           
 15759 ;; *************** function _ipv4_getIPSourceAddress *****************
 15760 ;; Defined at:
 15761 ;;		line 362 in file "src/stack/protocols/ipv4.c"
 15762 ;; Parameters:    Size  Location     Type
 15763 ;;		None
 15764 ;; Auto vars:     Size  Location     Type
 15765 ;;		None
 15766 ;; Return value:  Size  Location     Type
 15767 ;;                  4   21[COMRAM] struct ipv4_address
 15768 ;; Registers used:
 15769 ;;		None
 15770 ;; Tracked objects:
 15771 ;;		On entry : 0/0
 15772 ;;		On exit  : 0/0
 15773 ;;		Unchanged: 0/0
 15774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15775 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15778 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15779 ;;Total ram usage:        4 bytes
 15780 ;; Hardware stack levels used:    1
 15781 ;; Hardware stack levels required when called:    4
 15782 ;; This function calls:
 15783 ;;		Nothing
 15784 ;; This function is called by:
 15785 ;;		_arp_sendReply
 15786 ;;		_icmp_sendEchoReply
 15787 ;;		_tcp_sendSYNACK
 15788 ;;		_udp_sendPacket
 15789 ;;		_icmp_sendEchoRequest
 15790 ;; This function uses a non-reentrant model
 15791 ;;
 15792                           
 15793                           	psect	text56
 15794  0175F6                     __ptext56:
 15795                           	opt stack 0
 15796  0175F6                     _ipv4_getIPSourceAddress:
 15797                           	opt stack 25
 15798                           
 15799                           ;ipv4.c: 363: return ipSource;
 15800                           
 15801                           ;incstack = 0
 15802  0175F6  0060  FB50  F016   	movff	_ipSource,?_ipv4_getIPSourceAddress
 15803  0175FC  0060  FB54  F017   	movff	_ipSource+1,?_ipv4_getIPSourceAddress+1
 15804  017602  0060  FB58  F018   	movff	_ipSource+2,?_ipv4_getIPSourceAddress+2
 15805  017608  0060  FB5C  F019   	movff	_ipSource+3,?_ipv4_getIPSourceAddress+3
 15806  01760E  0012               	return		;funcret
 15807  017610                     __end_of_ipv4_getIPSourceAddress:
 15808                           	opt stack 0
 15809                           
 15810 ;; *************** function _arp_parseFromRXBuffer *****************
 15811 ;; Defined at:
 15812 ;;		line 72 in file "src/stack/protocols/arp.c"
 15813 ;; Parameters:    Size  Location     Type
 15814 ;;  frame           2    0[BANK0 ] PTR struct ethernetFrame
 15815 ;;		 -> stack(124), 
 15816 ;; Auto vars:     Size  Location     Type
 15817 ;;  i               1   35[BANK0 ] unsigned char 
 15818 ;;  i               1   34[BANK0 ] unsigned char 
 15819 ;;  i               1   33[BANK0 ] unsigned char 
 15820 ;;  i               1   32[BANK0 ] unsigned char 
 15821 ;;  arp            32   38[BANK0 ] struct arp_message
 15822 ;;  offset          2   36[BANK0 ] const unsigned int 
 15823 ;; Return value:  Size  Location     Type
 15824 ;;                  32    0[BANK0 ] struct arp_message
 15825 ;; Registers used:
 15826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15827 ;; Tracked objects:
 15828 ;;		On entry : 0/0
 15829 ;;		On exit  : 0/0
 15830 ;;		Unchanged: 0/0
 15831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15832 ;;      Params:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15833 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15834 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15835 ;;      Totals:         3      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15836 ;;Total ram usage:       73 bytes
 15837 ;; Hardware stack levels used:    1
 15838 ;; Hardware stack levels required when called:    8
 15839 ;; This function calls:
 15840 ;;		_ethernetController_streamFromRXBuffer
 15841 ;;		_ipv4_cmp
 15842 ;;		_ipv4_isAllZero
 15843 ;;		_mac_cmp
 15844 ;;		_mac_isAllZero
 15845 ;; This function is called by:
 15846 ;;		_arp_handleNewPacket
 15847 ;; This function uses a non-reentrant model
 15848 ;;
 15849                           
 15850                           	psect	text57
 15851  011ECC                     __ptext57:
 15852                           	opt stack 0
 15853  011ECC                     _arp_parseFromRXBuffer:
 15854                           	opt stack 19
 15855                           
 15856                           ;arp.c: 73: arp_message_t arp;
 15857                           ;arp.c: 74: uint16_t const offset = 22;
 15858                           
 15859                           ;incstack = 0
 15860  011ECC  0E00               	movlw	0
 15861  011ECE  0100               	movlb	0	; () banked
 15862  011ED0  6F85               	movwf	(arp_parseFromRXBuffer@offset+1)& (0+255),b
 15863  011ED2  0E16               	movlw	22
 15864  011ED4  6F84               	movwf	arp_parseFromRXBuffer@offset& (0+255),b
 15865                           
 15866                           ; BSR set to: 0
 15867                           ;arp.c: 76: ethernetController_streamFromRXBuffer(0, frame->memory.start + offset);
 15868  011ED6  EE20 F010          	lfsr	2,16
 15869  011EDA  5160               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 15870  011EDC  26D9               	addwf	16345,f,c
 15871  011EDE  5161               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 15872  011EE0  22DA               	addwfc	16346,f,c
 15873  011EE2  006F FF78  F02A    	movff	16350,??_arp_parseFromRXBuffer
 15874  011EE8  006F FF74  F02B    	movff	16349,??_arp_parseFromRXBuffer+1
 15875  011EEE  5184               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 15876  011EF0  242A               	addwf	??_arp_parseFromRXBuffer,w,c
 15877  011EF2  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 15878  011EF4  5185               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 15879  011EF6  202B               	addwfc	??_arp_parseFromRXBuffer+1,w,c
 15880  011EF8  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 15881  011EFA  0E00               	movlw	0
 15882  011EFC  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 15883                           
 15884                           ;arp.c: 79: arp.htype = (ethernetController_streamFromRXBuffer(1, frame->memory.start + 
      +                          offset) << 8);
 15885  011F00  0100               	movlb	0	; () banked
 15886  011F02  EE20 F010          	lfsr	2,16
 15887  011F06  5160               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 15888  011F08  26D9               	addwf	16345,f,c
 15889  011F0A  5161               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 15890  011F0C  22DA               	addwfc	16346,f,c
 15891  011F0E  006F FF78  F02A    	movff	16350,??_arp_parseFromRXBuffer
 15892  011F14  006F FF74  F02B    	movff	16349,??_arp_parseFromRXBuffer+1
 15893  011F1A  5184               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 15894  011F1C  242A               	addwf	??_arp_parseFromRXBuffer,w,c
 15895  011F1E  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 15896  011F20  5185               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 15897  011F22  202B               	addwfc	??_arp_parseFromRXBuffer+1,w,c
 15898  011F24  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 15899  011F26  0E01               	movlw	1
 15900  011F28  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 15901  011F2C  0100               	movlb	0	; () banked
 15902  011F2E  6F87               	movwf	(arp_parseFromRXBuffer@arp+1)& (0+255),b
 15903  011F30  6B86               	clrf	arp_parseFromRXBuffer@arp& (0+255),b
 15904                           
 15905                           ; BSR set to: 0
 15906                           ;arp.c: 80: arp.htype |= ethernetController_streamFromRXBuffer(1, frame->memory.start + 
      +                          offset);
 15907  011F32  EE20 F010          	lfsr	2,16
 15908  011F36  5160               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 15909  011F38  26D9               	addwf	16345,f,c
 15910  011F3A  5161               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 15911  011F3C  22DA               	addwfc	16346,f,c
 15912  011F3E  006F FF78  F02A    	movff	16350,??_arp_parseFromRXBuffer
 15913  011F44  006F FF74  F02B    	movff	16349,??_arp_parseFromRXBuffer+1
 15914  011F4A  5184               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 15915  011F4C  242A               	addwf	??_arp_parseFromRXBuffer,w,c
 15916  011F4E  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 15917  011F50  5185               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 15918  011F52  202B               	addwfc	??_arp_parseFromRXBuffer+1,w,c
 15919  011F54  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 15920  011F56  0E01               	movlw	1
 15921  011F58  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 15922  011F5C  6E2C               	movwf	(??_arp_parseFromRXBuffer+2)& (0+255),c
 15923  011F5E  502C               	movf	??_arp_parseFromRXBuffer+2,w,c
 15924  011F60  0100               	movlb	0	; () banked
 15925  011F62  1386               	iorwf	arp_parseFromRXBuffer@arp& (0+255),f,b
 15926                           
 15927                           ; BSR set to: 0
 15928                           ;arp.c: 82: arp.ptype = (ethernetController_streamFromRXBuffer(1, frame->memory.start + 
      +                          offset) << 8);
 15929  011F64  EE20 F010          	lfsr	2,16
 15930  011F68  5160               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 15931  011F6A  26D9               	addwf	16345,f,c
 15932  011F6C  5161               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 15933  011F6E  22DA               	addwfc	16346,f,c
 15934  011F70  006F FF78  F02A    	movff	16350,??_arp_parseFromRXBuffer
 15935  011F76  006F FF74  F02B    	movff	16349,??_arp_parseFromRXBuffer+1
 15936  011F7C  5184               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 15937  011F7E  242A               	addwf	??_arp_parseFromRXBuffer,w,c
 15938  011F80  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 15939  011F82  5185               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 15940  011F84  202B               	addwfc	??_arp_parseFromRXBuffer+1,w,c
 15941  011F86  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 15942  011F88  0E01               	movlw	1
 15943  011F8A  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 15944  011F8E  0100               	movlb	0	; () banked
 15945  011F90  6F89               	movwf	(arp_parseFromRXBuffer@arp+3)& (0+255),b
 15946  011F92  6B88               	clrf	(arp_parseFromRXBuffer@arp+2)& (0+255),b
 15947                           
 15948                           ; BSR set to: 0
 15949                           ;arp.c: 83: arp.ptype |= ethernetController_streamFromRXBuffer(1, frame->memory.start + 
      +                          offset);
 15950  011F94  EE20 F010          	lfsr	2,16
 15951  011F98  5160               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 15952  011F9A  26D9               	addwf	16345,f,c
 15953  011F9C  5161               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 15954  011F9E  22DA               	addwfc	16346,f,c
 15955  011FA0  006F FF78  F02A    	movff	16350,??_arp_parseFromRXBuffer
 15956  011FA6  006F FF74  F02B    	movff	16349,??_arp_parseFromRXBuffer+1
 15957  011FAC  5184               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 15958  011FAE  242A               	addwf	??_arp_parseFromRXBuffer,w,c
 15959  011FB0  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 15960  011FB2  5185               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 15961  011FB4  202B               	addwfc	??_arp_parseFromRXBuffer+1,w,c
 15962  011FB6  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 15963  011FB8  0E01               	movlw	1
 15964  011FBA  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 15965  011FBE  6E2C               	movwf	(??_arp_parseFromRXBuffer+2)& (0+255),c
 15966  011FC0  502C               	movf	??_arp_parseFromRXBuffer+2,w,c
 15967  011FC2  0100               	movlb	0	; () banked
 15968  011FC4  1388               	iorwf	(arp_parseFromRXBuffer@arp+2)& (0+255),f,b
 15969                           
 15970                           ; BSR set to: 0
 15971                           ;arp.c: 85: arp.hlen = ethernetController_streamFromRXBuffer(1, frame->memory.start + of
      +                          fset);
 15972  011FC6  EE20 F010          	lfsr	2,16
 15973  011FCA  5160               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 15974  011FCC  26D9               	addwf	16345,f,c
 15975  011FCE  5161               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 15976  011FD0  22DA               	addwfc	16346,f,c
 15977  011FD2  006F FF78  F02A    	movff	16350,??_arp_parseFromRXBuffer
 15978  011FD8  006F FF74  F02B    	movff	16349,??_arp_parseFromRXBuffer+1
 15979  011FDE  5184               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 15980  011FE0  242A               	addwf	??_arp_parseFromRXBuffer,w,c
 15981  011FE2  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 15982  011FE4  5185               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 15983  011FE6  202B               	addwfc	??_arp_parseFromRXBuffer+1,w,c
 15984  011FE8  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 15985  011FEA  0E01               	movlw	1
 15986  011FEC  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 15987  011FF0  0100               	movlb	0	; () banked
 15988  011FF2  6F8A               	movwf	(arp_parseFromRXBuffer@arp+4)& (0+255),b
 15989                           
 15990                           ; BSR set to: 0
 15991                           ;arp.c: 86: arp.plen = ethernetController_streamFromRXBuffer(1, frame->memory.start + of
      +                          fset);
 15992  011FF4  EE20 F010          	lfsr	2,16
 15993  011FF8  5160               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 15994  011FFA  26D9               	addwf	16345,f,c
 15995  011FFC  5161               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 15996  011FFE  22DA               	addwfc	16346,f,c
 15997  012000  006F FF78  F02A    	movff	16350,??_arp_parseFromRXBuffer
 15998  012006  006F FF74  F02B    	movff	16349,??_arp_parseFromRXBuffer+1
 15999  01200C  5184               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 16000  01200E  242A               	addwf	??_arp_parseFromRXBuffer,w,c
 16001  012010  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 16002  012012  5185               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 16003  012014  202B               	addwfc	??_arp_parseFromRXBuffer+1,w,c
 16004  012016  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 16005  012018  0E01               	movlw	1
 16006  01201A  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 16007  01201E  0100               	movlb	0	; () banked
 16008  012020  6F8B               	movwf	(arp_parseFromRXBuffer@arp+5)& (0+255),b
 16009                           
 16010                           ; BSR set to: 0
 16011                           ;arp.c: 88: arp.operation = (ethernetController_streamFromRXBuffer(1, frame->memory.star
      +                          t + offset) << 8);
 16012  012022  EE20 F010          	lfsr	2,16
 16013  012026  5160               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 16014  012028  26D9               	addwf	16345,f,c
 16015  01202A  5161               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 16016  01202C  22DA               	addwfc	16346,f,c
 16017  01202E  006F FF78  F02A    	movff	16350,??_arp_parseFromRXBuffer
 16018  012034  006F FF74  F02B    	movff	16349,??_arp_parseFromRXBuffer+1
 16019  01203A  5184               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 16020  01203C  242A               	addwf	??_arp_parseFromRXBuffer,w,c
 16021  01203E  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 16022  012040  5185               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 16023  012042  202B               	addwfc	??_arp_parseFromRXBuffer+1,w,c
 16024  012044  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 16025  012046  0E01               	movlw	1
 16026  012048  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 16027  01204C  0100               	movlb	0	; () banked
 16028  01204E  6F8D               	movwf	(arp_parseFromRXBuffer@arp+7)& (0+255),b
 16029  012050  6B8C               	clrf	(arp_parseFromRXBuffer@arp+6)& (0+255),b
 16030                           
 16031                           ; BSR set to: 0
 16032                           ;arp.c: 89: arp.operation |= ethernetController_streamFromRXBuffer(1, frame->memory.star
      +                          t + offset);
 16033  012052  EE20 F010          	lfsr	2,16
 16034  012056  5160               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 16035  012058  26D9               	addwf	16345,f,c
 16036  01205A  5161               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 16037  01205C  22DA               	addwfc	16346,f,c
 16038  01205E  006F FF78  F02A    	movff	16350,??_arp_parseFromRXBuffer
 16039  012064  006F FF74  F02B    	movff	16349,??_arp_parseFromRXBuffer+1
 16040  01206A  5184               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 16041  01206C  242A               	addwf	??_arp_parseFromRXBuffer,w,c
 16042  01206E  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 16043  012070  5185               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 16044  012072  202B               	addwfc	??_arp_parseFromRXBuffer+1,w,c
 16045  012074  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 16046  012076  0E01               	movlw	1
 16047  012078  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 16048  01207C  6E2C               	movwf	(??_arp_parseFromRXBuffer+2)& (0+255),c
 16049  01207E  502C               	movf	??_arp_parseFromRXBuffer+2,w,c
 16050  012080  0100               	movlb	0	; () banked
 16051  012082  138C               	iorwf	(arp_parseFromRXBuffer@arp+6)& (0+255),f,b
 16052                           
 16053                           ; BSR set to: 0
 16054                           ;arp.c: 92: for (uint8_t i = 0; i < arp.hlen; i++)
 16055  012084  0E00               	movlw	0
 16056  012086  6F80               	movwf	arp_parseFromRXBuffer@i& (0+255),b
 16057  012088  D027               	goto	l959
 16058  01208A                     
 16059                           ; BSR set to: 0
 16060                           ;arp.c: 93: arp.senderMACAddress.address[i] = ethernetController_streamFromRXBuffer(1, f
      +                          rame->memory.start + offset);
 16061                           
 16062                           ; BSR set to: 0
 16063  01208A  EE20 F010          	lfsr	2,16
 16064  01208E  5160               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 16065  012090  26D9               	addwf	16345,f,c
 16066  012092  5161               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 16067  012094  22DA               	addwfc	16346,f,c
 16068  012096  006F FF78  F02A    	movff	16350,??_arp_parseFromRXBuffer
 16069  01209C  006F FF74  F02B    	movff	16349,??_arp_parseFromRXBuffer+1
 16070  0120A2  5184               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 16071  0120A4  242A               	addwf	??_arp_parseFromRXBuffer,w,c
 16072  0120A6  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 16073  0120A8  5185               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 16074  0120AA  202B               	addwfc	??_arp_parseFromRXBuffer+1,w,c
 16075  0120AC  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 16076  0120AE  0E01               	movlw	1
 16077  0120B0  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 16078  0120B4  6E2C               	movwf	(??_arp_parseFromRXBuffer+2)& (0+255),c
 16079  0120B6  0100               	movlb	0	; () banked
 16080  0120B8  5180               	movf	arp_parseFromRXBuffer@i& (0+255),w,b
 16081  0120BA  0D01               	mullw	1
 16082  0120BC  0E08               	movlw	8
 16083  0120BE  26F3               	addwf	16371,f,c
 16084  0120C0  0E00               	movlw	0
 16085  0120C2  22F4               	addwfc	16372,f,c
 16086  0120C4  0E86               	movlw	low arp_parseFromRXBuffer@arp
 16087  0120C6  24F3               	addwf	16371,w,c
 16088  0120C8  6ED9               	movwf	16345,c
 16089  0120CA  0E00               	movlw	high arp_parseFromRXBuffer@arp
 16090  0120CC  20F4               	addwfc	16372,w,c
 16091  0120CE  6EDA               	movwf	16346,c
 16092  0120D0  0060  F0B3  FFDF   	movff	??_arp_parseFromRXBuffer+2,16351
 16093                           
 16094                           ; BSR set to: 0
 16095  0120D6  2B80               	incf	arp_parseFromRXBuffer@i& (0+255),f,b
 16096  0120D8                     l959:
 16097                           
 16098                           ; BSR set to: 0
 16099                           
 16100                           ; BSR set to: 0
 16101  0120D8  518A               	movf	(arp_parseFromRXBuffer@arp+4)& (0+255),w,b
 16102  0120DA  5D80               	subwf	arp_parseFromRXBuffer@i& (0+255),w,b
 16103  0120DC  A0D8               	btfss	16344,0,c
 16104  0120DE  D7D5               	goto	l960
 16105                           
 16106                           ; BSR set to: 0
 16107                           ;arp.c: 94: for (uint8_t i = 0; i < arp.plen; i++)
 16108                           
 16109                           ; BSR set to: 0
 16110  0120E0  0E00               	movlw	0
 16111  0120E2  6F81               	movwf	arp_parseFromRXBuffer@i_3165& (0+255),b
 16112  0120E4  D027               	goto	l962
 16113  0120E6                     
 16114                           ; BSR set to: 0
 16115                           ;arp.c: 95: arp.senderIPAddress.address[i] = ethernetController_streamFromRXBuffer(1, fr
      +                          ame->memory.start + offset);
 16116                           
 16117                           ; BSR set to: 0
 16118  0120E6  EE20 F010          	lfsr	2,16
 16119  0120EA  5160               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 16120  0120EC  26D9               	addwf	16345,f,c
 16121  0120EE  5161               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 16122  0120F0  22DA               	addwfc	16346,f,c
 16123  0120F2  006F FF78  F02A    	movff	16350,??_arp_parseFromRXBuffer
 16124  0120F8  006F FF74  F02B    	movff	16349,??_arp_parseFromRXBuffer+1
 16125  0120FE  5184               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 16126  012100  242A               	addwf	??_arp_parseFromRXBuffer,w,c
 16127  012102  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 16128  012104  5185               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 16129  012106  202B               	addwfc	??_arp_parseFromRXBuffer+1,w,c
 16130  012108  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 16131  01210A  0E01               	movlw	1
 16132  01210C  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 16133  012110  6E2C               	movwf	(??_arp_parseFromRXBuffer+2)& (0+255),c
 16134  012112  0100               	movlb	0	; () banked
 16135  012114  5181               	movf	arp_parseFromRXBuffer@i_3165& (0+255),w,b
 16136  012116  0D01               	mullw	1
 16137  012118  0E0E               	movlw	14
 16138  01211A  26F3               	addwf	16371,f,c
 16139  01211C  0E00               	movlw	0
 16140  01211E  22F4               	addwfc	16372,f,c
 16141  012120  0E86               	movlw	low arp_parseFromRXBuffer@arp
 16142  012122  24F3               	addwf	16371,w,c
 16143  012124  6ED9               	movwf	16345,c
 16144  012126  0E00               	movlw	high arp_parseFromRXBuffer@arp
 16145  012128  20F4               	addwfc	16372,w,c
 16146  01212A  6EDA               	movwf	16346,c
 16147  01212C  0060  F0B3  FFDF   	movff	??_arp_parseFromRXBuffer+2,16351
 16148                           
 16149                           ; BSR set to: 0
 16150  012132  2B81               	incf	arp_parseFromRXBuffer@i_3165& (0+255),f,b
 16151  012134                     l962:
 16152                           
 16153                           ; BSR set to: 0
 16154                           
 16155                           ; BSR set to: 0
 16156  012134  518B               	movf	(arp_parseFromRXBuffer@arp+5)& (0+255),w,b
 16157  012136  5D81               	subwf	arp_parseFromRXBuffer@i_3165& (0+255),w,b
 16158  012138  A0D8               	btfss	16344,0,c
 16159  01213A  D7D5               	goto	l963
 16160                           
 16161                           ; BSR set to: 0
 16162                           ;arp.c: 97: for (uint8_t i = 0; i < arp.hlen; i++)
 16163                           
 16164                           ; BSR set to: 0
 16165  01213C  0E00               	movlw	0
 16166  01213E  6F82               	movwf	arp_parseFromRXBuffer@i_3166& (0+255),b
 16167  012140  D027               	goto	l965
 16168  012142                     
 16169                           ; BSR set to: 0
 16170                           ;arp.c: 98: arp.targetMACAddress.address[i] = ethernetController_streamFromRXBuffer(1, f
      +                          rame->memory.start + offset);
 16171                           
 16172                           ; BSR set to: 0
 16173  012142  EE20 F010          	lfsr	2,16
 16174  012146  5160               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 16175  012148  26D9               	addwf	16345,f,c
 16176  01214A  5161               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 16177  01214C  22DA               	addwfc	16346,f,c
 16178  01214E  006F FF78  F02A    	movff	16350,??_arp_parseFromRXBuffer
 16179  012154  006F FF74  F02B    	movff	16349,??_arp_parseFromRXBuffer+1
 16180  01215A  5184               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 16181  01215C  242A               	addwf	??_arp_parseFromRXBuffer,w,c
 16182  01215E  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 16183  012160  5185               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 16184  012162  202B               	addwfc	??_arp_parseFromRXBuffer+1,w,c
 16185  012164  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 16186  012166  0E01               	movlw	1
 16187  012168  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 16188  01216C  6E2C               	movwf	(??_arp_parseFromRXBuffer+2)& (0+255),c
 16189  01216E  0100               	movlb	0	; () banked
 16190  012170  5182               	movf	arp_parseFromRXBuffer@i_3166& (0+255),w,b
 16191  012172  0D01               	mullw	1
 16192  012174  0E12               	movlw	18
 16193  012176  26F3               	addwf	16371,f,c
 16194  012178  0E00               	movlw	0
 16195  01217A  22F4               	addwfc	16372,f,c
 16196  01217C  0E86               	movlw	low arp_parseFromRXBuffer@arp
 16197  01217E  24F3               	addwf	16371,w,c
 16198  012180  6ED9               	movwf	16345,c
 16199  012182  0E00               	movlw	high arp_parseFromRXBuffer@arp
 16200  012184  20F4               	addwfc	16372,w,c
 16201  012186  6EDA               	movwf	16346,c
 16202  012188  0060  F0B3  FFDF   	movff	??_arp_parseFromRXBuffer+2,16351
 16203                           
 16204                           ; BSR set to: 0
 16205  01218E  2B82               	incf	arp_parseFromRXBuffer@i_3166& (0+255),f,b
 16206  012190                     l965:
 16207                           
 16208                           ; BSR set to: 0
 16209                           
 16210                           ; BSR set to: 0
 16211  012190  518A               	movf	(arp_parseFromRXBuffer@arp+4)& (0+255),w,b
 16212  012192  5D82               	subwf	arp_parseFromRXBuffer@i_3166& (0+255),w,b
 16213  012194  A0D8               	btfss	16344,0,c
 16214  012196  D7D5               	goto	l966
 16215                           
 16216                           ; BSR set to: 0
 16217                           ;arp.c: 99: for (uint8_t i = 0; i < arp.plen; i++)
 16218                           
 16219                           ; BSR set to: 0
 16220  012198  0E00               	movlw	0
 16221  01219A  6F83               	movwf	arp_parseFromRXBuffer@i_3167& (0+255),b
 16222  01219C  D027               	goto	l968
 16223  01219E                     
 16224                           ; BSR set to: 0
 16225                           ;arp.c: 100: arp.targetIPAddress.address[i] = ethernetController_streamFromRXBuffer(1, f
      +                          rame->memory.start + offset);
 16226                           
 16227                           ; BSR set to: 0
 16228  01219E  EE20 F010          	lfsr	2,16
 16229  0121A2  5160               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 16230  0121A4  26D9               	addwf	16345,f,c
 16231  0121A6  5161               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 16232  0121A8  22DA               	addwfc	16346,f,c
 16233  0121AA  006F FF78  F02A    	movff	16350,??_arp_parseFromRXBuffer
 16234  0121B0  006F FF74  F02B    	movff	16349,??_arp_parseFromRXBuffer+1
 16235  0121B6  5184               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 16236  0121B8  242A               	addwf	??_arp_parseFromRXBuffer,w,c
 16237  0121BA  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 16238  0121BC  5185               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 16239  0121BE  202B               	addwfc	??_arp_parseFromRXBuffer+1,w,c
 16240  0121C0  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 16241  0121C2  0E01               	movlw	1
 16242  0121C4  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 16243  0121C8  6E2C               	movwf	(??_arp_parseFromRXBuffer+2)& (0+255),c
 16244  0121CA  0100               	movlb	0	; () banked
 16245  0121CC  5183               	movf	arp_parseFromRXBuffer@i_3167& (0+255),w,b
 16246  0121CE  0D01               	mullw	1
 16247  0121D0  0E18               	movlw	24
 16248  0121D2  26F3               	addwf	16371,f,c
 16249  0121D4  0E00               	movlw	0
 16250  0121D6  22F4               	addwfc	16372,f,c
 16251  0121D8  0E86               	movlw	low arp_parseFromRXBuffer@arp
 16252  0121DA  24F3               	addwf	16371,w,c
 16253  0121DC  6ED9               	movwf	16345,c
 16254  0121DE  0E00               	movlw	high arp_parseFromRXBuffer@arp
 16255  0121E0  20F4               	addwfc	16372,w,c
 16256  0121E2  6EDA               	movwf	16346,c
 16257  0121E4  0060  F0B3  FFDF   	movff	??_arp_parseFromRXBuffer+2,16351
 16258                           
 16259                           ; BSR set to: 0
 16260  0121EA  2B83               	incf	arp_parseFromRXBuffer@i_3167& (0+255),f,b
 16261  0121EC                     l968:
 16262                           
 16263                           ; BSR set to: 0
 16264                           
 16265                           ; BSR set to: 0
 16266  0121EC  518B               	movf	(arp_parseFromRXBuffer@arp+5)& (0+255),w,b
 16267  0121EE  5D83               	subwf	arp_parseFromRXBuffer@i_3167& (0+255),w,b
 16268  0121F0  A0D8               	btfss	16344,0,c
 16269  0121F2  D7D5               	goto	l969
 16270                           
 16271                           ; BSR set to: 0
 16272                           ;arp.c: 102: ethernetController_streamFromRXBuffer(2, frame->memory.start + offset);
 16273                           
 16274                           ; BSR set to: 0
 16275  0121F4  EE20 F010          	lfsr	2,16
 16276  0121F8  5160               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 16277  0121FA  26D9               	addwf	16345,f,c
 16278  0121FC  5161               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 16279  0121FE  22DA               	addwfc	16346,f,c
 16280  012200  006F FF78  F02A    	movff	16350,??_arp_parseFromRXBuffer
 16281  012206  006F FF74  F02B    	movff	16349,??_arp_parseFromRXBuffer+1
 16282  01220C  5184               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 16283  01220E  242A               	addwf	??_arp_parseFromRXBuffer,w,c
 16284  012210  6E25               	movwf	ethernetController_streamFromRXBuffer@startAddress,c
 16285  012212  5185               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 16286  012214  202B               	addwfc	??_arp_parseFromRXBuffer+1,w,c
 16287  012216  6E26               	movwf	ethernetController_streamFromRXBuffer@startAddress+1,c
 16288  012218  0E02               	movlw	2
 16289  01221A  EC47  F0B6         	call	_ethernetController_streamFromRXBuffer
 16290                           
 16291                           ;arp.c: 104: if (ipv4_isAllZero(&arp.senderIPAddress)) {
 16292  01221E  0E94               	movlw	low (arp_parseFromRXBuffer@arp+14)
 16293  012220  6E16               	movwf	ipv4_isAllZero@ip,c
 16294  012222  0E00               	movlw	high (arp_parseFromRXBuffer@arp+14)
 16295  012224  6E17               	movwf	ipv4_isAllZero@ip+1,c
 16296  012226  EC7D  F0B9         	call	_ipv4_isAllZero	;wreg free
 16297  01222A  0900               	iorlw	0
 16298  01222C  B4D8               	btfsc	16344,2,c
 16299  01222E  D003               	goto	l971
 16300                           
 16301                           ;arp.c: 105: arp.fIsProbe = 1;
 16302  012230  0100               	movlb	0	; () banked
 16303  012232  83A2               	bsf	(arp_parseFromRXBuffer@arp+28)& (0+255),1,b
 16304  012234  D040               	goto	L20
 16305  012236                     l971:
 16306                           
 16307                           ;arp.c: 108: arp.fIsProbe = 0;
 16308  012236  0100               	movlb	0	; () banked
 16309  012238  93A2               	bcf	(arp_parseFromRXBuffer@arp+28)& (0+255),1,b
 16310                           
 16311                           ; BSR set to: 0
 16312                           ;arp.c: 110: if (ipv4_cmp(&arp.senderIPAddress, &arp.targetIPAddress) &&
 16313                           ;arp.c: 111: mac_isAllZero(&arp.targetMACAddress) &&
 16314                           ;arp.c: 112: arp.operation == ARP_REQUEST) {
 16315  01223A  0E94               	movlw	low (arp_parseFromRXBuffer@arp+14)
 16316  01223C  6E16               	movwf	ipv4_cmp@a,c
 16317  01223E  0E00               	movlw	high (arp_parseFromRXBuffer@arp+14)
 16318  012240  6E17               	movwf	ipv4_cmp@a+1,c
 16319  012242  0E9E               	movlw	low (arp_parseFromRXBuffer@arp+24)
 16320  012244  6E18               	movwf	ipv4_cmp@b,c
 16321  012246  0E00               	movlw	high (arp_parseFromRXBuffer@arp+24)
 16322  012248  6E19               	movwf	ipv4_cmp@b+1,c
 16323  01224A  EC49  F0B8         	call	_ipv4_cmp	;wreg free
 16324  01224E  0900               	iorlw	0
 16325  012250  B4D8               	btfsc	16344,2,c
 16326  012252  D00E               	goto	l973
 16327  012254  0E98               	movlw	low (arp_parseFromRXBuffer@arp+18)
 16328  012256  6E16               	movwf	mac_isAllZero@mac,c
 16329  012258  0E00               	movlw	high (arp_parseFromRXBuffer@arp+18)
 16330  01225A  6E17               	movwf	mac_isAllZero@mac+1,c
 16331  01225C  EC66  F0B9         	call	_mac_isAllZero	;wreg free
 16332  012260  0900               	iorlw	0
 16333  012262  B4D8               	btfsc	16344,2,c
 16334  012264  D005               	goto	l973
 16335  012266  0100               	movlb	0	; () banked
 16336  012268  058C               	decf	(arp_parseFromRXBuffer@arp+6)& (0+255),w,b
 16337  01226A  118D               	iorwf	(arp_parseFromRXBuffer@arp+7)& (0+255),w,b
 16338  01226C  B4D8               	btfsc	16344,2,c
 16339  01226E  D020               	goto	u13440
 16340  012270                     l973:
 16341                           
 16342                           ;arp.c: 116: if (ipv4_cmp(&arp.senderIPAddress, &arp.targetIPAddress) &&
 16343                           ;arp.c: 117: mac_cmp(&arp.senderMACAddress, &arp.targetMACAddress) &&
 16344                           ;arp.c: 118: arp.operation == ARP_REPLY) {
 16345                           
 16346                           ; BSR set to: 0
 16347  012270  0E94               	movlw	low (arp_parseFromRXBuffer@arp+14)
 16348  012272  6E16               	movwf	ipv4_cmp@a,c
 16349  012274  0E00               	movlw	high (arp_parseFromRXBuffer@arp+14)
 16350  012276  6E17               	movwf	ipv4_cmp@a+1,c
 16351  012278  0E9E               	movlw	low (arp_parseFromRXBuffer@arp+24)
 16352  01227A  6E18               	movwf	ipv4_cmp@b,c
 16353  01227C  0E00               	movlw	high (arp_parseFromRXBuffer@arp+24)
 16354  01227E  6E19               	movwf	ipv4_cmp@b+1,c
 16355  012280  EC49  F0B8         	call	_ipv4_cmp	;wreg free
 16356  012284  0900               	iorlw	0
 16357  012286  B4D8               	btfsc	16344,2,c
 16358  012288  D015               	goto	l975
 16359  01228A  0E8E               	movlw	low (arp_parseFromRXBuffer@arp+8)
 16360  01228C  6E16               	movwf	mac_cmp@a,c
 16361  01228E  0E00               	movlw	high (arp_parseFromRXBuffer@arp+8)
 16362  012290  6E17               	movwf	mac_cmp@a+1,c
 16363  012292  0E98               	movlw	low (arp_parseFromRXBuffer@arp+18)
 16364  012294  6E18               	movwf	mac_cmp@b,c
 16365  012296  0E00               	movlw	high (arp_parseFromRXBuffer@arp+18)
 16366  012298  6E19               	movwf	mac_cmp@b+1,c
 16367  01229A  EC29  F0B8         	call	_mac_cmp	;wreg free
 16368  01229E  0900               	iorlw	0
 16369  0122A0  B4D8               	btfsc	16344,2,c
 16370  0122A2  D008               	goto	l975
 16371  0122A4  0E02               	movlw	2
 16372  0122A6  0100               	movlb	0	; () banked
 16373  0122A8  198C               	xorwf	(arp_parseFromRXBuffer@arp+6)& (0+255),w,b
 16374  0122AA  118D               	iorwf	(arp_parseFromRXBuffer@arp+7)& (0+255),w,b
 16375  0122AC  A4D8               	btfss	16344,2,c
 16376  0122AE  D002               	goto	l975
 16377  0122B0                     u13440:
 16378                           
 16379                           ; BSR set to: 0
 16380                           ;arp.c: 119: arp.fIsGratuitous = 1;
 16381  0122B0  81A2               	bsf	(arp_parseFromRXBuffer@arp+28)& (0+255),0,b
 16382                           
 16383                           ;arp.c: 120: } else {
 16384  0122B2  D002               	goto	l976
 16385  0122B4                     l975:
 16386                           
 16387                           ;arp.c: 121: arp.fIsGratuitous = 0;
 16388  0122B4  0100               	movlb	0	; () banked
 16389  0122B6                     L20:
 16390  0122B6  91A2               	bcf	(arp_parseFromRXBuffer@arp+28)& (0+255),0,b
 16391  0122B8                     l976:
 16392                           
 16393                           ; BSR set to: 0
 16394                           ;arp.c: 122: }
 16395                           ;arp.c: 123: }
 16396                           ;arp.c: 124: }
 16397                           ;arp.c: 127: if ((arp.htype != ARP_HTYPE_ETHERNET) ||
 16398                           ;arp.c: 128: (arp.ptype != ARP_PTYPE_IPv4) ||
 16399                           ;arp.c: 129: (arp.operation > 2) ||
 16400                           ;arp.c: 130: (arp.hlen != 6u) ||
 16401                           ;arp.c: 131: (arp.plen != 4u)) {
 16402                           
 16403                           ; BSR set to: 0
 16404                           
 16405                           ; BSR set to: 0
 16406                           
 16407                           ; BSR set to: 0
 16408  0122B8  0586               	decf	arp_parseFromRXBuffer@arp& (0+255),w,b
 16409  0122BA  1187               	iorwf	(arp_parseFromRXBuffer@arp+1)& (0+255),w,b
 16410  0122BC  A4D8               	btfss	16344,2,c
 16411  0122BE  D013               	goto	u13490
 16412                           
 16413                           ; BSR set to: 0
 16414  0122C0  0E08               	movlw	8
 16415  0122C2  1989               	xorwf	(arp_parseFromRXBuffer@arp+3)& (0+255),w,b
 16416  0122C4  1188               	iorwf	(arp_parseFromRXBuffer@arp+2)& (0+255),w,b
 16417  0122C6  A4D8               	btfss	16344,2,c
 16418  0122C8  D00E               	goto	u13490
 16419                           
 16420                           ; BSR set to: 0
 16421  0122CA  518D               	movf	(arp_parseFromRXBuffer@arp+7)& (0+255),w,b
 16422  0122CC  E10C               	bnz	l10998
 16423  0122CE  0E03               	movlw	3
 16424  0122D0  5D8C               	subwf	(arp_parseFromRXBuffer@arp+6)& (0+255),w,b
 16425  0122D2  B0D8               	btfsc	16344,0,c
 16426  0122D4  D008               	goto	u13490
 16427                           
 16428                           ; BSR set to: 0
 16429  0122D6  0E06               	movlw	6
 16430  0122D8  198A               	xorwf	(arp_parseFromRXBuffer@arp+4)& (0+255),w,b
 16431  0122DA  A4D8               	btfss	16344,2,c
 16432  0122DC  D004               	goto	u13490
 16433                           
 16434                           ; BSR set to: 0
 16435  0122DE  0E04               	movlw	4
 16436  0122E0  198B               	xorwf	(arp_parseFromRXBuffer@arp+5)& (0+255),w,b
 16437  0122E2  B4D8               	btfsc	16344,2,c
 16438  0122E4  D004               	goto	l977
 16439  0122E6                     u13490:
 16440  0122E6                     l10998:
 16441                           
 16442                           ; BSR set to: 0
 16443                           ;arp.c: 132: arp.err.code = ERROR_ARP_INVALID_VALUES;
 16444  0122E6  0E01               	movlw	1
 16445  0122E8  6FA5               	movwf	(arp_parseFromRXBuffer@arp+31)& (0+255),b
 16446  0122EA  0E95               	movlw	149
 16447  0122EC  D003               	goto	L21
 16448  0122EE                     l977:
 16449                           
 16450                           ; BSR set to: 0
 16451                           ;arp.c: 135: arp.err.code = (uint16_t)0;
 16452                           
 16453                           ; BSR set to: 0
 16454  0122EE  0E00               	movlw	0
 16455  0122F0  6FA5               	movwf	(arp_parseFromRXBuffer@arp+31)& (0+255),b
 16456  0122F2  0E00               	movlw	0
 16457  0122F4                     L21:
 16458  0122F4  6FA4               	movwf	(arp_parseFromRXBuffer@arp+30)& (0+255),b
 16459                           
 16460                           ;arp.c: 136: arp.err.module = ERROR_MODULE_ARP;
 16461  0122F6  0E03               	movlw	3
 16462  0122F8  6FA3               	movwf	(arp_parseFromRXBuffer@arp+29)& (0+255),b
 16463                           
 16464                           ; BSR set to: 0
 16465                           ;arp.c: 137: }
 16466                           ;arp.c: 139: return arp;
 16467                           
 16468                           ; BSR set to: 0
 16469  0122FA  EE20  F086         	lfsr	2,arp_parseFromRXBuffer@arp
 16470  0122FE  EE00  F060         	lfsr	0,?_arp_parseFromRXBuffer
 16471  012302  0E1F               	movlw	31
 16472  012304                     u13501:
 16473  012304  006F FF6F FFEB     	movff	16347,16363
 16474  01230A  06E8               	decf	16360,f,c
 16475  01230C  E2FB               	bc	u13501
 16476  01230E  0012               	return	
 16477  012310                     __end_of_arp_parseFromRXBuffer:
 16478                           	opt stack 0
 16479                           
 16480 ;; *************** function _mac_isAllZero *****************
 16481 ;; Defined at:
 16482 ;;		line 31 in file "src/eth/mac.c"
 16483 ;; Parameters:    Size  Location     Type
 16484 ;;  mac             2   21[COMRAM] PTR struct macaddress
 16485 ;;		 -> arp_parseFromRXBuffer@arp(32), 
 16486 ;; Auto vars:     Size  Location     Type
 16487 ;;  i               1   23[COMRAM] unsigned char 
 16488 ;; Return value:  Size  Location     Type
 16489 ;;                  1    wreg      unsigned char 
 16490 ;; Registers used:
 16491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16492 ;; Tracked objects:
 16493 ;;		On entry : 0/0
 16494 ;;		On exit  : 0/0
 16495 ;;		Unchanged: 0/0
 16496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16500 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16501 ;;Total ram usage:        3 bytes
 16502 ;; Hardware stack levels used:    1
 16503 ;; Hardware stack levels required when called:    4
 16504 ;; This function calls:
 16505 ;;		Nothing
 16506 ;; This function is called by:
 16507 ;;		_arp_parseFromRXBuffer
 16508 ;; This function uses a non-reentrant model
 16509 ;;
 16510                           
 16511                           	psect	text58
 16512  0172CC                     __ptext58:
 16513                           	opt stack 0
 16514  0172CC                     _mac_isAllZero:
 16515                           	opt stack 22
 16516                           
 16517                           ;mac.c: 32: for (uint8_t i = 0; i < 6; i++) {
 16518                           
 16519                           ; BSR set to: 0
 16520                           ;incstack = 0
 16521  0172CC  0E00               	movlw	0
 16522  0172CE  6E18               	movwf	mac_isAllZero@i,c
 16523  0172D0                     l10580:
 16524  0172D0  0E05               	movlw	5
 16525  0172D2  6418               	cpfsgt	mac_isAllZero@i,c
 16526  0172D4  D001               	goto	l387
 16527  0172D6  D00F               	goto	u12320
 16528  0172D8                     l387:
 16529                           
 16530                           ;mac.c: 33: if (mac->address[i] != 0x00)
 16531  0172D8  5018               	movf	mac_isAllZero@i,w,c
 16532  0172DA  0D01               	mullw	1
 16533  0172DC  50F3               	movf	16371,w,c
 16534  0172DE  2416               	addwf	mac_isAllZero@mac,w,c
 16535  0172E0  6ED9               	movwf	16345,c
 16536  0172E2  50F4               	movf	16372,w,c
 16537  0172E4  2017               	addwfc	mac_isAllZero@mac+1,w,c
 16538  0172E6  6EDA               	movwf	16346,c
 16539  0172E8  50DF               	movf	16351,w,c
 16540  0172EA  B4D8               	btfsc	16344,2,c
 16541  0172EC  D002               	goto	l389
 16542                           
 16543                           ;mac.c: 34: return 0;
 16544  0172EE  0E00               	movlw	0
 16545  0172F0  0012               	return	
 16546  0172F2                     l389:
 16547  0172F2  2A18               	incf	mac_isAllZero@i,f,c
 16548  0172F4  D7ED               	goto	l10580
 16549  0172F6                     u12320:
 16550                           
 16551                           ;mac.c: 35: }
 16552                           ;mac.c: 36: return 1;
 16553  0172F6  0E01               	movlw	1
 16554  0172F8  0012               	return	
 16555  0172FA                     __end_of_mac_isAllZero:
 16556                           	opt stack 0
 16557                           
 16558 ;; *************** function _mac_cmp *****************
 16559 ;; Defined at:
 16560 ;;		line 39 in file "src/eth/mac.c"
 16561 ;; Parameters:    Size  Location     Type
 16562 ;;  a               2   21[COMRAM] PTR struct macaddress
 16563 ;;		 -> arp_table(112), arp_parseFromRXBuffer@arp(32), 
 16564 ;;  b               2   23[COMRAM] PTR struct macaddress
 16565 ;;		 -> arp_setNewEntry@mac(6), arp_parseFromRXBuffer@arp(32), 
 16566 ;; Auto vars:     Size  Location     Type
 16567 ;;  i               1   27[COMRAM] unsigned char 
 16568 ;; Return value:  Size  Location     Type
 16569 ;;                  1    wreg      unsigned char 
 16570 ;; Registers used:
 16571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16572 ;; Tracked objects:
 16573 ;;		On entry : 0/0
 16574 ;;		On exit  : 0/0
 16575 ;;		Unchanged: 0/0
 16576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16580 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16581 ;;Total ram usage:        7 bytes
 16582 ;; Hardware stack levels used:    1
 16583 ;; Hardware stack levels required when called:    4
 16584 ;; This function calls:
 16585 ;;		Nothing
 16586 ;; This function is called by:
 16587 ;;		_arp_parseFromRXBuffer
 16588 ;;		_arp_setNewEntry
 16589 ;; This function uses a non-reentrant model
 16590 ;;
 16591                           
 16592                           	psect	text59
 16593  017052                     __ptext59:
 16594                           	opt stack 0
 16595  017052                     _mac_cmp:
 16596                           	opt stack 22
 16597                           
 16598                           ;mac.c: 40: for (uint8_t i = 0; i < 6; i++) {
 16599                           
 16600                           ;incstack = 0
 16601  017052  0E00               	movlw	0
 16602  017054  6E1C               	movwf	mac_cmp@i,c
 16603  017056                     l10600:
 16604  017056  0E05               	movlw	5
 16605  017058  641C               	cpfsgt	mac_cmp@i,c
 16606  01705A  D001               	goto	l393
 16607  01705C  D018               	goto	u12350
 16608  01705E                     l393:
 16609                           
 16610                           ;mac.c: 41: if (a->address[i] != b->address[i])
 16611  01705E  501C               	movf	mac_cmp@i,w,c
 16612  017060  0D01               	mullw	1
 16613  017062  50F3               	movf	16371,w,c
 16614  017064  2418               	addwf	mac_cmp@b,w,c
 16615  017066  6ED9               	movwf	16345,c
 16616  017068  50F4               	movf	16372,w,c
 16617  01706A  2019               	addwfc	mac_cmp@b+1,w,c
 16618  01706C  6EDA               	movwf	16346,c
 16619  01706E  501C               	movf	mac_cmp@i,w,c
 16620  017070  0D01               	mullw	1
 16621  017072  50F3               	movf	16371,w,c
 16622  017074  2416               	addwf	mac_cmp@a,w,c
 16623  017076  6EE1               	movwf	16353,c
 16624  017078  50F4               	movf	16372,w,c
 16625  01707A  2017               	addwfc	mac_cmp@a+1,w,c
 16626  01707C  6EE2               	movwf	16354,c
 16627  01707E  50DE               	movf	16350,w,c
 16628  017080  18E6               	xorwf	16358,w,c
 16629  017082  B4D8               	btfsc	16344,2,c
 16630  017084  D002               	goto	l395
 16631                           
 16632                           ;mac.c: 42: return 0;
 16633  017086  0E00               	movlw	0
 16634  017088  0012               	return	
 16635  01708A                     l395:
 16636  01708A  2A1C               	incf	mac_cmp@i,f,c
 16637  01708C  D7E4               	goto	l10600
 16638  01708E                     u12350:
 16639                           
 16640                           ;mac.c: 43: }
 16641                           ;mac.c: 44: return 1;
 16642  01708E  0E01               	movlw	1
 16643  017090  0012               	return	
 16644  017092                     __end_of_mac_cmp:
 16645                           	opt stack 0
 16646                           
 16647 ;; *************** function _ipv4_isAllZero *****************
 16648 ;; Defined at:
 16649 ;;		line 432 in file "src/stack/protocols/ipv4.c"
 16650 ;; Parameters:    Size  Location     Type
 16651 ;;  ip              2   21[COMRAM] PTR struct ipv4_address
 16652 ;;		 -> arp_parseFromRXBuffer@arp(32), arp_handleNewPacket@arp(32), 
 16653 ;; Auto vars:     Size  Location     Type
 16654 ;;  i               1   23[COMRAM] unsigned char 
 16655 ;; Return value:  Size  Location     Type
 16656 ;;                  1    wreg      unsigned char 
 16657 ;; Registers used:
 16658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16659 ;; Tracked objects:
 16660 ;;		On entry : 0/0
 16661 ;;		On exit  : 0/0
 16662 ;;		Unchanged: 0/0
 16663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16667 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16668 ;;Total ram usage:        3 bytes
 16669 ;; Hardware stack levels used:    1
 16670 ;; Hardware stack levels required when called:    4
 16671 ;; This function calls:
 16672 ;;		Nothing
 16673 ;; This function is called by:
 16674 ;;		_arp_handleNewPacket
 16675 ;;		_arp_parseFromRXBuffer
 16676 ;; This function uses a non-reentrant model
 16677 ;;
 16678                           
 16679                           	psect	text60
 16680  0172FA                     __ptext60:
 16681                           	opt stack 0
 16682  0172FA                     _ipv4_isAllZero:
 16683                           	opt stack 23
 16684                           
 16685                           ;ipv4.c: 433: for (uint8_t i = 0; i < 4; i++) {
 16686                           
 16687                           ;incstack = 0
 16688  0172FA  0E00               	movlw	0
 16689  0172FC  6E18               	movwf	ipv4_isAllZero@i,c
 16690  0172FE                     l10632:
 16691  0172FE  0E03               	movlw	3
 16692  017300  6418               	cpfsgt	ipv4_isAllZero@i,c
 16693  017302  D001               	goto	l1231
 16694  017304  D00F               	goto	u12400
 16695  017306                     l1231:
 16696                           
 16697                           ;ipv4.c: 434: if (ip->address[i] != 0x00)
 16698  017306  5018               	movf	ipv4_isAllZero@i,w,c
 16699  017308  0D01               	mullw	1
 16700  01730A  50F3               	movf	16371,w,c
 16701  01730C  2416               	addwf	ipv4_isAllZero@ip,w,c
 16702  01730E  6ED9               	movwf	16345,c
 16703  017310  50F4               	movf	16372,w,c
 16704  017312  2017               	addwfc	ipv4_isAllZero@ip+1,w,c
 16705  017314  6EDA               	movwf	16346,c
 16706  017316  50DF               	movf	16351,w,c
 16707  017318  B4D8               	btfsc	16344,2,c
 16708  01731A  D002               	goto	l1233
 16709                           
 16710                           ;ipv4.c: 435: return 0;
 16711  01731C  0E00               	movlw	0
 16712  01731E  0012               	return	
 16713  017320                     l1233:
 16714  017320  2A18               	incf	ipv4_isAllZero@i,f,c
 16715  017322  D7ED               	goto	l10632
 16716  017324                     u12400:
 16717                           
 16718                           ;ipv4.c: 436: }
 16719                           ;ipv4.c: 437: return 1;
 16720  017324  0E01               	movlw	1
 16721  017326  0012               	return	
 16722  017328                     __end_of_ipv4_isAllZero:
 16723                           	opt stack 0
 16724                           
 16725 ;; *************** function _ethernetController_streamFromRXBuffer *****************
 16726 ;; Defined at:
 16727 ;;		line 350 in file "src/enc424j600/ENC424J600.c"
 16728 ;; Parameters:    Size  Location     Type
 16729 ;;  startEnd        1    wreg     unsigned char 
 16730 ;;  startAddress    2   36[COMRAM] unsigned int 
 16731 ;; Auto vars:     Size  Location     Type
 16732 ;;  startEnd        1   38[COMRAM] unsigned char 
 16733 ;;  temp            1   40[COMRAM] unsigned char 
 16734 ;;  opcode          1   39[COMRAM] unsigned char 
 16735 ;; Return value:  Size  Location     Type
 16736 ;;                  1    wreg      unsigned char 
 16737 ;; Registers used:
 16738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16739 ;; Tracked objects:
 16740 ;;		On entry : 0/0
 16741 ;;		On exit  : 0/0
 16742 ;;		Unchanged: 0/0
 16743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16744 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16745 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16747 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16748 ;;Total ram usage:        5 bytes
 16749 ;; Hardware stack levels used:    1
 16750 ;; Hardware stack levels required when called:    7
 16751 ;; This function calls:
 16752 ;;		_enc424j600_readSPI
 16753 ;;		_enc424j600_setERXDATAReadPointer
 16754 ;;		_enc424j600_writeSPI
 16755 ;; This function is called by:
 16756 ;;		_arp_parseFromRXBuffer
 16757 ;;		_ipv4_parseHeader
 16758 ;;		_icmp_handleNewPacket
 16759 ;;		_icmp_parseHeader
 16760 ;;		_icmp_sendEchoReply
 16761 ;;		_tcp_parseHeader
 16762 ;; This function uses a non-reentrant model
 16763 ;;
 16764                           
 16765                           	psect	text61
 16766  016C8E                     __ptext61:
 16767                           	opt stack 0
 16768  016C8E                     _ethernetController_streamFromRXBuffer:
 16769                           	opt stack 18
 16770                           
 16771                           ;incstack = 0
 16772                           ;ethernetController_streamFromRXBuffer@startEnd stored from wreg
 16773  016C8E  6E27               	movwf	ethernetController_streamFromRXBuffer@startEnd,c
 16774                           
 16775                           ;ENC424J600.c: 351: uint8_t temp;
 16776                           ;ENC424J600.c: 352: uint8_t opcode;
 16777                           ;ENC424J600.c: 353: switch (startEnd) {
 16778  016C90  D020               	goto	l180
 16779  016C92                     
 16780                           ;ENC424J600.c: 355: enc424j600_setERXDATAReadPointer(startAddress);
 16781  016C92  0060  F094  F020   	movff	ethernetController_streamFromRXBuffer@startAddress,enc424j600_setERXDATAReadPoint
      +                          er@addr
 16782  016C98  0060  F098  F021   	movff	ethernetController_streamFromRXBuffer@startAddress+1,enc424j600_setERXDATAReadPoi
      +                          nter@addr+1
 16783  016C9E  EC87  F0B8         	call	_enc424j600_setERXDATAReadPointer	;wreg free
 16784                           
 16785                           ;ENC424J600.c: 356: opcode = 0x2C;
 16786  016CA2  0E2C               	movlw	44
 16787  016CA4  6E28               	movwf	ethernetController_streamFromRXBuffer@opcode,c
 16788                           
 16789                           ;ENC424J600.c: 357: PORTBbits.RB4=0;
 16790  016CA6  013F               	movlb	63	; () banked
 16791  016CA8  99CB               	bcf	203,4,b	;volatile
 16792                           
 16793                           ; BSR set to: 63
 16794                           ;ENC424J600.c: 358: enc424j600_writeSPI(&opcode);
 16795  016CAA  0E28               	movlw	low ethernetController_streamFromRXBuffer@opcode
 16796  016CAC  6E16               	movwf	enc424j600_writeSPI@data,c
 16797  016CAE  0E00               	movlw	high ethernetController_streamFromRXBuffer@opcode
 16798  016CB0  6E17               	movwf	enc424j600_writeSPI@data+1,c
 16799  016CB2  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 16800                           
 16801                           ;ENC424J600.c: 359: return 0;
 16802  016CB6  0E00               	movlw	0
 16803  016CB8  0012               	return	
 16804  016CBA                     
 16805                           ;ENC424J600.c: 361: enc424j600_readSPI(&temp);
 16806  016CBA  0E29               	movlw	low ethernetController_streamFromRXBuffer@temp
 16807  016CBC  6E16               	movwf	enc424j600_readSPI@data,c
 16808  016CBE  0E00               	movlw	high ethernetController_streamFromRXBuffer@temp
 16809  016CC0  6E17               	movwf	enc424j600_readSPI@data+1,c
 16810  016CC2  ECB3  F0B3         	call	_enc424j600_readSPI	;wreg free
 16811                           
 16812                           ;ENC424J600.c: 362: return temp;
 16813  016CC6  5029               	movf	ethernetController_streamFromRXBuffer@temp,w,c
 16814  016CC8  0012               	return	
 16815  016CCA                     l184:
 16816                           
 16817                           ;ENC424J600.c: 364: PORTBbits.RB4=1;
 16818  016CCA  013F               	movlb	63	; () banked
 16819  016CCC  89CB               	bsf	203,4,b	;volatile
 16820                           
 16821                           ; BSR set to: 63
 16822                           ;ENC424J600.c: 374: return 0;
 16823  016CCE  0E00               	movlw	0
 16824                           
 16825                           ; BSR set to: 63
 16826  016CD0  0012               	return	
 16827  016CD2                     l180:
 16828                           
 16829                           ; BSR set to: 63
 16830  016CD2  5027               	movf	ethernetController_streamFromRXBuffer@startEnd,w,c
 16831                           
 16832                           ; Switch size 1, requested type "space"
 16833                           ; Number of cases is 3, Range of values is 0 to 2
 16834                           ; switch strategies available:
 16835                           ; Name         Instructions Cycles
 16836                           ; simple_byte           10     6 (average)
 16837                           ;	Chosen strategy is simple_byte
 16838  016CD4  0A00               	xorlw	0	; case 0
 16839  016CD6  B4D8               	btfsc	16344,2,c
 16840  016CD8  D7DC               	goto	l181
 16841  016CDA  0A01               	xorlw	1	; case 1
 16842  016CDC  B4D8               	btfsc	16344,2,c
 16843  016CDE  D7ED               	goto	l183
 16844  016CE0  0A03               	xorlw	3	; case 2
 16845  016CE2  B4D8               	btfsc	16344,2,c
 16846  016CE4  D7F2               	goto	l184
 16847                           
 16848                           ;ENC424J600.c: 376: return 0;
 16849  016CE6  0E00               	movlw	0
 16850  016CE8  0012               	return	
 16851  016CEA                     __end_of_ethernetController_streamFromRXBuffer:
 16852                           	opt stack 0
 16853                           
 16854 ;; *************** function _UART_setFormat *****************
 16855 ;; Defined at:
 16856 ;;		line 53 in file "src/system/uart.c"
 16857 ;; Parameters:    Size  Location     Type
 16858 ;;  color           1    wreg     unsigned char 
 16859 ;; Auto vars:     Size  Location     Type
 16860 ;;  color           1   15[BANK0 ] unsigned char 
 16861 ;; Return value:  Size  Location     Type
 16862 ;;                  1    wreg      void 
 16863 ;; Registers used:
 16864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16865 ;; Tracked objects:
 16866 ;;		On entry : 0/0
 16867 ;;		On exit  : 0/0
 16868 ;;		Unchanged: 0/0
 16869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16871 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16873 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16874 ;;Total ram usage:        1 bytes
 16875 ;; Hardware stack levels used:    1
 16876 ;; Hardware stack levels required when called:    5
 16877 ;; This function calls:
 16878 ;;		_UARTTransmitText
 16879 ;; This function is called by:
 16880 ;;		_ethernet_rxGetNewFrame
 16881 ;;		_handleStackBackgroundTasks
 16882 ;;		_main
 16883 ;; This function uses a non-reentrant model
 16884 ;;
 16885                           
 16886                           	psect	text62
 16887  0160CE                     __ptext62:
 16888                           	opt stack 0
 16889  0160CE                     _UART_setFormat:
 16890                           	opt stack 23
 16891                           
 16892                           ;incstack = 0
 16893                           ;UART_setFormat@color stored from wreg
 16894  0160CE  0100               	movlb	0	; () banked
 16895  0160D0  6F6F               	movwf	UART_setFormat@color& (0+255),b
 16896                           
 16897                           ;uart.c: 54: switch (color) {
 16898  0160D2  D038               	goto	l822
 16899  0160D4                     
 16900                           ;uart.c: 56: UARTTransmitText("\033[41;10;10m");
 16901  0160D4  0EE2               	movlw	low STR_65
 16902  0160D6  0100               	movlb	0	; () banked
 16903  0160D8  6F6D               	movwf	UARTTransmitText@str& (0+255),b
 16904  0160DA  0EFE               	movlw	high STR_65
 16905  0160DC  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16906  0160DE  EC44  F0B5         	call	_UARTTransmitText	;wreg free
 16907                           
 16908                           ;uart.c: 57: break;
 16909  0160E2  0012               	return	
 16910  0160E4                     
 16911                           ;uart.c: 59: UARTTransmitText("\033[42;30;10m");
 16912  0160E4  0E06               	movlw	low STR_66
 16913  0160E6  0100               	movlb	0	; () banked
 16914  0160E8  6F6D               	movwf	UARTTransmitText@str& (0+255),b
 16915  0160EA  0EFF               	movlw	high STR_66
 16916  0160EC  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16917  0160EE  EC44  F0B5         	call	_UARTTransmitText	;wreg free
 16918                           
 16919                           ;uart.c: 60: break;
 16920  0160F2  0012               	return	
 16921  0160F4                     
 16922                           ;uart.c: 62: UARTTransmitText("\033[44;10;10m");
 16923  0160F4  0EEE               	movlw	low STR_67
 16924  0160F6  0100               	movlb	0	; () banked
 16925  0160F8  6F6D               	movwf	UARTTransmitText@str& (0+255),b
 16926  0160FA  0EFE               	movlw	high STR_67
 16927  0160FC  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16928  0160FE  EC44  F0B5         	call	_UARTTransmitText	;wreg free
 16929                           
 16930                           ;uart.c: 63: break;
 16931  016102  0012               	return	
 16932  016104                     
 16933                           ;uart.c: 65: UARTTransmitText("\033[45;10;10m");
 16934  016104  0EFA               	movlw	low STR_68
 16935  016106  0100               	movlb	0	; () banked
 16936  016108  6F6D               	movwf	UARTTransmitText@str& (0+255),b
 16937  01610A  0EFE               	movlw	high STR_68
 16938  01610C  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16939  01610E  EC44  F0B5         	call	_UARTTransmitText	;wreg free
 16940                           
 16941                           ;uart.c: 66: break;
 16942  016112  0012               	return	
 16943  016114                     
 16944                           ;uart.c: 68: UARTTransmitText("\033[46;30;10m");
 16945  016114  0E12               	movlw	low STR_69
 16946  016116  0100               	movlb	0	; () banked
 16947  016118  6F6D               	movwf	UARTTransmitText@str& (0+255),b
 16948  01611A  0EFF               	movlw	high STR_69
 16949  01611C  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16950  01611E  EC44  F0B5         	call	_UARTTransmitText	;wreg free
 16951                           
 16952                           ;uart.c: 69: break;
 16953  016122  0012               	return	
 16954  016124                     
 16955                           ;uart.c: 71: UARTTransmitText("\033[103;30;10m");
 16956  016124  0EBB               	movlw	low STR_70
 16957  016126  0100               	movlb	0	; () banked
 16958  016128  6F6D               	movwf	UARTTransmitText@str& (0+255),b
 16959  01612A  0EFE               	movlw	high STR_70
 16960  01612C  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16961  01612E  EC44  F0B5         	call	_UARTTransmitText	;wreg free
 16962                           
 16963                           ;uart.c: 74: break;
 16964                           
 16965                           ;uart.c: 73: case UART_COLOR_FG_YELLOW:
 16966                           
 16967                           ;uart.c: 72: break;
 16968  016132  0012               	return	
 16969  016134                     
 16970                           ;uart.c: 76: UARTTransmitText("\033[94;4;10m");
 16971  016134  0E42               	movlw	low STR_71
 16972  016136  0100               	movlb	0	; () banked
 16973  016138  6F6D               	movwf	UARTTransmitText@str& (0+255),b
 16974  01613A  0EFF               	movlw	high STR_71
 16975  01613C  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16976  01613E  EC44  F0B5         	call	_UARTTransmitText	;wreg free
 16977                           
 16978                           ;uart.c: 78: }
 16979                           
 16980                           ;uart.c: 77: break;
 16981  016142  0012               	return	
 16982  016144                     l822:
 16983  016144  0100               	movlb	0	; () banked
 16984  016146  516F               	movf	UART_setFormat@color& (0+255),w,b
 16985                           
 16986                           ; Switch size 1, requested type "space"
 16987                           ; Number of cases is 8, Range of values is 0 to 7
 16988                           ; switch strategies available:
 16989                           ; Name         Instructions Cycles
 16990                           ; simple_byte           25    13 (average)
 16991                           ;	Chosen strategy is simple_byte
 16992  016148  0A00               	xorlw	0	; case 0
 16993  01614A  B4D8               	btfsc	16344,2,c
 16994  01614C  D7C3               	goto	l823
 16995  01614E  0A01               	xorlw	1	; case 1
 16996  016150  B4D8               	btfsc	16344,2,c
 16997  016152  D7C8               	goto	l825
 16998  016154  0A03               	xorlw	3	; case 2
 16999  016156  B4D8               	btfsc	16344,2,c
 17000  016158  D7CD               	goto	l826
 17001  01615A  0A01               	xorlw	1	; case 3
 17002  01615C  B4D8               	btfsc	16344,2,c
 17003  01615E  D7E2               	goto	l829
 17004  016160  0A07               	xorlw	7	; case 4
 17005  016162  B4D8               	btfsc	16344,2,c
 17006  016164  D7CF               	goto	l827
 17007  016166  0A01               	xorlw	1	; case 5
 17008  016168  B4D8               	btfsc	16344,2,c
 17009  01616A  D7D4               	goto	l828
 17010  01616C  0A03               	xorlw	3	; case 6
 17011  01616E  B4D8               	btfsc	16344,2,c
 17012  016170  0012               	return	
 17013  016172  0A01               	xorlw	1	; case 7
 17014  016174  A4D8               	btfss	16344,2,c
 17015  016176  0012               	return	
 17016  016178  D7DD               	goto	l831
 17017  01617A                     __end_of_UART_setFormat:
 17018                           	opt stack 0
 17019                           
 17020 ;; *************** function _UART_resetFormat *****************
 17021 ;; Defined at:
 17022 ;;		line 49 in file "src/system/uart.c"
 17023 ;; Parameters:    Size  Location     Type
 17024 ;;		None
 17025 ;; Auto vars:     Size  Location     Type
 17026 ;;		None
 17027 ;; Return value:  Size  Location     Type
 17028 ;;                  1    wreg      void 
 17029 ;; Registers used:
 17030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17031 ;; Tracked objects:
 17032 ;;		On entry : 0/0
 17033 ;;		On exit  : 0/0
 17034 ;;		Unchanged: 0/0
 17035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17040 ;;Total ram usage:        0 bytes
 17041 ;; Hardware stack levels used:    1
 17042 ;; Hardware stack levels required when called:    5
 17043 ;; This function calls:
 17044 ;;		_UARTTransmitText
 17045 ;; This function is called by:
 17046 ;;		_ethernet_rxGetNewFrame
 17047 ;;		_handleStackBackgroundTasks
 17048 ;;		_main
 17049 ;; This function uses a non-reentrant model
 17050 ;;
 17051                           
 17052                           	psect	text63
 17053  0176EE                     __ptext63:
 17054                           	opt stack 0
 17055  0176EE                     _UART_resetFormat:
 17056                           	opt stack 23
 17057                           
 17058                           ;uart.c: 50: UARTTransmitText("\033[0m");
 17059                           
 17060                           ;incstack = 0
 17061  0176EE  0ECB               	movlw	low STR_64
 17062  0176F0  0100               	movlb	0	; () banked
 17063  0176F2  6F6D               	movwf	UARTTransmitText@str& (0+255),b
 17064  0176F4  0EFF               	movlw	high STR_64
 17065  0176F6  6F6E               	movwf	(UARTTransmitText@str+1)& (0+255),b
 17066  0176F8  EC44  F0B5         	call	_UARTTransmitText	;wreg free
 17067  0176FC  0012               	return		;funcret
 17068  0176FE                     __end_of_UART_resetFormat:
 17069                           	opt stack 0
 17070                           
 17071 ;; *************** function _UARTTransmitText *****************
 17072 ;; Defined at:
 17073 ;;		line 42 in file "src/system/uart.c"
 17074 ;; Parameters:    Size  Location     Type
 17075 ;;  str             2   13[BANK0 ] PTR const unsigned char 
 17076 ;;		 -> STR_131(2), STR_130(5), STR_129(2), STR_128(4), 
 17077 ;;		 -> STR_127(8), STR_126(26), STR_125(15), STR_124(28), 
 17078 ;;		 -> STR_123(6), STR_122(6), STR_121(6), STR_120(6), 
 17079 ;;		 -> STR_119(6), STR_118(6), STR_117(6), STR_116(6), 
 17080 ;;		 -> STR_115(5), STR_114(2), STR_113(7), STR_112(5), 
 17081 ;;		 -> STR_111(2), STR_80(3), arpEntryToString@string(50), ipAdressToString@address(20), 
 17082 ;;		 -> STR_75(18), STR_74(4), STR_73(5), macToString@address(20), 
 17083 ;;		 -> intToString@number(10), STR_72(50), STR_71(11), STR_70(13), 
 17084 ;;		 -> STR_69(12), STR_68(12), STR_67(12), STR_66(12), 
 17085 ;;		 -> STR_65(12), STR_64(5), STR_63(19), STR_62(13), 
 17086 ;;		 -> STR_61(8), STR_60(3), STR_59(12), STR_58(4), 
 17087 ;;		 -> STR_57(9), STR_56(2), STR_55(12), STR_54(26), 
 17088 ;;		 -> STR_53(54), STR_52(4), STR_51(53), STR_50(4), 
 17089 ;;		 -> STR_49(51), STR_48(4), STR_47(50), STR_46(4), 
 17090 ;;		 -> STR_45(2), STR_29(3), STR_28(37), STR_27(37), 
 17091 ;;		 -> STR_26(3), STR_25(27), STR_24(3), STR_23(21), 
 17092 ;;		 -> STR_22(3), STR_21(3), STR_20(5), STR_19(3), 
 17093 ;;		 -> STR_18(60), STR_17(4), STR_16(3), STR_15(3), 
 17094 ;;		 -> STR_14(5), STR_13(3), STR_12(3), STR_11(3), 
 17095 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
 17096 ;;		 -> STR_6(2), STR_5(16), STR_4(10), STR_3(12), 
 17097 ;;		 -> STR_2(2), STR_1(2), ethernetController_getDeviceName@string(11), 
 17098 ;; Auto vars:     Size  Location     Type
 17099 ;;		None
 17100 ;; Return value:  Size  Location     Type
 17101 ;;                  1    wreg      void 
 17102 ;; Registers used:
 17103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 17104 ;; Tracked objects:
 17105 ;;		On entry : 0/0
 17106 ;;		On exit  : 0/0
 17107 ;;		Unchanged: 0/0
 17108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17112 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17113 ;;Total ram usage:        2 bytes
 17114 ;; Hardware stack levels used:    1
 17115 ;; Hardware stack levels required when called:    4
 17116 ;; This function calls:
 17117 ;;		Nothing
 17118 ;; This function is called by:
 17119 ;;		_ethernet_rxGetNewFrame
 17120 ;;		_handleStackBackgroundTasks
 17121 ;;		_main
 17122 ;;		_printEthernetState
 17123 ;;		_UART_resetFormat
 17124 ;;		_UART_setFormat
 17125 ;;		_tcp_handleNewPacket
 17126 ;;		_tcp_stateMachine
 17127 ;;		_tcp_listen
 17128 ;;		_tcp_sendSYNACK
 17129 ;;		_printArpTable
 17130 ;; This function uses a non-reentrant model
 17131 ;;
 17132                           
 17133                           	psect	text64
 17134  016A88                     __ptext64:
 17135                           	opt stack 0
 17136  016A88                     _UARTTransmitText:
 17137                           	opt stack 25
 17138                           
 17139                           ;uart.c: 43: while (*str) {
 17140                           
 17141                           ;incstack = 0
 17142  016A88  D01D               	goto	u11700
 17143  016A8A                     
 17144                           ;uart.c: 44: U1TXB = *str++;
 17145  016A8A  0060  F1B7  FFF6   	movff	UARTTransmitText@str,16374
 17146  016A90  0060  F1BB  FFF7   	movff	UARTTransmitText@str+1,16375
 17147  016A96  0E00               	movlw	low (__mediumconst shr (0+16))
 17148  016A98  6EF8               	movwf	16376,c
 17149  016A9A  0E1F               	movlw	(high __ramtop+-1)
 17150  016A9C  64F7               	cpfsgt	16375,c
 17151  016A9E  D003               	bra	u11697
 17152  016AA0  0008               	tblrd		*
 17153  016AA2  50F5               	movf	16373,w,c
 17154  016AA4  D007               	bra	u11690
 17155  016AA6                     u11697:
 17156  016AA6  006F FFDB FFE9     	movff	16374,16361
 17157  016AAC  006F FFDF FFEA     	movff	16375,16362
 17158  016AB2  50EF               	movf	16367,w,c
 17159  016AB4                     u11690:
 17160  016AB4  013D               	movlb	61	; () banked
 17161  016AB6  6FEA               	movwf	234,b	;volatile
 17162                           
 17163                           ; BSR set to: 61
 17164  016AB8  0100               	movlb	0	; () banked
 17165  016ABA  4B6D               	infsnz	UARTTransmitText@str& (0+255),f,b
 17166  016ABC  2B6E               	incf	(UARTTransmitText@str+1)& (0+255),f,b
 17167  016ABE                     
 17168                           ; BSR set to: 0
 17169  016ABE  013D               	movlb	61	; () banked
 17170  016AC0  B9F7               	btfsc	247,4,b	;volatile
 17171  016AC2  D7FD               	goto	l813
 17172  016AC4                     u11700:
 17173                           
 17174                           ; BSR set to: 61
 17175                           
 17176                           ; BSR set to: 61
 17177  016AC4  0060  F1B7  FFF6   	movff	UARTTransmitText@str,16374
 17178  016ACA  0060  F1BB  FFF7   	movff	UARTTransmitText@str+1,16375
 17179  016AD0  0E00               	movlw	low (__mediumconst shr (0+16))
 17180  016AD2  6EF8               	movwf	16376,c
 17181  016AD4  0E1F               	movlw	(high __ramtop+-1)
 17182  016AD6  64F7               	cpfsgt	16375,c
 17183  016AD8  D003               	bra	u11717
 17184  016ADA  0008               	tblrd		*
 17185  016ADC  50F5               	movf	16373,w,c
 17186  016ADE  D007               	bra	u11710
 17187  016AE0                     u11717:
 17188  016AE0  006F FFDB FFE9     	movff	16374,16361
 17189  016AE6  006F FFDF FFEA     	movff	16375,16362
 17190  016AEC  50EF               	movf	16367,w,c
 17191  016AEE                     u11710:
 17192  016AEE  0900               	iorlw	0
 17193  016AF0  B4D8               	btfsc	16344,2,c
 17194  016AF2  0012               	return	
 17195  016AF4  D7CA               	goto	l811
 17196  016AF6                     __end_of_UARTTransmitText:
 17197                           	opt stack 0
 17198                           
 17199 ;; *************** function _ethernetController_updateLinkStatus *****************
 17200 ;; Defined at:
 17201 ;;		line 394 in file "src/enc424j600/ENC424J600.c"
 17202 ;; Parameters:    Size  Location     Type
 17203 ;;  state           2    0[BANK0 ] PTR struct ethernetConne
 17204 ;;		 -> stack(124), 
 17205 ;; Auto vars:     Size  Location     Type
 17206 ;;  temp16          2    3[BANK0 ] unsigned int 
 17207 ;;  temp            1    2[BANK0 ] unsigned char 
 17208 ;; Return value:  Size  Location     Type
 17209 ;;                  1    wreg      void 
 17210 ;; Registers used:
 17211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17212 ;; Tracked objects:
 17213 ;;		On entry : 0/0
 17214 ;;		On exit  : 0/0
 17215 ;;		Unchanged: 0/0
 17216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17217 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17218 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17220 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17221 ;;Total ram usage:        5 bytes
 17222 ;; Hardware stack levels used:    1
 17223 ;; Hardware stack levels required when called:    8
 17224 ;; This function calls:
 17225 ;;		_enc424j600_readControlRegisterUnbanked
 17226 ;;		_enc424j600_readPHYRegister
 17227 ;; This function is called by:
 17228 ;;		_handleStackBackgroundTasks
 17229 ;; This function uses a non-reentrant model
 17230 ;;
 17231                           
 17232                           	psect	text65
 17233  0162B0                     __ptext65:
 17234                           	opt stack 0
 17235  0162B0                     _ethernetController_updateLinkStatus:
 17236                           	opt stack 21
 17237                           
 17238                           ;ENC424J600.c: 395: uint8_t temp;
 17239                           ;ENC424J600.c: 396: uint16_t temp16;
 17240                           ;ENC424J600.c: 397: enc424j600_readControlRegisterUnbanked(0x1B, &temp);
 17241                           
 17242                           ;incstack = 0
 17243  0162B0  0E62               	movlw	low ethernetController_updateLinkStatus@temp
 17244  0162B2  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 17245  0162B4  0E00               	movlw	high ethernetController_updateLinkStatus@temp
 17246  0162B6  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 17247  0162B8  0E1B               	movlw	27
 17248  0162BA  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 17249                           
 17250                           ;ENC424J600.c: 398: if (temp & 0x01) {
 17251  0162BE  0100               	movlb	0	; () banked
 17252  0162C0  A162               	btfss	ethernetController_updateLinkStatus@temp& (0+255),0,b
 17253  0162C2  D008               	goto	l196
 17254                           
 17255                           ; BSR set to: 0
 17256                           ;ENC424J600.c: 399: state->link = LINK_ESTABLISHED;
 17257  0162C4  0060  F183  FFD9   	movff	ethernetController_updateLinkStatus@state,16345
 17258  0162CA  0060  F187  FFDA   	movff	ethernetController_updateLinkStatus@state+1,16346
 17259  0162D0  0E01               	movlw	1
 17260  0162D2  D007               	goto	L22
 17261  0162D4                     l196:
 17262                           
 17263                           ; BSR set to: 0
 17264                           ;ENC424J600.c: 401: state->link = NO_LINK;
 17265                           
 17266                           ; BSR set to: 0
 17267  0162D4  0060  F183  FFD9   	movff	ethernetController_updateLinkStatus@state,16345
 17268  0162DA  0060  F187  FFDA   	movff	ethernetController_updateLinkStatus@state+1,16346
 17269  0162E0  0E00               	movlw	0
 17270  0162E2                     L22:
 17271  0162E2  6EDF               	movwf	16351,c
 17272                           
 17273                           ; BSR set to: 0
 17274                           ;ENC424J600.c: 402: }
 17275                           ;ENC424J600.c: 404: enc424j600_readPHYRegister(0x1F, &temp16);
 17276                           
 17277                           ; BSR set to: 0
 17278  0162E4  0E63               	movlw	low ethernetController_updateLinkStatus@temp16
 17279  0162E6  6E24               	movwf	enc424j600_readPHYRegister@data,c
 17280  0162E8  0E00               	movlw	high ethernetController_updateLinkStatus@temp16
 17281  0162EA  6E25               	movwf	enc424j600_readPHYRegister@data+1,c
 17282  0162EC  0E1F               	movlw	31
 17283  0162EE  EC30  F0AA         	call	_enc424j600_readPHYRegister
 17284                           
 17285                           ;ENC424J600.c: 406: if (temp16 & (1 << 3)) {
 17286  0162F2  0100               	movlb	0	; () banked
 17287  0162F4  A763               	btfss	ethernetController_updateLinkStatus@temp16& (0+255),3,b
 17288  0162F6  D008               	goto	l198
 17289                           
 17290                           ; BSR set to: 0
 17291                           ;ENC424J600.c: 407: state->speed = HUNDRED_MBIT;
 17292  0162F8  EE20 F001          	lfsr	2,1
 17293  0162FC  5160               	movf	ethernetController_updateLinkStatus@state& (0+255),w,b
 17294  0162FE  26D9               	addwf	16345,f,c
 17295  016300  5161               	movf	(ethernetController_updateLinkStatus@state+1)& (0+255),w,b
 17296  016302  22DA               	addwfc	16346,f,c
 17297  016304  0E01               	movlw	1
 17298  016306  D007               	goto	L23
 17299  016308                     l198:
 17300                           
 17301                           ; BSR set to: 0
 17302                           ;ENC424J600.c: 409: state->speed = TEN_MBIT;
 17303                           
 17304                           ; BSR set to: 0
 17305  016308  EE20 F001          	lfsr	2,1
 17306  01630C  5160               	movf	ethernetController_updateLinkStatus@state& (0+255),w,b
 17307  01630E  26D9               	addwf	16345,f,c
 17308  016310  5161               	movf	(ethernetController_updateLinkStatus@state+1)& (0+255),w,b
 17309  016312  22DA               	addwfc	16346,f,c
 17310  016314  0E00               	movlw	0
 17311  016316                     L23:
 17312  016316  6EDF               	movwf	16351,c
 17313                           
 17314                           ; BSR set to: 0
 17315                           ;ENC424J600.c: 410: }
 17316                           ;ENC424J600.c: 412: if (temp16 & (1 << 4)) {
 17317                           
 17318                           ; BSR set to: 0
 17319  016318  A963               	btfss	ethernetController_updateLinkStatus@temp16& (0+255),4,b
 17320  01631A  D009               	goto	l200
 17321                           
 17322                           ; BSR set to: 0
 17323                           ;ENC424J600.c: 413: state->duplex = FULL_DUPLEX;
 17324  01631C  EE20 F002          	lfsr	2,2
 17325  016320  5160               	movf	ethernetController_updateLinkStatus@state& (0+255),w,b
 17326  016322  26D9               	addwf	16345,f,c
 17327  016324  5161               	movf	(ethernetController_updateLinkStatus@state+1)& (0+255),w,b
 17328  016326  22DA               	addwfc	16346,f,c
 17329  016328  0E01               	movlw	1
 17330  01632A  6EDF               	movwf	16351,c
 17331                           
 17332                           ;ENC424J600.c: 414: } else {
 17333  01632C  0012               	return	
 17334  01632E                     l200:
 17335                           
 17336                           ; BSR set to: 0
 17337                           ;ENC424J600.c: 415: state->duplex = HALF_DUPLEX;
 17338                           
 17339                           ; BSR set to: 0
 17340  01632E  EE20 F002          	lfsr	2,2
 17341  016332  5160               	movf	ethernetController_updateLinkStatus@state& (0+255),w,b
 17342  016334  26D9               	addwf	16345,f,c
 17343  016336  5161               	movf	(ethernetController_updateLinkStatus@state+1)& (0+255),w,b
 17344  016338  22DA               	addwfc	16346,f,c
 17345  01633A  0E00               	movlw	0
 17346  01633C  6EDF               	movwf	16351,c
 17347  01633E  0012               	return	
 17348  016340                     __end_of_ethernetController_updateLinkStatus:
 17349                           	opt stack 0
 17350                           
 17351 ;; *************** function _enc424j600_readPHYRegister *****************
 17352 ;; Defined at:
 17353 ;;		line 556 in file "src/enc424j600/ENC424J600.c"
 17354 ;; Parameters:    Size  Location     Type
 17355 ;;  addr            1    wreg     unsigned char 
 17356 ;;  data            2   35[COMRAM] PTR unsigned int 
 17357 ;;		 -> ethernetController_updateLinkStatus@temp16(2), 
 17358 ;; Auto vars:     Size  Location     Type
 17359 ;;  addr            1   43[COMRAM] unsigned char 
 17360 ;;  timeoutCount    4   46[COMRAM] unsigned long 
 17361 ;;  temp            1   52[COMRAM] unsigned char 
 17362 ;;  highByte        1   51[COMRAM] unsigned char 
 17363 ;;  lowByte         1   50[COMRAM] unsigned char 
 17364 ;;  unusedBits      1   45[COMRAM] unsigned char 
 17365 ;;  PHYaddress      1   44[COMRAM] unsigned char 
 17366 ;; Return value:  Size  Location     Type
 17367 ;;                  1    wreg      void 
 17368 ;; Registers used:
 17369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17370 ;; Tracked objects:
 17371 ;;		On entry : 0/0
 17372 ;;		On exit  : 0/0
 17373 ;;		Unchanged: 0/0
 17374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17376 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17377 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17378 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17379 ;;Total ram usage:       18 bytes
 17380 ;; Hardware stack levels used:    1
 17381 ;; Hardware stack levels required when called:    7
 17382 ;; This function calls:
 17383 ;;		_enc424j600_readControlRegisterUnbanked
 17384 ;;		_enc424j600_writeControlRegisterUnbanked
 17385 ;; This function is called by:
 17386 ;;		_ethernetController_updateLinkStatus
 17387 ;; This function uses a non-reentrant model
 17388 ;;
 17389                           
 17390                           	psect	text66
 17391  015460                     __ptext66:
 17392                           	opt stack 0
 17393  015460                     _enc424j600_readPHYRegister:
 17394                           	opt stack 21
 17395                           
 17396                           ; BSR set to: 0
 17397                           ;incstack = 0
 17398                           ;enc424j600_readPHYRegister@addr stored from wreg
 17399  015460  6E2C               	movwf	enc424j600_readPHYRegister@addr,c
 17400                           
 17401                           ;ENC424J600.c: 558: uint8_t PHYaddress = addr & 0x1F;
 17402  015462  502C               	movf	enc424j600_readPHYRegister@addr,w,c
 17403  015464  0B1F               	andlw	31
 17404  015466  6E2D               	movwf	enc424j600_readPHYRegister@PHYaddress,c
 17405                           
 17406                           ;ENC424J600.c: 559: uint8_t unusedBits = 0x01;
 17407  015468  0E01               	movlw	1
 17408  01546A  6E2E               	movwf	enc424j600_readPHYRegister@unusedBits,c
 17409                           
 17410                           ;ENC424J600.c: 560: uint8_t temp;
 17411                           ;ENC424J600.c: 561: uint8_t lowByte;
 17412                           ;ENC424J600.c: 562: uint8_t highByte;
 17413                           ;ENC424J600.c: 563: uint32_t timeoutCounter = 0;
 17414  01546C  0E00               	movlw	0
 17415  01546E  6E2F               	movwf	enc424j600_readPHYRegister@timeoutCounter,c
 17416  015470  0E00               	movlw	0
 17417  015472  6E30               	movwf	enc424j600_readPHYRegister@timeoutCounter+1,c
 17418  015474  0E00               	movlw	0
 17419  015476  6E31               	movwf	enc424j600_readPHYRegister@timeoutCounter+2,c
 17420  015478  0E00               	movlw	0
 17421  01547A  6E32               	movwf	enc424j600_readPHYRegister@timeoutCounter+3,c
 17422                           
 17423                           ;ENC424J600.c: 565: enc424j600_writeControlRegisterUnbanked(0x14 + 0x40, &PHYaddress);
 17424  01547C  0E2D               	movlw	low enc424j600_readPHYRegister@PHYaddress
 17425  01547E  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 17426  015480  0E00               	movlw	high enc424j600_readPHYRegister@PHYaddress
 17427  015482  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 17428  015484  0E54               	movlw	84
 17429  015486  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 17430                           
 17431                           ;ENC424J600.c: 566: enc424j600_writeControlRegisterUnbanked(0x15 + 0x40, &unusedBits);
 17432  01548A  0E2E               	movlw	low enc424j600_readPHYRegister@unusedBits
 17433  01548C  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 17434  01548E  0E00               	movlw	high enc424j600_readPHYRegister@unusedBits
 17435  015490  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 17436  015492  0E55               	movlw	85
 17437  015494  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 17438                           
 17439                           ;ENC424J600.c: 569: enc424j600_readControlRegisterUnbanked(0x12 + 0x40, &temp);
 17440  015498  0E35               	movlw	low enc424j600_readPHYRegister@temp
 17441  01549A  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 17442  01549C  0E00               	movlw	high enc424j600_readPHYRegister@temp
 17443  01549E  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 17444  0154A0  0E52               	movlw	82
 17445  0154A2  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 17446                           
 17447                           ;ENC424J600.c: 570: temp |= 0x01;
 17448  0154A6  8035               	bsf	enc424j600_readPHYRegister@temp,0,c
 17449                           
 17450                           ;ENC424J600.c: 571: enc424j600_writeControlRegisterUnbanked(0x12 + 0x40, &temp);
 17451  0154A8  0E35               	movlw	low enc424j600_readPHYRegister@temp
 17452  0154AA  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 17453  0154AC  0E00               	movlw	high enc424j600_readPHYRegister@temp
 17454  0154AE  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 17455  0154B0  0E52               	movlw	82
 17456  0154B2  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 17457                           
 17458                           ;ENC424J600.c: 573: _delay((unsigned long)((26)*(32000000UL/4000000.0)));
 17459  0154B6  0E45               	movlw	69
 17460  0154B8                     u15867:
 17461  0154B8  2EE8               	decfsz	16360,f,c
 17462  0154BA  D7FE               	bra	u15867
 17463  0154BC  F000               	nop	
 17464  0154BE                     
 17465                           ;ENC424J600.c: 576: enc424j600_readControlRegisterUnbanked(0x0A + 0x60, &temp);
 17466  0154BE  0E35               	movlw	low enc424j600_readPHYRegister@temp
 17467  0154C0  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 17468  0154C2  0E00               	movlw	high enc424j600_readPHYRegister@temp
 17469  0154C4  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 17470  0154C6  0E6A               	movlw	106
 17471  0154C8  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 17472                           
 17473                           ;ENC424J600.c: 577: timeoutCounter++;
 17474  0154CC  0E01               	movlw	1
 17475  0154CE  262F               	addwf	enc424j600_readPHYRegister@timeoutCounter,f,c
 17476  0154D0  0E00               	movlw	0
 17477  0154D2  2230               	addwfc	enc424j600_readPHYRegister@timeoutCounter+1,f,c
 17478  0154D4  2231               	addwfc	enc424j600_readPHYRegister@timeoutCounter+2,f,c
 17479  0154D6  2232               	addwfc	enc424j600_readPHYRegister@timeoutCounter+3,f,c
 17480                           
 17481                           ;ENC424J600.c: 578: } while ((temp & 0x01) && (timeoutCounter < 0xfff));
 17482  0154D8  A035               	btfss	enc424j600_readPHYRegister@temp,0,c
 17483  0154DA  D008               	goto	u14150
 17484  0154DC  5032               	movf	enc424j600_readPHYRegister@timeoutCounter+3,w,c
 17485  0154DE  1031               	iorwf	enc424j600_readPHYRegister@timeoutCounter+2,w,c
 17486  0154E0  E105               	bnz	l11486
 17487  0154E2  282F               	incf	enc424j600_readPHYRegister@timeoutCounter,w,c
 17488  0154E4  0E0F               	movlw	15
 17489  0154E6  5830               	subwfb	enc424j600_readPHYRegister@timeoutCounter+1,w,c
 17490  0154E8  A0D8               	btfss	16344,0,c
 17491  0154EA  D7E9               	goto	l259
 17492  0154EC                     u14150:
 17493  0154EC                     l11486:
 17494                           
 17495                           ;ENC424J600.c: 579: if (timeoutCounter >= 0xfff)
 17496  0154EC  5032               	movf	enc424j600_readPHYRegister@timeoutCounter+3,w,c
 17497  0154EE  1031               	iorwf	enc424j600_readPHYRegister@timeoutCounter+2,w,c
 17498  0154F0  E140               	bnz	l264
 17499  0154F2  282F               	incf	enc424j600_readPHYRegister@timeoutCounter,w,c
 17500  0154F4  0E0F               	movlw	15
 17501  0154F6  5830               	subwfb	enc424j600_readPHYRegister@timeoutCounter+1,w,c
 17502  0154F8  B0D8               	btfsc	16344,0,c
 17503  0154FA  0012               	return	
 17504                           
 17505                           ;ENC424J600.c: 583: enc424j600_readControlRegisterUnbanked(0x12 + 0x40, &temp);
 17506                           
 17507                           ;ENC424J600.c: 580: return;
 17508  0154FC  0E35               	movlw	low enc424j600_readPHYRegister@temp
 17509  0154FE  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 17510  015500  0E00               	movlw	high enc424j600_readPHYRegister@temp
 17511  015502  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 17512  015504  0E52               	movlw	82
 17513  015506  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 17514                           
 17515                           ;ENC424J600.c: 584: temp &= ~0x01;
 17516  01550A  9035               	bcf	enc424j600_readPHYRegister@temp,0,c
 17517                           
 17518                           ;ENC424J600.c: 585: enc424j600_writeControlRegisterUnbanked(0x12 + 0x40, &temp);
 17519  01550C  0E35               	movlw	low enc424j600_readPHYRegister@temp
 17520  01550E  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 17521  015510  0E00               	movlw	high enc424j600_readPHYRegister@temp
 17522  015512  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 17523  015514  0E52               	movlw	82
 17524  015516  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 17525                           
 17526                           ;ENC424J600.c: 588: enc424j600_readControlRegisterUnbanked(0x08 + 0x60, &lowByte);
 17527  01551A  0E33               	movlw	low enc424j600_readPHYRegister@lowByte
 17528  01551C  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 17529  01551E  0E00               	movlw	high enc424j600_readPHYRegister@lowByte
 17530  015520  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 17531  015522  0E68               	movlw	104
 17532  015524  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 17533                           
 17534                           ;ENC424J600.c: 589: enc424j600_readControlRegisterUnbanked(0x09 + 0x60, &highByte);
 17535  015528  0E34               	movlw	low enc424j600_readPHYRegister@highByte
 17536  01552A  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 17537  01552C  0E00               	movlw	high enc424j600_readPHYRegister@highByte
 17538  01552E  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 17539  015530  0E69               	movlw	105
 17540  015532  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 17541                           
 17542                           ;ENC424J600.c: 590: *data = (lowByte | ((highByte << 8)&0xff00));
 17543  015536  0E00               	movlw	0
 17544  015538  6E26               	movwf	??_enc424j600_readPHYRegister& (0+255),c
 17545  01553A  0EFF               	movlw	255
 17546  01553C  6E27               	movwf	(??_enc424j600_readPHYRegister+1)& (0+255),c
 17547  01553E  5034               	movf	enc424j600_readPHYRegister@highByte,w,c
 17548  015540  6E29               	movwf	(??_enc424j600_readPHYRegister+3)& (0+255),c
 17549  015542  6A28               	clrf	(??_enc424j600_readPHYRegister+2)& (0+255),c
 17550  015544  5026               	movf	??_enc424j600_readPHYRegister,w,c
 17551  015546  1628               	andwf	??_enc424j600_readPHYRegister+2,f,c
 17552  015548  5027               	movf	??_enc424j600_readPHYRegister+1,w,c
 17553  01554A  1629               	andwf	??_enc424j600_readPHYRegister+3,f,c
 17554  01554C  5033               	movf	enc424j600_readPHYRegister@lowByte,w,c
 17555  01554E  6E2A               	movwf	(??_enc424j600_readPHYRegister+4)& (0+255),c
 17556  015550  6A2B               	clrf	(??_enc424j600_readPHYRegister+5)& (0+255),c
 17557  015552  5028               	movf	??_enc424j600_readPHYRegister+2,w,c
 17558  015554  122A               	iorwf	??_enc424j600_readPHYRegister+4,f,c
 17559  015556  5029               	movf	??_enc424j600_readPHYRegister+3,w,c
 17560  015558  122B               	iorwf	??_enc424j600_readPHYRegister+5,f,c
 17561  01555A  0060  F093  FFD9   	movff	enc424j600_readPHYRegister@data,16345
 17562  015560  0060  F097  FFDA   	movff	enc424j600_readPHYRegister@data+1,16346
 17563  015566  0060  F0AB  FFDE   	movff	??_enc424j600_readPHYRegister+4,16350
 17564  01556C  0060  F0AF  FFDD   	movff	??_enc424j600_readPHYRegister+5,16349
 17565  015572                     l264:
 17566  015572  0012               	return		;funcret
 17567  015574                     __end_of_enc424j600_readPHYRegister:
 17568                           	opt stack 0
 17569                           
 17570 ;; *************** function _ethernetController_setLEDConfig *****************
 17571 ;; Defined at:
 17572 ;;		line 419 in file "src/enc424j600/ENC424J600.c"
 17573 ;; Parameters:    Size  Location     Type
 17574 ;;  LED             1    wreg     enum E18473
 17575 ;;  conf            1   35[COMRAM] enum E18477
 17576 ;; Auto vars:     Size  Location     Type
 17577 ;;  LED             1   36[COMRAM] enum E18473
 17578 ;;  data            1   37[COMRAM] unsigned char 
 17579 ;; Return value:  Size  Location     Type
 17580 ;;                  1    wreg      void 
 17581 ;; Registers used:
 17582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17583 ;; Tracked objects:
 17584 ;;		On entry : 0/0
 17585 ;;		On exit  : 0/0
 17586 ;;		Unchanged: 0/0
 17587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17588 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17589 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17591 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17592 ;;Total ram usage:        3 bytes
 17593 ;; Hardware stack levels used:    1
 17594 ;; Hardware stack levels required when called:    7
 17595 ;; This function calls:
 17596 ;;		_enc424j600_readControlRegisterUnbanked
 17597 ;;		_enc424j600_writeControlRegisterUnbanked
 17598 ;; This function is called by:
 17599 ;;		_handleStackBackgroundTasks
 17600 ;;		_main
 17601 ;; This function uses a non-reentrant model
 17602 ;;
 17603                           
 17604                           	psect	text67
 17605  0164E0                     __ptext67:
 17606                           	opt stack 0
 17607  0164E0                     _ethernetController_setLEDConfig:
 17608                           	opt stack 22
 17609                           
 17610                           ;incstack = 0
 17611                           ;ethernetController_setLEDConfig@LED stored from wreg
 17612  0164E0  6E25               	movwf	ethernetController_setLEDConfig@LED,c
 17613                           
 17614                           ;ENC424J600.c: 420: uint8_t data;
 17615                           ;ENC424J600.c: 421: enc424j600_readControlRegisterUnbanked(0x15 + 0x60, &data);
 17616  0164E2  0E26               	movlw	low ethernetController_setLEDConfig@data
 17617  0164E4  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 17618  0164E6  0E00               	movlw	high ethernetController_setLEDConfig@data
 17619  0164E8  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 17620  0164EA  0E75               	movlw	117
 17621  0164EC  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 17622                           
 17623                           ;ENC424J600.c: 422: if (LED == LEDB) {
 17624  0164F0  0425               	decf	ethernetController_setLEDConfig@LED,w,c
 17625  0164F2  B4D8               	btfsc	16344,2,c
 17626  0164F4  D00B               	goto	l206
 17627  0164F6  D015               	goto	l205
 17628  0164F8                     
 17629                           ;ENC424J600.c: 427: data &= ~0x0f;
 17630                           
 17631                           ;ENC424J600.c: 426: case LED_OFF:
 17632  0164F8  0EF0               	movlw	240
 17633  0164FA  1626               	andwf	ethernetController_setLEDConfig@data,f,c
 17634                           
 17635                           ;ENC424J600.c: 428: data |= 0x01;
 17636  0164FC  8026               	bsf	ethernetController_setLEDConfig@data,0,c
 17637                           
 17638                           ;ENC424J600.c: 429: break;
 17639  0164FE  D02C               	goto	l217
 17640  016500                     
 17641                           ;ENC424J600.c: 431: data &= ~0x0f;
 17642  016500  0EF0               	movlw	240
 17643  016502  D018               	goto	L24
 17644  016504                     
 17645                           ;ENC424J600.c: 434: data &= ~0x0f;
 17646  016504  0EF0               	movlw	240
 17647  016506  1626               	andwf	ethernetController_setLEDConfig@data,f,c
 17648                           
 17649                           ;ENC424J600.c: 435: data |= 0x06;
 17650  016508  0E06               	movlw	6
 17651  01650A  D019               	goto	L25
 17652  01650C                     l206:
 17653  01650C  5024               	movf	ethernetController_setLEDConfig@conf,w,c
 17654                           
 17655                           ; Switch size 1, requested type "space"
 17656                           ; Number of cases is 3, Range of values is 0 to 2
 17657                           ; switch strategies available:
 17658                           ; Name         Instructions Cycles
 17659                           ; simple_byte           10     6 (average)
 17660                           ;	Chosen strategy is simple_byte
 17661  01650E  0A00               	xorlw	0	; case 0
 17662  016510  B4D8               	btfsc	16344,2,c
 17663  016512  D7F6               	goto	l210
 17664  016514  0A01               	xorlw	1	; case 1
 17665  016516  B4D8               	btfsc	16344,2,c
 17666  016518  D7EF               	goto	l207
 17667  01651A  0A03               	xorlw	3	; case 2
 17668  01651C  B4D8               	btfsc	16344,2,c
 17669  01651E  D7F2               	goto	l211
 17670  016520  D7EB               	goto	l207
 17671  016522                     l205:
 17672  016522  5025               	movf	ethernetController_setLEDConfig@LED,w,c
 17673  016524  B4D8               	btfsc	16344,2,c
 17674  016526  D00D               	goto	l214
 17675  016528  D017               	goto	l217
 17676  01652A                     
 17677                           ;ENC424J600.c: 442: data &= ~(0x0f << 4);
 17678                           
 17679                           ;ENC424J600.c: 441: case LED_OFF:
 17680  01652A  0E0F               	movlw	15
 17681  01652C  1626               	andwf	ethernetController_setLEDConfig@data,f,c
 17682                           
 17683                           ;ENC424J600.c: 443: data |= (0x01 << 4);
 17684  01652E  8826               	bsf	ethernetController_setLEDConfig@data,4,c
 17685                           
 17686                           ;ENC424J600.c: 444: break;
 17687  016530  D013               	goto	l217
 17688  016532                     
 17689                           ;ENC424J600.c: 446: data &= ~(0x0f << 4);
 17690  016532  0E0F               	movlw	15
 17691  016534                     L24:
 17692  016534  1626               	andwf	ethernetController_setLEDConfig@data,f,c
 17693                           
 17694                           ;ENC424J600.c: 447: break;
 17695  016536  D010               	goto	l217
 17696  016538                     
 17697                           ;ENC424J600.c: 449: data &= ~(0x0f << 4);
 17698  016538  0E0F               	movlw	15
 17699  01653A  1626               	andwf	ethernetController_setLEDConfig@data,f,c
 17700                           
 17701                           ;ENC424J600.c: 450: data |= (0x06 << 4);
 17702  01653C  0E60               	movlw	96
 17703  01653E                     L25:
 17704  01653E  1226               	iorwf	ethernetController_setLEDConfig@data,f,c
 17705                           
 17706                           ;ENC424J600.c: 452: }
 17707                           
 17708                           ;ENC424J600.c: 451: break;
 17709  016540  D00B               	goto	l217
 17710  016542                     l214:
 17711  016542  5024               	movf	ethernetController_setLEDConfig@conf,w,c
 17712                           
 17713                           ; Switch size 1, requested type "space"
 17714                           ; Number of cases is 3, Range of values is 0 to 2
 17715                           ; switch strategies available:
 17716                           ; Name         Instructions Cycles
 17717                           ; simple_byte           10     6 (average)
 17718                           ;	Chosen strategy is simple_byte
 17719  016544  0A00               	xorlw	0	; case 0
 17720  016546  B4D8               	btfsc	16344,2,c
 17721  016548  D7F4               	goto	l218
 17722  01654A  0A01               	xorlw	1	; case 1
 17723  01654C  B4D8               	btfsc	16344,2,c
 17724  01654E  D7ED               	goto	l215
 17725  016550  0A03               	xorlw	3	; case 2
 17726  016552  B4D8               	btfsc	16344,2,c
 17727  016554  D7F1               	goto	l219
 17728  016556  D7E9               	goto	l215
 17729  016558                     l217:
 17730                           
 17731                           ;ENC424J600.c: 453: }
 17732                           ;ENC424J600.c: 454: enc424j600_writeControlRegisterUnbanked(0x15 + 0x60, &data);
 17733  016558  0E26               	movlw	low ethernetController_setLEDConfig@data
 17734  01655A  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 17735  01655C  0E00               	movlw	high ethernetController_setLEDConfig@data
 17736  01655E  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 17737  016560  0E75               	movlw	117
 17738  016562  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 17739  016566  0012               	return		;funcret
 17740  016568                     __end_of_ethernetController_setLEDConfig:
 17741                           	opt stack 0
 17742                           
 17743 ;; *************** function _ethernetController_pollInterruptFlags *****************
 17744 ;; Defined at:
 17745 ;;		line 312 in file "src/enc424j600/ENC424J600.c"
 17746 ;; Parameters:    Size  Location     Type
 17747 ;;		None
 17748 ;; Auto vars:     Size  Location     Type
 17749 ;;  reg             2    2[BANK0 ] unsigned int 
 17750 ;;  flags           2    0[BANK0 ] struct interruptFlags
 17751 ;; Return value:  Size  Location     Type
 17752 ;;                  2   45[COMRAM] struct interruptFlags
 17753 ;; Registers used:
 17754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17755 ;; Tracked objects:
 17756 ;;		On entry : 0/0
 17757 ;;		On exit  : 0/0
 17758 ;;		Unchanged: 0/0
 17759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17761 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17762 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17763 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17764 ;;Total ram usage:       10 bytes
 17765 ;; Hardware stack levels used:    1
 17766 ;; Hardware stack levels required when called:    8
 17767 ;; This function calls:
 17768 ;;		_enc424j600_getInterruptFlags
 17769 ;; This function is called by:
 17770 ;;		_handleStackBackgroundTasks
 17771 ;; This function uses a non-reentrant model
 17772 ;;
 17773                           
 17774                           	psect	text68
 17775  0147CE                     __ptext68:
 17776                           	opt stack 0
 17777  0147CE                     _ethernetController_pollInterruptFlags:
 17778                           	opt stack 21
 17779                           
 17780                           ;ENC424J600.c: 313: interruptFlags_t flags;
 17781                           ;ENC424J600.c: 314: uint16_t reg = enc424j600_getInterruptFlags();
 17782                           
 17783                           ;incstack = 0
 17784  0147CE  ECC1  F0B7         	call	_enc424j600_getInterruptFlags	;wreg free
 17785  0147D2  0060  F090  F062   	movff	?_enc424j600_getInterruptFlags,ethernetController_pollInterruptFlags@reg
 17786  0147D8  0060  F094  F063   	movff	?_enc424j600_getInterruptFlags+1,ethernetController_pollInterruptFlags@reg+1
 17787                           
 17788                           ;ENC424J600.c: 315: flags.MODEXIF = (reg & (1 << MODEXIF)) != 0 ? 1u : 0u;
 17789  0147DE  0100               	movlb	0	; () banked
 17790  0147E0  AD63               	btfss	(ethernetController_pollInterruptFlags@reg+1)& (0+255),6,b
 17791  0147E2  D003               	goto	u14610
 17792  0147E4  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17793  0147E6  2A30               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,c
 17794  0147E8  D001               	goto	u14628
 17795  0147EA                     u14610:
 17796  0147EA  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17797  0147EC                     u14628:
 17798  0147EC  0100               	movlb	0	; () banked
 17799  0147EE  5160               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 17800  0147F0  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17801  0147F2  0BFE               	andlw	-2
 17802  0147F4  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17803  0147F6  6F60               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 17804                           
 17805                           ; BSR set to: 0
 17806                           ;ENC424J600.c: 316: flags.HASHIF = (reg & (1 << HASHIF)) != 0 ? 1u : 0u;
 17807  0147F8  AB63               	btfss	(ethernetController_pollInterruptFlags@reg+1)& (0+255),5,b
 17808  0147FA  D003               	goto	u14630
 17809  0147FC  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17810  0147FE  2A30               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,c
 17811  014800  D001               	goto	u14648
 17812  014802                     u14630:
 17813  014802  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17814  014804                     u14648:
 17815  014804  4630               	rlncf	??_ethernetController_pollInterruptFlags,f,c
 17816  014806  0100               	movlb	0	; () banked
 17817  014808  5160               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 17818  01480A  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17819  01480C  0BFD               	andlw	-3
 17820  01480E  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17821  014810  6F60               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 17822                           
 17823                           ; BSR set to: 0
 17824                           ;ENC424J600.c: 317: flags.AESIF = (reg & (1 << AESIF)) != 0 ? 1u : 0u;
 17825  014812  A963               	btfss	(ethernetController_pollInterruptFlags@reg+1)& (0+255),4,b
 17826  014814  D003               	goto	u14650
 17827  014816  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17828  014818  2A30               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,c
 17829  01481A  D001               	goto	u14668
 17830  01481C                     u14650:
 17831  01481C  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17832  01481E                     u14668:
 17833  01481E  4630               	rlncf	??_ethernetController_pollInterruptFlags,f,c
 17834  014820  4630               	rlncf	??_ethernetController_pollInterruptFlags,f,c
 17835  014822  0100               	movlb	0	; () banked
 17836  014824  5160               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 17837  014826  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17838  014828  0BFB               	andlw	-5
 17839  01482A  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17840  01482C  6F60               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 17841                           
 17842                           ; BSR set to: 0
 17843                           ;ENC424J600.c: 318: flags.LINKIF = (reg & (1 << LINKIF)) != 0 ? 1u : 0u;
 17844  01482E  A763               	btfss	(ethernetController_pollInterruptFlags@reg+1)& (0+255),3,b
 17845  014830  D003               	goto	u14670
 17846  014832  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17847  014834  2A30               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,c
 17848  014836  D001               	goto	u14688
 17849  014838                     u14670:
 17850  014838  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17851  01483A                     u14688:
 17852  01483A  4630               	rlncf	??_ethernetController_pollInterruptFlags,f,c
 17853  01483C  4630               	rlncf	??_ethernetController_pollInterruptFlags,f,c
 17854  01483E  4630               	rlncf	??_ethernetController_pollInterruptFlags,f,c
 17855  014840  0100               	movlb	0	; () banked
 17856  014842  5160               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 17857  014844  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17858  014846  0BF7               	andlw	-9
 17859  014848  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17860  01484A  6F60               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 17861                           
 17862                           ; BSR set to: 0
 17863                           ;ENC424J600.c: 320: flags.PKTIF = (reg & (1 << PKTIF)) != 0 ? 1u : 0u;
 17864  01484C  AD62               	btfss	ethernetController_pollInterruptFlags@reg& (0+255),6,b
 17865  01484E  D003               	goto	u14690
 17866  014850  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17867  014852  2A30               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,c
 17868  014854  D001               	goto	u14708
 17869  014856                     u14690:
 17870  014856  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17871  014858                     u14708:
 17872  014858  3A30               	swapf	??_ethernetController_pollInterruptFlags,f,c
 17873  01485A  0100               	movlb	0	; () banked
 17874  01485C  5160               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 17875  01485E  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17876  014860  0BEF               	andlw	-17
 17877  014862  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17878  014864  6F60               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 17879                           
 17880                           ; BSR set to: 0
 17881                           ;ENC424J600.c: 321: flags.DMAIF = (reg & (1 << DMAIF)) != 0 ? 1u : 0u;
 17882  014866  AB62               	btfss	ethernetController_pollInterruptFlags@reg& (0+255),5,b
 17883  014868  D003               	goto	u14710
 17884  01486A  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17885  01486C  2A30               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,c
 17886  01486E  D001               	goto	u14728
 17887  014870                     u14710:
 17888  014870  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17889  014872                     u14728:
 17890  014872  3A30               	swapf	??_ethernetController_pollInterruptFlags,f,c
 17891  014874  4630               	rlncf	??_ethernetController_pollInterruptFlags,f,c
 17892  014876  0100               	movlb	0	; () banked
 17893  014878  5160               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 17894  01487A  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17895  01487C  0BDF               	andlw	-33
 17896  01487E  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17897  014880  6F60               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 17898                           
 17899                           ; BSR set to: 0
 17900                           ;ENC424J600.c: 323: flags.TXIF = (reg & (1 << TXIF)) != 0 ? 1u : 0u;
 17901  014882  0139               	movlb	57	; () banked
 17902  014884  A9A1               	btfss	161,4,b	;volatile
 17903  014886  D003               	goto	u14730
 17904  014888  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17905  01488A  2A30               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,c
 17906  01488C  D001               	goto	u14748
 17907  01488E                     u14730:
 17908  01488E  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17909  014890                     u14748:
 17910  014890  0E01               	movlw	1
 17911  014892  6E31               	movwf	(??_ethernetController_pollInterruptFlags+1)& (0+255),c
 17912  014894  0E00               	movlw	0
 17913  014896  6E32               	movwf	(??_ethernetController_pollInterruptFlags+2)& (0+255),c
 17914  014898  2A30               	incf	??_ethernetController_pollInterruptFlags,f,c
 17915  01489A  D003               	goto	u14754
 17916  01489C                     u14755:
 17917  01489C  90D8               	bcf	16344,0,c
 17918  01489E  3631               	rlcf	??_ethernetController_pollInterruptFlags+1,f,c
 17919  0148A0  3632               	rlcf	??_ethernetController_pollInterruptFlags+2,f,c
 17920  0148A2                     u14754:
 17921  0148A2  2E30               	decfsz	??_ethernetController_pollInterruptFlags,f,c
 17922  0148A4  D7FB               	goto	u14755
 17923  0148A6  0100               	movlb	0	; () banked
 17924  0148A8  5162               	movf	ethernetController_pollInterruptFlags@reg& (0+255),w,b
 17925  0148AA  1631               	andwf	??_ethernetController_pollInterruptFlags+1,f,c
 17926  0148AC  5163               	movf	(ethernetController_pollInterruptFlags@reg+1)& (0+255),w,b
 17927  0148AE  1632               	andwf	??_ethernetController_pollInterruptFlags+2,f,c
 17928  0148B0  5031               	movf	??_ethernetController_pollInterruptFlags+1,w,c
 17929  0148B2  1032               	iorwf	??_ethernetController_pollInterruptFlags+2,w,c
 17930  0148B4  B4D8               	btfsc	16344,2,c
 17931  0148B6  D003               	goto	u14760
 17932  0148B8  6A33               	clrf	(??_ethernetController_pollInterruptFlags+3)& (0+255),c
 17933  0148BA  2A33               	incf	(??_ethernetController_pollInterruptFlags+3)& (0+255),f,c
 17934  0148BC  D001               	goto	u14778
 17935  0148BE                     u14760:
 17936  0148BE  6A33               	clrf	(??_ethernetController_pollInterruptFlags+3)& (0+255),c
 17937  0148C0                     u14778:
 17938  0148C0  3A33               	swapf	??_ethernetController_pollInterruptFlags+3,f,c
 17939  0148C2  4633               	rlncf	??_ethernetController_pollInterruptFlags+3,f,c
 17940  0148C4  4633               	rlncf	??_ethernetController_pollInterruptFlags+3,f,c
 17941  0148C6  0100               	movlb	0	; () banked
 17942  0148C8  5160               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 17943  0148CA  1833               	xorwf	??_ethernetController_pollInterruptFlags+3,w,c
 17944  0148CC  0BBF               	andlw	-65
 17945  0148CE  1833               	xorwf	??_ethernetController_pollInterruptFlags+3,w,c
 17946  0148D0  6F60               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 17947                           
 17948                           ; BSR set to: 0
 17949                           ;ENC424J600.c: 324: flags.TXABTIF = (reg & (1 << TXABTIF)) != 0 ? 1u : 0u;
 17950  0148D2  A562               	btfss	ethernetController_pollInterruptFlags@reg& (0+255),2,b
 17951  0148D4  D003               	goto	u14780
 17952  0148D6  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17953  0148D8  2A30               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,c
 17954  0148DA  D001               	goto	u14798
 17955  0148DC                     u14780:
 17956  0148DC  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17957  0148DE                     u14798:
 17958  0148DE  3230               	rrcf	??_ethernetController_pollInterruptFlags,f,c
 17959  0148E0  3230               	rrcf	??_ethernetController_pollInterruptFlags,f,c
 17960  0148E2  0100               	movlb	0	; () banked
 17961  0148E4  5160               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 17962  0148E6  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17963  0148E8  0B7F               	andlw	-129
 17964  0148EA  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17965  0148EC  6F60               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 17966                           
 17967                           ; BSR set to: 0
 17968                           ;ENC424J600.c: 325: flags.RXABTIF = (reg & (1 << RXABTIF)) != 0 ? 1u : 0u;
 17969  0148EE  A362               	btfss	ethernetController_pollInterruptFlags@reg& (0+255),1,b
 17970  0148F0  D003               	goto	u14800
 17971  0148F2  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17972  0148F4  2A30               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,c
 17973  0148F6  D001               	goto	u14818
 17974  0148F8                     u14800:
 17975  0148F8  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17976  0148FA                     u14818:
 17977  0148FA  0100               	movlb	0	; () banked
 17978  0148FC  5161               	movf	(ethernetController_pollInterruptFlags@flags+1)& (0+255),w,b
 17979  0148FE  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17980  014900  0BFE               	andlw	-2
 17981  014902  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17982  014904  6F61               	movwf	(ethernetController_pollInterruptFlags@flags+1)& (0+255),b
 17983                           
 17984                           ; BSR set to: 0
 17985                           ;ENC424J600.c: 326: flags.PCFULIF = (reg & (1 << PCFULIF)) != 0 ? 1u : 0u;
 17986  014906  A162               	btfss	ethernetController_pollInterruptFlags@reg& (0+255),0,b
 17987  014908  D003               	goto	u14820
 17988  01490A  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17989  01490C  2A30               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,c
 17990  01490E  D001               	goto	u14838
 17991  014910                     u14820:
 17992  014910  6A30               	clrf	??_ethernetController_pollInterruptFlags& (0+255),c
 17993  014912                     u14838:
 17994  014912  4630               	rlncf	??_ethernetController_pollInterruptFlags,f,c
 17995  014914  0100               	movlb	0	; () banked
 17996  014916  5161               	movf	(ethernetController_pollInterruptFlags@flags+1)& (0+255),w,b
 17997  014918  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 17998  01491A  0BFD               	andlw	-3
 17999  01491C  1830               	xorwf	??_ethernetController_pollInterruptFlags,w,c
 18000  01491E  6F61               	movwf	(ethernetController_pollInterruptFlags@flags+1)& (0+255),b
 18001                           
 18002                           ; BSR set to: 0
 18003                           ;ENC424J600.c: 327: return flags;
 18004  014920  0060  F180  F02E   	movff	ethernetController_pollInterruptFlags@flags,?_ethernetController_pollInterruptFla
      +                          gs
 18005  014926  0060  F184  F02F   	movff	ethernetController_pollInterruptFlags@flags+1,?_ethernetController_pollInterruptF
      +                          lags+1
 18006  01492C  0012               	return	
 18007  01492E                     __end_of_ethernetController_pollInterruptFlags:
 18008                           	opt stack 0
 18009                           
 18010 ;; *************** function _enc424j600_getInterruptFlags *****************
 18011 ;; Defined at:
 18012 ;;		line 714 in file "src/enc424j600/ENC424J600.c"
 18013 ;; Parameters:    Size  Location     Type
 18014 ;;		None
 18015 ;; Auto vars:     Size  Location     Type
 18016 ;;  high            1   44[COMRAM] unsigned char 
 18017 ;;  low             1   43[COMRAM] unsigned char 
 18018 ;; Return value:  Size  Location     Type
 18019 ;;                  2   35[COMRAM] unsigned int 
 18020 ;; Registers used:
 18021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18022 ;; Tracked objects:
 18023 ;;		On entry : 0/0
 18024 ;;		On exit  : 0/0
 18025 ;;		Unchanged: 0/0
 18026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18029 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18030 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18031 ;;Total ram usage:       10 bytes
 18032 ;; Hardware stack levels used:    1
 18033 ;; Hardware stack levels required when called:    7
 18034 ;; This function calls:
 18035 ;;		_enc424j600_readControlRegisterUnbanked
 18036 ;; This function is called by:
 18037 ;;		_ethernetController_pollInterruptFlags
 18038 ;; This function uses a non-reentrant model
 18039 ;;
 18040                           
 18041                           	psect	text69
 18042  016F82                     __ptext69:
 18043                           	opt stack 0
 18044  016F82                     _enc424j600_getInterruptFlags:
 18045                           	opt stack 21
 18046                           
 18047                           ;ENC424J600.c: 715: uint8_t low, high;
 18048                           ;ENC424J600.c: 716: enc424j600_readControlRegisterUnbanked(0x1C + 0x00, &low);
 18049                           
 18050                           ; BSR set to: 0
 18051                           ;incstack = 0
 18052  016F82  0E2C               	movlw	low enc424j600_getInterruptFlags@low
 18053  016F84  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 18054  016F86  0E00               	movlw	high enc424j600_getInterruptFlags@low
 18055  016F88  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 18056  016F8A  0E1C               	movlw	28
 18057  016F8C  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 18058                           
 18059                           ;ENC424J600.c: 717: enc424j600_readControlRegisterUnbanked(0x1D + 0x00, &high);
 18060  016F90  0E2D               	movlw	low enc424j600_getInterruptFlags@high
 18061  016F92  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 18062  016F94  0E00               	movlw	high enc424j600_getInterruptFlags@high
 18063  016F96  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 18064  016F98  0E1D               	movlw	29
 18065  016F9A  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 18066                           
 18067                           ;ENC424J600.c: 718: return ( (((uint16_t) low)&0x00ff) | (((uint16_t) high << 8)&0xff00)
      +                          );
 18068  016F9E  0E00               	movlw	0
 18069  016FA0  6E26               	movwf	??_enc424j600_getInterruptFlags& (0+255),c
 18070  016FA2  0EFF               	movlw	255
 18071  016FA4  6E27               	movwf	(??_enc424j600_getInterruptFlags+1)& (0+255),c
 18072  016FA6  502D               	movf	enc424j600_getInterruptFlags@high,w,c
 18073  016FA8  6E29               	movwf	(??_enc424j600_getInterruptFlags+3)& (0+255),c
 18074  016FAA  6A28               	clrf	(??_enc424j600_getInterruptFlags+2)& (0+255),c
 18075  016FAC  5026               	movf	??_enc424j600_getInterruptFlags,w,c
 18076  016FAE  1628               	andwf	??_enc424j600_getInterruptFlags+2,f,c
 18077  016FB0  5027               	movf	??_enc424j600_getInterruptFlags+1,w,c
 18078  016FB2  1629               	andwf	??_enc424j600_getInterruptFlags+3,f,c
 18079  016FB4  502C               	movf	enc424j600_getInterruptFlags@low,w,c
 18080  016FB6  6E2A               	movwf	(??_enc424j600_getInterruptFlags+4)& (0+255),c
 18081  016FB8  6A2B               	clrf	(??_enc424j600_getInterruptFlags+5)& (0+255),c
 18082  016FBA  5028               	movf	??_enc424j600_getInterruptFlags+2,w,c
 18083  016FBC  102A               	iorwf	??_enc424j600_getInterruptFlags+4,w,c
 18084  016FBE  6E24               	movwf	?_enc424j600_getInterruptFlags,c
 18085  016FC0  5029               	movf	??_enc424j600_getInterruptFlags+3,w,c
 18086  016FC2  102B               	iorwf	??_enc424j600_getInterruptFlags+5,w,c
 18087  016FC4  6E25               	movwf	?_enc424j600_getInterruptFlags+1,c
 18088  016FC6  0012               	return	
 18089  016FC8                     __end_of_enc424j600_getInterruptFlags:
 18090                           	opt stack 0
 18091                           
 18092 ;; *************** function _ethernetController_newPacketAvailable *****************
 18093 ;; Defined at:
 18094 ;;		line 390 in file "src/enc424j600/ENC424J600.c"
 18095 ;; Parameters:    Size  Location     Type
 18096 ;;		None
 18097 ;; Auto vars:     Size  Location     Type
 18098 ;;		None
 18099 ;; Return value:  Size  Location     Type
 18100 ;;                  1    wreg      unsigned char 
 18101 ;; Registers used:
 18102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18103 ;; Tracked objects:
 18104 ;;		On entry : 0/0
 18105 ;;		On exit  : 0/0
 18106 ;;		Unchanged: 0/0
 18107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18112 ;;Total ram usage:        0 bytes
 18113 ;; Hardware stack levels used:    1
 18114 ;; Hardware stack levels required when called:    8
 18115 ;; This function calls:
 18116 ;;		_enc424j600_getPacketCount
 18117 ;; This function is called by:
 18118 ;;		_handleStackBackgroundTasks
 18119 ;; This function uses a non-reentrant model
 18120 ;;
 18121                           
 18122                           	psect	text70
 18123  0176C8                     __ptext70:
 18124                           	opt stack 0
 18125  0176C8                     _ethernetController_newPacketAvailable:
 18126                           	opt stack 21
 18127                           
 18128                           ;ENC424J600.c: 391: return (unsigned) (enc424j600_getPacketCount() != 0);
 18129                           
 18130                           ;incstack = 0
 18131  0176C8  EC46  F0BB         	call	_enc424j600_getPacketCount	;wreg free
 18132  0176CC  0900               	iorlw	0
 18133  0176CE  B4D8               	btfsc	16344,2,c
 18134  0176D0  D002               	goto	u14840
 18135  0176D2  0E01               	movlw	1
 18136  0176D4  0012               	return	
 18137  0176D6                     u14840:
 18138  0176D6  0E00               	movlw	0
 18139  0176D8  0012               	return	
 18140  0176DA                     __end_of_ethernetController_newPacketAvailable:
 18141                           	opt stack 0
 18142                           
 18143 ;; *************** function _enc424j600_getPacketCount *****************
 18144 ;; Defined at:
 18145 ;;		line 612 in file "src/enc424j600/ENC424J600.c"
 18146 ;; Parameters:    Size  Location     Type
 18147 ;;		None
 18148 ;; Auto vars:     Size  Location     Type
 18149 ;;  lowByte         1   35[COMRAM] unsigned char 
 18150 ;; Return value:  Size  Location     Type
 18151 ;;                  1    wreg      unsigned char 
 18152 ;; Registers used:
 18153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18154 ;; Tracked objects:
 18155 ;;		On entry : 0/0
 18156 ;;		On exit  : 0/0
 18157 ;;		Unchanged: 0/0
 18158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18162 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18163 ;;Total ram usage:        1 bytes
 18164 ;; Hardware stack levels used:    1
 18165 ;; Hardware stack levels required when called:    7
 18166 ;; This function calls:
 18167 ;;		_enc424j600_readControlRegisterUnbanked
 18168 ;; This function is called by:
 18169 ;;		_ethernetController_newPacketAvailable
 18170 ;;		_ethernetController_getCurrentPacketCount
 18171 ;; This function uses a non-reentrant model
 18172 ;;
 18173                           
 18174                           	psect	text71
 18175  01768C                     __ptext71:
 18176                           	opt stack 0
 18177  01768C                     _enc424j600_getPacketCount:
 18178                           	opt stack 21
 18179                           
 18180                           ;ENC424J600.c: 613: uint8_t lowByte = 0;
 18181                           
 18182                           ;incstack = 0
 18183  01768C  0E00               	movlw	0
 18184  01768E  6E24               	movwf	enc424j600_getPacketCount@lowByte,c
 18185                           
 18186                           ;ENC424J600.c: 614: enc424j600_readControlRegisterUnbanked(0x1A + 0x00, &lowByte);
 18187  017690  0E24               	movlw	low enc424j600_getPacketCount@lowByte
 18188  017692  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 18189  017694  0E00               	movlw	high enc424j600_getPacketCount@lowByte
 18190  017696  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 18191  017698  0E1A               	movlw	26
 18192  01769A  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 18193                           
 18194                           ;ENC424J600.c: 615: return (uint32_t) lowByte;
 18195  01769E  5024               	movf	enc424j600_getPacketCount@lowByte,w,c
 18196  0176A0  0012               	return	
 18197  0176A2                     __end_of_enc424j600_getPacketCount:
 18198                           	opt stack 0
 18199                           
 18200 ;; *************** function _ethernetController_init *****************
 18201 ;; Defined at:
 18202 ;;		line 34 in file "src/enc424j600/ENC424J600.c"
 18203 ;; Parameters:    Size  Location     Type
 18204 ;;		None
 18205 ;; Auto vars:     Size  Location     Type
 18206 ;;  err             3   50[COMRAM] struct error
 18207 ;; Return value:  Size  Location     Type
 18208 ;;                  3   47[COMRAM] struct error
 18209 ;; Registers used:
 18210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18211 ;; Tracked objects:
 18212 ;;		On entry : 0/0
 18213 ;;		On exit  : 0/0
 18214 ;;		Unchanged: 0/0
 18215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18216 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18217 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18219 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18220 ;;Total ram usage:        6 bytes
 18221 ;; Hardware stack levels used:    1
 18222 ;; Hardware stack levels required when called:    8
 18223 ;; This function calls:
 18224 ;;		_enc424j600_enableAutoMACInsertion
 18225 ;;		_enc424j600_enableReception
 18226 ;;		_enc424j600_initSPI
 18227 ;;		_enc424j600_setNextPacketPointer
 18228 ;;		_enc424j600_setRXBufferStartAddress
 18229 ;;		_enc424j600_setRXTailPointer
 18230 ;;		_ethernetController_checkDeviceId
 18231 ;;		_ethernetController_softReset
 18232 ;; This function is called by:
 18233 ;;		_handleStackBackgroundTasks
 18234 ;;		_main
 18235 ;; This function uses a non-reentrant model
 18236 ;;
 18237                           
 18238                           	psect	text72
 18239  015E06                     __ptext72:
 18240                           	opt stack 0
 18241  015E06                     _ethernetController_init:
 18242                           	opt stack 21
 18243                           
 18244                           ;ENC424J600.c: 35: error_t err;
 18245                           ;ENC424J600.c: 36: enc424j600_initSPI();
 18246                           
 18247                           ;incstack = 0
 18248  015E06  EC4B  F0B9         	call	_enc424j600_initSPI	;wreg free
 18249                           
 18250                           ;ENC424J600.c: 37: err = ethernetController_softReset();
 18251  015E0A  EC42  F0AB         	call	_ethernetController_softReset	;wreg free
 18252  015E0E  0060  F090  F033   	movff	?_ethernetController_softReset,ethernetController_init@err
 18253  015E14  0060  F094  F034   	movff	?_ethernetController_softReset+1,ethernetController_init@err+1
 18254  015E1A  0060  F098  F035   	movff	?_ethernetController_softReset+2,ethernetController_init@err+2
 18255                           
 18256                           ;ENC424J600.c: 38: if (err.code != (uint16_t)0) {
 18257  015E20  5034               	movf	ethernetController_init@err+1,w,c
 18258  015E22  1035               	iorwf	ethernetController_init@err+2,w,c
 18259  015E24  B4D8               	btfsc	16344,2,c
 18260  015E26  D00A               	goto	l81
 18261                           
 18262                           ;ENC424J600.c: 39: return err;
 18263  015E28  0060  F0CC  F030   	movff	ethernetController_init@err,?_ethernetController_init
 18264  015E2E  0060  F0D0  F031   	movff	ethernetController_init@err+1,?_ethernetController_init+1
 18265  015E34  0060  F0D4  F032   	movff	ethernetController_init@err+2,?_ethernetController_init+2
 18266  015E3A  0012               	return	
 18267  015E3C                     l81:
 18268                           
 18269                           ;ENC424J600.c: 40: }
 18270                           ;ENC424J600.c: 41: err = ethernetController_checkDeviceId();
 18271  015E3C  EC4E  F0B7         	call	_ethernetController_checkDeviceId	;wreg free
 18272  015E40  0060  F090  F033   	movff	?_ethernetController_checkDeviceId,ethernetController_init@err
 18273  015E46  0060  F094  F034   	movff	?_ethernetController_checkDeviceId+1,ethernetController_init@err+1
 18274  015E4C  0060  F098  F035   	movff	?_ethernetController_checkDeviceId+2,ethernetController_init@err+2
 18275                           
 18276                           ;ENC424J600.c: 42: if (err.code != (uint16_t)0) {
 18277  015E52  5034               	movf	ethernetController_init@err+1,w,c
 18278  015E54  1035               	iorwf	ethernetController_init@err+2,w,c
 18279  015E56  B4D8               	btfsc	16344,2,c
 18280  015E58  D00A               	goto	l83
 18281                           
 18282                           ;ENC424J600.c: 43: return err;
 18283  015E5A  0060  F0CC  F030   	movff	ethernetController_init@err,?_ethernetController_init
 18284  015E60  0060  F0D0  F031   	movff	ethernetController_init@err+1,?_ethernetController_init+1
 18285  015E66  0060  F0D4  F032   	movff	ethernetController_init@err+2,?_ethernetController_init+2
 18286  015E6C  0012               	return	
 18287  015E6E                     l83:
 18288                           
 18289                           ;ENC424J600.c: 44: }
 18290                           ;ENC424J600.c: 63: enc424j600_setRXBufferStartAddress(0x3000);
 18291  015E6E  0E30               	movlw	48
 18292  015E70  6E25               	movwf	enc424j600_setRXBufferStartAddress@addr+1,c
 18293  015E72  0E00               	movlw	0
 18294  015E74  6E24               	movwf	enc424j600_setRXBufferStartAddress@addr,c
 18295  015E76  EC17  F0BA         	call	_enc424j600_setRXBufferStartAddress	;wreg free
 18296                           
 18297                           ;ENC424J600.c: 64: enc424j600_setNextPacketPointer(0x3000);
 18298  015E7A  0E30               	movlw	48
 18299  015E7C  6E17               	movwf	enc424j600_setNextPacketPointer@ptr+1,c
 18300  015E7E  0E00               	movlw	0
 18301  015E80  6E16               	movwf	enc424j600_setNextPacketPointer@ptr,c
 18302  015E82  EC9D  F0BB         	call	_enc424j600_setNextPacketPointer	;wreg free
 18303                           
 18304                           ;ENC424J600.c: 65: enc424j600_setRXTailPointer(0x5FFE);
 18305  015E86  0E5F               	movlw	95
 18306  015E88  6E25               	movwf	enc424j600_setRXTailPointer@addr+1,c
 18307  015E8A  0EFE               	movlw	254
 18308  015E8C  6E24               	movwf	enc424j600_setRXTailPointer@addr,c
 18309  015E8E  EC03  F0BA         	call	_enc424j600_setRXTailPointer	;wreg free
 18310                           
 18311                           ;ENC424J600.c: 67: enc424j600_enableReception();
 18312  015E92  ECB2  F0BB         	call	_enc424j600_enableReception	;wreg free
 18313                           
 18314                           ;ENC424J600.c: 68: enc424j600_enableAutoMACInsertion();
 18315  015E96  EC67  F0BA         	call	_enc424j600_enableAutoMACInsertion	;wreg free
 18316                           
 18317                           ;ENC424J600.c: 70: err.module = ERROR_MODULE_ETHERNET_CONTROLLER;
 18318  015E9A  0E01               	movlw	1
 18319  015E9C  6E33               	movwf	ethernetController_init@err,c
 18320                           
 18321                           ;ENC424J600.c: 71: err.code = (uint16_t)0;
 18322  015E9E  0E00               	movlw	0
 18323  015EA0  6E35               	movwf	ethernetController_init@err+2,c
 18324  015EA2  0E00               	movlw	0
 18325  015EA4  6E34               	movwf	ethernetController_init@err+1,c
 18326                           
 18327                           ;ENC424J600.c: 72: return err;
 18328  015EA6  0060  F0CC  F030   	movff	ethernetController_init@err,?_ethernetController_init
 18329  015EAC  0060  F0D0  F031   	movff	ethernetController_init@err+1,?_ethernetController_init+1
 18330  015EB2  0060  F0D4  F032   	movff	ethernetController_init@err+2,?_ethernetController_init+2
 18331  015EB8  0012               	return	
 18332  015EBA                     __end_of_ethernetController_init:
 18333                           	opt stack 0
 18334                           
 18335 ;; *************** function _ethernetController_softReset *****************
 18336 ;; Defined at:
 18337 ;;		line 75 in file "src/enc424j600/ENC424J600.c"
 18338 ;; Parameters:    Size  Location     Type
 18339 ;;		None
 18340 ;; Auto vars:     Size  Location     Type
 18341 ;;  err             3   44[COMRAM] struct error
 18342 ;;  receivedData    2   42[COMRAM] unsigned char [2]
 18343 ;;  dataToSend      2   40[COMRAM] unsigned char [2]
 18344 ;;  comFailCount    1   39[COMRAM] unsigned char 
 18345 ;; Return value:  Size  Location     Type
 18346 ;;                  3   35[COMRAM] struct error
 18347 ;; Registers used:
 18348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18349 ;; Tracked objects:
 18350 ;;		On entry : 0/0
 18351 ;;		On exit  : 0/0
 18352 ;;		Unchanged: 0/0
 18353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18354 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18355 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18356 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18357 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18358 ;;Total ram usage:       12 bytes
 18359 ;; Hardware stack levels used:    1
 18360 ;; Hardware stack levels required when called:    7
 18361 ;; This function calls:
 18362 ;;		_enc424j600_readControlRegisterUnbanked
 18363 ;;		_enc424j600_writeControlRegisterUnbanked
 18364 ;;		_enc424j600_writeSingleByte
 18365 ;; This function is called by:
 18366 ;;		_ethernetController_init
 18367 ;; This function uses a non-reentrant model
 18368 ;;
 18369                           
 18370                           	psect	text73
 18371  015684                     __ptext73:
 18372                           	opt stack 0
 18373  015684                     _ethernetController_softReset:
 18374                           	opt stack 21
 18375                           
 18376                           ;ENC424J600.c: 93: uint8_t comFailCount = 0;
 18377                           
 18378                           ;incstack = 0
 18379  015684  0E00               	movlw	0
 18380  015686  6E28               	movwf	ethernetController_softReset@comFailCount,c
 18381                           
 18382                           ;ENC424J600.c: 94: uint8_t dataToSend[2] = {0x12, 0x34};
 18383  015688  0060  FB88  F029   	movff	ethernetController_softReset@F18966,ethernetController_softReset@dataToSend
 18384  01568E  0060  FB8C  F02A   	movff	ethernetController_softReset@F18966+1,ethernetController_softReset@dataToSend+1
 18385                           
 18386                           ;ENC424J600.c: 95: uint8_t receivedData[2] = {0, 0};
 18387  015694  0060  FB08  F02B   	movff	ethernetController_softReset@F18968,ethernetController_softReset@receivedData
 18388  01569A  0060  FB0C  F02C   	movff	ethernetController_softReset@F18968+1,ethernetController_softReset@receivedData+1
 18389                           
 18390                           ;ENC424J600.c: 96: error_t err;
 18391                           ;ENC424J600.c: 97: err.module = ERROR_MODULE_ETHERNET_CONTROLLER;
 18392  0156A0  0E01               	movlw	1
 18393  0156A2  6E2D               	movwf	ethernetController_softReset@err,c
 18394                           
 18395                           ;ENC424J600.c: 98: err.code = (uint16_t)0;
 18396  0156A4  0E00               	movlw	0
 18397  0156A6  6E2F               	movwf	ethernetController_softReset@err+2,c
 18398  0156A8  0E00               	movlw	0
 18399  0156AA  6E2E               	movwf	ethernetController_softReset@err+1,c
 18400                           
 18401                           ;ENC424J600.c: 99: if (comFailCount < 5) {
 18402  0156AC  0E05               	movlw	5
 18403  0156AE  6028               	cpfslt	ethernetController_softReset@comFailCount,c
 18404  0156B0  D057               	goto	l90
 18405                           
 18406                           ;ENC424J600.c: 101: enc424j600_writeControlRegisterUnbanked(0x16 + 0x00, &dataToSend[0])
      +                          ;
 18407  0156B2  0E29               	movlw	low ethernetController_softReset@dataToSend
 18408  0156B4  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 18409  0156B6  0E00               	movlw	high ethernetController_softReset@dataToSend
 18410  0156B8  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 18411  0156BA  0E16               	movlw	22
 18412  0156BC  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 18413                           
 18414                           ;ENC424J600.c: 102: enc424j600_writeControlRegisterUnbanked(0x17 + 0x00, &dataToSend[1])
      +                          ;
 18415  0156C0  0E2A               	movlw	low (ethernetController_softReset@dataToSend+1)
 18416  0156C2  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 18417  0156C4  0E00               	movlw	high (ethernetController_softReset@dataToSend+1)
 18418  0156C6  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 18419  0156C8  0E17               	movlw	23
 18420  0156CA  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 18421                           
 18422                           ;ENC424J600.c: 104: enc424j600_readControlRegisterUnbanked(0x16 + 0x00, &receivedData[0]
      +                          );
 18423  0156CE  0E2B               	movlw	low ethernetController_softReset@receivedData
 18424  0156D0  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 18425  0156D2  0E00               	movlw	high ethernetController_softReset@receivedData
 18426  0156D4  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 18427  0156D6  0E16               	movlw	22
 18428  0156D8  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 18429                           
 18430                           ;ENC424J600.c: 105: enc424j600_readControlRegisterUnbanked(0x17 + 0x00, &receivedData[1]
      +                          );
 18431  0156DC  0E2C               	movlw	low (ethernetController_softReset@receivedData+1)
 18432  0156DE  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 18433  0156E0  0E00               	movlw	high (ethernetController_softReset@receivedData+1)
 18434  0156E2  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 18435  0156E4  0E17               	movlw	23
 18436  0156E6  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 18437                           
 18438                           ;ENC424J600.c: 107: if ((receivedData[0] == dataToSend[0]) && (receivedData[1] == dataTo
      +                          Send[1])) {
 18439  0156EA  5029               	movf	ethernetController_softReset@dataToSend,w,c
 18440  0156EC  182B               	xorwf	ethernetController_softReset@receivedData,w,c
 18441  0156EE  A4D8               	btfss	16344,2,c
 18442  0156F0  D035               	goto	l94
 18443  0156F2  502A               	movf	ethernetController_softReset@dataToSend+1,w,c
 18444  0156F4  182C               	xorwf	ethernetController_softReset@receivedData+1,w,c
 18445  0156F6  A4D8               	btfss	16344,2,c
 18446  0156F8  D031               	goto	l94
 18447                           
 18448                           ;ENC424J600.c: 109: enc424j600_writeSingleByte(0b11001010);
 18449  0156FA  0ECA               	movlw	202
 18450  0156FC  EC22  F0BB         	call	_enc424j600_writeSingleByte
 18451                           
 18452                           ;ENC424J600.c: 110: _delay((unsigned long)((25)*(32000000UL/4000000.0)));
 18453  015700  0E42               	movlw	66
 18454  015702                     u15877:
 18455  015702  2EE8               	decfsz	16360,f,c
 18456  015704  D7FE               	bra	u15877
 18457  015706  D000               	nop2	
 18458                           
 18459                           ;ENC424J600.c: 112: enc424j600_readControlRegisterUnbanked(0x16 + 0x00, &receivedData[0]
      +                          );
 18460  015708  0E2B               	movlw	low ethernetController_softReset@receivedData
 18461  01570A  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 18462  01570C  0E00               	movlw	high ethernetController_softReset@receivedData
 18463  01570E  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 18464  015710  0E16               	movlw	22
 18465  015712  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 18466                           
 18467                           ;ENC424J600.c: 113: enc424j600_readControlRegisterUnbanked(0x17 + 0x00, &receivedData[1]
      +                          );
 18468  015716  0E2C               	movlw	low (ethernetController_softReset@receivedData+1)
 18469  015718  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 18470  01571A  0E00               	movlw	high (ethernetController_softReset@receivedData+1)
 18471  01571C  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 18472  01571E  0E17               	movlw	23
 18473  015720  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 18474                           
 18475                           ;ENC424J600.c: 115: if (!receivedData[0] && !receivedData[1]) {
 18476  015724  502B               	movf	ethernetController_softReset@receivedData,w,c
 18477  015726  A4D8               	btfss	16344,2,c
 18478  015728  D00B               	goto	l92
 18479  01572A  502C               	movf	ethernetController_softReset@receivedData+1,w,c
 18480  01572C  A4D8               	btfss	16344,2,c
 18481  01572E  D008               	goto	l92
 18482                           
 18483                           ;ENC424J600.c: 117: _delay((unsigned long)((256)*(32000000UL/4000000.0)));
 18484  015730  0E03               	movlw	3
 18485  015732  6E27               	movwf	??_ethernetController_softReset& (0+255),c
 18486  015734  0EA8               	movlw	168
 18487  015736                     u15887:
 18488  015736  2EE8               	decfsz	16360,f,c
 18489  015738  D7FE               	bra	u15887
 18490  01573A  2E27               	decfsz	??_ethernetController_softReset& (0+255),f,c
 18491  01573C  D7FC               	bra	u15887
 18492  01573E  D004               	goto	l11334
 18493  015740                     l92:
 18494                           
 18495                           ;ENC424J600.c: 120: err.code = ERROR_ETHERNET_CONTROLLER_UNRESPONSIVE;
 18496  015740  0E01               	movlw	1
 18497  015742  6E2F               	movwf	ethernetController_softReset@err+2,c
 18498  015744  0E2E               	movlw	46
 18499  015746  6E2E               	movwf	ethernetController_softReset@err+1,c
 18500  015748                     l11334:
 18501                           
 18502                           ;ENC424J600.c: 121: return err;
 18503  015748  0060  F0B4  F024   	movff	ethernetController_softReset@err,?_ethernetController_softReset
 18504  01574E  0060  F0B8  F025   	movff	ethernetController_softReset@err+1,?_ethernetController_softReset+1
 18505  015754  0060  F0BC  F026   	movff	ethernetController_softReset@err+2,?_ethernetController_softReset+2
 18506  01575A  0012               	return	
 18507  01575C                     l94:
 18508                           
 18509                           ;ENC424J600.c: 122: }
 18510                           ;ENC424J600.c: 123: }
 18511                           ;ENC424J600.c: 124: comFailCount++;
 18512  01575C  2A28               	incf	ethernetController_softReset@comFailCount,f,c
 18513                           
 18514                           ;ENC424J600.c: 125: } else {
 18515  01575E  D00E               	goto	l95
 18516  015760                     l90:
 18517                           
 18518                           ;ENC424J600.c: 126: err.code = ERROR_ETHERNET_CONTROLLER_UNRESPONSIVE;
 18519  015760  0E01               	movlw	1
 18520  015762  6E2F               	movwf	ethernetController_softReset@err+2,c
 18521  015764  0E2E               	movlw	46
 18522  015766  6E2E               	movwf	ethernetController_softReset@err+1,c
 18523                           
 18524                           ;ENC424J600.c: 127: return err;
 18525  015768  0060  F0B4  F024   	movff	ethernetController_softReset@err,?_ethernetController_softReset
 18526  01576E  0060  F0B8  F025   	movff	ethernetController_softReset@err+1,?_ethernetController_softReset+1
 18527  015774  0060  F0BC  F026   	movff	ethernetController_softReset@err+2,?_ethernetController_softReset+2
 18528  01577A  0012               	return	
 18529  01577C                     l95:
 18530                           
 18531                           ;ENC424J600.c: 128: }
 18532                           ;ENC424J600.c: 129: return err;
 18533  01577C  0060  F0B4  F024   	movff	ethernetController_softReset@err,?_ethernetController_softReset
 18534  015782  0060  F0B8  F025   	movff	ethernetController_softReset@err+1,?_ethernetController_softReset+1
 18535  015788  0060  F0BC  F026   	movff	ethernetController_softReset@err+2,?_ethernetController_softReset+2
 18536  01578E  0012               	return		;funcret
 18537  015790                     __end_of_ethernetController_softReset:
 18538                           	opt stack 0
 18539                           
 18540 ;; *************** function _ethernetController_checkDeviceId *****************
 18541 ;; Defined at:
 18542 ;;		line 132 in file "src/enc424j600/ENC424J600.c"
 18543 ;; Parameters:    Size  Location     Type
 18544 ;;		None
 18545 ;; Auto vars:     Size  Location     Type
 18546 ;;  err             3   39[COMRAM] struct error
 18547 ;;  data            1   38[COMRAM] unsigned char 
 18548 ;; Return value:  Size  Location     Type
 18549 ;;                  3   35[COMRAM] struct error
 18550 ;; Registers used:
 18551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18552 ;; Tracked objects:
 18553 ;;		On entry : 0/0
 18554 ;;		On exit  : 0/0
 18555 ;;		Unchanged: 0/0
 18556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18557 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18558 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18560 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18561 ;;Total ram usage:        7 bytes
 18562 ;; Hardware stack levels used:    1
 18563 ;; Hardware stack levels required when called:    7
 18564 ;; This function calls:
 18565 ;;		_enc424j600_readControlRegisterUnbanked
 18566 ;; This function is called by:
 18567 ;;		_ethernetController_init
 18568 ;;		_main
 18569 ;; This function uses a non-reentrant model
 18570 ;;
 18571                           
 18572                           	psect	text74
 18573  016E9C                     __ptext74:
 18574                           	opt stack 0
 18575  016E9C                     _ethernetController_checkDeviceId:
 18576                           	opt stack 21
 18577                           
 18578                           ;ENC424J600.c: 133: error_t err;
 18579                           ;ENC424J600.c: 134: err.module = ERROR_MODULE_ETHERNET_CONTROLLER;
 18580                           
 18581                           ;incstack = 0
 18582  016E9C  0E01               	movlw	1
 18583  016E9E  6E28               	movwf	ethernetController_checkDeviceId@err,c
 18584                           
 18585                           ;ENC424J600.c: 135: err.code = (uint16_t)0;
 18586  016EA0  0E00               	movlw	0
 18587  016EA2  6E2A               	movwf	ethernetController_checkDeviceId@err+2,c
 18588  016EA4  0E00               	movlw	0
 18589  016EA6  6E29               	movwf	ethernetController_checkDeviceId@err+1,c
 18590                           
 18591                           ;ENC424J600.c: 136: uint8_t data = 0;
 18592  016EA8  0E00               	movlw	0
 18593  016EAA  6E27               	movwf	ethernetController_checkDeviceId@data,c
 18594                           
 18595                           ;ENC424J600.c: 137: enc424j600_readControlRegisterUnbanked(0x14 + 0x60, &data);
 18596  016EAC  0E27               	movlw	low ethernetController_checkDeviceId@data
 18597  016EAE  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 18598  016EB0  0E00               	movlw	high ethernetController_checkDeviceId@data
 18599  016EB2  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 18600  016EB4  0E74               	movlw	116
 18601  016EB6  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 18602                           
 18603                           ;ENC424J600.c: 138: if (((data >> 5)&0x07) == 0b001)
 18604  016EBA  3827               	swapf	ethernetController_checkDeviceId@data,w,c
 18605  016EBC  42E8               	rrncf	16360,f,c
 18606  016EBE  0B07               	andlw	7
 18607  016EC0  0B07               	andlw	7
 18608  016EC2  06E8               	decf	16360,f,c
 18609  016EC4  A4D8               	btfss	16344,2,c
 18610  016EC6  D004               	goto	l98
 18611                           
 18612                           ;ENC424J600.c: 139: err.code = (uint16_t)0;
 18613  016EC8  0E00               	movlw	0
 18614  016ECA  6E2A               	movwf	ethernetController_checkDeviceId@err+2,c
 18615  016ECC  0E00               	movlw	0
 18616  016ECE  D003               	goto	L26
 18617  016ED0                     l98:
 18618                           
 18619                           ;ENC424J600.c: 140: else
 18620                           ;ENC424J600.c: 141: err.code = ERROR_ETHERNET_CONTROLLER_UNKNOWN_DEVICE_ID;
 18621  016ED0  0E01               	movlw	1
 18622  016ED2  6E2A               	movwf	ethernetController_checkDeviceId@err+2,c
 18623  016ED4  0E2D               	movlw	45
 18624  016ED6                     L26:
 18625  016ED6  6E29               	movwf	ethernetController_checkDeviceId@err+1,c
 18626                           
 18627                           ;ENC424J600.c: 142: return err;
 18628  016ED8  0060  F0A0  F024   	movff	ethernetController_checkDeviceId@err,?_ethernetController_checkDeviceId
 18629  016EDE  0060  F0A4  F025   	movff	ethernetController_checkDeviceId@err+1,?_ethernetController_checkDeviceId+1
 18630  016EE4  0060  F0A8  F026   	movff	ethernetController_checkDeviceId@err+2,?_ethernetController_checkDeviceId+2
 18631  016EEA  0012               	return	
 18632  016EEC                     __end_of_ethernetController_checkDeviceId:
 18633                           	opt stack 0
 18634                           
 18635 ;; *************** function _enc424j600_setRXTailPointer *****************
 18636 ;; Defined at:
 18637 ;;		line 667 in file "src/enc424j600/ENC424J600.c"
 18638 ;; Parameters:    Size  Location     Type
 18639 ;;  addr            2   35[COMRAM] unsigned int 
 18640 ;; Auto vars:     Size  Location     Type
 18641 ;;  highByte        1   38[COMRAM] unsigned char 
 18642 ;;  lowByte         1   37[COMRAM] unsigned char 
 18643 ;; Return value:  Size  Location     Type
 18644 ;;                  1    wreg      void 
 18645 ;; Registers used:
 18646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18647 ;; Tracked objects:
 18648 ;;		On entry : 0/0
 18649 ;;		On exit  : 0/0
 18650 ;;		Unchanged: 0/0
 18651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18653 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18655 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18656 ;;Total ram usage:        4 bytes
 18657 ;; Hardware stack levels used:    1
 18658 ;; Hardware stack levels required when called:    7
 18659 ;; This function calls:
 18660 ;;		_enc424j600_writeControlRegisterUnbanked
 18661 ;; This function is called by:
 18662 ;;		_ethernetController_init
 18663 ;;		_ethernetController_dropPacket
 18664 ;; This function uses a non-reentrant model
 18665 ;;
 18666                           
 18667                           	psect	text75
 18668  017406                     __ptext75:
 18669                           	opt stack 0
 18670  017406                     _enc424j600_setRXTailPointer:
 18671                           	opt stack 19
 18672                           
 18673                           ;ENC424J600.c: 668: uint8_t lowByte = addr & 0x00ff;
 18674                           
 18675                           ;incstack = 0
 18676  017406  0060  F090  F026   	movff	enc424j600_setRXTailPointer@addr,enc424j600_setRXTailPointer@lowByte
 18677                           
 18678                           ;ENC424J600.c: 669: uint8_t highByte = (addr >> 8) & 0xff;
 18679  01740C  5025               	movf	enc424j600_setRXTailPointer@addr+1,w,c
 18680  01740E  6E27               	movwf	enc424j600_setRXTailPointer@highByte,c
 18681                           
 18682                           ;ENC424J600.c: 670: enc424j600_writeControlRegisterUnbanked(0x06 + 0x00, &lowByte);
 18683  017410  0E26               	movlw	low enc424j600_setRXTailPointer@lowByte
 18684  017412  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 18685  017414  0E00               	movlw	high enc424j600_setRXTailPointer@lowByte
 18686  017416  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 18687  017418  0E06               	movlw	6
 18688  01741A  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 18689                           
 18690                           ;ENC424J600.c: 671: enc424j600_writeControlRegisterUnbanked(0x07 + 0x00, &highByte);
 18691  01741E  0E27               	movlw	low enc424j600_setRXTailPointer@highByte
 18692  017420  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 18693  017422  0E00               	movlw	high enc424j600_setRXTailPointer@highByte
 18694  017424  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 18695  017426  0E07               	movlw	7
 18696  017428  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 18697  01742C  0012               	return		;funcret
 18698  01742E                     __end_of_enc424j600_setRXTailPointer:
 18699                           	opt stack 0
 18700                           
 18701 ;; *************** function _enc424j600_setRXBufferStartAddress *****************
 18702 ;; Defined at:
 18703 ;;		line 660 in file "src/enc424j600/ENC424J600.c"
 18704 ;; Parameters:    Size  Location     Type
 18705 ;;  addr            2   35[COMRAM] unsigned int 
 18706 ;; Auto vars:     Size  Location     Type
 18707 ;;  highByte        1   38[COMRAM] unsigned char 
 18708 ;;  lowByte         1   37[COMRAM] unsigned char 
 18709 ;; Return value:  Size  Location     Type
 18710 ;;                  1    wreg      void 
 18711 ;; Registers used:
 18712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18713 ;; Tracked objects:
 18714 ;;		On entry : 0/0
 18715 ;;		On exit  : 0/0
 18716 ;;		Unchanged: 0/0
 18717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18719 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18721 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18722 ;;Total ram usage:        4 bytes
 18723 ;; Hardware stack levels used:    1
 18724 ;; Hardware stack levels required when called:    7
 18725 ;; This function calls:
 18726 ;;		_enc424j600_writeControlRegisterUnbanked
 18727 ;; This function is called by:
 18728 ;;		_ethernetController_init
 18729 ;; This function uses a non-reentrant model
 18730 ;;
 18731                           
 18732                           	psect	text76
 18733  01742E                     __ptext76:
 18734                           	opt stack 0
 18735  01742E                     _enc424j600_setRXBufferStartAddress:
 18736                           	opt stack 21
 18737                           
 18738                           ;ENC424J600.c: 661: uint8_t lowByte = addr & 0x00ff;
 18739                           
 18740                           ;incstack = 0
 18741  01742E  0060  F090  F026   	movff	enc424j600_setRXBufferStartAddress@addr,enc424j600_setRXBufferStartAddress@lowByt
      +                          e
 18742                           
 18743                           ;ENC424J600.c: 662: uint8_t highByte = (addr >> 8) & 0xff;
 18744  017434  5025               	movf	enc424j600_setRXBufferStartAddress@addr+1,w,c
 18745  017436  6E27               	movwf	enc424j600_setRXBufferStartAddress@highByte,c
 18746                           
 18747                           ;ENC424J600.c: 663: enc424j600_writeControlRegisterUnbanked(0x04 + 0x00, &lowByte);
 18748  017438  0E26               	movlw	low enc424j600_setRXBufferStartAddress@lowByte
 18749  01743A  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 18750  01743C  0E00               	movlw	high enc424j600_setRXBufferStartAddress@lowByte
 18751  01743E  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 18752  017440  0E04               	movlw	4
 18753  017442  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 18754                           
 18755                           ;ENC424J600.c: 664: enc424j600_writeControlRegisterUnbanked(0x05 + 0x00, &highByte);
 18756  017446  0E27               	movlw	low enc424j600_setRXBufferStartAddress@highByte
 18757  017448  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 18758  01744A  0E00               	movlw	high enc424j600_setRXBufferStartAddress@highByte
 18759  01744C  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 18760  01744E  0E05               	movlw	5
 18761  017450  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 18762  017454  0012               	return		;funcret
 18763  017456                     __end_of_enc424j600_setRXBufferStartAddress:
 18764                           	opt stack 0
 18765                           
 18766 ;; *************** function _enc424j600_setNextPacketPointer *****************
 18767 ;; Defined at:
 18768 ;;		line 604 in file "src/enc424j600/ENC424J600.c"
 18769 ;; Parameters:    Size  Location     Type
 18770 ;;  ptr             2   21[COMRAM] unsigned int 
 18771 ;; Auto vars:     Size  Location     Type
 18772 ;;		None
 18773 ;; Return value:  Size  Location     Type
 18774 ;;                  1    wreg      void 
 18775 ;; Registers used:
 18776 ;;		None
 18777 ;; Tracked objects:
 18778 ;;		On entry : 0/0
 18779 ;;		On exit  : 0/0
 18780 ;;		Unchanged: 0/0
 18781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18786 ;;Total ram usage:        2 bytes
 18787 ;; Hardware stack levels used:    1
 18788 ;; Hardware stack levels required when called:    4
 18789 ;; This function calls:
 18790 ;;		Nothing
 18791 ;; This function is called by:
 18792 ;;		_ethernetController_init
 18793 ;;		_ethernetController_updateNextPacketPointer
 18794 ;; This function uses a non-reentrant model
 18795 ;;
 18796                           
 18797                           	psect	text77
 18798  01773A                     __ptext77:
 18799                           	opt stack 0
 18800  01773A                     _enc424j600_setNextPacketPointer:
 18801                           	opt stack 23
 18802                           
 18803                           ;ENC424J600.c: 605: nextPacketPointer = ptr;
 18804                           
 18805                           ;incstack = 0
 18806  01773A  0060  F058  F03B   	movff	enc424j600_setNextPacketPointer@ptr,_nextPacketPointer
 18807  017740  0060  F05C  F03C   	movff	enc424j600_setNextPacketPointer@ptr+1,_nextPacketPointer+1
 18808  017746  0012               	return		;funcret
 18809  017748                     __end_of_enc424j600_setNextPacketPointer:
 18810                           	opt stack 0
 18811                           
 18812 ;; *************** function _enc424j600_enableReception *****************
 18813 ;; Defined at:
 18814 ;;		line 690 in file "src/enc424j600/ENC424J600.c"
 18815 ;; Parameters:    Size  Location     Type
 18816 ;;		None
 18817 ;; Auto vars:     Size  Location     Type
 18818 ;;		None
 18819 ;; Return value:  Size  Location     Type
 18820 ;;                  1    wreg      void 
 18821 ;; Registers used:
 18822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18823 ;; Tracked objects:
 18824 ;;		On entry : 0/0
 18825 ;;		On exit  : 0/0
 18826 ;;		Unchanged: 0/0
 18827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18832 ;;Total ram usage:        0 bytes
 18833 ;; Hardware stack levels used:    1
 18834 ;; Hardware stack levels required when called:    7
 18835 ;; This function calls:
 18836 ;;		_enc424j600_writeSingleByte
 18837 ;; This function is called by:
 18838 ;;		_ethernetController_init
 18839 ;;		_ethernetController_enableReception
 18840 ;; This function uses a non-reentrant model
 18841 ;;
 18842                           
 18843                           	psect	text78
 18844  017764                     __ptext78:
 18845                           	opt stack 0
 18846  017764                     _enc424j600_enableReception:
 18847                           	opt stack 21
 18848                           
 18849                           ;ENC424J600.c: 691: enc424j600_writeSingleByte(0b11101000);
 18850                           
 18851                           ;incstack = 0
 18852  017764  0EE8               	movlw	232
 18853  017766  EC22  F0BB         	call	_enc424j600_writeSingleByte
 18854  01776A  0012               	return		;funcret
 18855  01776C                     __end_of_enc424j600_enableReception:
 18856                           	opt stack 0
 18857                           
 18858 ;; *************** function _enc424j600_enableAutoMACInsertion *****************
 18859 ;; Defined at:
 18860 ;;		line 676 in file "src/enc424j600/ENC424J600.c"
 18861 ;; Parameters:    Size  Location     Type
 18862 ;;		None
 18863 ;; Auto vars:     Size  Location     Type
 18864 ;;  temp            1   35[COMRAM] unsigned char 
 18865 ;; Return value:  Size  Location     Type
 18866 ;;                  1    wreg      void 
 18867 ;; Registers used:
 18868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18869 ;; Tracked objects:
 18870 ;;		On entry : 0/0
 18871 ;;		On exit  : 0/0
 18872 ;;		Unchanged: 0/0
 18873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18875 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18877 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18878 ;;Total ram usage:        1 bytes
 18879 ;; Hardware stack levels used:    1
 18880 ;; Hardware stack levels required when called:    7
 18881 ;; This function calls:
 18882 ;;		_enc424j600_readControlRegisterUnbanked
 18883 ;;		_enc424j600_writeControlRegisterUnbanked
 18884 ;; This function is called by:
 18885 ;;		_ethernetController_init
 18886 ;; This function uses a non-reentrant model
 18887 ;;
 18888                           
 18889                           	psect	text79
 18890  0174CE                     __ptext79:
 18891                           	opt stack 0
 18892  0174CE                     _enc424j600_enableAutoMACInsertion:
 18893                           	opt stack 21
 18894                           
 18895                           ;ENC424J600.c: 677: uint8_t temp = 0;
 18896                           
 18897                           ;incstack = 0
 18898  0174CE  0E00               	movlw	0
 18899  0174D0  6E24               	movwf	enc424j600_enableAutoMACInsertion@temp,c
 18900                           
 18901                           ;ENC424J600.c: 678: enc424j600_readControlRegisterUnbanked(0x0F + 0x60, &temp);
 18902  0174D2  0E24               	movlw	low enc424j600_enableAutoMACInsertion@temp
 18903  0174D4  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 18904  0174D6  0E00               	movlw	high enc424j600_enableAutoMACInsertion@temp
 18905  0174D8  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 18906  0174DA  0E6F               	movlw	111
 18907  0174DC  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 18908                           
 18909                           ;ENC424J600.c: 679: temp |= (1 << 5);
 18910  0174E0  8A24               	bsf	enc424j600_enableAutoMACInsertion@temp,5,c
 18911                           
 18912                           ;ENC424J600.c: 680: enc424j600_writeControlRegisterUnbanked(0x0F + 0x60, &temp);
 18913  0174E2  0E24               	movlw	low enc424j600_enableAutoMACInsertion@temp
 18914  0174E4  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 18915  0174E6  0E00               	movlw	high enc424j600_enableAutoMACInsertion@temp
 18916  0174E8  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 18917  0174EA  0E6F               	movlw	111
 18918  0174EC  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 18919  0174F0  0012               	return		;funcret
 18920  0174F2                     __end_of_enc424j600_enableAutoMACInsertion:
 18921                           	opt stack 0
 18922                           
 18923 ;; *************** function _ethernetController_getMTU *****************
 18924 ;; Defined at:
 18925 ;;		line 168 in file "src/enc424j600/ENC424J600.c"
 18926 ;; Parameters:    Size  Location     Type
 18927 ;;		None
 18928 ;; Auto vars:     Size  Location     Type
 18929 ;;		None
 18930 ;; Return value:  Size  Location     Type
 18931 ;;                  2   21[COMRAM] unsigned int 
 18932 ;; Registers used:
 18933 ;;		wreg, status,2
 18934 ;; Tracked objects:
 18935 ;;		On entry : 0/0
 18936 ;;		On exit  : 0/0
 18937 ;;		Unchanged: 0/0
 18938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18943 ;;Total ram usage:        2 bytes
 18944 ;; Hardware stack levels used:    1
 18945 ;; Hardware stack levels required when called:    4
 18946 ;; This function calls:
 18947 ;;		Nothing
 18948 ;; This function is called by:
 18949 ;;		_handleStackBackgroundTasks
 18950 ;; This function uses a non-reentrant model
 18951 ;;
 18952                           
 18953                           	psect	text80
 18954  017748                     __ptext80:
 18955                           	opt stack 0
 18956  017748                     _ethernetController_getMTU:
 18957                           	opt stack 25
 18958                           
 18959                           ;ENC424J600.c: 169: return 1500;
 18960                           
 18961                           ;incstack = 0
 18962  017748  0E05               	movlw	5
 18963  01774A  6E17               	movwf	?_ethernetController_getMTU+1,c
 18964  01774C  0EDC               	movlw	220
 18965  01774E  6E16               	movwf	?_ethernetController_getMTU,c
 18966  017750  0012               	return	
 18967  017752                     __end_of_ethernetController_getMTU:
 18968                           	opt stack 0
 18969                           
 18970 ;; *************** function _ethernetController_disableEthernet *****************
 18971 ;; Defined at:
 18972 ;;		line 197 in file "src/enc424j600/ENC424J600.c"
 18973 ;; Parameters:    Size  Location     Type
 18974 ;;		None
 18975 ;; Auto vars:     Size  Location     Type
 18976 ;;		None
 18977 ;; Return value:  Size  Location     Type
 18978 ;;                  1    wreg      void 
 18979 ;; Registers used:
 18980 ;;		None
 18981 ;; Tracked objects:
 18982 ;;		On entry : 0/0
 18983 ;;		On exit  : 0/0
 18984 ;;		Unchanged: 0/0
 18985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18990 ;;Total ram usage:        0 bytes
 18991 ;; Hardware stack levels used:    1
 18992 ;; Hardware stack levels required when called:    4
 18993 ;; This function calls:
 18994 ;;		Nothing
 18995 ;; This function is called by:
 18996 ;;		_handleStackBackgroundTasks
 18997 ;; This function uses a non-reentrant model
 18998 ;;
 18999                           
 19000                           	psect	text81
 19001  01776E                     __ptext81:
 19002                           	opt stack 0
 19003  01776E                     _ethernetController_disableEthernet:
 19004                           	opt stack 25
 19005                           
 19006                           ;incstack = 0
 19007  01776E  0012               	return		;funcret
 19008  017770                     __end_of_ethernetController_disableEthernet:
 19009                           	opt stack 0
 19010                           
 19011 ;; *************** function _ethernetController_clearInterruptFlag *****************
 19012 ;; Defined at:
 19013 ;;		line 330 in file "src/enc424j600/ENC424J600.c"
 19014 ;; Parameters:    Size  Location     Type
 19015 ;;  flag            1    wreg     unsigned char 
 19016 ;; Auto vars:     Size  Location     Type
 19017 ;;  flag            1   39[COMRAM] unsigned char 
 19018 ;; Return value:  Size  Location     Type
 19019 ;;                  1    wreg      void 
 19020 ;; Registers used:
 19021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19022 ;; Tracked objects:
 19023 ;;		On entry : 0/0
 19024 ;;		On exit  : 0/0
 19025 ;;		Unchanged: 0/0
 19026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19031 ;;Total ram usage:        1 bytes
 19032 ;; Hardware stack levels used:    1
 19033 ;; Hardware stack levels required when called:    8
 19034 ;; This function calls:
 19035 ;;		_enc424j600_clearInterruptFlag
 19036 ;; This function is called by:
 19037 ;;		_handleStackBackgroundTasks
 19038 ;; This function uses a non-reentrant model
 19039 ;;
 19040                           
 19041                           	psect	text82
 19042  017752                     __ptext82:
 19043                           	opt stack 0
 19044  017752                     _ethernetController_clearInterruptFlag:
 19045                           	opt stack 21
 19046                           
 19047                           ;incstack = 0
 19048                           ;ethernetController_clearInterruptFlag@flag stored from wreg
 19049  017752  6E28               	movwf	ethernetController_clearInterruptFlag@flag,c
 19050                           
 19051                           ;ENC424J600.c: 331: enc424j600_clearInterruptFlag(flag);
 19052  017754  5028               	movf	ethernetController_clearInterruptFlag@flag,w,c
 19053  017756  ECF6  F0B2         	call	_enc424j600_clearInterruptFlag
 19054  01775A  0012               	return		;funcret
 19055  01775C                     __end_of_ethernetController_clearInterruptFlag:
 19056                           	opt stack 0
 19057                           
 19058 ;; *************** function _enc424j600_clearInterruptFlag *****************
 19059 ;; Defined at:
 19060 ;;		line 721 in file "src/enc424j600/ENC424J600.c"
 19061 ;; Parameters:    Size  Location     Type
 19062 ;;  flag            1    wreg     unsigned char 
 19063 ;; Auto vars:     Size  Location     Type
 19064 ;;  flag            1   37[COMRAM] unsigned char 
 19065 ;;  temp            1   38[COMRAM] unsigned char 
 19066 ;; Return value:  Size  Location     Type
 19067 ;;                  1    wreg      void 
 19068 ;; Registers used:
 19069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19070 ;; Tracked objects:
 19071 ;;		On entry : 0/0
 19072 ;;		On exit  : 0/0
 19073 ;;		Unchanged: 0/0
 19074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19079 ;;Total ram usage:        4 bytes
 19080 ;; Hardware stack levels used:    1
 19081 ;; Hardware stack levels required when called:    7
 19082 ;; This function calls:
 19083 ;;		_enc424j600_readControlRegisterUnbanked
 19084 ;;		_enc424j600_writeControlRegisterUnbanked
 19085 ;; This function is called by:
 19086 ;;		_ethernetController_clearInterruptFlag
 19087 ;; This function uses a non-reentrant model
 19088 ;;
 19089                           
 19090                           	psect	text83
 19091  0165EC                     __ptext83:
 19092                           	opt stack 0
 19093  0165EC                     _enc424j600_clearInterruptFlag:
 19094                           	opt stack 21
 19095                           
 19096                           ;incstack = 0
 19097                           ;enc424j600_clearInterruptFlag@flag stored from wreg
 19098  0165EC  6E26               	movwf	enc424j600_clearInterruptFlag@flag,c
 19099                           
 19100                           ;ENC424J600.c: 722: uint8_t temp;
 19101                           ;ENC424J600.c: 723: if (flag < 8) {
 19102  0165EE  0E08               	movlw	8
 19103  0165F0  6026               	cpfslt	enc424j600_clearInterruptFlag@flag,c
 19104  0165F2  D01D               	goto	l318
 19105                           
 19106                           ;ENC424J600.c: 724: enc424j600_readControlRegisterUnbanked(0x1C + 0x00, &temp);
 19107  0165F4  0E27               	movlw	low enc424j600_clearInterruptFlag@temp
 19108  0165F6  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 19109  0165F8  0E00               	movlw	high enc424j600_clearInterruptFlag@temp
 19110  0165FA  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 19111  0165FC  0E1C               	movlw	28
 19112  0165FE  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 19113                           
 19114                           ;ENC424J600.c: 725: temp &= ~(1 << flag);
 19115  016602  0060  F098  F024   	movff	enc424j600_clearInterruptFlag@flag,??_enc424j600_clearInterruptFlag
 19116  016608  0E01               	movlw	1
 19117  01660A  6E25               	movwf	(??_enc424j600_clearInterruptFlag+1)& (0+255),c
 19118  01660C  2A24               	incf	??_enc424j600_clearInterruptFlag,f,c
 19119  01660E  D002               	goto	u14124
 19120  016610                     u14125:
 19121  016610  90D8               	bcf	16344,0,c
 19122  016612  3625               	rlcf	??_enc424j600_clearInterruptFlag+1,f,c
 19123  016614                     u14124:
 19124  016614  2E24               	decfsz	??_enc424j600_clearInterruptFlag,f,c
 19125  016616  D7FC               	goto	u14125
 19126  016618  5025               	movf	??_enc424j600_clearInterruptFlag+1,w,c
 19127  01661A  0AFF               	xorlw	255
 19128  01661C  1627               	andwf	enc424j600_clearInterruptFlag@temp,f,c
 19129                           
 19130                           ;ENC424J600.c: 726: enc424j600_writeControlRegisterUnbanked(0x1C + 0x00, &temp);
 19131  01661E  0E27               	movlw	low enc424j600_clearInterruptFlag@temp
 19132  016620  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 19133  016622  0E00               	movlw	high enc424j600_clearInterruptFlag@temp
 19134  016624  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 19135  016626  0E1C               	movlw	28
 19136  016628  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 19137                           
 19138                           ;ENC424J600.c: 727: } else {
 19139  01662C  0012               	return	
 19140  01662E                     l318:
 19141                           
 19142                           ;ENC424J600.c: 728: flag -= 8;
 19143  01662E  0E08               	movlw	8
 19144  016630  5E26               	subwf	enc424j600_clearInterruptFlag@flag,f,c
 19145                           
 19146                           ;ENC424J600.c: 729: enc424j600_readControlRegisterUnbanked(0x1D + 0x00, &temp);
 19147  016632  0E27               	movlw	low enc424j600_clearInterruptFlag@temp
 19148  016634  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 19149  016636  0E00               	movlw	high enc424j600_clearInterruptFlag@temp
 19150  016638  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 19151  01663A  0E1D               	movlw	29
 19152  01663C  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 19153                           
 19154                           ;ENC424J600.c: 730: temp &= ~(1 << flag);
 19155  016640  0060  F098  F024   	movff	enc424j600_clearInterruptFlag@flag,??_enc424j600_clearInterruptFlag
 19156  016646  0E01               	movlw	1
 19157  016648  6E25               	movwf	(??_enc424j600_clearInterruptFlag+1)& (0+255),c
 19158  01664A  2A24               	incf	??_enc424j600_clearInterruptFlag,f,c
 19159  01664C  D002               	goto	u14134
 19160  01664E                     u14135:
 19161  01664E  90D8               	bcf	16344,0,c
 19162  016650  3625               	rlcf	??_enc424j600_clearInterruptFlag+1,f,c
 19163  016652                     u14134:
 19164  016652  2E24               	decfsz	??_enc424j600_clearInterruptFlag,f,c
 19165  016654  D7FC               	goto	u14135
 19166  016656  5025               	movf	??_enc424j600_clearInterruptFlag+1,w,c
 19167  016658  0AFF               	xorlw	255
 19168  01665A  1627               	andwf	enc424j600_clearInterruptFlag@temp,f,c
 19169                           
 19170                           ;ENC424J600.c: 731: enc424j600_writeControlRegisterUnbanked(0x1D + 0x00, &temp);
 19171  01665C  0E27               	movlw	low enc424j600_clearInterruptFlag@temp
 19172  01665E  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 19173  016660  0E00               	movlw	high enc424j600_clearInterruptFlag@temp
 19174  016662  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 19175  016664  0E1D               	movlw	29
 19176  016666  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 19177  01666A  0012               	return	
 19178  01666C                     __end_of_enc424j600_clearInterruptFlag:
 19179                           	opt stack 0
 19180                           
 19181 ;; *************** function _arp_init *****************
 19182 ;; Defined at:
 19183 ;;		line 516 in file "src/stack/protocols/arp.c"
 19184 ;; Parameters:    Size  Location     Type
 19185 ;;		None
 19186 ;; Auto vars:     Size  Location     Type
 19187 ;;  i               1   34[COMRAM] unsigned char 
 19188 ;;  mac             6   24[COMRAM] struct macaddress
 19189 ;;  ip              4   30[COMRAM] struct ipv4_address
 19190 ;; Return value:  Size  Location     Type
 19191 ;;                  1    wreg      void 
 19192 ;; Registers used:
 19193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19194 ;; Tracked objects:
 19195 ;;		On entry : 0/0
 19196 ;;		On exit  : 0/0
 19197 ;;		Unchanged: 0/0
 19198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19200 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19202 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19203 ;;Total ram usage:       11 bytes
 19204 ;; Hardware stack levels used:    1
 19205 ;; Hardware stack levels required when called:    5
 19206 ;; This function calls:
 19207 ;;		_ipv4_setToAllZero
 19208 ;;		_mac_setAllZero
 19209 ;; This function is called by:
 19210 ;;		_handleStackBackgroundTasks
 19211 ;;		_stack_init
 19212 ;; This function uses a non-reentrant model
 19213 ;;
 19214                           
 19215                           	psect	text84
 19216  016218                     __ptext84:
 19217                           	opt stack 0
 19218  016218                     _arp_init:
 19219                           	opt stack 24
 19220                           
 19221                           ;arp.c: 517: ipv4_address_t ip;
 19222                           ;arp.c: 518: macaddress_t mac;
 19223                           ;arp.c: 519: ipv4_setToAllZero(&ip);
 19224                           
 19225                           ;incstack = 0
 19226  016218  0E1F               	movlw	low arp_init@ip
 19227  01621A  6E16               	movwf	ipv4_setToAllZero@ip,c
 19228  01621C  0E00               	movlw	high arp_init@ip
 19229  01621E  6E17               	movwf	ipv4_setToAllZero@ip+1,c
 19230  016220  EC79  F0BA         	call	_ipv4_setToAllZero	;wreg free
 19231                           
 19232                           ;arp.c: 520: mac_setAllZero(&mac);
 19233  016224  0E19               	movlw	low arp_init@mac
 19234  016226  6E16               	movwf	mac_setAllZero@mac,c
 19235  016228  0E00               	movlw	high arp_init@mac
 19236  01622A  6E17               	movwf	mac_setAllZero@mac+1,c
 19237  01622C  EC8B  F0BA         	call	_mac_setAllZero	;wreg free
 19238                           
 19239                           ;arp.c: 521: for (uint8_t i = 0; i < 8u; i++) {
 19240  016230  0E00               	movlw	0
 19241  016232  6E23               	movwf	arp_init@i,c
 19242  016234                     l12016:
 19243  016234  0E07               	movlw	7
 19244  016236  6423               	cpfsgt	arp_init@i,c
 19245  016238  D001               	goto	l1094
 19246  01623A  0012               	return	
 19247  01623C                     l1094:
 19248                           
 19249                           ;arp.c: 522: arp_table[i].ip = ip;
 19250  01623C  5023               	movf	arp_init@i,w,c
 19251  01623E  0D0E               	mullw	14
 19252  016240  0E7C               	movlw	low _arp_table
 19253  016242  24F3               	addwf	16371,w,c
 19254  016244  6ED9               	movwf	16345,c
 19255  016246  0E04               	movlw	high _arp_table
 19256  016248  20F4               	addwfc	16372,w,c
 19257  01624A  6EDA               	movwf	16346,c
 19258  01624C  0060  F07F  FFDE   	movff	arp_init@ip,16350
 19259  016252  0060  F083  FFDE   	movff	arp_init@ip+1,16350
 19260  016258  0060  F087  FFDE   	movff	arp_init@ip+2,16350
 19261  01625E  0060  F08B  FFDE   	movff	arp_init@ip+3,16350
 19262                           
 19263                           ;arp.c: 523: arp_table[i].mac = mac;
 19264  016264  EE20  F019         	lfsr	2,arp_init@mac
 19265  016268  5023               	movf	arp_init@i,w,c
 19266  01626A  0D0E               	mullw	14
 19267  01626C  0E04               	movlw	4
 19268  01626E  26F3               	addwf	16371,f,c
 19269  016270  0E00               	movlw	0
 19270  016272  22F4               	addwfc	16372,f,c
 19271  016274  0E7C               	movlw	low _arp_table
 19272  016276  24F3               	addwf	16371,w,c
 19273  016278  6EE1               	movwf	16353,c
 19274  01627A  0E04               	movlw	high _arp_table
 19275  01627C  20F4               	addwfc	16372,w,c
 19276  01627E  6EE2               	movwf	16354,c
 19277  016280  0E05               	movlw	5
 19278  016282                     u15001:
 19279  016282  006F FF6F FFE3     	movff	16347,16355
 19280  016288  06E8               	decf	16360,f,c
 19281  01628A  E2FB               	bc	u15001
 19282                           
 19283                           ;arp.c: 524: arp_table[i].timeCreated = 0;
 19284  01628C  5023               	movf	arp_init@i,w,c
 19285  01628E  0D0E               	mullw	14
 19286  016290  0E0A               	movlw	10
 19287  016292  26F3               	addwf	16371,f,c
 19288  016294  0E00               	movlw	0
 19289  016296  22F4               	addwfc	16372,f,c
 19290  016298  0E7C               	movlw	low _arp_table
 19291  01629A  24F3               	addwf	16371,w,c
 19292  01629C  6ED9               	movwf	16345,c
 19293  01629E  0E04               	movlw	high _arp_table
 19294  0162A0  20F4               	addwfc	16372,w,c
 19295  0162A2  6EDA               	movwf	16346,c
 19296  0162A4  6ADE               	clrf	16350,c
 19297  0162A6  6ADE               	clrf	16350,c
 19298  0162A8  6ADE               	clrf	16350,c
 19299  0162AA  6ADD               	clrf	16349,c
 19300  0162AC  2A23               	incf	arp_init@i,f,c
 19301  0162AE  D7C2               	goto	l12016
 19302  0162B0                     __end_of_arp_init:
 19303                           	opt stack 0
 19304                           
 19305 ;; *************** function _arp_background *****************
 19306 ;; Defined at:
 19307 ;;		line 394 in file "src/stack/protocols/arp.c"
 19308 ;; Parameters:    Size  Location     Type
 19309 ;;  link            1    wreg     enum E238
 19310 ;; Auto vars:     Size  Location     Type
 19311 ;;  link            1   63[BANK1 ] enum E238
 19312 ;;  errProbe        3   67[BANK1 ] struct error
 19313 ;;  errAnnounce     3   64[BANK1 ] struct error
 19314 ;; Return value:  Size  Location     Type
 19315 ;;                  3   60[BANK1 ] struct error
 19316 ;; Registers used:
 19317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19318 ;; Tracked objects:
 19319 ;;		On entry : 0/0
 19320 ;;		On exit  : 0/0
 19321 ;;		Unchanged: 0/0
 19322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19323 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19324 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19325 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19326 ;;      Totals:         0       2      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19327 ;;Total ram usage:       12 bytes
 19328 ;; Hardware stack levels used:    1
 19329 ;; Hardware stack levels required when called:   12
 19330 ;; This function calls:
 19331 ;;		_arp_gratuitous
 19332 ;;		_arp_probe
 19333 ;;		_ipv4_SrcAddrChanged
 19334 ;;		_ipv4_getPreliminaryIPSourceAddress
 19335 ;; This function is called by:
 19336 ;;		_handleStackBackgroundTasks
 19337 ;; This function uses a non-reentrant model
 19338 ;;
 19339                           
 19340                           	psect	text85
 19341  014BDA                     __ptext85:
 19342                           	opt stack 0
 19343  014BDA                     _arp_background:
 19344                           	opt stack 17
 19345                           
 19346                           ;incstack = 0
 19347                           ;arp_background@link stored from wreg
 19348  014BDA  0101               	movlb	1	; () banked
 19349  014BDC  6F3F               	movwf	arp_background@link& (0+255),b
 19350                           
 19351                           ;arp.c: 395: error_t static err;
 19352                           ;arp.c: 396: error_t errProbe;
 19353                           ;arp.c: 397: error_t errAnnounce;
 19354                           ;arp.c: 398: bool_t static fAnnounce = 0u;
 19355                           ;arp.c: 399: int8_t static state = 0;
 19356                           ;arp.c: 400: ipv4_address_t static ipPreliminary;
 19357                           ;arp.c: 401: err.code = ERROR_ARP_WAITING;
 19358  014BDE  0E01               	movlw	1
 19359  014BE0  6E4A               	movwf	arp_background@err+2,c
 19360  014BE2  0E91               	movlw	145
 19361  014BE4  6E49               	movwf	arp_background@err+1,c
 19362                           
 19363                           ;arp.c: 402: err.module = ERROR_MODULE_ARP;
 19364  014BE6  0E03               	movlw	3
 19365  014BE8  6E48               	movwf	arp_background@err,c
 19366                           
 19367                           ;arp.c: 404: switch (state) {
 19368  014BEA  D08C               	goto	l1060
 19369  014BEC                     
 19370                           ;arp.c: 408: ipPreliminary = ipv4_getPreliminaryIPSourceAddress();
 19371  014BEC  EC08  F0BB         	call	_ipv4_getPreliminaryIPSourceAddress	;wreg free
 19372  014BF0  0060  F058  F2A7   	movff	?_ipv4_getPreliminaryIPSourceAddress,arp_background@ipPreliminary
 19373  014BF6  0060  F05C  F2A8   	movff	?_ipv4_getPreliminaryIPSourceAddress+1,arp_background@ipPreliminary+1
 19374  014BFC  0060  F060  F2A9   	movff	?_ipv4_getPreliminaryIPSourceAddress+2,arp_background@ipPreliminary+2
 19375  014C02  0060  F064  F2AA   	movff	?_ipv4_getPreliminaryIPSourceAddress+3,arp_background@ipPreliminary+3
 19376                           
 19377                           ;arp.c: 409: if (ipv4_SrcAddrChanged(&err)) {
 19378  014C08  0E48               	movlw	low arp_background@err
 19379  014C0A  6E16               	movwf	ipv4_SrcAddrChanged@err,c
 19380  014C0C  0E00               	movlw	high arp_background@err
 19381  014C0E  6E17               	movwf	ipv4_SrcAddrChanged@err+1,c
 19382  014C10  EC7F  F0BB         	call	_ipv4_SrcAddrChanged	;wreg free
 19383  014C14  0900               	iorlw	0
 19384  014C16  B4D8               	btfsc	16344,2,c
 19385  014C18  D03A               	goto	l1065
 19386                           
 19387                           ;arp.c: 410: errProbe.code = arp_probe(ipPreliminary, link).code;
 19388  014C1A  0060  FA9C  F0E7   	movff	arp_background@ipPreliminary,arp_probe@ipTarget
 19389  014C20  0060  FAA0  F0E8   	movff	arp_background@ipPreliminary+1,arp_probe@ipTarget+1
 19390  014C26  0060  FAA4  F0E9   	movff	arp_background@ipPreliminary+2,arp_probe@ipTarget+2
 19391  014C2C  0060  FAA8  F0EA   	movff	arp_background@ipPreliminary+3,arp_probe@ipTarget+3
 19392  014C32  0060  F4FC  F0EB   	movff	arp_background@link,arp_probe@link
 19393  014C38  EC6E  F099         	call	_arp_probe	;wreg free
 19394  014C3C  0EE7               	movlw	low ?_arp_probe
 19395  014C3E  6ED9               	movwf	16345,c
 19396  014C40  0E00               	movlw	high ?_arp_probe
 19397  014C42  6EDA               	movwf	16346,c
 19398  014C44  0E01               	movlw	1
 19399  014C46  26D9               	addwf	16345,f,c
 19400  014C48  0E00               	movlw	0
 19401  014C4A  22DA               	addwfc	16346,f,c
 19402  014C4C  006F FF78  F144    	movff	16350,arp_background@errProbe+1
 19403  014C52  006F FF74  F145    	movff	16349,arp_background@errProbe+2
 19404                           
 19405                           ;arp.c: 411: switch (errProbe.code) {
 19406  014C58  D003               	goto	l1063
 19407  014C5A                     
 19408                           ;arp.c: 421: state = 1;
 19409  014C5A  0E01               	movlw	1
 19410  014C5C  6E40               	movwf	arp_background@state,c
 19411                           
 19412                           ;arp.c: 435: }
 19413                           
 19414                           ;arp.c: 434: break;
 19415                           
 19416                           ;arp.c: 430: default:
 19417                           
 19418                           ;arp.c: 429: break;
 19419                           
 19420                           ;arp.c: 425: case ERROR_ARP_CONNECTION_FAILED:
 19421                           
 19422                           ;arp.c: 424: break;
 19423                           
 19424                           ;arp.c: 423: case ERROR_ARP_WAITING:
 19425                           
 19426                           ;arp.c: 422: break;
 19427  014C5E  D017               	goto	l1065
 19428  014C60                     l1063:
 19429  014C60  EE20  F144         	lfsr	2,arp_background@errProbe+1
 19430  014C64  006F FF78  F0F8    	movff	16350,??_arp_background
 19431  014C6A  006F FF74  F0F9    	movff	16349,??_arp_background+1
 19432                           
 19433                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19434                           ; Switch size 1, requested type "space"
 19435                           ; Number of cases is 1, Range of values is 1 to 1
 19436                           ; switch strategies available:
 19437                           ; Name         Instructions Cycles
 19438                           ; simple_byte            4     3 (average)
 19439                           ;	Chosen strategy is simple_byte
 19440  014C70  0100               	movlb	0	; () banked
 19441  014C72  51F9               	movf	(??_arp_background+1)& (0+255),w,b
 19442  014C74  0A01               	xorlw	1	; case 1
 19443  014C76  A4D8               	btfss	16344,2,c
 19444  014C78  D00A               	goto	l1065
 19445                           
 19446                           ; BSR set to: 0
 19447                           ; Switch size 1, requested type "space"
 19448                           ; Number of cases is 4, Range of values is 145 to 151
 19449                           ; switch strategies available:
 19450                           ; Name         Instructions Cycles
 19451                           ; simple_byte           13     7 (average)
 19452                           ;	Chosen strategy is simple_byte
 19453  014C7A  51F8               	movf	??_arp_background& (0+255),w,b
 19454  014C7C  0A91               	xorlw	145	; case 145
 19455  014C7E  B4D8               	btfsc	16344,2,c
 19456  014C80  D006               	goto	l1065
 19457  014C82  0A02               	xorlw	2	; case 147
 19458  014C84  B4D8               	btfsc	16344,2,c
 19459  014C86  D7E9               	goto	l1066
 19460  014C88  0A05               	xorlw	5	; case 150
 19461  014C8A  A4D8               	btfss	16344,2,c
 19462  014C8C  0A01               	xorlw	1	; case 151
 19463  014C8E                     l1065:
 19464                           
 19465                           ;arp.c: 436: }
 19466                           ;arp.c: 437: err.code = errProbe.code;
 19467                           
 19468                           ; BSR set to: 0
 19469  014C8E  0060  F510  F049   	movff	arp_background@errProbe+1,arp_background@err+1
 19470  014C94  0060  F514  F04A   	movff	arp_background@errProbe+2,arp_background@err+2
 19471                           
 19472                           ;arp.c: 439: break;
 19473  014C9A  D03B               	goto	l1070
 19474  014C9C                     
 19475                           ;arp.c: 442: errAnnounce = arp_gratuitous(ipPreliminary, link);
 19476  014C9C  0060  FA9C  F0E7   	movff	arp_background@ipPreliminary,arp_gratuitous@ip
 19477  014CA2  0060  FAA0  F0E8   	movff	arp_background@ipPreliminary+1,arp_gratuitous@ip+1
 19478  014CA8  0060  FAA4  F0E9   	movff	arp_background@ipPreliminary+2,arp_gratuitous@ip+2
 19479  014CAE  0060  FAA8  F0EA   	movff	arp_background@ipPreliminary+3,arp_gratuitous@ip+3
 19480  014CB4  0060  F4FC  F0EB   	movff	arp_background@link,arp_gratuitous@link
 19481  014CBA  EC66  F09E         	call	_arp_gratuitous	;wreg free
 19482  014CBE  0060  F39C  F140   	movff	?_arp_gratuitous,arp_background@errAnnounce
 19483  014CC4  0060  F3A0  F141   	movff	?_arp_gratuitous+1,arp_background@errAnnounce+1
 19484  014CCA  0060  F3A4  F142   	movff	?_arp_gratuitous+2,arp_background@errAnnounce+2
 19485                           
 19486                           ;arp.c: 443: err.code = errAnnounce.code;
 19487  014CD0  0060  F504  F049   	movff	arp_background@errAnnounce+1,arp_background@err+1
 19488  014CD6  0060  F508  F04A   	movff	arp_background@errAnnounce+2,arp_background@err+2
 19489                           
 19490                           ;arp.c: 444: if (err.code == ERROR_ARP_IPv4_ADDRESS_CONFLICT) {
 19491  014CDC  0E96               	movlw	150
 19492  014CDE  1849               	xorwf	arp_background@err+1,w,c
 19493  014CE0  E105               	bnz	l12144
 19494  014CE2  044A               	decf	arp_background@err+2,w,c
 19495  014CE4  A4D8               	btfss	16344,2,c
 19496  014CE6  D002               	goto	l1072
 19497                           
 19498                           ;arp.c: 448: state = 0;
 19499  014CE8  0E00               	movlw	0
 19500  014CEA  6E40               	movwf	arp_background@state,c
 19501  014CEC                     l1072:
 19502  014CEC                     l12144:
 19503                           
 19504                           ;arp.c: 449: }
 19505                           ;arp.c: 450: if (errAnnounce.module == ERROR_MODULE_ARP &&
 19506                           ;arp.c: 451: errAnnounce.code == (uint16_t)0) {
 19507  014CEC  0E03               	movlw	3
 19508  014CEE  0101               	movlb	1	; () banked
 19509  014CF0  1940               	xorwf	arp_background@errAnnounce& (0+255),w,b
 19510  014CF2  A4D8               	btfss	16344,2,c
 19511  014CF4  D00E               	goto	l1070
 19512                           
 19513                           ; BSR set to: 1
 19514  014CF6  5141               	movf	(arp_background@errAnnounce+1)& (0+255),w,b
 19515  014CF8  1142               	iorwf	(arp_background@errAnnounce+2)& (0+255),w,b
 19516  014CFA  A4D8               	btfss	16344,2,c
 19517  014CFC  D00A               	goto	l1070
 19518                           
 19519                           ; BSR set to: 1
 19520                           ;arp.c: 455: state = 0;
 19521  014CFE  0E00               	movlw	0
 19522  014D00  6E40               	movwf	arp_background@state,c
 19523                           
 19524                           ; BSR set to: 1
 19525                           ;arp.c: 458: }
 19526                           
 19527                           ; BSR set to: 1
 19528                           ;arp.c: 456: }
 19529                           ;arp.c: 457: break;
 19530  014D02  D007               	goto	l1070
 19531  014D04                     l1060:
 19532                           
 19533                           ; BSR set to: 1
 19534  014D04  5040               	movf	arp_background@state,w,c
 19535                           
 19536                           ; Switch size 1, requested type "space"
 19537                           ; Number of cases is 2, Range of values is 0 to 1
 19538                           ; switch strategies available:
 19539                           ; Name         Instructions Cycles
 19540                           ; simple_byte            7     4 (average)
 19541                           ;	Chosen strategy is simple_byte
 19542  014D06  0A00               	xorlw	0	; case 0
 19543  014D08  B4D8               	btfsc	16344,2,c
 19544  014D0A  D770               	goto	l1061
 19545  014D0C  0A01               	xorlw	1	; case 1
 19546  014D0E  B4D8               	btfsc	16344,2,c
 19547  014D10  D7C5               	goto	l1071
 19548  014D12                     l1070:
 19549                           
 19550                           ;arp.c: 460: return err;
 19551  014D12  0060  F120  F13C   	movff	arp_background@err,?_arp_background
 19552  014D18  0060  F124  F13D   	movff	arp_background@err+1,?_arp_background+1
 19553  014D1E  0060  F128  F13E   	movff	arp_background@err+2,?_arp_background+2
 19554  014D24  0012               	return		;funcret
 19555  014D26                     __end_of_arp_background:
 19556                           	opt stack 0
 19557                           
 19558 ;; *************** function _ipv4_getPreliminaryIPSourceAddress *****************
 19559 ;; Defined at:
 19560 ;;		line 366 in file "src/stack/protocols/ipv4.c"
 19561 ;; Parameters:    Size  Location     Type
 19562 ;;		None
 19563 ;; Auto vars:     Size  Location     Type
 19564 ;;		None
 19565 ;; Return value:  Size  Location     Type
 19566 ;;                  4   21[COMRAM] struct ipv4_address
 19567 ;; Registers used:
 19568 ;;		None
 19569 ;; Tracked objects:
 19570 ;;		On entry : 0/0
 19571 ;;		On exit  : 0/0
 19572 ;;		Unchanged: 0/0
 19573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19574 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19577 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19578 ;;Total ram usage:        4 bytes
 19579 ;; Hardware stack levels used:    1
 19580 ;; Hardware stack levels required when called:    4
 19581 ;; This function calls:
 19582 ;;		Nothing
 19583 ;; This function is called by:
 19584 ;;		_arp_background
 19585 ;; This function uses a non-reentrant model
 19586 ;;
 19587                           
 19588                           	psect	text86
 19589  017610                     __ptext86:
 19590                           	opt stack 0
 19591  017610                     _ipv4_getPreliminaryIPSourceAddress:
 19592                           	opt stack 24
 19593                           
 19594                           ;ipv4.c: 367: return ipPreliminarySource;
 19595                           
 19596                           ;incstack = 0
 19597  017610  0060  FB30  F016   	movff	_ipPreliminarySource,?_ipv4_getPreliminaryIPSourceAddress
 19598  017616  0060  FB34  F017   	movff	_ipPreliminarySource+1,?_ipv4_getPreliminaryIPSourceAddress+1
 19599  01761C  0060  FB38  F018   	movff	_ipPreliminarySource+2,?_ipv4_getPreliminaryIPSourceAddress+2
 19600  017622  0060  FB3C  F019   	movff	_ipPreliminarySource+3,?_ipv4_getPreliminaryIPSourceAddress+3
 19601  017628  0012               	return		;funcret
 19602  01762A                     __end_of_ipv4_getPreliminaryIPSourceAddress:
 19603                           	opt stack 0
 19604                           
 19605 ;; *************** function _ipv4_SrcAddrChanged *****************
 19606 ;; Defined at:
 19607 ;;		line 417 in file "src/stack/protocols/ipv4.c"
 19608 ;; Parameters:    Size  Location     Type
 19609 ;;  err             2   21[COMRAM] PTR struct error
 19610 ;;		 -> arp_background@err(3), 
 19611 ;; Auto vars:     Size  Location     Type
 19612 ;;		None
 19613 ;; Return value:  Size  Location     Type
 19614 ;;                  1    wreg      unsigned char 
 19615 ;; Registers used:
 19616 ;;		wreg, status,2, status,0
 19617 ;; Tracked objects:
 19618 ;;		On entry : 0/0
 19619 ;;		On exit  : 0/0
 19620 ;;		Unchanged: 0/0
 19621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19626 ;;Total ram usage:        2 bytes
 19627 ;; Hardware stack levels used:    1
 19628 ;; Hardware stack levels required when called:    4
 19629 ;; This function calls:
 19630 ;;		Nothing
 19631 ;; This function is called by:
 19632 ;;		_arp_background
 19633 ;; This function uses a non-reentrant model
 19634 ;;
 19635                           
 19636                           	psect	text87
 19637  0176FE                     __ptext87:
 19638                           	opt stack 0
 19639  0176FE                     _ipv4_SrcAddrChanged:
 19640                           	opt stack 24
 19641                           
 19642                           ;ipv4.c: 418: arpStatus = err;
 19643                           
 19644                           ;incstack = 0
 19645  0176FE  0060  F058  F037   	movff	ipv4_SrcAddrChanged@err,_arpStatus
 19646  017704  0060  F05C  F038   	movff	ipv4_SrcAddrChanged@err+1,_arpStatus+1
 19647                           
 19648                           ;ipv4.c: 419: return fSrcAddrChanged;
 19649  01770A  503F               	movf	_fSrcAddrChanged,w,c
 19650  01770C  0012               	return	
 19651  01770E                     __end_of_ipv4_SrcAddrChanged:
 19652                           	opt stack 0
 19653                           
 19654 ;; *************** function _arp_probe *****************
 19655 ;; Defined at:
 19656 ;;		line 253 in file "src/stack/protocols/arp.c"
 19657 ;; Parameters:    Size  Location     Type
 19658 ;;  ipTarget        4  135[BANK0 ] struct ipv4_address
 19659 ;;  link            1  139[BANK0 ] enum E238
 19660 ;; Auto vars:     Size  Location     Type
 19661 ;;  waitingTime     4   53[BANK1 ] unsigned long 
 19662 ;;  timeStart       4   49[BANK1 ] unsigned long 
 19663 ;;  ipSender        4   45[BANK1 ] struct ipv4_address
 19664 ;;  err             3   57[BANK1 ] struct error
 19665 ;;  index           1   44[BANK1 ] unsigned char 
 19666 ;; Return value:  Size  Location     Type
 19667 ;;                  3  135[BANK0 ] struct error
 19668 ;; Registers used:
 19669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19670 ;; Tracked objects:
 19671 ;;		On entry : 0/0
 19672 ;;		On exit  : 0/0
 19673 ;;		Unchanged: 0/0
 19674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19675 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19676 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19677 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19678 ;;      Totals:         0      13      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19679 ;;Total ram usage:       29 bytes
 19680 ;; Hardware stack levels used:    1
 19681 ;; Hardware stack levels required when called:   11
 19682 ;; This function calls:
 19683 ;;		___lwmod
 19684 ;;		_arp_checkForEntry
 19685 ;;		_arp_sendRequest
 19686 ;;		_getMillis
 19687 ;;		_ipv4_setToAllZero
 19688 ;;		_rand
 19689 ;; This function is called by:
 19690 ;;		_arp_background
 19691 ;; This function uses a non-reentrant model
 19692 ;;
 19693                           
 19694                           	psect	text88
 19695  0132DC                     __ptext88:
 19696                           	opt stack 0
 19697  0132DC                     _arp_probe:
 19698                           	opt stack 17
 19699                           
 19700                           ;arp.c: 254: time_t timeStart;
 19701                           ;arp.c: 255: time_t waitingTime;
 19702                           ;arp.c: 256: ipv4_address_t ipSender;
 19703                           ;arp.c: 257: uint8_t static probeCounter = 0;
 19704                           ;arp.c: 258: error_t err;
 19705                           ;arp.c: 260: enum states {
 19706                           ;arp.c: 261: PREPARING_PROBE, WAITING_TO_SEND, SENDING_PROBE, ARP_ENTRY_FOUND
 19707                           ;arp.c: 262: };
 19708                           ;arp.c: 263: uint8_t static state = PREPARING_PROBE;
 19709                           ;arp.c: 264: uint8_t index;
 19710                           ;arp.c: 265: err.module = ERROR_MODULE_ARP;
 19711                           
 19712                           ;incstack = 0
 19713  0132DC  0E03               	movlw	3
 19714  0132DE  0101               	movlb	1	; () banked
 19715  0132E0  6F39               	movwf	arp_probe@err& (0+255),b
 19716                           
 19717                           ;arp.c: 267: if (link == NO_LINK) {
 19718  0132E2  0100               	movlb	0	; () banked
 19719  0132E4  51EB               	movf	arp_probe@link& (0+255),w,b
 19720  0132E6  A4D8               	btfss	16344,2,c
 19721  0132E8  D013               	goto	l1012
 19722                           
 19723                           ; BSR set to: 0
 19724                           ;arp.c: 268: state = PREPARING_PROBE;
 19725  0132EA  0E00               	movlw	0
 19726  0132EC  6E43               	movwf	arp_probe@state,c
 19727                           
 19728                           ;arp.c: 269: probeCounter = 0;
 19729  0132EE  0E00               	movlw	0
 19730  0132F0  0101               	movlb	1	; () banked
 19731  0132F2  6FFC               	movwf	arp_probe@probeCounter& (0+255),b
 19732                           
 19733                           ;arp.c: 270: err.code = ERROR_ARP_CONNECTION_FAILED;
 19734  0132F4  0E01               	movlw	1
 19735  0132F6  6F3B               	movwf	(arp_probe@err+2)& (0+255),b
 19736  0132F8  0E97               	movlw	151
 19737  0132FA  6F3A               	movwf	(arp_probe@err+1)& (0+255),b
 19738                           
 19739                           ; BSR set to: 1
 19740                           ;arp.c: 271: return err;
 19741  0132FC  0060  F4E4  F0E7   	movff	arp_probe@err,?_arp_probe
 19742  013302  0060  F4E8  F0E8   	movff	arp_probe@err+1,?_arp_probe+1
 19743  013308  0060  F4EC  F0E9   	movff	arp_probe@err+2,?_arp_probe+2
 19744                           
 19745                           ; BSR set to: 1
 19746  01330E  0012               	return	
 19747  013310                     l1012:
 19748                           
 19749                           ;arp.c: 272: }
 19750                           ;arp.c: 274: if (arp_checkForEntry(ipTarget, &index)) {
 19751                           
 19752                           ; BSR set to: 1
 19753  013310  0060  F39C  F01D   	movff	arp_probe@ipTarget,arp_checkForEntry@ip
 19754  013316  0060  F3A0  F01E   	movff	arp_probe@ipTarget+1,arp_checkForEntry@ip+1
 19755  01331C  0060  F3A4  F01F   	movff	arp_probe@ipTarget+2,arp_checkForEntry@ip+2
 19756  013322  0060  F3A8  F020   	movff	arp_probe@ipTarget+3,arp_checkForEntry@ip+3
 19757  013328  0E2C               	movlw	low arp_probe@index
 19758  01332A  6E21               	movwf	arp_checkForEntry@index,c
 19759  01332C  0E01               	movlw	high arp_probe@index
 19760  01332E  6E22               	movwf	arp_checkForEntry@index+1,c
 19761  013330  EC49  F0AE         	call	_arp_checkForEntry	;wreg free
 19762  013334  0900               	iorlw	0
 19763  013336  B4D8               	btfsc	16344,2,c
 19764  013338  D112               	goto	l1015
 19765                           
 19766                           ;arp.c: 275: state = ARP_ENTRY_FOUND;
 19767  01333A  0E03               	movlw	3
 19768  01333C  6E43               	movwf	arp_probe@state,c
 19769                           
 19770                           ;arp.c: 276: }
 19771                           ;arp.c: 278: switch (state) {
 19772  01333E  D10F               	goto	l1015
 19773  013340                     
 19774                           ;arp.c: 280: ipv4_setToAllZero(&ipSender);
 19775  013340  0E2D               	movlw	low arp_probe@ipSender
 19776  013342  6E16               	movwf	ipv4_setToAllZero@ip,c
 19777  013344  0E01               	movlw	high arp_probe@ipSender
 19778  013346  6E17               	movwf	ipv4_setToAllZero@ip+1,c
 19779  013348  EC79  F0BA         	call	_ipv4_setToAllZero	;wreg free
 19780                           
 19781                           ;arp.c: 281: timeStart = getMillis();
 19782  01334C  EC15  F0BB         	call	_getMillis	;wreg free
 19783  013350  0060  F058  F131   	movff	?_getMillis,arp_probe@timeStart
 19784  013356  0060  F05C  F132   	movff	?_getMillis+1,arp_probe@timeStart+1
 19785  01335C  0060  F060  F133   	movff	?_getMillis+2,arp_probe@timeStart+2
 19786  013362  0060  F064  F134   	movff	?_getMillis+3,arp_probe@timeStart+3
 19787                           
 19788                           ;arp.c: 282: waitingTime = rand() % 1000u;
 19789  013368  ECE6  F0B5         	call	_rand	;wreg free
 19790  01336C  0060  F088  F024   	movff	?_rand,___lwmod@dividend
 19791  013372  0060  F08C  F025   	movff	?_rand+1,___lwmod@dividend+1
 19792  013378  0E03               	movlw	3
 19793  01337A  6E27               	movwf	___lwmod@divisor+1,c
 19794  01337C  0EE8               	movlw	232
 19795  01337E  6E26               	movwf	___lwmod@divisor,c
 19796  013380  ECE4  F0B7         	call	___lwmod	;wreg free
 19797  013384  0060  F090  F135   	movff	?___lwmod,arp_probe@waitingTime
 19798  01338A  0060  F094  F136   	movff	?___lwmod+1,arp_probe@waitingTime+1
 19799  013390  0101               	movlb	1	; () banked
 19800  013392  6B37               	clrf	(arp_probe@waitingTime+2)& (0+255),b
 19801  013394  6B38               	clrf	(arp_probe@waitingTime+3)& (0+255),b
 19802                           
 19803                           ; BSR set to: 1
 19804                           ;arp.c: 283: state = WAITING_TO_SEND;
 19805  013396  0E01               	movlw	1
 19806  013398  6E43               	movwf	arp_probe@state,c
 19807                           
 19808                           ; BSR set to: 1
 19809                           ;arp.c: 284: err.code = ERROR_ARP_WAITING;
 19810  01339A  0E01               	movlw	1
 19811  01339C  D05B               	goto	L27
 19812  01339E                     
 19813                           ;arp.c: 287: if (getMillis() - timeStart >= waitingTime) {
 19814                           
 19815                           ; BSR set to: 1
 19816  01339E  0060  F4C4  F0EC   	movff	arp_probe@timeStart,??_arp_probe
 19817  0133A4  0060  F4C8  F0ED   	movff	arp_probe@timeStart+1,??_arp_probe+1
 19818  0133AA  0060  F4CC  F0EE   	movff	arp_probe@timeStart+2,??_arp_probe+2
 19819  0133B0  0060  F4D0  F0EF   	movff	arp_probe@timeStart+3,??_arp_probe+3
 19820  0133B6  0100               	movlb	0	; () banked
 19821  0133B8  1FEC               	comf	??_arp_probe& (0+255),f,b
 19822  0133BA  1FED               	comf	(??_arp_probe+1)& (0+255),f,b
 19823  0133BC  1FEE               	comf	(??_arp_probe+2)& (0+255),f,b
 19824  0133BE  1FEF               	comf	(??_arp_probe+3)& (0+255),f,b
 19825  0133C0  2BEC               	incf	??_arp_probe& (0+255),f,b
 19826  0133C2  0E00               	movlw	0
 19827  0133C4  23ED               	addwfc	(??_arp_probe+1)& (0+255),f,b
 19828  0133C6  23EE               	addwfc	(??_arp_probe+2)& (0+255),f,b
 19829  0133C8  23EF               	addwfc	(??_arp_probe+3)& (0+255),f,b
 19830  0133CA  EC15  F0BB         	call	_getMillis	;wreg free
 19831  0133CE  0100               	movlb	0	; () banked
 19832  0133D0  51EC               	movf	??_arp_probe& (0+255),w,b
 19833  0133D2  2416               	addwf	?_getMillis,w,c
 19834  0133D4  6FF0               	movwf	(??_arp_probe+4)& (0+255),b
 19835  0133D6  51ED               	movf	(??_arp_probe+1)& (0+255),w,b
 19836  0133D8  2017               	addwfc	?_getMillis+1,w,c
 19837  0133DA  6FF1               	movwf	(??_arp_probe+5)& (0+255),b
 19838  0133DC  51EE               	movf	(??_arp_probe+2)& (0+255),w,b
 19839  0133DE  2018               	addwfc	?_getMillis+2,w,c
 19840  0133E0  6FF2               	movwf	(??_arp_probe+6)& (0+255),b
 19841  0133E2  51EF               	movf	(??_arp_probe+3)& (0+255),w,b
 19842  0133E4  2019               	addwfc	?_getMillis+3,w,c
 19843  0133E6  6FF3               	movwf	(??_arp_probe+7)& (0+255),b
 19844  0133E8  0101               	movlb	1	; () banked
 19845  0133EA  5135               	movf	arp_probe@waitingTime& (0+255),w,b
 19846  0133EC  0100               	movlb	0	; () banked
 19847  0133EE  5DF0               	subwf	(??_arp_probe+4)& (0+255),w,b
 19848  0133F0  0101               	movlb	1	; () banked
 19849  0133F2  5136               	movf	(arp_probe@waitingTime+1)& (0+255),w,b
 19850  0133F4  0100               	movlb	0	; () banked
 19851  0133F6  59F1               	subwfb	(??_arp_probe+5)& (0+255),w,b
 19852  0133F8  0101               	movlb	1	; () banked
 19853  0133FA  5137               	movf	(arp_probe@waitingTime+2)& (0+255),w,b
 19854  0133FC  0100               	movlb	0	; () banked
 19855  0133FE  59F2               	subwfb	(??_arp_probe+6)& (0+255),w,b
 19856  013400  0101               	movlb	1	; () banked
 19857  013402  5138               	movf	(arp_probe@waitingTime+3)& (0+255),w,b
 19858  013404  0100               	movlb	0	; () banked
 19859  013406  59F3               	subwfb	(??_arp_probe+7)& (0+255),w,b
 19860  013408  A0D8               	btfss	16344,0,c
 19861  01340A  D022               	goto	l1019
 19862                           
 19863                           ; BSR set to: 0
 19864                           ;arp.c: 288: state = SENDING_PROBE;
 19865  01340C  0E02               	movlw	2
 19866  01340E  6E43               	movwf	arp_probe@state,c
 19867                           
 19868                           ; BSR set to: 0
 19869                           ;arp.c: 290: waitingTime = (rand() % (2000u - 1000u)) + 1000u;
 19870  013410  0EE8               	movlw	232
 19871  013412  6FEC               	movwf	??_arp_probe& (0+255),b
 19872  013414  0E03               	movlw	3
 19873  013416  6FED               	movwf	(??_arp_probe+1)& (0+255),b
 19874  013418  ECE6  F0B5         	call	_rand	;wreg free
 19875  01341C  0060  F088  F024   	movff	?_rand,___lwmod@dividend
 19876  013422  0060  F08C  F025   	movff	?_rand+1,___lwmod@dividend+1
 19877  013428  0E03               	movlw	3
 19878  01342A  6E27               	movwf	___lwmod@divisor+1,c
 19879  01342C  0EE8               	movlw	232
 19880  01342E  6E26               	movwf	___lwmod@divisor,c
 19881  013430  ECE4  F0B7         	call	___lwmod	;wreg free
 19882  013434  0100               	movlb	0	; () banked
 19883  013436  51EC               	movf	??_arp_probe& (0+255),w,b
 19884  013438  2624               	addwf	?___lwmod,f,c
 19885  01343A  51ED               	movf	(??_arp_probe+1)& (0+255),w,b
 19886  01343C  2225               	addwfc	?___lwmod+1,f,c
 19887  01343E  0060  F090  F135   	movff	?___lwmod,arp_probe@waitingTime
 19888  013444  0060  F094  F136   	movff	?___lwmod+1,arp_probe@waitingTime+1
 19889  01344A  0101               	movlb	1	; () banked
 19890  01344C  6B37               	clrf	(arp_probe@waitingTime+2)& (0+255),b
 19891  01344E  6B38               	clrf	(arp_probe@waitingTime+3)& (0+255),b
 19892  013450                     l1019:
 19893                           
 19894                           ;arp.c: 291: }
 19895                           ;arp.c: 292: err.code = ERROR_ARP_WAITING;
 19896                           
 19897                           ; BSR set to: 1
 19898  013450  0E01               	movlw	1
 19899  013452  0101               	movlb	1	; () banked
 19900  013454                     L27:
 19901  013454  6F3B               	movwf	(arp_probe@err+2)& (0+255),b
 19902  013456  0E91               	movlw	145
 19903  013458  D080               	goto	L29
 19904  01345A                     
 19905                           ;arp.c: 295: if (probeCounter == 0 || (getMillis() - timeStart) > waitingTime) {
 19906                           
 19907                           ; BSR set to: 1
 19908  01345A  0101               	movlb	1	; () banked
 19909  01345C  51FC               	movf	arp_probe@probeCounter& (0+255),w,b
 19910  01345E  B4D8               	btfsc	16344,2,c
 19911  013460  D036               	goto	u14430
 19912                           
 19913                           ; BSR set to: 1
 19914  013462  0060  F4C4  F0EC   	movff	arp_probe@timeStart,??_arp_probe
 19915  013468  0060  F4C8  F0ED   	movff	arp_probe@timeStart+1,??_arp_probe+1
 19916  01346E  0060  F4CC  F0EE   	movff	arp_probe@timeStart+2,??_arp_probe+2
 19917  013474  0060  F4D0  F0EF   	movff	arp_probe@timeStart+3,??_arp_probe+3
 19918  01347A  0100               	movlb	0	; () banked
 19919  01347C  1FEC               	comf	??_arp_probe& (0+255),f,b
 19920  01347E  1FED               	comf	(??_arp_probe+1)& (0+255),f,b
 19921  013480  1FEE               	comf	(??_arp_probe+2)& (0+255),f,b
 19922  013482  1FEF               	comf	(??_arp_probe+3)& (0+255),f,b
 19923  013484  2BEC               	incf	??_arp_probe& (0+255),f,b
 19924  013486  0E00               	movlw	0
 19925  013488  23ED               	addwfc	(??_arp_probe+1)& (0+255),f,b
 19926  01348A  23EE               	addwfc	(??_arp_probe+2)& (0+255),f,b
 19927  01348C  23EF               	addwfc	(??_arp_probe+3)& (0+255),f,b
 19928  01348E  EC15  F0BB         	call	_getMillis	;wreg free
 19929  013492  0100               	movlb	0	; () banked
 19930  013494  51EC               	movf	??_arp_probe& (0+255),w,b
 19931  013496  2416               	addwf	?_getMillis,w,c
 19932  013498  6FF0               	movwf	(??_arp_probe+4)& (0+255),b
 19933  01349A  51ED               	movf	(??_arp_probe+1)& (0+255),w,b
 19934  01349C  2017               	addwfc	?_getMillis+1,w,c
 19935  01349E  6FF1               	movwf	(??_arp_probe+5)& (0+255),b
 19936  0134A0  51EE               	movf	(??_arp_probe+2)& (0+255),w,b
 19937  0134A2  2018               	addwfc	?_getMillis+2,w,c
 19938  0134A4  6FF2               	movwf	(??_arp_probe+6)& (0+255),b
 19939  0134A6  51EF               	movf	(??_arp_probe+3)& (0+255),w,b
 19940  0134A8  2019               	addwfc	?_getMillis+3,w,c
 19941  0134AA  6FF3               	movwf	(??_arp_probe+7)& (0+255),b
 19942  0134AC  51F0               	movf	(??_arp_probe+4)& (0+255),w,b
 19943  0134AE  0101               	movlb	1	; () banked
 19944  0134B0  5D35               	subwf	arp_probe@waitingTime& (0+255),w,b
 19945  0134B2  0100               	movlb	0	; () banked
 19946  0134B4  51F1               	movf	(??_arp_probe+5)& (0+255),w,b
 19947  0134B6  0101               	movlb	1	; () banked
 19948  0134B8  5936               	subwfb	(arp_probe@waitingTime+1)& (0+255),w,b
 19949  0134BA  0100               	movlb	0	; () banked
 19950  0134BC  51F2               	movf	(??_arp_probe+6)& (0+255),w,b
 19951  0134BE  0101               	movlb	1	; () banked
 19952  0134C0  5937               	subwfb	(arp_probe@waitingTime+2)& (0+255),w,b
 19953  0134C2  0100               	movlb	0	; () banked
 19954  0134C4  51F3               	movf	(??_arp_probe+7)& (0+255),w,b
 19955  0134C6  0101               	movlb	1	; () banked
 19956  0134C8  5938               	subwfb	(arp_probe@waitingTime+3)& (0+255),w,b
 19957  0134CA  B0D8               	btfsc	16344,0,c
 19958  0134CC  D055               	goto	l1017
 19959  0134CE                     u14430:
 19960                           
 19961                           ; BSR set to: 1
 19962                           ;arp.c: 296: timeStart = getMillis();
 19963                           
 19964                           ; BSR set to: 1
 19965  0134CE  EC15  F0BB         	call	_getMillis	;wreg free
 19966  0134D2  0060  F058  F131   	movff	?_getMillis,arp_probe@timeStart
 19967  0134D8  0060  F05C  F132   	movff	?_getMillis+1,arp_probe@timeStart+1
 19968  0134DE  0060  F060  F133   	movff	?_getMillis+2,arp_probe@timeStart+2
 19969  0134E4  0060  F064  F134   	movff	?_getMillis+3,arp_probe@timeStart+3
 19970                           
 19971                           ;arp.c: 298: if (probeCounter < 3u) {
 19972  0134EA  0E03               	movlw	3
 19973  0134EC  0101               	movlb	1	; () banked
 19974  0134EE  61FC               	cpfslt	arp_probe@probeCounter& (0+255),b
 19975  0134F0  D01A               	goto	l1024
 19976                           
 19977                           ; BSR set to: 1
 19978                           ;arp.c: 306: arp_sendRequest(ipSender, ipTarget);
 19979  0134F2  0060  F4B4  F0DF   	movff	arp_probe@ipSender,arp_sendRequest@ipSender
 19980  0134F8  0060  F4B8  F0E0   	movff	arp_probe@ipSender+1,arp_sendRequest@ipSender+1
 19981  0134FE  0060  F4BC  F0E1   	movff	arp_probe@ipSender+2,arp_sendRequest@ipSender+2
 19982  013504  0060  F4C0  F0E2   	movff	arp_probe@ipSender+3,arp_sendRequest@ipSender+3
 19983  01350A  0060  F39C  F0E3   	movff	arp_probe@ipTarget,arp_sendRequest@ipTarget
 19984  013510  0060  F3A0  F0E4   	movff	arp_probe@ipTarget+1,arp_sendRequest@ipTarget+1
 19985  013516  0060  F3A4  F0E5   	movff	arp_probe@ipTarget+2,arp_sendRequest@ipTarget+2
 19986  01351C  0060  F3A8  F0E6   	movff	arp_probe@ipTarget+3,arp_sendRequest@ipTarget+3
 19987  013522  EC5D  F0AF         	call	_arp_sendRequest	;wreg free
 19988  013526                     l1024:
 19989                           
 19990                           ;arp.c: 307: }
 19991                           ;arp.c: 308: if (probeCounter >= 3u) {
 19992  013526  0E02               	movlw	2
 19993  013528  0101               	movlb	1	; () banked
 19994  01352A  65FC               	cpfsgt	arp_probe@probeCounter& (0+255),b
 19995  01352C  D008               	goto	l1025
 19996                           
 19997                           ; BSR set to: 1
 19998                           ;arp.c: 309: probeCounter = 0;
 19999  01352E  0E00               	movlw	0
 20000  013530  6FFC               	movwf	arp_probe@probeCounter& (0+255),b
 20001                           
 20002                           ;arp.c: 310: state = PREPARING_PROBE;
 20003  013532  0E00               	movlw	0
 20004  013534  6E43               	movwf	arp_probe@state,c
 20005                           
 20006                           ;arp.c: 311: err.code = ERROR_ARP_MAXIMUM_NUMBER_OF_PROBES_REACHED;
 20007  013536  0E01               	movlw	1
 20008  013538  6F3B               	movwf	(arp_probe@err+2)& (0+255),b
 20009  01353A  0E93               	movlw	147
 20010  01353C  D00E               	goto	L29
 20011  01353E                     l1025:
 20012                           
 20013                           ; BSR set to: 1
 20014                           ;arp.c: 313: err.code = ERROR_ARP_WAITING;
 20015                           
 20016                           ; BSR set to: 1
 20017  01353E  0E01               	movlw	1
 20018  013540  6F3B               	movwf	(arp_probe@err+2)& (0+255),b
 20019  013542  0E91               	movlw	145
 20020  013544  6F3A               	movwf	(arp_probe@err+1)& (0+255),b
 20021                           
 20022                           ; BSR set to: 1
 20023                           ;arp.c: 314: probeCounter++;
 20024  013546  2BFC               	incf	arp_probe@probeCounter& (0+255),f,b
 20025                           
 20026                           ; BSR set to: 1
 20027                           ;arp.c: 315: }
 20028                           ;arp.c: 316: }
 20029                           ;arp.c: 317: break;
 20030                           
 20031                           ; BSR set to: 1
 20032  013548  D017               	goto	l1017
 20033  01354A                     
 20034                           ;arp.c: 319: probeCounter = 0;
 20035                           
 20036                           ; BSR set to: 1
 20037  01354A  0E00               	movlw	0
 20038  01354C  0101               	movlb	1	; () banked
 20039  01354E  6FFC               	movwf	arp_probe@probeCounter& (0+255),b
 20040                           
 20041                           ;arp.c: 320: state = PREPARING_PROBE;
 20042  013550  0E00               	movlw	0
 20043  013552  6E43               	movwf	arp_probe@state,c
 20044                           
 20045                           ;arp.c: 321: err.code = ERROR_ARP_IPv4_ADDRESS_CONFLICT;
 20046  013554  0E01               	movlw	1
 20047  013556  6F3B               	movwf	(arp_probe@err+2)& (0+255),b
 20048  013558  0E96               	movlw	150
 20049  01355A                     L29:
 20050  01355A  6F3A               	movwf	(arp_probe@err+1)& (0+255),b
 20051                           
 20052                           ;arp.c: 322: }
 20053  01355C  D00D               	goto	l1017
 20054  01355E                     l1015:
 20055                           
 20056                           ; BSR set to: 1
 20057  01355E  5043               	movf	arp_probe@state,w,c
 20058                           
 20059                           ; Switch size 1, requested type "space"
 20060                           ; Number of cases is 4, Range of values is 0 to 3
 20061                           ; switch strategies available:
 20062                           ; Name         Instructions Cycles
 20063                           ; simple_byte           13     7 (average)
 20064                           ;	Chosen strategy is simple_byte
 20065  013560  0A00               	xorlw	0	; case 0
 20066  013562  B4D8               	btfsc	16344,2,c
 20067  013564  D6ED               	goto	l1016
 20068  013566  0A01               	xorlw	1	; case 1
 20069  013568  B4D8               	btfsc	16344,2,c
 20070  01356A  D719               	goto	l1018
 20071  01356C  0A03               	xorlw	3	; case 2
 20072  01356E  B4D8               	btfsc	16344,2,c
 20073  013570  D774               	goto	l1020
 20074  013572  0A01               	xorlw	1	; case 3
 20075  013574  B4D8               	btfsc	16344,2,c
 20076  013576  D7E9               	goto	l1027
 20077  013578                     l1017:
 20078                           
 20079                           ;arp.c: 323: return err;
 20080  013578  0060  F4E4  F0E7   	movff	arp_probe@err,?_arp_probe
 20081  01357E  0060  F4E8  F0E8   	movff	arp_probe@err+1,?_arp_probe+1
 20082  013584  0060  F4EC  F0E9   	movff	arp_probe@err+2,?_arp_probe+2
 20083  01358A  0012               	return		;funcret
 20084  01358C                     __end_of_arp_probe:
 20085                           	opt stack 0
 20086                           
 20087 ;; *************** function _rand *****************
 20088 ;; Defined at:
 20089 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 20090 ;; Parameters:    Size  Location     Type
 20091 ;;		None
 20092 ;; Auto vars:     Size  Location     Type
 20093 ;;		None
 20094 ;; Return value:  Size  Location     Type
 20095 ;;                  2   33[COMRAM] int 
 20096 ;; Registers used:
 20097 ;;		wreg, status,2, status,0, cstack
 20098 ;; Tracked objects:
 20099 ;;		On entry : 0/0
 20100 ;;		On exit  : 0/0
 20101 ;;		Unchanged: 0/0
 20102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20107 ;;Total ram usage:        2 bytes
 20108 ;; Hardware stack levels used:    1
 20109 ;; Hardware stack levels required when called:    5
 20110 ;; This function calls:
 20111 ;;		___lmul
 20112 ;; This function is called by:
 20113 ;;		_main
 20114 ;;		_arp_probe
 20115 ;;		_ipv4_generateAutoIP
 20116 ;;		_tcp_listen
 20117 ;; This function uses a non-reentrant model
 20118 ;;
 20119                           
 20120                           	psect	text89
 20121  016BCC                     __ptext89:
 20122                           	opt stack 0
 20123  016BCC                     _rand:
 20124                           	opt stack 24
 20125                           
 20126                           ;incstack = 0
 20127  016BCC  0060  FB70  F016   	movff	_randx,___lmul@multiplier
 20128  016BD2  0060  FB74  F017   	movff	_randx+1,___lmul@multiplier+1
 20129  016BD8  0060  FB78  F018   	movff	_randx+2,___lmul@multiplier+2
 20130  016BDE  0060  FB7C  F019   	movff	_randx+3,___lmul@multiplier+3
 20131  016BE4  0E6D               	movlw	109
 20132  016BE6  6E1A               	movwf	___lmul@multiplicand,c
 20133  016BE8  0E4E               	movlw	78
 20134  016BEA  6E1B               	movwf	___lmul@multiplicand+1,c
 20135  016BEC  0EC6               	movlw	198
 20136  016BEE  6E1C               	movwf	___lmul@multiplicand+2,c
 20137  016BF0  0E41               	movlw	65
 20138  016BF2  6E1D               	movwf	___lmul@multiplicand+3,c
 20139  016BF4  EC18  F0B6         	call	___lmul	;wreg free
 20140  016BF8  0060  F058  F2DC   	movff	?___lmul,_randx
 20141  016BFE  0060  F05C  F2DD   	movff	?___lmul+1,_randx+1
 20142  016C04  0060  F060  F2DE   	movff	?___lmul+2,_randx+2
 20143  016C0A  0060  F064  F2DF   	movff	?___lmul+3,_randx+3
 20144  016C10  0E39               	movlw	57
 20145  016C12  0102               	movlb	2	; () banked
 20146  016C14  27DC               	addwf	_randx& (0+255),f,b
 20147  016C16  0E30               	movlw	48
 20148  016C18  23DD               	addwfc	(_randx+1)& (0+255),f,b
 20149  016C1A  0E00               	movlw	0
 20150  016C1C  23DE               	addwfc	(_randx+2)& (0+255),f,b
 20151  016C1E  0E00               	movlw	0
 20152  016C20  23DF               	addwfc	(_randx+3)& (0+255),f,b
 20153                           
 20154                           ; BSR set to: 2
 20155  016C22  0EFF               	movlw	255
 20156  016C24  15DE               	andwf	(_randx+2)& (0+255),w,b
 20157  016C26  6E22               	movwf	?_rand,c
 20158  016C28  0E7F               	movlw	127
 20159  016C2A  15DF               	andwf	(_randx+3)& (0+255),w,b
 20160  016C2C  6E23               	movwf	?_rand+1,c
 20161  016C2E  0012               	return	
 20162  016C30                     __end_of_rand:
 20163                           	opt stack 0
 20164                           
 20165 ;; *************** function ___lmul *****************
 20166 ;; Defined at:
 20167 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 20168 ;; Parameters:    Size  Location     Type
 20169 ;;  multiplier      4   21[COMRAM] unsigned long 
 20170 ;;  multiplicand    4   25[COMRAM] unsigned long 
 20171 ;; Auto vars:     Size  Location     Type
 20172 ;;  product         4   29[COMRAM] unsigned long 
 20173 ;; Return value:  Size  Location     Type
 20174 ;;                  4   21[COMRAM] unsigned long 
 20175 ;; Registers used:
 20176 ;;		wreg, status,2, status,0
 20177 ;; Tracked objects:
 20178 ;;		On entry : 0/0
 20179 ;;		On exit  : 0/0
 20180 ;;		Unchanged: 0/0
 20181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20182 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20183 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20185 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20186 ;;Total ram usage:       12 bytes
 20187 ;; Hardware stack levels used:    1
 20188 ;; Hardware stack levels required when called:    4
 20189 ;; This function calls:
 20190 ;;		Nothing
 20191 ;; This function is called by:
 20192 ;;		_rand
 20193 ;; This function uses a non-reentrant model
 20194 ;;
 20195                           
 20196                           	psect	text90
 20197  016C30                     __ptext90:
 20198                           	opt stack 0
 20199  016C30                     ___lmul:
 20200                           	opt stack 24
 20201                           
 20202                           ; BSR set to: 2
 20203                           ;incstack = 0
 20204  016C30  0E00               	movlw	0
 20205  016C32  6E1E               	movwf	___lmul@product,c
 20206  016C34  0E00               	movlw	0
 20207  016C36  6E1F               	movwf	___lmul@product+1,c
 20208  016C38  0E00               	movlw	0
 20209  016C3A  6E20               	movwf	___lmul@product+2,c
 20210  016C3C  0E00               	movlw	0
 20211  016C3E  6E21               	movwf	___lmul@product+3,c
 20212  016C40  A016               	btfss	___lmul@multiplier,0,c
 20213  016C42  D008               	goto	l1517
 20214  016C44  501A               	movf	___lmul@multiplicand,w,c
 20215  016C46  261E               	addwf	___lmul@product,f,c
 20216  016C48  501B               	movf	___lmul@multiplicand+1,w,c
 20217  016C4A  221F               	addwfc	___lmul@product+1,f,c
 20218  016C4C  501C               	movf	___lmul@multiplicand+2,w,c
 20219  016C4E  2220               	addwfc	___lmul@product+2,f,c
 20220  016C50  501D               	movf	___lmul@multiplicand+3,w,c
 20221  016C52  2221               	addwfc	___lmul@product+3,f,c
 20222  016C54                     l1517:
 20223  016C54  90D8               	bcf	16344,0,c
 20224  016C56  361A               	rlcf	___lmul@multiplicand,f,c
 20225  016C58  361B               	rlcf	___lmul@multiplicand+1,f,c
 20226  016C5A  361C               	rlcf	___lmul@multiplicand+2,f,c
 20227  016C5C  361D               	rlcf	___lmul@multiplicand+3,f,c
 20228  016C5E  90D8               	bcf	16344,0,c
 20229  016C60  3219               	rrcf	___lmul@multiplier+3,f,c
 20230  016C62  3218               	rrcf	___lmul@multiplier+2,f,c
 20231  016C64  3217               	rrcf	___lmul@multiplier+1,f,c
 20232  016C66  3216               	rrcf	___lmul@multiplier,f,c
 20233  016C68  5016               	movf	___lmul@multiplier,w,c
 20234  016C6A  1017               	iorwf	___lmul@multiplier+1,w,c
 20235  016C6C  1018               	iorwf	___lmul@multiplier+2,w,c
 20236  016C6E  1019               	iorwf	___lmul@multiplier+3,w,c
 20237  016C70  A4D8               	btfss	16344,2,c
 20238  016C72  D7E6               	goto	l1516
 20239  016C74  0060  F078  F016   	movff	___lmul@product,?___lmul
 20240  016C7A  0060  F07C  F017   	movff	___lmul@product+1,?___lmul+1
 20241  016C80  0060  F080  F018   	movff	___lmul@product+2,?___lmul+2
 20242  016C86  0060  F084  F019   	movff	___lmul@product+3,?___lmul+3
 20243  016C8C  0012               	return		;funcret
 20244  016C8E                     __end_of___lmul:
 20245                           	opt stack 0
 20246                           
 20247 ;; *************** function _ipv4_setToAllZero *****************
 20248 ;; Defined at:
 20249 ;;		line 440 in file "src/stack/protocols/ipv4.c"
 20250 ;; Parameters:    Size  Location     Type
 20251 ;;  ip              2   21[COMRAM] PTR struct ipv4_address
 20252 ;;		 -> ipPreliminarySource(4), ipSource(4), arp_init@ip(4), arp_probe@ipSender(4), 
 20253 ;; Auto vars:     Size  Location     Type
 20254 ;;  i               1   23[COMRAM] unsigned char 
 20255 ;; Return value:  Size  Location     Type
 20256 ;;                  1    wreg      void 
 20257 ;; Registers used:
 20258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20259 ;; Tracked objects:
 20260 ;;		On entry : 0/0
 20261 ;;		On exit  : 0/0
 20262 ;;		Unchanged: 0/0
 20263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20267 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20268 ;;Total ram usage:        3 bytes
 20269 ;; Hardware stack levels used:    1
 20270 ;; Hardware stack levels required when called:    4
 20271 ;; This function calls:
 20272 ;;		Nothing
 20273 ;; This function is called by:
 20274 ;;		_arp_probe
 20275 ;;		_arp_init
 20276 ;;		_ipv4_init
 20277 ;; This function uses a non-reentrant model
 20278 ;;
 20279                           
 20280                           	psect	text91
 20281  0174F2                     __ptext91:
 20282                           	opt stack 0
 20283  0174F2                     _ipv4_setToAllZero:
 20284                           	opt stack 24
 20285                           
 20286                           ;ipv4.c: 441: for (uint8_t i = 0; i < 4; i++) {
 20287                           
 20288                           ;incstack = 0
 20289  0174F2  0E00               	movlw	0
 20290  0174F4  6E18               	movwf	ipv4_setToAllZero@i,c
 20291  0174F6                     l11124:
 20292  0174F6  0E03               	movlw	3
 20293  0174F8  6418               	cpfsgt	ipv4_setToAllZero@i,c
 20294  0174FA  D001               	goto	l1237
 20295  0174FC  0012               	return	
 20296  0174FE                     l1237:
 20297                           
 20298                           ;ipv4.c: 442: ip->address[i] = 0x00;
 20299  0174FE  5018               	movf	ipv4_setToAllZero@i,w,c
 20300  017500  0D01               	mullw	1
 20301  017502  50F3               	movf	16371,w,c
 20302  017504  2416               	addwf	ipv4_setToAllZero@ip,w,c
 20303  017506  6ED9               	movwf	16345,c
 20304  017508  50F4               	movf	16372,w,c
 20305  01750A  2017               	addwfc	ipv4_setToAllZero@ip+1,w,c
 20306  01750C  6EDA               	movwf	16346,c
 20307  01750E  0E00               	movlw	0
 20308  017510  6EDF               	movwf	16351,c
 20309  017512  2A18               	incf	ipv4_setToAllZero@i,f,c
 20310  017514  D7F0               	goto	l11124
 20311  017516                     __end_of_ipv4_setToAllZero:
 20312                           	opt stack 0
 20313                           
 20314 ;; *************** function ___lwmod *****************
 20315 ;; Defined at:
 20316 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 20317 ;; Parameters:    Size  Location     Type
 20318 ;;  dividend        2   35[COMRAM] unsigned int 
 20319 ;;  divisor         2   37[COMRAM] unsigned int 
 20320 ;; Auto vars:     Size  Location     Type
 20321 ;;  counter         1   39[COMRAM] unsigned char 
 20322 ;; Return value:  Size  Location     Type
 20323 ;;                  2   35[COMRAM] unsigned int 
 20324 ;; Registers used:
 20325 ;;		wreg, status,2, status,0
 20326 ;; Tracked objects:
 20327 ;;		On entry : 0/0
 20328 ;;		On exit  : 0/0
 20329 ;;		Unchanged: 0/0
 20330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20332 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20334 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20335 ;;Total ram usage:        5 bytes
 20336 ;; Hardware stack levels used:    1
 20337 ;; Hardware stack levels required when called:    4
 20338 ;; This function calls:
 20339 ;;		Nothing
 20340 ;; This function is called by:
 20341 ;;		_arp_probe
 20342 ;;		_utoa
 20343 ;; This function uses a non-reentrant model
 20344 ;;
 20345                           
 20346                           	psect	text92
 20347  016FC8                     __ptext92:
 20348                           	opt stack 0
 20349  016FC8                     ___lwmod:
 20350                           	opt stack 22
 20351                           
 20352                           ;incstack = 0
 20353  016FC8  5026               	movf	___lwmod@divisor,w,c
 20354  016FCA  1027               	iorwf	___lwmod@divisor+1,w,c
 20355  016FCC  B4D8               	btfsc	16344,2,c
 20356  016FCE  D018               	goto	l1951
 20357  016FD0  0E01               	movlw	1
 20358  016FD2  6E28               	movwf	___lwmod@counter,c
 20359  016FD4  D004               	goto	l1946
 20360  016FD6  90D8               	bcf	16344,0,c
 20361  016FD8  3626               	rlcf	___lwmod@divisor,f,c
 20362  016FDA  3627               	rlcf	___lwmod@divisor+1,f,c
 20363  016FDC  2A28               	incf	___lwmod@counter,f,c
 20364  016FDE                     l1946:
 20365  016FDE  AE27               	btfss	___lwmod@divisor+1,7,c
 20366  016FE0  D7FA               	goto	l1947
 20367  016FE2                     u12270:
 20368  016FE2  5026               	movf	___lwmod@divisor,w,c
 20369  016FE4  5C24               	subwf	___lwmod@dividend,w,c
 20370  016FE6  5027               	movf	___lwmod@divisor+1,w,c
 20371  016FE8  5825               	subwfb	___lwmod@dividend+1,w,c
 20372  016FEA  A0D8               	btfss	16344,0,c
 20373  016FEC  D004               	goto	l1950
 20374  016FEE  5026               	movf	___lwmod@divisor,w,c
 20375  016FF0  5E24               	subwf	___lwmod@dividend,f,c
 20376  016FF2  5027               	movf	___lwmod@divisor+1,w,c
 20377  016FF4  5A25               	subwfb	___lwmod@dividend+1,f,c
 20378  016FF6                     l1950:
 20379  016FF6  90D8               	bcf	16344,0,c
 20380  016FF8  3227               	rrcf	___lwmod@divisor+1,f,c
 20381  016FFA  3226               	rrcf	___lwmod@divisor,f,c
 20382  016FFC  2E28               	decfsz	___lwmod@counter,f,c
 20383  016FFE  D7F1               	goto	u12270
 20384  017000                     l1951:
 20385  017000  0060  F090  F024   	movff	___lwmod@dividend,?___lwmod
 20386  017006  0060  F094  F025   	movff	___lwmod@dividend+1,?___lwmod+1
 20387  01700C  0012               	return		;funcret
 20388  01700E                     __end_of___lwmod:
 20389                           	opt stack 0
 20390                           
 20391 ;; *************** function _arp_gratuitous *****************
 20392 ;; Defined at:
 20393 ;;		line 326 in file "src/stack/protocols/arp.c"
 20394 ;; Parameters:    Size  Location     Type
 20395 ;;  ip              4  135[BANK0 ] struct ipv4_address
 20396 ;;  link            1  139[BANK0 ] enum E238
 20397 ;; Auto vars:     Size  Location     Type
 20398 ;;  err             3  149[BANK0 ] struct error
 20399 ;;  index           1  148[BANK0 ] unsigned char 
 20400 ;; Return value:  Size  Location     Type
 20401 ;;                  3  135[BANK0 ] struct error
 20402 ;; Registers used:
 20403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20404 ;; Tracked objects:
 20405 ;;		On entry : 0/0
 20406 ;;		On exit  : 0/0
 20407 ;;		Unchanged: 0/0
 20408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20409 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20410 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20411 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20412 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20413 ;;Total ram usage:       17 bytes
 20414 ;; Hardware stack levels used:    1
 20415 ;; Hardware stack levels required when called:   11
 20416 ;; This function calls:
 20417 ;;		_arp_checkForEntry
 20418 ;;		_arp_sendRequest
 20419 ;;		_getMillis
 20420 ;; This function is called by:
 20421 ;;		_arp_background
 20422 ;; This function uses a non-reentrant model
 20423 ;;
 20424                           
 20425                           	psect	text93
 20426  013CCC                     __ptext93:
 20427                           	opt stack 0
 20428  013CCC                     _arp_gratuitous:
 20429                           	opt stack 17
 20430                           
 20431                           ;arp.c: 327: uint8_t static announceCounter = 0;
 20432                           ;arp.c: 328: uint8_t static state = 0;
 20433                           ;arp.c: 329: time_t static timeStart = 0;
 20434                           ;arp.c: 330: uint8_t index;
 20435                           ;arp.c: 331: error_t err;
 20436                           ;arp.c: 333: enum states {
 20437                           ;arp.c: 334: INIT, WAIT_FOR_ANNOUNCE, ANNOUNCING, ENTRY_FOUND
 20438                           ;arp.c: 335: };
 20439                           ;arp.c: 336: err.module = ERROR_MODULE_ARP;
 20440                           
 20441                           ;incstack = 0
 20442  013CCC  0E03               	movlw	3
 20443  013CCE  0100               	movlb	0	; () banked
 20444  013CD0  6FF5               	movwf	arp_gratuitous@err& (0+255),b
 20445                           
 20446                           ;arp.c: 337: err.code = ERROR_ARP_WAITING;
 20447  013CD2  0E01               	movlw	1
 20448  013CD4  6FF7               	movwf	(arp_gratuitous@err+2)& (0+255),b
 20449  013CD6  0E91               	movlw	145
 20450  013CD8  6FF6               	movwf	(arp_gratuitous@err+1)& (0+255),b
 20451                           
 20452                           ;arp.c: 339: if (link == NO_LINK) {
 20453  013CDA  51EB               	movf	arp_gratuitous@link& (0+255),w,b
 20454  013CDC  A4D8               	btfss	16344,2,c
 20455  013CDE  D014               	goto	l1036
 20456                           
 20457                           ; BSR set to: 0
 20458                           ;arp.c: 340: announceCounter = 0;
 20459  013CE0  0E00               	movlw	0
 20460  013CE2  0101               	movlb	1	; () banked
 20461  013CE4  6FFB               	movwf	arp_gratuitous@announceCounter& (0+255),b
 20462                           
 20463                           ;arp.c: 341: state = INIT;
 20464  013CE6  0E00               	movlw	0
 20465  013CE8  6E42               	movwf	arp_gratuitous@state,c
 20466                           
 20467                           ;arp.c: 342: err.code = ERROR_ARP_CONNECTION_FAILED;
 20468  013CEA  0E01               	movlw	1
 20469  013CEC  0100               	movlb	0	; () banked
 20470  013CEE  6FF7               	movwf	(arp_gratuitous@err+2)& (0+255),b
 20471  013CF0  0E97               	movlw	151
 20472  013CF2  6FF6               	movwf	(arp_gratuitous@err+1)& (0+255),b
 20473                           
 20474                           ; BSR set to: 0
 20475                           ;arp.c: 343: return err;
 20476  013CF4  0060  F3D4  F0E7   	movff	arp_gratuitous@err,?_arp_gratuitous
 20477  013CFA  0060  F3D8  F0E8   	movff	arp_gratuitous@err+1,?_arp_gratuitous+1
 20478  013D00  0060  F3DC  F0E9   	movff	arp_gratuitous@err+2,?_arp_gratuitous+2
 20479                           
 20480                           ; BSR set to: 0
 20481  013D06  0012               	return	
 20482  013D08                     l1036:
 20483                           
 20484                           ; BSR set to: 0
 20485                           ;arp.c: 344: }
 20486                           ;arp.c: 346: if (arp_checkForEntry(ip, &index)) {
 20487                           
 20488                           ; BSR set to: 0
 20489  013D08  0060  F39C  F01D   	movff	arp_gratuitous@ip,arp_checkForEntry@ip
 20490  013D0E  0060  F3A0  F01E   	movff	arp_gratuitous@ip+1,arp_checkForEntry@ip+1
 20491  013D14  0060  F3A4  F01F   	movff	arp_gratuitous@ip+2,arp_checkForEntry@ip+2
 20492  013D1A  0060  F3A8  F020   	movff	arp_gratuitous@ip+3,arp_checkForEntry@ip+3
 20493  013D20  0EF4               	movlw	low arp_gratuitous@index
 20494  013D22  6E21               	movwf	arp_checkForEntry@index,c
 20495  013D24  0E00               	movlw	high arp_gratuitous@index
 20496  013D26  6E22               	movwf	arp_checkForEntry@index+1,c
 20497  013D28  EC49  F0AE         	call	_arp_checkForEntry	;wreg free
 20498  013D2C  0900               	iorlw	0
 20499  013D2E  B4D8               	btfsc	16344,2,c
 20500  013D30  D0CA               	goto	l1039
 20501                           
 20502                           ;arp.c: 347: state = ENTRY_FOUND;
 20503  013D32  0E03               	movlw	3
 20504  013D34  6E42               	movwf	arp_gratuitous@state,c
 20505                           
 20506                           ;arp.c: 348: }
 20507                           ;arp.c: 350: switch (state) {
 20508  013D36  D0C7               	goto	l1039
 20509  013D38                     
 20510                           ;arp.c: 352: err.code = ERROR_ARP_WAITING;
 20511  013D38  0E01               	movlw	1
 20512  013D3A  0100               	movlb	0	; () banked
 20513  013D3C  6FF7               	movwf	(arp_gratuitous@err+2)& (0+255),b
 20514  013D3E  0E91               	movlw	145
 20515  013D40  6FF6               	movwf	(arp_gratuitous@err+1)& (0+255),b
 20516                           
 20517                           ; BSR set to: 0
 20518                           ;arp.c: 353: timeStart = getMillis();
 20519  013D42  EC15  F0BB         	call	_getMillis	;wreg free
 20520  013D46  0060  F058  F2AB   	movff	?_getMillis,arp_gratuitous@timeStart
 20521  013D4C  0060  F05C  F2AC   	movff	?_getMillis+1,arp_gratuitous@timeStart+1
 20522  013D52  0060  F060  F2AD   	movff	?_getMillis+2,arp_gratuitous@timeStart+2
 20523  013D58  0060  F064  F2AE   	movff	?_getMillis+3,arp_gratuitous@timeStart+3
 20524                           
 20525                           ;arp.c: 354: state = WAIT_FOR_ANNOUNCE;
 20526  013D5E  0E01               	movlw	1
 20527  013D60  6E42               	movwf	arp_gratuitous@state,c
 20528                           
 20529                           ;arp.c: 355: break;
 20530  013D62  D0BE               	goto	l1041
 20531  013D64                     
 20532                           ;arp.c: 357: err.code = ERROR_ARP_WAITING;
 20533  013D64  0E01               	movlw	1
 20534  013D66  0100               	movlb	0	; () banked
 20535  013D68  6FF7               	movwf	(arp_gratuitous@err+2)& (0+255),b
 20536  013D6A  0E91               	movlw	145
 20537  013D6C  6FF6               	movwf	(arp_gratuitous@err+1)& (0+255),b
 20538                           
 20539                           ; BSR set to: 0
 20540                           ;arp.c: 358: if ((getMillis() - timeStart) > 2000u) {
 20541  013D6E  0060  FAAC  F0EC   	movff	arp_gratuitous@timeStart,??_arp_gratuitous
 20542  013D74  0060  FAB0  F0ED   	movff	arp_gratuitous@timeStart+1,??_arp_gratuitous+1
 20543  013D7A  0060  FAB4  F0EE   	movff	arp_gratuitous@timeStart+2,??_arp_gratuitous+2
 20544  013D80  0060  FAB8  F0EF   	movff	arp_gratuitous@timeStart+3,??_arp_gratuitous+3
 20545  013D86  1FEC               	comf	??_arp_gratuitous& (0+255),f,b
 20546  013D88  1FED               	comf	(??_arp_gratuitous+1)& (0+255),f,b
 20547  013D8A  1FEE               	comf	(??_arp_gratuitous+2)& (0+255),f,b
 20548  013D8C  1FEF               	comf	(??_arp_gratuitous+3)& (0+255),f,b
 20549  013D8E  2BEC               	incf	??_arp_gratuitous& (0+255),f,b
 20550  013D90  0E00               	movlw	0
 20551  013D92  23ED               	addwfc	(??_arp_gratuitous+1)& (0+255),f,b
 20552  013D94  23EE               	addwfc	(??_arp_gratuitous+2)& (0+255),f,b
 20553  013D96  23EF               	addwfc	(??_arp_gratuitous+3)& (0+255),f,b
 20554  013D98  EC15  F0BB         	call	_getMillis	;wreg free
 20555  013D9C  0100               	movlb	0	; () banked
 20556  013D9E  51EC               	movf	??_arp_gratuitous& (0+255),w,b
 20557  013DA0  2416               	addwf	?_getMillis,w,c
 20558  013DA2  6FF0               	movwf	(??_arp_gratuitous+4)& (0+255),b
 20559  013DA4  51ED               	movf	(??_arp_gratuitous+1)& (0+255),w,b
 20560  013DA6  2017               	addwfc	?_getMillis+1,w,c
 20561  013DA8  6FF1               	movwf	(??_arp_gratuitous+5)& (0+255),b
 20562  013DAA  51EE               	movf	(??_arp_gratuitous+2)& (0+255),w,b
 20563  013DAC  2018               	addwfc	?_getMillis+2,w,c
 20564  013DAE  6FF2               	movwf	(??_arp_gratuitous+6)& (0+255),b
 20565  013DB0  51EF               	movf	(??_arp_gratuitous+3)& (0+255),w,b
 20566  013DB2  2019               	addwfc	?_getMillis+3,w,c
 20567  013DB4  6FF3               	movwf	(??_arp_gratuitous+7)& (0+255),b
 20568  013DB6  51F3               	movf	(??_arp_gratuitous+7)& (0+255),w,b
 20569  013DB8  11F2               	iorwf	(??_arp_gratuitous+6)& (0+255),w,b
 20570  013DBA  E106               	bnz	u14480
 20571  013DBC  0ED1               	movlw	209
 20572  013DBE  5DF0               	subwf	(??_arp_gratuitous+4)& (0+255),w,b
 20573  013DC0  0E07               	movlw	7
 20574  013DC2  59F1               	subwfb	(??_arp_gratuitous+5)& (0+255),w,b
 20575  013DC4  A0D8               	btfss	16344,0,c
 20576  013DC6  D08C               	goto	l1041
 20577  013DC8                     u14480:
 20578                           
 20579                           ; BSR set to: 0
 20580                           ;arp.c: 359: state = ANNOUNCING;
 20581  013DC8  0E02               	movlw	2
 20582  013DCA  6E42               	movwf	arp_gratuitous@state,c
 20583                           
 20584                           ;arp.c: 360: announceCounter = 0;
 20585  013DCC  0E00               	movlw	0
 20586  013DCE  0101               	movlb	1	; () banked
 20587  013DD0  6FFB               	movwf	arp_gratuitous@announceCounter& (0+255),b
 20588                           
 20589                           ; BSR set to: 1
 20590                           ;arp.c: 361: }
 20591                           ;arp.c: 362: break;
 20592  013DD2  D086               	goto	l1041
 20593  013DD4                     
 20594                           ;arp.c: 364: err.code = ERROR_ARP_WAITING;
 20595                           
 20596                           ; BSR set to: 1
 20597  013DD4  0E01               	movlw	1
 20598  013DD6  0100               	movlb	0	; () banked
 20599  013DD8  6FF7               	movwf	(arp_gratuitous@err+2)& (0+255),b
 20600  013DDA  0E91               	movlw	145
 20601  013DDC  6FF6               	movwf	(arp_gratuitous@err+1)& (0+255),b
 20602                           
 20603                           ;arp.c: 365: if ((announceCounter == 0) || (getMillis() - timeStart) > 2000u) {
 20604  013DDE  0101               	movlb	1	; () banked
 20605  013DE0  51FB               	movf	arp_gratuitous@announceCounter& (0+255),w,b
 20606  013DE2  B4D8               	btfsc	16344,2,c
 20607  013DE4  D02E               	goto	u14500
 20608                           
 20609                           ; BSR set to: 1
 20610  013DE6  0060  FAAC  F0EC   	movff	arp_gratuitous@timeStart,??_arp_gratuitous
 20611  013DEC  0060  FAB0  F0ED   	movff	arp_gratuitous@timeStart+1,??_arp_gratuitous+1
 20612  013DF2  0060  FAB4  F0EE   	movff	arp_gratuitous@timeStart+2,??_arp_gratuitous+2
 20613  013DF8  0060  FAB8  F0EF   	movff	arp_gratuitous@timeStart+3,??_arp_gratuitous+3
 20614  013DFE  0100               	movlb	0	; () banked
 20615  013E00  1FEC               	comf	??_arp_gratuitous& (0+255),f,b
 20616  013E02  1FED               	comf	(??_arp_gratuitous+1)& (0+255),f,b
 20617  013E04  1FEE               	comf	(??_arp_gratuitous+2)& (0+255),f,b
 20618  013E06  1FEF               	comf	(??_arp_gratuitous+3)& (0+255),f,b
 20619  013E08  2BEC               	incf	??_arp_gratuitous& (0+255),f,b
 20620  013E0A  0E00               	movlw	0
 20621  013E0C  23ED               	addwfc	(??_arp_gratuitous+1)& (0+255),f,b
 20622  013E0E  23EE               	addwfc	(??_arp_gratuitous+2)& (0+255),f,b
 20623  013E10  23EF               	addwfc	(??_arp_gratuitous+3)& (0+255),f,b
 20624  013E12  EC15  F0BB         	call	_getMillis	;wreg free
 20625  013E16  0100               	movlb	0	; () banked
 20626  013E18  51EC               	movf	??_arp_gratuitous& (0+255),w,b
 20627  013E1A  2416               	addwf	?_getMillis,w,c
 20628  013E1C  6FF0               	movwf	(??_arp_gratuitous+4)& (0+255),b
 20629  013E1E  51ED               	movf	(??_arp_gratuitous+1)& (0+255),w,b
 20630  013E20  2017               	addwfc	?_getMillis+1,w,c
 20631  013E22  6FF1               	movwf	(??_arp_gratuitous+5)& (0+255),b
 20632  013E24  51EE               	movf	(??_arp_gratuitous+2)& (0+255),w,b
 20633  013E26  2018               	addwfc	?_getMillis+2,w,c
 20634  013E28  6FF2               	movwf	(??_arp_gratuitous+6)& (0+255),b
 20635  013E2A  51EF               	movf	(??_arp_gratuitous+3)& (0+255),w,b
 20636  013E2C  2019               	addwfc	?_getMillis+3,w,c
 20637  013E2E  6FF3               	movwf	(??_arp_gratuitous+7)& (0+255),b
 20638  013E30  51F3               	movf	(??_arp_gratuitous+7)& (0+255),w,b
 20639  013E32  11F2               	iorwf	(??_arp_gratuitous+6)& (0+255),w,b
 20640  013E34  E106               	bnz	l11736
 20641  013E36  0ED1               	movlw	209
 20642  013E38  5DF0               	subwf	(??_arp_gratuitous+4)& (0+255),w,b
 20643  013E3A  0E07               	movlw	7
 20644  013E3C  59F1               	subwfb	(??_arp_gratuitous+5)& (0+255),w,b
 20645  013E3E  A0D8               	btfss	16344,0,c
 20646  013E40  D02A               	goto	l1045
 20647  013E42                     u14500:
 20648  013E42                     l11736:
 20649                           
 20650                           ;arp.c: 371: timeStart = getMillis();
 20651  013E42  EC15  F0BB         	call	_getMillis	;wreg free
 20652  013E46  0060  F058  F2AB   	movff	?_getMillis,arp_gratuitous@timeStart
 20653  013E4C  0060  F05C  F2AC   	movff	?_getMillis+1,arp_gratuitous@timeStart+1
 20654  013E52  0060  F060  F2AD   	movff	?_getMillis+2,arp_gratuitous@timeStart+2
 20655  013E58  0060  F064  F2AE   	movff	?_getMillis+3,arp_gratuitous@timeStart+3
 20656                           
 20657                           ;arp.c: 372: arp_sendRequest(ip, ip);
 20658  013E5E  0060  F39C  F0DF   	movff	arp_gratuitous@ip,arp_sendRequest@ipSender
 20659  013E64  0060  F3A0  F0E0   	movff	arp_gratuitous@ip+1,arp_sendRequest@ipSender+1
 20660  013E6A  0060  F3A4  F0E1   	movff	arp_gratuitous@ip+2,arp_sendRequest@ipSender+2
 20661  013E70  0060  F3A8  F0E2   	movff	arp_gratuitous@ip+3,arp_sendRequest@ipSender+3
 20662  013E76  0060  F39C  F0E3   	movff	arp_gratuitous@ip,arp_sendRequest@ipTarget
 20663  013E7C  0060  F3A0  F0E4   	movff	arp_gratuitous@ip+1,arp_sendRequest@ipTarget+1
 20664  013E82  0060  F3A4  F0E5   	movff	arp_gratuitous@ip+2,arp_sendRequest@ipTarget+2
 20665  013E88  0060  F3A8  F0E6   	movff	arp_gratuitous@ip+3,arp_sendRequest@ipTarget+3
 20666  013E8E  EC5D  F0AF         	call	_arp_sendRequest	;wreg free
 20667                           
 20668                           ;arp.c: 373: announceCounter++;
 20669  013E92  0101               	movlb	1	; () banked
 20670  013E94  2BFB               	incf	arp_gratuitous@announceCounter& (0+255),f,b
 20671  013E96                     l1045:
 20672                           
 20673                           ;arp.c: 374: }
 20674                           ;arp.c: 375: if (announceCounter >= 2u) {
 20675                           
 20676                           ; BSR set to: 1
 20677  013E96  0E01               	movlw	1
 20678  013E98  0101               	movlb	1	; () banked
 20679  013E9A  65FB               	cpfsgt	arp_gratuitous@announceCounter& (0+255),b
 20680  013E9C  D021               	goto	l1041
 20681                           
 20682                           ; BSR set to: 1
 20683                           ;arp.c: 377: announceCounter = 0;
 20684  013E9E  0E00               	movlw	0
 20685  013EA0  6FFB               	movwf	arp_gratuitous@announceCounter& (0+255),b
 20686                           
 20687                           ;arp.c: 378: state = INIT;
 20688  013EA2  0E00               	movlw	0
 20689  013EA4  6E42               	movwf	arp_gratuitous@state,c
 20690                           
 20691                           ;arp.c: 379: err.code = (uint16_t)0;
 20692  013EA6  0E00               	movlw	0
 20693  013EA8  0100               	movlb	0	; () banked
 20694  013EAA  6FF7               	movwf	(arp_gratuitous@err+2)& (0+255),b
 20695  013EAC  0E00               	movlw	0
 20696  013EAE  D009               	goto	L30
 20697  013EB0                     
 20698                           ;arp.c: 383: announceCounter = 0;
 20699                           
 20700                           ; BSR set to: 0
 20701  013EB0  0E00               	movlw	0
 20702  013EB2  0101               	movlb	1	; () banked
 20703  013EB4  6FFB               	movwf	arp_gratuitous@announceCounter& (0+255),b
 20704                           
 20705                           ;arp.c: 384: state = INIT;
 20706  013EB6  0E00               	movlw	0
 20707  013EB8  6E42               	movwf	arp_gratuitous@state,c
 20708                           
 20709                           ;arp.c: 385: err.code = ERROR_ARP_IPv4_ADDRESS_CONFLICT;
 20710  013EBA  0E01               	movlw	1
 20711  013EBC  0100               	movlb	0	; () banked
 20712  013EBE  6FF7               	movwf	(arp_gratuitous@err+2)& (0+255),b
 20713  013EC0  0E96               	movlw	150
 20714  013EC2                     L30:
 20715  013EC2  6FF6               	movwf	(arp_gratuitous@err+1)& (0+255),b
 20716                           
 20717                           ; BSR set to: 0
 20718                           ;arp.c: 388: }
 20719                           
 20720                           ;arp.c: 386: break;
 20721  013EC4  D00D               	goto	l1041
 20722  013EC6                     l1039:
 20723                           
 20724                           ; BSR set to: 0
 20725  013EC6  5042               	movf	arp_gratuitous@state,w,c
 20726                           
 20727                           ; Switch size 1, requested type "space"
 20728                           ; Number of cases is 4, Range of values is 0 to 3
 20729                           ; switch strategies available:
 20730                           ; Name         Instructions Cycles
 20731                           ; simple_byte           13     7 (average)
 20732                           ;	Chosen strategy is simple_byte
 20733  013EC8  0A00               	xorlw	0	; case 0
 20734  013ECA  B4D8               	btfsc	16344,2,c
 20735  013ECC  D735               	goto	l1040
 20736  013ECE  0A01               	xorlw	1	; case 1
 20737  013ED0  B4D8               	btfsc	16344,2,c
 20738  013ED2  D748               	goto	l1042
 20739  013ED4  0A03               	xorlw	3	; case 2
 20740  013ED6  B4D8               	btfsc	16344,2,c
 20741  013ED8  D77D               	goto	l1044
 20742  013EDA  0A01               	xorlw	1	; case 3
 20743  013EDC  B4D8               	btfsc	16344,2,c
 20744  013EDE  D7E8               	goto	l1049
 20745  013EE0                     l1041:
 20746                           
 20747                           ;arp.c: 389: return err;
 20748  013EE0  0060  F3D4  F0E7   	movff	arp_gratuitous@err,?_arp_gratuitous
 20749  013EE6  0060  F3D8  F0E8   	movff	arp_gratuitous@err+1,?_arp_gratuitous+1
 20750  013EEC  0060  F3DC  F0E9   	movff	arp_gratuitous@err+2,?_arp_gratuitous+2
 20751  013EF2  0012               	return		;funcret
 20752  013EF4                     __end_of_arp_gratuitous:
 20753                           	opt stack 0
 20754                           
 20755 ;; *************** function _arp_sendRequest *****************
 20756 ;; Defined at:
 20757 ;;		line 190 in file "src/stack/protocols/arp.c"
 20758 ;; Parameters:    Size  Location     Type
 20759 ;;  ipSender        4  127[BANK0 ] struct ipv4_address
 20760 ;;  ipTarget        4  131[BANK0 ] struct ipv4_address
 20761 ;; Auto vars:     Size  Location     Type
 20762 ;;  request        32   12[BANK1 ] struct arp_message
 20763 ;;  targetMAC       6    6[BANK1 ] struct macaddress
 20764 ;;  senderMAC       6    0[BANK1 ] struct macaddress
 20765 ;; Return value:  Size  Location     Type
 20766 ;;                  1    wreg      void 
 20767 ;; Registers used:
 20768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20769 ;; Tracked objects:
 20770 ;;		On entry : 0/0
 20771 ;;		On exit  : 0/0
 20772 ;;		Unchanged: 0/0
 20773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20774 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20775 ;;      Locals:         0       0      44       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20777 ;;      Totals:         0       8      44       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20778 ;;Total ram usage:       52 bytes
 20779 ;; Hardware stack levels used:    1
 20780 ;; Hardware stack levels required when called:   10
 20781 ;; This function calls:
 20782 ;;		_arp_send
 20783 ;;		_ethernetController_getMacAddress
 20784 ;;		_mac_setAllZero
 20785 ;; This function is called by:
 20786 ;;		_arp_probe
 20787 ;;		_arp_gratuitous
 20788 ;;		_ipv4_sendFrame
 20789 ;; This function uses a non-reentrant model
 20790 ;;
 20791                           
 20792                           	psect	text94
 20793  015EBA                     __ptext94:
 20794                           	opt stack 0
 20795  015EBA                     _arp_sendRequest:
 20796                           	opt stack 18
 20797                           
 20798                           ;arp.c: 191: arp_message_t request;
 20799                           ;arp.c: 192: macaddress_t senderMAC;
 20800                           ;arp.c: 193: macaddress_t targetMAC;
 20801                           ;arp.c: 195: senderMAC = ethernetController_getMacAddress();
 20802                           
 20803                           ;incstack = 0
 20804  015EBA  ECB1  F0B5         	call	_ethernetController_getMacAddress	;wreg free
 20805  015EBE  EE20  F100         	lfsr	2,arp_sendRequest@senderMAC
 20806  015EC2  0E05               	movlw	5
 20807  015EC4                     u13641:
 20808  015EC4  006F FFAF FFDB     	movff	16363,16347
 20809  015ECA  06E8               	decf	16360,f,c
 20810  015ECC  E2FB               	bc	u13641
 20811                           
 20812                           ;arp.c: 196: mac_setAllZero(&targetMAC);
 20813  015ECE  0E06               	movlw	low arp_sendRequest@targetMAC
 20814  015ED0  6E16               	movwf	mac_setAllZero@mac,c
 20815  015ED2  0E01               	movlw	high arp_sendRequest@targetMAC
 20816  015ED4  6E17               	movwf	mac_setAllZero@mac+1,c
 20817  015ED6  EC8B  F0BA         	call	_mac_setAllZero	;wreg free
 20818                           
 20819                           ;arp.c: 198: request.hlen = 6u;
 20820  015EDA  0E06               	movlw	6
 20821  015EDC  0101               	movlb	1	; () banked
 20822  015EDE  6F10               	movwf	(arp_sendRequest@request+4)& (0+255),b
 20823                           
 20824                           ; BSR set to: 1
 20825                           ;arp.c: 199: request.plen = 4u;
 20826  015EE0  0E04               	movlw	4
 20827  015EE2  6F11               	movwf	(arp_sendRequest@request+5)& (0+255),b
 20828                           
 20829                           ; BSR set to: 1
 20830                           ;arp.c: 200: request.htype = ARP_HTYPE_ETHERNET;
 20831  015EE4  0E00               	movlw	0
 20832  015EE6  6F0D               	movwf	(arp_sendRequest@request+1)& (0+255),b
 20833  015EE8  0E01               	movlw	1
 20834  015EEA  6F0C               	movwf	arp_sendRequest@request& (0+255),b
 20835                           
 20836                           ; BSR set to: 1
 20837                           ;arp.c: 201: request.ptype = ARP_PTYPE_IPv4;
 20838  015EEC  0E08               	movlw	8
 20839  015EEE  6F0F               	movwf	(arp_sendRequest@request+3)& (0+255),b
 20840  015EF0  0E00               	movlw	0
 20841  015EF2  6F0E               	movwf	(arp_sendRequest@request+2)& (0+255),b
 20842                           
 20843                           ; BSR set to: 1
 20844                           ;arp.c: 202: request.operation = ARP_REQUEST;
 20845  015EF4  0E00               	movlw	0
 20846  015EF6  6F13               	movwf	(arp_sendRequest@request+7)& (0+255),b
 20847  015EF8  0E01               	movlw	1
 20848  015EFA  6F12               	movwf	(arp_sendRequest@request+6)& (0+255),b
 20849                           
 20850                           ; BSR set to: 1
 20851                           ;arp.c: 203: request.senderIPAddress = ipSender;
 20852  015EFC  0060  F37C  F11A   	movff	arp_sendRequest@ipSender,arp_sendRequest@request+14
 20853  015F02  0060  F380  F11B   	movff	arp_sendRequest@ipSender+1,arp_sendRequest@request+15
 20854  015F08  0060  F384  F11C   	movff	arp_sendRequest@ipSender+2,arp_sendRequest@request+16
 20855  015F0E  0060  F388  F11D   	movff	arp_sendRequest@ipSender+3,arp_sendRequest@request+17
 20856                           
 20857                           ; BSR set to: 1
 20858                           ;arp.c: 204: request.senderMACAddress = senderMAC;
 20859  015F14  EE20  F100         	lfsr	2,arp_sendRequest@senderMAC
 20860  015F18  EE10  F114         	lfsr	1,arp_sendRequest@request+8
 20861  015F1C  0E05               	movlw	5
 20862  015F1E                     u13651:
 20863  015F1E  006F FF6F FFE3     	movff	16347,16355
 20864  015F24  06E8               	decf	16360,f,c
 20865  015F26  E2FB               	bc	u13651
 20866                           
 20867                           ; BSR set to: 1
 20868                           ;arp.c: 205: request.targetIPAddress = ipTarget;
 20869  015F28  0060  F38C  F124   	movff	arp_sendRequest@ipTarget,arp_sendRequest@request+24
 20870  015F2E  0060  F390  F125   	movff	arp_sendRequest@ipTarget+1,arp_sendRequest@request+25
 20871  015F34  0060  F394  F126   	movff	arp_sendRequest@ipTarget+2,arp_sendRequest@request+26
 20872  015F3A  0060  F398  F127   	movff	arp_sendRequest@ipTarget+3,arp_sendRequest@request+27
 20873                           
 20874                           ; BSR set to: 1
 20875                           ;arp.c: 206: request.targetMACAddress = targetMAC;
 20876  015F40  EE20  F106         	lfsr	2,arp_sendRequest@targetMAC
 20877  015F44  EE10  F11E         	lfsr	1,arp_sendRequest@request+18
 20878  015F48  0E05               	movlw	5
 20879  015F4A                     u13661:
 20880  015F4A  006F FF6F FFE3     	movff	16347,16355
 20881  015F50  06E8               	decf	16360,f,c
 20882  015F52  E2FB               	bc	u13661
 20883                           
 20884                           ; BSR set to: 1
 20885                           ;arp.c: 208: arp_send(request);
 20886  015F54  EE20  F10C         	lfsr	2,arp_sendRequest@request
 20887  015F58  EE00  F08A         	lfsr	0,arp_send@arp
 20888  015F5C  0E1F               	movlw	31
 20889  015F5E                     u13671:
 20890  015F5E  006F FF6F FFEB     	movff	16347,16363
 20891  015F64  06E8               	decf	16360,f,c
 20892  015F66  E2FB               	bc	u13671
 20893  015F68  ECC6  F09A         	call	_arp_send	;wreg free
 20894  015F6C  0012               	return		;funcret
 20895  015F6E                     __end_of_arp_sendRequest:
 20896                           	opt stack 0
 20897                           
 20898 ;; *************** function _mac_setAllZero *****************
 20899 ;; Defined at:
 20900 ;;		line 47 in file "src/eth/mac.c"
 20901 ;; Parameters:    Size  Location     Type
 20902 ;;  mac             2   21[COMRAM] PTR struct macaddress
 20903 ;;		 -> arp_init@mac(6), arp_sendRequest@targetMAC(6), 
 20904 ;; Auto vars:     Size  Location     Type
 20905 ;;  i               1   23[COMRAM] unsigned char 
 20906 ;; Return value:  Size  Location     Type
 20907 ;;                  1    wreg      void 
 20908 ;; Registers used:
 20909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20910 ;; Tracked objects:
 20911 ;;		On entry : 0/0
 20912 ;;		On exit  : 0/0
 20913 ;;		Unchanged: 0/0
 20914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20918 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20919 ;;Total ram usage:        3 bytes
 20920 ;; Hardware stack levels used:    1
 20921 ;; Hardware stack levels required when called:    4
 20922 ;; This function calls:
 20923 ;;		Nothing
 20924 ;; This function is called by:
 20925 ;;		_arp_sendRequest
 20926 ;;		_arp_init
 20927 ;; This function uses a non-reentrant model
 20928 ;;
 20929                           
 20930                           	psect	text95
 20931  017516                     __ptext95:
 20932                           	opt stack 0
 20933  017516                     _mac_setAllZero:
 20934                           	opt stack 24
 20935                           
 20936                           ;mac.c: 48: for (uint8_t i = 0; i < 6; i++)
 20937                           
 20938                           ;incstack = 0
 20939  017516  0E00               	movlw	0
 20940  017518  6E18               	movwf	mac_setAllZero@i,c
 20941  01751A                     l10620:
 20942  01751A  0E05               	movlw	5
 20943  01751C  6418               	cpfsgt	mac_setAllZero@i,c
 20944  01751E  D001               	goto	l399
 20945  017520  0012               	return	
 20946  017522                     l399:
 20947                           
 20948                           ;mac.c: 49: mac->address[i] = 0x00;
 20949  017522  5018               	movf	mac_setAllZero@i,w,c
 20950  017524  0D01               	mullw	1
 20951  017526  50F3               	movf	16371,w,c
 20952  017528  2416               	addwf	mac_setAllZero@mac,w,c
 20953  01752A  6ED9               	movwf	16345,c
 20954  01752C  50F4               	movf	16372,w,c
 20955  01752E  2017               	addwfc	mac_setAllZero@mac+1,w,c
 20956  017530  6EDA               	movwf	16346,c
 20957  017532  0E00               	movlw	0
 20958  017534  6EDF               	movwf	16351,c
 20959  017536  2A18               	incf	mac_setAllZero@i,f,c
 20960  017538  D7F0               	goto	l10620
 20961  01753A                     __end_of_mac_setAllZero:
 20962                           	opt stack 0
 20963                           
 20964 ;; *************** function _ethernetController_getMacAddress *****************
 20965 ;; Defined at:
 20966 ;;		line 157 in file "src/enc424j600/ENC424J600.c"
 20967 ;; Parameters:    Size  Location     Type
 20968 ;;		None
 20969 ;; Auto vars:     Size  Location     Type
 20970 ;;  mac             6   41[COMRAM] struct macaddress
 20971 ;; Return value:  Size  Location     Type
 20972 ;;                  6   35[COMRAM] struct macaddress
 20973 ;; Registers used:
 20974 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 20975 ;; Tracked objects:
 20976 ;;		On entry : 0/0
 20977 ;;		On exit  : 0/0
 20978 ;;		Unchanged: 0/0
 20979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20980 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20981 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20983 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20984 ;;Total ram usage:       12 bytes
 20985 ;; Hardware stack levels used:    1
 20986 ;; Hardware stack levels required when called:    7
 20987 ;; This function calls:
 20988 ;;		_enc424j600_readControlRegisterUnbanked
 20989 ;; This function is called by:
 20990 ;;		_main
 20991 ;;		_arp_sendRequest
 20992 ;;		_arp_sendReply
 20993 ;;		_ipv4_sendFrame
 20994 ;; This function uses a non-reentrant model
 20995 ;;
 20996                           
 20997                           	psect	text96
 20998  016B62                     __ptext96:
 20999                           	opt stack 0
 21000  016B62                     _ethernetController_getMacAddress:
 21001                           	opt stack 21
 21002                           
 21003                           ;ENC424J600.c: 158: macaddress_t mac;
 21004                           ;ENC424J600.c: 159: enc424j600_readControlRegisterUnbanked(0x04 + 0x60, &mac.address[0])
      +                          ;
 21005                           
 21006                           ;incstack = 0
 21007  016B62  0E2A               	movlw	low ethernetController_getMacAddress@mac
 21008  016B64  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 21009  016B66  0E00               	movlw	high ethernetController_getMacAddress@mac
 21010  016B68  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 21011  016B6A  0E64               	movlw	100
 21012  016B6C  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 21013                           
 21014                           ;ENC424J600.c: 160: enc424j600_readControlRegisterUnbanked(0x05 + 0x60, &mac.address[1])
      +                          ;
 21015  016B70  0E2B               	movlw	low (ethernetController_getMacAddress@mac+1)
 21016  016B72  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 21017  016B74  0E00               	movlw	high (ethernetController_getMacAddress@mac+1)
 21018  016B76  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 21019  016B78  0E65               	movlw	101
 21020  016B7A  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 21021                           
 21022                           ;ENC424J600.c: 161: enc424j600_readControlRegisterUnbanked(0x02 + 0x60, &mac.address[2])
      +                          ;
 21023  016B7E  0E2C               	movlw	low (ethernetController_getMacAddress@mac+2)
 21024  016B80  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 21025  016B82  0E00               	movlw	high (ethernetController_getMacAddress@mac+2)
 21026  016B84  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 21027  016B86  0E62               	movlw	98
 21028  016B88  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 21029                           
 21030                           ;ENC424J600.c: 162: enc424j600_readControlRegisterUnbanked(0x03 + 0x60, &mac.address[3])
      +                          ;
 21031  016B8C  0E2D               	movlw	low (ethernetController_getMacAddress@mac+3)
 21032  016B8E  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 21033  016B90  0E00               	movlw	high (ethernetController_getMacAddress@mac+3)
 21034  016B92  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 21035  016B94  0E63               	movlw	99
 21036  016B96  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 21037                           
 21038                           ;ENC424J600.c: 163: enc424j600_readControlRegisterUnbanked(0x00 + 0x60, &mac.address[4])
      +                          ;
 21039  016B9A  0E2E               	movlw	low (ethernetController_getMacAddress@mac+4)
 21040  016B9C  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 21041  016B9E  0E00               	movlw	high (ethernetController_getMacAddress@mac+4)
 21042  016BA0  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 21043  016BA2  0E60               	movlw	96
 21044  016BA4  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 21045                           
 21046                           ;ENC424J600.c: 164: enc424j600_readControlRegisterUnbanked(0x01 + 0x60, &mac.address[5])
      +                          ;
 21047  016BA8  0E2F               	movlw	low (ethernetController_getMacAddress@mac+5)
 21048  016BAA  6E20               	movwf	enc424j600_readControlRegisterUnbanked@data,c
 21049  016BAC  0E00               	movlw	high (ethernetController_getMacAddress@mac+5)
 21050  016BAE  6E21               	movwf	enc424j600_readControlRegisterUnbanked@data+1,c
 21051  016BB0  0E61               	movlw	97
 21052  016BB2  ECDD  F0B8         	call	_enc424j600_readControlRegisterUnbanked
 21053                           
 21054                           ;ENC424J600.c: 165: return mac;
 21055  016BB6  EE20  F02A         	lfsr	2,ethernetController_getMacAddress@mac
 21056  016BBA  EE00  F024         	lfsr	0,?_ethernetController_getMacAddress
 21057  016BBE  0E05               	movlw	5
 21058  016BC0                     u12291:
 21059  016BC0  006F FF6F FFEB     	movff	16347,16363
 21060  016BC6  06E8               	decf	16360,f,c
 21061  016BC8  E2FB               	bc	u12291
 21062  016BCA  0012               	return	
 21063  016BCC                     __end_of_ethernetController_getMacAddress:
 21064                           	opt stack 0
 21065                           
 21066 ;; *************** function _enc424j600_readControlRegisterUnbanked *****************
 21067 ;; Defined at:
 21068 ;;		line 545 in file "src/enc424j600/ENC424J600.c"
 21069 ;; Parameters:    Size  Location     Type
 21070 ;;  addr            1    wreg     unsigned char 
 21071 ;;  data            2   31[COMRAM] PTR unsigned char 
 21072 ;;		 -> enc424j600_clearInterruptFlag@temp(1), enc424j600_getInterruptFlags@high(1), enc424j600_getInterruptFlags@low(1)
      +, enc424j600_disable@temp(1), 
 21073 ;;		 -> enc424j600_enable@temp(1), enc424j600_disableAutoMACInsertion@temp(1), enc424j600_enableAutoMACInsertion@temp(1)
      +, enc424j600_getPacketCount@lowByte(1), 
 21074 ;;		 -> enc424j600_readPHYRegister@highByte(1), enc424j600_readPHYRegister@lowByte(1), enc424j600_readPHYRegister@temp(1
      +), ethernetController_setLEDConfig@data(1), 
 21075 ;;		 -> ethernetController_updateLinkStatus@temp(1), mac.address(6), ethernetController_getMacAddress@mac(6), ethernetCo
      +ntroller_getSiliconRevision@data(1), 
 21076 ;;		 -> ethernetController_checkDeviceId@data(1), ethernetController_softReset@receivedData(2), 
 21077 ;; Auto vars:     Size  Location     Type
 21078 ;;  addr            1   33[COMRAM] unsigned char 
 21079 ;;  opcode          1   34[COMRAM] unsigned char 
 21080 ;; Return value:  Size  Location     Type
 21081 ;;                  1    wreg      void 
 21082 ;; Registers used:
 21083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21084 ;; Tracked objects:
 21085 ;;		On entry : 0/0
 21086 ;;		On exit  : 0/0
 21087 ;;		Unchanged: 0/0
 21088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21092 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21093 ;;Total ram usage:        4 bytes
 21094 ;; Hardware stack levels used:    1
 21095 ;; Hardware stack levels required when called:    6
 21096 ;; This function calls:
 21097 ;;		_enc424j600_readSPI
 21098 ;;		_enc424j600_writeSPI
 21099 ;; This function is called by:
 21100 ;;		_ethernetController_softReset
 21101 ;;		_ethernetController_checkDeviceId
 21102 ;;		_ethernetController_getMacAddress
 21103 ;;		_ethernetController_updateLinkStatus
 21104 ;;		_ethernetController_setLEDConfig
 21105 ;;		_enc424j600_readPHYRegister
 21106 ;;		_enc424j600_getPacketCount
 21107 ;;		_enc424j600_enableAutoMACInsertion
 21108 ;;		_enc424j600_getInterruptFlags
 21109 ;;		_enc424j600_clearInterruptFlag
 21110 ;;		_ethernetController_getSiliconRevision
 21111 ;;		_enc424j600_disableAutoMACInsertion
 21112 ;;		_enc424j600_enable
 21113 ;;		_enc424j600_disable
 21114 ;; This function uses a non-reentrant model
 21115 ;;
 21116                           
 21117                           	psect	text97
 21118  0171BA                     __ptext97:
 21119                           	opt stack 0
 21120  0171BA                     _enc424j600_readControlRegisterUnbanked:
 21121                           	opt stack 21
 21122                           
 21123                           ;incstack = 0
 21124                           ;enc424j600_readControlRegisterUnbanked@addr stored from wreg
 21125  0171BA  6E22               	movwf	enc424j600_readControlRegisterUnbanked@addr,c
 21126                           
 21127                           ;ENC424J600.c: 546: uint8_t opcode = 0x20;
 21128  0171BC  0E20               	movlw	32
 21129  0171BE  6E23               	movwf	enc424j600_readControlRegisterUnbanked@opcode,c
 21130                           
 21131                           ;ENC424J600.c: 547: PORTBbits.RB4=0;
 21132  0171C0  013F               	movlb	63	; () banked
 21133  0171C2  99CB               	bcf	203,4,b	;volatile
 21134                           
 21135                           ; BSR set to: 63
 21136                           ;ENC424J600.c: 548: enc424j600_writeSPI(&opcode);
 21137  0171C4  0E23               	movlw	low enc424j600_readControlRegisterUnbanked@opcode
 21138  0171C6  6E16               	movwf	enc424j600_writeSPI@data,c
 21139  0171C8  0E00               	movlw	high enc424j600_readControlRegisterUnbanked@opcode
 21140  0171CA  6E17               	movwf	enc424j600_writeSPI@data+1,c
 21141  0171CC  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 21142                           
 21143                           ;ENC424J600.c: 549: enc424j600_writeSPI(&addr);
 21144  0171D0  0E22               	movlw	low enc424j600_readControlRegisterUnbanked@addr
 21145  0171D2  6E16               	movwf	enc424j600_writeSPI@data,c
 21146  0171D4  0E00               	movlw	high enc424j600_readControlRegisterUnbanked@addr
 21147  0171D6  6E17               	movwf	enc424j600_writeSPI@data+1,c
 21148  0171D8  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 21149                           
 21150                           ;ENC424J600.c: 550: enc424j600_readSPI(data);
 21151  0171DC  0060  F080  F016   	movff	enc424j600_readControlRegisterUnbanked@data,enc424j600_readSPI@data
 21152  0171E2  0060  F084  F017   	movff	enc424j600_readControlRegisterUnbanked@data+1,enc424j600_readSPI@data+1
 21153  0171E8  ECB3  F0B3         	call	_enc424j600_readSPI	;wreg free
 21154                           
 21155                           ;ENC424J600.c: 551: PORTBbits.RB4=1;
 21156  0171EC  013F               	movlb	63	; () banked
 21157  0171EE  89CB               	bsf	203,4,b	;volatile
 21158                           
 21159                           ; BSR set to: 63
 21160  0171F0  0012               	return		;funcret
 21161  0171F2                     __end_of_enc424j600_readControlRegisterUnbanked:
 21162                           	opt stack 0
 21163                           
 21164 ;; *************** function _arp_send *****************
 21165 ;; Defined at:
 21166 ;;		line 144 in file "src/stack/protocols/arp.c"
 21167 ;; Parameters:    Size  Location     Type
 21168 ;;  arp            32   42[BANK0 ] struct arp_message
 21169 ;; Auto vars:     Size  Location     Type
 21170 ;;  i               1   83[BANK0 ] unsigned char 
 21171 ;;  i               1   82[BANK0 ] unsigned char 
 21172 ;;  i               1   81[BANK0 ] unsigned char 
 21173 ;;  i               1   80[BANK0 ] unsigned char 
 21174 ;;  ethFrame       34   84[BANK0 ] struct ethernetFrame
 21175 ;;  field           9  118[BANK0 ] struct memoryField
 21176 ;;  destination     6   74[BANK0 ] struct macaddress
 21177 ;; Return value:  Size  Location     Type
 21178 ;;                  1    wreg      void 
 21179 ;; Registers used:
 21180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21181 ;; Tracked objects:
 21182 ;;		On entry : 0/0
 21183 ;;		On exit  : 0/0
 21184 ;;		Unchanged: 0/0
 21185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21186 ;;      Params:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21187 ;;      Locals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21189 ;;      Totals:         0      85       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21190 ;;Total ram usage:       85 bytes
 21191 ;; Hardware stack levels used:    1
 21192 ;; Hardware stack levels required when called:    9
 21193 ;; This function calls:
 21194 ;;		_ethernetController_getSourceMACAddress
 21195 ;;		_ethernetController_sendPacket
 21196 ;;		_ethernetController_streamToTransmitBuffer
 21197 ;;		_ethernet_txFrameRequest
 21198 ;;		_mac_setToBroadcast
 21199 ;; This function is called by:
 21200 ;;		_arp_sendRequest
 21201 ;;		_arp_sendReply
 21202 ;; This function uses a non-reentrant model
 21203 ;;
 21204                           
 21205                           	psect	text98
 21206  01358C                     __ptext98:
 21207                           	opt stack 0
 21208  01358C                     _arp_send:
 21209                           	opt stack 18
 21210                           
 21211                           ;arp.c: 145: memoryField_t field;
 21212                           ;arp.c: 146: ethernetFrame_t ethFrame;
 21213                           ;arp.c: 149: macaddress_t destination;
 21214                           ;arp.c: 150: mac_setToBroadcast(&destination);
 21215                           
 21216                           ; BSR set to: 63
 21217                           ;incstack = 0
 21218  01358C  0EAA               	movlw	low arp_send@destination
 21219  01358E  6E16               	movwf	mac_setToBroadcast@mac,c
 21220  013590  0E00               	movlw	high arp_send@destination
 21221  013592  6E17               	movwf	mac_setToBroadcast@mac+1,c
 21222  013594  EC9D  F0BA         	call	_mac_setToBroadcast	;wreg free
 21223                           
 21224                           ;arp.c: 151: ethFrame.destination = destination;
 21225  013598  EE20  F0AA         	lfsr	2,arp_send@destination
 21226  01359C  EE10  F0BC         	lfsr	1,arp_send@ethFrame+8
 21227  0135A0  0E05               	movlw	5
 21228  0135A2                     u12441:
 21229  0135A2  006F FF6F FFE3     	movff	16347,16355
 21230  0135A8  06E8               	decf	16360,f,c
 21231  0135AA  E2FB               	bc	u12441
 21232                           
 21233                           ;arp.c: 155: ethFrame.length = 36;
 21234  0135AC  0E00               	movlw	0
 21235  0135AE  0100               	movlb	0	; () banked
 21236  0135B0  6FB5               	movwf	(arp_send@ethFrame+1)& (0+255),b
 21237  0135B2  0E24               	movlw	36
 21238  0135B4  6FB4               	movwf	arp_send@ethFrame& (0+255),b
 21239                           
 21240                           ; BSR set to: 0
 21241                           ;arp.c: 156: ethFrame.source = ethernetController_getSourceMACAddress(field);
 21242  0135B6  EE20  F0D6         	lfsr	2,arp_send@field
 21243  0135BA  EE00  F025         	lfsr	0,ethernetController_getSourceMACAddress@field
 21244  0135BE  0E08               	movlw	8
 21245  0135C0                     u12451:
 21246  0135C0  006F FF6F FFEB     	movff	16347,16363
 21247  0135C6  06E8               	decf	16360,f,c
 21248  0135C8  E2FB               	bc	u12451
 21249  0135CA  EC9E  F0B4         	call	_ethernetController_getSourceMACAddress	;wreg free
 21250  0135CE  EE20  F0B6         	lfsr	2,arp_send@ethFrame+2
 21251  0135D2  0E05               	movlw	5
 21252  0135D4                     u12461:
 21253  0135D4  006F FFAF FFDB     	movff	16363,16347
 21254  0135DA  06E8               	decf	16360,f,c
 21255  0135DC  E2FB               	bc	u12461
 21256                           
 21257                           ;arp.c: 157: ethFrame.ethertype = ETHERTYPE_ARP;
 21258  0135DE  0E08               	movlw	8
 21259  0135E0  0100               	movlb	0	; () banked
 21260  0135E2  6FC3               	movwf	(arp_send@ethFrame+15)& (0+255),b
 21261  0135E4  0E06               	movlw	6
 21262  0135E6  6FC2               	movwf	(arp_send@ethFrame+14)& (0+255),b
 21263                           
 21264                           ; BSR set to: 0
 21265                           ;arp.c: 159: ethernet_txFrameRequest(&ethFrame);
 21266  0135E8  0EB4               	movlw	low arp_send@ethFrame
 21267  0135EA  6E34               	movwf	ethernet_txFrameRequest@frame,c
 21268  0135EC  0E00               	movlw	high arp_send@ethFrame
 21269  0135EE  6E35               	movwf	ethernet_txFrameRequest@frame+1,c
 21270  0135F0  ECC8  F0AB         	call	_ethernet_txFrameRequest	;wreg free
 21271                           
 21272                           ;arp.c: 161: if (ethFrame.memory.fOutOfMemory) {
 21273  0135F4  0100               	movlb	0	; () banked
 21274  0135F6  51CB               	movf	(arp_send@ethFrame+23)& (0+255),w,b
 21275  0135F8  A4D8               	btfss	16344,2,c
 21276  0135FA  0012               	return	
 21277                           
 21278                           ; BSR set to: 0
 21279                           ;arp.c: 163: }
 21280                           ;arp.c: 165: field.start = ethFrame.memory.start + 8;
 21281                           
 21282                           ; BSR set to: 0
 21283                           
 21284                           ; BSR set to: 0
 21285                           ;arp.c: 162: return;
 21286  0135FC  0E08               	movlw	8
 21287  0135FE  25C4               	addwf	(arp_send@ethFrame+16)& (0+255),w,b
 21288  013600  6FD6               	movwf	arp_send@field& (0+255),b
 21289  013602  0E00               	movlw	0
 21290  013604  21C5               	addwfc	(arp_send@ethFrame+17)& (0+255),w,b
 21291  013606  6FD7               	movwf	(arp_send@field+1)& (0+255),b
 21292                           
 21293                           ; BSR set to: 0
 21294                           ;arp.c: 166: field.end = ethFrame.memory.end;
 21295  013608  0060  F318  F0D8   	movff	arp_send@ethFrame+18,arp_send@field+2
 21296  01360E  0060  F31C  F0D9   	movff	arp_send@ethFrame+19,arp_send@field+3
 21297                           
 21298                           ; BSR set to: 0
 21299                           ;arp.c: 167: field.length = 28;
 21300  013614  0E00               	movlw	0
 21301  013616  6FDB               	movwf	(arp_send@field+5)& (0+255),b
 21302  013618  0E1C               	movlw	28
 21303  01361A  6FDA               	movwf	(arp_send@field+4)& (0+255),b
 21304                           
 21305                           ; BSR set to: 0
 21306                           ;arp.c: 169: ethernetController_streamToTransmitBuffer((arp.htype & 0xff00) >> 8, field)
      +                          ;
 21307  01361C  EE20  F0D6         	lfsr	2,arp_send@field
 21308  013620  EE00  F025         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 21309  013624  0E08               	movlw	8
 21310  013626                     u12481:
 21311  013626  006F FF6F FFEB     	movff	16347,16363
 21312  01362C  06E8               	decf	16360,f,c
 21313  01362E  E2FB               	bc	u12481
 21314  013630  518B               	movf	(arp_send@arp+1)& (0+255),w,b
 21315  013632  EC75  F0B3         	call	_ethernetController_streamToTransmitBuffer
 21316                           
 21317                           ;arp.c: 170: ethernetController_streamToTransmitBuffer(arp.htype & 0x00ff, field);
 21318  013636  EE20  F0D6         	lfsr	2,arp_send@field
 21319  01363A  EE00  F025         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 21320  01363E  0E08               	movlw	8
 21321  013640                     u12491:
 21322  013640  006F FF6F FFEB     	movff	16347,16363
 21323  013646  06E8               	decf	16360,f,c
 21324  013648  E2FB               	bc	u12491
 21325  01364A  0100               	movlb	0	; () banked
 21326  01364C  518A               	movf	arp_send@arp& (0+255),w,b
 21327  01364E  EC75  F0B3         	call	_ethernetController_streamToTransmitBuffer
 21328                           
 21329                           ;arp.c: 171: ethernetController_streamToTransmitBuffer((arp.ptype & 0xff00) >> 8, field)
      +                          ;
 21330  013652  EE20  F0D6         	lfsr	2,arp_send@field
 21331  013656  EE00  F025         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 21332  01365A  0E08               	movlw	8
 21333  01365C                     u12501:
 21334  01365C  006F FF6F FFEB     	movff	16347,16363
 21335  013662  06E8               	decf	16360,f,c
 21336  013664  E2FB               	bc	u12501
 21337  013666  0100               	movlb	0	; () banked
 21338  013668  518D               	movf	(arp_send@arp+3)& (0+255),w,b
 21339  01366A  EC75  F0B3         	call	_ethernetController_streamToTransmitBuffer
 21340                           
 21341                           ;arp.c: 172: ethernetController_streamToTransmitBuffer(arp.ptype & 0x00ff, field);
 21342  01366E  EE20  F0D6         	lfsr	2,arp_send@field
 21343  013672  EE00  F025         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 21344  013676  0E08               	movlw	8
 21345  013678                     u12511:
 21346  013678  006F FF6F FFEB     	movff	16347,16363
 21347  01367E  06E8               	decf	16360,f,c
 21348  013680  E2FB               	bc	u12511
 21349  013682  0100               	movlb	0	; () banked
 21350  013684  518C               	movf	(arp_send@arp+2)& (0+255),w,b
 21351  013686  EC75  F0B3         	call	_ethernetController_streamToTransmitBuffer
 21352                           
 21353                           ;arp.c: 173: ethernetController_streamToTransmitBuffer(arp.hlen, field);
 21354  01368A  EE20  F0D6         	lfsr	2,arp_send@field
 21355  01368E  EE00  F025         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 21356  013692  0E08               	movlw	8
 21357  013694                     u12521:
 21358  013694  006F FF6F FFEB     	movff	16347,16363
 21359  01369A  06E8               	decf	16360,f,c
 21360  01369C  E2FB               	bc	u12521
 21361  01369E  0100               	movlb	0	; () banked
 21362  0136A0  518E               	movf	(arp_send@arp+4)& (0+255),w,b
 21363  0136A2  EC75  F0B3         	call	_ethernetController_streamToTransmitBuffer
 21364                           
 21365                           ;arp.c: 174: ethernetController_streamToTransmitBuffer(arp.plen, field);
 21366  0136A6  EE20  F0D6         	lfsr	2,arp_send@field
 21367  0136AA  EE00  F025         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 21368  0136AE  0E08               	movlw	8
 21369  0136B0                     u12531:
 21370  0136B0  006F FF6F FFEB     	movff	16347,16363
 21371  0136B6  06E8               	decf	16360,f,c
 21372  0136B8  E2FB               	bc	u12531
 21373  0136BA  0100               	movlb	0	; () banked
 21374  0136BC  518F               	movf	(arp_send@arp+5)& (0+255),w,b
 21375  0136BE  EC75  F0B3         	call	_ethernetController_streamToTransmitBuffer
 21376                           
 21377                           ;arp.c: 175: ethernetController_streamToTransmitBuffer((arp.operation & 0xff00) >> 8, fi
      +                          eld);
 21378  0136C2  EE20  F0D6         	lfsr	2,arp_send@field
 21379  0136C6  EE00  F025         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 21380  0136CA  0E08               	movlw	8
 21381  0136CC                     u12541:
 21382  0136CC  006F FF6F FFEB     	movff	16347,16363
 21383  0136D2  06E8               	decf	16360,f,c
 21384  0136D4  E2FB               	bc	u12541
 21385  0136D6  0100               	movlb	0	; () banked
 21386  0136D8  5191               	movf	(arp_send@arp+7)& (0+255),w,b
 21387  0136DA  EC75  F0B3         	call	_ethernetController_streamToTransmitBuffer
 21388                           
 21389                           ;arp.c: 176: ethernetController_streamToTransmitBuffer(arp.operation & 0x00ff, field);
 21390  0136DE  EE20  F0D6         	lfsr	2,arp_send@field
 21391  0136E2  EE00  F025         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 21392  0136E6  0E08               	movlw	8
 21393  0136E8                     u12551:
 21394  0136E8  006F FF6F FFEB     	movff	16347,16363
 21395  0136EE  06E8               	decf	16360,f,c
 21396  0136F0  E2FB               	bc	u12551
 21397  0136F2  0100               	movlb	0	; () banked
 21398  0136F4  5190               	movf	(arp_send@arp+6)& (0+255),w,b
 21399  0136F6  EC75  F0B3         	call	_ethernetController_streamToTransmitBuffer
 21400                           
 21401                           ;arp.c: 177: for (uint8_t i = 0; i < arp.hlen; i++)
 21402  0136FA  0E00               	movlw	0
 21403  0136FC  0100               	movlb	0	; () banked
 21404  0136FE  6FB0               	movwf	arp_send@i& (0+255),b
 21405  013700  D01B               	goto	l986
 21406  013702                     
 21407                           ; BSR set to: 0
 21408                           ;arp.c: 178: ethernetController_streamToTransmitBuffer(arp.senderMACAddress.address[i], 
      +                          field);
 21409                           
 21410                           ; BSR set to: 0
 21411  013702  EE20  F0D6         	lfsr	2,arp_send@field
 21412  013706  EE00  F025         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 21413  01370A  0E08               	movlw	8
 21414  01370C                     u12561:
 21415  01370C  006F FF6F FFEB     	movff	16347,16363
 21416  013712  06E8               	decf	16360,f,c
 21417  013714  E2FB               	bc	u12561
 21418  013716  51B0               	movf	arp_send@i& (0+255),w,b
 21419  013718  0D01               	mullw	1
 21420  01371A  0E08               	movlw	8
 21421  01371C  26F3               	addwf	16371,f,c
 21422  01371E  0E00               	movlw	0
 21423  013720  22F4               	addwfc	16372,f,c
 21424  013722  0E8A               	movlw	low arp_send@arp
 21425  013724  24F3               	addwf	16371,w,c
 21426  013726  6ED9               	movwf	16345,c
 21427  013728  0E00               	movlw	high arp_send@arp
 21428  01372A  20F4               	addwfc	16372,w,c
 21429  01372C  6EDA               	movwf	16346,c
 21430  01372E  50DF               	movf	16351,w,c
 21431  013730  EC75  F0B3         	call	_ethernetController_streamToTransmitBuffer
 21432  013734  0100               	movlb	0	; () banked
 21433  013736  2BB0               	incf	arp_send@i& (0+255),f,b
 21434  013738                     l986:
 21435                           
 21436                           ; BSR set to: 0
 21437                           
 21438                           ; BSR set to: 0
 21439  013738  518E               	movf	(arp_send@arp+4)& (0+255),w,b
 21440  01373A  5DB0               	subwf	arp_send@i& (0+255),w,b
 21441  01373C  A0D8               	btfss	16344,0,c
 21442  01373E  D7E1               	goto	l987
 21443                           
 21444                           ; BSR set to: 0
 21445                           ;arp.c: 179: for (uint8_t i = 0; i < arp.plen; i++)
 21446                           
 21447                           ; BSR set to: 0
 21448  013740  0E00               	movlw	0
 21449  013742  6FB1               	movwf	arp_send@i_3240& (0+255),b
 21450  013744  D01B               	goto	l989
 21451  013746                     
 21452                           ; BSR set to: 0
 21453                           ;arp.c: 180: ethernetController_streamToTransmitBuffer(arp.senderIPAddress.address[i], f
      +                          ield);
 21454                           
 21455                           ; BSR set to: 0
 21456  013746  EE20  F0D6         	lfsr	2,arp_send@field
 21457  01374A  EE00  F025         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 21458  01374E  0E08               	movlw	8
 21459  013750                     u12581:
 21460  013750  006F FF6F FFEB     	movff	16347,16363
 21461  013756  06E8               	decf	16360,f,c
 21462  013758  E2FB               	bc	u12581
 21463  01375A  51B1               	movf	arp_send@i_3240& (0+255),w,b
 21464  01375C  0D01               	mullw	1
 21465  01375E  0E0E               	movlw	14
 21466  013760  26F3               	addwf	16371,f,c
 21467  013762  0E00               	movlw	0
 21468  013764  22F4               	addwfc	16372,f,c
 21469  013766  0E8A               	movlw	low arp_send@arp
 21470  013768  24F3               	addwf	16371,w,c
 21471  01376A  6ED9               	movwf	16345,c
 21472  01376C  0E00               	movlw	high arp_send@arp
 21473  01376E  20F4               	addwfc	16372,w,c
 21474  013770  6EDA               	movwf	16346,c
 21475  013772  50DF               	movf	16351,w,c
 21476  013774  EC75  F0B3         	call	_ethernetController_streamToTransmitBuffer
 21477  013778  0100               	movlb	0	; () banked
 21478  01377A  2BB1               	incf	arp_send@i_3240& (0+255),f,b
 21479  01377C                     l989:
 21480                           
 21481                           ; BSR set to: 0
 21482                           
 21483                           ; BSR set to: 0
 21484  01377C  518F               	movf	(arp_send@arp+5)& (0+255),w,b
 21485  01377E  5DB1               	subwf	arp_send@i_3240& (0+255),w,b
 21486  013780  A0D8               	btfss	16344,0,c
 21487  013782  D7E1               	goto	l990
 21488                           
 21489                           ; BSR set to: 0
 21490                           ;arp.c: 181: for (uint8_t i = 0; i < arp.hlen; i++)
 21491                           
 21492                           ; BSR set to: 0
 21493  013784  0E00               	movlw	0
 21494  013786  6FB2               	movwf	arp_send@i_3241& (0+255),b
 21495  013788  D01B               	goto	l992
 21496  01378A                     
 21497                           ; BSR set to: 0
 21498                           ;arp.c: 182: ethernetController_streamToTransmitBuffer(arp.targetMACAddress.address[i], 
      +                          field);
 21499                           
 21500                           ; BSR set to: 0
 21501  01378A  EE20  F0D6         	lfsr	2,arp_send@field
 21502  01378E  EE00  F025         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 21503  013792  0E08               	movlw	8
 21504  013794                     u12601:
 21505  013794  006F FF6F FFEB     	movff	16347,16363
 21506  01379A  06E8               	decf	16360,f,c
 21507  01379C  E2FB               	bc	u12601
 21508  01379E  51B2               	movf	arp_send@i_3241& (0+255),w,b
 21509  0137A0  0D01               	mullw	1
 21510  0137A2  0E12               	movlw	18
 21511  0137A4  26F3               	addwf	16371,f,c
 21512  0137A6  0E00               	movlw	0
 21513  0137A8  22F4               	addwfc	16372,f,c
 21514  0137AA  0E8A               	movlw	low arp_send@arp
 21515  0137AC  24F3               	addwf	16371,w,c
 21516  0137AE  6ED9               	movwf	16345,c
 21517  0137B0  0E00               	movlw	high arp_send@arp
 21518  0137B2  20F4               	addwfc	16372,w,c
 21519  0137B4  6EDA               	movwf	16346,c
 21520  0137B6  50DF               	movf	16351,w,c
 21521  0137B8  EC75  F0B3         	call	_ethernetController_streamToTransmitBuffer
 21522  0137BC  0100               	movlb	0	; () banked
 21523  0137BE  2BB2               	incf	arp_send@i_3241& (0+255),f,b
 21524  0137C0                     l992:
 21525                           
 21526                           ; BSR set to: 0
 21527                           
 21528                           ; BSR set to: 0
 21529  0137C0  518E               	movf	(arp_send@arp+4)& (0+255),w,b
 21530  0137C2  5DB2               	subwf	arp_send@i_3241& (0+255),w,b
 21531  0137C4  A0D8               	btfss	16344,0,c
 21532  0137C6  D7E1               	goto	l993
 21533                           
 21534                           ; BSR set to: 0
 21535                           ;arp.c: 183: for (uint8_t i = 0; i < arp.plen; i++)
 21536                           
 21537                           ; BSR set to: 0
 21538  0137C8  0E00               	movlw	0
 21539  0137CA  6FB3               	movwf	arp_send@i_3242& (0+255),b
 21540  0137CC  D01B               	goto	l995
 21541  0137CE                     
 21542                           ; BSR set to: 0
 21543                           ;arp.c: 184: ethernetController_streamToTransmitBuffer(arp.targetIPAddress.address[i], f
      +                          ield);
 21544                           
 21545                           ; BSR set to: 0
 21546  0137CE  EE20  F0D6         	lfsr	2,arp_send@field
 21547  0137D2  EE00  F025         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 21548  0137D6  0E08               	movlw	8
 21549  0137D8                     u12621:
 21550  0137D8  006F FF6F FFEB     	movff	16347,16363
 21551  0137DE  06E8               	decf	16360,f,c
 21552  0137E0  E2FB               	bc	u12621
 21553  0137E2  51B3               	movf	arp_send@i_3242& (0+255),w,b
 21554  0137E4  0D01               	mullw	1
 21555  0137E6  0E18               	movlw	24
 21556  0137E8  26F3               	addwf	16371,f,c
 21557  0137EA  0E00               	movlw	0
 21558  0137EC  22F4               	addwfc	16372,f,c
 21559  0137EE  0E8A               	movlw	low arp_send@arp
 21560  0137F0  24F3               	addwf	16371,w,c
 21561  0137F2  6ED9               	movwf	16345,c
 21562  0137F4  0E00               	movlw	high arp_send@arp
 21563  0137F6  20F4               	addwfc	16372,w,c
 21564  0137F8  6EDA               	movwf	16346,c
 21565  0137FA  50DF               	movf	16351,w,c
 21566  0137FC  EC75  F0B3         	call	_ethernetController_streamToTransmitBuffer
 21567  013800  0100               	movlb	0	; () banked
 21568  013802  2BB3               	incf	arp_send@i_3242& (0+255),f,b
 21569  013804                     l995:
 21570                           
 21571                           ; BSR set to: 0
 21572                           
 21573                           ; BSR set to: 0
 21574  013804  518F               	movf	(arp_send@arp+5)& (0+255),w,b
 21575  013806  5DB3               	subwf	arp_send@i_3242& (0+255),w,b
 21576  013808  A0D8               	btfss	16344,0,c
 21577  01380A  D7E1               	goto	l996
 21578                           
 21579                           ; BSR set to: 0
 21580                           ;arp.c: 186: ethernetController_sendPacket(ethFrame.memory);
 21581                           
 21582                           ; BSR set to: 0
 21583  01380C  EE20  F0C4         	lfsr	2,arp_send@ethFrame+16
 21584  013810  EE00  F028         	lfsr	0,ethernetController_sendPacket@field
 21585  013814  0E08               	movlw	8
 21586  013816                     u12641:
 21587  013816  006F FF6F FFEB     	movff	16347,16363
 21588  01381C  06E8               	decf	16360,f,c
 21589  01381E  E2FB               	bc	u12641
 21590  013820  ECAB  F0B9         	call	_ethernetController_sendPacket	;wreg free
 21591  013824  0012               	return		;funcret
 21592  013826                     __end_of_arp_send:
 21593                           	opt stack 0
 21594                           
 21595 ;; *************** function _mac_setToBroadcast *****************
 21596 ;; Defined at:
 21597 ;;		line 26 in file "src/eth/mac.c"
 21598 ;; Parameters:    Size  Location     Type
 21599 ;;  mac             2   21[COMRAM] PTR struct macaddress
 21600 ;;		 -> arp_send@destination(6), 
 21601 ;; Auto vars:     Size  Location     Type
 21602 ;;  i               1   23[COMRAM] unsigned char 
 21603 ;; Return value:  Size  Location     Type
 21604 ;;                  1    wreg      void 
 21605 ;; Registers used:
 21606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21607 ;; Tracked objects:
 21608 ;;		On entry : 0/0
 21609 ;;		On exit  : 0/0
 21610 ;;		Unchanged: 0/0
 21611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21615 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21616 ;;Total ram usage:        3 bytes
 21617 ;; Hardware stack levels used:    1
 21618 ;; Hardware stack levels required when called:    4
 21619 ;; This function calls:
 21620 ;;		Nothing
 21621 ;; This function is called by:
 21622 ;;		_arp_send
 21623 ;; This function uses a non-reentrant model
 21624 ;;
 21625                           
 21626                           	psect	text99
 21627  01753A                     __ptext99:
 21628                           	opt stack 0
 21629  01753A                     _mac_setToBroadcast:
 21630                           	opt stack 22
 21631                           
 21632                           ;mac.c: 27: for (uint8_t i = 0; i < 6; i++)
 21633                           
 21634                           ;incstack = 0
 21635  01753A  0E00               	movlw	0
 21636  01753C  6E18               	movwf	mac_setToBroadcast@i,c
 21637  01753E                     l10304:
 21638  01753E  0E05               	movlw	5
 21639  017540  6418               	cpfsgt	mac_setToBroadcast@i,c
 21640  017542  D001               	goto	l382
 21641  017544  0012               	return	
 21642  017546                     l382:
 21643                           
 21644                           ;mac.c: 28: mac->address[i] = 0xff;
 21645  017546  5018               	movf	mac_setToBroadcast@i,w,c
 21646  017548  0D01               	mullw	1
 21647  01754A  50F3               	movf	16371,w,c
 21648  01754C  2416               	addwf	mac_setToBroadcast@mac,w,c
 21649  01754E  6ED9               	movwf	16345,c
 21650  017550  50F4               	movf	16372,w,c
 21651  017552  2017               	addwfc	mac_setToBroadcast@mac+1,w,c
 21652  017554  6EDA               	movwf	16346,c
 21653  017556  0EFF               	movlw	255
 21654  017558  6EDF               	movwf	16351,c
 21655  01755A  2A18               	incf	mac_setToBroadcast@i,f,c
 21656  01755C  D7F0               	goto	l10304
 21657  01755E                     __end_of_mac_setToBroadcast:
 21658                           	opt stack 0
 21659                           
 21660 ;; *************** function _ethernet_txFrameRequest *****************
 21661 ;; Defined at:
 21662 ;;		line 30 in file "src/eth/ethernet.c"
 21663 ;; Parameters:    Size  Location     Type
 21664 ;;  frame           2   51[COMRAM] PTR struct ethernetFrame
 21665 ;;		 -> udp_sendPacket@ipPacket(66), tcp_sendSYNACK@ipPacket(66), icmp_sendEchoRequest@ipRequest(66), icmp_sendEchoReply
      +@ipReply(66), 
 21666 ;;		 -> arp_send@ethFrame(34), 
 21667 ;; Auto vars:     Size  Location     Type
 21668 ;;  err             3   39[BANK0 ] struct error
 21669 ;; Return value:  Size  Location     Type
 21670 ;;                  3   51[COMRAM] struct error
 21671 ;; Registers used:
 21672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21673 ;; Tracked objects:
 21674 ;;		On entry : 0/0
 21675 ;;		On exit  : 0/0
 21676 ;;		Unchanged: 0/0
 21677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21679 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21681 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21682 ;;Total ram usage:        5 bytes
 21683 ;; Hardware stack levels used:    1
 21684 ;; Hardware stack levels required when called:    8
 21685 ;; This function calls:
 21686 ;;		_ethernetController_writeDestinationMACAddress
 21687 ;;		_ethernetController_writeEtherTypeFieldToBuffer
 21688 ;;		_memory_txFrameRequest
 21689 ;; This function is called by:
 21690 ;;		_arp_send
 21691 ;;		_ipv4_txFrameRequest
 21692 ;; This function uses a non-reentrant model
 21693 ;;
 21694                           
 21695                           	psect	text100
 21696  015790                     __ptext100:
 21697                           	opt stack 0
 21698  015790                     _ethernet_txFrameRequest:
 21699                           	opt stack 20
 21700                           
 21701                           ;ethernet.c: 32: error_t err;
 21702                           ;ethernet.c: 33: err.module = ERROR_MODULE_ETHERNET;
 21703                           
 21704                           ;incstack = 0
 21705  015790  0E02               	movlw	2
 21706  015792  0100               	movlb	0	; () banked
 21707  015794  6F87               	movwf	ethernet_txFrameRequest@err& (0+255),b
 21708                           
 21709                           ;ethernet.c: 34: err.code = (uint16_t)0;
 21710  015796  0E00               	movlw	0
 21711  015798  6F89               	movwf	(ethernet_txFrameRequest@err+2)& (0+255),b
 21712  01579A  0E00               	movlw	0
 21713  01579C  6F88               	movwf	(ethernet_txFrameRequest@err+1)& (0+255),b
 21714                           
 21715                           ; BSR set to: 0
 21716                           ;ethernet.c: 35: frame->memory = memory_txFrameRequest(frame->length);
 21717  01579E  0060  F0D3  FFD9   	movff	ethernet_txFrameRequest@frame,16345
 21718  0157A4  0060  F0D7  FFDA   	movff	ethernet_txFrameRequest@frame+1,16346
 21719  0157AA  006F FF78  F02A    	movff	16350,memory_txFrameRequest@length
 21720  0157B0  006F FF74  F02B    	movff	16349,memory_txFrameRequest@length+1
 21721  0157B6  ECA4  F085         	call	_memory_txFrameRequest	;wreg free
 21722  0157BA  EE20 F010          	lfsr	2,16
 21723  0157BE  5034               	movf	ethernet_txFrameRequest@frame,w,c
 21724  0157C0  26D9               	addwf	16345,f,c
 21725  0157C2  5035               	movf	ethernet_txFrameRequest@frame+1,w,c
 21726  0157C4  22DA               	addwfc	16346,f,c
 21727  0157C6  0E08               	movlw	8
 21728  0157C8                     u11591:
 21729  0157C8  006F FFAF FFDB     	movff	16363,16347
 21730  0157CE  06E8               	decf	16360,f,c
 21731  0157D0  E2FB               	bc	u11591
 21732                           
 21733                           ;ethernet.c: 37: if (frame->memory.fOutOfMemory) {
 21734  0157D2  EE20 F017          	lfsr	2,23
 21735  0157D6  5034               	movf	ethernet_txFrameRequest@frame,w,c
 21736  0157D8  26D9               	addwf	16345,f,c
 21737  0157DA  5035               	movf	ethernet_txFrameRequest@frame+1,w,c
 21738  0157DC  22DA               	addwfc	16346,f,c
 21739  0157DE  50DF               	movf	16351,w,c
 21740  0157E0  B4D8               	btfsc	16344,2,c
 21741  0157E2  D008               	goto	l362
 21742                           
 21743                           ;ethernet.c: 39: err.module = ERROR_MODULE_MEMORY;
 21744  0157E4  0E00               	movlw	0
 21745  0157E6  0100               	movlb	0	; () banked
 21746  0157E8  6F87               	movwf	ethernet_txFrameRequest@err& (0+255),b
 21747                           
 21748                           ;ethernet.c: 40: err.code = ERROR_MEMORY_OUT_OF_MEMORY;
 21749  0157EA  0E00               	movlw	0
 21750  0157EC  6F89               	movwf	(ethernet_txFrameRequest@err+2)& (0+255),b
 21751  0157EE  0E65               	movlw	101
 21752  0157F0  6F88               	movwf	(ethernet_txFrameRequest@err+1)& (0+255),b
 21753                           
 21754                           ; BSR set to: 0
 21755                           ;ethernet.c: 41: return err;
 21756                           ;	Return value of _ethernet_txFrameRequest is never used
 21757  0157F2  0012               	return	
 21758  0157F4                     l362:
 21759                           
 21760                           ;ethernet.c: 42: }
 21761                           ;ethernet.c: 43: if (!frame->memory.fIsAssigned) {
 21762                           
 21763                           ; BSR set to: 0
 21764  0157F4  EE20 F016          	lfsr	2,22
 21765  0157F8  5034               	movf	ethernet_txFrameRequest@frame,w,c
 21766  0157FA  26D9               	addwf	16345,f,c
 21767  0157FC  5035               	movf	ethernet_txFrameRequest@frame+1,w,c
 21768  0157FE  22DA               	addwfc	16346,f,c
 21769  015800  50DF               	movf	16351,w,c
 21770  015802  A4D8               	btfss	16344,2,c
 21771  015804  D008               	goto	l364
 21772                           
 21773                           ;ethernet.c: 45: err.module = ERROR_MODULE_MEMORY;
 21774  015806  0E00               	movlw	0
 21775  015808  0100               	movlb	0	; () banked
 21776  01580A  6F87               	movwf	ethernet_txFrameRequest@err& (0+255),b
 21777                           
 21778                           ;ethernet.c: 46: err.code = ERROR_MEMORY_UNKNOWN;
 21779  01580C  0E00               	movlw	0
 21780  01580E  6F89               	movwf	(ethernet_txFrameRequest@err+2)& (0+255),b
 21781  015810  0EC7               	movlw	199
 21782  015812  6F88               	movwf	(ethernet_txFrameRequest@err+1)& (0+255),b
 21783                           
 21784                           ; BSR set to: 0
 21785                           ;ethernet.c: 47: return err;
 21786                           ;	Return value of _ethernet_txFrameRequest is never used
 21787  015814  0012               	return	
 21788  015816                     l364:
 21789                           
 21790                           ;ethernet.c: 48: }
 21791                           ;ethernet.c: 50: ethernetController_writeDestinationMACAddress(frame->destination, frame
      +                          ->memory);
 21792                           
 21793                           ; BSR set to: 0
 21794  015816  EE20 F008          	lfsr	2,8
 21795  01581A  5034               	movf	ethernet_txFrameRequest@frame,w,c
 21796  01581C  26D9               	addwf	16345,f,c
 21797  01581E  5035               	movf	ethernet_txFrameRequest@frame+1,w,c
 21798  015820  22DA               	addwfc	16346,f,c
 21799  015822  EE00  F025         	lfsr	0,ethernetController_writeDestinationMACAddress@addr
 21800  015826  0E05               	movlw	5
 21801  015828                     u11621:
 21802  015828  006F FF6F FFEB     	movff	16347,16363
 21803  01582E  06E8               	decf	16360,f,c
 21804  015830  E2FB               	bc	u11621
 21805  015832  EE20 F010          	lfsr	2,16
 21806  015836  5034               	movf	ethernet_txFrameRequest@frame,w,c
 21807  015838  26D9               	addwf	16345,f,c
 21808  01583A  5035               	movf	ethernet_txFrameRequest@frame+1,w,c
 21809  01583C  22DA               	addwfc	16346,f,c
 21810  01583E  EE00  F02B         	lfsr	0,ethernetController_writeDestinationMACAddress@field
 21811  015842  0E08               	movlw	8
 21812  015844                     u11631:
 21813  015844  006F FF6F FFEB     	movff	16347,16363
 21814  01584A  06E8               	decf	16360,f,c
 21815  01584C  E2FB               	bc	u11631
 21816  01584E  EC2B  F0B2         	call	_ethernetController_writeDestinationMACAddress	;wreg free
 21817                           
 21818                           ;ethernet.c: 51: ethernetController_writeEtherTypeFieldToBuffer(frame->ethertype, frame-
      +                          >memory);
 21819  015852  EE20 F00E          	lfsr	2,14
 21820  015856  5034               	movf	ethernet_txFrameRequest@frame,w,c
 21821  015858  26D9               	addwf	16345,f,c
 21822  01585A  5035               	movf	ethernet_txFrameRequest@frame+1,w,c
 21823  01585C  22DA               	addwfc	16346,f,c
 21824  01585E  006F FF78  F025    	movff	16350,ethernetController_writeEtherTypeFieldToBuffer@ethtype
 21825  015864  006F FF74  F026    	movff	16349,ethernetController_writeEtherTypeFieldToBuffer@ethtype+1
 21826  01586A  EE20 F010          	lfsr	2,16
 21827  01586E  5034               	movf	ethernet_txFrameRequest@frame,w,c
 21828  015870  26D9               	addwf	16345,f,c
 21829  015872  5035               	movf	ethernet_txFrameRequest@frame+1,w,c
 21830  015874  22DA               	addwfc	16346,f,c
 21831  015876  EE00  F027         	lfsr	0,ethernetController_writeEtherTypeFieldToBuffer@field
 21832  01587A  0E08               	movlw	8
 21833  01587C                     u11641:
 21834  01587C  006F FF6F FFEB     	movff	16347,16363
 21835  015882  06E8               	decf	16360,f,c
 21836  015884  E2FB               	bc	u11641
 21837  015886  EC76  F0B7         	call	_ethernetController_writeEtherTypeFieldToBuffer	;wreg free
 21838  01588A  0012               	return	
 21839  01588C                     __end_of_ethernet_txFrameRequest:
 21840                           	opt stack 0
 21841                           
 21842 ;; *************** function _memory_txFrameRequest *****************
 21843 ;; Defined at:
 21844 ;;		line 134 in file "src/mem/memoryController.c"
 21845 ;; Parameters:    Size  Location     Type
 21846 ;;  length          2   41[COMRAM] unsigned int 
 21847 ;; Auto vars:     Size  Location     Type
 21848 ;;  i               1   27[BANK0 ] unsigned char 
 21849 ;;  i               1   28[BANK0 ] unsigned char 
 21850 ;;  fNoOverlapMa    1   26[BANK0 ] unsigned char 
 21851 ;;  field           9   29[BANK0 ] struct memoryField
 21852 ;;  freeIndex       1   38[BANK0 ] unsigned char 
 21853 ;; Return value:  Size  Location     Type
 21854 ;;                  9   41[COMRAM] struct memoryField
 21855 ;; Registers used:
 21856 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21857 ;; Tracked objects:
 21858 ;;		On entry : 0/0
 21859 ;;		On exit  : 0/0
 21860 ;;		Unchanged: 0/0
 21861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21862 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21863 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21864 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21865 ;;      Totals:         9      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21866 ;;Total ram usage:       30 bytes
 21867 ;; Hardware stack levels used:    1
 21868 ;; Hardware stack levels required when called:    6
 21869 ;; This function calls:
 21870 ;;		___wmul
 21871 ;;		_checkForOverlap
 21872 ;;		_entireMemoryEmpty
 21873 ;;		_entireMemoryFull
 21874 ;; This function is called by:
 21875 ;;		_ethernet_txFrameRequest
 21876 ;; This function uses a non-reentrant model
 21877 ;;
 21878                           
 21879                           	psect	text101
 21880  010B48                     __ptext101:
 21881                           	opt stack 0
 21882  010B48                     _memory_txFrameRequest:
 21883                           	opt stack 21
 21884                           
 21885                           ;memoryController.c: 135: memoryField_t field;
 21886                           ;memoryController.c: 136: uint8_t freeIndex = 0;
 21887                           
 21888                           ;incstack = 0
 21889  010B48  0E00               	movlw	0
 21890  010B4A  0100               	movlb	0	; () banked
 21891  010B4C  6F86               	movwf	memory_txFrameRequest@freeIndex& (0+255),b
 21892                           
 21893                           ; BSR set to: 0
 21894                           ;memoryController.c: 138: if (length == 0) {
 21895  010B4E  502A               	movf	memory_txFrameRequest@length,w,c
 21896  010B50  102B               	iorwf	memory_txFrameRequest@length+1,w,c
 21897  010B52  A4D8               	btfss	16344,2,c
 21898  010B54  D00D               	goto	l454
 21899                           
 21900                           ; BSR set to: 0
 21901                           ;memoryController.c: 139: field.fOutOfMemory = 1;
 21902  010B56  0E01               	movlw	1
 21903  010B58  6F84               	movwf	(memory_txFrameRequest@field+7)& (0+255),b
 21904                           
 21905                           ; BSR set to: 0
 21906                           ;memoryController.c: 140: return field;
 21907  010B5A  EE20  F07D         	lfsr	2,memory_txFrameRequest@field
 21908  010B5E  EE00  F02A         	lfsr	0,?_memory_txFrameRequest
 21909  010B62  0E08               	movlw	8
 21910  010B64                     u11201:
 21911  010B64  006F FF6F FFEB     	movff	16347,16363
 21912  010B6A  06E8               	decf	16360,f,c
 21913  010B6C  E2FB               	bc	u11201
 21914                           
 21915                           ; BSR set to: 0
 21916  010B6E  0012               	return	
 21917  010B70                     l454:
 21918                           
 21919                           ; BSR set to: 0
 21920                           ;memoryController.c: 141: }
 21921                           ;memoryController.c: 143: if (entireMemoryFull()) {
 21922                           
 21923                           ; BSR set to: 0
 21924  010B70  EC15  F0B9         	call	_entireMemoryFull	;wreg free
 21925  010B74  0900               	iorlw	0
 21926  010B76  B4D8               	btfsc	16344,2,c
 21927  010B78  D00E               	goto	l456
 21928                           
 21929                           ;memoryController.c: 144: field.fOutOfMemory = 1;
 21930  010B7A  0E01               	movlw	1
 21931  010B7C  0100               	movlb	0	; () banked
 21932  010B7E  6F84               	movwf	(memory_txFrameRequest@field+7)& (0+255),b
 21933                           
 21934                           ; BSR set to: 0
 21935                           ;memoryController.c: 145: return field;
 21936  010B80  EE20  F07D         	lfsr	2,memory_txFrameRequest@field
 21937  010B84  EE00  F02A         	lfsr	0,?_memory_txFrameRequest
 21938  010B88  0E08               	movlw	8
 21939  010B8A                     u11221:
 21940  010B8A  006F FF6F FFEB     	movff	16347,16363
 21941  010B90  06E8               	decf	16360,f,c
 21942  010B92  E2FB               	bc	u11221
 21943                           
 21944                           ; BSR set to: 0
 21945  010B94  0012               	return	
 21946  010B96                     l456:
 21947                           
 21948                           ;memoryController.c: 146: }
 21949                           ;memoryController.c: 147: if (entireMemoryEmpty()) {
 21950                           
 21951                           ; BSR set to: 0
 21952  010B96  EC30  F0B9         	call	_entireMemoryEmpty	;wreg free
 21953  010B9A  0900               	iorlw	0
 21954  010B9C  B4D8               	btfsc	16344,2,c
 21955  010B9E  D266               	goto	l481
 21956                           
 21957                           ;memoryController.c: 149: if ((0x0000 + length) > 0x3000 - 1) {
 21958  010BA0  0E30               	movlw	48
 21959  010BA2  5C2B               	subwf	memory_txFrameRequest@length+1,w,c
 21960  010BA4  A0D8               	btfss	16344,0,c
 21961  010BA6  D00E               	goto	l458
 21962                           
 21963                           ;memoryController.c: 150: field.fOutOfMemory = 1;
 21964  010BA8  0E01               	movlw	1
 21965  010BAA  0100               	movlb	0	; () banked
 21966  010BAC  6F84               	movwf	(memory_txFrameRequest@field+7)& (0+255),b
 21967                           
 21968                           ; BSR set to: 0
 21969                           ;memoryController.c: 151: return field;
 21970  010BAE  EE20  F07D         	lfsr	2,memory_txFrameRequest@field
 21971  010BB2  EE00  F02A         	lfsr	0,?_memory_txFrameRequest
 21972  010BB6  0E08               	movlw	8
 21973  010BB8                     u11251:
 21974  010BB8  006F FF6F FFEB     	movff	16347,16363
 21975  010BBE  06E8               	decf	16360,f,c
 21976  010BC0  E2FB               	bc	u11251
 21977                           
 21978                           ; BSR set to: 0
 21979  010BC2  0012               	return	
 21980  010BC4                     l458:
 21981                           
 21982                           ;memoryController.c: 153: occupiedMemory[0].start = 0x0000;
 21983                           
 21984                           ; BSR set to: 0
 21985  010BC4  0E00               	movlw	0
 21986  010BC6  0103               	movlb	3	; () banked
 21987  010BC8  6F01               	movwf	(_occupiedMemory+1)& (0+255),b
 21988  010BCA  0E00               	movlw	0
 21989  010BCC  6F00               	movwf	_occupiedMemory& (0+255),b
 21990                           
 21991                           ; BSR set to: 3
 21992                           ;memoryController.c: 154: occupiedMemory[0].end = 0x0000 + length;
 21993  010BCE  0060  F0A8  F302   	movff	memory_txFrameRequest@length,_occupiedMemory+2
 21994  010BD4  0060  F0AC  F303   	movff	memory_txFrameRequest@length+1,_occupiedMemory+3
 21995                           
 21996                           ; BSR set to: 3
 21997                           ;memoryController.c: 155: occupiedMemory[0].length = length;
 21998  010BDA  0060  F0A8  F304   	movff	memory_txFrameRequest@length,_occupiedMemory+4
 21999  010BE0  0060  F0AC  F305   	movff	memory_txFrameRequest@length+1,_occupiedMemory+5
 22000                           
 22001                           ;memoryController.c: 156: occupiedMemory[0].fIsAssigned = 1;
 22002  010BE6  0E01               	movlw	1
 22003  010BE8  6F06               	movwf	(_occupiedMemory+6)& (0+255),b
 22004                           
 22005                           ;memoryController.c: 157: occupiedMemory[0].index = 0;
 22006  010BEA  0E00               	movlw	0
 22007  010BEC  6F08               	movwf	(_occupiedMemory+8)& (0+255),b
 22008                           
 22009                           ; BSR set to: 3
 22010                           ;memoryController.c: 158: return occupiedMemory[0];
 22011  010BEE  EE20  F300         	lfsr	2,_occupiedMemory
 22012  010BF2  EE00  F02A         	lfsr	0,?_memory_txFrameRequest
 22013  010BF6  0E08               	movlw	8
 22014  010BF8                     u11261:
 22015  010BF8  006F FF6F FFEB     	movff	16347,16363
 22016  010BFE  06E8               	decf	16360,f,c
 22017  010C00  E2FB               	bc	u11261
 22018                           
 22019                           ; BSR set to: 3
 22020  010C02  0012               	return	
 22021  010C04                     
 22022                           ;memoryController.c: 164: if (!occupiedMemory[freeIndex].fIsAssigned) {
 22023                           
 22024                           ; BSR set to: 3
 22025  010C04  0100               	movlb	0	; () banked
 22026  010C06  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22027  010C08  0D09               	mullw	9
 22028  010C0A  0E06               	movlw	6
 22029  010C0C  26F3               	addwf	16371,f,c
 22030  010C0E  0E00               	movlw	0
 22031  010C10  22F4               	addwfc	16372,f,c
 22032  010C12  0E00               	movlw	low _occupiedMemory
 22033  010C14  24F3               	addwf	16371,w,c
 22034  010C16  6ED9               	movwf	16345,c
 22035  010C18  0E03               	movlw	high _occupiedMemory
 22036  010C1A  20F4               	addwfc	16372,w,c
 22037  010C1C  6EDA               	movwf	16346,c
 22038  010C1E  50DF               	movf	16351,w,c
 22039  010C20  A4D8               	btfss	16344,2,c
 22040  010C22  D212               	goto	l480
 22041                           
 22042                           ; BSR set to: 0
 22043                           ;memoryController.c: 168: occupiedMemory[freeIndex].start = (unsigned)occupiedMemory[(fr
      +                          eeIndex == 0) ? 8 - 1 : freeIndex - 1].end + 1;
 22044  010C24  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22045  010C26  B4D8               	btfsc	16344,2,c
 22046  010C28  D007               	goto	l464
 22047                           
 22048                           ; BSR set to: 0
 22049  010C2A  0EFF               	movlw	255
 22050  010C2C  2586               	addwf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22051  010C2E  6F78               	movwf	_memory_txFrameRequest$1083& (0+255),b
 22052  010C30  6B79               	clrf	(_memory_txFrameRequest$1083+1)& (0+255),b
 22053  010C32  0EFF               	movlw	255
 22054  010C34  2379               	addwfc	(_memory_txFrameRequest$1083+1)& (0+255),f,b
 22055  010C36  D004               	goto	l466
 22056  010C38                     l464:
 22057                           
 22058                           ; BSR set to: 0
 22059                           
 22060                           ; BSR set to: 0
 22061  010C38  0E00               	movlw	0
 22062  010C3A  6F79               	movwf	(_memory_txFrameRequest$1083+1)& (0+255),b
 22063  010C3C  0E07               	movlw	7
 22064  010C3E  6F78               	movwf	_memory_txFrameRequest$1083& (0+255),b
 22065  010C40                     l466:
 22066                           
 22067                           ; BSR set to: 0
 22068                           
 22069                           ; BSR set to: 0
 22070  010C40  0060  F1E0  F024   	movff	_memory_txFrameRequest$1083,___wmul@multiplier
 22071  010C46  0060  F1E4  F025   	movff	_memory_txFrameRequest$1083+1,___wmul@multiplier+1
 22072  010C4C  0E00               	movlw	0
 22073  010C4E  6E27               	movwf	___wmul@multiplicand+1,c
 22074  010C50  0E09               	movlw	9
 22075  010C52  6E26               	movwf	___wmul@multiplicand,c
 22076  010C54  EC94  F0B9         	call	___wmul	;wreg free
 22077  010C58  0E02               	movlw	2
 22078  010C5A  2624               	addwf	?___wmul,f,c
 22079  010C5C  0E00               	movlw	0
 22080  010C5E  2225               	addwfc	?___wmul+1,f,c
 22081  010C60  0E00               	movlw	low _occupiedMemory
 22082  010C62  2424               	addwf	?___wmul,w,c
 22083  010C64  6ED9               	movwf	16345,c
 22084  010C66  0E03               	movlw	high _occupiedMemory
 22085  010C68  2025               	addwfc	?___wmul+1,w,c
 22086  010C6A  6EDA               	movwf	16346,c
 22087  010C6C  006F FF78  F072    	movff	16350,??_memory_txFrameRequest
 22088  010C72  006F FF74  F073    	movff	16349,??_memory_txFrameRequest+1
 22089  010C78  0E01               	movlw	1
 22090  010C7A  0100               	movlb	0	; () banked
 22091  010C7C  2772               	addwf	??_memory_txFrameRequest& (0+255),f,b
 22092  010C7E  0E00               	movlw	0
 22093  010C80  2373               	addwfc	(??_memory_txFrameRequest+1)& (0+255),f,b
 22094  010C82  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22095  010C84  0D09               	mullw	9
 22096  010C86  0E00               	movlw	low _occupiedMemory
 22097  010C88  24F3               	addwf	16371,w,c
 22098  010C8A  6ED9               	movwf	16345,c
 22099  010C8C  0E03               	movlw	high _occupiedMemory
 22100  010C8E  20F4               	addwfc	16372,w,c
 22101  010C90  6EDA               	movwf	16346,c
 22102  010C92  0060  F1CB  FFDE   	movff	??_memory_txFrameRequest,16350
 22103  010C98  0060  F1CF  FFDD   	movff	??_memory_txFrameRequest+1,16349
 22104                           
 22105                           ; BSR set to: 0
 22106                           ;memoryController.c: 169: if (occupiedMemory[freeIndex].start + length > 0x3000) {
 22107  010C9E  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22108  010CA0  0D09               	mullw	9
 22109  010CA2  0E00               	movlw	low _occupiedMemory
 22110  010CA4  24F3               	addwf	16371,w,c
 22111  010CA6  6ED9               	movwf	16345,c
 22112  010CA8  0E03               	movlw	high _occupiedMemory
 22113  010CAA  20F4               	addwfc	16372,w,c
 22114  010CAC  6EDA               	movwf	16346,c
 22115  010CAE  006F FF78  F072    	movff	16350,??_memory_txFrameRequest
 22116  010CB4  006F FF74  F073    	movff	16349,??_memory_txFrameRequest+1
 22117  010CBA  502A               	movf	memory_txFrameRequest@length,w,c
 22118  010CBC  2772               	addwf	??_memory_txFrameRequest& (0+255),f,b
 22119  010CBE  502B               	movf	memory_txFrameRequest@length+1,w,c
 22120  010CC0  2373               	addwfc	(??_memory_txFrameRequest+1)& (0+255),f,b
 22121  010CC2  0572               	decf	??_memory_txFrameRequest& (0+255),w,b
 22122  010CC4  0E30               	movlw	48
 22123  010CC6  5973               	subwfb	(??_memory_txFrameRequest+1)& (0+255),w,b
 22124  010CC8  A0D8               	btfss	16344,0,c
 22125  010CCA  D0DE               	goto	l468
 22126                           
 22127                           ; BSR set to: 0
 22128                           ;memoryController.c: 170: if (freeIndex == 8 - 1 && !occupiedMemory[0].fIsAssigned) {
 22129  010CCC  0E07               	movlw	7
 22130  010CCE  1986               	xorwf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22131  010CD0  A4D8               	btfss	16344,2,c
 22132  010CD2  D0DA               	goto	l468
 22133                           
 22134                           ; BSR set to: 0
 22135  010CD4  0103               	movlb	3	; () banked
 22136  010CD6  5106               	movf	(_occupiedMemory+6)& (0+255),w,b
 22137  010CD8  A4D8               	btfss	16344,2,c
 22138  010CDA  D0D6               	goto	l468
 22139                           
 22140                           ; BSR set to: 3
 22141                           ;memoryController.c: 171: occupiedMemory[freeIndex].length = length;
 22142  010CDC  0100               	movlb	0	; () banked
 22143  010CDE  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22144  010CE0  0D09               	mullw	9
 22145  010CE2  0E04               	movlw	4
 22146  010CE4  26F3               	addwf	16371,f,c
 22147  010CE6  0E00               	movlw	0
 22148  010CE8  22F4               	addwfc	16372,f,c
 22149  010CEA  0E00               	movlw	low _occupiedMemory
 22150  010CEC  24F3               	addwf	16371,w,c
 22151  010CEE  6ED9               	movwf	16345,c
 22152  010CF0  0E03               	movlw	high _occupiedMemory
 22153  010CF2  20F4               	addwfc	16372,w,c
 22154  010CF4  6EDA               	movwf	16346,c
 22155  010CF6  0060  F0AB  FFDE   	movff	memory_txFrameRequest@length,16350
 22156  010CFC  0060  F0AF  FFDD   	movff	memory_txFrameRequest@length+1,16349
 22157                           
 22158                           ;memoryController.c: 172: occupiedMemory[freeIndex].end = occupiedMemory[freeIndex].leng
      +                          th - ((0x3000 - 1) - occupiedMemory[freeIndex].start);
 22159  010D02  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22160  010D04  0D09               	mullw	9
 22161  010D06  0E04               	movlw	4
 22162  010D08  26F3               	addwf	16371,f,c
 22163  010D0A  0E00               	movlw	0
 22164  010D0C  22F4               	addwfc	16372,f,c
 22165  010D0E  0E00               	movlw	low _occupiedMemory
 22166  010D10  24F3               	addwf	16371,w,c
 22167  010D12  6ED9               	movwf	16345,c
 22168  010D14  0E03               	movlw	high _occupiedMemory
 22169  010D16  20F4               	addwfc	16372,w,c
 22170  010D18  6EDA               	movwf	16346,c
 22171  010D1A  006F FF78  F072    	movff	16350,??_memory_txFrameRequest
 22172  010D20  006F FF74  F073    	movff	16349,??_memory_txFrameRequest+1
 22173  010D26  0EFF               	movlw	255
 22174  010D28  6F74               	movwf	(??_memory_txFrameRequest+2)& (0+255),b
 22175  010D2A  0E2F               	movlw	47
 22176  010D2C  6F75               	movwf	(??_memory_txFrameRequest+3)& (0+255),b
 22177  010D2E  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22178  010D30  0D09               	mullw	9
 22179  010D32  0E00               	movlw	low _occupiedMemory
 22180  010D34  24F3               	addwf	16371,w,c
 22181  010D36  6ED9               	movwf	16345,c
 22182  010D38  0E03               	movlw	high _occupiedMemory
 22183  010D3A  20F4               	addwfc	16372,w,c
 22184  010D3C  6EDA               	movwf	16346,c
 22185  010D3E  006F FF78  F076    	movff	16350,??_memory_txFrameRequest+4
 22186  010D44  006F FF74  F077    	movff	16349,??_memory_txFrameRequest+5
 22187  010D4A  1F76               	comf	(??_memory_txFrameRequest+4)& (0+255),f,b
 22188  010D4C  1F77               	comf	(??_memory_txFrameRequest+5)& (0+255),f,b
 22189  010D4E  4B76               	infsnz	(??_memory_txFrameRequest+4)& (0+255),f,b
 22190  010D50  2B77               	incf	(??_memory_txFrameRequest+5)& (0+255),f,b
 22191  010D52  5174               	movf	(??_memory_txFrameRequest+2)& (0+255),w,b
 22192  010D54  2776               	addwf	(??_memory_txFrameRequest+4)& (0+255),f,b
 22193  010D56  5175               	movf	(??_memory_txFrameRequest+3)& (0+255),w,b
 22194  010D58  2377               	addwfc	(??_memory_txFrameRequest+5)& (0+255),f,b
 22195  010D5A  1F76               	comf	(??_memory_txFrameRequest+4)& (0+255),f,b
 22196  010D5C  1F77               	comf	(??_memory_txFrameRequest+5)& (0+255),f,b
 22197  010D5E  4B76               	infsnz	(??_memory_txFrameRequest+4)& (0+255),f,b
 22198  010D60  2B77               	incf	(??_memory_txFrameRequest+5)& (0+255),f,b
 22199  010D62  5172               	movf	??_memory_txFrameRequest& (0+255),w,b
 22200  010D64  2776               	addwf	(??_memory_txFrameRequest+4)& (0+255),f,b
 22201  010D66  5173               	movf	(??_memory_txFrameRequest+1)& (0+255),w,b
 22202  010D68  2377               	addwfc	(??_memory_txFrameRequest+5)& (0+255),f,b
 22203  010D6A  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22204  010D6C  0D09               	mullw	9
 22205  010D6E  0E02               	movlw	2
 22206  010D70  26F3               	addwf	16371,f,c
 22207  010D72  0E00               	movlw	0
 22208  010D74  22F4               	addwfc	16372,f,c
 22209  010D76  0E00               	movlw	low _occupiedMemory
 22210  010D78  24F3               	addwf	16371,w,c
 22211  010D7A  6ED9               	movwf	16345,c
 22212  010D7C  0E03               	movlw	high _occupiedMemory
 22213  010D7E  20F4               	addwfc	16372,w,c
 22214  010D80  6EDA               	movwf	16346,c
 22215  010D82  0060  F1DB  FFDE   	movff	??_memory_txFrameRequest+4,16350
 22216  010D88  0060  F1DF  FFDD   	movff	??_memory_txFrameRequest+5,16349
 22217                           
 22218                           ; BSR set to: 0
 22219                           ;memoryController.c: 173: for (uint8_t i = 0; i < 8; i++) {
 22220  010D8E  0E00               	movlw	0
 22221  010D90  6F7B               	movwf	memory_txFrameRequest@i& (0+255),b
 22222  010D92                     l9818:
 22223                           
 22224                           ; BSR set to: 0
 22225  010D92  0E07               	movlw	7
 22226  010D94  657B               	cpfsgt	memory_txFrameRequest@i& (0+255),b
 22227  010D96  D001               	goto	l469
 22228  010D98  D049               	goto	u11390
 22229  010D9A                     l469:
 22230                           
 22231                           ; BSR set to: 0
 22232                           ;memoryController.c: 174: if (i == freeIndex)
 22233                           
 22234                           ; BSR set to: 0
 22235  010D9A  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22236  010D9C  197B               	xorwf	memory_txFrameRequest@i& (0+255),w,b
 22237  010D9E  B4D8               	btfsc	16344,2,c
 22238  010DA0  D042               	goto	l473
 22239                           
 22240                           ; BSR set to: 0
 22241                           ;memoryController.c: 176: if (checkForOverlap(occupiedMemory[freeIndex], occupiedMemory[
      +                          i]) && occupiedMemory[i].fIsAssigned) {
 22242                           
 22243                           ; BSR set to: 0
 22244                           
 22245                           ; BSR set to: 0
 22246                           ;memoryController.c: 175: continue;
 22247  010DA2  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22248  010DA4  0D09               	mullw	9
 22249  010DA6  0E00               	movlw	low _occupiedMemory
 22250  010DA8  24F3               	addwf	16371,w,c
 22251  010DAA  6ED9               	movwf	16345,c
 22252  010DAC  0E03               	movlw	high _occupiedMemory
 22253  010DAE  20F4               	addwfc	16372,w,c
 22254  010DB0  6EDA               	movwf	16346,c
 22255  010DB2  EE00  F060         	lfsr	0,checkForOverlap@a
 22256  010DB6  0E08               	movlw	8
 22257  010DB8                     u11341:
 22258  010DB8  006F FF6F FFEB     	movff	16347,16363
 22259  010DBE  06E8               	decf	16360,f,c
 22260  010DC0  E2FB               	bc	u11341
 22261  010DC2  517B               	movf	memory_txFrameRequest@i& (0+255),w,b
 22262  010DC4  0D09               	mullw	9
 22263  010DC6  0E00               	movlw	low _occupiedMemory
 22264  010DC8  24F3               	addwf	16371,w,c
 22265  010DCA  6ED9               	movwf	16345,c
 22266  010DCC  0E03               	movlw	high _occupiedMemory
 22267  010DCE  20F4               	addwfc	16372,w,c
 22268  010DD0  6EDA               	movwf	16346,c
 22269  010DD2  EE00  F069         	lfsr	0,checkForOverlap@b
 22270  010DD6  0E08               	movlw	8
 22271  010DD8                     u11351:
 22272  010DD8  006F FF6F FFEB     	movff	16347,16363
 22273  010DDE  06E8               	decf	16360,f,c
 22274  010DE0  E2FB               	bc	u11351
 22275  010DE2  ECBA  F0AA         	call	_checkForOverlap	;wreg free
 22276  010DE6  0900               	iorlw	0
 22277  010DE8  B4D8               	btfsc	16344,2,c
 22278  010DEA  D01D               	goto	l473
 22279  010DEC  0100               	movlb	0	; () banked
 22280  010DEE  517B               	movf	memory_txFrameRequest@i& (0+255),w,b
 22281  010DF0  0D09               	mullw	9
 22282  010DF2  0E06               	movlw	6
 22283  010DF4  26F3               	addwf	16371,f,c
 22284  010DF6  0E00               	movlw	0
 22285  010DF8  22F4               	addwfc	16372,f,c
 22286  010DFA  0E00               	movlw	low _occupiedMemory
 22287  010DFC  24F3               	addwf	16371,w,c
 22288  010DFE  6ED9               	movwf	16345,c
 22289  010E00  0E03               	movlw	high _occupiedMemory
 22290  010E02  20F4               	addwfc	16372,w,c
 22291  010E04  6EDA               	movwf	16346,c
 22292  010E06  50DF               	movf	16351,w,c
 22293  010E08  B4D8               	btfsc	16344,2,c
 22294  010E0A  D00D               	goto	l473
 22295                           
 22296                           ; BSR set to: 0
 22297                           ;memoryController.c: 178: field.fOutOfMemory = 1;
 22298  010E0C  0E01               	movlw	1
 22299  010E0E  6F84               	movwf	(memory_txFrameRequest@field+7)& (0+255),b
 22300                           
 22301                           ; BSR set to: 0
 22302                           ;memoryController.c: 179: return field;
 22303  010E10  EE20  F07D         	lfsr	2,memory_txFrameRequest@field
 22304  010E14  EE00  F02A         	lfsr	0,?_memory_txFrameRequest
 22305  010E18  0E08               	movlw	8
 22306  010E1A                     u11381:
 22307  010E1A  006F FF6F FFEB     	movff	16347,16363
 22308  010E20  06E8               	decf	16360,f,c
 22309  010E22  E2FB               	bc	u11381
 22310                           
 22311                           ; BSR set to: 0
 22312  010E24  0012               	return	
 22313  010E26                     l473:
 22314                           
 22315                           ; BSR set to: 0
 22316                           
 22317                           ; BSR set to: 0
 22318  010E26  0100               	movlb	0	; () banked
 22319  010E28  2B7B               	incf	memory_txFrameRequest@i& (0+255),f,b
 22320  010E2A  D7B3               	goto	l9818
 22321  010E2C                     u11390:
 22322                           
 22323                           ; BSR set to: 0
 22324                           ;memoryController.c: 180: }
 22325                           ;memoryController.c: 181: }
 22326                           ;memoryController.c: 182: occupiedMemory[freeIndex].fIsAssigned = 1;
 22327                           
 22328                           ; BSR set to: 0
 22329  010E2C  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22330  010E2E  0D09               	mullw	9
 22331  010E30  0E06               	movlw	6
 22332  010E32  26F3               	addwf	16371,f,c
 22333  010E34  0E00               	movlw	0
 22334  010E36  22F4               	addwfc	16372,f,c
 22335  010E38  0E00               	movlw	low _occupiedMemory
 22336  010E3A  24F3               	addwf	16371,w,c
 22337  010E3C  6ED9               	movwf	16345,c
 22338  010E3E  0E03               	movlw	high _occupiedMemory
 22339  010E40  20F4               	addwfc	16372,w,c
 22340  010E42  6EDA               	movwf	16346,c
 22341  010E44  0E01               	movlw	1
 22342  010E46  6EDF               	movwf	16351,c
 22343                           
 22344                           ;memoryController.c: 183: occupiedMemory[freeIndex].index = freeIndex;
 22345  010E48  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22346  010E4A  0D09               	mullw	9
 22347  010E4C  0E08               	movlw	8
 22348  010E4E  26F3               	addwf	16371,f,c
 22349  010E50  0E00               	movlw	0
 22350  010E52  22F4               	addwfc	16372,f,c
 22351  010E54  0E00               	movlw	low _occupiedMemory
 22352  010E56  24F3               	addwf	16371,w,c
 22353  010E58  6ED9               	movwf	16345,c
 22354  010E5A  0E03               	movlw	high _occupiedMemory
 22355  010E5C  20F4               	addwfc	16372,w,c
 22356  010E5E  6EDA               	movwf	16346,c
 22357  010E60  0060  F21B  FFDF   	movff	memory_txFrameRequest@freeIndex,16351
 22358                           
 22359                           ; BSR set to: 0
 22360                           ;memoryController.c: 184: return occupiedMemory[freeIndex];
 22361  010E66  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22362  010E68  0D09               	mullw	9
 22363  010E6A  0E00               	movlw	low _occupiedMemory
 22364  010E6C  24F3               	addwf	16371,w,c
 22365  010E6E  6ED9               	movwf	16345,c
 22366  010E70  0E03               	movlw	high _occupiedMemory
 22367  010E72  20F4               	addwfc	16372,w,c
 22368  010E74  6EDA               	movwf	16346,c
 22369  010E76  EE00  F02A         	lfsr	0,?_memory_txFrameRequest
 22370  010E7A  0E08               	movlw	8
 22371  010E7C                     u11401:
 22372  010E7C  006F FF6F FFEB     	movff	16347,16363
 22373  010E82  06E8               	decf	16360,f,c
 22374  010E84  E2FB               	bc	u11401
 22375                           
 22376                           ; BSR set to: 0
 22377  010E86  0012               	return	
 22378  010E88                     l468:
 22379                           
 22380                           ;memoryController.c: 185: }
 22381                           ;memoryController.c: 186: }
 22382                           ;memoryController.c: 188: uint8_t fNoOverlapMarker = 1;
 22383                           
 22384                           ; BSR set to: 0
 22385                           
 22386                           ; BSR set to: 0
 22387  010E88  0E01               	movlw	1
 22388  010E8A  0100               	movlb	0	; () banked
 22389  010E8C  6F7A               	movwf	memory_txFrameRequest@fNoOverlapMarker& (0+255),b
 22390                           
 22391                           ; BSR set to: 0
 22392                           ;memoryController.c: 189: uint8_t i;
 22393                           ;memoryController.c: 190: occupiedMemory[freeIndex].end = occupiedMemory[freeIndex].star
      +                          t + length;
 22394  010E8E  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22395  010E90  0D09               	mullw	9
 22396  010E92  0E00               	movlw	low _occupiedMemory
 22397  010E94  24F3               	addwf	16371,w,c
 22398  010E96  6ED9               	movwf	16345,c
 22399  010E98  0E03               	movlw	high _occupiedMemory
 22400  010E9A  20F4               	addwfc	16372,w,c
 22401  010E9C  6EDA               	movwf	16346,c
 22402  010E9E  006F FF78  F072    	movff	16350,??_memory_txFrameRequest
 22403  010EA4  006F FF74  F073    	movff	16349,??_memory_txFrameRequest+1
 22404  010EAA  502A               	movf	memory_txFrameRequest@length,w,c
 22405  010EAC  2772               	addwf	??_memory_txFrameRequest& (0+255),f,b
 22406  010EAE  502B               	movf	memory_txFrameRequest@length+1,w,c
 22407  010EB0  2373               	addwfc	(??_memory_txFrameRequest+1)& (0+255),f,b
 22408  010EB2  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22409  010EB4  0D09               	mullw	9
 22410  010EB6  0E02               	movlw	2
 22411  010EB8  26F3               	addwf	16371,f,c
 22412  010EBA  0E00               	movlw	0
 22413  010EBC  22F4               	addwfc	16372,f,c
 22414  010EBE  0E00               	movlw	low _occupiedMemory
 22415  010EC0  24F3               	addwf	16371,w,c
 22416  010EC2  6ED9               	movwf	16345,c
 22417  010EC4  0E03               	movlw	high _occupiedMemory
 22418  010EC6  20F4               	addwfc	16372,w,c
 22419  010EC8  6EDA               	movwf	16346,c
 22420  010ECA  0060  F1CB  FFDE   	movff	??_memory_txFrameRequest,16350
 22421  010ED0  0060  F1CF  FFDD   	movff	??_memory_txFrameRequest+1,16349
 22422                           
 22423                           ; BSR set to: 0
 22424                           ;memoryController.c: 191: for (i = 0; i < 8; i++) {
 22425  010ED6  0E00               	movlw	0
 22426  010ED8  6F7C               	movwf	memory_txFrameRequest@i_1087& (0+255),b
 22427  010EDA                     l9852:
 22428                           
 22429                           ; BSR set to: 0
 22430  010EDA  0E07               	movlw	7
 22431  010EDC  657C               	cpfsgt	memory_txFrameRequest@i_1087& (0+255),b
 22432  010EDE  D001               	goto	l474
 22433  010EE0  D03E               	goto	u11470
 22434  010EE2                     l474:
 22435                           
 22436                           ; BSR set to: 0
 22437                           ;memoryController.c: 192: if (i == freeIndex)
 22438                           
 22439                           ; BSR set to: 0
 22440  010EE2  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22441  010EE4  197C               	xorwf	memory_txFrameRequest@i_1087& (0+255),w,b
 22442  010EE6  B4D8               	btfsc	16344,2,c
 22443  010EE8  D037               	goto	l479
 22444                           
 22445                           ; BSR set to: 0
 22446                           ;memoryController.c: 194: if (!occupiedMemory[i].fIsAssigned) {
 22447                           
 22448                           ; BSR set to: 0
 22449                           
 22450                           ; BSR set to: 0
 22451                           ;memoryController.c: 193: continue;
 22452  010EEA  517C               	movf	memory_txFrameRequest@i_1087& (0+255),w,b
 22453  010EEC  0D09               	mullw	9
 22454  010EEE  0E06               	movlw	6
 22455  010EF0  26F3               	addwf	16371,f,c
 22456  010EF2  0E00               	movlw	0
 22457  010EF4  22F4               	addwfc	16372,f,c
 22458  010EF6  0E00               	movlw	low _occupiedMemory
 22459  010EF8  24F3               	addwf	16371,w,c
 22460  010EFA  6ED9               	movwf	16345,c
 22461  010EFC  0E03               	movlw	high _occupiedMemory
 22462  010EFE  20F4               	addwfc	16372,w,c
 22463  010F00  6EDA               	movwf	16346,c
 22464  010F02  50DF               	movf	16351,w,c
 22465  010F04  B4D8               	btfsc	16344,2,c
 22466  010F06  D028               	goto	l479
 22467                           
 22468                           ; BSR set to: 0
 22469                           ;memoryController.c: 197: }
 22470                           ;memoryController.c: 199: if (checkForOverlap(occupiedMemory[freeIndex], occupiedMemory[
      +                          i]))
 22471                           
 22472                           ; BSR set to: 0
 22473                           
 22474                           ; BSR set to: 0
 22475                           ;memoryController.c: 195: continue;
 22476  010F08  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22477  010F0A  0D09               	mullw	9
 22478  010F0C  0E00               	movlw	low _occupiedMemory
 22479  010F0E  24F3               	addwf	16371,w,c
 22480  010F10  6ED9               	movwf	16345,c
 22481  010F12  0E03               	movlw	high _occupiedMemory
 22482  010F14  20F4               	addwfc	16372,w,c
 22483  010F16  6EDA               	movwf	16346,c
 22484  010F18  EE00  F060         	lfsr	0,checkForOverlap@a
 22485  010F1C  0E08               	movlw	8
 22486  010F1E                     u11441:
 22487  010F1E  006F FF6F FFEB     	movff	16347,16363
 22488  010F24  06E8               	decf	16360,f,c
 22489  010F26  E2FB               	bc	u11441
 22490  010F28  517C               	movf	memory_txFrameRequest@i_1087& (0+255),w,b
 22491  010F2A  0D09               	mullw	9
 22492  010F2C  0E00               	movlw	low _occupiedMemory
 22493  010F2E  24F3               	addwf	16371,w,c
 22494  010F30  6ED9               	movwf	16345,c
 22495  010F32  0E03               	movlw	high _occupiedMemory
 22496  010F34  20F4               	addwfc	16372,w,c
 22497  010F36  6EDA               	movwf	16346,c
 22498  010F38  EE00  F069         	lfsr	0,checkForOverlap@b
 22499  010F3C  0E08               	movlw	8
 22500  010F3E                     u11451:
 22501  010F3E  006F FF6F FFEB     	movff	16347,16363
 22502  010F44  06E8               	decf	16360,f,c
 22503  010F46  E2FB               	bc	u11451
 22504  010F48  ECBA  F0AA         	call	_checkForOverlap	;wreg free
 22505  010F4C  0900               	iorlw	0
 22506  010F4E  B4D8               	btfsc	16344,2,c
 22507  010F50  D003               	goto	l479
 22508                           
 22509                           ;memoryController.c: 200: fNoOverlapMarker = 0;
 22510  010F52  0E00               	movlw	0
 22511  010F54  0100               	movlb	0	; () banked
 22512  010F56  6F7A               	movwf	memory_txFrameRequest@fNoOverlapMarker& (0+255),b
 22513  010F58                     l479:
 22514                           
 22515                           ; BSR set to: 0
 22516                           
 22517                           ; BSR set to: 0
 22518  010F58  0100               	movlb	0	; () banked
 22519  010F5A  2B7C               	incf	memory_txFrameRequest@i_1087& (0+255),f,b
 22520  010F5C  D7BE               	goto	l9852
 22521  010F5E                     u11470:
 22522                           
 22523                           ; BSR set to: 0
 22524                           ;memoryController.c: 202: }
 22525                           ;memoryController.c: 203: if (fNoOverlapMarker) {
 22526                           
 22527                           ; BSR set to: 0
 22528  010F5E  517A               	movf	memory_txFrameRequest@fNoOverlapMarker& (0+255),w,b
 22529  010F60  B4D8               	btfsc	16344,2,c
 22530  010F62  D072               	goto	l480
 22531                           
 22532                           ; BSR set to: 0
 22533                           ;memoryController.c: 204: occupiedMemory[freeIndex].fIsAssigned = 1;
 22534  010F64  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22535  010F66  0D09               	mullw	9
 22536  010F68  0E06               	movlw	6
 22537  010F6A  26F3               	addwf	16371,f,c
 22538  010F6C  0E00               	movlw	0
 22539  010F6E  22F4               	addwfc	16372,f,c
 22540  010F70  0E00               	movlw	low _occupiedMemory
 22541  010F72  24F3               	addwf	16371,w,c
 22542  010F74  6ED9               	movwf	16345,c
 22543  010F76  0E03               	movlw	high _occupiedMemory
 22544  010F78  20F4               	addwfc	16372,w,c
 22545  010F7A  6EDA               	movwf	16346,c
 22546  010F7C  0E01               	movlw	1
 22547  010F7E  6EDF               	movwf	16351,c
 22548                           
 22549                           ;memoryController.c: 205: occupiedMemory[freeIndex].end = occupiedMemory[freeIndex].star
      +                          t + length;
 22550  010F80  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22551  010F82  0D09               	mullw	9
 22552  010F84  0E00               	movlw	low _occupiedMemory
 22553  010F86  24F3               	addwf	16371,w,c
 22554  010F88  6ED9               	movwf	16345,c
 22555  010F8A  0E03               	movlw	high _occupiedMemory
 22556  010F8C  20F4               	addwfc	16372,w,c
 22557  010F8E  6EDA               	movwf	16346,c
 22558  010F90  006F FF78  F072    	movff	16350,??_memory_txFrameRequest
 22559  010F96  006F FF74  F073    	movff	16349,??_memory_txFrameRequest+1
 22560  010F9C  502A               	movf	memory_txFrameRequest@length,w,c
 22561  010F9E  2772               	addwf	??_memory_txFrameRequest& (0+255),f,b
 22562  010FA0  502B               	movf	memory_txFrameRequest@length+1,w,c
 22563  010FA2  2373               	addwfc	(??_memory_txFrameRequest+1)& (0+255),f,b
 22564  010FA4  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22565  010FA6  0D09               	mullw	9
 22566  010FA8  0E02               	movlw	2
 22567  010FAA  26F3               	addwf	16371,f,c
 22568  010FAC  0E00               	movlw	0
 22569  010FAE  22F4               	addwfc	16372,f,c
 22570  010FB0  0E00               	movlw	low _occupiedMemory
 22571  010FB2  24F3               	addwf	16371,w,c
 22572  010FB4  6ED9               	movwf	16345,c
 22573  010FB6  0E03               	movlw	high _occupiedMemory
 22574  010FB8  20F4               	addwfc	16372,w,c
 22575  010FBA  6EDA               	movwf	16346,c
 22576  010FBC  0060  F1CB  FFDE   	movff	??_memory_txFrameRequest,16350
 22577  010FC2  0060  F1CF  FFDD   	movff	??_memory_txFrameRequest+1,16349
 22578                           
 22579                           ;memoryController.c: 206: occupiedMemory[freeIndex].fOutOfMemory = 0;
 22580  010FC8  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22581  010FCA  0D09               	mullw	9
 22582  010FCC  0E07               	movlw	7
 22583  010FCE  26F3               	addwf	16371,f,c
 22584  010FD0  0E00               	movlw	0
 22585  010FD2  22F4               	addwfc	16372,f,c
 22586  010FD4  0E00               	movlw	low _occupiedMemory
 22587  010FD6  24F3               	addwf	16371,w,c
 22588  010FD8  6ED9               	movwf	16345,c
 22589  010FDA  0E03               	movlw	high _occupiedMemory
 22590  010FDC  20F4               	addwfc	16372,w,c
 22591  010FDE  6EDA               	movwf	16346,c
 22592  010FE0  0E00               	movlw	0
 22593  010FE2  6EDF               	movwf	16351,c
 22594                           
 22595                           ;memoryController.c: 207: occupiedMemory[freeIndex].length = length;
 22596  010FE4  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22597  010FE6  0D09               	mullw	9
 22598  010FE8  0E04               	movlw	4
 22599  010FEA  26F3               	addwf	16371,f,c
 22600  010FEC  0E00               	movlw	0
 22601  010FEE  22F4               	addwfc	16372,f,c
 22602  010FF0  0E00               	movlw	low _occupiedMemory
 22603  010FF2  24F3               	addwf	16371,w,c
 22604  010FF4  6ED9               	movwf	16345,c
 22605  010FF6  0E03               	movlw	high _occupiedMemory
 22606  010FF8  20F4               	addwfc	16372,w,c
 22607  010FFA  6EDA               	movwf	16346,c
 22608  010FFC  0060  F0AB  FFDE   	movff	memory_txFrameRequest@length,16350
 22609  011002  0060  F0AF  FFDD   	movff	memory_txFrameRequest@length+1,16349
 22610                           
 22611                           ;memoryController.c: 208: occupiedMemory[freeIndex].index = freeIndex;
 22612  011008  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22613  01100A  0D09               	mullw	9
 22614  01100C  0E08               	movlw	8
 22615  01100E  26F3               	addwf	16371,f,c
 22616  011010  0E00               	movlw	0
 22617  011012  22F4               	addwfc	16372,f,c
 22618  011014  0E00               	movlw	low _occupiedMemory
 22619  011016  24F3               	addwf	16371,w,c
 22620  011018  6ED9               	movwf	16345,c
 22621  01101A  0E03               	movlw	high _occupiedMemory
 22622  01101C  20F4               	addwfc	16372,w,c
 22623  01101E  6EDA               	movwf	16346,c
 22624  011020  0060  F21B  FFDF   	movff	memory_txFrameRequest@freeIndex,16351
 22625                           
 22626                           ; BSR set to: 0
 22627                           ;memoryController.c: 209: return occupiedMemory[freeIndex];
 22628  011026  5186               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22629  011028  0D09               	mullw	9
 22630  01102A  0E00               	movlw	low _occupiedMemory
 22631  01102C  24F3               	addwf	16371,w,c
 22632  01102E  6ED9               	movwf	16345,c
 22633  011030  0E03               	movlw	high _occupiedMemory
 22634  011032  20F4               	addwfc	16372,w,c
 22635  011034  6EDA               	movwf	16346,c
 22636  011036  EE00  F02A         	lfsr	0,?_memory_txFrameRequest
 22637  01103A  0E08               	movlw	8
 22638  01103C                     u11491:
 22639  01103C  006F FF6F FFEB     	movff	16347,16363
 22640  011042  06E8               	decf	16360,f,c
 22641  011044  E2FB               	bc	u11491
 22642                           
 22643                           ; BSR set to: 0
 22644  011046  0012               	return	
 22645  011048                     l480:
 22646                           
 22647                           ; BSR set to: 0
 22648                           ;memoryController.c: 210: }
 22649                           ;memoryController.c: 211: }
 22650                           ;memoryController.c: 212: freeIndex++;
 22651                           
 22652                           ; BSR set to: 0
 22653                           
 22654                           ; BSR set to: 0
 22655  011048  2B86               	incf	memory_txFrameRequest@freeIndex& (0+255),f,b
 22656                           
 22657                           ; BSR set to: 0
 22658                           ;memoryController.c: 213: if (freeIndex == 8) {
 22659  01104A  0E08               	movlw	8
 22660  01104C  1986               	xorwf	memory_txFrameRequest@freeIndex& (0+255),w,b
 22661  01104E  A4D8               	btfss	16344,2,c
 22662  011050  D00D               	goto	l481
 22663                           
 22664                           ; BSR set to: 0
 22665                           ;memoryController.c: 215: field.fOutOfMemory = 1;
 22666  011052  0E01               	movlw	1
 22667  011054  6F84               	movwf	(memory_txFrameRequest@field+7)& (0+255),b
 22668                           
 22669                           ; BSR set to: 0
 22670                           ;memoryController.c: 216: return field;
 22671  011056  EE20  F07D         	lfsr	2,memory_txFrameRequest@field
 22672  01105A  EE00  F02A         	lfsr	0,?_memory_txFrameRequest
 22673  01105E  0E08               	movlw	8
 22674  011060                     u11511:
 22675  011060  006F FF6F FFEB     	movff	16347,16363
 22676  011066  06E8               	decf	16360,f,c
 22677  011068  E2FB               	bc	u11511
 22678                           
 22679                           ; BSR set to: 0
 22680  01106A  0012               	return	
 22681  01106C                     l481:
 22682                           
 22683                           ; BSR set to: 0
 22684                           
 22685                           ; BSR set to: 0
 22686  01106C  0E08               	movlw	8
 22687  01106E  0100               	movlb	0	; () banked
 22688  011070  6586               	cpfsgt	memory_txFrameRequest@freeIndex& (0+255),b
 22689  011072  D5C8               	goto	l461
 22690                           
 22691                           ; BSR set to: 0
 22692                           ;memoryController.c: 217: }
 22693                           ;memoryController.c: 218: }
 22694                           ;memoryController.c: 219: return field;
 22695                           
 22696                           ; BSR set to: 0
 22697  011074  EE20  F07D         	lfsr	2,memory_txFrameRequest@field
 22698  011078  EE00  F02A         	lfsr	0,?_memory_txFrameRequest
 22699  01107C  0E08               	movlw	8
 22700  01107E                     u11531:
 22701  01107E  006F FF6F FFEB     	movff	16347,16363
 22702  011084  06E8               	decf	16360,f,c
 22703  011086  E2FB               	bc	u11531
 22704  011088  0012               	return	
 22705  01108A                     __end_of_memory_txFrameRequest:
 22706                           	opt stack 0
 22707                           
 22708 ;; *************** function _entireMemoryFull *****************
 22709 ;; Defined at:
 22710 ;;		line 46 in file "src/mem/memoryController.c"
 22711 ;; Parameters:    Size  Location     Type
 22712 ;;		None
 22713 ;; Auto vars:     Size  Location     Type
 22714 ;;  i               1   21[COMRAM] unsigned char 
 22715 ;; Return value:  Size  Location     Type
 22716 ;;                  1    wreg      unsigned char 
 22717 ;; Registers used:
 22718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22719 ;; Tracked objects:
 22720 ;;		On entry : 0/0
 22721 ;;		On exit  : 0/0
 22722 ;;		Unchanged: 0/0
 22723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22728 ;;Total ram usage:        1 bytes
 22729 ;; Hardware stack levels used:    1
 22730 ;; Hardware stack levels required when called:    4
 22731 ;; This function calls:
 22732 ;;		Nothing
 22733 ;; This function is called by:
 22734 ;;		_memory_txFrameRequest
 22735 ;; This function uses a non-reentrant model
 22736 ;;
 22737                           
 22738                           	psect	text102
 22739  01722A                     __ptext102:
 22740                           	opt stack 0
 22741  01722A                     _entireMemoryFull:
 22742                           	opt stack 22
 22743                           
 22744                           ;memoryController.c: 47: for (uint8_t i = 0; i < 8; i++) {
 22745                           
 22746                           ;incstack = 0
 22747  01722A  0E00               	movlw	0
 22748  01722C  6E16               	movwf	entireMemoryFull@i,c
 22749  01722E                     l9594:
 22750  01722E  0E07               	movlw	7
 22751  017230  6416               	cpfsgt	entireMemoryFull@i,c
 22752  017232  D001               	goto	l418
 22753  017234  D013               	goto	u10910
 22754  017236                     l418:
 22755                           
 22756                           ;memoryController.c: 48: if (!occupiedMemory[i].fIsAssigned)
 22757  017236  5016               	movf	entireMemoryFull@i,w,c
 22758  017238  0D09               	mullw	9
 22759  01723A  0E06               	movlw	6
 22760  01723C  26F3               	addwf	16371,f,c
 22761  01723E  0E00               	movlw	0
 22762  017240  22F4               	addwfc	16372,f,c
 22763  017242  0E00               	movlw	low _occupiedMemory
 22764  017244  24F3               	addwf	16371,w,c
 22765  017246  6ED9               	movwf	16345,c
 22766  017248  0E03               	movlw	high _occupiedMemory
 22767  01724A  20F4               	addwfc	16372,w,c
 22768  01724C  6EDA               	movwf	16346,c
 22769  01724E  50DF               	movf	16351,w,c
 22770  017250  A4D8               	btfss	16344,2,c
 22771  017252  D002               	goto	l420
 22772                           
 22773                           ;memoryController.c: 49: return 0u;
 22774  017254  0E00               	movlw	0
 22775  017256  0012               	return	
 22776  017258                     l420:
 22777  017258  2A16               	incf	entireMemoryFull@i,f,c
 22778  01725A  D7E9               	goto	l9594
 22779  01725C                     u10910:
 22780                           
 22781                           ;memoryController.c: 50: }
 22782                           ;memoryController.c: 51: return 1u;
 22783  01725C  0E01               	movlw	1
 22784  01725E  0012               	return	
 22785  017260                     __end_of_entireMemoryFull:
 22786                           	opt stack 0
 22787                           
 22788 ;; *************** function _entireMemoryEmpty *****************
 22789 ;; Defined at:
 22790 ;;		line 38 in file "src/mem/memoryController.c"
 22791 ;; Parameters:    Size  Location     Type
 22792 ;;		None
 22793 ;; Auto vars:     Size  Location     Type
 22794 ;;  i               1   21[COMRAM] unsigned char 
 22795 ;; Return value:  Size  Location     Type
 22796 ;;                  1    wreg      unsigned char 
 22797 ;; Registers used:
 22798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22799 ;; Tracked objects:
 22800 ;;		On entry : 0/0
 22801 ;;		On exit  : 0/0
 22802 ;;		Unchanged: 0/0
 22803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22808 ;;Total ram usage:        1 bytes
 22809 ;; Hardware stack levels used:    1
 22810 ;; Hardware stack levels required when called:    4
 22811 ;; This function calls:
 22812 ;;		Nothing
 22813 ;; This function is called by:
 22814 ;;		_memory_txFrameRequest
 22815 ;; This function uses a non-reentrant model
 22816 ;;
 22817                           
 22818                           	psect	text103
 22819  017260                     __ptext103:
 22820                           	opt stack 0
 22821  017260                     _entireMemoryEmpty:
 22822                           	opt stack 22
 22823                           
 22824                           ;memoryController.c: 39: for (uint8_t i = 0; i < 8; i++) {
 22825                           
 22826                           ;incstack = 0
 22827  017260  0E00               	movlw	0
 22828  017262  6E16               	movwf	entireMemoryEmpty@i,c
 22829  017264                     l9574:
 22830  017264  0E07               	movlw	7
 22831  017266  6416               	cpfsgt	entireMemoryEmpty@i,c
 22832  017268  D001               	goto	l412
 22833  01726A  D013               	goto	u10880
 22834  01726C                     l412:
 22835                           
 22836                           ;memoryController.c: 40: if (occupiedMemory[i].fIsAssigned)
 22837  01726C  5016               	movf	entireMemoryEmpty@i,w,c
 22838  01726E  0D09               	mullw	9
 22839  017270  0E06               	movlw	6
 22840  017272  26F3               	addwf	16371,f,c
 22841  017274  0E00               	movlw	0
 22842  017276  22F4               	addwfc	16372,f,c
 22843  017278  0E00               	movlw	low _occupiedMemory
 22844  01727A  24F3               	addwf	16371,w,c
 22845  01727C  6ED9               	movwf	16345,c
 22846  01727E  0E03               	movlw	high _occupiedMemory
 22847  017280  20F4               	addwfc	16372,w,c
 22848  017282  6EDA               	movwf	16346,c
 22849  017284  50DF               	movf	16351,w,c
 22850  017286  B4D8               	btfsc	16344,2,c
 22851  017288  D002               	goto	l414
 22852                           
 22853                           ;memoryController.c: 41: return 0u;
 22854  01728A  0E00               	movlw	0
 22855  01728C  0012               	return	
 22856  01728E                     l414:
 22857  01728E  2A16               	incf	entireMemoryEmpty@i,f,c
 22858  017290  D7E9               	goto	l9574
 22859  017292                     u10880:
 22860                           
 22861                           ;memoryController.c: 42: }
 22862                           ;memoryController.c: 43: return 1u;
 22863  017292  0E01               	movlw	1
 22864  017294  0012               	return	
 22865  017296                     __end_of_entireMemoryEmpty:
 22866                           	opt stack 0
 22867                           
 22868 ;; *************** function _checkForOverlap *****************
 22869 ;; Defined at:
 22870 ;;		line 64 in file "src/mem/memoryController.c"
 22871 ;; Parameters:    Size  Location     Type
 22872 ;;  a               9    0[BANK0 ] struct memoryField
 22873 ;;  b               9    9[BANK0 ] struct memoryField
 22874 ;; Auto vars:     Size  Location     Type
 22875 ;;		None
 22876 ;; Return value:  Size  Location     Type
 22877 ;;                  1    wreg      unsigned char 
 22878 ;; Registers used:
 22879 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 22880 ;; Tracked objects:
 22881 ;;		On entry : 0/0
 22882 ;;		On exit  : 0/0
 22883 ;;		Unchanged: 0/0
 22884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22885 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22888 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22889 ;;Total ram usage:       18 bytes
 22890 ;; Hardware stack levels used:    1
 22891 ;; Hardware stack levels required when called:    5
 22892 ;; This function calls:
 22893 ;;		_checkForOverlapSwitched
 22894 ;; This function is called by:
 22895 ;;		_memory_txFrameRequest
 22896 ;; This function uses a non-reentrant model
 22897 ;;
 22898                           
 22899                           	psect	text104
 22900  015574                     __ptext104:
 22901                           	opt stack 0
 22902  015574                     _checkForOverlap:
 22903                           	opt stack 21
 22904                           
 22905                           ;memoryController.c: 65: if ((a.start == b.start) ||
 22906                           ;memoryController.c: 66: (a.end == b.end) ||
 22907                           ;memoryController.c: 67: (a.start == b.end) ||
 22908                           ;memoryController.c: 68: (a.end == b.start) ||
 22909                           ;memoryController.c: 69: (a.end > 0x3000) ||
 22910                           ;memoryController.c: 70: (a.start > 0x3000) ||
 22911                           ;memoryController.c: 71: (b.end > 0x3000) ||
 22912                           ;memoryController.c: 72: (b.start > 0x3000))
 22913                           
 22914                           ;incstack = 0
 22915  015574  0100               	movlb	0	; () banked
 22916  015576  5169               	movf	checkForOverlap@b& (0+255),w,b
 22917  015578  1960               	xorwf	checkForOverlap@a& (0+255),w,b
 22918  01557A  E104               	bnz	u10920
 22919  01557C  516A               	movf	(checkForOverlap@b+1)& (0+255),w,b
 22920  01557E  1961               	xorwf	(checkForOverlap@a+1)& (0+255),w,b
 22921  015580  B4D8               	btfsc	16344,2,c
 22922  015582  D029               	goto	u10990
 22923  015584                     u10920:
 22924                           
 22925                           ; BSR set to: 0
 22926  015584  516B               	movf	(checkForOverlap@b+2)& (0+255),w,b
 22927  015586  1962               	xorwf	(checkForOverlap@a+2)& (0+255),w,b
 22928  015588  E104               	bnz	u10930
 22929  01558A  516C               	movf	(checkForOverlap@b+3)& (0+255),w,b
 22930  01558C  1963               	xorwf	(checkForOverlap@a+3)& (0+255),w,b
 22931  01558E  B4D8               	btfsc	16344,2,c
 22932  015590  D022               	goto	u10990
 22933  015592                     u10930:
 22934                           
 22935                           ; BSR set to: 0
 22936  015592  5160               	movf	checkForOverlap@a& (0+255),w,b
 22937  015594  196B               	xorwf	(checkForOverlap@b+2)& (0+255),w,b
 22938  015596  E104               	bnz	u10940
 22939  015598  5161               	movf	(checkForOverlap@a+1)& (0+255),w,b
 22940  01559A  196C               	xorwf	(checkForOverlap@b+3)& (0+255),w,b
 22941  01559C  B4D8               	btfsc	16344,2,c
 22942  01559E  D01B               	goto	u10990
 22943  0155A0                     u10940:
 22944                           
 22945                           ; BSR set to: 0
 22946  0155A0  5169               	movf	checkForOverlap@b& (0+255),w,b
 22947  0155A2  1962               	xorwf	(checkForOverlap@a+2)& (0+255),w,b
 22948  0155A4  E104               	bnz	u10950
 22949  0155A6  516A               	movf	(checkForOverlap@b+1)& (0+255),w,b
 22950  0155A8  1963               	xorwf	(checkForOverlap@a+3)& (0+255),w,b
 22951  0155AA  B4D8               	btfsc	16344,2,c
 22952  0155AC  D014               	goto	u10990
 22953  0155AE                     u10950:
 22954                           
 22955                           ; BSR set to: 0
 22956  0155AE  0562               	decf	(checkForOverlap@a+2)& (0+255),w,b
 22957  0155B0  0E30               	movlw	48
 22958  0155B2  5963               	subwfb	(checkForOverlap@a+3)& (0+255),w,b
 22959  0155B4  B0D8               	btfsc	16344,0,c
 22960  0155B6  D00F               	goto	u10990
 22961                           
 22962                           ; BSR set to: 0
 22963  0155B8  0560               	decf	checkForOverlap@a& (0+255),w,b
 22964  0155BA  0E30               	movlw	48
 22965  0155BC  5961               	subwfb	(checkForOverlap@a+1)& (0+255),w,b
 22966  0155BE  B0D8               	btfsc	16344,0,c
 22967  0155C0  D00A               	goto	u10990
 22968                           
 22969                           ; BSR set to: 0
 22970  0155C2  056B               	decf	(checkForOverlap@b+2)& (0+255),w,b
 22971  0155C4  0E30               	movlw	48
 22972  0155C6  596C               	subwfb	(checkForOverlap@b+3)& (0+255),w,b
 22973  0155C8  B0D8               	btfsc	16344,0,c
 22974  0155CA  D005               	goto	u10990
 22975                           
 22976                           ; BSR set to: 0
 22977  0155CC  0569               	decf	checkForOverlap@b& (0+255),w,b
 22978  0155CE  0E30               	movlw	48
 22979  0155D0  596A               	subwfb	(checkForOverlap@b+1)& (0+255),w,b
 22980  0155D2  A0D8               	btfss	16344,0,c
 22981  0155D4  D002               	goto	l424
 22982  0155D6                     u10990:
 22983                           
 22984                           ; BSR set to: 0
 22985                           ;memoryController.c: 73: return 1u;
 22986                           
 22987                           ; BSR set to: 0
 22988  0155D6  0E01               	movlw	1
 22989                           
 22990                           ; BSR set to: 0
 22991  0155D8  0012               	return	
 22992  0155DA                     l424:
 22993                           
 22994                           ; BSR set to: 0
 22995                           ;memoryController.c: 76: if (a.start < a.end) {
 22996                           
 22997                           ; BSR set to: 0
 22998  0155DA  5162               	movf	(checkForOverlap@a+2)& (0+255),w,b
 22999  0155DC  5D60               	subwf	checkForOverlap@a& (0+255),w,b
 23000  0155DE  5163               	movf	(checkForOverlap@a+3)& (0+255),w,b
 23001  0155E0  5961               	subwfb	(checkForOverlap@a+1)& (0+255),w,b
 23002  0155E2  B0D8               	btfsc	16344,0,c
 23003  0155E4  D038               	goto	l428
 23004                           
 23005                           ; BSR set to: 0
 23006                           ;memoryController.c: 77: if (b.start < b.end) {
 23007  0155E6  516B               	movf	(checkForOverlap@b+2)& (0+255),w,b
 23008  0155E8  5D69               	subwf	checkForOverlap@b& (0+255),w,b
 23009  0155EA  516C               	movf	(checkForOverlap@b+3)& (0+255),w,b
 23010  0155EC  596A               	subwfb	(checkForOverlap@b+1)& (0+255),w,b
 23011  0155EE  B0D8               	btfsc	16344,0,c
 23012  0155F0  D027               	goto	l429
 23013                           
 23014                           ; BSR set to: 0
 23015                           ;memoryController.c: 79: if (a.start < b.start) {
 23016  0155F2  5169               	movf	checkForOverlap@b& (0+255),w,b
 23017  0155F4  5D60               	subwf	checkForOverlap@a& (0+255),w,b
 23018  0155F6  516A               	movf	(checkForOverlap@b+1)& (0+255),w,b
 23019  0155F8  5961               	subwfb	(checkForOverlap@a+1)& (0+255),w,b
 23020  0155FA  B0D8               	btfsc	16344,0,c
 23021  0155FC  D00A               	goto	l430
 23022                           
 23023                           ; BSR set to: 0
 23024                           ;memoryController.c: 80: if (a.end > b.start) {
 23025  0155FE  5162               	movf	(checkForOverlap@a+2)& (0+255),w,b
 23026  015600  5D69               	subwf	checkForOverlap@b& (0+255),w,b
 23027  015602  5163               	movf	(checkForOverlap@a+3)& (0+255),w,b
 23028  015604  596A               	subwfb	(checkForOverlap@b+1)& (0+255),w,b
 23029  015606  B0D8               	btfsc	16344,0,c
 23030  015608  D002               	goto	l431
 23031                           
 23032                           ; BSR set to: 0
 23033                           ;memoryController.c: 81: return 1u;
 23034  01560A  0E01               	movlw	1
 23035                           
 23036                           ; BSR set to: 0
 23037                           ;memoryController.c: 82: } else {
 23038                           
 23039                           ; BSR set to: 0
 23040  01560C  0012               	return	
 23041  01560E                     l431:
 23042                           
 23043                           ; BSR set to: 0
 23044                           ;memoryController.c: 83: return 0u;
 23045                           
 23046                           ; BSR set to: 0
 23047  01560E  0E00               	movlw	0
 23048                           
 23049                           ; BSR set to: 0
 23050                           ;memoryController.c: 84: }
 23051                           ;memoryController.c: 85: } else {
 23052                           
 23053                           ; BSR set to: 0
 23054  015610  0012               	return	
 23055  015612                     l430:
 23056                           
 23057                           ; BSR set to: 0
 23058                           ;memoryController.c: 86: return checkForOverlapSwitched(b, a);
 23059                           
 23060                           ; BSR set to: 0
 23061  015612  EE20  F069         	lfsr	2,checkForOverlap@b
 23062  015616  EE00  F016         	lfsr	0,checkForOverlapSwitched@a
 23063  01561A  0E08               	movlw	8
 23064  01561C                     u11041:
 23065  01561C  006F FF6F FFEB     	movff	16347,16363
 23066  015622  06E8               	decf	16360,f,c
 23067  015624  E2FB               	bc	u11041
 23068  015626  EE20  F060         	lfsr	2,checkForOverlap@a
 23069  01562A  EE00  F01F         	lfsr	0,checkForOverlapSwitched@b
 23070  01562E  0E08               	movlw	8
 23071  015630                     u11051:
 23072  015630  006F FF6F FFEB     	movff	16347,16363
 23073  015636  06E8               	decf	16360,f,c
 23074  015638  E2FB               	bc	u11051
 23075  01563A  EC0F  F0B0         	call	_checkForOverlapSwitched	;wreg free
 23076                           
 23077                           ;memoryController.c: 87: }
 23078                           ;memoryController.c: 88: } else {
 23079  01563E  0012               	return	
 23080  015640                     l429:
 23081                           
 23082                           ;memoryController.c: 89: if (b.end < a.start)
 23083  015640  0100               	movlb	0	; () banked
 23084  015642  5160               	movf	checkForOverlap@a& (0+255),w,b
 23085  015644  5D6B               	subwf	(checkForOverlap@b+2)& (0+255),w,b
 23086  015646  5161               	movf	(checkForOverlap@a+1)& (0+255),w,b
 23087  015648  596C               	subwfb	(checkForOverlap@b+3)& (0+255),w,b
 23088  01564A  B0D8               	btfsc	16344,0,c
 23089  01564C  D002               	goto	l435
 23090                           
 23091                           ; BSR set to: 0
 23092                           ;memoryController.c: 90: return 0u;
 23093  01564E  0E00               	movlw	0
 23094                           
 23095                           ; BSR set to: 0
 23096                           
 23097                           ; BSR set to: 0
 23098  015650  0012               	return	
 23099  015652                     l435:
 23100                           
 23101                           ; BSR set to: 0
 23102                           ;memoryController.c: 91: else
 23103                           ;memoryController.c: 92: return 1u;
 23104                           
 23105                           ; BSR set to: 0
 23106  015652  0E01               	movlw	1
 23107                           
 23108                           ; BSR set to: 0
 23109                           ;memoryController.c: 93: }
 23110                           ;memoryController.c: 94: } else {
 23111                           
 23112                           ; BSR set to: 0
 23113                           
 23114                           ; BSR set to: 0
 23115  015654  0012               	return	
 23116  015656                     l428:
 23117                           
 23118                           ; BSR set to: 0
 23119                           ;memoryController.c: 95: return checkForOverlapSwitched(b, a);
 23120                           
 23121                           ; BSR set to: 0
 23122  015656  EE20  F069         	lfsr	2,checkForOverlap@b
 23123  01565A  EE00  F016         	lfsr	0,checkForOverlapSwitched@a
 23124  01565E  0E08               	movlw	8
 23125  015660                     u11071:
 23126  015660  006F FF6F FFEB     	movff	16347,16363
 23127  015666  06E8               	decf	16360,f,c
 23128  015668  E2FB               	bc	u11071
 23129  01566A  EE20  F060         	lfsr	2,checkForOverlap@a
 23130  01566E  EE00  F01F         	lfsr	0,checkForOverlapSwitched@b
 23131  015672  0E08               	movlw	8
 23132  015674                     u11081:
 23133  015674  006F FF6F FFEB     	movff	16347,16363
 23134  01567A  06E8               	decf	16360,f,c
 23135  01567C  E2FB               	bc	u11081
 23136  01567E  EC0F  F0B0         	call	_checkForOverlapSwitched	;wreg free
 23137  015682  0012               	return	
 23138  015684                     __end_of_checkForOverlap:
 23139                           	opt stack 0
 23140                           
 23141 ;; *************** function _checkForOverlapSwitched *****************
 23142 ;; Defined at:
 23143 ;;		line 99 in file "src/mem/memoryController.c"
 23144 ;; Parameters:    Size  Location     Type
 23145 ;;  a               9   21[COMRAM] struct memoryField
 23146 ;;  b               9   30[COMRAM] struct memoryField
 23147 ;; Auto vars:     Size  Location     Type
 23148 ;;		None
 23149 ;; Return value:  Size  Location     Type
 23150 ;;                  1    wreg      unsigned char 
 23151 ;; Registers used:
 23152 ;;		wreg, status,2, status,0
 23153 ;; Tracked objects:
 23154 ;;		On entry : 0/0
 23155 ;;		On exit  : 0/0
 23156 ;;		Unchanged: 0/0
 23157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23158 ;;      Params:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23161 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23162 ;;Total ram usage:       18 bytes
 23163 ;; Hardware stack levels used:    1
 23164 ;; Hardware stack levels required when called:    4
 23165 ;; This function calls:
 23166 ;;		Nothing
 23167 ;; This function is called by:
 23168 ;;		_checkForOverlap
 23169 ;; This function uses a non-reentrant model
 23170 ;;
 23171                           
 23172                           	psect	text105
 23173  01601E                     __ptext105:
 23174                           	opt stack 0
 23175  01601E                     _checkForOverlapSwitched:
 23176                           	opt stack 21
 23177                           
 23178                           ;memoryController.c: 102: if ((a.start == b.start) ||
 23179                           ;memoryController.c: 103: (a.end == b.end) ||
 23180                           ;memoryController.c: 104: (a.start == b.end) ||
 23181                           ;memoryController.c: 105: (a.end == b.start) ||
 23182                           ;memoryController.c: 106: (a.end > 0x3000) ||
 23183                           ;memoryController.c: 107: (a.start > 0x3000) ||
 23184                           ;memoryController.c: 108: (b.end > 0x3000) ||
 23185                           ;memoryController.c: 109: (b.start > 0x3000))
 23186                           
 23187                           ;incstack = 0
 23188  01601E  501F               	movf	checkForOverlapSwitched@b,w,c
 23189  016020  1816               	xorwf	checkForOverlapSwitched@a,w,c
 23190  016022  E104               	bnz	u10730
 23191  016024  5020               	movf	checkForOverlapSwitched@b+1,w,c
 23192  016026  1817               	xorwf	checkForOverlapSwitched@a+1,w,c
 23193  016028  B4D8               	btfsc	16344,2,c
 23194  01602A  D029               	goto	u10800
 23195  01602C                     u10730:
 23196  01602C  5021               	movf	checkForOverlapSwitched@b+2,w,c
 23197  01602E  1818               	xorwf	checkForOverlapSwitched@a+2,w,c
 23198  016030  E104               	bnz	u10740
 23199  016032  5022               	movf	checkForOverlapSwitched@b+3,w,c
 23200  016034  1819               	xorwf	checkForOverlapSwitched@a+3,w,c
 23201  016036  B4D8               	btfsc	16344,2,c
 23202  016038  D022               	goto	u10800
 23203  01603A                     u10740:
 23204  01603A  5016               	movf	checkForOverlapSwitched@a,w,c
 23205  01603C  1821               	xorwf	checkForOverlapSwitched@b+2,w,c
 23206  01603E  E104               	bnz	u10750
 23207  016040  5017               	movf	checkForOverlapSwitched@a+1,w,c
 23208  016042  1822               	xorwf	checkForOverlapSwitched@b+3,w,c
 23209  016044  B4D8               	btfsc	16344,2,c
 23210  016046  D01B               	goto	u10800
 23211  016048                     u10750:
 23212  016048  501F               	movf	checkForOverlapSwitched@b,w,c
 23213  01604A  1818               	xorwf	checkForOverlapSwitched@a+2,w,c
 23214  01604C  E104               	bnz	u10760
 23215  01604E  5020               	movf	checkForOverlapSwitched@b+1,w,c
 23216  016050  1819               	xorwf	checkForOverlapSwitched@a+3,w,c
 23217  016052  B4D8               	btfsc	16344,2,c
 23218  016054  D014               	goto	u10800
 23219  016056                     u10760:
 23220  016056  0418               	decf	checkForOverlapSwitched@a+2,w,c
 23221  016058  0E30               	movlw	48
 23222  01605A  5819               	subwfb	checkForOverlapSwitched@a+3,w,c
 23223  01605C  B0D8               	btfsc	16344,0,c
 23224  01605E  D00F               	goto	u10800
 23225  016060  0416               	decf	checkForOverlapSwitched@a,w,c
 23226  016062  0E30               	movlw	48
 23227  016064  5817               	subwfb	checkForOverlapSwitched@a+1,w,c
 23228  016066  B0D8               	btfsc	16344,0,c
 23229  016068  D00A               	goto	u10800
 23230  01606A  0421               	decf	checkForOverlapSwitched@b+2,w,c
 23231  01606C  0E30               	movlw	48
 23232  01606E  5822               	subwfb	checkForOverlapSwitched@b+3,w,c
 23233  016070  B0D8               	btfsc	16344,0,c
 23234  016072  D005               	goto	u10800
 23235  016074  041F               	decf	checkForOverlapSwitched@b,w,c
 23236  016076  0E30               	movlw	48
 23237  016078  5820               	subwfb	checkForOverlapSwitched@b+1,w,c
 23238  01607A  A0D8               	btfss	16344,0,c
 23239  01607C  D002               	goto	l440
 23240  01607E                     u10800:
 23241                           
 23242                           ;memoryController.c: 110: return 1u;
 23243  01607E  0E01               	movlw	1
 23244  016080  0012               	return	
 23245  016082                     l440:
 23246                           
 23247                           ;memoryController.c: 113: if (a.start < a.end) {
 23248  016082  5018               	movf	checkForOverlapSwitched@a+2,w,c
 23249  016084  5C16               	subwf	checkForOverlapSwitched@a,w,c
 23250  016086  5019               	movf	checkForOverlapSwitched@a+3,w,c
 23251  016088  5817               	subwfb	checkForOverlapSwitched@a+1,w,c
 23252  01608A  B0D8               	btfsc	16344,0,c
 23253  01608C  D01E               	goto	l451
 23254                           
 23255                           ;memoryController.c: 114: if (b.start < b.end) {
 23256  01608E  5021               	movf	checkForOverlapSwitched@b+2,w,c
 23257  016090  5C1F               	subwf	checkForOverlapSwitched@b,w,c
 23258  016092  5022               	movf	checkForOverlapSwitched@b+3,w,c
 23259  016094  5820               	subwfb	checkForOverlapSwitched@b+1,w,c
 23260  016096  B0D8               	btfsc	16344,0,c
 23261  016098  D010               	goto	l445
 23262                           
 23263                           ;memoryController.c: 116: if (a.start < b.start) {
 23264  01609A  501F               	movf	checkForOverlapSwitched@b,w,c
 23265  01609C  5C16               	subwf	checkForOverlapSwitched@a,w,c
 23266  01609E  5020               	movf	checkForOverlapSwitched@b+1,w,c
 23267  0160A0  5817               	subwfb	checkForOverlapSwitched@a+1,w,c
 23268  0160A2  B0D8               	btfsc	16344,0,c
 23269  0160A4  D012               	goto	l451
 23270                           
 23271                           ;memoryController.c: 117: if (a.end > b.start) {
 23272  0160A6  5018               	movf	checkForOverlapSwitched@a+2,w,c
 23273  0160A8  5C1F               	subwf	checkForOverlapSwitched@b,w,c
 23274  0160AA  5019               	movf	checkForOverlapSwitched@a+3,w,c
 23275  0160AC  5820               	subwfb	checkForOverlapSwitched@b+1,w,c
 23276  0160AE  B0D8               	btfsc	16344,0,c
 23277  0160B0  D002               	goto	l447
 23278                           
 23279                           ;memoryController.c: 118: return 1u;
 23280  0160B2  0E01               	movlw	1
 23281  0160B4  0012               	return	
 23282  0160B6                     l447:
 23283                           
 23284                           ;memoryController.c: 120: return 0u;
 23285  0160B6  0E00               	movlw	0
 23286  0160B8  0012               	return	
 23287  0160BA                     l445:
 23288                           
 23289                           ;memoryController.c: 124: if (b.end < a.start)
 23290  0160BA  5016               	movf	checkForOverlapSwitched@a,w,c
 23291  0160BC  5C21               	subwf	checkForOverlapSwitched@b+2,w,c
 23292  0160BE  5017               	movf	checkForOverlapSwitched@a+1,w,c
 23293  0160C0  5822               	subwfb	checkForOverlapSwitched@b+3,w,c
 23294  0160C2  A0D8               	btfss	16344,0,c
 23295  0160C4  D7F8               	goto	l447
 23296                           
 23297                           ;memoryController.c: 126: else
 23298                           ;memoryController.c: 127: return 1u;
 23299                           
 23300                           ;memoryController.c: 125: return 0u;
 23301  0160C6  0E01               	movlw	1
 23302  0160C8  0012               	return	
 23303  0160CA                     l451:
 23304                           
 23305                           ;memoryController.c: 128: }
 23306                           ;memoryController.c: 129: }
 23307                           ;memoryController.c: 131: return 1u;
 23308  0160CA  0E01               	movlw	1
 23309  0160CC  0012               	return	
 23310  0160CE                     __end_of_checkForOverlapSwitched:
 23311                           	opt stack 0
 23312                           
 23313 ;; *************** function ___wmul *****************
 23314 ;; Defined at:
 23315 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 23316 ;; Parameters:    Size  Location     Type
 23317 ;;  multiplier      2   35[COMRAM] unsigned int 
 23318 ;;  multiplicand    2   37[COMRAM] unsigned int 
 23319 ;; Auto vars:     Size  Location     Type
 23320 ;;  product         2   39[COMRAM] unsigned int 
 23321 ;; Return value:  Size  Location     Type
 23322 ;;                  2   35[COMRAM] unsigned int 
 23323 ;; Registers used:
 23324 ;;		wreg, status,2, status,0, prodl, prodh
 23325 ;; Tracked objects:
 23326 ;;		On entry : 0/0
 23327 ;;		On exit  : 0/0
 23328 ;;		Unchanged: 0/0
 23329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23330 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23331 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23333 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23334 ;;Total ram usage:        6 bytes
 23335 ;; Hardware stack levels used:    1
 23336 ;; Hardware stack levels required when called:    4
 23337 ;; This function calls:
 23338 ;;		Nothing
 23339 ;; This function is called by:
 23340 ;;		_memory_txFrameRequest
 23341 ;;		_tcp_listen
 23342 ;; This function uses a non-reentrant model
 23343 ;;
 23344                           
 23345                           	psect	text106
 23346  017328                     __ptext106:
 23347                           	opt stack 0
 23348  017328                     ___wmul:
 23349                           	opt stack 22
 23350                           
 23351                           ;incstack = 0
 23352  017328  5024               	movf	___wmul@multiplier,w,c
 23353  01732A  0226               	mulwf	___wmul@multiplicand,c
 23354  01732C  006F FFCC  F028    	movff	16371,___wmul@product
 23355  017332  006F FFD0  F029    	movff	16372,___wmul@product+1
 23356  017338  5024               	movf	___wmul@multiplier,w,c
 23357  01733A  0227               	mulwf	___wmul@multiplicand+1,c
 23358  01733C  50F3               	movf	16371,w,c
 23359  01733E  2629               	addwf	___wmul@product+1,f,c
 23360  017340  5025               	movf	___wmul@multiplier+1,w,c
 23361  017342  0226               	mulwf	___wmul@multiplicand,c
 23362  017344  50F3               	movf	16371,w,c
 23363  017346  2629               	addwf	___wmul@product+1,f,c
 23364  017348  0060  F0A0  F024   	movff	___wmul@product,?___wmul
 23365  01734E  0060  F0A4  F025   	movff	___wmul@product+1,?___wmul+1
 23366  017354  0012               	return	
 23367  017356                     __end_of___wmul:
 23368                           	opt stack 0
 23369                           
 23370 ;; *************** function _ethernetController_writeEtherTypeFieldToBuffer *****************
 23371 ;; Defined at:
 23372 ;;		line 241 in file "src/enc424j600/ENC424J600.c"
 23373 ;; Parameters:    Size  Location     Type
 23374 ;;  ethtype         2   36[COMRAM] enum E18411
 23375 ;;  field           9   38[COMRAM] struct memoryField
 23376 ;; Auto vars:     Size  Location     Type
 23377 ;;  opcode          1   49[COMRAM] unsigned char 
 23378 ;;  highByte        1   48[COMRAM] unsigned char 
 23379 ;;  lowByte         1   47[COMRAM] unsigned char 
 23380 ;; Return value:  Size  Location     Type
 23381 ;;                  1    wreg      void 
 23382 ;; Registers used:
 23383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23384 ;; Tracked objects:
 23385 ;;		On entry : 0/0
 23386 ;;		On exit  : 0/0
 23387 ;;		Unchanged: 0/0
 23388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23389 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23390 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23392 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23393 ;;Total ram usage:       14 bytes
 23394 ;; Hardware stack levels used:    1
 23395 ;; Hardware stack levels required when called:    7
 23396 ;; This function calls:
 23397 ;;		_enc424j600_setGPDATAWritePointer
 23398 ;;		_enc424j600_writeSPI
 23399 ;; This function is called by:
 23400 ;;		_ethernet_txFrameRequest
 23401 ;; This function uses a non-reentrant model
 23402 ;;
 23403                           
 23404                           	psect	text107
 23405  016EEC                     __ptext107:
 23406                           	opt stack 0
 23407  016EEC                     _ethernetController_writeEtherTypeFieldToBuffer:
 23408                           	opt stack 20
 23409                           
 23410                           ;ENC424J600.c: 242: enc424j600_setGPDATAWritePointer(field.start + 0x0006);
 23411                           
 23412                           ;incstack = 0
 23413  016EEC  0E06               	movlw	6
 23414  016EEE  2427               	addwf	ethernetController_writeEtherTypeFieldToBuffer@field,w,c
 23415  016EF0  6E20               	movwf	enc424j600_setGPDATAWritePointer@addr,c
 23416  016EF2  0E00               	movlw	0
 23417  016EF4  2028               	addwfc	ethernetController_writeEtherTypeFieldToBuffer@field+1,w,c
 23418  016EF6  6E21               	movwf	enc424j600_setGPDATAWritePointer@addr+1,c
 23419  016EF8  EC69  F0B8         	call	_enc424j600_setGPDATAWritePointer	;wreg free
 23420                           
 23421                           ;ENC424J600.c: 243: uint8_t lowByte = ethtype & 0x00ff;
 23422  016EFC  0060  F094  F030   	movff	ethernetController_writeEtherTypeFieldToBuffer@ethtype,ethernetController_writeEt
      +                          herTypeFieldToBuffer@lowByte
 23423                           
 23424                           ;ENC424J600.c: 244: uint8_t highByte = (ethtype & 0xff00) >> 8;
 23425  016F02  5026               	movf	ethernetController_writeEtherTypeFieldToBuffer@ethtype+1,w,c
 23426  016F04  6E31               	movwf	ethernetController_writeEtherTypeFieldToBuffer@highByte,c
 23427                           
 23428                           ;ENC424J600.c: 245: uint8_t opcode = 0x2A;
 23429  016F06  0E2A               	movlw	42
 23430  016F08  6E32               	movwf	ethernetController_writeEtherTypeFieldToBuffer@opcode,c
 23431                           
 23432                           ;ENC424J600.c: 246: PORTBbits.RB4=0;
 23433  016F0A  013F               	movlb	63	; () banked
 23434  016F0C  99CB               	bcf	203,4,b	;volatile
 23435                           
 23436                           ;ENC424J600.c: 247: enc424j600_writeSPI(&opcode);
 23437  016F0E  0E32               	movlw	low ethernetController_writeEtherTypeFieldToBuffer@opcode
 23438  016F10  6E16               	movwf	enc424j600_writeSPI@data,c
 23439  016F12  0E00               	movlw	high ethernetController_writeEtherTypeFieldToBuffer@opcode
 23440  016F14  6E17               	movwf	enc424j600_writeSPI@data+1,c
 23441  016F16  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 23442                           
 23443                           ;ENC424J600.c: 248: enc424j600_writeSPI(&highByte);
 23444  016F1A  0E31               	movlw	low ethernetController_writeEtherTypeFieldToBuffer@highByte
 23445  016F1C  6E16               	movwf	enc424j600_writeSPI@data,c
 23446  016F1E  0E00               	movlw	high ethernetController_writeEtherTypeFieldToBuffer@highByte
 23447  016F20  6E17               	movwf	enc424j600_writeSPI@data+1,c
 23448  016F22  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 23449                           
 23450                           ;ENC424J600.c: 249: enc424j600_writeSPI(&lowByte);
 23451  016F26  0E30               	movlw	low ethernetController_writeEtherTypeFieldToBuffer@lowByte
 23452  016F28  6E16               	movwf	enc424j600_writeSPI@data,c
 23453  016F2A  0E00               	movlw	high ethernetController_writeEtherTypeFieldToBuffer@lowByte
 23454  016F2C  6E17               	movwf	enc424j600_writeSPI@data+1,c
 23455  016F2E  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 23456                           
 23457                           ;ENC424J600.c: 250: PORTBbits.RB4=1;
 23458  016F32  013F               	movlb	63	; () banked
 23459  016F34  89CB               	bsf	203,4,b	;volatile
 23460                           
 23461                           ; BSR set to: 63
 23462  016F36  0012               	return		;funcret
 23463  016F38                     __end_of_ethernetController_writeEtherTypeFieldToBuffer:
 23464                           	opt stack 0
 23465                           
 23466 ;; *************** function _ethernetController_writeDestinationMACAddress *****************
 23467 ;; Defined at:
 23468 ;;		line 228 in file "src/enc424j600/ENC424J600.c"
 23469 ;; Parameters:    Size  Location     Type
 23470 ;;  addr            6   36[COMRAM] struct macaddress
 23471 ;;  field           9   42[COMRAM] struct memoryField
 23472 ;; Auto vars:     Size  Location     Type
 23473 ;;  i               1    7[BANK0 ] unsigned char 
 23474 ;;  i               1    8[BANK0 ] unsigned char 
 23475 ;;  data            6    0[BANK0 ] unsigned char [6]
 23476 ;;  opcode          1    6[BANK0 ] unsigned char 
 23477 ;; Return value:  Size  Location     Type
 23478 ;;                  1    wreg      void 
 23479 ;; Registers used:
 23480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23481 ;; Tracked objects:
 23482 ;;		On entry : 0/0
 23483 ;;		On exit  : 0/0
 23484 ;;		Unchanged: 0/0
 23485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23486 ;;      Params:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23487 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23489 ;;      Totals:        15       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23490 ;;Total ram usage:       24 bytes
 23491 ;; Hardware stack levels used:    1
 23492 ;; Hardware stack levels required when called:    7
 23493 ;; This function calls:
 23494 ;;		_enc424j600_setGPDATAWritePointer
 23495 ;;		_enc424j600_writeSPI
 23496 ;; This function is called by:
 23497 ;;		_ethernet_txFrameRequest
 23498 ;;		_ipv4_sendFrame
 23499 ;; This function uses a non-reentrant model
 23500 ;;
 23501                           
 23502                           	psect	text108
 23503  016456                     __ptext108:
 23504                           	opt stack 0
 23505  016456                     _ethernetController_writeDestinationMACAddress:
 23506                           	opt stack 20
 23507                           
 23508                           ;ENC424J600.c: 229: enc424j600_setGPDATAWritePointer(field.start);
 23509                           
 23510                           ; BSR set to: 63
 23511                           ;incstack = 0
 23512  016456  0060  F0AC  F020   	movff	ethernetController_writeDestinationMACAddress@field,enc424j600_setGPDATAWritePoin
      +                          ter@addr
 23513  01645C  0060  F0B0  F021   	movff	ethernetController_writeDestinationMACAddress@field+1,enc424j600_setGPDATAWritePo
      +                          inter@addr+1
 23514  016462  EC69  F0B8         	call	_enc424j600_setGPDATAWritePointer	;wreg free
 23515                           
 23516                           ;ENC424J600.c: 230: uint8_t data[6];
 23517                           ;ENC424J600.c: 231: for (uint8_t i = 0; i < 6; i++)
 23518  016466  0E00               	movlw	0
 23519  016468  0100               	movlb	0	; () banked
 23520  01646A  6F68               	movwf	ethernetController_writeDestinationMACAddress@i& (0+255),b
 23521  01646C                     l9718:
 23522                           
 23523                           ; BSR set to: 0
 23524  01646C  0E05               	movlw	5
 23525  01646E  6568               	cpfsgt	ethernetController_writeDestinationMACAddress@i& (0+255),b
 23526  016470  D001               	goto	l146
 23527  016472  D015               	goto	u11160
 23528  016474                     l146:
 23529                           
 23530                           ; BSR set to: 0
 23531                           ;ENC424J600.c: 232: data[i] = addr.address[i];
 23532                           
 23533                           ; BSR set to: 0
 23534  016474  5168               	movf	ethernetController_writeDestinationMACAddress@i& (0+255),w,b
 23535  016476  0D01               	mullw	1
 23536  016478  0E25               	movlw	low ethernetController_writeDestinationMACAddress@addr
 23537  01647A  24F3               	addwf	16371,w,c
 23538  01647C  6ED9               	movwf	16345,c
 23539  01647E  0E00               	movlw	high ethernetController_writeDestinationMACAddress@addr
 23540  016480  20F4               	addwfc	16372,w,c
 23541  016482  6EDA               	movwf	16346,c
 23542  016484  5168               	movf	ethernetController_writeDestinationMACAddress@i& (0+255),w,b
 23543  016486  0D01               	mullw	1
 23544  016488  0E60               	movlw	low ethernetController_writeDestinationMACAddress@data
 23545  01648A  24F3               	addwf	16371,w,c
 23546  01648C  6EE1               	movwf	16353,c
 23547  01648E  0E00               	movlw	high ethernetController_writeDestinationMACAddress@data
 23548  016490  20F4               	addwfc	16372,w,c
 23549  016492  6EE2               	movwf	16354,c
 23550  016494  006F FF7F FFE7     	movff	16351,16359
 23551                           
 23552                           ; BSR set to: 0
 23553  01649A  2B68               	incf	ethernetController_writeDestinationMACAddress@i& (0+255),f,b
 23554  01649C  D7E7               	goto	l9718
 23555  01649E                     u11160:
 23556                           
 23557                           ; BSR set to: 0
 23558                           ;ENC424J600.c: 233: uint8_t opcode = 0x2A;
 23559                           
 23560                           ; BSR set to: 0
 23561  01649E  0E2A               	movlw	42
 23562  0164A0  6F66               	movwf	ethernetController_writeDestinationMACAddress@opcode& (0+255),b
 23563                           
 23564                           ; BSR set to: 0
 23565                           ;ENC424J600.c: 234: PORTBbits.RB4=0;
 23566  0164A2  013F               	movlb	63	; () banked
 23567  0164A4  99CB               	bcf	203,4,b	;volatile
 23568                           
 23569                           ; BSR set to: 63
 23570                           ;ENC424J600.c: 235: enc424j600_writeSPI(&opcode);
 23571  0164A6  0E66               	movlw	low ethernetController_writeDestinationMACAddress@opcode
 23572  0164A8  6E16               	movwf	enc424j600_writeSPI@data,c
 23573  0164AA  0E00               	movlw	high ethernetController_writeDestinationMACAddress@opcode
 23574  0164AC  6E17               	movwf	enc424j600_writeSPI@data+1,c
 23575  0164AE  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 23576                           
 23577                           ;ENC424J600.c: 236: for (uint8_t i = 0; i < 6; i++)
 23578  0164B2  0E00               	movlw	0
 23579  0164B4  0100               	movlb	0	; () banked
 23580  0164B6  6F67               	movwf	ethernetController_writeDestinationMACAddress@i_539& (0+255),b
 23581  0164B8                     l9736:
 23582                           
 23583                           ; BSR set to: 0
 23584  0164B8  0E05               	movlw	5
 23585  0164BA  6567               	cpfsgt	ethernetController_writeDestinationMACAddress@i_539& (0+255),b
 23586  0164BC  D001               	goto	l148
 23587  0164BE  D00D               	goto	u11180
 23588  0164C0                     l148:
 23589                           
 23590                           ; BSR set to: 0
 23591                           ;ENC424J600.c: 237: enc424j600_writeSPI(&data[i]);
 23592                           
 23593                           ; BSR set to: 0
 23594  0164C0  5167               	movf	ethernetController_writeDestinationMACAddress@i_539& (0+255),w,b
 23595  0164C2  0D01               	mullw	1
 23596  0164C4  0E60               	movlw	low ethernetController_writeDestinationMACAddress@data
 23597  0164C6  24F3               	addwf	16371,w,c
 23598  0164C8  6E16               	movwf	enc424j600_writeSPI@data,c
 23599  0164CA  0E00               	movlw	high ethernetController_writeDestinationMACAddress@data
 23600  0164CC  20F4               	addwfc	16372,w,c
 23601  0164CE  6E17               	movwf	enc424j600_writeSPI@data+1,c
 23602  0164D0  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 23603  0164D4  0100               	movlb	0	; () banked
 23604  0164D6  2B67               	incf	ethernetController_writeDestinationMACAddress@i_539& (0+255),f,b
 23605  0164D8  D7EF               	goto	l9736
 23606  0164DA                     u11180:
 23607                           
 23608                           ; BSR set to: 0
 23609                           ;ENC424J600.c: 238: PORTBbits.RB4=1;
 23610  0164DA  013F               	movlb	63	; () banked
 23611  0164DC  89CB               	bsf	203,4,b	;volatile
 23612                           
 23613                           ; BSR set to: 63
 23614  0164DE  0012               	return		;funcret
 23615  0164E0                     __end_of_ethernetController_writeDestinationMACAddress:
 23616                           	opt stack 0
 23617                           
 23618 ;; *************** function _ethernetController_streamToTransmitBuffer *****************
 23619 ;; Defined at:
 23620 ;;		line 208 in file "src/enc424j600/ENC424J600.c"
 23621 ;; Parameters:    Size  Location     Type
 23622 ;;  data            1    wreg     unsigned char 
 23623 ;;  field           9   36[COMRAM] struct memoryField
 23624 ;; Auto vars:     Size  Location     Type
 23625 ;;  data            1   49[COMRAM] unsigned char 
 23626 ;;  opcode          1   50[COMRAM] unsigned char 
 23627 ;; Return value:  Size  Location     Type
 23628 ;;                  1    wreg      void 
 23629 ;; Registers used:
 23630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23631 ;; Tracked objects:
 23632 ;;		On entry : 0/0
 23633 ;;		On exit  : 0/0
 23634 ;;		Unchanged: 0/0
 23635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23636 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23638 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23639 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23640 ;;Total ram usage:       15 bytes
 23641 ;; Hardware stack levels used:    1
 23642 ;; Hardware stack levels required when called:    7
 23643 ;; This function calls:
 23644 ;;		_enc424j600_setGPDATAWritePointer
 23645 ;;		_enc424j600_writeSPI
 23646 ;; This function is called by:
 23647 ;;		_arp_send
 23648 ;;		_ipv4_streamToTransmissionBuffer
 23649 ;; This function uses a non-reentrant model
 23650 ;;
 23651                           
 23652                           	psect	text109
 23653  0166EA                     __ptext109:
 23654                           	opt stack 0
 23655  0166EA                     _ethernetController_streamToTransmitBuffer:
 23656                           	opt stack 21
 23657                           
 23658                           ; BSR set to: 63
 23659                           ;incstack = 0
 23660                           ;ethernetController_streamToTransmitBuffer@data stored from wreg
 23661  0166EA  6E32               	movwf	ethernetController_streamToTransmitBuffer@data,c
 23662                           
 23663                           ;ENC424J600.c: 209: uint8_t opcode;
 23664                           ;ENC424J600.c: 210: uint16_t static pointer = 0;
 23665                           ;ENC424J600.c: 211: if (pointer == 0) {
 23666  0166EC  5039               	movf	ethernetController_streamToTransmitBuffer@pointer,w,c
 23667  0166EE  103A               	iorwf	ethernetController_streamToTransmitBuffer@pointer+1,w,c
 23668  0166F0  A4D8               	btfss	16344,2,c
 23669  0166F2  D012               	goto	l140
 23670                           
 23671                           ;ENC424J600.c: 212: enc424j600_setGPDATAWritePointer(field.start);
 23672  0166F4  0060  F094  F020   	movff	ethernetController_streamToTransmitBuffer@field,enc424j600_setGPDATAWritePointer@
      +                          addr
 23673  0166FA  0060  F098  F021   	movff	ethernetController_streamToTransmitBuffer@field+1,enc424j600_setGPDATAWritePointe
      +                          r@addr+1
 23674  016700  EC69  F0B8         	call	_enc424j600_setGPDATAWritePointer	;wreg free
 23675                           
 23676                           ;ENC424J600.c: 213: opcode = 0x2A;
 23677  016704  0E2A               	movlw	42
 23678  016706  6E33               	movwf	ethernetController_streamToTransmitBuffer@opcode,c
 23679                           
 23680                           ;ENC424J600.c: 214: PORTBbits.RB4=0;
 23681  016708  013F               	movlb	63	; () banked
 23682  01670A  99CB               	bcf	203,4,b	;volatile
 23683                           
 23684                           ; BSR set to: 63
 23685                           ;ENC424J600.c: 215: enc424j600_writeSPI(&opcode);
 23686  01670C  0E33               	movlw	low ethernetController_streamToTransmitBuffer@opcode
 23687  01670E  6E16               	movwf	enc424j600_writeSPI@data,c
 23688  016710  0E00               	movlw	high ethernetController_streamToTransmitBuffer@opcode
 23689  016712  6E17               	movwf	enc424j600_writeSPI@data+1,c
 23690  016714  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 23691  016718                     l140:
 23692                           
 23693                           ;ENC424J600.c: 216: }
 23694                           ;ENC424J600.c: 218: enc424j600_writeSPI(&data);
 23695  016718  0E32               	movlw	low ethernetController_streamToTransmitBuffer@data
 23696  01671A  6E16               	movwf	enc424j600_writeSPI@data,c
 23697  01671C  0E00               	movlw	high ethernetController_streamToTransmitBuffer@data
 23698  01671E  6E17               	movwf	enc424j600_writeSPI@data+1,c
 23699  016720  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 23700                           
 23701                           ;ENC424J600.c: 220: if (pointer == field.length - 1) {
 23702  016724  0EFF               	movlw	255
 23703  016726  6E2E               	movwf	??_ethernetController_streamToTransmitBuffer& (0+255),c
 23704  016728  0EFF               	movlw	255
 23705  01672A  6E2F               	movwf	(??_ethernetController_streamToTransmitBuffer+1)& (0+255),c
 23706  01672C  EE20  F029         	lfsr	2,ethernetController_streamToTransmitBuffer@field+4
 23707  016730  006F FF78  F030    	movff	16350,??_ethernetController_streamToTransmitBuffer+2
 23708  016736  006F FF74  F031    	movff	16349,??_ethernetController_streamToTransmitBuffer+3
 23709  01673C  502E               	movf	??_ethernetController_streamToTransmitBuffer,w,c
 23710  01673E  2630               	addwf	??_ethernetController_streamToTransmitBuffer+2,f,c
 23711  016740  502F               	movf	??_ethernetController_streamToTransmitBuffer+1,w,c
 23712  016742  2231               	addwfc	??_ethernetController_streamToTransmitBuffer+3,f,c
 23713  016744  5039               	movf	ethernetController_streamToTransmitBuffer@pointer,w,c
 23714  016746  1830               	xorwf	??_ethernetController_streamToTransmitBuffer+2,w,c
 23715  016748  E10B               	bnz	l9952
 23716  01674A  503A               	movf	ethernetController_streamToTransmitBuffer@pointer+1,w,c
 23717  01674C  1831               	xorwf	??_ethernetController_streamToTransmitBuffer+3,w,c
 23718  01674E  A4D8               	btfss	16344,2,c
 23719  016750  D007               	goto	l141
 23720                           
 23721                           ;ENC424J600.c: 221: PORTBbits.RB4=1;
 23722  016752  013F               	movlb	63	; () banked
 23723  016754  89CB               	bsf	203,4,b	;volatile
 23724                           
 23725                           ; BSR set to: 63
 23726                           ;ENC424J600.c: 222: pointer = 0;
 23727  016756  0E00               	movlw	0
 23728  016758  6E3A               	movwf	ethernetController_streamToTransmitBuffer@pointer+1,c
 23729  01675A  0E00               	movlw	0
 23730  01675C  6E39               	movwf	ethernetController_streamToTransmitBuffer@pointer,c
 23731                           
 23732                           ;ENC424J600.c: 223: } else {
 23733  01675E  0012               	return	
 23734  016760                     l141:
 23735  016760                     l9952:
 23736                           
 23737                           ;ENC424J600.c: 224: pointer++;
 23738  016760  4A39               	infsnz	ethernetController_streamToTransmitBuffer@pointer,f,c
 23739  016762  2A3A               	incf	ethernetController_streamToTransmitBuffer@pointer+1,f,c
 23740  016764  0012               	return	
 23741  016766                     __end_of_ethernetController_streamToTransmitBuffer:
 23742                           	opt stack 0
 23743                           
 23744 ;; *************** function _enc424j600_setGPDATAWritePointer *****************
 23745 ;; Defined at:
 23746 ;;		line 627 in file "src/enc424j600/ENC424J600.c"
 23747 ;; Parameters:    Size  Location     Type
 23748 ;;  addr            2   31[COMRAM] unsigned int 
 23749 ;; Auto vars:     Size  Location     Type
 23750 ;;  highByte        1   35[COMRAM] unsigned char 
 23751 ;;  lowByte         1   34[COMRAM] unsigned char 
 23752 ;;  opcode          1   33[COMRAM] unsigned char 
 23753 ;; Return value:  Size  Location     Type
 23754 ;;                  1    wreg      void 
 23755 ;; Registers used:
 23756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23757 ;; Tracked objects:
 23758 ;;		On entry : 0/0
 23759 ;;		On exit  : 0/0
 23760 ;;		Unchanged: 0/0
 23761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23763 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23765 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23766 ;;Total ram usage:        5 bytes
 23767 ;; Hardware stack levels used:    1
 23768 ;; Hardware stack levels required when called:    6
 23769 ;; This function calls:
 23770 ;;		_enc424j600_writeSPI
 23771 ;; This function is called by:
 23772 ;;		_ethernetController_streamToTransmitBuffer
 23773 ;;		_ethernetController_writeDestinationMACAddress
 23774 ;;		_ethernetController_writeEtherTypeFieldToBuffer
 23775 ;; This function uses a non-reentrant model
 23776 ;;
 23777                           
 23778                           	psect	text110
 23779  0170D2                     __ptext110:
 23780                           	opt stack 0
 23781  0170D2                     _enc424j600_setGPDATAWritePointer:
 23782                           	opt stack 20
 23783                           
 23784                           ;ENC424J600.c: 628: uint8_t opcode = 0x6C;
 23785                           
 23786                           ;incstack = 0
 23787  0170D2  0E6C               	movlw	108
 23788  0170D4  6E22               	movwf	enc424j600_setGPDATAWritePointer@opcode,c
 23789                           
 23790                           ;ENC424J600.c: 629: uint8_t lowByte = addr & 0x00ff;
 23791  0170D6  0060  F080  F023   	movff	enc424j600_setGPDATAWritePointer@addr,enc424j600_setGPDATAWritePointer@lowByte
 23792                           
 23793                           ;ENC424J600.c: 630: uint8_t highByte = (addr & 0xff00) >> 8;
 23794  0170DC  5021               	movf	enc424j600_setGPDATAWritePointer@addr+1,w,c
 23795  0170DE  6E24               	movwf	enc424j600_setGPDATAWritePointer@highByte,c
 23796                           
 23797                           ;ENC424J600.c: 631: PORTBbits.RB4=0;
 23798  0170E0  013F               	movlb	63	; () banked
 23799  0170E2  99CB               	bcf	203,4,b	;volatile
 23800                           
 23801                           ; BSR set to: 63
 23802                           ;ENC424J600.c: 632: enc424j600_writeSPI(&opcode);
 23803  0170E4  0E22               	movlw	low enc424j600_setGPDATAWritePointer@opcode
 23804  0170E6  6E16               	movwf	enc424j600_writeSPI@data,c
 23805  0170E8  0E00               	movlw	high enc424j600_setGPDATAWritePointer@opcode
 23806  0170EA  6E17               	movwf	enc424j600_writeSPI@data+1,c
 23807  0170EC  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 23808                           
 23809                           ;ENC424J600.c: 633: enc424j600_writeSPI(&lowByte);
 23810  0170F0  0E23               	movlw	low enc424j600_setGPDATAWritePointer@lowByte
 23811  0170F2  6E16               	movwf	enc424j600_writeSPI@data,c
 23812  0170F4  0E00               	movlw	high enc424j600_setGPDATAWritePointer@lowByte
 23813  0170F6  6E17               	movwf	enc424j600_writeSPI@data+1,c
 23814  0170F8  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 23815                           
 23816                           ;ENC424J600.c: 634: enc424j600_writeSPI(&highByte);
 23817  0170FC  0E24               	movlw	low enc424j600_setGPDATAWritePointer@highByte
 23818  0170FE  6E16               	movwf	enc424j600_writeSPI@data,c
 23819  017100  0E00               	movlw	high enc424j600_setGPDATAWritePointer@highByte
 23820  017102  6E17               	movwf	enc424j600_writeSPI@data+1,c
 23821  017104  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 23822                           
 23823                           ;ENC424J600.c: 635: PORTBbits.RB4=1;
 23824  017108  013F               	movlb	63	; () banked
 23825  01710A  89CB               	bsf	203,4,b	;volatile
 23826                           
 23827                           ; BSR set to: 63
 23828  01710C  0012               	return		;funcret
 23829  01710E                     __end_of_enc424j600_setGPDATAWritePointer:
 23830                           	opt stack 0
 23831                           
 23832 ;; *************** function _ethernetController_sendPacket *****************
 23833 ;; Defined at:
 23834 ;;		line 201 in file "src/enc424j600/ENC424J600.c"
 23835 ;; Parameters:    Size  Location     Type
 23836 ;;  field           9   39[COMRAM] struct memoryField
 23837 ;; Auto vars:     Size  Location     Type
 23838 ;;		None
 23839 ;; Return value:  Size  Location     Type
 23840 ;;                  1    wreg      void 
 23841 ;; Registers used:
 23842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23843 ;; Tracked objects:
 23844 ;;		On entry : 0/0
 23845 ;;		On exit  : 0/0
 23846 ;;		Unchanged: 0/0
 23847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23848 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23851 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23852 ;;Total ram usage:        9 bytes
 23853 ;; Hardware stack levels used:    1
 23854 ;; Hardware stack levels required when called:    8
 23855 ;; This function calls:
 23856 ;;		_enc424j600_setTXLength
 23857 ;;		_enc424j600_setTXStartAddress
 23858 ;;		_enc424j600_writeSingleByte
 23859 ;;		_memory_txFrameClear
 23860 ;; This function is called by:
 23861 ;;		_arp_send
 23862 ;;		_ipv4_sendFrame
 23863 ;; This function uses a non-reentrant model
 23864 ;;
 23865                           
 23866                           	psect	text111
 23867  017356                     __ptext111:
 23868                           	opt stack 0
 23869  017356                     _ethernetController_sendPacket:
 23870                           	opt stack 20
 23871                           
 23872                           ;ENC424J600.c: 202: enc424j600_setTXStartAddress(field.start);
 23873                           
 23874                           ; BSR set to: 63
 23875                           ;incstack = 0
 23876  017356  0060  F0A0  F024   	movff	ethernetController_sendPacket@field,enc424j600_setTXStartAddress@addr
 23877  01735C  0060  F0A4  F025   	movff	ethernetController_sendPacket@field+1,enc424j600_setTXStartAddress@addr+1
 23878  017362  EC2B  F0BA         	call	_enc424j600_setTXStartAddress	;wreg free
 23879                           
 23880                           ;ENC424J600.c: 203: enc424j600_setTXLength(field.length);
 23881  017366  0060  F0B0  F024   	movff	ethernetController_sendPacket@field+4,enc424j600_setTXLength@len
 23882  01736C  0060  F0B4  F025   	movff	ethernetController_sendPacket@field+5,enc424j600_setTXLength@len+1
 23883  017372  EC3F  F0BA         	call	_enc424j600_setTXLength	;wreg free
 23884                           
 23885                           ;ENC424J600.c: 204: enc424j600_writeSingleByte(0b11010100);
 23886  017376  0ED4               	movlw	212
 23887  017378  EC22  F0BB         	call	_enc424j600_writeSingleByte
 23888                           
 23889                           ;ENC424J600.c: 205: memory_txFrameClear(field.index);
 23890  01737C  5030               	movf	ethernetController_sendPacket@field+8,w,c
 23891  01737E  ECAF  F0BA         	call	_memory_txFrameClear
 23892  017382  0012               	return		;funcret
 23893  017384                     __end_of_ethernetController_sendPacket:
 23894                           	opt stack 0
 23895                           
 23896 ;; *************** function _memory_txFrameClear *****************
 23897 ;; Defined at:
 23898 ;;		line 222 in file "src/mem/memoryController.c"
 23899 ;; Parameters:    Size  Location     Type
 23900 ;;  index           1    wreg     unsigned char 
 23901 ;; Auto vars:     Size  Location     Type
 23902 ;;  index           1   21[COMRAM] unsigned char 
 23903 ;; Return value:  Size  Location     Type
 23904 ;;                  1    wreg      void 
 23905 ;; Registers used:
 23906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23907 ;; Tracked objects:
 23908 ;;		On entry : 0/0
 23909 ;;		On exit  : 0/0
 23910 ;;		Unchanged: 0/0
 23911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23916 ;;Total ram usage:        1 bytes
 23917 ;; Hardware stack levels used:    1
 23918 ;; Hardware stack levels required when called:    4
 23919 ;; This function calls:
 23920 ;;		Nothing
 23921 ;; This function is called by:
 23922 ;;		_ethernetController_sendPacket
 23923 ;; This function uses a non-reentrant model
 23924 ;;
 23925                           
 23926                           	psect	text112
 23927  01755E                     __ptext112:
 23928                           	opt stack 0
 23929  01755E                     _memory_txFrameClear:
 23930                           	opt stack 23
 23931                           
 23932                           ;incstack = 0
 23933                           ;memory_txFrameClear@index stored from wreg
 23934  01755E  6E16               	movwf	memory_txFrameClear@index,c
 23935                           
 23936                           ;memoryController.c: 223: occupiedMemory[index].fIsAssigned = 0;
 23937  017560  5016               	movf	memory_txFrameClear@index,w,c
 23938  017562  0D09               	mullw	9
 23939  017564  0E06               	movlw	6
 23940  017566  26F3               	addwf	16371,f,c
 23941  017568  0E00               	movlw	0
 23942  01756A  22F4               	addwfc	16372,f,c
 23943  01756C  0E00               	movlw	low _occupiedMemory
 23944  01756E  24F3               	addwf	16371,w,c
 23945  017570  6ED9               	movwf	16345,c
 23946  017572  0E03               	movlw	high _occupiedMemory
 23947  017574  20F4               	addwfc	16372,w,c
 23948  017576  6EDA               	movwf	16346,c
 23949  017578  0E00               	movlw	0
 23950  01757A  6EDF               	movwf	16351,c
 23951  01757C  0012               	return		;funcret
 23952  01757E                     __end_of_memory_txFrameClear:
 23953                           	opt stack 0
 23954                           
 23955 ;; *************** function _enc424j600_writeSingleByte *****************
 23956 ;; Defined at:
 23957 ;;		line 530 in file "src/enc424j600/ENC424J600.c"
 23958 ;; Parameters:    Size  Location     Type
 23959 ;;  opcode          1    wreg     unsigned char 
 23960 ;; Auto vars:     Size  Location     Type
 23961 ;;  opcode          1   31[COMRAM] unsigned char 
 23962 ;; Return value:  Size  Location     Type
 23963 ;;                  1    wreg      void 
 23964 ;; Registers used:
 23965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23966 ;; Tracked objects:
 23967 ;;		On entry : 0/0
 23968 ;;		On exit  : 0/0
 23969 ;;		Unchanged: 0/0
 23970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23972 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23974 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23975 ;;Total ram usage:        1 bytes
 23976 ;; Hardware stack levels used:    1
 23977 ;; Hardware stack levels required when called:    6
 23978 ;; This function calls:
 23979 ;;		_enc424j600_writeSPI
 23980 ;; This function is called by:
 23981 ;;		_ethernetController_softReset
 23982 ;;		_ethernetController_sendPacket
 23983 ;;		_ethernetController_dropPacket
 23984 ;;		_enc424j600_enableReception
 23985 ;;		_enc424j600_disableReception
 23986 ;; This function uses a non-reentrant model
 23987 ;;
 23988                           
 23989                           	psect	text113
 23990  017644                     __ptext113:
 23991                           	opt stack 0
 23992  017644                     _enc424j600_writeSingleByte:
 23993                           	opt stack 21
 23994                           
 23995                           ;incstack = 0
 23996                           ;enc424j600_writeSingleByte@opcode stored from wreg
 23997  017644  6E20               	movwf	enc424j600_writeSingleByte@opcode,c
 23998                           
 23999                           ;ENC424J600.c: 531: PORTBbits.RB4=0;
 24000  017646  013F               	movlb	63	; () banked
 24001  017648  99CB               	bcf	203,4,b	;volatile
 24002                           
 24003                           ; BSR set to: 63
 24004                           ;ENC424J600.c: 532: enc424j600_writeSPI(&opcode);
 24005  01764A  0E20               	movlw	low enc424j600_writeSingleByte@opcode
 24006  01764C  6E16               	movwf	enc424j600_writeSPI@data,c
 24007  01764E  0E00               	movlw	high enc424j600_writeSingleByte@opcode
 24008  017650  6E17               	movwf	enc424j600_writeSPI@data+1,c
 24009  017652  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 24010                           
 24011                           ;ENC424J600.c: 533: PORTBbits.RB4=1;
 24012  017656  013F               	movlb	63	; () banked
 24013  017658  89CB               	bsf	203,4,b	;volatile
 24014                           
 24015                           ; BSR set to: 63
 24016  01765A  0012               	return		;funcret
 24017  01765C                     __end_of_enc424j600_writeSingleByte:
 24018                           	opt stack 0
 24019                           
 24020 ;; *************** function _enc424j600_setTXStartAddress *****************
 24021 ;; Defined at:
 24022 ;;		line 620 in file "src/enc424j600/ENC424J600.c"
 24023 ;; Parameters:    Size  Location     Type
 24024 ;;  addr            2   35[COMRAM] unsigned int 
 24025 ;; Auto vars:     Size  Location     Type
 24026 ;;  highByte        1   38[COMRAM] unsigned char 
 24027 ;;  lowByte         1   37[COMRAM] unsigned char 
 24028 ;; Return value:  Size  Location     Type
 24029 ;;                  1    wreg      void 
 24030 ;; Registers used:
 24031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24032 ;; Tracked objects:
 24033 ;;		On entry : 0/0
 24034 ;;		On exit  : 0/0
 24035 ;;		Unchanged: 0/0
 24036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24038 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24040 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24041 ;;Total ram usage:        4 bytes
 24042 ;; Hardware stack levels used:    1
 24043 ;; Hardware stack levels required when called:    7
 24044 ;; This function calls:
 24045 ;;		_enc424j600_writeControlRegisterUnbanked
 24046 ;; This function is called by:
 24047 ;;		_ethernetController_sendPacket
 24048 ;; This function uses a non-reentrant model
 24049 ;;
 24050                           
 24051                           	psect	text114
 24052  017456                     __ptext114:
 24053                           	opt stack 0
 24054  017456                     _enc424j600_setTXStartAddress:
 24055                           	opt stack 20
 24056                           
 24057                           ;ENC424J600.c: 621: uint8_t lowByte = addr & 0xff;
 24058                           
 24059                           ; BSR set to: 63
 24060                           ;incstack = 0
 24061  017456  0060  F090  F026   	movff	enc424j600_setTXStartAddress@addr,enc424j600_setTXStartAddress@lowByte
 24062                           
 24063                           ;ENC424J600.c: 622: uint8_t highByte = (addr & 0xff00) >> 8;
 24064  01745C  5025               	movf	enc424j600_setTXStartAddress@addr+1,w,c
 24065  01745E  6E27               	movwf	enc424j600_setTXStartAddress@highByte,c
 24066                           
 24067                           ;ENC424J600.c: 623: enc424j600_writeControlRegisterUnbanked(0x00 + 0x00, &lowByte);
 24068  017460  0E26               	movlw	low enc424j600_setTXStartAddress@lowByte
 24069  017462  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 24070  017464  0E00               	movlw	high enc424j600_setTXStartAddress@lowByte
 24071  017466  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 24072  017468  0E00               	movlw	0
 24073  01746A  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 24074                           
 24075                           ;ENC424J600.c: 624: enc424j600_writeControlRegisterUnbanked(0x01 + 0x00, &highByte);
 24076  01746E  0E27               	movlw	low enc424j600_setTXStartAddress@highByte
 24077  017470  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 24078  017472  0E00               	movlw	high enc424j600_setTXStartAddress@highByte
 24079  017474  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 24080  017476  0E01               	movlw	1
 24081  017478  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 24082  01747C  0012               	return		;funcret
 24083  01747E                     __end_of_enc424j600_setTXStartAddress:
 24084                           	opt stack 0
 24085                           
 24086 ;; *************** function _enc424j600_setTXLength *****************
 24087 ;; Defined at:
 24088 ;;		line 595 in file "src/enc424j600/ENC424J600.c"
 24089 ;; Parameters:    Size  Location     Type
 24090 ;;  len             2   35[COMRAM] unsigned int 
 24091 ;; Auto vars:     Size  Location     Type
 24092 ;;  highByte        1   38[COMRAM] unsigned char 
 24093 ;;  lowByte         1   37[COMRAM] unsigned char 
 24094 ;; Return value:  Size  Location     Type
 24095 ;;                  1    wreg      void 
 24096 ;; Registers used:
 24097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24098 ;; Tracked objects:
 24099 ;;		On entry : 0/0
 24100 ;;		On exit  : 0/0
 24101 ;;		Unchanged: 0/0
 24102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24104 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24106 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24107 ;;Total ram usage:        4 bytes
 24108 ;; Hardware stack levels used:    1
 24109 ;; Hardware stack levels required when called:    7
 24110 ;; This function calls:
 24111 ;;		_enc424j600_writeControlRegisterUnbanked
 24112 ;; This function is called by:
 24113 ;;		_ethernetController_sendPacket
 24114 ;; This function uses a non-reentrant model
 24115 ;;
 24116                           
 24117                           	psect	text115
 24118  01747E                     __ptext115:
 24119                           	opt stack 0
 24120  01747E                     _enc424j600_setTXLength:
 24121                           	opt stack 20
 24122                           
 24123                           ;ENC424J600.c: 596: uint8_t lowByte = len & 0x00ff;
 24124                           
 24125                           ;incstack = 0
 24126  01747E  0060  F090  F026   	movff	enc424j600_setTXLength@len,enc424j600_setTXLength@lowByte
 24127                           
 24128                           ;ENC424J600.c: 597: uint8_t highByte = len >> 8;
 24129  017484  5025               	movf	enc424j600_setTXLength@len+1,w,c
 24130  017486  6E27               	movwf	enc424j600_setTXLength@highByte,c
 24131                           
 24132                           ;ENC424J600.c: 598: enc424j600_writeControlRegisterUnbanked(0x02 + 0x00, &lowByte);
 24133  017488  0E26               	movlw	low enc424j600_setTXLength@lowByte
 24134  01748A  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 24135  01748C  0E00               	movlw	high enc424j600_setTXLength@lowByte
 24136  01748E  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 24137  017490  0E02               	movlw	2
 24138  017492  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 24139                           
 24140                           ;ENC424J600.c: 599: enc424j600_writeControlRegisterUnbanked(0x03 + 0x00, &highByte);
 24141  017496  0E27               	movlw	low enc424j600_setTXLength@highByte
 24142  017498  6E20               	movwf	enc424j600_writeControlRegisterUnbanked@data,c
 24143  01749A  0E00               	movlw	high enc424j600_setTXLength@highByte
 24144  01749C  6E21               	movwf	enc424j600_writeControlRegisterUnbanked@data+1,c
 24145  01749E  0E03               	movlw	3
 24146  0174A0  ECF9  F0B8         	call	_enc424j600_writeControlRegisterUnbanked
 24147  0174A4  0012               	return		;funcret
 24148  0174A6                     __end_of_enc424j600_setTXLength:
 24149                           	opt stack 0
 24150                           
 24151 ;; *************** function _enc424j600_writeControlRegisterUnbanked *****************
 24152 ;; Defined at:
 24153 ;;		line 536 in file "src/enc424j600/ENC424J600.c"
 24154 ;; Parameters:    Size  Location     Type
 24155 ;;  addr            1    wreg     unsigned char 
 24156 ;;  data            2   31[COMRAM] PTR unsigned char 
 24157 ;;		 -> enc424j600_clearInterruptFlag@temp(1), enc424j600_disable@temp(1), enc424j600_enable@temp(1), enc424j600_disable
      +AutoMACInsertion@temp(1), 
 24158 ;;		 -> enc424j600_enableAutoMACInsertion@temp(1), enc424j600_setRXTailPointer@highByte(1), enc424j600_setRXTailPointer@
      +lowByte(1), enc424j600_setRXBufferStartAddress@highByte(1), 
 24159 ;;		 -> enc424j600_setRXBufferStartAddress@lowByte(1), enc424j600_setTXStartAddress@highByte(1), enc424j600_setTXStartAd
      +dress@lowByte(1), enc424j600_setTXLength@highByte(1), 
 24160 ;;		 -> enc424j600_setTXLength@lowByte(1), enc424j600_readPHYRegister@temp(1), enc424j600_readPHYRegister@unusedBits(1),
      + enc424j600_readPHYRegister@PHYaddress(1), 
 24161 ;;		 -> ethernetController_setLEDConfig@data(1), mac.address(6), ethernetController_setMacAddress@mac(6), ethernetContro
      +ller_softReset@dataToSend(2), 
 24162 ;; Auto vars:     Size  Location     Type
 24163 ;;  addr            1   33[COMRAM] unsigned char 
 24164 ;;  opcode          1   34[COMRAM] unsigned char 
 24165 ;; Return value:  Size  Location     Type
 24166 ;;                  1    wreg      void 
 24167 ;; Registers used:
 24168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24169 ;; Tracked objects:
 24170 ;;		On entry : 0/0
 24171 ;;		On exit  : 0/0
 24172 ;;		Unchanged: 0/0
 24173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24175 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24177 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24178 ;;Total ram usage:        4 bytes
 24179 ;; Hardware stack levels used:    1
 24180 ;; Hardware stack levels required when called:    6
 24181 ;; This function calls:
 24182 ;;		_enc424j600_writeSPI
 24183 ;; This function is called by:
 24184 ;;		_ethernetController_softReset
 24185 ;;		_ethernetController_setLEDConfig
 24186 ;;		_enc424j600_readPHYRegister
 24187 ;;		_enc424j600_setTXLength
 24188 ;;		_enc424j600_setTXStartAddress
 24189 ;;		_enc424j600_setRXBufferStartAddress
 24190 ;;		_enc424j600_setRXTailPointer
 24191 ;;		_enc424j600_enableAutoMACInsertion
 24192 ;;		_enc424j600_clearInterruptFlag
 24193 ;;		_ethernetController_setMacAddress
 24194 ;;		_enc424j600_disableAutoMACInsertion
 24195 ;;		_enc424j600_enable
 24196 ;;		_enc424j600_disable
 24197 ;; This function uses a non-reentrant model
 24198 ;;
 24199                           
 24200                           	psect	text116
 24201  0171F2                     __ptext116:
 24202                           	opt stack 0
 24203  0171F2                     _enc424j600_writeControlRegisterUnbanked:
 24204                           	opt stack 20
 24205                           
 24206                           ;incstack = 0
 24207                           ;enc424j600_writeControlRegisterUnbanked@addr stored from wreg
 24208  0171F2  6E22               	movwf	enc424j600_writeControlRegisterUnbanked@addr,c
 24209                           
 24210                           ;ENC424J600.c: 537: uint8_t opcode = 0x22;
 24211  0171F4  0E22               	movlw	34
 24212  0171F6  6E23               	movwf	enc424j600_writeControlRegisterUnbanked@opcode,c
 24213                           
 24214                           ;ENC424J600.c: 538: PORTBbits.RB4=0;
 24215  0171F8  013F               	movlb	63	; () banked
 24216  0171FA  99CB               	bcf	203,4,b	;volatile
 24217                           
 24218                           ; BSR set to: 63
 24219                           ;ENC424J600.c: 539: enc424j600_writeSPI(&opcode);
 24220  0171FC  0E23               	movlw	low enc424j600_writeControlRegisterUnbanked@opcode
 24221  0171FE  6E16               	movwf	enc424j600_writeSPI@data,c
 24222  017200  0E00               	movlw	high enc424j600_writeControlRegisterUnbanked@opcode
 24223  017202  6E17               	movwf	enc424j600_writeSPI@data+1,c
 24224  017204  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 24225                           
 24226                           ;ENC424J600.c: 540: enc424j600_writeSPI(&addr);
 24227  017208  0E22               	movlw	low enc424j600_writeControlRegisterUnbanked@addr
 24228  01720A  6E16               	movwf	enc424j600_writeSPI@data,c
 24229  01720C  0E00               	movlw	high enc424j600_writeControlRegisterUnbanked@addr
 24230  01720E  6E17               	movwf	enc424j600_writeSPI@data+1,c
 24231  017210  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 24232                           
 24233                           ;ENC424J600.c: 541: enc424j600_writeSPI(data);
 24234  017214  0060  F080  F016   	movff	enc424j600_writeControlRegisterUnbanked@data,enc424j600_writeSPI@data
 24235  01721A  0060  F084  F017   	movff	enc424j600_writeControlRegisterUnbanked@data+1,enc424j600_writeSPI@data+1
 24236  017220  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 24237                           
 24238                           ;ENC424J600.c: 542: PORTBbits.RB4=1;
 24239  017224  013F               	movlb	63	; () banked
 24240  017226  89CB               	bsf	203,4,b	;volatile
 24241                           
 24242                           ; BSR set to: 63
 24243  017228  0012               	return		;funcret
 24244  01722A                     __end_of_enc424j600_writeControlRegisterUnbanked:
 24245                           	opt stack 0
 24246                           
 24247 ;; *************** function _ethernetController_getSourceMACAddress *****************
 24248 ;; Defined at:
 24249 ;;		line 268 in file "src/enc424j600/ENC424J600.c"
 24250 ;; Parameters:    Size  Location     Type
 24251 ;;  field           9   36[COMRAM] struct memoryField
 24252 ;; Auto vars:     Size  Location     Type
 24253 ;;  temp            1   52[COMRAM] unsigned char 
 24254 ;;  i               1   53[COMRAM] unsigned char 
 24255 ;;  sourceAddres    6   46[COMRAM] struct macaddress
 24256 ;;  opcode          1   45[COMRAM] unsigned char 
 24257 ;; Return value:  Size  Location     Type
 24258 ;;                  6   36[COMRAM] struct macaddress
 24259 ;; Registers used:
 24260 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24261 ;; Tracked objects:
 24262 ;;		On entry : 0/0
 24263 ;;		On exit  : 0/0
 24264 ;;		Unchanged: 0/0
 24265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24266 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24267 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24269 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24270 ;;Total ram usage:       18 bytes
 24271 ;; Hardware stack levels used:    1
 24272 ;; Hardware stack levels required when called:    7
 24273 ;; This function calls:
 24274 ;;		_enc424j600_readSPI
 24275 ;;		_enc424j600_setERXDATAReadPointer
 24276 ;;		_enc424j600_writeSPI
 24277 ;; This function is called by:
 24278 ;;		_arp_send
 24279 ;; This function uses a non-reentrant model
 24280 ;;
 24281                           
 24282                           	psect	text117
 24283  01693C                     __ptext117:
 24284                           	opt stack 0
 24285  01693C                     _ethernetController_getSourceMACAddress:
 24286                           	opt stack 19
 24287                           
 24288                           ;ENC424J600.c: 269: macaddress_t sourceAddress;
 24289                           ;ENC424J600.c: 270: enc424j600_setERXDATAReadPointer(field.start + 14);
 24290                           
 24291                           ; BSR set to: 63
 24292                           ;incstack = 0
 24293  01693C  0E0E               	movlw	14
 24294  01693E  2425               	addwf	ethernetController_getSourceMACAddress@field,w,c
 24295  016940  6E20               	movwf	enc424j600_setERXDATAReadPointer@addr,c
 24296  016942  0E00               	movlw	0
 24297  016944  2026               	addwfc	ethernetController_getSourceMACAddress@field+1,w,c
 24298  016946  6E21               	movwf	enc424j600_setERXDATAReadPointer@addr+1,c
 24299  016948  EC87  F0B8         	call	_enc424j600_setERXDATAReadPointer	;wreg free
 24300                           
 24301                           ;ENC424J600.c: 271: uint8_t opcode = 0x2C;
 24302  01694C  0E2C               	movlw	44
 24303  01694E  6E2E               	movwf	ethernetController_getSourceMACAddress@opcode,c
 24304                           
 24305                           ;ENC424J600.c: 272: PORTBbits.RB4=0;
 24306  016950  013F               	movlb	63	; () banked
 24307  016952  99CB               	bcf	203,4,b	;volatile
 24308                           
 24309                           ; BSR set to: 63
 24310                           ;ENC424J600.c: 273: enc424j600_writeSPI(&opcode);
 24311  016954  0E2E               	movlw	low ethernetController_getSourceMACAddress@opcode
 24312  016956  6E16               	movwf	enc424j600_writeSPI@data,c
 24313  016958  0E00               	movlw	high ethernetController_getSourceMACAddress@opcode
 24314  01695A  6E17               	movwf	enc424j600_writeSPI@data+1,c
 24315  01695C  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 24316                           
 24317                           ;ENC424J600.c: 274: for (uint8_t i = 0; i < 6; i++) {
 24318  016960  0E00               	movlw	0
 24319  016962  6E36               	movwf	ethernetController_getSourceMACAddress@i,c
 24320  016964                     l10252:
 24321  016964  0E05               	movlw	5
 24322  016966  6436               	cpfsgt	ethernetController_getSourceMACAddress@i,c
 24323  016968  D001               	goto	l156
 24324  01696A  D013               	goto	u11950
 24325  01696C                     l156:
 24326                           
 24327                           ;ENC424J600.c: 275: uint8_t temp;
 24328                           ;ENC424J600.c: 276: enc424j600_readSPI(&temp);
 24329  01696C  0E35               	movlw	low ethernetController_getSourceMACAddress@temp
 24330  01696E  6E16               	movwf	enc424j600_readSPI@data,c
 24331  016970  0E00               	movlw	high ethernetController_getSourceMACAddress@temp
 24332  016972  6E17               	movwf	enc424j600_readSPI@data+1,c
 24333  016974  ECB3  F0B3         	call	_enc424j600_readSPI	;wreg free
 24334                           
 24335                           ;ENC424J600.c: 277: sourceAddress.address[i] = temp;
 24336  016978  5036               	movf	ethernetController_getSourceMACAddress@i,w,c
 24337  01697A  0D01               	mullw	1
 24338  01697C  0E2F               	movlw	low ethernetController_getSourceMACAddress@sourceAddress
 24339  01697E  24F3               	addwf	16371,w,c
 24340  016980  6ED9               	movwf	16345,c
 24341  016982  0E00               	movlw	high ethernetController_getSourceMACAddress@sourceAddress
 24342  016984  20F4               	addwfc	16372,w,c
 24343  016986  6EDA               	movwf	16346,c
 24344  016988  0060  F0D7  FFDF   	movff	ethernetController_getSourceMACAddress@temp,16351
 24345  01698E  2A36               	incf	ethernetController_getSourceMACAddress@i,f,c
 24346  016990  D7E9               	goto	l10252
 24347  016992                     u11950:
 24348                           
 24349                           ;ENC424J600.c: 278: }
 24350                           ;ENC424J600.c: 279: PORTBbits.RB4=1;
 24351  016992  013F               	movlb	63	; () banked
 24352  016994  89CB               	bsf	203,4,b	;volatile
 24353                           
 24354                           ; BSR set to: 63
 24355                           ;ENC424J600.c: 280: return sourceAddress;
 24356  016996  EE20  F02F         	lfsr	2,ethernetController_getSourceMACAddress@sourceAddress
 24357  01699A  EE00  F025         	lfsr	0,?_ethernetController_getSourceMACAddress
 24358  01699E  0E05               	movlw	5
 24359  0169A0                     u11961:
 24360  0169A0  006F FF6F FFEB     	movff	16347,16363
 24361  0169A6  06E8               	decf	16360,f,c
 24362  0169A8  E2FB               	bc	u11961
 24363  0169AA  0012               	return	
 24364  0169AC                     __end_of_ethernetController_getSourceMACAddress:
 24365                           	opt stack 0
 24366                           
 24367 ;; *************** function _enc424j600_setERXDATAReadPointer *****************
 24368 ;; Defined at:
 24369 ;;		line 649 in file "src/enc424j600/ENC424J600.c"
 24370 ;; Parameters:    Size  Location     Type
 24371 ;;  addr            2   31[COMRAM] unsigned int 
 24372 ;; Auto vars:     Size  Location     Type
 24373 ;;  highByte        1   35[COMRAM] unsigned char 
 24374 ;;  lowByte         1   34[COMRAM] unsigned char 
 24375 ;;  opcode          1   33[COMRAM] unsigned char 
 24376 ;; Return value:  Size  Location     Type
 24377 ;;                  1    wreg      void 
 24378 ;; Registers used:
 24379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24380 ;; Tracked objects:
 24381 ;;		On entry : 0/0
 24382 ;;		On exit  : 0/0
 24383 ;;		Unchanged: 0/0
 24384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24386 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24388 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24389 ;;Total ram usage:        5 bytes
 24390 ;; Hardware stack levels used:    1
 24391 ;; Hardware stack levels required when called:    6
 24392 ;; This function calls:
 24393 ;;		_enc424j600_writeSPI
 24394 ;; This function is called by:
 24395 ;;		_ethernetController_getSourceMACAddress
 24396 ;;		_ethernetController_getEtherTypeField
 24397 ;;		_ethernetController_getRSV
 24398 ;;		_ethernetController_updateNextPacketPointer
 24399 ;;		_ethernetController_streamFromRXBuffer
 24400 ;; This function uses a non-reentrant model
 24401 ;;
 24402                           
 24403                           	psect	text118
 24404  01710E                     __ptext118:
 24405                           	opt stack 0
 24406  01710E                     _enc424j600_setERXDATAReadPointer:
 24407                           	opt stack 19
 24408                           
 24409                           ;ENC424J600.c: 650: uint8_t opcode = 0x64;
 24410                           
 24411                           ; BSR set to: 63
 24412                           ;incstack = 0
 24413  01710E  0E64               	movlw	100
 24414  017110  6E22               	movwf	enc424j600_setERXDATAReadPointer@opcode,c
 24415                           
 24416                           ;ENC424J600.c: 651: uint8_t lowByte = addr & 0x00ff;
 24417  017112  0060  F080  F023   	movff	enc424j600_setERXDATAReadPointer@addr,enc424j600_setERXDATAReadPointer@lowByte
 24418                           
 24419                           ;ENC424J600.c: 652: uint8_t highByte = (addr >> 8) & 0xff;
 24420  017118  5021               	movf	enc424j600_setERXDATAReadPointer@addr+1,w,c
 24421  01711A  6E24               	movwf	enc424j600_setERXDATAReadPointer@highByte,c
 24422                           
 24423                           ;ENC424J600.c: 653: PORTBbits.RB4=0;
 24424  01711C  013F               	movlb	63	; () banked
 24425  01711E  99CB               	bcf	203,4,b	;volatile
 24426                           
 24427                           ; BSR set to: 63
 24428                           ;ENC424J600.c: 654: enc424j600_writeSPI(&opcode);
 24429  017120  0E22               	movlw	low enc424j600_setERXDATAReadPointer@opcode
 24430  017122  6E16               	movwf	enc424j600_writeSPI@data,c
 24431  017124  0E00               	movlw	high enc424j600_setERXDATAReadPointer@opcode
 24432  017126  6E17               	movwf	enc424j600_writeSPI@data+1,c
 24433  017128  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 24434                           
 24435                           ;ENC424J600.c: 655: enc424j600_writeSPI(&lowByte);
 24436  01712C  0E23               	movlw	low enc424j600_setERXDATAReadPointer@lowByte
 24437  01712E  6E16               	movwf	enc424j600_writeSPI@data,c
 24438  017130  0E00               	movlw	high enc424j600_setERXDATAReadPointer@lowByte
 24439  017132  6E17               	movwf	enc424j600_writeSPI@data+1,c
 24440  017134  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 24441                           
 24442                           ;ENC424J600.c: 656: enc424j600_writeSPI(&highByte);
 24443  017138  0E24               	movlw	low enc424j600_setERXDATAReadPointer@highByte
 24444  01713A  6E16               	movwf	enc424j600_writeSPI@data,c
 24445  01713C  0E00               	movlw	high enc424j600_setERXDATAReadPointer@highByte
 24446  01713E  6E17               	movwf	enc424j600_writeSPI@data+1,c
 24447  017140  EC65  F0B4         	call	_enc424j600_writeSPI	;wreg free
 24448                           
 24449                           ;ENC424J600.c: 657: PORTBbits.RB4=1;
 24450  017144  013F               	movlb	63	; () banked
 24451  017146  89CB               	bsf	203,4,b	;volatile
 24452                           
 24453                           ; BSR set to: 63
 24454  017148  0012               	return		;funcret
 24455  01714A                     __end_of_enc424j600_setERXDATAReadPointer:
 24456                           	opt stack 0
 24457                           
 24458 ;; *************** function _enc424j600_writeSPI *****************
 24459 ;; Defined at:
 24460 ;;		line 505 in file "src/enc424j600/ENC424J600.c"
 24461 ;; Parameters:    Size  Location     Type
 24462 ;;  data            2   21[COMRAM] PTR unsigned char 
 24463 ;;		 -> enc424j600_clearInterruptFlag@temp(1), enc424j600_disable@temp(1), enc424j600_enable@temp(1), enc424j600_disable
      +AutoMACInsertion@temp(1), 
 24464 ;;		 -> enc424j600_enableAutoMACInsertion@temp(1), enc424j600_setRXTailPointer@highByte(1), enc424j600_setRXTailPointer@
      +lowByte(1), enc424j600_setRXBufferStartAddress@highByte(1), 
 24465 ;;		 -> enc424j600_setRXBufferStartAddress@lowByte(1), enc424j600_setERXDATAReadPointer@highByte(1), enc424j600_setERXDA
      +TAReadPointer@lowByte(1), enc424j600_setERXDATAReadPointer@opcode(1), 
 24466 ;;		 -> enc424j600_setGPDATAReadPointer@highByte(1), enc424j600_setGPDATAReadPointer@lowByte(1), enc424j600_setGPDATARea
      +dPointer@opcode(1), enc424j600_setGPDATAWritePointer@highByte(1), 
 24467 ;;		 -> enc424j600_setGPDATAWritePointer@lowByte(1), enc424j600_setGPDATAWritePointer@opcode(1), enc424j600_setTXStartAd
      +dress@highByte(1), enc424j600_setTXStartAddress@lowByte(1), 
 24468 ;;		 -> enc424j600_setTXLength@highByte(1), enc424j600_setTXLength@lowByte(1), enc424j600_readPHYRegister@temp(1), enc42
      +4j600_readPHYRegister@unusedBits(1), 
 24469 ;;		 -> enc424j600_readPHYRegister@PHYaddress(1), enc424j600_readControlRegisterUnbanked@addr(1), enc424j600_readControl
      +RegisterUnbanked@opcode(1), enc424j600_writeControlRegisterUnbanked@addr(1), 
 24470 ;;		 -> enc424j600_writeControlRegisterUnbanked@opcode(1), enc424j600_writeSingleByte@opcode(1), ethernetController_setL
      +EDConfig@data(1), ethernetController_streamFromRXBuffer@opcode(1), 
 24471 ;;		 -> ethernetController_updateNextPacketPointer@opcode(1), ethernetController_getRSV@opcode(1), ethernetController_ge
      +tEtherTypeField@opcode(1), ethernetController_getSourceMACAddress@opcode(1), 
 24472 ;;		 -> ethernetController_writeEtherTypeFieldToBuffer@opcode(1), ethernetController_writeEtherTypeFieldToBuffer@highByt
      +e(1), ethernetController_writeEtherTypeFieldToBuffer@lowByte(1), ethernetController_writeDestinationMACAddress@opcode(1)
      +, 
 24473 ;;		 -> ethernetController_writeDestinationMACAddress@data(6), ethernetController_streamToTransmitBuffer@data(1), ethern
      +etController_streamToTransmitBuffer@opcode(1), mac.address(6), 
 24474 ;;		 -> ethernetController_setMacAddress@mac(6), ethernetController_softReset@dataToSend(2), 
 24475 ;; Auto vars:     Size  Location     Type
 24476 ;;  timeoutCount    4   27[COMRAM] unsigned long 
 24477 ;; Return value:  Size  Location     Type
 24478 ;;                  1    wreg      void 
 24479 ;; Registers used:
 24480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24481 ;; Tracked objects:
 24482 ;;		On entry : 0/0
 24483 ;;		On exit  : 0/0
 24484 ;;		Unchanged: 0/0
 24485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24487 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24488 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24489 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24490 ;;Total ram usage:       10 bytes
 24491 ;; Hardware stack levels used:    1
 24492 ;; Hardware stack levels required when called:    5
 24493 ;; This function calls:
 24494 ;;		_enc424j600_initSPI
 24495 ;; This function is called by:
 24496 ;;		_ethernetController_streamToTransmitBuffer
 24497 ;;		_ethernetController_writeDestinationMACAddress
 24498 ;;		_ethernetController_writeEtherTypeFieldToBuffer
 24499 ;;		_ethernetController_getSourceMACAddress
 24500 ;;		_ethernetController_getEtherTypeField
 24501 ;;		_ethernetController_getRSV
 24502 ;;		_ethernetController_updateNextPacketPointer
 24503 ;;		_ethernetController_streamFromRXBuffer
 24504 ;;		_enc424j600_writeSingleByte
 24505 ;;		_enc424j600_writeControlRegisterUnbanked
 24506 ;;		_enc424j600_readControlRegisterUnbanked
 24507 ;;		_enc424j600_setGPDATAWritePointer
 24508 ;;		_enc424j600_setERXDATAReadPointer
 24509 ;;		_enc424j600_setGPDATAReadPointer
 24510 ;; This function uses a non-reentrant model
 24511 ;;
 24512                           
 24513                           	psect	text119
 24514  0168CA                     __ptext119:
 24515                           	opt stack 0
 24516  0168CA                     _enc424j600_writeSPI:
 24517                           	opt stack 21
 24518                           
 24519                           ;ENC424J600.c: 507: uint32_t timeoutCounter = 0;
 24520                           
 24521                           ; BSR set to: 63
 24522                           ;incstack = 0
 24523  0168CA  0E00               	movlw	0
 24524  0168CC  6E1C               	movwf	enc424j600_writeSPI@timeoutCounter,c
 24525  0168CE  0E00               	movlw	0
 24526  0168D0  6E1D               	movwf	enc424j600_writeSPI@timeoutCounter+1,c
 24527  0168D2  0E00               	movlw	0
 24528  0168D4  6E1E               	movwf	enc424j600_writeSPI@timeoutCounter+2,c
 24529  0168D6  0E00               	movlw	0
 24530  0168D8  6E1F               	movwf	enc424j600_writeSPI@timeoutCounter+3,c
 24531                           
 24532                           ;ENC424J600.c: 508: SPI1TXB = *data;
 24533  0168DA  0060  F05B  FFD9   	movff	enc424j600_writeSPI@data,16345
 24534  0168E0  0060  F05F  FFDA   	movff	enc424j600_writeSPI@data+1,16346
 24535  0168E6  50DF               	movf	16351,w,c
 24536  0168E8  013D               	movlb	61	; () banked
 24537  0168EA  6F11               	movwf	17,b	;volatile
 24538  0168EC                     
 24539                           ; BSR set to: 61
 24540                           
 24541                           ; BSR set to: 61
 24542  0168EC  BB17               	btfsc	23,5,b	;volatile
 24543  0168EE  D019               	goto	u10710
 24544                           
 24545                           ; BSR set to: 61
 24546  0168F0  0060  F070  F018   	movff	enc424j600_writeSPI@timeoutCounter,??_enc424j600_writeSPI
 24547  0168F6  0060  F074  F019   	movff	enc424j600_writeSPI@timeoutCounter+1,??_enc424j600_writeSPI+1
 24548  0168FC  0060  F078  F01A   	movff	enc424j600_writeSPI@timeoutCounter+2,??_enc424j600_writeSPI+2
 24549  016902  0060  F07C  F01B   	movff	enc424j600_writeSPI@timeoutCounter+3,??_enc424j600_writeSPI+3
 24550  016908  2A1C               	incf	enc424j600_writeSPI@timeoutCounter,f,c
 24551  01690A  0E00               	movlw	0
 24552  01690C  221D               	addwfc	enc424j600_writeSPI@timeoutCounter+1,f,c
 24553  01690E  221E               	addwfc	enc424j600_writeSPI@timeoutCounter+2,f,c
 24554  016910  221F               	addwfc	enc424j600_writeSPI@timeoutCounter+3,f,c
 24555  016912  501B               	movf	??_enc424j600_writeSPI+3,w,c
 24556  016914  101A               	iorwf	??_enc424j600_writeSPI+2,w,c
 24557  016916  E105               	bnz	l9496
 24558  016918  2818               	incf	??_enc424j600_writeSPI,w,c
 24559  01691A  0E0F               	movlw	15
 24560  01691C  5819               	subwfb	??_enc424j600_writeSPI+1,w,c
 24561  01691E  A0D8               	btfss	16344,0,c
 24562  016920  D7E5               	goto	l233
 24563  016922                     u10710:
 24564  016922                     l9496:
 24565                           
 24566                           ; BSR set to: 61
 24567                           ;ENC424J600.c: 510: if (timeoutCounter >= 0xfff) {
 24568  016922  501F               	movf	enc424j600_writeSPI@timeoutCounter+3,w,c
 24569  016924  101E               	iorwf	enc424j600_writeSPI@timeoutCounter+2,w,c
 24570  016926  E105               	bnz	u10720
 24571  016928  281C               	incf	enc424j600_writeSPI@timeoutCounter,w,c
 24572  01692A  0E0F               	movlw	15
 24573  01692C  581D               	subwfb	enc424j600_writeSPI@timeoutCounter+1,w,c
 24574  01692E  A0D8               	btfss	16344,0,c
 24575  016930  0012               	return	
 24576  016932                     u10720:
 24577                           
 24578                           ; BSR set to: 61
 24579                           ;ENC424J600.c: 511: PORTBbits.RB4=1;
 24580  016932  013F               	movlb	63	; () banked
 24581  016934  89CB               	bsf	203,4,b	;volatile
 24582                           
 24583                           ; BSR set to: 63
 24584                           ;ENC424J600.c: 512: enc424j600_initSPI();
 24585  016936  EC4B  F0B9         	call	_enc424j600_initSPI	;wreg free
 24586                           
 24587                           ;ENC424J600.c: 513: return;
 24588  01693A  0012               	return	
 24589  01693C                     __end_of_enc424j600_writeSPI:
 24590                           	opt stack 0
 24591                           
 24592 ;; *************** function _enc424j600_readSPI *****************
 24593 ;; Defined at:
 24594 ;;		line 517 in file "src/enc424j600/ENC424J600.c"
 24595 ;; Parameters:    Size  Location     Type
 24596 ;;  data            2   21[COMRAM] PTR unsigned char 
 24597 ;;		 -> enc424j600_clearInterruptFlag@temp(1), enc424j600_getInterruptFlags@high(1), enc424j600_getInterruptFlags@low(1)
      +, enc424j600_disable@temp(1), 
 24598 ;;		 -> enc424j600_enable@temp(1), enc424j600_disableAutoMACInsertion@temp(1), enc424j600_enableAutoMACInsertion@temp(1)
      +, enc424j600_getPacketCount@lowByte(1), 
 24599 ;;		 -> enc424j600_readPHYRegister@highByte(1), enc424j600_readPHYRegister@lowByte(1), enc424j600_readPHYRegister@temp(1
      +), ethernetController_setLEDConfig@data(1), 
 24600 ;;		 -> ethernetController_updateLinkStatus@temp(1), ethernetController_streamFromRXBuffer@temp(1), ethernetController_u
      +pdateNextPacketPointer@newPointerH(1), ethernetController_updateNextPacketPointer@newPointerL(1), 
 24601 ;;		 -> ethernetController_getRSV@temp(6), ethernetController_getEtherTypeField@lowByte(1), ethernetController_getEtherT
      +ypeField@highByte(1), ethernetController_getSourceMACAddress@temp(1), 
 24602 ;;		 -> mac.address(6), ethernetController_getMacAddress@mac(6), ethernetController_getSiliconRevision@data(1), ethernet
      +Controller_checkDeviceId@data(1), 
 24603 ;;		 -> ethernetController_softReset@receivedData(2), 
 24604 ;; Auto vars:     Size  Location     Type
 24605 ;;  timeoutCount    4   27[COMRAM] unsigned long 
 24606 ;; Return value:  Size  Location     Type
 24607 ;;                  1    wreg      void 
 24608 ;; Registers used:
 24609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24610 ;; Tracked objects:
 24611 ;;		On entry : 0/0
 24612 ;;		On exit  : 0/0
 24613 ;;		Unchanged: 0/0
 24614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24616 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24617 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24618 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24619 ;;Total ram usage:       10 bytes
 24620 ;; Hardware stack levels used:    1
 24621 ;; Hardware stack levels required when called:    5
 24622 ;; This function calls:
 24623 ;;		_enc424j600_initSPI
 24624 ;; This function is called by:
 24625 ;;		_ethernetController_getSourceMACAddress
 24626 ;;		_ethernetController_getEtherTypeField
 24627 ;;		_ethernetController_getRSV
 24628 ;;		_ethernetController_updateNextPacketPointer
 24629 ;;		_ethernetController_streamFromRXBuffer
 24630 ;;		_enc424j600_readControlRegisterUnbanked
 24631 ;; This function uses a non-reentrant model
 24632 ;;
 24633                           
 24634                           	psect	text120
 24635  016766                     __ptext120:
 24636                           	opt stack 0
 24637  016766                     _enc424j600_readSPI:
 24638                           	opt stack 21
 24639                           
 24640                           ;ENC424J600.c: 519: uint32_t timeoutCounter = 0;
 24641                           
 24642                           ;incstack = 0
 24643  016766  0E00               	movlw	0
 24644  016768  6E1C               	movwf	enc424j600_readSPI@timeoutCounter,c
 24645  01676A  0E00               	movlw	0
 24646  01676C  6E1D               	movwf	enc424j600_readSPI@timeoutCounter+1,c
 24647  01676E  0E00               	movlw	0
 24648  016770  6E1E               	movwf	enc424j600_readSPI@timeoutCounter+2,c
 24649  016772  0E00               	movlw	0
 24650  016774  6E1F               	movwf	enc424j600_readSPI@timeoutCounter+3,c
 24651                           
 24652                           ;ENC424J600.c: 520: SPI1TXB = 0x00;
 24653  016776  0E00               	movlw	0
 24654  016778  013D               	movlb	61	; () banked
 24655  01677A  6F11               	movwf	17,b	;volatile
 24656  01677C                     
 24657                           ; BSR set to: 61
 24658                           
 24659                           ; BSR set to: 61
 24660  01677C  BB17               	btfsc	23,5,b	;volatile
 24661  01677E  D019               	goto	u11670
 24662                           
 24663                           ; BSR set to: 61
 24664  016780  0060  F070  F018   	movff	enc424j600_readSPI@timeoutCounter,??_enc424j600_readSPI
 24665  016786  0060  F074  F019   	movff	enc424j600_readSPI@timeoutCounter+1,??_enc424j600_readSPI+1
 24666  01678C  0060  F078  F01A   	movff	enc424j600_readSPI@timeoutCounter+2,??_enc424j600_readSPI+2
 24667  016792  0060  F07C  F01B   	movff	enc424j600_readSPI@timeoutCounter+3,??_enc424j600_readSPI+3
 24668  016798  2A1C               	incf	enc424j600_readSPI@timeoutCounter,f,c
 24669  01679A  0E00               	movlw	0
 24670  01679C  221D               	addwfc	enc424j600_readSPI@timeoutCounter+1,f,c
 24671  01679E  221E               	addwfc	enc424j600_readSPI@timeoutCounter+2,f,c
 24672  0167A0  221F               	addwfc	enc424j600_readSPI@timeoutCounter+3,f,c
 24673  0167A2  501B               	movf	??_enc424j600_readSPI+3,w,c
 24674  0167A4  101A               	iorwf	??_enc424j600_readSPI+2,w,c
 24675  0167A6  E105               	bnz	l10030
 24676  0167A8  2818               	incf	??_enc424j600_readSPI,w,c
 24677  0167AA  0E0F               	movlw	15
 24678  0167AC  5819               	subwfb	??_enc424j600_readSPI+1,w,c
 24679  0167AE  A0D8               	btfss	16344,0,c
 24680  0167B0  D7E5               	goto	l242
 24681  0167B2                     u11670:
 24682  0167B2                     l10030:
 24683                           
 24684                           ; BSR set to: 61
 24685                           ;ENC424J600.c: 522: if (timeoutCounter >= 0xfff) {
 24686  0167B2  501F               	movf	enc424j600_readSPI@timeoutCounter+3,w,c
 24687  0167B4  101E               	iorwf	enc424j600_readSPI@timeoutCounter+2,w,c
 24688  0167B6  E105               	bnz	u11680
 24689  0167B8  281C               	incf	enc424j600_readSPI@timeoutCounter,w,c
 24690  0167BA  0E0F               	movlw	15
 24691  0167BC  581D               	subwfb	enc424j600_readSPI@timeoutCounter+1,w,c
 24692  0167BE  A0D8               	btfss	16344,0,c
 24693  0167C0  D005               	goto	l246
 24694  0167C2                     u11680:
 24695                           
 24696                           ; BSR set to: 61
 24697                           ;ENC424J600.c: 523: PORTBbits.RB4=1;
 24698  0167C2  013F               	movlb	63	; () banked
 24699  0167C4  89CB               	bsf	203,4,b	;volatile
 24700                           
 24701                           ; BSR set to: 63
 24702                           ;ENC424J600.c: 524: enc424j600_initSPI();
 24703  0167C6  EC4B  F0B9         	call	_enc424j600_initSPI	;wreg free
 24704                           
 24705                           ;ENC424J600.c: 525: return;
 24706  0167CA  0012               	return	
 24707  0167CC                     l246:
 24708                           
 24709                           ;ENC424J600.c: 526: }
 24710                           ;ENC424J600.c: 527: *data = SPI1RXB;
 24711  0167CC  0060  F05B  FFD9   	movff	enc424j600_readSPI@data,16345
 24712  0167D2  0060  F05F  FFDA   	movff	enc424j600_readSPI@data+1,16346
 24713  0167D8  006F F443 FFDF     	movff	15632,16351	;volatile
 24714  0167DE  0012               	return		;funcret
 24715  0167E0                     __end_of_enc424j600_readSPI:
 24716                           	opt stack 0
 24717                           
 24718 ;; *************** function _enc424j600_initSPI *****************
 24719 ;; Defined at:
 24720 ;;		line 469 in file "src/enc424j600/ENC424J600.c"
 24721 ;; Parameters:    Size  Location     Type
 24722 ;;		None
 24723 ;; Auto vars:     Size  Location     Type
 24724 ;;		None
 24725 ;; Return value:  Size  Location     Type
 24726 ;;                  1    wreg      void 
 24727 ;; Registers used:
 24728 ;;		wreg, status,2
 24729 ;; Tracked objects:
 24730 ;;		On entry : 0/0
 24731 ;;		On exit  : 0/0
 24732 ;;		Unchanged: 0/0
 24733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24738 ;;Total ram usage:        0 bytes
 24739 ;; Hardware stack levels used:    1
 24740 ;; Hardware stack levels required when called:    4
 24741 ;; This function calls:
 24742 ;;		Nothing
 24743 ;; This function is called by:
 24744 ;;		_ethernetController_init
 24745 ;;		_enc424j600_writeSPI
 24746 ;;		_enc424j600_readSPI
 24747 ;; This function uses a non-reentrant model
 24748 ;;
 24749                           
 24750                           	psect	text121
 24751  017296                     __ptext121:
 24752                           	opt stack 0
 24753  017296                     _enc424j600_initSPI:
 24754                           	opt stack 21
 24755                           
 24756                           ;ENC424J600.c: 486: SPI1CON0bits.EN = 0;
 24757                           
 24758                           ;incstack = 0
 24759  017296  013D               	movlb	61	; () banked
 24760  017298  9F14               	bcf	20,7,b	;volatile
 24761                           
 24762                           ;ENC424J600.c: 487: SPI1CON0bits.MST = 1;
 24763  01729A  8314               	bsf	20,1,b	;volatile
 24764                           
 24765                           ;ENC424J600.c: 488: SPI1CON1bits.CKE = 1;
 24766  01729C  8D15               	bsf	21,6,b	;volatile
 24767                           
 24768                           ; BSR set to: 61
 24769                           ;ENC424J600.c: 489: SPI1CLKbits.CLKSEL = 0b0000;
 24770  01729E  0E00               	movlw	0
 24771  0172A0  6F1C               	movwf	28,b	;volatile
 24772                           
 24773                           ; BSR set to: 61
 24774                           ;ENC424J600.c: 490: TRISBbits.TRISB0 = 1;
 24775  0172A2  013F               	movlb	63	; () banked
 24776  0172A4  81C3               	bsf	195,0,b	;volatile
 24777                           
 24778                           ; BSR set to: 63
 24779                           ;ENC424J600.c: 491: ANSELBbits.ANSELB0 = 0;
 24780  0172A6  013A               	movlb	58	; () banked
 24781  0172A8  9150               	bcf	80,0,b	;volatile
 24782                           
 24783                           ; BSR set to: 58
 24784                           ;ENC424J600.c: 492: TRISBbits.TRISB1 = 0;
 24785  0172AA  013F               	movlb	63	; () banked
 24786  0172AC  93C3               	bcf	195,1,b	;volatile
 24787                           
 24788                           ; BSR set to: 63
 24789                           ;ENC424J600.c: 493: ANSELBbits.ANSELB1 = 0;
 24790  0172AE  013A               	movlb	58	; () banked
 24791  0172B0  9350               	bcf	80,1,b	;volatile
 24792                           
 24793                           ; BSR set to: 58
 24794                           ;ENC424J600.c: 494: TRISBbits.TRISB3 = 0;
 24795  0172B2  013F               	movlb	63	; () banked
 24796  0172B4  97C3               	bcf	195,3,b	;volatile
 24797                           
 24798                           ; BSR set to: 63
 24799                           ;ENC424J600.c: 495: ANSELBbits.ANSELB3 = 0;
 24800  0172B6  013A               	movlb	58	; () banked
 24801  0172B8  9750               	bcf	80,3,b	;volatile
 24802                           
 24803                           ; BSR set to: 58
 24804                           ;ENC424J600.c: 496: TRISBbits.TRISB4 = 0;
 24805  0172BA  013F               	movlb	63	; () banked
 24806  0172BC  99C3               	bcf	195,4,b	;volatile
 24807                           
 24808                           ; BSR set to: 63
 24809                           ;ENC424J600.c: 497: ANSELBbits.ANSELB4 = 0;
 24810  0172BE  013A               	movlb	58	; () banked
 24811  0172C0  9950               	bcf	80,4,b	;volatile
 24812                           
 24813                           ; BSR set to: 58
 24814                           ;ENC424J600.c: 498: PORTBbits.RB4=1;
 24815  0172C2  013F               	movlb	63	; () banked
 24816  0172C4  89CB               	bsf	203,4,b	;volatile
 24817                           
 24818                           ; BSR set to: 63
 24819                           ;ENC424J600.c: 499: SPI1CON0bits.EN = 1;
 24820  0172C6  013D               	movlb	61	; () banked
 24821  0172C8  8F14               	bsf	20,7,b	;volatile
 24822                           
 24823                           ; BSR set to: 61
 24824  0172CA  0012               	return		;funcret
 24825  0172CC                     __end_of_enc424j600_initSPI:
 24826                           	opt stack 0
 24827                           
 24828 ;; *************** function _arp_checkForEntry *****************
 24829 ;; Defined at:
 24830 ;;		line 465 in file "src/stack/protocols/arp.c"
 24831 ;; Parameters:    Size  Location     Type
 24832 ;;  ip              4   28[COMRAM] struct ipv4_address
 24833 ;;  index           2   32[COMRAM] PTR unsigned char 
 24834 ;;		 -> ipv4_sendFrame@index(1), arp_gratuitous@index(1), arp_probe@index(1), 
 24835 ;; Auto vars:     Size  Location     Type
 24836 ;;  i               1   42[COMRAM] unsigned char 
 24837 ;; Return value:  Size  Location     Type
 24838 ;;                  1    wreg      unsigned char 
 24839 ;; Registers used:
 24840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24841 ;; Tracked objects:
 24842 ;;		On entry : 0/0
 24843 ;;		On exit  : 0/0
 24844 ;;		Unchanged: 0/0
 24845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24846 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24848 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24849 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24850 ;;Total ram usage:       15 bytes
 24851 ;; Hardware stack levels used:    1
 24852 ;; Hardware stack levels required when called:    5
 24853 ;; This function calls:
 24854 ;;		_getMillis
 24855 ;;		_ipv4_cmp
 24856 ;; This function is called by:
 24857 ;;		_arp_probe
 24858 ;;		_arp_gratuitous
 24859 ;;		_ipv4_sendFrame
 24860 ;; This function uses a non-reentrant model
 24861 ;;
 24862                           
 24863                           	psect	text122
 24864  015C92                     __ptext122:
 24865                           	opt stack 0
 24866  015C92                     _arp_checkForEntry:
 24867                           	opt stack 23
 24868                           
 24869                           ;arp.c: 466: for (uint8_t i = 0; i < 8u; i++) {
 24870                           
 24871                           ; BSR set to: 61
 24872                           ;incstack = 0
 24873  015C92  0E00               	movlw	0
 24874  015C94  6E2B               	movwf	arp_checkForEntry@i,c
 24875  015C96                     l11100:
 24876  015C96  0E07               	movlw	7
 24877  015C98  642B               	cpfsgt	arp_checkForEntry@i,c
 24878  015C9A  D001               	goto	l1077
 24879  015C9C  D056               	goto	u13710
 24880  015C9E                     l1077:
 24881                           
 24882                           ;arp.c: 467: if (ipv4_cmp(&arp_table[i].ip, &ip)) {
 24883  015C9E  502B               	movf	arp_checkForEntry@i,w,c
 24884  015CA0  0D0E               	mullw	14
 24885  015CA2  0E7C               	movlw	low _arp_table
 24886  015CA4  24F3               	addwf	16371,w,c
 24887  015CA6  6E16               	movwf	ipv4_cmp@a,c
 24888  015CA8  0E04               	movlw	high _arp_table
 24889  015CAA  20F4               	addwfc	16372,w,c
 24890  015CAC  6E17               	movwf	ipv4_cmp@a+1,c
 24891  015CAE  0E1D               	movlw	low arp_checkForEntry@ip
 24892  015CB0  6E18               	movwf	ipv4_cmp@b,c
 24893  015CB2  0E00               	movlw	high arp_checkForEntry@ip
 24894  015CB4  6E19               	movwf	ipv4_cmp@b+1,c
 24895  015CB6  EC49  F0B8         	call	_ipv4_cmp	;wreg free
 24896  015CBA  0900               	iorlw	0
 24897  015CBC  B4D8               	btfsc	16344,2,c
 24898  015CBE  D043               	goto	l1080
 24899                           
 24900                           ;arp.c: 468: if ((getMillis() - arp_table[i].timeCreated) < 30000u) {
 24901  015CC0  502B               	movf	arp_checkForEntry@i,w,c
 24902  015CC2  0D0E               	mullw	14
 24903  015CC4  0E0A               	movlw	10
 24904  015CC6  26F3               	addwf	16371,f,c
 24905  015CC8  0E00               	movlw	0
 24906  015CCA  22F4               	addwfc	16372,f,c
 24907  015CCC  0E7C               	movlw	low _arp_table
 24908  015CCE  24F3               	addwf	16371,w,c
 24909  015CD0  6ED9               	movwf	16345,c
 24910  015CD2  0E04               	movlw	high _arp_table
 24911  015CD4  20F4               	addwfc	16372,w,c
 24912  015CD6  6EDA               	movwf	16346,c
 24913  015CD8  006F FF78  F023    	movff	16350,??_arp_checkForEntry
 24914  015CDE  006F FF78  F024    	movff	16350,??_arp_checkForEntry+1
 24915  015CE4  006F FF78  F025    	movff	16350,??_arp_checkForEntry+2
 24916  015CEA  006F FF78  F026    	movff	16350,??_arp_checkForEntry+3
 24917  015CF0  1E23               	comf	??_arp_checkForEntry,f,c
 24918  015CF2  1E24               	comf	??_arp_checkForEntry+1,f,c
 24919  015CF4  1E25               	comf	??_arp_checkForEntry+2,f,c
 24920  015CF6  1E26               	comf	??_arp_checkForEntry+3,f,c
 24921  015CF8  2A23               	incf	??_arp_checkForEntry,f,c
 24922  015CFA  0E00               	movlw	0
 24923  015CFC  2224               	addwfc	??_arp_checkForEntry+1,f,c
 24924  015CFE  2225               	addwfc	??_arp_checkForEntry+2,f,c
 24925  015D00  2226               	addwfc	??_arp_checkForEntry+3,f,c
 24926  015D02  EC15  F0BB         	call	_getMillis	;wreg free
 24927  015D06  5023               	movf	??_arp_checkForEntry,w,c
 24928  015D08  2416               	addwf	?_getMillis,w,c
 24929  015D0A  6E27               	movwf	(??_arp_checkForEntry+4)& (0+255),c
 24930  015D0C  5024               	movf	??_arp_checkForEntry+1,w,c
 24931  015D0E  2017               	addwfc	?_getMillis+1,w,c
 24932  015D10  6E28               	movwf	(??_arp_checkForEntry+5)& (0+255),c
 24933  015D12  5025               	movf	??_arp_checkForEntry+2,w,c
 24934  015D14  2018               	addwfc	?_getMillis+2,w,c
 24935  015D16  6E29               	movwf	(??_arp_checkForEntry+6)& (0+255),c
 24936  015D18  5026               	movf	??_arp_checkForEntry+3,w,c
 24937  015D1A  2019               	addwfc	?_getMillis+3,w,c
 24938  015D1C  6E2A               	movwf	(??_arp_checkForEntry+7)& (0+255),c
 24939  015D1E  502A               	movf	??_arp_checkForEntry+7,w,c
 24940  015D20  1029               	iorwf	??_arp_checkForEntry+6,w,c
 24941  015D22  E111               	bnz	l11114
 24942  015D24  0E30               	movlw	48
 24943  015D26  5C27               	subwf	??_arp_checkForEntry+4,w,c
 24944  015D28  0E75               	movlw	117
 24945  015D2A  5828               	subwfb	??_arp_checkForEntry+5,w,c
 24946  015D2C  B0D8               	btfsc	16344,0,c
 24947  015D2E  D00B               	goto	l1080
 24948                           
 24949                           ;arp.c: 470: *index = i;
 24950  015D30  0060  F087  FFD9   	movff	arp_checkForEntry@index,16345
 24951  015D36  0060  F08B  FFDA   	movff	arp_checkForEntry@index+1,16346
 24952  015D3C  0060  F0AF  FFDF   	movff	arp_checkForEntry@i,16351
 24953                           
 24954                           ;arp.c: 471: return 1;
 24955  015D42  0E01               	movlw	1
 24956  015D44  0012               	return	
 24957  015D46                     l1080:
 24958  015D46                     l11114:
 24959  015D46  2A2B               	incf	arp_checkForEntry@i,f,c
 24960  015D48  D7A6               	goto	l11100
 24961  015D4A                     u13710:
 24962                           
 24963                           ;arp.c: 472: }
 24964                           ;arp.c: 473: }
 24965                           ;arp.c: 474: }
 24966                           ;arp.c: 475: return 0;
 24967  015D4A  0E00               	movlw	0
 24968  015D4C  0012               	return	
 24969  015D4E                     __end_of_arp_checkForEntry:
 24970                           	opt stack 0
 24971                           
 24972 ;; *************** function _ipv4_cmp *****************
 24973 ;; Defined at:
 24974 ;;		line 424 in file "src/stack/protocols/ipv4.c"
 24975 ;; Parameters:    Size  Location     Type
 24976 ;;  a               2   21[COMRAM] PTR struct ipv4_address
 24977 ;;		 -> arp_table(112), arp_sendReply@request(32), arp_parseFromRXBuffer@arp(32), 
 24978 ;;  b               2   23[COMRAM] PTR struct ipv4_address
 24979 ;;		 -> arp_setNewEntry@ip(4), arp_checkForEntry@ip(4), arp_sendReply@myIP(4), arp_parseFromRXBuffer@arp(32), 
 24980 ;; Auto vars:     Size  Location     Type
 24981 ;;  i               1   27[COMRAM] unsigned char 
 24982 ;; Return value:  Size  Location     Type
 24983 ;;                  1    wreg      unsigned char 
 24984 ;; Registers used:
 24985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24986 ;; Tracked objects:
 24987 ;;		On entry : 0/0
 24988 ;;		On exit  : 0/0
 24989 ;;		Unchanged: 0/0
 24990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24993 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24994 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24995 ;;Total ram usage:        7 bytes
 24996 ;; Hardware stack levels used:    1
 24997 ;; Hardware stack levels required when called:    4
 24998 ;; This function calls:
 24999 ;;		Nothing
 25000 ;; This function is called by:
 25001 ;;		_arp_parseFromRXBuffer
 25002 ;;		_arp_sendReply
 25003 ;;		_arp_checkForEntry
 25004 ;;		_arp_setNewEntry
 25005 ;; This function uses a non-reentrant model
 25006 ;;
 25007                           
 25008                           	psect	text123
 25009  017092                     __ptext123:
 25010                           	opt stack 0
 25011  017092                     _ipv4_cmp:
 25012                           	opt stack 23
 25013                           
 25014                           ;ipv4.c: 425: for (uint8_t i = 0; i < 4; i++) {
 25015                           
 25016                           ;incstack = 0
 25017  017092  0E00               	movlw	0
 25018  017094  6E1C               	movwf	ipv4_cmp@i,c
 25019  017096                     l10652:
 25020  017096  0E03               	movlw	3
 25021  017098  641C               	cpfsgt	ipv4_cmp@i,c
 25022  01709A  D001               	goto	l1225
 25023  01709C  D018               	goto	u12430
 25024  01709E                     l1225:
 25025                           
 25026                           ;ipv4.c: 426: if (a->address[i] != b->address[i])
 25027  01709E  501C               	movf	ipv4_cmp@i,w,c
 25028  0170A0  0D01               	mullw	1
 25029  0170A2  50F3               	movf	16371,w,c
 25030  0170A4  2418               	addwf	ipv4_cmp@b,w,c
 25031  0170A6  6ED9               	movwf	16345,c
 25032  0170A8  50F4               	movf	16372,w,c
 25033  0170AA  2019               	addwfc	ipv4_cmp@b+1,w,c
 25034  0170AC  6EDA               	movwf	16346,c
 25035  0170AE  501C               	movf	ipv4_cmp@i,w,c
 25036  0170B0  0D01               	mullw	1
 25037  0170B2  50F3               	movf	16371,w,c
 25038  0170B4  2416               	addwf	ipv4_cmp@a,w,c
 25039  0170B6  6EE1               	movwf	16353,c
 25040  0170B8  50F4               	movf	16372,w,c
 25041  0170BA  2017               	addwfc	ipv4_cmp@a+1,w,c
 25042  0170BC  6EE2               	movwf	16354,c
 25043  0170BE  50DE               	movf	16350,w,c
 25044  0170C0  18E6               	xorwf	16358,w,c
 25045  0170C2  B4D8               	btfsc	16344,2,c
 25046  0170C4  D002               	goto	l1227
 25047                           
 25048                           ;ipv4.c: 427: return 0;
 25049  0170C6  0E00               	movlw	0
 25050  0170C8  0012               	return	
 25051  0170CA                     l1227:
 25052  0170CA  2A1C               	incf	ipv4_cmp@i,f,c
 25053  0170CC  D7E4               	goto	l10652
 25054  0170CE                     u12430:
 25055                           
 25056                           ;ipv4.c: 428: }
 25057                           ;ipv4.c: 429: return 1;
 25058  0170CE  0E01               	movlw	1
 25059  0170D0  0012               	return	
 25060  0170D2                     __end_of_ipv4_cmp:
 25061                           	opt stack 0
 25062                           
 25063 ;; *************** function _getMillis *****************
 25064 ;; Defined at:
 25065 ;;		line 34 in file "src/stack/time.c"
 25066 ;; Parameters:    Size  Location     Type
 25067 ;;		None
 25068 ;; Auto vars:     Size  Location     Type
 25069 ;;		None
 25070 ;; Return value:  Size  Location     Type
 25071 ;;                  4   21[COMRAM] unsigned long 
 25072 ;; Registers used:
 25073 ;;		None
 25074 ;; Tracked objects:
 25075 ;;		On entry : 0/0
 25076 ;;		On exit  : 0/0
 25077 ;;		Unchanged: 0/0
 25078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25082 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25083 ;;Total ram usage:        4 bytes
 25084 ;; Hardware stack levels used:    1
 25085 ;; Hardware stack levels required when called:    4
 25086 ;; This function calls:
 25087 ;;		Nothing
 25088 ;; This function is called by:
 25089 ;;		_ethernet_rxGetNewFrame
 25090 ;;		_arp_handleNewPacket
 25091 ;;		_arp_probe
 25092 ;;		_arp_gratuitous
 25093 ;;		_arp_checkForEntry
 25094 ;;		_ipv4_sendFrame
 25095 ;; This function uses a non-reentrant model
 25096 ;;
 25097                           
 25098                           	psect	text124
 25099  01762A                     __ptext124:
 25100                           	opt stack 0
 25101  01762A                     _getMillis:
 25102                           	opt stack 24
 25103                           
 25104                           ;time.c: 35: return time;
 25105                           
 25106                           ;incstack = 0
 25107  01762A  0060  FA7C  F016   	movff	_time,?_getMillis	;volatile
 25108  017630  0060  FA80  F017   	movff	_time+1,?_getMillis+1	;volatile
 25109  017636  0060  FA84  F018   	movff	_time+2,?_getMillis+2	;volatile
 25110  01763C  0060  FA88  F019   	movff	_time+3,?_getMillis+3	;volatile
 25111  017642  0012               	return		;funcret
 25112  017644                     __end_of_getMillis:
 25113                           	opt stack 0
 25114                           
 25115 ;; *************** function _UART_special *****************
 25116 ;; Defined at:
 25117 ;;		line 81 in file "src/system/uart.c"
 25118 ;; Parameters:    Size  Location     Type
 25119 ;;  code            1    wreg     unsigned char 
 25120 ;; Auto vars:     Size  Location     Type
 25121 ;;  code            1   23[COMRAM] unsigned char 
 25122 ;; Return value:  Size  Location     Type
 25123 ;;                  2   21[COMRAM] PTR unsigned char 
 25124 ;; Registers used:
 25125 ;;		wreg, status,2, status,0
 25126 ;; Tracked objects:
 25127 ;;		On entry : 0/0
 25128 ;;		On exit  : 0/0
 25129 ;;		Unchanged: 0/0
 25130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25131 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25134 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25135 ;;Total ram usage:        3 bytes
 25136 ;; Hardware stack levels used:    1
 25137 ;; Hardware stack levels required when called:    4
 25138 ;; This function calls:
 25139 ;;		Nothing
 25140 ;; This function is called by:
 25141 ;;		_handleStackBackgroundTasks
 25142 ;;		_main
 25143 ;; This function uses a non-reentrant model
 25144 ;;
 25145                           
 25146                           	psect	text125
 25147  01765C                     __ptext125:
 25148                           	opt stack 0
 25149  01765C                     _UART_special:
 25150                           	opt stack 25
 25151                           
 25152                           ;incstack = 0
 25153                           ;UART_special@code stored from wreg
 25154  01765C  6E18               	movwf	UART_special@code,c
 25155                           
 25156                           ;uart.c: 82: switch (code) {
 25157  01765E  D005               	goto	l835
 25158  017660                     
 25159                           ;uart.c: 84: return (const char*) "-------------------------------------------------";
 25160  017660  0EA0               	movlw	low STR_72
 25161  017662  6E16               	movwf	?_UART_special,c
 25162  017664  0EFC               	movlw	high STR_72
 25163  017666  6E17               	movwf	?_UART_special+1,c
 25164                           
 25165                           ;uart.c: 85: }
 25166  017668  0012               	return	
 25167  01766A                     l835:
 25168  01766A  5018               	movf	UART_special@code,w,c
 25169                           
 25170                           ; Switch size 1, requested type "space"
 25171                           ; Number of cases is 1, Range of values is 0 to 0
 25172                           ; switch strategies available:
 25173                           ; Name         Instructions Cycles
 25174                           ; simple_byte            4     3 (average)
 25175                           ;	Chosen strategy is simple_byte
 25176  01766C  0A00               	xorlw	0	; case 0
 25177  01766E  A4D8               	btfss	16344,2,c
 25178  017670  0012               	return	
 25179  017672  D7F6               	goto	l836
 25180  017674                     __end_of_UART_special:
 25181                           	opt stack 0
 25182                           
 25183 ;; *************** function _ethernetController_getDeviceName *****************
 25184 ;; Defined at:
 25185 ;;		line 145 in file "src/enc424j600/ENC424J600.c"
 25186 ;; Parameters:    Size  Location     Type
 25187 ;;		None
 25188 ;; Auto vars:     Size  Location     Type
 25189 ;;  string         11   23[COMRAM] const unsigned char [11]
 25190 ;; Return value:  Size  Location     Type
 25191 ;;                  2   21[COMRAM] PTR unsigned char 
 25192 ;; Registers used:
 25193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 25194 ;; Tracked objects:
 25195 ;;		On entry : 0/0
 25196 ;;		On exit  : 0/0
 25197 ;;		Unchanged: 0/0
 25198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25200 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25202 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25203 ;;Total ram usage:       13 bytes
 25204 ;; Hardware stack levels used:    1
 25205 ;; Hardware stack levels required when called:    4
 25206 ;; This function calls:
 25207 ;;		Nothing
 25208 ;; This function is called by:
 25209 ;;		_main
 25210 ;; This function uses a non-reentrant model
 25211 ;;
 25212                           
 25213                           	psect	text126
 25214  0174A6                     __ptext126:
 25215                           	opt stack 0
 25216  0174A6                     _ethernetController_getDeviceName:
 25217                           	opt stack 26
 25218                           
 25219                           ;ENC424J600.c: 146: const char string [] = "ENC424J600";
 25220                           
 25221                           ;incstack = 0
 25222  0174A6  0EBB               	movlw	low ethernetController_getDeviceName@F18978
 25223  0174A8  6EF6               	movwf	16374,c
 25224  0174AA                     	if	1	;There is more than 1 active tblptr byte
 25225  0174AA  0EFB               	movlw	high ethernetController_getDeviceName@F18978
 25226  0174AC  6EF7               	movwf	16375,c
 25227  0174AE                     	endif
 25228  0174AE                     	if	1	;There are 3 active tblptr bytes
 25229  0174AE  0E00               	movlw	low (ethernetController_getDeviceName@F18978 shr (0+16))
 25230  0174B0  6EF8               	movwf	16376,c
 25231  0174B2                     	endif
 25232  0174B2  EE20  F018         	lfsr	2,ethernetController_getDeviceName@string
 25233  0174B6  0E0A               	movlw	10
 25234  0174B8                     u15240:
 25235  0174B8  0009               	tblrd		*+
 25236  0174BA  006F FFD7 FFDE     	movff	16373,16350
 25237  0174C0  06E8               	decf	16360,f,c
 25238  0174C2  E2FA               	bc	u15240
 25239                           
 25240                           ;ENC424J600.c: 147: return (char*) string;
 25241  0174C4  0E18               	movlw	low ethernetController_getDeviceName@string
 25242  0174C6  6E16               	movwf	?_ethernetController_getDeviceName,c
 25243  0174C8  0E00               	movlw	high ethernetController_getDeviceName@string
 25244  0174CA  6E17               	movwf	?_ethernetController_getDeviceName+1,c
 25245  0174CC  0012               	return	
 25246  0174CE                     __end_of_ethernetController_getDeviceName:
 25247                           	opt stack 0
 25248                           
 25249 ;; *************** function _UARTInit *****************
 25250 ;; Defined at:
 25251 ;;		line 26 in file "src/system/uart.c"
 25252 ;; Parameters:    Size  Location     Type
 25253 ;;		None
 25254 ;; Auto vars:     Size  Location     Type
 25255 ;;		None
 25256 ;; Return value:  Size  Location     Type
 25257 ;;                  1    wreg      void 
 25258 ;; Registers used:
 25259 ;;		wreg, status,2
 25260 ;; Tracked objects:
 25261 ;;		On entry : 0/0
 25262 ;;		On exit  : 0/0
 25263 ;;		Unchanged: 0/0
 25264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25269 ;;Total ram usage:        0 bytes
 25270 ;; Hardware stack levels used:    1
 25271 ;; Hardware stack levels required when called:    4
 25272 ;; This function calls:
 25273 ;;		Nothing
 25274 ;; This function is called by:
 25275 ;;		_main
 25276 ;; This function uses a non-reentrant model
 25277 ;;
 25278                           
 25279                           	psect	text127
 25280  017674                     __ptext127:
 25281                           	opt stack 0
 25282  017674                     _UARTInit:
 25283                           	opt stack 26
 25284                           
 25285                           ;uart.c: 35: U1CON0bits.TXEN = 1;
 25286                           
 25287                           ;incstack = 0
 25288  017674  013D               	movlb	61	; () banked
 25289  017676  8BF2               	bsf	242,5,b	;volatile
 25290                           
 25291                           ;uart.c: 36: U1CON0bits.MODE = 0b0000;
 25292  017678  91F2               	bcf	242,0,b	;volatile
 25293  01767A  93F2               	bcf	242,1,b	;volatile
 25294  01767C  95F2               	bcf	242,2,b	;volatile
 25295  01767E  97F2               	bcf	242,3,b	;volatile
 25296                           
 25297                           ;uart.c: 37: U1CON1bits.ON = 1;
 25298  017680  8FF3               	bsf	243,7,b	;volatile
 25299                           
 25300                           ; BSR set to: 61
 25301                           ;uart.c: 38: U1BRG = 3;
 25302  017682  0E00               	movlw	0
 25303  017684  6FF6               	movwf	246,b	;volatile
 25304  017686  0E03               	movlw	3
 25305  017688  6FF5               	movwf	245,b	;volatile
 25306                           
 25307                           ; BSR set to: 61
 25308  01768A  0012               	return		;funcret
 25309  01768C                     __end_of_UARTInit:
 25310                           	opt stack 0
 25311                           
 25312 ;; *************** function _ccp1Int *****************
 25313 ;; Defined at:
 25314 ;;		line 295 in file "src/system/main.c"
 25315 ;; Parameters:    Size  Location     Type
 25316 ;;		None
 25317 ;; Auto vars:     Size  Location     Type
 25318 ;;		None
 25319 ;; Return value:  Size  Location     Type
 25320 ;;                  1    wreg      void 
 25321 ;; Registers used:
 25322 ;;		wreg, status,2, status,0, cstack
 25323 ;; Tracked objects:
 25324 ;;		On entry : 0/0
 25325 ;;		On exit  : 0/0
 25326 ;;		Unchanged: 0/0
 25327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25332 ;;Total ram usage:        0 bytes
 25333 ;; Hardware stack levels used:    1
 25334 ;; Hardware stack levels required when called:    1
 25335 ;; This function calls:
 25336 ;;		_updateTime
 25337 ;; This function is called by:
 25338 ;;		Interrupt level 2
 25339 ;; This function uses a non-reentrant model
 25340 ;;
 25341                           
 25342                           	psect	text128
 25343  0176DC                     __ptext128:
 25344                           	opt stack 0
 25345  0176DC                     _ccp1Int:
 25346                           	opt stack 17
 25347                           
 25348                           ;main.c: 297: if (CCP1IE && CCP1IF) {
 25349                           
 25350                           ; BSR set to: 61
 25351                           ;incstack = 0
 25352  0176DC  0139               	movlb	57	; () banked
 25353  0176DE  A794               	btfss	148,3,b	;volatile
 25354  0176E0  0011               	retfie		f
 25355                           
 25356                           ; BSR set to: 57
 25357  0176E2  A7A4               	btfss	164,3,b	;volatile
 25358  0176E4  0011               	retfie		f
 25359                           
 25360                           ; BSR set to: 57
 25361                           ;main.c: 298: CCP1IF = 0;
 25362  0176E6  97A4               	bcf	164,3,b	;volatile
 25363                           
 25364                           ; BSR set to: 57
 25365                           ;main.c: 300: updateTime();
 25366  0176E8  EC87  F0BB         	call	_updateTime	;wreg free
 25367  0176EC  0011               	retfie		f
 25368  0176EE                     __end_of_ccp1Int:
 25369                           	opt stack 0
 25370                           
 25371 ;; *************** function _updateTime *****************
 25372 ;; Defined at:
 25373 ;;		line 30 in file "src/stack/time.c"
 25374 ;; Parameters:    Size  Location     Type
 25375 ;;		None
 25376 ;; Auto vars:     Size  Location     Type
 25377 ;;		None
 25378 ;; Return value:  Size  Location     Type
 25379 ;;                  1    wreg      void 
 25380 ;; Registers used:
 25381 ;;		wreg, status,2, status,0
 25382 ;; Tracked objects:
 25383 ;;		On entry : 0/0
 25384 ;;		On exit  : 0/0
 25385 ;;		Unchanged: 0/0
 25386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25391 ;;Total ram usage:        0 bytes
 25392 ;; Hardware stack levels used:    1
 25393 ;; This function calls:
 25394 ;;		Nothing
 25395 ;; This function is called by:
 25396 ;;		_ccp1Int
 25397 ;; This function uses a non-reentrant model
 25398 ;;
 25399                           
 25400                           	psect	text129
 25401  01770E                     __ptext129:
 25402                           	opt stack 0
 25403  01770E                     _updateTime:
 25404                           	opt stack 17
 25405                           
 25406                           ;time.c: 31: time++;
 25407                           
 25408                           ;incstack = 0
 25409  01770E  0E01               	movlw	1
 25410  017710  0102               	movlb	2	; () banked
 25411  017712  279F               	addwf	_time& (0+255),f,b	;volatile
 25412  017714  0E00               	movlw	0
 25413  017716  23A0               	addwfc	(_time+1)& (0+255),f,b	;volatile
 25414  017718  23A1               	addwfc	(_time+2)& (0+255),f,b	;volatile
 25415  01771A  23A2               	addwfc	(_time+3)& (0+255),f,b	;volatile
 25416                           
 25417                           ; BSR set to: 2
 25418  01771C  0012               	return		;funcret
 25419  01771E                     __end_of_updateTime:
 25420                           	opt stack 0
 25421                           
 25422 ;; *************** function _tmr0Int *****************
 25423 ;; Defined at:
 25424 ;;		line 304 in file "src/system/main.c"
 25425 ;; Parameters:    Size  Location     Type
 25426 ;;		None
 25427 ;; Auto vars:     Size  Location     Type
 25428 ;;		None
 25429 ;; Return value:  Size  Location     Type
 25430 ;;                  1    wreg      void 
 25431 ;; Registers used:
 25432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25433 ;; Tracked objects:
 25434 ;;		On entry : 0/0
 25435 ;;		On exit  : 0/0
 25436 ;;		Unchanged: 0/0
 25437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25442 ;;Total ram usage:        0 bytes
 25443 ;; Hardware stack levels used:    1
 25444 ;; Hardware stack levels required when called:    3
 25445 ;; This function calls:
 25446 ;;		_buttonHandler
 25447 ;;		_sevenSegmentUpdate
 25448 ;; This function is called by:
 25449 ;;		Interrupt level 2
 25450 ;; This function uses a non-reentrant model
 25451 ;;
 25452                           
 25453                           	psect	text130
 25454  0173DC                     __ptext130:
 25455                           	opt stack 0
 25456  0173DC                     _tmr0Int:
 25457                           	opt stack 15
 25458                           
 25459                           ;main.c: 306: if (TMR0IE && TMR0IF) {
 25460                           
 25461                           ; BSR set to: 2
 25462                           ;incstack = 0
 25463  0173DC  0139               	movlb	57	; () banked
 25464  0173DE  AF93               	btfss	147,7,b	;volatile
 25465  0173E0  0011               	retfie		f
 25466                           
 25467                           ; BSR set to: 57
 25468  0173E2  AFA3               	btfss	163,7,b	;volatile
 25469  0173E4  0011               	retfie		f
 25470                           
 25471                           ; BSR set to: 57
 25472                           ;main.c: 307: TMR0IF = 0;
 25473  0173E6  9FA3               	bcf	163,7,b	;volatile
 25474                           
 25475                           ; BSR set to: 57
 25476                           ;main.c: 308: sevenSegmentUpdate(numberToDisplay);
 25477  0173E8  0060  FACC  F00F   	movff	_numberToDisplay,sevenSegmentUpdate@numberToDisplay	;volatile
 25478  0173EE  0060  FAD0  F010   	movff	_numberToDisplay+1,sevenSegmentUpdate@numberToDisplay+1	;volatile
 25479  0173F4  EC22  F0AD         	call	_sevenSegmentUpdate	;wreg free
 25480                           
 25481                           ;main.c: 309: buttonHandler(&buttonState);
 25482  0173F8  0EDB               	movlw	low _buttonState
 25483  0173FA  6E01               	movwf	buttonHandler@state,c
 25484  0173FC  0E02               	movlw	high _buttonState
 25485  0173FE  6E02               	movwf	buttonHandler@state+1,c
 25486  017400  EC89  F0AD         	call	_buttonHandler	;wreg free
 25487  017404  0011               	retfie		f
 25488  017406                     __end_of_tmr0Int:
 25489                           	opt stack 0
 25490                           
 25491 ;; *************** function _sevenSegmentUpdate *****************
 25492 ;; Defined at:
 25493 ;;		line 41 in file "src/system/sevenseg.c"
 25494 ;; Parameters:    Size  Location     Type
 25495 ;;  numberToDisp    2   14[COMRAM] unsigned int 
 25496 ;; Auto vars:     Size  Location     Type
 25497 ;;  i               1   20[COMRAM] unsigned char 
 25498 ;; Return value:  Size  Location     Type
 25499 ;;                  1    wreg      void 
 25500 ;; Registers used:
 25501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25502 ;; Tracked objects:
 25503 ;;		On entry : 0/0
 25504 ;;		On exit  : 0/0
 25505 ;;		Unchanged: 0/0
 25506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25508 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25509 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25510 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25511 ;;Total ram usage:        7 bytes
 25512 ;; Hardware stack levels used:    1
 25513 ;; Hardware stack levels required when called:    2
 25514 ;; This function calls:
 25515 ;;		_parseNumber
 25516 ;; This function is called by:
 25517 ;;		_tmr0Int
 25518 ;; This function uses a non-reentrant model
 25519 ;;
 25520                           
 25521                           	psect	text131
 25522  015A44                     __ptext131:
 25523                           	opt stack 0
 25524  015A44                     _sevenSegmentUpdate:
 25525                           	opt stack 15
 25526                           
 25527                           ;sevenseg.c: 43: uint8_t static digitPointer = 0;
 25528                           ;sevenseg.c: 44: uint8_t static digitsToDisplay[3] = {0, 0, 0};
 25529                           ;sevenseg.c: 45: PORTC &= ~(unsigned)(1 << digitPointer);
 25530                           
 25531                           ;incstack = 0
 25532  015A44  0060  F110  F011   	movff	sevenSegmentUpdate@digitPointer,??_sevenSegmentUpdate
 25533  015A4A  0E01               	movlw	1
 25534  015A4C  6E12               	movwf	(??_sevenSegmentUpdate+1)& (0+255),c
 25535  015A4E  2A11               	incf	??_sevenSegmentUpdate,f,c
 25536  015A50  D002               	goto	i2u1029_44
 25537  015A52                     i2u1029_45:
 25538  015A52  90D8               	bcf	16344,0,c
 25539  015A54  3612               	rlcf	??_sevenSegmentUpdate+1,f,c
 25540  015A56                     i2u1029_44:
 25541  015A56  2E11               	decfsz	??_sevenSegmentUpdate,f,c
 25542  015A58  D7FC               	goto	i2u1029_45
 25543  015A5A  5012               	movf	??_sevenSegmentUpdate+1,w,c
 25544  015A5C  0AFF               	xorlw	255
 25545  015A5E  013F               	movlb	63	; () banked
 25546  015A60  17CC               	andwf	204,f,b	;volatile
 25547                           
 25548                           ; BSR set to: 63
 25549                           ;sevenseg.c: 46: PORTA = 0x00;
 25550  015A62  0E00               	movlw	0
 25551  015A64  6FCA               	movwf	202,b	;volatile
 25552                           
 25553                           ; BSR set to: 63
 25554                           ;sevenseg.c: 47: digitPointer = (unsigned)((digitPointer >= 2) ? 0 : digitPointer + 1);
 25555  015A66  0E02               	movlw	2
 25556  015A68  6044               	cpfslt	sevenSegmentUpdate@digitPointer,c
 25557  015A6A  D007               	goto	i2l773
 25558                           
 25559                           ; BSR set to: 63
 25560  015A6C  0E01               	movlw	1
 25561  015A6E  2444               	addwf	sevenSegmentUpdate@digitPointer,w,c
 25562  015A70  6E13               	movwf	_sevenSegmentUpdate$2612,c
 25563  015A72  6A14               	clrf	_sevenSegmentUpdate$2612+1,c
 25564  015A74  0E00               	movlw	0
 25565  015A76  2214               	addwfc	_sevenSegmentUpdate$2612+1,f,c
 25566  015A78  D004               	goto	i2l775
 25567  015A7A                     i2l773:
 25568                           
 25569                           ; BSR set to: 63
 25570                           
 25571                           ; BSR set to: 63
 25572  015A7A  0E00               	movlw	0
 25573  015A7C  6E14               	movwf	_sevenSegmentUpdate$2612+1,c
 25574  015A7E  0E00               	movlw	0
 25575  015A80  6E13               	movwf	_sevenSegmentUpdate$2612,c
 25576  015A82                     i2l775:
 25577                           
 25578                           ; BSR set to: 63
 25579                           
 25580                           ; BSR set to: 63
 25581  015A82  0060  F04C  F044   	movff	_sevenSegmentUpdate$2612,sevenSegmentUpdate@digitPointer
 25582                           
 25583                           ; BSR set to: 63
 25584                           ;sevenseg.c: 49: if (numberToDisplay > 999) {
 25585  015A88  0EE8               	movlw	232
 25586  015A8A  5C0F               	subwf	sevenSegmentUpdate@numberToDisplay,w,c
 25587  015A8C  0E03               	movlw	3
 25588  015A8E  5810               	subwfb	sevenSegmentUpdate@numberToDisplay+1,w,c
 25589  015A90  B0D8               	btfsc	16344,0,c
 25590  015A92  0012               	return	
 25591                           
 25592                           ; BSR set to: 63
 25593                           ;sevenseg.c: 51: }
 25594                           ;sevenseg.c: 52: for (uint8_t i = 0; i < 3; i++) {
 25595                           
 25596                           ; BSR set to: 63
 25597                           
 25598                           ; BSR set to: 63
 25599                           ;sevenseg.c: 50: return;
 25600  015A94  0E00               	movlw	0
 25601  015A96  6E15               	movwf	sevenSegmentUpdate@i,c
 25602  015A98                     i2l8972:
 25603                           
 25604                           ; BSR set to: 63
 25605  015A98  0E02               	movlw	2
 25606  015A9A  6415               	cpfsgt	sevenSegmentUpdate@i,c
 25607  015A9C  D001               	goto	i2l778
 25608  015A9E  D016               	goto	i2u1033_40
 25609  015AA0                     i2l778:
 25610                           
 25611                           ;sevenseg.c: 53: digitsToDisplay[i] = parseNumber(numberToDisplay, i);
 25612                           
 25613                           ; BSR set to: 63
 25614  015AA0  5015               	movf	sevenSegmentUpdate@i,w,c
 25615  015AA2  0D01               	mullw	1
 25616  015AA4  0EBB               	movlw	low sevenSegmentUpdate@digitsToDisplay
 25617  015AA6  24F3               	addwf	16371,w,c
 25618  015AA8  6ED9               	movwf	16345,c
 25619  015AAA  0E02               	movlw	high sevenSegmentUpdate@digitsToDisplay
 25620  015AAC  20F4               	addwfc	16372,w,c
 25621  015AAE  6EDA               	movwf	16346,c
 25622  015AB0  0060  F03C  F008   	movff	sevenSegmentUpdate@numberToDisplay,parseNumber@numberToDisplay
 25623  015AB6  0060  F040  F009   	movff	sevenSegmentUpdate@numberToDisplay+1,parseNumber@numberToDisplay+1
 25624  015ABC  0060  F054  F00A   	movff	sevenSegmentUpdate@i,parseNumber@digit
 25625  015AC2  ECB4  F0B2         	call	_parseNumber	;wreg free
 25626  015AC6  6EDF               	movwf	16351,c
 25627  015AC8  2A15               	incf	sevenSegmentUpdate@i,f,c
 25628  015ACA  D7E6               	goto	i2l8972
 25629  015ACC                     i2u1033_40:
 25630                           
 25631                           ;sevenseg.c: 54: }
 25632                           ;sevenseg.c: 55: PORTC |= (unsigned)(1 << digitPointer);
 25633  015ACC  0060  F110  F011   	movff	sevenSegmentUpdate@digitPointer,??_sevenSegmentUpdate
 25634  015AD2  0E01               	movlw	1
 25635  015AD4  6E12               	movwf	(??_sevenSegmentUpdate+1)& (0+255),c
 25636  015AD6  2A11               	incf	??_sevenSegmentUpdate,f,c
 25637  015AD8  D002               	goto	i2u1034_44
 25638  015ADA                     i2u1034_45:
 25639  015ADA  90D8               	bcf	16344,0,c
 25640  015ADC  3612               	rlcf	??_sevenSegmentUpdate+1,f,c
 25641  015ADE                     i2u1034_44:
 25642  015ADE  2E11               	decfsz	??_sevenSegmentUpdate,f,c
 25643  015AE0  D7FC               	goto	i2u1034_45
 25644  015AE2  5012               	movf	??_sevenSegmentUpdate+1,w,c
 25645  015AE4  013F               	movlb	63	; () banked
 25646  015AE6  13CC               	iorwf	204,f,b	;volatile
 25647                           
 25648                           ; BSR set to: 63
 25649                           ;sevenseg.c: 56: PORTA = (sevenSegCharacters[digitsToDisplay[digitPointer]]);
 25650  015AE8  5044               	movf	sevenSegmentUpdate@digitPointer,w,c
 25651  015AEA  0D01               	mullw	1
 25652  015AEC  0EBB               	movlw	low sevenSegmentUpdate@digitsToDisplay
 25653  015AEE  24F3               	addwf	16371,w,c
 25654  015AF0  6ED9               	movwf	16345,c
 25655  015AF2  0E02               	movlw	high sevenSegmentUpdate@digitsToDisplay
 25656  015AF4  20F4               	addwfc	16372,w,c
 25657  015AF6  6EDA               	movwf	16346,c
 25658  015AF8  50DF               	movf	16351,w,c
 25659  015AFA  6E11               	movwf	??_sevenSegmentUpdate& (0+255),c
 25660  015AFC  5011               	movf	??_sevenSegmentUpdate,w,c
 25661  015AFE  0D01               	mullw	1
 25662  015B00  0EE9               	movlw	low _sevenSegCharacters
 25663  015B02  24F3               	addwf	16371,w,c
 25664  015B04  6ED9               	movwf	16345,c
 25665  015B06  0E03               	movlw	high _sevenSegCharacters
 25666  015B08  20F4               	addwfc	16372,w,c
 25667  015B0A  6EDA               	movwf	16346,c
 25668  015B0C  50DF               	movf	16351,w,c
 25669  015B0E  6FCA               	movwf	202,b	;volatile
 25670                           
 25671                           ; BSR set to: 63
 25672  015B10  0012               	return		;funcret
 25673  015B12                     __end_of_sevenSegmentUpdate:
 25674                           	opt stack 0
 25675                           
 25676 ;; *************** function _parseNumber *****************
 25677 ;; Defined at:
 25678 ;;		line 59 in file "src/system/sevenseg.c"
 25679 ;; Parameters:    Size  Location     Type
 25680 ;;  numberToDisp    2    7[COMRAM] unsigned int 
 25681 ;;  digit           1    9[COMRAM] unsigned char 
 25682 ;; Auto vars:     Size  Location     Type
 25683 ;;  hundreds        1   13[COMRAM] unsigned char 
 25684 ;;  tens            1   12[COMRAM] unsigned char 
 25685 ;;  ones            1   11[COMRAM] unsigned char 
 25686 ;; Return value:  Size  Location     Type
 25687 ;;                  1    wreg      unsigned char 
 25688 ;; Registers used:
 25689 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 25690 ;; Tracked objects:
 25691 ;;		On entry : 0/0
 25692 ;;		On exit  : 0/0
 25693 ;;		Unchanged: 0/0
 25694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25695 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25696 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25697 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25698 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25699 ;;Total ram usage:        7 bytes
 25700 ;; Hardware stack levels used:    1
 25701 ;; Hardware stack levels required when called:    1
 25702 ;; This function calls:
 25703 ;;		i2___lwdiv
 25704 ;; This function is called by:
 25705 ;;		_sevenSegmentUpdate
 25706 ;; This function uses a non-reentrant model
 25707 ;;
 25708                           
 25709                           	psect	text132
 25710  016568                     __ptext132:
 25711                           	opt stack 0
 25712  016568                     _parseNumber:
 25713                           	opt stack 15
 25714                           
 25715                           ;sevenseg.c: 61: uint8_t hundreds = numberToDisplay / 100u;
 25716                           
 25717                           ; BSR set to: 63
 25718                           ;incstack = 0
 25719  016568  0060  F020  F001   	movff	parseNumber@numberToDisplay,i2___lwdiv@dividend
 25720  01656E  0060  F024  F002   	movff	parseNumber@numberToDisplay+1,i2___lwdiv@dividend+1
 25721  016574  0E00               	movlw	0
 25722  016576  6E04               	movwf	i2___lwdiv@divisor+1,c
 25723  016578  0E64               	movlw	100
 25724  01657A  6E03               	movwf	i2___lwdiv@divisor,c
 25725  01657C  EC23  F0B7         	call	i2___lwdiv	;wreg free
 25726  016580  5001               	movf	?i2___lwdiv,w,c
 25727  016582  6E0E               	movwf	parseNumber@hundreds,c
 25728                           
 25729                           ;sevenseg.c: 62: uint8_t tens = (numberToDisplay - hundreds * 100u) / 10u;
 25730  016584  500E               	movf	parseNumber@hundreds,w,c
 25731  016586  0D64               	mullw	100
 25732  016588  1EF3               	comf	16371,f,c
 25733  01658A  1EF4               	comf	16372,f,c
 25734  01658C  4AF3               	infsnz	16371,f,c
 25735  01658E  2AF4               	incf	16372,f,c
 25736  016590  5008               	movf	parseNumber@numberToDisplay,w,c
 25737  016592  24F3               	addwf	16371,w,c
 25738  016594  6E01               	movwf	i2___lwdiv@dividend,c
 25739  016596  5009               	movf	parseNumber@numberToDisplay+1,w,c
 25740  016598  20F4               	addwfc	16372,w,c
 25741  01659A  6E02               	movwf	i2___lwdiv@dividend+1,c
 25742  01659C  0E00               	movlw	0
 25743  01659E  6E04               	movwf	i2___lwdiv@divisor+1,c
 25744  0165A0  0E0A               	movlw	10
 25745  0165A2  6E03               	movwf	i2___lwdiv@divisor,c
 25746  0165A4  EC23  F0B7         	call	i2___lwdiv	;wreg free
 25747  0165A8  5001               	movf	?i2___lwdiv,w,c
 25748  0165AA  6E0D               	movwf	parseNumber@tens,c
 25749                           
 25750                           ;sevenseg.c: 63: uint8_t ones = (numberToDisplay - hundreds * 100u - tens * 10u);
 25751  0165AC  500D               	movf	parseNumber@tens,w,c
 25752  0165AE  0D0A               	mullw	10
 25753  0165B0  006F FFCC  F00B    	movff	16371,??_parseNumber
 25754  0165B6  500E               	movf	parseNumber@hundreds,w,c
 25755  0165B8  0D64               	mullw	100
 25756  0165BA  50F3               	movf	16371,w,c
 25757  0165BC  240B               	addwf	??_parseNumber,w,c
 25758  0165BE  0800               	sublw	0
 25759  0165C0  2408               	addwf	parseNumber@numberToDisplay,w,c
 25760  0165C2  6E0C               	movwf	parseNumber@ones,c
 25761                           
 25762                           ;sevenseg.c: 64: switch (digit) {
 25763  0165C4  D008               	goto	i2l782
 25764  0165C6                     
 25765                           ;sevenseg.c: 66: return ones;
 25766  0165C6  500C               	movf	parseNumber@ones,w,c
 25767  0165C8  0012               	return	
 25768  0165CA                     
 25769                           ;sevenseg.c: 68: return tens;
 25770  0165CA  500D               	movf	parseNumber@tens,w,c
 25771  0165CC  0012               	return	
 25772  0165CE                     
 25773                           ;sevenseg.c: 70: return hundreds;
 25774  0165CE  500E               	movf	parseNumber@hundreds,w,c
 25775  0165D0  0012               	return	
 25776  0165D2  0E00               	movlw	0
 25777                           
 25778                           ;sevenseg.c: 72: }
 25779  0165D4  0012               	return	
 25780  0165D6                     i2l782:
 25781  0165D6  500A               	movf	parseNumber@digit,w,c
 25782                           
 25783                           ; Switch size 1, requested type "space"
 25784                           ; Number of cases is 3, Range of values is 0 to 2
 25785                           ; switch strategies available:
 25786                           ; Name         Instructions Cycles
 25787                           ; simple_byte           10     6 (average)
 25788                           ;	Chosen strategy is simple_byte
 25789  0165D8  0A00               	xorlw	0	; case 0
 25790  0165DA  B4D8               	btfsc	16344,2,c
 25791  0165DC  D7F8               	goto	i2l786
 25792  0165DE  0A01               	xorlw	1	; case 1
 25793  0165E0  B4D8               	btfsc	16344,2,c
 25794  0165E2  D7F3               	goto	i2l785
 25795  0165E4  0A03               	xorlw	3	; case 2
 25796  0165E6  B4D8               	btfsc	16344,2,c
 25797  0165E8  D7EE               	goto	i2l783
 25798  0165EA  D7F3               	goto	i2l787
 25799  0165EC                     __end_of_parseNumber:
 25800                           	opt stack 0
 25801                           
 25802 ;; *************** function i2___lwdiv *****************
 25803 ;; Defined at:
 25804 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 25805 ;; Parameters:    Size  Location     Type
 25806 ;;  dividend        2    0[COMRAM] unsigned int 
 25807 ;;  divisor         2    2[COMRAM] unsigned int 
 25808 ;; Auto vars:     Size  Location     Type
 25809 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 25810 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 25811 ;; Return value:  Size  Location     Type
 25812 ;;                  2    0[COMRAM] unsigned int 
 25813 ;; Registers used:
 25814 ;;		wreg, status,2, status,0
 25815 ;; Tracked objects:
 25816 ;;		On entry : 0/0
 25817 ;;		On exit  : 0/0
 25818 ;;		Unchanged: 0/0
 25819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25821 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25823 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25824 ;;Total ram usage:        7 bytes
 25825 ;; Hardware stack levels used:    1
 25826 ;; This function calls:
 25827 ;;		Nothing
 25828 ;; This function is called by:
 25829 ;;		_parseNumber
 25830 ;; This function uses a non-reentrant model
 25831 ;;
 25832                           
 25833                           	psect	text133
 25834  016E46                     __ptext133:
 25835                           	opt stack 0
 25836  016E46                     i2___lwdiv:
 25837                           	opt stack 15
 25838                           
 25839                           ;incstack = 0
 25840  016E46  0E00               	movlw	0
 25841  016E48  6E06               	movwf	i2___lwdiv@quotient+1,c
 25842  016E4A  0E00               	movlw	0
 25843  016E4C  6E05               	movwf	i2___lwdiv@quotient,c
 25844  016E4E  5003               	movf	i2___lwdiv@divisor,w,c
 25845  016E50  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 25846  016E52  B4D8               	btfsc	16344,2,c
 25847  016E54  D01C               	goto	i2l1941
 25848  016E56  0E01               	movlw	1
 25849  016E58  6E07               	movwf	i2___lwdiv@counter,c
 25850  016E5A  D004               	goto	i2l1936
 25851  016E5C  90D8               	bcf	16344,0,c
 25852  016E5E  3603               	rlcf	i2___lwdiv@divisor,f,c
 25853  016E60  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 25854  016E62  2A07               	incf	i2___lwdiv@counter,f,c
 25855  016E64                     i2l1936:
 25856  016E64  AE04               	btfss	i2___lwdiv@divisor+1,7,c
 25857  016E66  D7FA               	goto	i2l1937
 25858  016E68                     i2u927_40:
 25859  016E68  90D8               	bcf	16344,0,c
 25860  016E6A  3605               	rlcf	i2___lwdiv@quotient,f,c
 25861  016E6C  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 25862  016E6E  5003               	movf	i2___lwdiv@divisor,w,c
 25863  016E70  5C01               	subwf	i2___lwdiv@dividend,w,c
 25864  016E72  5004               	movf	i2___lwdiv@divisor+1,w,c
 25865  016E74  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 25866  016E76  A0D8               	btfss	16344,0,c
 25867  016E78  D005               	goto	i2l1940
 25868  016E7A  5003               	movf	i2___lwdiv@divisor,w,c
 25869  016E7C  5E01               	subwf	i2___lwdiv@dividend,f,c
 25870  016E7E  5004               	movf	i2___lwdiv@divisor+1,w,c
 25871  016E80  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 25872  016E82  8005               	bsf	i2___lwdiv@quotient,0,c
 25873  016E84                     i2l1940:
 25874  016E84  90D8               	bcf	16344,0,c
 25875  016E86  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 25876  016E88  3203               	rrcf	i2___lwdiv@divisor,f,c
 25877  016E8A  2E07               	decfsz	i2___lwdiv@counter,f,c
 25878  016E8C  D7ED               	goto	i2u927_40
 25879  016E8E                     i2l1941:
 25880  016E8E  0060  F014  F001   	movff	i2___lwdiv@quotient,?i2___lwdiv
 25881  016E94  0060  F018  F002   	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 25882  016E9A  0012               	return		;funcret
 25883  016E9C                     __end_ofi2___lwdiv:
 25884                           	opt stack 0
 25885                           
 25886 ;; *************** function _buttonHandler *****************
 25887 ;; Defined at:
 25888 ;;		line 271 in file "src/system/main.c"
 25889 ;; Parameters:    Size  Location     Type
 25890 ;;  state           2    0[COMRAM] PTR volatile unsigned ch
 25891 ;;		 -> buttonState(1), 
 25892 ;; Auto vars:     Size  Location     Type
 25893 ;;  debounceValu    4    6[COMRAM] const unsigned long 
 25894 ;;  resetValue      4    2[COMRAM] const unsigned long 
 25895 ;; Return value:  Size  Location     Type
 25896 ;;                  1    wreg      void 
 25897 ;; Registers used:
 25898 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25899 ;; Tracked objects:
 25900 ;;		On entry : 0/0
 25901 ;;		On exit  : 0/0
 25902 ;;		Unchanged: 0/0
 25903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25905 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25907 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25908 ;;Total ram usage:       10 bytes
 25909 ;; Hardware stack levels used:    1
 25910 ;; This function calls:
 25911 ;;		Nothing
 25912 ;; This function is called by:
 25913 ;;		_tmr0Int
 25914 ;; This function uses a non-reentrant model
 25915 ;;
 25916                           
 25917                           	psect	text134
 25918  015B12                     __ptext134:
 25919                           	opt stack 0
 25920  015B12                     _buttonHandler:
 25921                           	opt stack 17
 25922                           
 25923                           ;main.c: 272: uint8_t static oldState = 0;
 25924                           ;main.c: 273: uint8_t static newState = 0;
 25925                           ;main.c: 274: uint32_t static debounceCounter = 0;
 25926                           ;main.c: 275: const uint32_t debounceValue = 0x1f;
 25927                           
 25928                           ;incstack = 0
 25929  015B12  0E1F               	movlw	31
 25930  015B14  6E07               	movwf	buttonHandler@debounceValue,c
 25931  015B16  0E00               	movlw	0
 25932  015B18  6E08               	movwf	buttonHandler@debounceValue+1,c
 25933  015B1A  0E00               	movlw	0
 25934  015B1C  6E09               	movwf	buttonHandler@debounceValue+2,c
 25935  015B1E  0E00               	movlw	0
 25936  015B20  6E0A               	movwf	buttonHandler@debounceValue+3,c
 25937                           
 25938                           ;main.c: 276: const uint32_t resetValue = 0x3ff;
 25939  015B22  0EFF               	movlw	255
 25940  015B24  6E03               	movwf	buttonHandler@resetValue,c
 25941  015B26  0E03               	movlw	3
 25942  015B28  6E04               	movwf	buttonHandler@resetValue+1,c
 25943  015B2A  0E00               	movlw	0
 25944  015B2C  6E05               	movwf	buttonHandler@resetValue+2,c
 25945  015B2E  0E00               	movlw	0
 25946  015B30  6E06               	movwf	buttonHandler@resetValue+3,c
 25947                           
 25948                           ;main.c: 277: if ((unsigned)(!(PORTB & (1<<5)))) {
 25949  015B32  013F               	movlb	63	; () banked
 25950  015B34  BBCB               	btfsc	203,5,b	;volatile
 25951  015B36  D008               	goto	i2l727
 25952                           
 25953                           ; BSR set to: 63
 25954                           ;main.c: 278: debounceCounter++;
 25955  015B38  0E01               	movlw	1
 25956  015B3A  0102               	movlb	2	; () banked
 25957  015B3C  27AF               	addwf	buttonHandler@debounceCounter& (0+255),f,b
 25958  015B3E  0E00               	movlw	0
 25959  015B40  23B0               	addwfc	(buttonHandler@debounceCounter+1)& (0+255),f,b
 25960  015B42  23B1               	addwfc	(buttonHandler@debounceCounter+2)& (0+255),f,b
 25961  015B44  23B2               	addwfc	(buttonHandler@debounceCounter+3)& (0+255),f,b
 25962                           
 25963                           ;main.c: 279: } else {
 25964  015B46  D009               	goto	i2l728
 25965  015B48                     i2l727:
 25966                           
 25967                           ;main.c: 280: debounceCounter = 0;
 25968                           
 25969                           ; BSR set to: 2
 25970  015B48  0E00               	movlw	0
 25971  015B4A  0102               	movlb	2	; () banked
 25972  015B4C  6FAF               	movwf	buttonHandler@debounceCounter& (0+255),b
 25973  015B4E  0E00               	movlw	0
 25974  015B50  6FB0               	movwf	(buttonHandler@debounceCounter+1)& (0+255),b
 25975  015B52  0E00               	movlw	0
 25976  015B54  6FB1               	movwf	(buttonHandler@debounceCounter+2)& (0+255),b
 25977  015B56  0E00               	movlw	0
 25978  015B58  6FB2               	movwf	(buttonHandler@debounceCounter+3)& (0+255),b
 25979  015B5A                     i2l728:
 25980                           
 25981                           ; BSR set to: 2
 25982                           ;main.c: 281: }
 25983                           ;main.c: 282: newState = (unsigned) ((debounceCounter >= debounceValue) ? 1 : 0);
 25984                           
 25985                           ; BSR set to: 2
 25986  015B5A  5007               	movf	buttonHandler@debounceValue,w,c
 25987  015B5C  5DAF               	subwf	buttonHandler@debounceCounter& (0+255),w,b
 25988  015B5E  5008               	movf	buttonHandler@debounceValue+1,w,c
 25989  015B60  59B0               	subwfb	(buttonHandler@debounceCounter+1)& (0+255),w,b
 25990  015B62  5009               	movf	buttonHandler@debounceValue+2,w,c
 25991  015B64  59B1               	subwfb	(buttonHandler@debounceCounter+2)& (0+255),w,b
 25992  015B66  500A               	movf	buttonHandler@debounceValue+3,w,c
 25993  015B68  59B2               	subwfb	(buttonHandler@debounceCounter+3)& (0+255),w,b
 25994  015B6A  A0D8               	btfss	16344,0,c
 25995  015B6C  D002               	goto	i2u1024_40
 25996  015B6E  0E01               	movlw	1
 25997  015B70  D001               	goto	i2u1025_40
 25998  015B72                     i2u1024_40:
 25999  015B72  0E00               	movlw	0
 26000  015B74                     i2u1025_40:
 26001  015B74  6E45               	movwf	buttonHandler@newState,c
 26002                           
 26003                           ; BSR set to: 2
 26004                           ;main.c: 283: if (newState && !oldState) {
 26005  015B76  5045               	movf	buttonHandler@newState,w,c
 26006  015B78  B4D8               	btfsc	16344,2,c
 26007  015B7A  D017               	goto	i2l729
 26008                           
 26009                           ; BSR set to: 2
 26010  015B7C  5046               	movf	buttonHandler@oldState,w,c
 26011  015B7E  A4D8               	btfss	16344,2,c
 26012  015B80  D014               	goto	i2l729
 26013                           
 26014                           ; BSR set to: 2
 26015                           ;main.c: 284: debounceCounter = debounceValue;
 26016  015B82  0060  F01C  F2AF   	movff	buttonHandler@debounceValue,buttonHandler@debounceCounter
 26017  015B88  0060  F020  F2B0   	movff	buttonHandler@debounceValue+1,buttonHandler@debounceCounter+1
 26018  015B8E  0060  F024  F2B1   	movff	buttonHandler@debounceValue+2,buttonHandler@debounceCounter+2
 26019  015B94  0060  F028  F2B2   	movff	buttonHandler@debounceValue+3,buttonHandler@debounceCounter+3
 26020                           
 26021                           ; BSR set to: 2
 26022                           ;main.c: 285: *state = 1;
 26023  015B9A  0060  F007  FFD9   	movff	buttonHandler@state,16345
 26024  015BA0  0060  F00B  FFDA   	movff	buttonHandler@state+1,16346
 26025  015BA6  0E01               	movlw	1
 26026  015BA8  D007               	goto	L31
 26027  015BAA                     i2l729:
 26028                           
 26029                           ; BSR set to: 2
 26030                           ;main.c: 287: *state = 0;
 26031                           
 26032                           ; BSR set to: 2
 26033  015BAA  0060  F007  FFD9   	movff	buttonHandler@state,16345
 26034  015BB0  0060  F00B  FFDA   	movff	buttonHandler@state+1,16346
 26035  015BB6  0E00               	movlw	0
 26036  015BB8                     L31:
 26037  015BB8  6EDF               	movwf	16351,c
 26038                           
 26039                           ; BSR set to: 2
 26040                           ;main.c: 288: }
 26041                           ;main.c: 289: if (debounceCounter > resetValue)
 26042                           
 26043                           ; BSR set to: 2
 26044  015BBA  51AF               	movf	buttonHandler@debounceCounter& (0+255),w,b
 26045  015BBC  5C03               	subwf	buttonHandler@resetValue,w,c
 26046  015BBE  51B0               	movf	(buttonHandler@debounceCounter+1)& (0+255),w,b
 26047  015BC0  5804               	subwfb	buttonHandler@resetValue+1,w,c
 26048  015BC2  51B1               	movf	(buttonHandler@debounceCounter+2)& (0+255),w,b
 26049  015BC4  5805               	subwfb	buttonHandler@resetValue+2,w,c
 26050  015BC6  51B2               	movf	(buttonHandler@debounceCounter+3)& (0+255),w,b
 26051  015BC8  5806               	subwfb	buttonHandler@resetValue+3,w,c
 26052  015BCA  A0D8               	btfss	16344,0,c
 26053                           
 26054                           ; BSR set to: 2
 26055  015BCC  00FF               	reset		;# 
 26056                           
 26057                           ;main.c: 292: oldState = newState;
 26058  015BCE  0060  F114  F046   	movff	buttonHandler@newState,buttonHandler@oldState
 26059  015BD4  0012               	return		;funcret
 26060  015BD6                     __end_of_buttonHandler:
 26061                           	opt stack 0
 26062                           
 26063                           ;
 26064                           ; Interrupt Vector Table @ 0x8
 26065                           ;
 26066                           
 26067                           	psect	ivt0x8
 26068  000008                     __pivt0x8:
 26069                           	opt stack 0
 26070  000008                     ivt0x8_base:
 26071                           	opt stack 0
 26072                           
 26073                           ; Vector 0 : SWINT
 26074  000008  002B               	dw	ivt0x8_undefint shr (0+2)
 26075                           
 26076                           ; Vector 1 : HLVD
 26077  00000A  002B               	dw	ivt0x8_undefint shr (0+2)
 26078                           
 26079                           ; Vector 2 : OSF
 26080  00000C  002B               	dw	ivt0x8_undefint shr (0+2)
 26081                           
 26082                           ; Vector 3 : CSW
 26083  00000E  002B               	dw	ivt0x8_undefint shr (0+2)
 26084                           
 26085                           ; Vector 4 : NVM
 26086  000010  002B               	dw	ivt0x8_undefint shr (0+2)
 26087                           
 26088                           ; Vector 5 : SCAN
 26089  000012  002B               	dw	ivt0x8_undefint shr (0+2)
 26090                           
 26091                           ; Vector 6 : CRC
 26092  000014  002B               	dw	ivt0x8_undefint shr (0+2)
 26093                           
 26094                           ; Vector 7 : IOC
 26095  000016  002B               	dw	ivt0x8_undefint shr (0+2)
 26096                           
 26097                           ; Vector 8 : INT0
 26098  000018  002B               	dw	ivt0x8_undefint shr (0+2)
 26099                           
 26100                           ; Vector 9 : ZCD
 26101  00001A  002B               	dw	ivt0x8_undefint shr (0+2)
 26102                           
 26103                           ; Vector 10 : AD
 26104  00001C  002B               	dw	ivt0x8_undefint shr (0+2)
 26105                           
 26106                           ; Vector 11 : ADT
 26107  00001E  002B               	dw	ivt0x8_undefint shr (0+2)
 26108                           
 26109                           ; Vector 12 : CMP1
 26110  000020  002B               	dw	ivt0x8_undefint shr (0+2)
 26111                           
 26112                           ; Vector 13 : SMT1
 26113  000022  002B               	dw	ivt0x8_undefint shr (0+2)
 26114                           
 26115                           ; Vector 14 : SMT1PRA
 26116  000024  002B               	dw	ivt0x8_undefint shr (0+2)
 26117                           
 26118                           ; Vector 15 : SMT1PRW
 26119  000026  002B               	dw	ivt0x8_undefint shr (0+2)
 26120                           
 26121                           ; Vector 16 : DMA1SCNT
 26122  000028  002B               	dw	ivt0x8_undefint shr (0+2)
 26123                           
 26124                           ; Vector 17 : DMA1DCNT
 26125  00002A  002B               	dw	ivt0x8_undefint shr (0+2)
 26126                           
 26127                           ; Vector 18 : DMA1OR
 26128  00002C  002B               	dw	ivt0x8_undefint shr (0+2)
 26129                           
 26130                           ; Vector 19 : DMA1A
 26131  00002E  002B               	dw	ivt0x8_undefint shr (0+2)
 26132                           
 26133                           ; Vector 20 : SPI1RX
 26134  000030  002B               	dw	ivt0x8_undefint shr (0+2)
 26135                           
 26136                           ; Vector 21 : SPI1TX
 26137  000032  002B               	dw	ivt0x8_undefint shr (0+2)
 26138                           
 26139                           ; Vector 22 : SPI1
 26140  000034  002B               	dw	ivt0x8_undefint shr (0+2)
 26141                           
 26142                           ; Vector 23 : I2C1RX
 26143  000036  002B               	dw	ivt0x8_undefint shr (0+2)
 26144                           
 26145                           ; Vector 24 : I2C1TX
 26146  000038  002B               	dw	ivt0x8_undefint shr (0+2)
 26147                           
 26148                           ; Vector 25 : I2C1
 26149  00003A  002B               	dw	ivt0x8_undefint shr (0+2)
 26150                           
 26151                           ; Vector 26 : I2C1E
 26152  00003C  002B               	dw	ivt0x8_undefint shr (0+2)
 26153                           
 26154                           ; Vector 27 : U1RX
 26155  00003E  002B               	dw	ivt0x8_undefint shr (0+2)
 26156                           
 26157                           ; Vector 28 : U1TX
 26158  000040  002B               	dw	ivt0x8_undefint shr (0+2)
 26159                           
 26160                           ; Vector 29 : U1E
 26161  000042  002B               	dw	ivt0x8_undefint shr (0+2)
 26162                           
 26163                           ; Vector 30 : U1
 26164  000044  002B               	dw	ivt0x8_undefint shr (0+2)
 26165                           
 26166                           ; Vector 31 : TMR0
 26167  000046  5CF7               	dw	_tmr0Int shr (0+2)
 26168                           
 26169                           ; Vector 32 : TMR1
 26170  000048  002B               	dw	ivt0x8_undefint shr (0+2)
 26171                           
 26172                           ; Vector 33 : TMR1G
 26173  00004A  002B               	dw	ivt0x8_undefint shr (0+2)
 26174                           
 26175                           ; Vector 34 : TMR2
 26176  00004C  002B               	dw	ivt0x8_undefint shr (0+2)
 26177                           
 26178                           ; Vector 35 : CCP1
 26179  00004E  5DB7               	dw	_ccp1Int shr (0+2)
 26180                           
 26181                           ; Vector 36 : Undefined
 26182  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 26183                           
 26184                           ; Vector 37 : NCO1
 26185  000052  002B               	dw	ivt0x8_undefint shr (0+2)
 26186                           
 26187                           ; Vector 38 : CWG1
 26188  000054  002B               	dw	ivt0x8_undefint shr (0+2)
 26189                           
 26190                           ; Vector 39 : CLC1
 26191  000056  002B               	dw	ivt0x8_undefint shr (0+2)
 26192                           
 26193                           ; Vector 40 : INT1
 26194  000058  002B               	dw	ivt0x8_undefint shr (0+2)
 26195                           
 26196                           ; Vector 41 : CMP2
 26197  00005A  002B               	dw	ivt0x8_undefint shr (0+2)
 26198                           
 26199                           ; Vector 42 : DMA2SCNT
 26200  00005C  002B               	dw	ivt0x8_undefint shr (0+2)
 26201                           
 26202                           ; Vector 43 : DMA2DCNT
 26203  00005E  002B               	dw	ivt0x8_undefint shr (0+2)
 26204                           
 26205                           ; Vector 44 : DMA2OR
 26206  000060  002B               	dw	ivt0x8_undefint shr (0+2)
 26207                           
 26208                           ; Vector 45 : DMA2A
 26209  000062  002B               	dw	ivt0x8_undefint shr (0+2)
 26210                           
 26211                           ; Vector 46 : I2C2RX
 26212  000064  002B               	dw	ivt0x8_undefint shr (0+2)
 26213                           
 26214                           ; Vector 47 : I2C2TX
 26215  000066  002B               	dw	ivt0x8_undefint shr (0+2)
 26216                           
 26217                           ; Vector 48 : I2C2
 26218  000068  002B               	dw	ivt0x8_undefint shr (0+2)
 26219                           
 26220                           ; Vector 49 : I2C2E
 26221  00006A  002B               	dw	ivt0x8_undefint shr (0+2)
 26222                           
 26223                           ; Vector 50 : U2RX
 26224  00006C  002B               	dw	ivt0x8_undefint shr (0+2)
 26225                           
 26226                           ; Vector 51 : U2TX
 26227  00006E  002B               	dw	ivt0x8_undefint shr (0+2)
 26228                           
 26229                           ; Vector 52 : U2E
 26230  000070  002B               	dw	ivt0x8_undefint shr (0+2)
 26231                           
 26232                           ; Vector 53 : U2
 26233  000072  002B               	dw	ivt0x8_undefint shr (0+2)
 26234                           
 26235                           ; Vector 54 : TMR3
 26236  000074  002B               	dw	ivt0x8_undefint shr (0+2)
 26237                           
 26238                           ; Vector 55 : TMR3G
 26239  000076  002B               	dw	ivt0x8_undefint shr (0+2)
 26240                           
 26241                           ; Vector 56 : TMR4
 26242  000078  002B               	dw	ivt0x8_undefint shr (0+2)
 26243                           
 26244                           ; Vector 57 : CCP2
 26245  00007A  002B               	dw	ivt0x8_undefint shr (0+2)
 26246                           
 26247                           ; Vector 58 : Undefined
 26248  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 26249                           
 26250                           ; Vector 59 : CWG2
 26251  00007E  002B               	dw	ivt0x8_undefint shr (0+2)
 26252                           
 26253                           ; Vector 60 : CLC2
 26254  000080  002B               	dw	ivt0x8_undefint shr (0+2)
 26255                           
 26256                           ; Vector 61 : INT2
 26257  000082  002B               	dw	ivt0x8_undefint shr (0+2)
 26258                           
 26259                           ; Vector 62 : Undefined
 26260  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 26261                           
 26262                           ; Vector 63 : Undefined
 26263  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 26264                           
 26265                           ; Vector 64 : Undefined
 26266  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 26267                           
 26268                           ; Vector 65 : Undefined
 26269  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 26270                           
 26271                           ; Vector 66 : Undefined
 26272  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 26273                           
 26274                           ; Vector 67 : Undefined
 26275  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 26276                           
 26277                           ; Vector 68 : Undefined
 26278  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 26279                           
 26280                           ; Vector 69 : Undefined
 26281  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 26282                           
 26283                           ; Vector 70 : TMR5
 26284  000094  002B               	dw	ivt0x8_undefint shr (0+2)
 26285                           
 26286                           ; Vector 71 : TMR5G
 26287  000096  002B               	dw	ivt0x8_undefint shr (0+2)
 26288                           
 26289                           ; Vector 72 : TMR6
 26290  000098  002B               	dw	ivt0x8_undefint shr (0+2)
 26291                           
 26292                           ; Vector 73 : CCP3
 26293  00009A  002B               	dw	ivt0x8_undefint shr (0+2)
 26294                           
 26295                           ; Vector 74 : CWG3
 26296  00009C  002B               	dw	ivt0x8_undefint shr (0+2)
 26297                           
 26298                           ; Vector 75 : CLC3
 26299  00009E  002B               	dw	ivt0x8_undefint shr (0+2)
 26300                           
 26301                           ; Vector 76 : Undefined
 26302  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 26303                           
 26304                           ; Vector 77 : Undefined
 26305  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 26306                           
 26307                           ; Vector 78 : Undefined
 26308  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 26309                           
 26310                           ; Vector 79 : Undefined
 26311  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 26312                           
 26313                           ; Vector 80 : CCP4
 26314  0000A8  002B               	dw	ivt0x8_undefint shr (0+2)
 26315                           
 26316                           ; Vector 81 : CLC4
 26317  0000AA  002B               	dw	ivt0x8_undefint shr (0+2)
 26318  0000AC                     ivt0x8_undefint:
 26319                           	opt stack 0
 26320  0000AC  00C0               	trap
 26321                           
 26322                           	psect	rparam


Data Sizes:
    Strings     1081
    Constant    11
    Data        50
    BSS         779
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     54      74
    BANK0           160    159     159
    BANK1           256    251     256
    BANK2           256    159     228
    BANK3           256      0     245
    BANK4           256      0     236
    BANK5           256      0     254
    BANK6           256     38      38
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> intToString@number(BANK3[10]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> intToString@number(BANK3[10]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> intToString@number(BANK3[10]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> intToString@number(BANK3[10]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 4
		 -> ipAdressToString@number(BANK2[4]), macToString@number(BANK2[3]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 4
		 -> ipAdressToString@number(BANK2[4]), macToString@number(BANK2[3]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 4
		 -> ipAdressToString@number(BANK2[4]), macToString@number(BANK2[3]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 4
		 -> ipAdressToString@number(BANK2[4]), macToString@number(BANK2[3]), 

    tcp_calculateHeaderChecksum@tcpHeader	PTR struct tcp_header size(2) Largest target is 21
		 -> tcp_sendSYNACK@tcpHeader(BANK1[21]), 

    tcp_sendSYNACK@connection	PTR struct tcp_connection size(2) Largest target is 204
		 -> tcpListeners(BANK5[204]), 

    tcp_listen@connection	PTR struct tcp_connection size(2) Largest target is 17
		 -> main@connection(BANK6[17]), 

    tcp_stateMachine@connection	PTR struct tcp_connection size(2) Largest target is 204
		 -> tcpListeners(BANK5[204]), 

    tcp_stateMachine@newHeader	PTR struct tcp_header size(2) Largest target is 21
		 -> tcp_handleNewPacket@tcpHeader(BANK0[21]), 

    tcp_parseHeader@header	PTR struct tcp_header size(2) Largest target is 21
		 -> tcp_handleNewPacket@tcpHeader(BANK0[21]), 

    icmp_writeHeaderIntoBuffer@buf	PTR unsigned char  size(2) Largest target is 64
		 -> icmp_sendEchoRequest@icmpMessage(COMRAM[64]), icmp_sendEchoReply@icmpMessage(BANK1[64]), 

    icmp_calculateChecksumBuf@buf	PTR unsigned char  size(2) Largest target is 128
		 -> icmp_sendEchoRequest@icmpMessage(COMRAM[64]), icmp_sendEchoReply@icmpMessage(BANK1[64]), icmp_handleNewPacket@foo(BANK2[128]), 

    icmp_parseHeader@icmpHeader	PTR struct icmpHeader size(2) Largest target is 8
		 -> icmp_handleNewPacket@icmpHeader(BANK2[8]), 

    ipv4_setToAllZero@ip	PTR struct ipv4_address size(2) Largest target is 4
		 -> ipPreliminarySource(BANK2[4]), ipSource(BANK2[4]), arp_init@ip(COMRAM[4]), arp_probe@ipSender(BANK1[4]), 

    ipv4_isAllZero@ip	PTR struct ipv4_address size(2) Largest target is 32
		 -> arp_parseFromRXBuffer@arp(BANK0[32]), arp_handleNewPacket@arp(BANK1[32]), 

    ipv4_cmp@b	PTR struct ipv4_address size(2) Largest target is 32
		 -> arp_setNewEntry@ip(COMRAM[4]), arp_checkForEntry@ip(COMRAM[4]), arp_sendReply@myIP(BANK1[4]), arp_parseFromRXBuffer@arp(BANK0[32]), 

    ipv4_cmp@a	PTR struct ipv4_address size(2) Largest target is 112
		 -> arp_table(BANK4[112]), arp_sendReply@request(BANK0[32]), arp_parseFromRXBuffer@arp(BANK0[32]), 

    ipv4_SrcAddrChanged@err	PTR struct error size(2) Largest target is 3
		 -> arp_background@err(COMRAM[3]), 

    arpStatus	PTR struct error size(2) Largest target is 3
		 -> NULL(NULL[0]), arp_background@err(COMRAM[3]), 

    ipv4_handleNewPacket@frame	PTR struct ethernetFrame size(2) Largest target is 124
		 -> stack(BANK4[124]), 

    ipv4_checkHeaderChecksum@header	PTR struct ipv4_header size(2) Largest target is 23
		 -> ipv4_handleNewPacket@header(BANK1[23]), 

    ipv4_parseHeader@field	PTR struct memoryField size(2) Largest target is 9
		 -> ipv4_handleNewPacket@headerField(BANK1[9]), 

    ipv4_calculateHeaderChecksum@header	PTR struct ipv4_header size(2) Largest target is 66
		 -> udp_sendPacket@ipPacket(BANK1[66]), tcp_sendSYNACK@ipPacket(BANK1[66]), icmp_sendEchoRequest@ipRequest(COMRAM[66]), icmp_sendEchoReply@ipReply(BANK1[66]), 
		 -> ipv4_checkHeaderChecksum@testHeader(BANK0[23]), 

    ipv4_writeHeaderIntoBuffer@ptr	PTR unsigned char  size(2) Largest target is 32
		 -> udp_sendPacket@ipHeaderBuf(BANK1[32]), tcp_sendSYNACK@ipHeaderBuf(BANK1[32]), icmp_sendEchoRequest@headerBuf(COMRAM[32]), icmp_sendEchoReply@headerBuf(BANK1[32]), 

    ipv4_txFrameRequest@packet	PTR struct ipv4_packet size(2) Largest target is 66
		 -> udp_sendPacket@ipPacket(BANK1[66]), tcp_sendSYNACK@ipPacket(BANK1[66]), icmp_sendEchoRequest@ipRequest(COMRAM[66]), icmp_sendEchoReply@ipReply(BANK1[66]), 

    arp_checkForEntry@index	PTR unsigned char  size(2) Largest target is 1
		 -> ipv4_sendFrame@index(BANK0[1]), arp_gratuitous@index(BANK0[1]), arp_probe@index(BANK1[1]), 

    arp_parseFromRXBuffer@frame	PTR struct ethernetFrame size(2) Largest target is 124
		 -> stack(BANK4[124]), 

    arp_handleNewPacket@frame	PTR struct ethernetFrame size(2) Largest target is 124
		 -> stack(BANK4[124]), 

    sp__arpEntryToString	PTR unsigned char  size(2) Largest target is 50
		 -> arpEntryToString@string(BANK5[50]), 

    sp__ipProtocolToString	PTR unsigned char  size(2) Largest target is 17
		 -> STR_79(CODE[17]), STR_78(CODE[4]), STR_77(CODE[4]), STR_76(CODE[5]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 4
		 -> ipAdressToString@number(BANK2[4]), macToString@number(BANK2[3]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 10
		 -> intToString@number(BANK3[10]), 

    UARTTransmitText@str	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_131(CODE[2]), STR_130(CODE[5]), STR_129(CODE[2]), STR_128(CODE[4]), 
		 -> STR_127(CODE[8]), STR_126(CODE[26]), STR_125(CODE[15]), STR_124(CODE[28]), 
		 -> STR_123(CODE[6]), STR_122(CODE[6]), STR_121(CODE[6]), STR_120(CODE[6]), 
		 -> STR_119(CODE[6]), STR_118(CODE[6]), STR_117(CODE[6]), STR_116(CODE[6]), 
		 -> STR_115(CODE[5]), STR_114(CODE[2]), STR_113(CODE[7]), STR_112(CODE[5]), 
		 -> STR_111(CODE[2]), STR_80(CODE[3]), arpEntryToString@string(BANK5[50]), ipAdressToString@address(BANK3[20]), 
		 -> STR_75(CODE[18]), STR_74(CODE[4]), STR_73(CODE[5]), macToString@address(BANK3[20]), 
		 -> intToString@number(BANK3[10]), STR_72(CODE[50]), STR_71(CODE[11]), STR_70(CODE[13]), 
		 -> STR_69(CODE[12]), STR_68(CODE[12]), STR_67(CODE[12]), STR_66(CODE[12]), 
		 -> STR_65(CODE[12]), STR_64(CODE[5]), STR_63(CODE[19]), STR_62(CODE[13]), 
		 -> STR_61(CODE[8]), STR_60(CODE[3]), STR_59(CODE[12]), STR_58(CODE[4]), 
		 -> STR_57(CODE[9]), STR_56(CODE[2]), STR_55(CODE[12]), STR_54(CODE[26]), 
		 -> STR_53(CODE[54]), STR_52(CODE[4]), STR_51(CODE[53]), STR_50(CODE[4]), 
		 -> STR_49(CODE[51]), STR_48(CODE[4]), STR_47(CODE[50]), STR_46(CODE[4]), 
		 -> STR_45(CODE[2]), STR_29(CODE[3]), STR_28(CODE[37]), STR_27(CODE[37]), 
		 -> STR_26(CODE[3]), STR_25(CODE[27]), STR_24(CODE[3]), STR_23(CODE[21]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[5]), STR_19(CODE[3]), 
		 -> STR_18(CODE[60]), STR_17(CODE[4]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[5]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[16]), STR_4(CODE[10]), STR_3(CODE[12]), 
		 -> STR_2(CODE[2]), STR_1(CODE[2]), ethernetController_getDeviceName@string(COMRAM[11]), 

    buttonHandler@state	PTR volatile unsigned char  size(2) Largest target is 1
		 -> buttonState(BANK2[1]), 

    icmpTxtMessages	PTR const unsigned char [15] size(2) Largest target is 26
		 -> STR_110(CODE[16]), STR_109(CODE[10]), STR_108(CODE[26]), STR_107(CODE[14]), 
		 -> STR_106(CODE[20]), STR_105(CODE[21]), STR_104(CODE[13]), STR_103(CODE[1]), 
		 -> STR_102(CODE[1]), STR_101(CODE[17]), STR_100(CODE[14]), STR_99(CODE[24]), 
		 -> STR_98(CODE[1]), STR_97(CODE[1]), STR_96(CODE[11]), STR_95(CODE[16]), 
		 -> STR_94(CODE[10]), STR_93(CODE[26]), STR_92(CODE[14]), STR_91(CODE[20]), 
		 -> STR_90(CODE[21]), STR_89(CODE[13]), STR_88(CODE[1]), STR_87(CODE[1]), 
		 -> STR_86(CODE[17]), STR_85(CODE[14]), STR_84(CODE[24]), STR_83(CODE[1]), 
		 -> STR_82(CODE[1]), STR_81(CODE[11]), STR_44(CODE[16]), STR_43(CODE[10]), 
		 -> STR_42(CODE[26]), STR_41(CODE[14]), STR_40(CODE[20]), STR_39(CODE[21]), 
		 -> STR_38(CODE[13]), STR_37(CODE[1]), STR_36(CODE[1]), STR_35(CODE[17]), 
		 -> STR_34(CODE[14]), STR_33(CODE[24]), STR_32(CODE[1]), STR_31(CODE[1]), 
		 -> STR_30(CODE[11]), 

    sp__ipAdressToString	PTR unsigned char  size(2) Largest target is 20
		 -> ipAdressToString@address(BANK3[20]), 

    sp__UART_special	PTR unsigned char  size(2) Largest target is 50
		 -> STR_72(CODE[50]), 

    handleStackBackgroundTasks@stack	PTR struct stack size(2) Largest target is 124
		 -> stack(BANK4[124]), 

    mac_setAllZero@mac	PTR struct macaddress size(2) Largest target is 6
		 -> arp_init@mac(COMRAM[6]), arp_sendRequest@targetMAC(BANK1[6]), 

    mac_cmp@b	PTR struct macaddress size(2) Largest target is 32
		 -> arp_setNewEntry@mac(COMRAM[6]), arp_parseFromRXBuffer@arp(BANK0[32]), 

    mac_cmp@a	PTR struct macaddress size(2) Largest target is 112
		 -> arp_table(BANK4[112]), arp_parseFromRXBuffer@arp(BANK0[32]), 

    mac_isAllZero@mac	PTR struct macaddress size(2) Largest target is 32
		 -> arp_parseFromRXBuffer@arp(BANK0[32]), 

    mac_setToBroadcast@mac	PTR struct macaddress size(2) Largest target is 6
		 -> arp_send@destination(BANK0[6]), 

    sp__macToString	PTR unsigned char  size(2) Largest target is 20
		 -> macToString@address(BANK3[20]), 

    sp__etherTypeToString	PTR unsigned char  size(2) Largest target is 18
		 -> STR_75(CODE[18]), STR_74(CODE[4]), STR_73(CODE[5]), 

    sp__intToString	PTR unsigned char  size(2) Largest target is 10
		 -> intToString@number(BANK3[10]), 

    ethernet_rxGetNewFrame@frame	PTR struct ethernetFrame size(2) Largest target is 124
		 -> stack(BANK4[124]), 

    ethernet_txFrameRequest@frame	PTR struct ethernetFrame size(2) Largest target is 66
		 -> udp_sendPacket@ipPacket(BANK1[66]), tcp_sendSYNACK@ipPacket(BANK1[66]), icmp_sendEchoRequest@ipRequest(COMRAM[66]), icmp_sendEchoReply@ipReply(BANK1[66]), 
		 -> arp_send@ethFrame(BANK0[34]), 

    enc424j600_updateReceiveStatusVector@rsv	PTR unsigned char  size(2) Largest target is 6
		 -> ethernetController_getRSV@temp(BANK2[6]), 

    enc424j600_readPHYRegister@data	PTR unsigned int  size(2) Largest target is 2
		 -> ethernetController_updateLinkStatus@temp16(BANK0[2]), 

    enc424j600_readControlRegisterUnbanked@data	PTR unsigned char  size(2) Largest target is 6
		 -> enc424j600_clearInterruptFlag@temp(COMRAM[1]), enc424j600_getInterruptFlags@high(COMRAM[1]), enc424j600_getInterruptFlags@low(COMRAM[1]), enc424j600_disable@temp(COMRAM[1]), 
		 -> enc424j600_enable@temp(COMRAM[1]), enc424j600_disableAutoMACInsertion@temp(COMRAM[1]), enc424j600_enableAutoMACInsertion@temp(COMRAM[1]), enc424j600_getPacketCount@lowByte(COMRAM[1]), 
		 -> enc424j600_readPHYRegister@highByte(COMRAM[1]), enc424j600_readPHYRegister@lowByte(COMRAM[1]), enc424j600_readPHYRegister@temp(COMRAM[1]), ethernetController_setLEDConfig@data(COMRAM[1]), 
		 -> ethernetController_updateLinkStatus@temp(BANK0[1]), mac.address(COMRAM[6]), ethernetController_getMacAddress@mac(COMRAM[6]), ethernetController_getSiliconRevision@data(COMRAM[1]), 
		 -> ethernetController_checkDeviceId@data(COMRAM[1]), ethernetController_softReset@receivedData(COMRAM[2]), 

    enc424j600_writeControlRegisterUnbanked@data	PTR unsigned char  size(2) Largest target is 6
		 -> enc424j600_clearInterruptFlag@temp(COMRAM[1]), enc424j600_disable@temp(COMRAM[1]), enc424j600_enable@temp(COMRAM[1]), enc424j600_disableAutoMACInsertion@temp(COMRAM[1]), 
		 -> enc424j600_enableAutoMACInsertion@temp(COMRAM[1]), enc424j600_setRXTailPointer@highByte(COMRAM[1]), enc424j600_setRXTailPointer@lowByte(COMRAM[1]), enc424j600_setRXBufferStartAddress@highByte(COMRAM[1]), 
		 -> enc424j600_setRXBufferStartAddress@lowByte(COMRAM[1]), enc424j600_setTXStartAddress@highByte(COMRAM[1]), enc424j600_setTXStartAddress@lowByte(COMRAM[1]), enc424j600_setTXLength@highByte(COMRAM[1]), 
		 -> enc424j600_setTXLength@lowByte(COMRAM[1]), enc424j600_readPHYRegister@temp(COMRAM[1]), enc424j600_readPHYRegister@unusedBits(COMRAM[1]), enc424j600_readPHYRegister@PHYaddress(COMRAM[1]), 
		 -> ethernetController_setLEDConfig@data(COMRAM[1]), mac.address(COMRAM[6]), ethernetController_setMacAddress@mac(COMRAM[6]), ethernetController_softReset@dataToSend(COMRAM[2]), 

    enc424j600_readSPI@data	PTR unsigned char  size(2) Largest target is 6
		 -> enc424j600_clearInterruptFlag@temp(COMRAM[1]), enc424j600_getInterruptFlags@high(COMRAM[1]), enc424j600_getInterruptFlags@low(COMRAM[1]), enc424j600_disable@temp(COMRAM[1]), 
		 -> enc424j600_enable@temp(COMRAM[1]), enc424j600_disableAutoMACInsertion@temp(COMRAM[1]), enc424j600_enableAutoMACInsertion@temp(COMRAM[1]), enc424j600_getPacketCount@lowByte(COMRAM[1]), 
		 -> enc424j600_readPHYRegister@highByte(COMRAM[1]), enc424j600_readPHYRegister@lowByte(COMRAM[1]), enc424j600_readPHYRegister@temp(COMRAM[1]), ethernetController_setLEDConfig@data(COMRAM[1]), 
		 -> ethernetController_updateLinkStatus@temp(BANK0[1]), ethernetController_streamFromRXBuffer@temp(COMRAM[1]), ethernetController_updateNextPacketPointer@newPointerH(COMRAM[1]), ethernetController_updateNextPacketPointer@newPointerL(COMRAM[1]), 
		 -> ethernetController_getRSV@temp(BANK2[6]), ethernetController_getEtherTypeField@lowByte(COMRAM[1]), ethernetController_getEtherTypeField@highByte(COMRAM[1]), ethernetController_getSourceMACAddress@temp(COMRAM[1]), 
		 -> mac.address(COMRAM[6]), ethernetController_getMacAddress@mac(COMRAM[6]), ethernetController_getSiliconRevision@data(COMRAM[1]), ethernetController_checkDeviceId@data(COMRAM[1]), 
		 -> ethernetController_softReset@receivedData(COMRAM[2]), 

    enc424j600_writeSPI@data	PTR unsigned char  size(2) Largest target is 6
		 -> enc424j600_clearInterruptFlag@temp(COMRAM[1]), enc424j600_disable@temp(COMRAM[1]), enc424j600_enable@temp(COMRAM[1]), enc424j600_disableAutoMACInsertion@temp(COMRAM[1]), 
		 -> enc424j600_enableAutoMACInsertion@temp(COMRAM[1]), enc424j600_setRXTailPointer@highByte(COMRAM[1]), enc424j600_setRXTailPointer@lowByte(COMRAM[1]), enc424j600_setRXBufferStartAddress@highByte(COMRAM[1]), 
		 -> enc424j600_setRXBufferStartAddress@lowByte(COMRAM[1]), enc424j600_setERXDATAReadPointer@highByte(COMRAM[1]), enc424j600_setERXDATAReadPointer@lowByte(COMRAM[1]), enc424j600_setERXDATAReadPointer@opcode(COMRAM[1]), 
		 -> enc424j600_setGPDATAReadPointer@highByte(COMRAM[1]), enc424j600_setGPDATAReadPointer@lowByte(COMRAM[1]), enc424j600_setGPDATAReadPointer@opcode(COMRAM[1]), enc424j600_setGPDATAWritePointer@highByte(COMRAM[1]), 
		 -> enc424j600_setGPDATAWritePointer@lowByte(COMRAM[1]), enc424j600_setGPDATAWritePointer@opcode(COMRAM[1]), enc424j600_setTXStartAddress@highByte(COMRAM[1]), enc424j600_setTXStartAddress@lowByte(COMRAM[1]), 
		 -> enc424j600_setTXLength@highByte(COMRAM[1]), enc424j600_setTXLength@lowByte(COMRAM[1]), enc424j600_readPHYRegister@temp(COMRAM[1]), enc424j600_readPHYRegister@unusedBits(COMRAM[1]), 
		 -> enc424j600_readPHYRegister@PHYaddress(COMRAM[1]), enc424j600_readControlRegisterUnbanked@addr(COMRAM[1]), enc424j600_readControlRegisterUnbanked@opcode(COMRAM[1]), enc424j600_writeControlRegisterUnbanked@addr(COMRAM[1]), 
		 -> enc424j600_writeControlRegisterUnbanked@opcode(COMRAM[1]), enc424j600_writeSingleByte@opcode(COMRAM[1]), ethernetController_setLEDConfig@data(COMRAM[1]), ethernetController_streamFromRXBuffer@opcode(COMRAM[1]), 
		 -> ethernetController_updateNextPacketPointer@opcode(COMRAM[1]), ethernetController_getRSV@opcode(COMRAM[1]), ethernetController_getEtherTypeField@opcode(COMRAM[1]), ethernetController_getSourceMACAddress@opcode(COMRAM[1]), 
		 -> ethernetController_writeEtherTypeFieldToBuffer@opcode(COMRAM[1]), ethernetController_writeEtherTypeFieldToBuffer@highByte(COMRAM[1]), ethernetController_writeEtherTypeFieldToBuffer@lowByte(COMRAM[1]), ethernetController_writeDestinationMACAddress@opcode(BANK0[1]), 
		 -> ethernetController_writeDestinationMACAddress@data(BANK0[6]), ethernetController_streamToTransmitBuffer@data(COMRAM[1]), ethernetController_streamToTransmitBuffer@opcode(COMRAM[1]), mac.address(COMRAM[6]), 
		 -> ethernetController_setMacAddress@mac(COMRAM[6]), ethernetController_softReset@dataToSend(COMRAM[2]), 

    ethernetController_updateLinkStatus@state	PTR struct ethernetConnection size(2) Largest target is 124
		 -> stack(BANK4[124]), 

    sp__ethernetController_getDeviceName	PTR unsigned char  size(2) Largest target is 11
		 -> ethernetController_getDeviceName@string(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _tcp_listen->_intToString
    _stack_init->_arp_init
    _ipv4_init->_ipv4_setToAllZero
    _srand->_ethernetController_getMacAddress
    _handleStackBackgroundTasks->_intToString
    _ipv4_generateAutoIP->___awmod
    ___awmod->_rand
    _ipAdressToString->_itoa
    _ethernet_rxGetNewFrame->_ethernetController_getEtherTypeField
    _ethernet_rxGetNewFrame->_intToString
    _ethernet_rxGetNewFrame->_macToString
    _macToString->_itoa
    _itoa->_utoa
    _utoa->___lwmod
    _tcp_handleNewPacket->_intToString
    _tcp_sendSYNACK->_intToString
    _intToString->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _tcp_parseHeader->_ethernetController_streamFromRXBuffer
    _ipv4_parseHeader->_ethernetController_streamFromRXBuffer
    _ipv4_checkHeaderChecksum->_ipv4_calculateHeaderChecksum
    _ipv4_txFrameRequest->_ethernet_txFrameRequest
    _ipv4_streamToTransmissionBuffer->_ethernetController_streamToTransmitBuffer
    _icmp_parseHeader->_ethernetController_streamFromRXBuffer
    _ethernetController_updateNextPacketPointer->_enc424j600_setERXDATAReadPointer
    _ethernetController_getRSV->_enc424j600_updateReceiveStatusVector
    _ethernetController_getEtherTypeField->_enc424j600_setERXDATAReadPointer
    _ethernetController_dropPacket->_enc424j600_setRXTailPointer
    _ethernetController_getNextPacketPointer->_enc424j600_getNextPacketPointer
    _arp_setNewEntry->_ipv4_cmp
    _arp_setNewEntry->_mac_cmp
    _arp_parseFromRXBuffer->_ethernetController_streamFromRXBuffer
    _ethernetController_streamFromRXBuffer->_enc424j600_setERXDATAReadPointer
    _UARTTransmitText->_intToString
    _UARTTransmitText->_macToString
    _ethernetController_updateLinkStatus->_enc424j600_readPHYRegister
    _enc424j600_readPHYRegister->_enc424j600_readControlRegisterUnbanked
    _enc424j600_readPHYRegister->_enc424j600_writeControlRegisterUnbanked
    _ethernetController_setLEDConfig->_enc424j600_readControlRegisterUnbanked
    _ethernetController_setLEDConfig->_enc424j600_writeControlRegisterUnbanked
    _ethernetController_pollInterruptFlags->_enc424j600_getInterruptFlags
    _enc424j600_getInterruptFlags->_enc424j600_readControlRegisterUnbanked
    _ethernetController_newPacketAvailable->_enc424j600_getPacketCount
    _enc424j600_getPacketCount->_enc424j600_readControlRegisterUnbanked
    _ethernetController_init->_ethernetController_softReset
    _ethernetController_softReset->_enc424j600_readControlRegisterUnbanked
    _ethernetController_softReset->_enc424j600_writeControlRegisterUnbanked
    _ethernetController_checkDeviceId->_enc424j600_readControlRegisterUnbanked
    _enc424j600_setRXTailPointer->_enc424j600_writeControlRegisterUnbanked
    _enc424j600_setRXBufferStartAddress->_enc424j600_writeControlRegisterUnbanked
    _enc424j600_enableReception->_enc424j600_writeSingleByte
    _enc424j600_enableAutoMACInsertion->_enc424j600_readControlRegisterUnbanked
    _enc424j600_enableAutoMACInsertion->_enc424j600_writeControlRegisterUnbanked
    _ethernetController_clearInterruptFlag->_enc424j600_clearInterruptFlag
    _enc424j600_clearInterruptFlag->_enc424j600_readControlRegisterUnbanked
    _enc424j600_clearInterruptFlag->_enc424j600_writeControlRegisterUnbanked
    _arp_init->_ipv4_setToAllZero
    _arp_init->_mac_setAllZero
    _rand->___lmul
    ___lwmod->_rand
    _ethernetController_getMacAddress->_enc424j600_readControlRegisterUnbanked
    _enc424j600_readControlRegisterUnbanked->_enc424j600_readSPI
    _enc424j600_readControlRegisterUnbanked->_enc424j600_writeSPI
    _arp_send->_ethernetController_getSourceMACAddress
    _ethernet_txFrameRequest->_ethernetController_writeDestinationMACAddress
    _memory_txFrameRequest->___wmul
    _checkForOverlap->_checkForOverlapSwitched
    ___wmul->_rand
    _ethernetController_writeEtherTypeFieldToBuffer->_enc424j600_setGPDATAWritePointer
    _ethernetController_writeDestinationMACAddress->_enc424j600_setGPDATAWritePointer
    _ethernetController_streamToTransmitBuffer->_enc424j600_setGPDATAWritePointer
    _enc424j600_setGPDATAWritePointer->_enc424j600_writeSPI
    _ethernetController_sendPacket->_enc424j600_setTXLength
    _ethernetController_sendPacket->_enc424j600_setTXStartAddress
    _enc424j600_writeSingleByte->_enc424j600_writeSPI
    _enc424j600_setTXStartAddress->_enc424j600_writeControlRegisterUnbanked
    _enc424j600_setTXLength->_enc424j600_writeControlRegisterUnbanked
    _enc424j600_writeControlRegisterUnbanked->_enc424j600_writeSPI
    _ethernetController_getSourceMACAddress->_enc424j600_setERXDATAReadPointer
    _enc424j600_setERXDATAReadPointer->_enc424j600_writeSPI
    _arp_checkForEntry->_ipv4_cmp

Critical Paths under _ccp1Int in COMRAM

    None.

Critical Paths under _tmr0Int in COMRAM

    _tmr0Int->_sevenSegmentUpdate
    _sevenSegmentUpdate->_parseNumber
    _parseNumber->i2___lwdiv

Critical Paths under _main in BANK0

    _udp_sendPacket->_ipv4_streamToTransmissionBuffer
    _tcp_listen->_UARTTransmitText
    _printEthernetState->_UARTTransmitText
    _ipv4_sendFrame->_arp_sendRequest
    _ipAdressToString->_itoa
    _macToString->_itoa
    _ipv4_handleNewPacket->_icmp_handleNewPacket
    _tcp_handleNewPacket->_tcp_stateMachine
    _tcp_stateMachine->_tcp_sendSYNACK
    _tcp_sendSYNACK->_ipv4_streamToTransmissionBuffer
    _intToString->_ltoa
    _icmp_handleNewPacket->_icmp_sendEchoReply
    _icmp_sendEchoReply->_ipv4_streamToTransmissionBuffer
    _ipv4_txFrameRequest->_ethernet_txFrameRequest
    _arp_handleNewPacket->_arp_sendReply
    _arp_sendReply->_arp_send
    _UART_setFormat->_UARTTransmitText
    _UART_resetFormat->_UARTTransmitText
    _UARTTransmitText->_ipAdressToString
    _arp_background->_arp_gratuitous
    _arp_probe->_arp_sendRequest
    _arp_gratuitous->_arp_sendRequest
    _arp_sendRequest->_arp_send
    _arp_send->_ethernet_txFrameRequest
    _ethernet_txFrameRequest->_memory_txFrameRequest
    _memory_txFrameRequest->_checkForOverlap

Critical Paths under _ccp1Int in BANK0

    None.

Critical Paths under _tmr0Int in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_handleStackBackgroundTasks
    _handleStackBackgroundTasks->_ethernet_rxGetNewFrame
    _ipv4_sendFrame->_arp_sendRequest
    _ethernet_rxGetNewFrame->_ipv4_handleNewPacket
    _tcp_stateMachine->_tcp_sendSYNACK
    _icmp_handleNewPacket->_icmp_sendEchoReply
    _arp_handleNewPacket->_arp_sendReply
    _arp_background->_arp_probe
    _arp_probe->_arp_sendRequest
    _arp_gratuitous->_arp_sendRequest

Critical Paths under _ccp1Int in BANK1

    None.

Critical Paths under _tmr0Int in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_handleStackBackgroundTasks
    _handleStackBackgroundTasks->_ethernet_rxGetNewFrame
    _ipv4_handleNewPacket->_icmp_handleNewPacket

Critical Paths under _ccp1Int in BANK2

    None.

Critical Paths under _tmr0Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ccp1Int in BANK3

    None.

Critical Paths under _tmr0Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ccp1Int in BANK4

    None.

Critical Paths under _tmr0Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ccp1Int in BANK5

    None.

Critical Paths under _tmr0Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ccp1Int in BANK6

    None.

Critical Paths under _tmr0Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ccp1Int in BANK7

    None.

Critical Paths under _tmr0Int in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ccp1Int in BANK8

    None.

Critical Paths under _tmr0Int in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ccp1Int in BANK9

    None.

Critical Paths under _tmr0Int in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ccp1Int in BANK10

    None.

Critical Paths under _tmr0Int in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ccp1Int in BANK11

    None.

Critical Paths under _tmr0Int in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ccp1Int in BANK12

    None.

Critical Paths under _tmr0Int in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ccp1Int in BANK13

    None.

Critical Paths under _tmr0Int in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ccp1Int in BANK14

    None.

Critical Paths under _tmr0Int in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ccp1Int in BANK15

    None.

Critical Paths under _tmr0Int in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ccp1Int in BANK16

    None.

Critical Paths under _tmr0Int in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ccp1Int in BANK17

    None.

Critical Paths under _tmr0Int in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ccp1Int in BANK18

    None.

Critical Paths under _tmr0Int in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ccp1Int in BANK19

    None.

Critical Paths under _tmr0Int in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ccp1Int in BANK20

    None.

Critical Paths under _tmr0Int in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ccp1Int in BANK21

    None.

Critical Paths under _tmr0Int in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ccp1Int in BANK22

    None.

Critical Paths under _tmr0Int in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ccp1Int in BANK23

    None.

Critical Paths under _tmr0Int in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ccp1Int in BANK24

    None.

Critical Paths under _tmr0Int in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ccp1Int in BANK25

    None.

Critical Paths under _tmr0Int in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _ccp1Int in BANK26

    None.

Critical Paths under _tmr0Int in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _ccp1Int in BANK27

    None.

Critical Paths under _tmr0Int in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _ccp1Int in BANK28

    None.

Critical Paths under _tmr0Int in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _ccp1Int in BANK29

    None.

Critical Paths under _tmr0Int in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _ccp1Int in BANK30

    None.

Critical Paths under _tmr0Int in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _ccp1Int in BANK31

    None.

Critical Paths under _tmr0Int in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0  961214
                                            157 BANK2      2     2      0
                                              0 BANK6     38    38      0
                           _UARTInit
                   _UARTTransmitText
                   _UART_resetFormat
                     _UART_setFormat
                       _UART_special
   _ethernetController_checkDeviceId
   _ethernetController_getDeviceName
   _ethernetController_getMacAddress
            _ethernetController_init
    _ethernetController_setLEDConfig
         _handleStackBackgroundTasks
                _ipv4_generateAutoIP
                  _printErrorMessage
                 _printEthernetState
                               _rand
                   _sevenSegmentInit
                              _srand
                         _stack_init
                         _tcp_listen
                     _udp_sendPacket
 ---------------------------------------------------------------------------------
 (1) _udp_sendPacket                                     180   168     12   35099
                                             66 BANK0     14     2     12
                                              0 BANK1    166   166      0
       _ipv4_calculateHeaderChecksum
            _ipv4_getIPSourceAddress
    _ipv4_streamToTransmissionBuffer
                _ipv4_txFrameRequest
         _ipv4_writeHeaderIntoBuffer
 ---------------------------------------------------------------------------------
 (1) _tcp_listen                                           6     4      2   18497
                                             15 BANK0      6     4      2
                   _UARTTransmitText
                             ___wmul
                        _intToString
                               _rand
 ---------------------------------------------------------------------------------
 (1) _stack_init                                           3     3      0    1920
                                             35 COMRAM     3     3      0
                           _arp_init
                          _ipv4_init
                           _tcp_init
 ---------------------------------------------------------------------------------
 (2) _tcp_init                                             1     1      0     192
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ipv4_init                                            0     0      0     546
                  _ipv4_setToAllZero
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2     135
                                             47 COMRAM     2     0      2
   _ethernetController_getMacAddress (ARG)
 ---------------------------------------------------------------------------------
 (1) _sevenSegmentInit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printEthernetState                                  15     0     15   11941
                                             15 BANK0     15     0     15
                   _UARTTransmitText
 ---------------------------------------------------------------------------------
 (1) _printErrorMessage                                    3     0      3     104
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _handleStackBackgroundTasks                          22    20      2  776119
                                            247 BANK1      4     2      2
                                            149 BANK2      8     8      0
                   _UARTTransmitText
                   _UART_resetFormat
                     _UART_setFormat
                       _UART_special
                     _arp_background
                           _arp_init
_ethernetController_clearInterruptFl
 _ethernetController_disableEthernet
          _ethernetController_getMTU
            _ethernetController_init
_ethernetController_newPacketAvailab
_ethernetController_pollInterruptFla
    _ethernetController_setLEDConfig
_ethernetController_updateLinkStatus
             _ethernet_rxGetNewFrame
                        _intToString
                   _ipAdressToString
                    _ipv4_background
                _ipv4_generateAutoIP
                     _ipv4_sendFrame
            _ipv4_setIPSourceAddress
 ---------------------------------------------------------------------------------
 (2) _ipv4_setIPSourceAddress                              4     0      4     239
                                             21 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _ipv4_sendFrame                                      78    12     66   93625
                                            135 BANK0     12    12      0
                                             44 BANK1     66     0     66
                  _arp_checkForEntry
              _arp_getEntryFromTable
                    _arp_sendRequest
   _ethernetController_getMacAddress
      _ethernetController_sendPacket
_ethernetController_writeDestination
                          _getMillis
 ---------------------------------------------------------------------------------
 (3) _arp_getEntryFromTable                                8     1      7      31
                                             21 COMRAM     8     1      7
 ---------------------------------------------------------------------------------
 (1) _ipv4_generateAutoIP                                  8     4      4    1506
                                             41 COMRAM     8     4      4
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     849
                                             35 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _ipv4_background                                      9     6      3     343
                                             21 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (2) _ipAdressToString                                     8     4      4    4282
                                             51 COMRAM     1     1      0
                                              6 BANK0      7     3      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _ethernet_rxGetNewFrame                              13    11      2  389447
                                            242 BANK1      5     3      2
                                            141 BANK2      8     8      0
                   _UARTTransmitText
                   _UART_resetFormat
                     _UART_setFormat
                _arp_handleNewPacket
                  _etherTypeToString
      _ethernetController_dropPacket
_ethernetController_getEtherTypeFiel
_ethernetController_getNextPacketPoi
          _ethernetController_getRSV
_ethernetController_updateNextPacket
                          _getMillis
                        _intToString
               _ipv4_handleNewPacket
                        _macToString
 ---------------------------------------------------------------------------------
 (3) _macToString                                          9     3      6    4010
                                             51 COMRAM     3     3      0
                                              6 BANK0      6     0      6
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    3398
                                             49 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    2541
                                             40 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     933
                                             21 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _ipv4_handleNewPacket                                49    47      2  215308
                                            144 BANK0      6     4      2
                                            199 BANK1     43    43      0
      _ethernetController_dropPacket
               _icmp_handleNewPacket
           _ipv4_checkHeaderChecksum
                   _ipv4_parseHeader
                _tcp_handleNewPacket
 ---------------------------------------------------------------------------------
 (4) _tcp_handleNewPacket                                 56    24     32  102855
                                             80 BANK0     56    24     32
                   _UARTTransmitText
                        _intToString
                    _tcp_parseHeader
                   _tcp_stateMachine
 ---------------------------------------------------------------------------------
 (5) _tcp_stateMachine                                     4     0      4   67860
                                             76 BANK0      4     0      4
                   _UARTTransmitText
                     _tcp_sendSYNACK
 ---------------------------------------------------------------------------------
 (6) _tcp_sendSYNACK                                     209   203      6   55784
                                             66 BANK0     10     4      6
                                              0 BANK1    199   199      0
                   _UARTTransmitText
                        _intToString
       _ipv4_calculateHeaderChecksum
            _ipv4_getIPSourceAddress
    _ipv4_streamToTransmissionBuffer
                _ipv4_txFrameRequest
         _ipv4_writeHeaderIntoBuffer
        _tcp_calculateHeaderChecksum
 ---------------------------------------------------------------------------------
 (7) _tcp_calculateHeaderChecksum                         50    25     25    1617
                                             21 COMRAM    29     4     25
                                              0 BANK0     21    21      0
 ---------------------------------------------------------------------------------
 (2) _intToString                                          5     0      5    5365
                                             49 COMRAM     5     0      5
                               _ltoa
 ---------------------------------------------------------------------------------
 (3) _ltoa                                                10     2      8    2391
                                             47 COMRAM     2     2      0
                                              0 BANK0      8     0      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     5      8    1846
                                             34 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     440
                                             21 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     657
                                             21 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _tcp_parseHeader                                     17     6     11   16742
                                             41 COMRAM    12     1     11
                                              0 BANK0      5     5      0
_ethernetController_streamFromRXBuff
 ---------------------------------------------------------------------------------
 (4) _ipv4_parseHeader                                    50    27     23   16287
                                             41 COMRAM     1     1      0
                                              0 BANK0     49    26     23
_ethernetController_streamFromRXBuff
 ---------------------------------------------------------------------------------
 (4) _ipv4_checkHeaderChecksum                            27    25      2    1643
                                             36 COMRAM     4     2      2
                                              0 BANK0     23    23      0
       _ipv4_calculateHeaderChecksum
 ---------------------------------------------------------------------------------
 (4) _icmp_handleNewPacket                               175   143     32   83841
                                            110 BANK0     34     2     32
                                              0 BANK2    141   141      0
_ethernetController_streamFromRXBuff
          _icmp_calculateChecksumBuf
                   _icmp_parseHeader
                 _icmp_sendEchoReply
 ---------------------------------------------------------------------------------
 (5) _icmp_sendEchoReply                                 219   179     40   51856
                                             66 BANK0     44     4     40
                                              0 BANK1    175   175      0
_ethernetController_streamFromRXBuff
          _icmp_calculateChecksumBuf
         _icmp_writeHeaderIntoBuffer
       _ipv4_calculateHeaderChecksum
            _ipv4_getIPSourceAddress
    _ipv4_streamToTransmissionBuffer
                _ipv4_txFrameRequest
         _ipv4_writeHeaderIntoBuffer
 ---------------------------------------------------------------------------------
 (2) _ipv4_writeHeaderIntoBuffer                          27     2     25    2231
                                             21 COMRAM    27     2     25
 ---------------------------------------------------------------------------------
 (2) _ipv4_txFrameRequest                                  6     4      2   20637
                                             42 BANK0      6     4      2
            _ethernet_txFrameRequest
 ---------------------------------------------------------------------------------
 (2) _ipv4_streamToTransmissionBuffer                     67     1     66    8782
                                             51 COMRAM     1     1      0
                                              0 BANK0     66     0     66
_ethernetController_streamToTransmit
 ---------------------------------------------------------------------------------
 (2) _ipv4_calculateHeaderChecksum                        15    13      2    1312
                                             21 COMRAM    15    13      2
 ---------------------------------------------------------------------------------
 (6) _icmp_writeHeaderIntoBuffer                          14     4     10     933
                                             21 COMRAM    14     4     10
 ---------------------------------------------------------------------------------
 (6) _icmp_calculateChecksumBuf                           17    13      4    1013
                                             21 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (5) _icmp_parseHeader                                    16     5     11   15434
                                             41 COMRAM    11     0     11
                                              0 BANK0      5     5      0
_ethernetController_streamFromRXBuff
 ---------------------------------------------------------------------------------
 (3) _ethernetController_updateNextPacketPointer          11    11      0    7875
                                             36 COMRAM    11    11      0
    _enc424j600_getNextPacketPointer
                 _enc424j600_readSPI
   _enc424j600_setERXDATAReadPointer
    _enc424j600_setNextPacketPointer
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (3) _ethernetController_getRSV                            7     2      5    9070
                                             38 COMRAM     7     2      5
                 _enc424j600_readSPI
   _enc424j600_setERXDATAReadPointer
_enc424j600_updateReceiveStatusVecto
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (4) _enc424j600_updateReceiveStatusVector                17    12      5    1370
                                             21 COMRAM    17    12      5
 ---------------------------------------------------------------------------------
 (3) _ethernetController_getEtherTypeField                18     9      9    7774
                                             36 COMRAM    18     9      9
                 _enc424j600_readSPI
   _enc424j600_setERXDATAReadPointer
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (3) _etherTypeToString                                    4     2      2     447
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _arp_handleNewPacket                                 36    34      2   94240
                                             56 BANK1     36    34      2
              _arp_parseFromRXBuffer
                      _arp_sendReply
                    _arp_setNewEntry
      _ethernetController_dropPacket
                          _getMillis
                     _ipv4_isAllZero
 ---------------------------------------------------------------------------------
 (4) _ethernetController_dropPacket                        2     0      2    9200
                                             39 COMRAM     2     0      2
        _enc424j600_setRXTailPointer
         _enc424j600_writeSingleByte
_ethernetController_getNextPacketPoi
 ---------------------------------------------------------------------------------
 (5) _ethernetController_getNextPacketPointer              2     0      2       0
                                             23 COMRAM     2     0      2
    _enc424j600_getNextPacketPointer
 ---------------------------------------------------------------------------------
 (6) _enc424j600_getNextPacketPointer                      2     0      2       0
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _arp_setNewEntry                                     24    10     14    2706
                                             28 COMRAM    24    10     14
                          _getMillis (ARG)
                           _ipv4_cmp
                            _mac_cmp
 ---------------------------------------------------------------------------------
 (4) _arp_sendReply                                       88    56     32   61875
                                            127 BANK0     32     0     32
                                              0 BANK1     56    56      0
                           _arp_send
   _ethernetController_getMacAddress
                           _ipv4_cmp
            _ipv4_getIPSourceAddress
 ---------------------------------------------------------------------------------
 (2) _ipv4_getIPSourceAddress                              4     0      4       0
                                             21 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _arp_parseFromRXBuffer                               73    41     32   19723
                                             41 COMRAM     3     3      0
                                              0 BANK0     70    38     32
_ethernetController_streamFromRXBuff
                           _ipv4_cmp
                     _ipv4_isAllZero
                            _mac_cmp
                      _mac_isAllZero
 ---------------------------------------------------------------------------------
 (5) _mac_isAllZero                                        3     1      2     234
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _mac_cmp                                              7     3      4     608
                                             21 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _ipv4_isAllZero                                       3     1      2     338
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (6) _ethernetController_streamFromRXBuffer                5     3      2   14668
                                             36 COMRAM     5     3      2
                 _enc424j600_readSPI
   _enc424j600_setERXDATAReadPointer
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (3) _UART_setFormat                                       1     1      0   11744
                                             15 BANK0      1     1      0
                   _UARTTransmitText
 ---------------------------------------------------------------------------------
 (3) _UART_resetFormat                                     0     0      0   11713
                   _UARTTransmitText
 ---------------------------------------------------------------------------------
 (2) _UARTTransmitText                                     2     0      2   11713
                                             13 BANK0      2     0      2
                       _UART_special (ARG)
                  _etherTypeToString (ARG)
   _ethernetController_getDeviceName (ARG)
                        _intToString (ARG)
                   _ipAdressToString (ARG)
                        _macToString (ARG)
 ---------------------------------------------------------------------------------
 (2) _ethernetController_updateLinkStatus                  5     3      2   20608
                                              0 BANK0      5     3      2
_enc424j600_readControlRegisterUnban
         _enc424j600_readPHYRegister
 ---------------------------------------------------------------------------------
 (3) _enc424j600_readPHYRegister                          18    16      2   13305
                                             35 COMRAM    18    16      2
_enc424j600_readControlRegisterUnban
_enc424j600_writeControlRegisterUnba
 ---------------------------------------------------------------------------------
 (2) _ethernetController_setLEDConfig                      3     2      1   13717
                                             35 COMRAM     3     2      1
_enc424j600_readControlRegisterUnban
_enc424j600_writeControlRegisterUnba
 ---------------------------------------------------------------------------------
 (2) _ethernetController_pollInterruptFlags               10     8      2    7418
                                             45 COMRAM     6     4      2
                                              0 BANK0      4     4      0
       _enc424j600_getInterruptFlags
 ---------------------------------------------------------------------------------
 (3) _enc424j600_getInterruptFlags                        10     8      2    6982
                                             35 COMRAM    10     8      2
_enc424j600_readControlRegisterUnban
 ---------------------------------------------------------------------------------
 (2) _ethernetController_newPacketAvailable                0     0      0    6917
          _enc424j600_getPacketCount
 ---------------------------------------------------------------------------------
 (3) _enc424j600_getPacketCount                            1     1      0    6917
                                             35 COMRAM     1     1      0
_enc424j600_readControlRegisterUnban
 ---------------------------------------------------------------------------------
 (2) _ethernetController_init                              6     3      3   51768
                                             47 COMRAM     6     3      3
  _enc424j600_enableAutoMACInsertion
         _enc424j600_enableReception
                 _enc424j600_initSPI
    _enc424j600_setNextPacketPointer
 _enc424j600_setRXBufferStartAddress
        _enc424j600_setRXTailPointer
   _ethernetController_checkDeviceId
       _ethernetController_softReset
 ---------------------------------------------------------------------------------
 (3) _ethernetController_softReset                        12     9      3   16269
                                             35 COMRAM    12     9      3
_enc424j600_readControlRegisterUnban
_enc424j600_writeControlRegisterUnba
         _enc424j600_writeSingleByte
 ---------------------------------------------------------------------------------
 (3) _ethernetController_checkDeviceId                     7     4      3    7062
                                             35 COMRAM     7     4      3
_enc424j600_readControlRegisterUnban
 ---------------------------------------------------------------------------------
 (5) _enc424j600_setRXTailPointer                          4     2      2    6262
                                             35 COMRAM     4     2      2
_enc424j600_writeControlRegisterUnba
_ethernetController_getNextPacketPoi (ARG)
 ---------------------------------------------------------------------------------
 (3) _enc424j600_setRXBufferStartAddress                   4     2      2    6054
                                             35 COMRAM     4     2      2
_enc424j600_writeControlRegisterUnba
 ---------------------------------------------------------------------------------
 (4) _enc424j600_setNextPacketPointer                      2     0      2     239
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _enc424j600_enableReception                           0     0      0    2938
         _enc424j600_writeSingleByte
 ---------------------------------------------------------------------------------
 (3) _enc424j600_enableAutoMACInsertion                    1     1      0   12737
                                             35 COMRAM     1     1      0
_enc424j600_readControlRegisterUnban
_enc424j600_writeControlRegisterUnba
 ---------------------------------------------------------------------------------
 (2) _ethernetController_getMTU                            2     0      2       0
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ethernetController_disableEthernet                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ethernetController_clearInterruptFlag                1     1      0   12926
                                             39 COMRAM     1     1      0
      _enc424j600_clearInterruptFlag
 ---------------------------------------------------------------------------------
 (3) _enc424j600_clearInterruptFlag                        4     4      0   12895
                                             35 COMRAM     4     4      0
_enc424j600_readControlRegisterUnban
_enc424j600_writeControlRegisterUnba
 ---------------------------------------------------------------------------------
 (2) _arp_init                                            11    11      0    1175
                                             24 COMRAM    11    11      0
                  _ipv4_setToAllZero
                     _mac_setAllZero
 ---------------------------------------------------------------------------------
 (2) _arp_background                                      12     9      3  130710
                                            152 BANK0      2     2      0
                                             60 BANK1     10     7      3
                     _arp_gratuitous
                          _arp_probe
                _ipv4_SrcAddrChanged
 _ipv4_getPreliminaryIPSourceAddress
 ---------------------------------------------------------------------------------
 (3) _ipv4_getPreliminaryIPSourceAddress                   4     0      4       0
                                             21 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _ipv4_SrcAddrChanged                                  2     0      2     135
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _arp_probe                                           29    24      5   66175
                                            135 BANK0     13     8      5
                                             44 BANK1     16    16      0
                            ___lwmod
                  _arp_checkForEntry
                    _arp_sendRequest
                          _getMillis
                  _ipv4_setToAllZero
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     512
                                             33 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     512
                                             21 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _ipv4_setToAllZero                                    3     1      2     546
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     856
                                             35 COMRAM     5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) _arp_gratuitous                                      17    12      5   64128
                                            135 BANK0     17    12      5
                  _arp_checkForEntry
                    _arp_sendRequest
                          _getMillis
 ---------------------------------------------------------------------------------
 (3) _arp_sendRequest                                     52    44      8   61353
                                            127 BANK0      8     0      8
                                              0 BANK1     44    44      0
                           _arp_send
   _ethernetController_getMacAddress
                     _mac_setAllZero
 ---------------------------------------------------------------------------------
 (3) _mac_setAllZero                                       3     1      2     338
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _ethernetController_getMacAddress                    12     6      6    7069
                                             35 COMRAM    12     6      6
_enc424j600_readControlRegisterUnban
 ---------------------------------------------------------------------------------
 (4) _enc424j600_readControlRegisterUnbanked               4     2      2    6846
                                             31 COMRAM     4     2      2
                 _enc424j600_readSPI
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (4) _arp_send                                            85    53     32   52831
                                             42 BANK0     85    53     32
_ethernetController_getSourceMACAddr
      _ethernetController_sendPacket
_ethernetController_streamToTransmit
            _ethernet_txFrameRequest
                 _mac_setToBroadcast
 ---------------------------------------------------------------------------------
 (5) _mac_setToBroadcast                                   3     1      2     234
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _ethernet_txFrameRequest                              5     3      2   19725
                                             51 COMRAM     2     0      2
                                             39 BANK0      3     3      0
_ethernetController_writeDestination
_ethernetController_writeEtherTypeFi
              _memory_txFrameRequest
 ---------------------------------------------------------------------------------
 (4) _memory_txFrameRequest                               30    21      9    5312
                                             41 COMRAM     9     0      9
                                             18 BANK0     21    21      0
                             ___wmul
                    _checkForOverlap
                  _entireMemoryEmpty
                   _entireMemoryFull
 ---------------------------------------------------------------------------------
 (5) _entireMemoryFull                                     1     1      0      99
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _entireMemoryEmpty                                    1     1      0      99
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _checkForOverlap                                     18     0     18    2380
                                              0 BANK0     18     0     18
            _checkForOverlapSwitched
 ---------------------------------------------------------------------------------
 (6) _checkForOverlapSwitched                             18     0     18    1128
                                             21 COMRAM    18     0     18
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     648
                                             35 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (4) _ethernetController_writeEtherTypeFieldToBuffer      14     3     11    6705
                                             36 COMRAM    14     3     11
   _enc424j600_setGPDATAWritePointer
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (4) _ethernetController_writeDestinationMACAddress       24     9     15    7111
                                             36 COMRAM    15     0     15
                                              0 BANK0      9     9      0
   _enc424j600_setGPDATAWritePointer
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (3) _ethernetController_streamToTransmitBuffer           15     6      9    7781
                                             36 COMRAM    15     6      9
   _enc424j600_setGPDATAWritePointer
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (5) _enc424j600_setGPDATAWritePointer                     5     3      2    3389
                                             31 COMRAM     5     3      2
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (3) _ethernetController_sendPacket                        9     0      9   15384
                                             39 COMRAM     9     0      9
             _enc424j600_setTXLength
       _enc424j600_setTXStartAddress
         _enc424j600_writeSingleByte
                _memory_txFrameClear
 ---------------------------------------------------------------------------------
 (4) _memory_txFrameClear                                  1     1      0      31
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _enc424j600_writeSingleByte                           1     1      0    2938
                                             31 COMRAM     1     1      0
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (4) _enc424j600_setTXStartAddress                         4     2      2    6054
                                             35 COMRAM     4     2      2
_enc424j600_writeControlRegisterUnba
 ---------------------------------------------------------------------------------
 (4) _enc424j600_setTXLength                               4     2      2    6054
                                             35 COMRAM     4     2      2
_enc424j600_writeControlRegisterUnba
 ---------------------------------------------------------------------------------
 (5) _enc424j600_writeControlRegisterUnbanked              4     2      2    5814
                                             31 COMRAM     4     2      2
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (5) _ethernetController_getSourceMACAddress              18     9      9    7836
                                             36 COMRAM    18     9      9
                 _enc424j600_readSPI
   _enc424j600_setERXDATAReadPointer
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (6) _enc424j600_setERXDATAReadPointer                     5     3      2    3597
                                             31 COMRAM     5     3      2
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (5) _enc424j600_writeSPI                                 10     8      2    2904
                                             21 COMRAM    10     8      2
                 _enc424j600_initSPI
 ---------------------------------------------------------------------------------
 (5) _enc424j600_readSPI                                  10     8      2     928
                                             21 COMRAM    10     8      2
                 _enc424j600_initSPI
 ---------------------------------------------------------------------------------
 (6) _enc424j600_initSPI                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _arp_checkForEntry                                   15     9      6    2082
                                             28 COMRAM    15     9      6
                          _getMillis
                           _ipv4_cmp
 ---------------------------------------------------------------------------------
 (4) _ipv4_cmp                                             7     3      4    1232
                                             21 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _getMillis                                            4     0      4       0
                                             21 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _UART_special                                         3     1      2      31
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ethernetController_getDeviceName                    13    11      2      40
                                             21 COMRAM    13    11      2
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _ccp1Int                                             0     0      0       0
                         _updateTime
 ---------------------------------------------------------------------------------
 (14) _updateTime                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _tmr0Int                                             0     0      0    1115
                      _buttonHandler
                 _sevenSegmentUpdate
 ---------------------------------------------------------------------------------
 (14) _sevenSegmentUpdate                                  7     5      2     914
                                             14 COMRAM     7     5      2
                        _parseNumber
 ---------------------------------------------------------------------------------
 (15) _parseNumber                                         7     4      3     667
                                              7 COMRAM     7     4      3
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (16) i2___lwdiv                                           7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (14) _buttonHandler                                      10     8      2     201
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTInit
   _UARTTransmitText
     _UART_special (ARG)
     _etherTypeToString (ARG)
     _ethernetController_getDeviceName (ARG)
     _intToString (ARG)
       _ltoa
         _ultoa
           ___lldiv
           ___llmod
     _ipAdressToString (ARG)
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
             _rand (ARG)
               ___lmul
     _macToString (ARG)
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
             _rand (ARG)
               ___lmul
   _UART_resetFormat
     _UARTTransmitText
       _UART_special (ARG)
       _etherTypeToString (ARG)
       _ethernetController_getDeviceName (ARG)
       _intToString (ARG)
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _ipAdressToString (ARG)
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
       _macToString (ARG)
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
   _UART_setFormat
     _UARTTransmitText
       _UART_special (ARG)
       _etherTypeToString (ARG)
       _ethernetController_getDeviceName (ARG)
       _intToString (ARG)
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _ipAdressToString (ARG)
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
       _macToString (ARG)
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
   _UART_special
   _ethernetController_checkDeviceId
     _enc424j600_readControlRegisterUnbanked
       _enc424j600_readSPI
         _enc424j600_initSPI
       _enc424j600_writeSPI
         _enc424j600_initSPI
   _ethernetController_getDeviceName
   _ethernetController_getMacAddress
     _enc424j600_readControlRegisterUnbanked
       _enc424j600_readSPI
         _enc424j600_initSPI
       _enc424j600_writeSPI
         _enc424j600_initSPI
   _ethernetController_init
     _enc424j600_enableAutoMACInsertion
       _enc424j600_readControlRegisterUnbanked
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _enc424j600_writeControlRegisterUnbanked
         _enc424j600_writeSPI
           _enc424j600_initSPI
     _enc424j600_enableReception
       _enc424j600_writeSingleByte
         _enc424j600_writeSPI
           _enc424j600_initSPI
     _enc424j600_initSPI
     _enc424j600_setNextPacketPointer
     _enc424j600_setRXBufferStartAddress
       _enc424j600_writeControlRegisterUnbanked
         _enc424j600_writeSPI
           _enc424j600_initSPI
     _enc424j600_setRXTailPointer
       _enc424j600_writeControlRegisterUnbanked
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _ethernetController_getNextPacketPointer (ARG)
         _enc424j600_getNextPacketPointer
     _ethernetController_checkDeviceId
       _enc424j600_readControlRegisterUnbanked
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
     _ethernetController_softReset
       _enc424j600_readControlRegisterUnbanked
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _enc424j600_writeControlRegisterUnbanked
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _enc424j600_writeSingleByte
         _enc424j600_writeSPI
           _enc424j600_initSPI
   _ethernetController_setLEDConfig
     _enc424j600_readControlRegisterUnbanked
       _enc424j600_readSPI
         _enc424j600_initSPI
       _enc424j600_writeSPI
         _enc424j600_initSPI
     _enc424j600_writeControlRegisterUnbanked
       _enc424j600_writeSPI
         _enc424j600_initSPI
   _handleStackBackgroundTasks
     _UARTTransmitText
       _UART_special (ARG)
       _etherTypeToString (ARG)
       _ethernetController_getDeviceName (ARG)
       _intToString (ARG)
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _ipAdressToString (ARG)
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
       _macToString (ARG)
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
     _UART_resetFormat
       _UARTTransmitText
         _UART_special (ARG)
         _etherTypeToString (ARG)
         _ethernetController_getDeviceName (ARG)
         _intToString (ARG)
           _ltoa
             _ultoa
               ___lldiv
               ___llmod
         _ipAdressToString (ARG)
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
                 _rand (ARG)
                   ___lmul
         _macToString (ARG)
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
                 _rand (ARG)
                   ___lmul
     _UART_setFormat
       _UARTTransmitText
         _UART_special (ARG)
         _etherTypeToString (ARG)
         _ethernetController_getDeviceName (ARG)
         _intToString (ARG)
           _ltoa
             _ultoa
               ___lldiv
               ___llmod
         _ipAdressToString (ARG)
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
                 _rand (ARG)
                   ___lmul
         _macToString (ARG)
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
                 _rand (ARG)
                   ___lmul
     _UART_special
     _arp_background
       _arp_gratuitous
         _arp_checkForEntry
           _getMillis
           _ipv4_cmp
         _arp_sendRequest
           _arp_send
             _ethernetController_getSourceMACAddress
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_setERXDATAReadPointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernetController_sendPacket
               _enc424j600_setTXLength
                 _enc424j600_writeControlRegisterUnbanked
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
               _enc424j600_setTXStartAddress
                 _enc424j600_writeControlRegisterUnbanked
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
               _enc424j600_writeSingleByte
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _memory_txFrameClear
             _ethernetController_streamToTransmitBuffer
               _enc424j600_setGPDATAWritePointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernet_txFrameRequest
               _ethernetController_writeDestinationMACAddress
                 _enc424j600_setGPDATAWritePointer
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _ethernetController_writeEtherTypeFieldToBuffer
                 _enc424j600_setGPDATAWritePointer
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _memory_txFrameRequest
                 ___wmul
                   _rand (ARG)
                     ___lmul
                 _checkForOverlap
                   _checkForOverlapSwitched
                 _entireMemoryEmpty
                 _entireMemoryFull
             _mac_setToBroadcast
           _ethernetController_getMacAddress
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
           _mac_setAllZero
         _getMillis
       _arp_probe
         ___lwmod
           _rand (ARG)
             ___lmul
         _arp_checkForEntry
           _getMillis
           _ipv4_cmp
         _arp_sendRequest
           _arp_send
             _ethernetController_getSourceMACAddress
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_setERXDATAReadPointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernetController_sendPacket
               _enc424j600_setTXLength
                 _enc424j600_writeControlRegisterUnbanked
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
               _enc424j600_setTXStartAddress
                 _enc424j600_writeControlRegisterUnbanked
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
               _enc424j600_writeSingleByte
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _memory_txFrameClear
             _ethernetController_streamToTransmitBuffer
               _enc424j600_setGPDATAWritePointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernet_txFrameRequest
               _ethernetController_writeDestinationMACAddress
                 _enc424j600_setGPDATAWritePointer
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _ethernetController_writeEtherTypeFieldToBuffer
                 _enc424j600_setGPDATAWritePointer
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _memory_txFrameRequest
                 ___wmul
                   _rand (ARG)
                     ___lmul
                 _checkForOverlap
                   _checkForOverlapSwitched
                 _entireMemoryEmpty
                 _entireMemoryFull
             _mac_setToBroadcast
           _ethernetController_getMacAddress
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
           _mac_setAllZero
         _getMillis
         _ipv4_setToAllZero
         _rand
           ___lmul
       _ipv4_SrcAddrChanged
       _ipv4_getPreliminaryIPSourceAddress
     _arp_init
       _ipv4_setToAllZero
       _mac_setAllZero
     _ethernetController_clearInterruptFlag
       _enc424j600_clearInterruptFlag
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_writeControlRegisterUnbanked
           _enc424j600_writeSPI
             _enc424j600_initSPI
     _ethernetController_disableEthernet
     _ethernetController_getMTU
     _ethernetController_init
       _enc424j600_enableAutoMACInsertion
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_writeControlRegisterUnbanked
           _enc424j600_writeSPI
             _enc424j600_initSPI
       _enc424j600_enableReception
         _enc424j600_writeSingleByte
           _enc424j600_writeSPI
             _enc424j600_initSPI
       _enc424j600_initSPI
       _enc424j600_setNextPacketPointer
       _enc424j600_setRXBufferStartAddress
         _enc424j600_writeControlRegisterUnbanked
           _enc424j600_writeSPI
             _enc424j600_initSPI
       _enc424j600_setRXTailPointer
         _enc424j600_writeControlRegisterUnbanked
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _ethernetController_getNextPacketPointer (ARG)
           _enc424j600_getNextPacketPointer
       _ethernetController_checkDeviceId
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
       _ethernetController_softReset
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_writeControlRegisterUnbanked
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_writeSingleByte
           _enc424j600_writeSPI
             _enc424j600_initSPI
     _ethernetController_newPacketAvailable
       _enc424j600_getPacketCount
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
     _ethernetController_pollInterruptFlags
       _enc424j600_getInterruptFlags
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
     _ethernetController_setLEDConfig
       _enc424j600_readControlRegisterUnbanked
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _enc424j600_writeControlRegisterUnbanked
         _enc424j600_writeSPI
           _enc424j600_initSPI
     _ethernetController_updateLinkStatus
       _enc424j600_readControlRegisterUnbanked
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _enc424j600_readPHYRegister
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_writeControlRegisterUnbanked
           _enc424j600_writeSPI
             _enc424j600_initSPI
     _ethernet_rxGetNewFrame
       _UARTTransmitText
         _UART_special (ARG)
         _etherTypeToString (ARG)
         _ethernetController_getDeviceName (ARG)
         _intToString (ARG)
           _ltoa
             _ultoa
               ___lldiv
               ___llmod
         _ipAdressToString (ARG)
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
                 _rand (ARG)
                   ___lmul
         _macToString (ARG)
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
                 _rand (ARG)
                   ___lmul
       _UART_resetFormat
         _UARTTransmitText
           _UART_special (ARG)
           _etherTypeToString (ARG)
           _ethernetController_getDeviceName (ARG)
           _intToString (ARG)
             _ltoa
               _ultoa
                 ___lldiv
                 ___llmod
           _ipAdressToString (ARG)
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
                   _rand (ARG)
                     ___lmul
           _macToString (ARG)
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
                   _rand (ARG)
                     ___lmul
       _UART_setFormat
         _UARTTransmitText
           _UART_special (ARG)
           _etherTypeToString (ARG)
           _ethernetController_getDeviceName (ARG)
           _intToString (ARG)
             _ltoa
               _ultoa
                 ___lldiv
                 ___llmod
           _ipAdressToString (ARG)
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
                   _rand (ARG)
                     ___lmul
           _macToString (ARG)
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
                   _rand (ARG)
                     ___lmul
       _arp_handleNewPacket
         _arp_parseFromRXBuffer
           _ethernetController_streamFromRXBuffer
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_setERXDATAReadPointer
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
           _ipv4_cmp
           _ipv4_isAllZero
           _mac_cmp
           _mac_isAllZero
         _arp_sendReply
           _arp_send
             _ethernetController_getSourceMACAddress
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_setERXDATAReadPointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernetController_sendPacket
               _enc424j600_setTXLength
                 _enc424j600_writeControlRegisterUnbanked
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
               _enc424j600_setTXStartAddress
                 _enc424j600_writeControlRegisterUnbanked
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
               _enc424j600_writeSingleByte
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _memory_txFrameClear
             _ethernetController_streamToTransmitBuffer
               _enc424j600_setGPDATAWritePointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernet_txFrameRequest
               _ethernetController_writeDestinationMACAddress
                 _enc424j600_setGPDATAWritePointer
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _ethernetController_writeEtherTypeFieldToBuffer
                 _enc424j600_setGPDATAWritePointer
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _memory_txFrameRequest
                 ___wmul
                   _rand (ARG)
                     ___lmul
                 _checkForOverlap
                   _checkForOverlapSwitched
                 _entireMemoryEmpty
                 _entireMemoryFull
             _mac_setToBroadcast
           _ethernetController_getMacAddress
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
           _ipv4_cmp
           _ipv4_getIPSourceAddress
         _arp_setNewEntry
           _getMillis (ARG)
           _ipv4_cmp (ARG)
           _mac_cmp (ARG)
         _ethernetController_dropPacket
           _enc424j600_setRXTailPointer
             _enc424j600_writeControlRegisterUnbanked
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernetController_getNextPacketPointer (ARG)
               _enc424j600_getNextPacketPointer
           _enc424j600_writeSingleByte
             _enc424j600_writeSPI
               _enc424j600_initSPI
           _ethernetController_getNextPacketPointer
             _enc424j600_getNextPacketPointer
         _getMillis
         _ipv4_isAllZero
       _etherTypeToString
       _ethernetController_dropPacket
         _enc424j600_setRXTailPointer
           _enc424j600_writeControlRegisterUnbanked
             _enc424j600_writeSPI
               _enc424j600_initSPI
           _ethernetController_getNextPacketPointer (ARG)
             _enc424j600_getNextPacketPointer
         _enc424j600_writeSingleByte
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _ethernetController_getNextPacketPointer
           _enc424j600_getNextPacketPointer
       _ethernetController_getEtherTypeField
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_setERXDATAReadPointer
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _ethernetController_getNextPacketPointer
         _enc424j600_getNextPacketPointer
       _ethernetController_getRSV
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_setERXDATAReadPointer
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_updateReceiveStatusVector
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _ethernetController_updateNextPacketPointer
         _enc424j600_getNextPacketPointer
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_setERXDATAReadPointer
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_setNextPacketPointer
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _getMillis
       _intToString
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _ipv4_handleNewPacket
         _ethernetController_dropPacket
           _enc424j600_setRXTailPointer
             _enc424j600_writeControlRegisterUnbanked
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernetController_getNextPacketPointer (ARG)
               _enc424j600_getNextPacketPointer
           _enc424j600_writeSingleByte
             _enc424j600_writeSPI
               _enc424j600_initSPI
           _ethernetController_getNextPacketPointer
             _enc424j600_getNextPacketPointer
         _icmp_handleNewPacket
           _ethernetController_streamFromRXBuffer
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_setERXDATAReadPointer
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
           _icmp_calculateChecksumBuf
           _icmp_parseHeader
             _ethernetController_streamFromRXBuffer
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_setERXDATAReadPointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
           _icmp_sendEchoReply
             _ethernetController_streamFromRXBuffer
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_setERXDATAReadPointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _icmp_calculateChecksumBuf
             _icmp_writeHeaderIntoBuffer
             _ipv4_calculateHeaderChecksum
             _ipv4_getIPSourceAddress
             _ipv4_streamToTransmissionBuffer
               _ethernetController_streamToTransmitBuffer
                 _enc424j600_setGPDATAWritePointer
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
             _ipv4_txFrameRequest
               _ethernet_txFrameRequest
                 _ethernetController_writeDestinationMACAddress
                   _enc424j600_setGPDATAWritePointer
                     _enc424j600_writeSPI
                       _enc424j600_initSPI
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
                 _ethernetController_writeEtherTypeFieldToBuffer
                   _enc424j600_setGPDATAWritePointer
                     _enc424j600_writeSPI
                       _enc424j600_initSPI
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
                 _memory_txFrameRequest
                   ___wmul
                     _rand (ARG)
                       ___lmul
                   _checkForOverlap
                     _checkForOverlapSwitched
                   _entireMemoryEmpty
                   _entireMemoryFull
             _ipv4_writeHeaderIntoBuffer
         _ipv4_checkHeaderChecksum
           _ipv4_calculateHeaderChecksum
         _ipv4_parseHeader
           _ethernetController_streamFromRXBuffer
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_setERXDATAReadPointer
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
         _tcp_handleNewPacket
           _UARTTransmitText
             _UART_special (ARG)
             _etherTypeToString (ARG)
             _ethernetController_getDeviceName (ARG)
             _intToString (ARG)
               _ltoa
                 _ultoa
                   ___lldiv
                   ___llmod
             _ipAdressToString (ARG)
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
                     _rand (ARG)
                       ___lmul
             _macToString (ARG)
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
                     _rand (ARG)
                       ___lmul
           _intToString
             _ltoa
               _ultoa
                 ___lldiv
                 ___llmod
           _tcp_parseHeader
             _ethernetController_streamFromRXBuffer
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_setERXDATAReadPointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
           _tcp_stateMachine
             _UARTTransmitText
               _UART_special (ARG)
               _etherTypeToString (ARG)
               _ethernetController_getDeviceName (ARG)
               _intToString (ARG)
                 _ltoa
                   _ultoa
                     ___lldiv
                     ___llmod
               _ipAdressToString (ARG)
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
                       _rand (ARG)
                         ___lmul
               _macToString (ARG)
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
                       _rand (ARG)
                         ___lmul
             _tcp_sendSYNACK
               _UARTTransmitText
                 _UART_special (ARG)
                 _etherTypeToString (ARG)
                 _ethernetController_getDeviceName (ARG)
                 _intToString (ARG)
                   _ltoa
                     _ultoa
                       ___lldiv
                       ___llmod
                 _ipAdressToString (ARG)
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                         _rand (ARG)
                           ___lmul
                 _macToString (ARG)
                   _itoa
                     _utoa
                       ___lwdiv
                       ___lwmod
                         _rand (ARG)
                           ___lmul
               _intToString
                 _ltoa
                   _ultoa
                     ___lldiv
                     ___llmod
               _ipv4_calculateHeaderChecksum
               _ipv4_getIPSourceAddress
               _ipv4_streamToTransmissionBuffer
                 _ethernetController_streamToTransmitBuffer
                   _enc424j600_setGPDATAWritePointer
                     _enc424j600_writeSPI
                       _enc424j600_initSPI
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
               _ipv4_txFrameRequest
                 _ethernet_txFrameRequest
                   _ethernetController_writeDestinationMACAddress
                     _enc424j600_setGPDATAWritePointer
                       _enc424j600_writeSPI
                         _enc424j600_initSPI
                     _enc424j600_writeSPI
                       _enc424j600_initSPI
                   _ethernetController_writeEtherTypeFieldToBuffer
                     _enc424j600_setGPDATAWritePointer
                       _enc424j600_writeSPI
                         _enc424j600_initSPI
                     _enc424j600_writeSPI
                       _enc424j600_initSPI
                   _memory_txFrameRequest
                     ___wmul
                       _rand (ARG)
                         ___lmul
                     _checkForOverlap
                       _checkForOverlapSwitched
                     _entireMemoryEmpty
                     _entireMemoryFull
               _ipv4_writeHeaderIntoBuffer
               _tcp_calculateHeaderChecksum
       _macToString
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
     _intToString
       _ltoa
         _ultoa
           ___lldiv
           ___llmod
     _ipAdressToString
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
             _rand (ARG)
               ___lmul
     _ipv4_background
     _ipv4_generateAutoIP
       ___awmod
         _rand (ARG)
           ___lmul
       _rand
         ___lmul
     _ipv4_sendFrame
       _arp_checkForEntry
         _getMillis
         _ipv4_cmp
       _arp_getEntryFromTable
       _arp_sendRequest
         _arp_send
           _ethernetController_getSourceMACAddress
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_setERXDATAReadPointer
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
           _ethernetController_sendPacket
             _enc424j600_setTXLength
               _enc424j600_writeControlRegisterUnbanked
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
             _enc424j600_setTXStartAddress
               _enc424j600_writeControlRegisterUnbanked
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
             _enc424j600_writeSingleByte
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _memory_txFrameClear
           _ethernetController_streamToTransmitBuffer
             _enc424j600_setGPDATAWritePointer
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
           _ethernet_txFrameRequest
             _ethernetController_writeDestinationMACAddress
               _enc424j600_setGPDATAWritePointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernetController_writeEtherTypeFieldToBuffer
               _enc424j600_setGPDATAWritePointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _memory_txFrameRequest
               ___wmul
                 _rand (ARG)
                   ___lmul
               _checkForOverlap
                 _checkForOverlapSwitched
               _entireMemoryEmpty
               _entireMemoryFull
           _mac_setToBroadcast
         _ethernetController_getMacAddress
           _enc424j600_readControlRegisterUnbanked
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
         _mac_setAllZero
       _ethernetController_getMacAddress
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
       _ethernetController_sendPacket
         _enc424j600_setTXLength
           _enc424j600_writeControlRegisterUnbanked
             _enc424j600_writeSPI
               _enc424j600_initSPI
         _enc424j600_setTXStartAddress
           _enc424j600_writeControlRegisterUnbanked
             _enc424j600_writeSPI
               _enc424j600_initSPI
         _enc424j600_writeSingleByte
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _memory_txFrameClear
       _ethernetController_writeDestinationMACAddress
         _enc424j600_setGPDATAWritePointer
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _getMillis
     _ipv4_setIPSourceAddress
   _ipv4_generateAutoIP
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul
   _printErrorMessage
   _printEthernetState
     _UARTTransmitText
       _UART_special (ARG)
       _etherTypeToString (ARG)
       _ethernetController_getDeviceName (ARG)
       _intToString (ARG)
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _ipAdressToString (ARG)
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
       _macToString (ARG)
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
   _rand
     ___lmul
   _sevenSegmentInit
   _srand
     _ethernetController_getMacAddress (ARG)
       _enc424j600_readControlRegisterUnbanked
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
   _stack_init
     _arp_init
       _ipv4_setToAllZero
       _mac_setAllZero
     _ipv4_init
       _ipv4_setToAllZero
     _tcp_init
   _tcp_listen
     _UARTTransmitText
       _UART_special (ARG)
       _etherTypeToString (ARG)
       _ethernetController_getDeviceName (ARG)
       _intToString (ARG)
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _ipAdressToString (ARG)
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
       _macToString (ARG)
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
     ___wmul
       _rand (ARG)
         ___lmul
     _intToString
       _ltoa
         _ultoa
           ___lldiv
           ___llmod
     _rand
       ___lmul
   _udp_sendPacket
     _ipv4_calculateHeaderChecksum
     _ipv4_getIPSourceAddress
     _ipv4_streamToTransmissionBuffer
       _ethernetController_streamToTransmitBuffer
         _enc424j600_setGPDATAWritePointer
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
     _ipv4_txFrameRequest
       _ethernet_txFrameRequest
         _ethernetController_writeDestinationMACAddress
           _enc424j600_setGPDATAWritePointer
             _enc424j600_writeSPI
               _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _ethernetController_writeEtherTypeFieldToBuffer
           _enc424j600_setGPDATAWritePointer
             _enc424j600_writeSPI
               _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _memory_txFrameRequest
           ___wmul
             _rand (ARG)
               ___lmul
           _checkForOverlap
             _checkForOverlapSwitched
           _entireMemoryEmpty
           _entireMemoryFull
     _ipv4_writeHeaderIntoBuffer

 _ccp1Int (ROOT)
   _updateTime

 _tmr0Int (ROOT)
   _buttonHandler
   _sevenSegmentUpdate
     _parseNumber
       i2___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100     26      26      17       14.8%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FE      15       99.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      EC      13       92.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F5      11       95.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100     9F      E4       9       89.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FB     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     36      4A       1       77.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     5D2      58        0.0%
DATA                 0      0     5D2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon May 20 20:56:39 2019

                               udp_sendPacket@ipHeaderBuf 0140  
                       ipv4_calculateHeaderChecksum@carry 0020  
                __end_of_ethernetController_getMacAddress 6BCC  
               __size_of_ethernetController_getMacAddress 006A  
                      ??_ethernetController_getMacAddress 002A  
                       ?_ethernetController_getMacAddress 0024  
                        _ethernetController_getMacAddress 6B62  
                                             __CFG_CP$OFF 000000  
                                             arp_init@mac 0019  
                                                      l81 5E3C  
                                                      l90 5760  
                                                      l83 5E6E  
                                                      l92 5740  
                                                      l94 575C  
                                                      l95 577C  
                                                      l98 6ED0  
                     __size_of_ipv4_writeHeaderIntoBuffer 0194  
                        __end_of_ipv4_checkHeaderChecksum 6E46  
                 ethernetController_getSourceMACAddress@i 0036  
                                                      _id 02E0  
                                     ___wmul@multiplicand 0026  
                                      i2___lwdiv@dividend 0001  
                      ipv4_calculateHeaderChecksum@header 0016  
                                             __CFG_LVP$ON 000000  
                                             arp_send@arp 008A  
                                 ??_memory_txFrameRequest 0072  
                                                     l200 632E  
                                                     l210 6500  
                                                     l211 6504  
                                                     l140 6718  
                                                     l141 6760  
                                                     l205 6522  
                                                     l214 6542  
                                                     l206 650C  
                                                     l215 652A  
                                                     l207 64F8  
                                                     l233 68EC  
                                                     l217 6558  
                                                     l242 677C  
                                                     l146 6474  
                                                     l218 6532  
                                                     l219 6538  
                                                     l156 696C  
                                                     l148 64C0  
                                                     l412 726C  
                                                     l420 7258  
                                                     l180 6CD2  
                                                     l181 6C92  
                                                     l246 67CC  
                                                     l430 5612  
                                                     l414 728E  
                                                     l318 662E  
                                                     l166 6810  
                                                     l431 560E  
                                                     l183 6CBA  
                                                     l440 6082  
                                                     l424 55DA  
                                                     l264 5572  
                                                     l184 6CCA  
                                                     l418 7236  
                                                     l362 57F4  
                                                     l370 1274  
                                                     l451 60CA  
                                                     l435 5652  
                                                     l259 54BE  
                                                     l371 1328  
                                                     l428 5656  
                                                     l364 5816  
                                                     l196 62D4  
                                                     l188 719E  
                                                     l372 1348  
                                                     l532 06A0  
                                                     l700 1E52  
                                                     l445 60BA  
                                                     l429 5640  
                                                     l461 0C04  
                                                     l189 71B2  
                                                     l533 0682  
                                                     l454 0B70  
                                                     l382 7546  
                                                     l198 6308  
                                                     l374 156C  
                                                     l550 0746  
                                                     l534 069A  
                                                     l702 1EAC  
                                                     l447 60B6  
                                                     l375 1374  
                                                     l551 0766  
                                                     l480 1048  
                                                     l464 0C38  
                                                     l456 0B96  
                                                     l376 15A0  
                                                     l536 06C0  
                                                     l712 6D18  
                                                     l481 106C  
                                                     l473 0E26  
                                                     l393 705E  
                                                     l377 13C8  
                                                     l369 121E  
                                                     l553 0A16  
                                                     l561 09C6  
                                                     l537 0730  
                                                     l474 0EE2  
                                                     l466 0C40  
                                                     l458 0BC4  
                                                     l378 141C  
                                                     l554 078A  
                                                     l714 6D2C  
                                                     l811 6A8A  
                                                     l395 708A  
                                                     l387 72D8  
                                                     l555 07BE  
                                                     l468 0E88  
                                                     l564 093A  
                                                     l469 0D9A  
                                                     l813 6ABE  
                                                     l389 72F2  
                                                     l549 0A02  
                                                     l565 0952  
                                                     l557 07E8  
                                                     l822 6144  
                                                     l558 07F0  
                                                     l479 0F58  
                                                     l399 7522  
                                                     l831 6134  
                                                     l823 60D4  
                                                     l559 08F8  
                                                     l825 60E4  
                                                     l569 0B46  
                                                     l826 60F4  
                                                     l850 5F7E  
                                                     l690 1B2C  
                                                     l835 766A  
                                                     l827 6104  
                                                     l691 1B84  
                                                     l836 7660  
                                                     l828 6114  
                                                     l860 7024  
                                                     l852 5FFA  
                                                     l692 1BDC  
                                                     l829 6124  
                                                     l693 1C34  
                                                     l694 1CB0  
                                                     l695 1CF2  
                                                     l960 208A  
                                                     l856 702E  
                                                     l880 519A  
                                                     l696 1E0C  
                                                     l953 58BA  
                                                     l857 7010  
                                                     l881 51E4  
                                   ??_tcp_handleNewPacket 00D0  
                                                     l962 2134  
                                                     l698 1E48  
                                                     l971 2236  
                                                     l963 20E6  
                                                     l955 58F6  
                                                     l859 701A  
                                                     l956 596C  
                                                     l973 2270  
                                                     l965 2190  
                                                     l877 50EA  
                                                     l990 3746  
                                                     l966 2142  
                                                     l975 22B4  
                                                     l959 20D8  
                                                     l879 515A  
                                                     l992 37C0  
                                                     l976 22B8  
                                                     l968 21EC  
                                                     l993 378A  
                                                     l977 22EE  
                                                     l969 219E  
                                                     l986 3738  
                                                     l995 3804  
                                                     l987 3702  
                                                     l996 37CE  
                                                     l989 377C  
                             __end_of_ipv4_txFrameRequest 4A86  
                              __end_of_icmp_sendEchoReply 3CCC  
           enc424j600_writeControlRegisterUnbanked@opcode 0023  
                            ??_enc424j600_writeSingleByte 0020  
                __end_of_ethernetController_getDeviceName 74CE  
               __size_of_ethernetController_getDeviceName 0028  
                      ??_ethernetController_getDeviceName 0018  
                       ?_ethernetController_getDeviceName 0016  
                        _ethernetController_getDeviceName 74A6  
                                memory_txFrameClear@index 0016  
                                                     _foo 02C4  
                    enc424j600_readPHYRegister@unusedBits 002E  
                     ethernetController_getMacAddress@mac 002A  
                          memory_txFrameRequest@freeIndex 0086  
                                            ___awmod@sign 0029  
                                                     prod 003FF3  
           ethernetController_streamFromRXBuffer@startEnd 0027  
                                                     wreg 003FE8  
                                      _sevenSegmentUpdate 5A44  
               ethernetController_getEtherTypeField@field 0025  
                                           __CFG_BBEN$OFF 000000  
                                  _numberOfOccupiedFields 0047  
                      ethernetController_setLEDConfig@LED 0025  
                      __size_of_ethernetController_getMTU 000A  
                      __size_of_ethernetController_getRSV 0076  
                      __end_of_enc424j600_readPHYRegister 5574  
                              _enc424j600_readPHYRegister 5460  
                          __end_of_enc424j600_setTXLength 74A6  
                                        ??_arp_background 00F8  
                                            __CFG_ZCD$OFF 000000  
                        _tcp_calculateHeaderChecksum$4890 0067  
                        _tcp_calculateHeaderChecksum$4891 0069  
                        _tcp_calculateHeaderChecksum$4892 006B  
                        _tcp_calculateHeaderChecksum$4893 006D  
                        _tcp_calculateHeaderChecksum$4894 006F  
                        _tcp_calculateHeaderChecksum$4887 0061  
                        _tcp_calculateHeaderChecksum$4888 0063  
                        _tcp_calculateHeaderChecksum$4889 0065  
                          ?_ethernetController_sendPacket 0028  
                                                    l1020 345A  
                                                    l1012 3310  
                                                    l1015 355E  
                                                    l1040 3D38  
                                                    l1024 3526  
                                                    l1016 3340  
                                                    l1041 3EE0  
                                                    l1025 353E  
                                                    l1017 3578  
                                                    l1042 3D64  
                                                    l1018 339E  
                                                    l1210 44B6  
                                                    l1027 354A  
                                                    l1019 3450  
                                                    l1044 3DD4  
                                                    l1036 3D08  
                                                    l1060 4D04  
                                                    l1300 4ECA  
                                                    l1212 44FC  
                                                    l1045 3E96  
                                                    l1061 4BEC  
                                                    l1213 452E  
                                                    l1070 4D12  
                                                    l1302 4F92  
                                                    l1310 3C2A  
                                                    l1214 454E  
                                                    l1039 3EC6  
                                                    l1071 4C9C  
                                                    l1063 4C60  
                                                    l1231 7306  
                                                    l1311 3C62  
                                                    l1215 4562  
                                                    l1080 5D46  
                                                    l1072 4CEC  
                                                    l1312 3C9E  
                                                    l1208 461E  
                                                    l1216 4598  
                                                    l1225 709E  
                                                    l1049 3EB0  
                                                    l1065 4C8E  
                                                    l1233 7320  
                                                    l1401 25B4  
                                                    l1209 45CE  
                                                    l1066 4C5A  
                                                    l1090 4B54  
                                                    l1306 3BAA  
                                                    l1170 2FA6  
                                                    l1154 447A  
                                                    l1227 70CA  
                                                    l1307 3B78  
                                                    l1164 2A30  
                                                    l1077 5C9E  
                                                    l1237 74FE  
                                                    l1309 3CA4  
                                                    l1421 2618  
                                                    l1413 25F0  
                                                    l1405 25C8  
                                                    l1181 3128  
                                                    l1149 43AA  
                                                    l1094 623C  
                                                    l1430 26AE  
                                                    l1087 4A9E  
                                                    l1175 6E42  
                                                    l1431 26EA  
                                                    l1191 32B8  
                                                    l1168 2F56  
                                                    l1192 325C  
                                                    l1184 31B4  
                                                    l1089 4B00  
                                                    l1441 17F6  
                                                    l1425 262C  
                                                    l1417 2604  
                                                    l1409 25DC  
                                                    l1193 32CA  
                                                    l1370 39A0  
                                                    l1362 3910  
                                                    l1194 328A  
                                                    l1371 39AE  
                                                    l1363 3922  
                                                    l1187 320E  
                                                    l1179 304A  
                                                    l1516 6C40  
                                                    l1428 26F0  
                                                    l1380 5DB6  
                                                    l1364 3934  
                                                    l1188 3228  
                                                    l1517 6C54  
                                                    l1461 1896  
                                                    l1453 1856  
                                                    l1445 1816  
                                                    l1437 17D6  
                                                    l1429 2676  
                                                    l1373 3A76  
                                                    l1365 3946  
                                                    l1189 3240  
                                                    l1286 535E  
                                                    l1366 3958  
                                                    l1367 396A  
                                                    l1288 53CA  
                                                    l1368 397C  
                                                    l1472 634C  
                                                    l1289 539C  
                                                    l1465 18B2  
                                                    l1457 1876  
                                                    l1449 1836  
                                                    l1369 398E  
                                                    l1298 4EDE  
                                                    l1299 4E84  
                                                    l1468 1A3A  
                                                    l1389 5D50  
                                                    l1493 42B8  
                                                    l1494 41EC  
                                                    l1495 4224  
                                                    l1841 59C8  
                                                    l1497 4290  
                                                    l1922 4D3E  
                                                    l1842 5A1A  
                                                    l1498 42B2  
                                                    l1835 6D70  
                                                    l1924 4DAE  
                                                    l1940 6DD8  
                                                    l1692 68A4  
                                                    l1925 4E38  
                                                    l1941 6DE2  
                                                    l1693 68AE  
                                                    l1685 686A  
                                                    l1950 6FF6  
                                                    l1870 63EE  
                                                    l1918 6B2C  
                                                    l1694 68BC  
                                                    l1686 6876  
                                                    l1951 7000  
                                                    l1839 597E  
                                                    l1880 69BE  
                                                    l1936 6DB8  
                                                    l1688 688C  
                                                    l1873 642E  
                                                    l1937 6DB0  
                                                    l1689 6884  
                                                    l1946 6FDE  
                                                    l1874 643C  
                                                    l1947 6FD6  
                                                    l1883 69F2  
                                                    l1884 6A00  
                                                    l1869 63FA  
                                                    l1879 69CA  
         ethernetController_streamToTransmitBuffer@opcode 0033  
                                                    l9718 646C  
                                                    l9574 7264  
                                                    l9496 6922  
                                                    l9736 64B8  
                                                    l9594 722E  
                                                    l9818 0D92  
                                                    l9852 0EDA  
                                                    STR_1 FFFB  
                                                    l9952 6760  
                                            __CFG_WDTE$ON 000000  
                                                    STR_2 FF90  
                                                    STR_3 FF36  
                                                    STR_4 FF62  
                                                    STR_5 FE80  
                           ?_ethernetController_softReset 0024  
                                                    STR_6 FFFB  
                                                    STR_7 FF90  
                                                    STR_8 FFFB  
                                                    STR_9 FF90  
               ethernetController_clearInterruptFlag@flag 0028  
                                __end_of_icmp_parseHeader 40F2  
               enc424j600_setRXBufferStartAddress@lowByte 0026  
                                                    _TXIF 01CD0C  
                                          mac_isAllZero@i 0018  
                                     ?_sevenSegmentUpdate 000F  
                                           __CFG_FCMEN$ON 000000  
                                       _ipv4_setToAllZero 74F2  
                                                    _main 1A5C  
                                                    _rand 6BCC  
                                                    _itoa 6D42  
                                 printEthernetState@state 006F  
                                                    _ltoa 6AF6  
                                                    _time 029F  
                                                    fsr0h 003FEA  
                                                    fsr1h 003FE2  
                                      i2___lwdiv@quotient 0005  
                                                    indf0 003FEF  
                                                    fsr2h 003FDA  
                                                    fsr0l 003FE9  
                                                    indf1 003FE7  
                                                    indf2 003FDF  
                                                    fsr1l 003FE1  
                                                    fsr2l 003FD9  
                                                    _utoa 5972  
                               __size_of_sevenSegmentInit 001E  
                                 _ethernetController_init 5E06  
                                      ?_ipv4_setToAllZero 0016  
                                                    prodh 003FF4  
                                                    prodl 003FF3  
                     __size_of_handleStackBackgroundTasks 0548  
                                                    start 00AE  
          __end_of_ethernetController_getSourceMACAddress 69AC  
         __size_of_ethernetController_getSourceMACAddress 0070  
                ??_ethernetController_getSourceMACAddress 002E  
                 ?_ethernetController_getSourceMACAddress 0025  
                  _ethernetController_getSourceMACAddress 693C  
                                            arp_probe@err 0139  
                                           __CFG_CSWEN$ON 000000  
                                          _SPI1STATUSbits 003D17  
                                         ??_mac_isAllZero 0018  
                              memory_txFrameRequest@field 007D  
                                            ___param_bank 000000  
                           ethernet_rxGetNewFrame@counter 02B7  
                                 _checkForOverlapSwitched 601E  
              enc424j600_setRXBufferStartAddress@highByte 0027  
            __end_of_ethernetController_getEtherTypeField 6A88  
           __size_of_ethernetController_getEtherTypeField 006E  
                  ??_ethernetController_getEtherTypeField 002E  
                   ?_ethernetController_getEtherTypeField 0025  
                    _ethernetController_getEtherTypeField 6A1A  
                                     ??_ipv4_setToAllZero 0018  
                             ?_icmp_writeHeaderIntoBuffer 0016  
                             ?_enc424j600_enableReception 0001  
                      __size_of_enc424j600_getPacketCount 0016  
                               __size_of_UART_resetFormat 0010  
                                          _ipv4_isAllZero 72FA  
                     ethernetController_setLEDConfig@data 0026  
                                    ??_sevenSegmentUpdate 0011  
                                            ?_intToString 0032  
                          handleStackBackgroundTasks@intf 0298  
                     ethernetController_setLEDConfig@conf 0024  
                                           arp_send@field 00D6  
                                                   l10030 67B2  
                                                   l11100 5C96  
                                                   l10304 753E  
                                                   l11114 5D46  
                                                   l10252 6964  
                                                   l11124 74F6  
                                                   l11150 2F4E  
                                                   l12016 6234  
                                                   l10600 7056  
                                                   l11048 4A96  
                                                   l11402 6808  
                                                   l11162 2F9E  
                                                   l10620 751A  
                                                   l11334 5748  
                                                   l11190 6E42  
                                                   l12062 4414  
                                                   l12144 4CEC  
                                                   l10632 72FE  
                                                   l12242 6344  
                                                   l10652 7096  
                                                   l10580 72D0  
                                                   l11294 3A76  
                                                   l11278 39A6  
                                                   l12078 50E2  
                                                   l11626 5F76  
                                                   l11486 54EC  
                                                   l11736 3E42  
                                     arp_checkForEntry@ip 001D  
                                       _nextPacketPointer 003B  
                                                   l10998 22E6  
                                                   l12980 09F2  
                                                   l12982 45F6  
                                                   l12984 4600  
                                                   l12978 09E8  
                                    tcp_listen@connection 006F  
                                tcp_sendSYNACK@connection 00A2  
                                                   ?_main 0001  
                                         __end_of_ccp1Int 76EE  
                                                   ?_rand 0022  
                                                   ?_itoa 0060  
                                                   _CCPR1 003F7C  
                                                   STR_10 FFFB  
                                                   ?_ltoa 0060  
                                                   STR_11 FFFA  
                                                   STR_12 FFF7  
                                                   STR_20 FFD0  
                                                   STR_13 FFFA  
                                                   STR_21 FFF1  
                                                   STR_22 FFEE  
                                                   STR_14 FFD5  
                                                   STR_30 FF4D  
                                                   STR_15 FFF4  
                                                   STR_23 FE00  
                                                   STR_24 FFEB  
                                                   STR_16 FFEB  
                                                   STR_40 FE15  
                                                   STR_17 FFEA  
                                                   STR_41 FE9F  
                                                   STR_33 FDD3  
                                                   STR_25 FD6A  
                                                   STR_26 FFEB  
                                                   STR_50 FFEA  
                                                   STR_34 FEAD  
                                                   STR_42 FDB9  
                                                   STR_18 FBC6  
                                                   STR_19 FFEB  
                                                   STR_43 FF58  
                                                   STR_35 FE5F  
                                                   STR_27 FD04  
                                                   STR_51 FC38  
                                                   STR_60 FFEB  
                                                   STR_52 FFEA  
                                                   STR_44 FE70  
                                                   STR_28 FD29  
                                         __end_of___awmod 68CA  
                                                   STR_29 FFEB  
                                                   STR_45 FFFD  
                                                   STR_61 FF7D  
                                                   STR_53 FC02  
                                                   STR_46 FFEA  
                                                   STR_38 FED5  
                                                   STR_62 FEC8  
                                                   STR_70 FEBB  
                                                   STR_54 FD9F  
                                                   STR_71 FF42  
                                                   STR_55 FF2A  
                                                   STR_63 FE29  
                                                   STR_39 FDEB  
                                                   STR_47 FCD2  
                                                   STR_48 FFEA  
                                                   STR_56 FFEF  
                                                   STR_64 FFCB  
                                                   STR_72 FCA0  
                                                   STR_73 FFC1  
                                                   STR_57 FF6C  
                                                   STR_65 FEE2  
                                                   STR_49 FC6D  
                                                   STR_58 FD25  
                                                   STR_74 FFE6  
                                                   STR_66 FF06  
                                                   STR_59 FF1E  
                                                   STR_67 FEEE  
                                                   STR_75 FE3C  
                                                   STR_76 FFC6  
                                                   STR_68 FEFA  
                                                   STR_77 FFDE  
                                                   STR_69 FF12  
                                                   STR_78 FFE2  
                                                   STR_79 FE4E  
                                                   STR_96 FF4D  
                                                   STR_97 FFED  
                                                   STR_98 FFED  
                                                   STR_99 FDD3  
                                         __end_of___lldiv 6456  
                                                   ?_utoa 0029  
                                                   u11100 63FE  
                                                   u11041 561C  
                                                   u11201 0B64  
                                                   u12010 4F1A  
                                                   u11130 69CE  
                                                   u11051 5630  
                                                   u12020 4F48  
                                                   u11221 0B8A  
                                                   u12030 4F6E  
                                                   u11071 5660  
                                                   u12015 4F10  
                                                   u11160 649E  
                                                   u12040 5C52  
                                                   u11081 5674  
                                                   u11401 0E7C  
                                                   u12201 26B8  
                                                   u13010 2B18  
                                                   u11251 0BB8  
                                                   u12035 4F64  
                                                   u12051 2396  
                                                   u11180 64DA  
                                                   u11341 0DB8  
                                                   u11261 0BF8  
                                                   u12045 5C48  
                                                   u12221 2706  
                                                   u12061 245C  
                                                   u10710 6922  
                                                   u13110 2BD8  
                                                   u13030 2B40  
                                                   u12070 2526  
                                                   u11511 1060  
                                                   u11351 0DD8  
                                                   u10720 6932  
                                                   u10800 607E  
                                                   u12400 7324  
                                                   u12320 72F6  
                                                   u13008 2AF4  
                                                   u12080 256E  
                                                   u12240 6DBC  
                                                   u11441 0F1E  
                                         __end_of___llmod 6A1A  
                                                   u10730 602C  
                                                   u13210 2C94  
                                                   u13130 2BFC  
                                                   u13050 2B64  
                                                   u12170 263C  
                                                   u12090 2596  
                                                   u11531 107E  
                                                   u11451 0F3E  
                                                   u12075 251C  
                                                   u10740 603A  
                                                   u11700 6AC4  
                                                   u13108 2BB4  
                                                   u13028 2B1A  
                                                   u11381 0E1A  
                                                   u11621 5828  
                                                   u12501 365C  
                                                   u14101 684A  
                                                   u12085 2564  
                                                   u12430 70CE  
                                                   u10750 6048  
                                                   u10910 725C  
                                                   u11470 0F5E  
                                                   u11390 0E2C  
                                                   u12270 6FE2  
                                                   u11710 6AEE  
                                                   u12350 708E  
                                                   u13230 2CBC  
                                                   u13150 2C22  
                                                   u13070 2B8A  
                                                   u11631 5844  
                                                   u12511 3678  
                                                   u13311 2D42  
                                                   u12191 2690  
                                                   u10760 6056  
                                                   u10920 5584  
                                                   u13208 2C70  
                                                   u13128 2BDA  
                                                   u13048 2B42  
                                                   u11800 17AA  
                                                   u12176 263E  
                                                   u11641 587C  
                                                   u12601 3794  
                                                   u12521 3694  
                                                   u12441 35A2  
                                                   u15001 6282  
                                                   u14201 5900  
                                                   u10930 5592  
                                                   u13250 2CE2  
                                                   u13170 2C4A  
                                                   u13090 2BB2  
                                                   u12098 259A  
                                                   u11491 103C  
                                                   u12531 36B0  
                                                   u12451 35C0  
                                                   u12291 6BC0  
                                                   u11731 75E4  
                                                   _U1BRG 003DF5  
                                                   u10940 55A0  
                                                   u14124 6614  
                                                   u13308 2D2A  
                                                   u13228 2C96  
                                                   u13148 2BFE  
                                                   u13068 2B66  
                                                   u11900 18F0  
                                                   u12621 37D8  
                                                   u12541 36CC  
                                                   u12461 35D4  
                                                   u14125 6610  
                                                   u11717 6AE0  
                                                   u13501 2304  
                                                   u14221 592A  
                                                   u12701 3C6C  
                                                   u11805 17A0  
                                                   u11670 67B2  
                                                   u10950 55AE  
                                                   u14134 6652  
                                                   u14150 54EC  
                                                   u13270 2D04  
                                                   u13190 2C6E  
                                                   u11910 19C2  
                                                   u14230 3038  
                                                   u11591 57C8  
                                                   u12551 36E8  
                                                   u14135 664E  
                                                   u15031 4326  
                                                   u11680 67C2  
                                                   u10880 7292  
                                                   u13440 22B0  
                                                   u13248 2CBE  
                                                   u13168 2C24  
                                                   u13088 2B8C  
                                                   u11760 29B8  
                                                   u11920 19F0  
                                                   u12641 3816  
                                                   u12561 370C  
                                                   u12481 3626  
                                                   u11745 2774  
                                                   u12721 3CBA  
                                                   u14321 3266  
                                                   u14241 305E  
                                                   u15041 433A  
                                                   u11690 6AB4  
                                                   u14170 58A8  
                                                   u13290 2D28  
                                                   u14090 6828  
                                                   u11770 29E6  
                                                   u12810 0438  
                                                   u12730 039A  
                                                   u11930 1A16  
                                                   u12491 3640  
                                                   u13531 5250  
                                                   u11755 2832  
                                                   u12651 3AF8  
                                                   u11915 19B8  
                                                   u14331 327A  
                                                   u14251 30A6  
                                                   u15051 434E  
                                                   u14500 3E42  
                                                   u13620 4B58  
                                                   u13268 2CE4  
                                                   u13188 2C4C  
                                                   u11780 2A0C  
                                                   u11908 18F2  
                                                   u12581 3750  
                                                   u13541 5264  
                                                   u14181 58D0  
                                                   u11765 29AE  
                                                   u12661 3B4E  
                                                   u14341 3294  
                                                   u15061 4362  
                                                   u13710 5D4A  
                                                   u11950 6992  
                                                   u10990 55D6  
                                                   u14430 34CE  
                                                   u12830 0460  
                                                   u12750 03C0  
                                                   u11790 1730  
                                                   u15150 51E8  
                                                   u13551 52E6  
                                                   u13631 4B9E  
                                                   u11935 1A0C  
                                                   u14351 32A8  
                                                   u15071 437A  
                                                   u15240 74B8  
                                                   u13288 2D06  
                                                   u12808 0416  
                                                   u11961 69A0  
                                                   u13641 5EC4  
                                                   u11697 6AA6  
                                                   u13561 5312  
                                                   u11785 2A02  
                                                   u14521 73A4  
                                                   u15321 077E  
                                                   u15401 5020  
                                                   u14610 47EA  
                                                   u13490 22E6  
                                                   u13810 534E  
                                                   u12850 048A  
                                                   u12770 03E8  
                                                   u15090 4414  
                                                   u13651 5F1E  
                                                   u13571 5326  
                                                   u12691 3C44  
                                                   u11795 1726  
                                                   u15331 079C  
                                                   u12828 043C  
                                                   u12748 039E  
                                                   u14380 5FFE  
                                                   u13661 5F4A  
                                                   u13821 5368  
                                                   u15501 429A  
                                                   u14710 4870  
                                                   u14630 4802  
                                                   u12950 2AAC  
                                                   u13750 2F9A  
                                                   u12870 04B2  
                                                   u12790 0412  
                                                   u13671 5F5E  
                                                   u11895 18D0  
                                                   u14480 3DC8  
                                                   u14800 48F8  
                                                   u12848 0464  
                                                   u12768 03C4  
                                                   u14560 6890  
                                                   u15361 090A  
                                                   u15441 6D36  
                                                   u15521 42CE  
                                                   u14730 488E  
                                                   u14650 481C  
                                                   u12970 2ACE  
                                                   u13770 2FEA  
                                                   u13851 5428  
                                                   u15451 4174  
                                                   u14820 4910  
                                                   u14708 4858  
                                                   u14628 47EC  
                                                   u12868 048E  
                                                   u12788 03EC  
                                                   u15700 1EC6  
                                                   u13861 543C  
                                                   u13781 3012  
                                                   u14670 4838  
                                                   u12990 2AF2  
                                                   u15710 1EC8  
                                                   u13871 5450  
                                                   u13791 6E02  
                                                   u14911 1122  
                                                   u15471 4206  
                                                   u15631 1E26  
                                                   u14840 76D6  
                                                   u14760 48BE  
                                                   u14728 4872  
                                                   u14648 4804  
                                                   u12968 2AAE  
                                                   u12888 04B6  
                                                   u13881 3830  
                                                   u14818 48FA  
                                                   u14754 48A2  
                                                   u14690 4856  
                                                   u14755 489C  
                                                   u14931 1286  
                                                   u15491 425E  
                                                   u14780 48DC  
                                                   u14748 4890  
                                                   u14668 481E  
                                                   u12988 2AD0  
                                                   u14838 4912  
                                          __CFG_DEBUG$OFF 000000  
                                                   u14688 483A  
                                                   u15681 1E86  
                                                   u14778 48C0  
                                                   u14971 146C  
                                                   u14981 14AC  
                                                   u14798 48DE  
                                                   u15847 1ABC  
                                                   u15857 1D3A  
                                                   u15867 54B8  
                                         __end_of___lwdiv 6DF0  
                                                   u15877 5702  
                                                   u15887 5736  
                              __end_of_printEthernetState 6D42  
                                         __end_of___lwmod 700E  
                                                   _U1TXB 003DEA  
        ethernetController_streamToTransmitBuffer@pointer 0039  
                                                   i2l727 5B48  
                                                   i2l728 5B5A  
                                                   i2l729 5BAA  
                                                   i2l773 5A7A  
                                                   i2l782 65D6  
                                                   i2l783 65C6  
                                                   i2l775 5A82  
                                                   i2l785 65CA  
                                                   i2l786 65CE  
                                                   i2l778 5AA0  
                                                   i2l787 65D2  
                                     _arp_handleNewPacket 588C  
                                                   _PORTA 003FCA  
                                                   _PORTB 003FCB  
                                                   _PORTC 003FCC  
                        __size_of_ethernet_txFrameRequest 00FC  
                                                   _TRISA 003FC2  
                                                   _TRISB 003FC3  
                                                   _TRISC 003FC4  
         __end_of_enc424j600_writeControlRegisterUnbanked 722A  
        __size_of_enc424j600_writeControlRegisterUnbanked 0038  
               ??_enc424j600_writeControlRegisterUnbanked 0022  
                ?_enc424j600_writeControlRegisterUnbanked 0020  
                 _enc424j600_writeControlRegisterUnbanked 71F2  
                                     ___lmul@multiplicand 001A  
                                         __end_of_mac_cmp 7092  
                                         _ipv4_background 448E  
                                        __end_of_UARTInit 768C  
                                         ??_arp_sendReply 0037  
                                           __CFG_WRTB$OFF 000000  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                                   _randx 02DC  
                                      __CFG_MCLRE$EXTMCLR 000000  
                               __end_of_ipv4_setToAllZero 7516  
                                                   _srand 76A2  
                                                   _stack 0400  
                               arp_background@errAnnounce 0140  
                                         __end_of_tmr0Int 7406  
                                                   _ultoa 4D26  
                       __end_of_ethernetController_getMTU 7752  
           ethernetController_streamToTransmitBuffer@data 0032  
                       __end_of_ethernetController_getRSV 6856  
                                                   tablat 003FF5  
                            ethernet_txFrameRequest@frame 0034  
                                        ?_checkForOverlap 0060  
                                                   plusw0 003FEB  
                                                   plusw1 003FE3  
                                                   plusw2 003FDB  
                                                   utoa@c 0031  
                             memory_txFrameRequest@i_1087 007C  
                                                   utoa@v 002F  
                                                   status 003FD8  
                       enc424j600_clearInterruptFlag@flag 0026  
                             __size_of_mac_setToBroadcast 0024  
                                           arp_probe@link 00EB  
                       enc424j600_clearInterruptFlag@temp 0027  
                                    ?_arp_handleNewPacket 0138  
                                __end_of_UARTTransmitText 6AF6  
                               _ipv4_handleNewPacket$3905 01C7  
                                          _ipv4_sendFrame 42E0  
                                      __size_ofi2___lwdiv 0056  
                            tcp_handleNewPacket@ipPayload 00C7  
                                            ?_parseNumber 0008  
                                        _ipAdressToString 50D4  
                                         __initialization 617A  
                                  ipAdressToString@number 02D0  
                             memory_txFrameRequest@length 002A  
                            __end_of_icmp_handleNewPacket 5460  
                                            __end_of_main 1ECC  
                                  __end_of_ipv4_isAllZero 7328  
                                            __end_of_rand 6C30  
                                            __end_of_itoa 6D9A  
                                            __end_of_ltoa 6B62  
                                            __end_of_utoa 5A44  
                                ?_ipv4_getIPSourceAddress 0016  
                                  arpEntryToString@string 05CC  
                                ?_ipv4_setIPSourceAddress 0016  
                                          __CFG_SAFEN$OFF 000000  
                                           stack_init@err 0024  
                                    _ipv4_handleNewPacket 301E  
                              _memory_txFrameRequest$1083 0078  
                       __end_of_enc424j600_getPacketCount 76A2  
                               tcp_stateMachine@newHeader 00AE  
                                          arp_send@i_3240 00B1  
                                          arp_send@i_3241 00B2  
                                          arp_send@i_3242 00B3  
                            icmp_sendEchoReply@icmpHeader 0165  
                                                  ??_main 029D  
                                                  ??_rand 0024  
                                                  ??_itoa 0032  
                               __size_of_entireMemoryFull 0036  
                                                  ??_ltoa 0030  
                                          __CFG_PR1WAY$ON 000000  
                                                  ??_utoa 002F  
                                           __activetblptr 000003  
                      __end_of_ipv4_writeHeaderIntoBuffer 47CE  
                              _ipv4_writeHeaderIntoBuffer 463A  
                                          __CFG_MVECEN$ON 000000  
                         handleStackBackgroundTasks@stack 01F7  
                         handleStackBackgroundTasks@state 01FF  
                            tcp_handleNewPacket@tcpHeader 00D3  
                                        ??_arp_gratuitous 00EC  
       ethernetController_writeDestinationMACAddress@addr 0025  
       ethernetController_writeDestinationMACAddress@data 0060  
                ethernetController_pollInterruptFlags@reg 0062  
                                 __size_of_tcp_sendSYNACK 0408  
                                                  _CCP1IE 01CCA3  
                                                  _CCP1IF 01CD23  
                                        ___llmod@dividend 0016  
                                                  STR_100 FEAD  
                                                  STR_101 FE5F  
                                                  STR_110 FE70  
                                                  STR_102 FFED  
                                                  STR_111 FFFB  
                                                  STR_103 FFED  
                                                  STR_112 FFD0  
                                                  STR_120 FF98  
                                                  STR_104 FED5  
                                                  STR_121 FFB6  
                                                  STR_113 FF85  
                                                  STR_105 FDEB  
                                                  STR_130 FFD0  
                                                  STR_114 FF90  
                                                  STR_122 FFAA  
                                                  STR_106 FE15  
                                                  STR_131 FF90  
                                                  STR_115 FFBC  
                                                  STR_123 FFA4  
                                                  STR_107 FE9F  
                                                  STR_116 FFB0  
                                                  STR_124 FD4E  
                                                  STR_108 FDB9  
                                                  STR_117 FF8C  
                                                  STR_125 FE90  
                                                  STR_109 FF58  
                                                  STR_118 FF92  
                                                  STR_126 FD85  
                                                  STR_119 FF9E  
                                                  STR_127 FF75  
                                                  STR_128 FFDA  
                                                  STR_129 FFFB  
                                    __size_of_macToString 00B0  
                                                  ?_srand 0030  
                                   _arp_getEntryFromTable 7384  
                                                  _ANSELA 003A40  
                                                  _ANSELB 003A50  
                                                  _ANSELC 003A60  
                              ethernetController_getRSV@i 002D  
                                                  ?_ultoa 0023  
                                    ipv4_parseHeader@temp 0079  
                            ?_tcp_calculateHeaderChecksum 0016  
                       __size_of_ipv4_checkHeaderChecksum 0056  
                              printEthernetState@oldState 038A  
                                          __CFG_WDTCCS$SC 000000  
                                                  i2l1940 6E84  
                                                  i2l1941 6E8E  
                                                  i2l1936 6E64  
                                                  i2l1937 6E5C  
                              icmp_calculateChecksumBuf@i 0021  
                               ??_ethernetController_init 0033  
                                      __CFG_RSTOSC$EXTOSC 000000  
                               ?_ipv4_checkHeaderChecksum 0025  
                                                  i2l8972 5A98  
                      ipv4_sendFrame@failedResolveCounter 003E  
       __end_of_ethernetController_streamToTransmitBuffer 6766  
      __size_of_ethernetController_streamToTransmitBuffer 007C  
             ??_ethernetController_streamToTransmitBuffer 002E  
              ?_ethernetController_streamToTransmitBuffer 0025  
               _ethernetController_streamToTransmitBuffer 66EA  
                        ipv4_handleNewPacket@payloadField 01E0  
                                                  _TMR0IE 01CC9F  
                                                  _TMR0IF 01CD1F  
                                         _fSrcAddrChanged 003F  
                                  __end_of_ipv4_sendFrame 448E  
                                   ??_arp_handleNewPacket 013A  
                                        mac_isAllZero@mac 0016  
                          ??_ethernetController_softReset 0027  
                               ??_checkForOverlapSwitched 0028  
                              ethernetController_init@err 0033  
                                  __size_of_buttonHandler 00C4  
                                 ?_ethernet_rxGetNewFrame 01F2  
                                          __CFG_XINST$OFF 000000  
                                        __end_of_arp_init 62B0  
                                        __end_of_arp_send 3826  
                                                  ___lmul 6C30  
                                        __end_of_ipv4_cmp 70D2  
                                         ?_ipv4_isAllZero 0016  
                                               ??_ccp1Int 0001  
                                                  ___wmul 7328  
                                   ?_ipv4_handleNewPacket 00F0  
                      __end_of_handleStackBackgroundTasks 0B48  
                              _handleStackBackgroundTasks 0600  
                                          __CFG_STVREN$ON 000000  
                                               ??___awmod 0028  
                                   buttonHandler@oldState 0046  
                                               ??___lldiv 001E  
             enc424j600_writeControlRegisterUnbanked@addr 0022  
                                   buttonHandler@newState 0045  
             enc424j600_writeControlRegisterUnbanked@data 0020  
                                               ??___llmod 001E  
                                               ??___lwdiv 001A  
                                               ??___lwmod 0028  
                                       tcp_sendSYNACK@seq 00A4  
                           enc424j600_setTXLength@lowByte 0026  
                            buttonHandler@debounceCounter 02AF  
                                                  clear_0 61C4  
                                                  clear_1 61D0  
                                                  clear_2 61DC  
                                                  clear_3 61E8  
                                                  clear_4 6200  
                                         ___awmod@divisor 0026  
                              parseNumber@numberToDisplay 0008  
                                arp_parseFromRXBuffer@arp 0086  
                handleStackBackgroundTasks@lastEndAddress 02C0  
                                 __end_of_ipv4_background 463A  
                                         ___awmod@counter 0028  
  __end_of_ethernetController_writeEtherTypeFieldToBuffer 6F38  
 __size_of_ethernetController_writeEtherTypeFieldToBuffer 004C  
        ??_ethernetController_writeEtherTypeFieldToBuffer 0030  
         ?_ethernetController_writeEtherTypeFieldToBuffer 0025  
          _ethernetController_writeEtherTypeFieldToBuffer 6EEC  
                                               ??_mac_cmp 001A  
                             ??_icmp_calculateChecksumBuf 001A  
                                        ??_mac_setAllZero 0018  
                                           main@prescaler 0600  
          ethernetController_streamToTransmitBuffer@field 0025  
                                        __end_of_tcp_init 63CC  
          __end_of_enc424j600_readControlRegisterUnbanked 71F2  
         __size_of_enc424j600_readControlRegisterUnbanked 0038  
                                                  itoa@cp 0032  
                ??_enc424j600_readControlRegisterUnbanked 0022  
                 ?_enc424j600_readControlRegisterUnbanked 0020  
                  _enc424j600_readControlRegisterUnbanked 71BA  
                                      _enc424j600_initSPI 7296  
                           ?_enc424j600_setTXStartAddress 0024  
                                      _enc424j600_readSPI 6766  
                ethernetController_softReset@comFailCount 0028  
                                                  ltoa@cp 0030  
                                               ??_tmr0Int 0016  
                                       __end_ofi2___lwdiv 6E9C  
                                            __mediumconst FBBA  
                                                  tblptrh 003FF7  
                                                  tblptrl 003FF6  
                                                  tblptru 003FF8  
                                                  srand@x 0030  
           __end_of_ethernetController_clearInterruptFlag 775C  
          __size_of_ethernetController_clearInterruptFlag 000A  
                 ??_ethernetController_clearInterruptFlag 0028  
                  ?_ethernetController_clearInterruptFlag 0001  
                   _ethernetController_clearInterruptFlag 7752  
                             __end_of_ipv4_generateAutoIP 6F82  
                                     mac_setToBroadcast@i 0018  
                                                  ultoa@c 002F  
                                                  ultoa@v 002B  
                                       ?_tcp_stateMachine 00AC  
                              __size_of_ipv4_setToAllZero 0024  
                                     ?_enc424j600_initSPI 0001  
                                      ipv4_background@err 001B  
                                          arp_probe@index 012C  
                                     ?_enc424j600_readSPI 0016  
                         ethernetController_softReset@err 002D  
                                         _numberToDisplay 02B3  
                                          arp_probe@state 0043  
                                 ipAdressToString@address 0399  
                                      ??_tcp_stateMachine 0037  
      __end_of_ethernetController_updateNextPacketPointer 66EA  
     __size_of_ethernetController_updateNextPacketPointer 007E  
            ??_ethernetController_updateNextPacketPointer 0025  
             ?_ethernetController_updateNextPacketPointer 0001  
              _ethernetController_updateNextPacketPointer 666C  
                     __size_of_enc424j600_enableReception 0008  
                                __size_of_arp_setNewEntry 0154  
                       sevenSegmentUpdate@digitsToDisplay 02BB  
                                              __accesstop 0060  
                                 __end_of__initialization 6212  
                                       _printErrorMessage 776C  
                                __size_of_arp_sendRequest 00B4  
                            ??_enc424j600_readPHYRegister 0026  
                           ??_tcp_calculateHeaderChecksum 002F  
           ethernetController_getEtherTypeField@ethertype 0032  
                                         ?_ipv4_sendFrame 012C  
                                   _arp_parseFromRXBuffer 1ECC  
                          __end_of_ethernet_rxGetNewFrame 15B0  
                                        _sevenSegmentInit 759C  
                            __size_of_enc424j600_writeSPI 0072  
               ethernetController_updateLinkStatus@temp16 0063  
                                           ___rparam_used 000001  
                     icmp_sendEchoReply@icmpRequestHeader 00B9  
                                      ?_printErrorMessage 0016  
                             arp_parseFromRXBuffer@i_3165 0081  
                             arp_parseFromRXBuffer@i_3166 0082  
                             arp_parseFromRXBuffer@i_3167 0083  
              ethernetController_pollInterruptFlags@flags 0060  
               handleStackBackgroundTasks@remainingLength 01FE  
                                 enc424j600_writeSPI@data 0016  
                                     UART_setFormat@color 006F  
                                          __pcstackCOMRAM 0001  
                             icmp_sendEchoReply@headerBuf 0140  
                                 ipAdressToString@pointer 006B  
 enc424j600_updateReceiveStatusVector@receiveStatusVector 0022  
                                            __pidataBANK2 775C  
                                            __pidataBANK3 73B0  
                                       ipv4_parseHeader@i 0077  
                                               ?_UARTInit 0001  
                                    tcp_handleNewPacket@i 00D2  
                                    ??_enc424j600_initSPI 0016  
                                    ??_enc424j600_readSPI 0018  
                                          ivt0x8_undefint 00AC  
                                     ??_printErrorMessage 0019  
                         enc424j600_setRXTailPointer@addr 0024  
                                        _UART_resetFormat 76EE  
                         __end_of_ethernetController_init 5EBA  
                                           __end_of_srand 76B6  
                         ??_ethernetController_dropPacket 002A  
                                           __end_of_ultoa 4E62  
                             arp_parseFromRXBuffer@offset 0084  
                             icmp_sendEchoReply@ipPayload 00C1  
     ethernetController_getSourceMACAddress@sourceAddress 002F  
                           ?_enc424j600_getInterruptFlags 0024  
                                     arp_send@destination 00AA  
                                 _ethernet_txFrameRequest 5790  
                               __size_of_ipv4_parseHeader 02D0  
                                    __size_of_intToString 0038  
                         __end_of_checkForOverlapSwitched 60CE  
                                      __size_of_getMillis 001A  
                                           _buttonHandler 5B12  
                          __size_of_memory_txFrameRequest 0542  
                             __end_of_ipv4_SrcAddrChanged 770E  
                           __end_of_memory_txFrameRequest 108A  
                                 arp_background@fAnnounce 0041  
                 handleStackBackgroundTasks@currentPacket 0348  
                                      __size_of_arp_probe 02B0  
                                  ?_arp_getEntryFromTable 0016  
                                  arp_parseFromRXBuffer@i 0080  
                    __size_of_enc424j600_setRXTailPointer 0028  
                                         __CFG_IVT1WAY$ON 000000  
                                    _icmp_handleNewPacket 5336  
                                                 ??_srand 0032  
                                      __size_of_ipv4_init 001E  
                                                 ??_ultoa 002B  
                               __end_of_printErrorMessage 776E  
                        enc424j600_getPacketCount@lowByte 0024  
                                              __pbssBANK1 01FB  
                                              __pbssBANK2 029F  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                              __pbssBANK5 0500  
           handleStackBackgroundTasks@numberOfPacketsSent 01FD  
                           icmp_sendEchoReply@icmpMessage 0100  
                                       ?_icmp_parseHeader 002A  
                                      _icmp_sendEchoReply 3A7C  
                               _icmp_calculateChecksumBuf 4E62  
                             __end_of_memory_txFrameClear 757E  
                                      ??_icmp_parseHeader 0060  
                          ?_enc424j600_clearInterruptFlag 0001  
                                       _etherTypeToString 700E  
                                                 IVTBASEH 003FD6  
                                                 IVTBASEL 003FD5  
                                                 IVTBASEU 003FD7  
                                __size_of_tcp_parseHeader 0600  
                                     ?_icmp_sendEchoReply 00A2  
                                      ?_etherTypeToString 0016  
                                  ??_ipv4_handleNewPacket 00F2  
                         ??_ethernetController_sendPacket 0031  
                                                 ?___lmul 0016  
                                                 ?___wmul 0024  
                                              ??_UARTInit 0016  
                                          main@connection 0615  
                                         __CFG_PPS1WAY$ON 000000  
                             __end_of_tcp_handleNewPacket 3A7C  
                                    __size_of_parseNumber 0084  
                                          ___lmul@product 001E  
                    __size_of_tcp_calculateHeaderChecksum 04AC  
                                     ??_etherTypeToString 0018  
          ethernetController_writeDestinationMACAddress@i 0068  
                                        ?_ipv4_background 0016  
                                        _entireMemoryFull 722A  
                                   ipv4_parseHeader@field 0060  
                                     udp_sendPacket@start 003D  
                                          ?_buttonHandler 0001  
                              etherTypeToString@ethertype 0016  
                                     __CFG_PWRTS$PWRT_OFF 000000  
                                  ipv4_SrcAddrChanged@err 0016  
                 enc424j600_updateReceiveStatusVector@rsv 0016  
                        icmp_writeHeaderIntoBuffer@header 0018  
                                    ??_icmp_sendEchoReply 00CA  
                                 __size_of_UART_setFormat 00AC  
                       enc424j600_readPHYRegister@lowByte 0033  
                                __end_of_ipAdressToString 5206  
                                                 _SPI1RXB 003D10  
                                                 _SPI1TXB 003D11  
                                          _tcp_sendSYNACK 2310  
                enc424j600_setERXDATAReadPointer@highByte 0024  
                                       ipv4_sendFrame@err 00F0  
  ethernetController_writeEtherTypeFieldToBuffer@highByte 0031  
                                   ?_icmp_handleNewPacket 00CE  
                                               ?_arp_init 0001  
                                               ?_arp_send 008A  
                            __size_of_ipv4_txFrameRequest 0158  
                          ??_enc424j600_setTXStartAddress 0026  
                                   icmp_handleNewPacket@i 0283  
                                               ?_ipv4_cmp 0016  
                                 __size_of_udp_sendPacket 01EE  
                                      _printEthernetState 6CEA  
                               __end_of_etherTypeToString 7052  
                                  ?_arp_parseFromRXBuffer 0060  
                  enc424j600_setRXBufferStartAddress@addr 0024  
           __end_of_ethernetController_streamFromRXBuffer 6CEA  
          __size_of_ethernetController_streamFromRXBuffer 005C  
                 ??_ethernetController_streamFromRXBuffer 0027  
                  ?_ethernetController_streamFromRXBuffer 0025  
                   _ethernetController_streamFromRXBuffer 6C8E  
                          sevenSegmentUpdate@digitPointer 0044  
                                            intToString@b 0036  
                                       ?_UARTTransmitText 006D  
                                       __end_of_getMillis 7644  
                                                 __Hparam 0000  
                      __end_of_enc424j600_enableReception 776C  
                                         udp_sendPacket@i 0162  
                              _enc424j600_enableReception 7764  
ethernetController_updateNextPacketPointer@nextPktPointer 002B  
                                               ?_tcp_init 0001  
                                                 __Lparam 0000  
                                         ipv4_isAllZero@i 0018  
                                     ?_printEthernetState 006F  
                                       ??_arp_setNewEntry 002B  
               __end_of_enc424j600_enableAutoMACInsertion 74F2  
              __size_of_enc424j600_enableAutoMACInsertion 0024  
                     ??_enc424j600_enableAutoMACInsertion 0024  
                      ?_enc424j600_enableAutoMACInsertion 0001  
                       _enc424j600_enableAutoMACInsertion 74CE  
                                      ??_UARTTransmitText 0037  
                                checkForOverlapSwitched@a 0016  
                                checkForOverlapSwitched@b 001F  
                                       ??_arp_sendRequest 0037  
                                       __end_of_arp_probe 358C  
                                      buttonHandler@state 0001  
                               enc424j600_setTXLength@len 0024  
                                                 _ccp1Int 76DC  
                                   __end_of_mac_isAllZero 72FA  
                                         __size_of___lmul 005E  
                                                 ___awmod 6856  
                          enc424j600_setTXLength@highByte 0027  
                                                 ___lldiv 63CC  
                                         __size_of___wmul 002E  
                                                 ___llmod 69AC  
                                                 ___lwdiv 6D9A  
                                                 ___lwmod 6FC8  
                    enc424j600_setGPDATAWritePointer@addr 0020  
                               ??_ethernet_txFrameRequest 0036  
                                       __end_of_ipv4_init 759C  
                                     sevenSegmentUpdate@i 0015  
                                                 __pcinit 617A  
                             __size_of_sevenSegmentUpdate 00CE  
                                     parseNumber@hundreds 000E  
                              icmp_parseHeader@icmpHeader 0033  
                                                 __ramtop 2000  
                                                 __ptext0 1A5C  
                                                 __ptext1 40F2  
                                                 __ptext2 4F9C  
                                                 __ptext3 771E  
                                                 __ptext4 6340  
                                                 __ptext5 757E  
                                                 __ptext6 76A2  
                                                 __ptext7 759C  
                                                 __ptext8 6CEA  
                                                 __ptext9 776C  
                                                 _mac_cmp 7052  
                            ??_handleStackBackgroundTasks 01F9  
                                         __CFG_WRTAPP$OFF 000000  
                                               _T1CONbits 003FB2  
                  enc424j600_setGPDATAWritePointer@opcode 0022  
                      enc424j600_setRXTailPointer@lowByte 0026  
              __end_of_enc424j600_setRXBufferStartAddress 7456  
             __size_of_enc424j600_setRXBufferStartAddress 0028  
                    ??_enc424j600_setRXBufferStartAddress 0026  
                     ?_enc424j600_setRXBufferStartAddress 0024  
                      _enc424j600_setRXBufferStartAddress 742E  
                                           ?_UART_special 0016  
                                  __end_of_tcp_sendSYNACK 2718  
                   __end_of_ethernetController_dropPacket 71BA  
                  __size_of_ethernetController_dropPacket 0038  
                           _ethernetController_dropPacket 7182  
                             ?_ipv4_writeHeaderIntoBuffer 0016  
                                        ___awmod@dividend 0024  
                                                 _tmr0Int 73DC  
                                    ??_printEthernetState 0037  
                                         __CFG_WRTSAF$OFF 000000  
           __end_of_ethernetController_pollInterruptFlags 492E  
          __size_of_ethernetController_pollInterruptFlags 0160  
                 ??_ethernetController_pollInterruptFlags 0030  
                  ?_ethernetController_pollInterruptFlags 002E  
                   _ethernetController_pollInterruptFlags 47CE  
                          ??_enc424j600_getInterruptFlags 0026  
                        __size_of_ipv4_getIPSourceAddress 001A  
                 enc424j600_setGPDATAWritePointer@lowByte 0023  
                        __size_of_ipv4_setIPSourceAddress 001E  
                                              ??_arp_init 0019  
                                                 main@err 0606  
                                              ??_arp_send 0037  
                                   __end_of_arp_sendReply 5336  
                                                 main@udp 0609  
                                    end_of_initialization 6212  
                              __size_of_printErrorMessage 0002  
                                              ??_ipv4_cmp 001A  
                              __end_of_mac_setToBroadcast 755E  
                                               _PCON0bits 003FF0  
                              ?_ethernetController_getMTU 0016  
                              ?_ethernetController_getRSV 0027  
                                        arp_gratuitous@ip 00E7  
                                                 itoa@buf 0060  
                                                 itoa@val 0062  
                                icmp_sendEchoReply@i_4270 0163  
                                               i2u1024_40 5B72  
                                               i2u1025_40 5B74  
                                               i2u1033_40 5ACC  
                                               i2u1034_44 5ADE  
                                               i2u1034_45 5ADA  
                                               i2u1029_44 5A56  
                                               i2u1029_45 5A52  
                                                 ltoa@buf 0060  
                                        ??_ipv4_isAllZero 0018  
                         ipv4_calculateHeaderChecksum@sum 0021  
                                                 ltoa@val 0062  
                                         mac_setAllZero@i 0018  
             ethernetController_streamFromRXBuffer@opcode 0028  
                                              _tcp_listen 4F9C  
                                         ___lldiv@divisor 001A  
                                     tcp_parseHeader@temp 0035  
                                         ___lldiv@counter 0022  
                                 __size_of_arp_background 014C  
                                              ??_tcp_init 0016  
                                      entireMemoryEmpty@i 0016  
                                __size_of_checkForOverlap 0110  
                                               _OSCENbits 0039DD  
                                                 postdec1 003FE5  
                                                 postdec2 003FDD  
                                         macToString@addr 0066  
                                                 postinc0 003FEE  
                                                 postinc1 003FE6  
                                                 postinc2 003FDE  
                                       arp_setNewEntry@ip 0023  
                             ?_handleStackBackgroundTasks 01F7  
                                       _arp_checkForEntry 5C92  
                                                 utoa@buf 0029  
                                                 utoa@val 002B  
                   memory_txFrameRequest@fNoOverlapMarker 007A  
                    enc424j600_readPHYRegister@PHYaddress 002D  
                                   __CFG_WDTCPS$WDTCPS_31 000000  
                                       ??_tcp_parseHeader 0060  
                                         ??_buttonHandler 0003  
                                      ?_arp_checkForEntry 001D  
                   __end_of_ethernetController_sendPacket 7384  
                  __size_of_ethernetController_sendPacket 002E  
                           _ethernetController_sendPacket 7356  
                                       arp_sendReply@myIP 0114  
                                               _PORTBbits 003FCB  
                                     ipv4_background@link 0001  
                                        _ipv4_parseHeader 2D4E  
                             ?_enc424j600_writeSingleByte 0001  
                                     ipv4_sendFrame@index 00EF  
                              ?_enc424j600_getPacketCount 0001  
                                ??_enc424j600_setTXLength 0026  
                                          ??_UART_special 0018  
                       sevenSegmentUpdate@numberToDisplay 000F  
                                __end_of_sevenSegmentInit 75BA  
                                     _enc424j600_writeSPI 68CA  
                 __end_of_ipv4_streamToTransmissionBuffer 75F6  
                __size_of_ipv4_streamToTransmissionBuffer 001E  
                       ??_ipv4_streamToTransmissionBuffer 0034  
                        ?_ipv4_streamToTransmissionBuffer 0060  
                         _ipv4_streamToTransmissionBuffer 75D8  
                                              _stack_init 771E  
                                         ?_tcp_sendSYNACK 00A2  
                              ipv4_handleNewPacket@header 01C9  
                                           ??_macToString 0034  
                  ethernetController_softReset@dataToSend 0029  
                                               _TRISBbits 003FC3  
                                     ??_arp_checkForEntry 0023  
                                              _updateTime 770E  
                           icmp_handleNewPacket@ipPayload 00E5  
                                  ??_icmp_handleNewPacket 00EE  
         __end_of_ethernetController_getNextPacketPointer 76C8  
        __size_of_ethernetController_getNextPacketPointer 0012  
               ??_ethernetController_getNextPacketPointer 001A  
                ?_ethernetController_getNextPacketPointer 0018  
                 _ethernetController_getNextPacketPointer 76B6  
                                 icmp_handleNewPacket@foo 0200  
                                 icmp_handleNewPacket@err 0280  
                                              arp_init@ip 001F  
                             __end_of_arp_handleNewPacket 5972  
                                        ??_ipv4_sendFrame 00E7  
                                        __CFG_FEXTOSC$ECH 000000  
                                       i2___lwdiv@divisor 0003  
                         __end_of_ethernet_txFrameRequest 588C  
                        ethernetController_getRSV@address 0027  
                                               i2___lwdiv 6E46  
                                       i2___lwdiv@counter 0007  
                                __end_of_UART_resetFormat 76FE  
                              __size_of_etherTypeToString 0044  
                                     UARTTransmitText@str 006D  
                                             _CCP1CONbits 003F7E  
                    __end_of_ipv4_calculateHeaderChecksum 2A52  
                   __size_of_ipv4_calculateHeaderChecksum 033A  
                            _ipv4_calculateHeaderChecksum 2718  
                    enc424j600_setTXStartAddress@highByte 0027  
                                 tcp_sendSYNACK@headerBuf 0120  
                                    ?_enc424j600_writeSPI 0016  
                               icmp_sendEchoReply@ipReply 016D  
                                       intToString@number 03C1  
                          tcp_calculateHeaderChecksum@sum 0071  
                                   arp_probe@probeCounter 01FC  
                               __end_of_arp_checkForEntry 5D4E  
                              arp_getEntryFromTable@index 001D  
                               __size_of_tcp_stateMachine 00B8  
                      __size_of_icmp_calculateChecksumBuf 013A  
                              arp_setNewEntry@oldestIndex 0033  
                                      arp_checkForEntry@i 002B  
                                      ipv4_parseHeader@ip 007A  
                                          __end_of___lmul 6C8E  
        ethernetController_updateNextPacketPointer@opcode 002D  
                                     icmp_sendEchoReply@i 0162  
                                          __end_of___wmul 7356  
                                        parseNumber@digit 000A  
                            ?_enc424j600_setRXTailPointer 0024  
                                       __size_of_UARTInit 0018  
                                         tcp_sendSYNACK@i 016E  
                  enc424j600_setERXDATAReadPointer@opcode 0022  
          __end_ofethernetController_getDeviceName@F18978 FBC6  
                  ethernetController_getDeviceName@F18978 FBBB  
                      ipv4_checkHeaderChecksum@testHeader 0060  
                                  arp_sendReply@senderMAC 0100  
                                  arp_sendReply@targetMAC 0106  
                                 ??_arp_getEntryFromTable 001D  
             __end_of_ethernetController_updateLinkStatus 6340  
            __size_of_ethernetController_updateLinkStatus 0090  
                   ??_ethernetController_updateLinkStatus 0036  
                    ?_ethernetController_updateLinkStatus 0060  
                     _ethernetController_updateLinkStatus 62B0  
                                          _UART_setFormat 60CE  
                                     start_initialization 617A  
                                  enc424j600_readSPI@data 0016  
                                          intToString@val 0032  
                          ipv4_checkHeaderChecksum@header 0025  
                                ?_ethernetController_init 0030  
                                _ipv4_checkHeaderChecksum 6DF0  
                                 tcp_sendSYNACK@tcpHeader 01B2  
                         ipv4_handleNewPacket@headerField 01E9  
                                              ?i2___lwdiv 0001  
                                              ivt0x8_base 0008  
                icmp_calculateChecksumBuf@ipPayloadLength 0018  
                           ipv4_writeHeaderIntoBuffer@ptr 002D  
                                          _udp_sendPacket 40F2  
                                ?_checkForOverlapSwitched 0016  
                                     __end_of_macToString 601E  
                                   ??_enc424j600_writeSPI 0018  
                                __end_of_entireMemoryFull 7260  
                            __size_of_ipv4_generateAutoIP 004A  
                                       udp_sendPacket@foo 0160  
   __end_of_ethernetController_writeDestinationMACAddress 64E0  
  __size_of_ethernetController_writeDestinationMACAddress 008A  
         ??_ethernetController_writeDestinationMACAddress 0034  
          ?_ethernetController_writeDestinationMACAddress 0025  
           _ethernetController_writeDestinationMACAddress 6456  
                                       udp_sendPacket@dst 00AA  
                                         ___llmod@divisor 001A  
                     ethernetController_checkDeviceId@err 0028  
                                 __size_of_arp_gratuitous 0228  
                                     arp_background@state 0040  
                                         ___llmod@counter 001E  
                                             ?_tcp_listen 006F  
                           ?_ipv4_calculateHeaderChecksum 0016  
                           ethernetController_getRSV@temp 02C6  
                                        __CFG_LPBOREN$OFF 000000  
                     __end_of_enc424j600_setRXTailPointer 742E  
                             _enc424j600_setRXTailPointer 7406  
                                    printErrorMessage@err 0016  
                                 udp_sendPacket@headerBuf 0100  
                                                ??___lmul 001E  
                                          _occupiedMemory 0300  
                                                ??___wmul 0028  
                                     arp_gratuitous@index 00F4  
                                     _ipv4_txFrameRequest 492E  
                             arp_background@ipPreliminary 02A7  
                  ethernetController_getDeviceName@string 0018  
                             __size_of_enc424j600_initSPI 0036  
                                             __pdataBANK2 02DC  
                                     arp_gratuitous@state 0042  
                                             __pdataBANK3 03CB  
                            ??_icmp_writeHeaderIntoBuffer 0020  
                             __size_of_enc424j600_readSPI 007A  
                                           ??_intToString 0037  
                               __size_of_icmp_parseHeader 01FE  
                            ??_enc424j600_enableReception 0021  
                       __end_of_icmp_calculateChecksumBuf 4F9C  
                                        checkForOverlap@a 0060  
                                        checkForOverlap@b 0069  
                        enc424j600_readSPI@timeoutCounter 001C  
                         ??_enc424j600_clearInterruptFlag 0024  
                                       ??_checkForOverlap 0028  
                                  __end_of_UART_setFormat 617A  
                           ??_enc424j600_setRXTailPointer 0026  
                                             ?_stack_init 0001  
                         __size_of_enc424j600_setTXLength 0028  
                                             __pbssCOMRAM 0037  
                        enc424j600_writeSingleByte@opcode 0020  
                                 _ipv4_getIPSourceAddress 75F6  
                                 _ipv4_setIPSourceAddress 75BA  
                ethernetController_updateLinkStatus@state 0060  
                              icmp_sendEchoReply@checksum 0160  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                           __pcstackBANK2 0200  
                                           __pcstackBANK6 0600  
                                             ?_updateTime 0001  
                              icmp_sendEchoReply@ipHeader 00A2  
                                       ?_ipAdressToString 0066  
                                   _memory_txFrameRequest 0B48  
                                  __end_of_udp_sendPacket 42E0  
           __end_of_ethernetController_newPacketAvailable 76DA  
          __size_of_ethernetController_newPacketAvailable 0012  
                 ??_ethernetController_newPacketAvailable 0025  
                  ?_ethernetController_newPacketAvailable 0001  
                   _ethernetController_newPacketAvailable 76C8  
                              arp_parseFromRXBuffer@frame 0060  
                                 ??_arp_parseFromRXBuffer 002A  
                                    ?_ipv4_txFrameRequest 008A  
                ethernetController_softReset@receivedData 002B  
                     __end_of_tcp_calculateHeaderChecksum 1A5C  
                             _tcp_calculateHeaderChecksum 15B0  
                                      ??_ipAdressToString 0034  
                                         _arp_setNewEntry 4A86  
                            __size_of_ipv4_SrcAddrChanged 0010  
                        enc424j600_getInterruptFlags@high 002D  
                                         _arp_sendRequest 5EBA  
                                 __size_of_mac_setAllZero 0024  
                                       __size_of_arp_init 0098  
                                       __size_of_arp_send 029A  
                                       __size_of_ipv4_cmp 0040  
                               ipv4_txFrameRequest@packet 008A  
                     __size_of_icmp_writeHeaderIntoBuffer 00BC  
                              buttonHandler@debounceValue 0007  
                                    __end_of_UART_special 7674  
                                        arp_send@ethFrame 00B4  
                                          _arp_background 4BDA  
                     __size_of_enc424j600_writeSingleByte 0018  
                          icmp_calculateChecksumBuf@carry 001E  
                                           ??_parseNumber 000B  
                                               _main$2547 0604  
                                        ___lwdiv@dividend 0016  
                                      _sevenSegCharacters 03E9  
              ethernetController_getEtherTypeField@opcode 0034  
                              __size_of_arp_checkForEntry 00BC  
                            __size_of_memory_txFrameClear 0020  
                                           __pmediumconst FBBA  
                                                ?_ccp1Int 0001  
                                               _getMillis 762A  
                                               __ptext100 5790  
                                               __ptext101 0B48  
                                               __ptext110 70D2  
                                               __ptext102 722A  
                                               __ptext111 7356  
                                               __ptext103 7260  
                                               __ptext120 6766  
                                               __ptext112 755E  
                                               __ptext104 5574  
                                               __ptext121 7296  
                                               __ptext113 7644  
                                               __ptext105 601E  
                                               __ptext130 73DC  
                                               __ptext122 5C92  
                                               __ptext114 7456  
                                               __ptext106 7328  
                                               __ptext131 5A44  
                                               __ptext123 7092  
                                               __ptext115 747E  
                                               __ptext107 6EEC  
                                               __ptext132 6568  
                                               __ptext124 762A  
                                               __ptext116 71F2  
                                               __ptext108 6456  
                                               __ptext133 6E46  
                                               __ptext125 765C  
                                               __ptext117 693C  
                                               __ptext109 66EA  
                                               __ptext134 5B12  
                                               __ptext126 74A6  
                                               __ptext118 710E  
                                               __ptext127 7674  
                                               __ptext119 68CA  
                                               __ptext128 76DC  
                                               __ptext129 770E  
                                                ?___awmod 0024  
                                       __size_of_tcp_init 008C  
                                                ?___lldiv 0016  
                                                ?___llmod 0016  
                           __size_of_ipv4_handleNewPacket 02BE  
                                  arp_checkForEntry@index 0021  
                                                ?___lwdiv 0016  
                                               _arpStatus 0037  
                                                ?___lwmod 0024  
     ethernetController_writeEtherTypeFieldToBuffer@field 0027  
                                               _arp_table 047C  
                               tcp_sendSYNACK@ipHeaderBuf 0100  
                                               _arp_probe 32DC  
                                     ipv4_setToAllZero@ip 0016  
                                                ?_mac_cmp 0016  
                                         ?_UART_setFormat 0001  
                                  __CFG_BBSIZE$BBSIZE_512 000000  
                               __size_of_UARTTransmitText 006E  
                                               _ipv4_init 757E  
              ethernetController_getSourceMACAddress@temp 0035  
                            __size_of_tcp_handleNewPacket 0256  
                    enc424j600_setERXDATAReadPointer@addr 0020  
                                  arp_background@errProbe 0143  
                 enc424j600_setERXDATAReadPointer@lowByte 0023  
                                  ipv4_parseHeader@i_3800 0078  
                                      ipAdressToString@ip 0066  
                                                ?_tmr0Int 0001  
                                     __end_of_intToString 7182  
                                     __size_of_tcp_listen 0138  
                             __size_of_icmp_sendEchoReply 0250  
                                             _macToString 5F6E  
                                    udp_sendPacket@header 00A2  
                                   ??_ipv4_txFrameRequest 008C  
                    tcp_calculateHeaderChecksum@tcpHeader 0016  
                                        ___lwdiv@quotient 001B  
                                         ?_udp_sendPacket 00A2  
                                   ipv4_generateAutoIP@ip 002E  
                                __size_of_ipv4_background 01AC  
                                       _entireMemoryEmpty 7260  
                                ??_ethernet_rxGetNewFrame 028D  
                                             ??i2___lwdiv 0005  
                                          __size_of_srand 0014  
                                          __size_of_ultoa 013C  
                      enc424j600_readPHYRegister@highByte 0034  
                        tcp_calculateHeaderChecksum@carry 0060  
                                      ?_entireMemoryEmpty 0001  
                             ?_enc424j600_readPHYRegister 0024  
                     ipv4_streamToTransmissionBuffer@data 0034  
                                arp_setNewEntry@timestamp 0027  
                             ??_ethernetController_getMTU 0018  
                             ??_ethernetController_getRSV 002C  
                           arp_gratuitous@announceCounter 01FB  
                                  __end_of_arp_background 4D26  
                                          ___wmul@product 0028  
                                tcp_parseHeader@ipPayload 002A  
                             ethernet_rxGetNewFrame@frame 01F2  
                                __end_of_ipv4_parseHeader 301E  
                                  _enc424j600_setTXLength 747E  
                            icmp_calculateChecksumBuf@buf 0016  
                            icmp_calculateChecksumBuf@foo 001F  
                                         _tcp_parseHeader 0000  
                            icmp_calculateChecksumBuf@sum 0023  
                                                _IPR3bits 003983  
                                                _PIE3bits 003993  
                       enc424j600_writeSPI@timeoutCounter 001C  
                                                _PIE4bits 003994  
                                     __CFG_BORV$VBOR_2P45 000000  
                                            _SPI1CON0bits 003D14  
                                            _SPI1CON1bits 003D15  
                                     __size_of_stack_init 000E  
                                     ??_entireMemoryEmpty 0016  
                                       entireMemoryFull@i 0016  
                                                i2u927_40 6E68  
                                        _tcp_stateMachine 5D4E  
                                        arp_setNewEntry@i 0034  
                                     __size_of_updateTime 0010  
                                      _mac_setToBroadcast 753A  
                              __end_of_sevenSegmentUpdate 5B12  
                                              ?_getMillis 0016  
                                                _UARTInit 7674  
                          ??_ipv4_calculateHeaderChecksum 0018  
              __end_of_ethernetController_disableEthernet 7770  
             __size_of_ethernetController_disableEthernet 0002  
                    ??_ethernetController_disableEthernet 0016  
                     ?_ethernetController_disableEthernet 0001  
                      _ethernetController_disableEthernet 776E  
                            icmp_handleNewPacket@ipHeader 00CE  
                    __end_of_enc424j600_setTXStartAddress 747E  
                   __size_of_enc424j600_setTXStartAddress 0028  
                            _enc424j600_setTXStartAddress 7456  
                                  arp_handleNewPacket@arp 013C  
                                        ??_tcp_sendSYNACK 00A8  
                                     __end_of_parseNumber 65EC  
                __end_of_enc424j600_setERXDATAReadPointer 714A  
               __size_of_enc424j600_setERXDATAReadPointer 003C  
                      ??_enc424j600_setERXDATAReadPointer 0022  
                       ?_enc424j600_setERXDATAReadPointer 0020  
                        _enc424j600_setERXDATAReadPointer 710E  
                                              ?_arp_probe 00E7  
                                               arp_init@i 0023  
                               ??_ipv4_getIPSourceAddress 001A  
                                       ___wmul@multiplier 0024  
                               ??_ipv4_setIPSourceAddress 001A  
                                     ?_mac_setToBroadcast 0016  
                                               arp_send@i 00B0  
                             ??_enc424j600_getPacketCount 0024  
                                              ?_ipv4_init 0001  
                                 arp_gratuitous@timeStart 02AB  
   ethernetController_updateNextPacketPointer@newPointerH 002F  
   ethernetController_updateNextPacketPointer@newPointerL 002E  
                                               main@ipDst 0611  
                                     _tcp_sendSYNACK$4842 0160  
                                     _tcp_sendSYNACK$4843 0162  
                                     _tcp_sendSYNACK$4844 0164  
                                     _tcp_sendSYNACK$4845 0166  
                                     _tcp_sendSYNACK$4846 0168  
                                     _tcp_sendSYNACK$4847 016A  
                                     _tcp_sendSYNACK$4848 016C  
                                       ?_sevenSegmentInit 0001  
                                 __end_of_arp_setNewEntry 4BDA  
                             tcp_handleNewPacket@ipHeader 00B0  
                                 __end_of_arp_sendRequest 5F6E  
                               __end_of_entireMemoryEmpty 7296  
                                  ?_memory_txFrameRequest 002A  
                                            _tcpListeners 0500  
                                  tcp_sendSYNACK@ipPacket 0170  
                    ethernetController_checkDeviceId@data 0027  
                             __size_of_printEthernetState 0058  
                   __end_of_enc424j600_clearInterruptFlag 666C  
                  __size_of_enc424j600_clearInterruptFlag 0080  
                           _enc424j600_clearInterruptFlag 65EC  
                                      ??_sevenSegmentInit 0016  
                     enc424j600_setTXStartAddress@lowByte 0026  
                                               ipv4_cmp@a 0016  
                                               ipv4_cmp@b 0018  
                                               ipv4_cmp@i 001C  
                                    arp_probe@waitingTime 0135  
                                             _INTCON0bits 003FD2  
                                       ___lmul@multiplier 0016  
                                               copy_data0 618E  
                                               copy_data1 61B0  
                                         parseNumber@ones 000C  
                                         parseNumber@tens 000D  
                                  __size_of_mac_isAllZero 002E  
                                   arp_sendReply@senderIP 010C  
                                   arp_sendReply@targetIP 0110  
                                      macToString@address 03AD  
                                       ?_UART_resetFormat 0001  
                                    ??_mac_setToBroadcast 0018  
                                          _arp_gratuitous 3CCC  
                                         ?_arp_background 013C  
                                      ??_UART_resetFormat 0037  
                                         _icmpTxtMessages 03CB  
                __end_of_ethernetController_checkDeviceId 6EEC  
               __size_of_ethernetController_checkDeviceId 0050  
                      ??_ethernetController_checkDeviceId 0027  
                       ?_ethernetController_checkDeviceId 0024  
                        _ethernetController_checkDeviceId 6E9C  
                                      arp_background@link 013F  
                                                __Hrparam 0000  
                                        ipv4_isAllZero@ip 0016  
                        enc424j600_setTXStartAddress@addr 0024  
                                ?_ethernet_txFrameRequest 0034  
                                                __Lrparam 0000  
                                        UART_special@code 0018  
                    __end_of_enc424j600_getInterruptFlags 6FC8  
                   __size_of_enc424j600_getInterruptFlags 0046  
                            _enc424j600_getInterruptFlags 6F82  
                                      __CFG_BOREN$SBORDIS 000000  
                        ipv4_writeHeaderIntoBuffer@header 0016  
                                      arp_gratuitous@link 00EB  
                      __end_of_icmp_writeHeaderIntoBuffer 5C92  
                              _icmp_writeHeaderIntoBuffer 5BD6  
                                  udp_sendPacket@ipPacket 0164  
                      __end_of_enc424j600_writeSingleByte 765C  
                              _enc424j600_writeSingleByte 7644  
                                        _icmp_parseHeader 3EF4  
                                        __size_of_ccp1Int 0012  
                                        __size_of___awmod 0074  
                                  __size_of_arp_sendReply 0130  
                                        __size_of___lldiv 008A  
                                        __size_of___llmod 006E  
                                             _intToString 714A  
                       handleStackBackgroundTasks@errIPv4 029A  
                                        __size_of___lwdiv 0056  
                                        __size_of___lwmod 0046  
                 ethernetController_updateLinkStatus@temp 0062  
                              ??_ipv4_checkHeaderChecksum 0027  
                               _ethernetController_getMTU 7748  
                               _ethernetController_getRSV 67E0  
                 __end_of_ethernetController_setLEDConfig 6568  
                __size_of_ethernetController_setLEDConfig 0088  
                       ??_ethernetController_setLEDConfig 0025  
                        ?_ethernetController_setLEDConfig 0024  
                         _ethernetController_setLEDConfig 64E0  
            ethernetController_getEtherTypeField@highByte 0036  
                                     _ipv4_generateAutoIP 6F38  
                                              _ANSELBbits 003A50  
                                   __end_of_buttonHandler 5BD6  
                         enc424j600_getInterruptFlags@low 002C  
                                        __size_of_mac_cmp 0040  
       ethernetController_streamFromRXBuffer@startAddress 0025  
                                             _buttonState 02DB  
                                              _T0CON0bits 003FB8  
                     enc424j600_setRXTailPointer@highByte 0027  
                                              _T0CON1bits 003FB9  
                                arp_sendRequest@senderMAC 0100  
                                  memory_txFrameRequest@i 007B  
                          __size_of_arp_getEntryFromTable 002C  
                                arp_sendRequest@targetMAC 0106  
                                                __pivt0x8 0008  
                                         ___lwdiv@divisor 0018  
                           __end_of_arp_getEntryFromTable 73B0  
                                        __size_of_tmr0Int 002A  
                                         ___lwdiv@counter 001A  
                                       mac_setAllZero@mac 0016  
                                     _ipPreliminarySource 02CC  
                                                __ptext10 0600  
                                                __ptext11 75BA  
                                                __ptext20 6D42  
                                                __ptext12 42E0  
                                                __ptext21 5972  
                                                __ptext13 7384  
                                                __ptext30 4D26  
                                                __ptext22 6D9A  
                                                __ptext14 6F38  
                                                __ptext31 69AC  
                                                __ptext23 301E  
                                                __ptext15 6856  
                                                __ptext40 75D8  
                                                __ptext32 63CC  
                                                __ptext24 3826  
                                                __ptext16 448E  
                                                __ptext41 2718  
                                                __ptext33 0000  
                                                __ptext25 5D4E  
                                                __ptext17 50D4  
                                                __ptext50 588C  
                                                __ptext42 5BD6  
                                                __ptext34 2D4E  
                                                __ptext26 2310  
                                                __ptext18 108A  
                                                __ptext51 7182  
                                                __ptext43 4E62  
                                                __ptext35 6DF0  
                                                __ptext27 15B0  
                                                __ptext19 5F6E  
                                                __ptext60 72FA  
                                                __ptext52 76B6  
                                                __ptext44 3EF4  
                                                __ptext36 5336  
                                                __ptext28 714A  
                                                __ptext61 6C8E  
                                                __ptext53 772C  
                                                __ptext45 666C  
                                                __ptext37 3A7C  
                                                __ptext29 6AF6  
                                                __ptext70 76C8  
                                                __ptext62 60CE  
                                                __ptext54 4A86  
                                                __ptext46 67E0  
                                                __ptext38 463A  
                                                __ptext71 768C  
                                                __ptext63 76EE  
                                                __ptext55 5206  
                                                __ptext47 2A52  
                                                __ptext39 492E  
                                                __ptext80 7748  
                                                __ptext72 5E06  
                                                __ptext64 6A88  
                                                __ptext56 75F6  
                                                __ptext48 6A1A  
                                                __ptext81 776E  
                                                __ptext73 5684  
                                                __ptext65 62B0  
                                                __ptext57 1ECC  
                                                __ptext49 700E  
                                                __ptext90 6C30  
                                                __ptext82 7752  
                                                __ptext74 6E9C  
                                                __ptext66 5460  
                                                __ptext58 72CC  
                                                __ptext91 74F2  
                                                __ptext83 65EC  
                                                __ptext75 7406  
                                                __ptext67 64E0  
                                                __ptext59 7052  
                                                __ptext92 6FC8  
                                                __ptext84 6218  
                                                __ptext76 742E  
                                                __ptext68 47CE  
                                                __ptext93 3CCC  
                                                __ptext85 4BDA  
                                                __ptext77 773A  
                                                __ptext69 6F82  
                                                __ptext94 5EBA  
                                                __ptext86 7610  
                                                __ptext78 7764  
                                                __ptext95 7516  
                                                __ptext87 76FE  
                                                __ptext79 74CE  
                                                __ptext96 6B62  
                                                __ptext88 32DC  
                                                __ptext97 71BA  
                                                __ptext89 6BCC  
                                                __ptext98 358C  
                                                __ptext99 753A  
                                   tcp_parseHeader@header 0033  
                   enc424j600_enableAutoMACInsertion@temp 0024  
                                                _arp_init 6218  
                                                _arp_send 358C  
                                              _U1CON0bits 003DF2  
                                 __end_of_tcp_parseHeader 0600  
                                              _U1CON1bits 003DF3  
                           __size_of_icmp_handleNewPacket 012A  
                                      ipv4_setToAllZero@i 0018  
                         __size_of_ethernet_rxGetNewFrame 0526  
                                          _mac_setAllZero 7516  
                                  __end_of_arp_gratuitous 3EF4  
                                                _ipv4_cmp 7092  
                                              _U1FIFObits 003DF7  
                                                _ipSource 02D4  
                                   __size_of_UART_special 0018  
                                       ipAdressToString@i 006C  
                                       ipAdressToString@j 006A  
                                               tcp_init@i 0016  
                         __end_of_ipv4_getIPSourceAddress 7610  
                enc424j600_setGPDATAWritePointer@highByte 0024  
                         __end_of_ipv4_setIPSourceAddress 75D8  
              __end_of_ipv4_getPreliminaryIPSourceAddress 762A  
             __size_of_ipv4_getPreliminaryIPSourceAddress 001A  
                    ??_ipv4_getPreliminaryIPSourceAddress 001A  
                     ?_ipv4_getPreliminaryIPSourceAddress 0016  
                      _ipv4_getPreliminaryIPSourceAddress 7610  
                                    ?_ipv4_generateAutoIP 002A  
                                           __size_of_main 0470  
                                           __size_of_rand 0064  
                                           __size_of_itoa 0058  
                                           __size_of_ltoa 006C  
                               _enc424j600_getPacketCount 768C  
                                           __size_of_utoa 00D2  
                                       ??_ipv4_background 0019  
                      ethernetController_softReset@F18966 02E2  
                      ethernetController_softReset@F18968 02C2  
                                       ?_entireMemoryFull 0001  
                            __size_of_arp_handleNewPacket 00E6  
                 __end_of_enc424j600_getNextPacketPointer 773A  
                __size_of_enc424j600_getNextPacketPointer 000E  
                       ??_enc424j600_getNextPacketPointer 0018  
                        ?_enc424j600_getNextPacketPointer 0016  
                         _enc424j600_getNextPacketPointer 772C  
                                            ??_tcp_listen 0071  
                                    __CFG_WDTCWS$WDTCWS_7 000000  
                 __end_of_enc424j600_setNextPacketPointer 7748  
                __size_of_enc424j600_setNextPacketPointer 000E  
                       ??_enc424j600_setNextPacketPointer 0018  
                        ?_enc424j600_setNextPacketPointer 0016  
                         _enc424j600_setNextPacketPointer 773A  
     ethernetController_writeDestinationMACAddress@opcode 0066  
                        __size_of_ethernetController_init 00B4  
                                         _checkForOverlap 5574  
                              tcp_stateMachine@connection 00AC  
                                                _tcp_init 6340  
                                      ??_entireMemoryFull 0016  
                                             _parseNumber 6568  
                                             _SPI1CLKbits 003D1C  
                                                _sequence 02BE  
                                             ??_getMillis 001A  
                                 buttonHandler@resetValue 0003  
                                                mac_cmp@a 0016  
                        __size_of_checkForOverlapSwitched 00B0  
                                                mac_cmp@b 0018  
                                                mac_cmp@i 001C  
            enc424j600_readControlRegisterUnbanked@opcode 0023  
                                           _mac_isAllZero 72CC  
                                                _unlocked 02C5  
                   ipv4_streamToTransmissionBuffer@packet 0060  
                                     _ipv4_SrcAddrChanged 76FE  
                              ethernet_txFrameRequest@err 0087  
                                             ??_arp_probe 00EC  
                                 __size_of_ipv4_isAllZero 002E  
                               ipv4_setIPSourceAddress@ip 0016  
                               ethernet_rxGetNewFrame@err 01F4  
                                        _UARTTransmitText 6A88  
                                             ??_ipv4_init 0019  
                     __size_of_enc424j600_readPHYRegister 0114  
                                            ??_stack_init 0024  
                                    arp_sendReply@request 00DF  
                                 arp_sendRequest@ipSender 00DF  
                                 arp_sendRequest@ipTarget 00E3  
                                            _UART_special 765C  
                                        ?_arp_setNewEntry 001D  
                                  ipv4_sendFrame@ipPacket 012C  
                                       arp_background@err 0048  
                              __size_of_entireMemoryEmpty 0036  
                                            ??_updateTime 0001  
   ethernetController_writeEtherTypeFieldToBuffer@ethtype 0025  
                                        ?_arp_sendRequest 00DF  
   ethernetController_writeEtherTypeFieldToBuffer@lowByte 0030  
                                       arp_gratuitous@err 00F5  
                                                itoa@base 0064  
                                      __end_of_tcp_listen 50D4  
                                       macToString@number 02D8  
                                  __end_of_mac_setAllZero 753A  
                                               ultoa@base 0029  
                                     _memory_txFrameClear 755E  
                             __end_of_enc424j600_writeSPI 693C  
                        handleStackBackgroundTasks@errArp 0295  
                                           _arp_sendReply 5206  
                                                intlevel2 0000  
                                    ?_ipv4_SrcAddrChanged 0016  
                          __size_of_arp_parseFromRXBuffer 0444  
                                         ?_arp_gratuitous 00E7  
                           __end_of_arp_parseFromRXBuffer 2310  
                                                ltoa@base 0066  
                               icmp_parseHeader@ipPayload 002A  
                                   ??_ipv4_generateAutoIP 002E  
                                        ___lwmod@dividend 0024  
                                        ___lldiv@dividend 0016  
             ethernetController_getEtherTypeField@lowByte 0035  
                           icmp_writeHeaderIntoBuffer@buf 0016  
      ethernetController_writeDestinationMACAddress@i_539 0067  
               ethernetController_streamFromRXBuffer@temp 0029  
                                       __CFG_CLKOUTEN$OFF 000000  
                          enc424j600_readPHYRegister@addr 002C  
                          enc424j600_readPHYRegister@data 0024  
                                     _tcp_handleNewPacket 3826  
                          enc424j600_readPHYRegister@temp 0035  
      ethernetController_writeDestinationMACAddress@field 002B  
                                 __size_of_ipv4_sendFrame 01AE  
                               __size_of_ipAdressToString 0132  
                                      __end_of_stack_init 772C  
                                            macToString@i 0035  
                                            macToString@j 0036  
                enc424j600_readPHYRegister@timeoutCounter 002F  
                              __end_of_enc424j600_initSPI 72CC  
                              __end_of_enc424j600_readSPI 67E0  
                                              _OSCFRQbits 0039DF  
                                    ?_memory_txFrameClear 0001  
                   tcp_calculateHeaderChecksum@ipv4Header 0018  
                                      arp_probe@timeStart 0131  
                                          ?_mac_isAllZero 0016  
                                        ??_UART_setFormat 0037  
                                  _ethernet_rxGetNewFrame 108A  
                                      __end_of_updateTime 771E  
                               arp_setNewEntry@minSeconds 002F  
                                       arp_probe@ipSender 012D  
                                       arp_probe@ipTarget 00E7  
                                      arp_setNewEntry@mac 001D  
                      ethernetController_sendPacket@field 0028  
            ethernetController_getSourceMACAddress@opcode 002E  
    ethernetController_writeEtherTypeFieldToBuffer@opcode 0032  
                              ?_icmp_calculateChecksumBuf 0016  
            __end_of_enc424j600_updateReceiveStatusVector 2D4E  
           __size_of_enc424j600_updateReceiveStatusVector 02FC  
                  ??_enc424j600_updateReceiveStatusVector 001B  
                   ?_enc424j600_updateReceiveStatusVector 0016  
                    _enc424j600_updateReceiveStatusVector 2A52  
                                   mac_setToBroadcast@mac 0016  
                                                utoa@base 002D  
                                                ultoa@buf 0023  
                                                ultoa@val 0025  
                               ipv4_handleNewPacket@frame 00F0  
                                   ipv4_sendFrame@oldTime 02A3  
                                        ??_udp_sendPacket 00AE  
                                    ?_tcp_handleNewPacket 00B0  
                __end_of_enc424j600_setGPDATAWritePointer 710E  
               __size_of_enc424j600_setGPDATAWritePointer 003C  
                      ??_enc424j600_setGPDATAWritePointer 0022  
                       ?_enc424j600_setGPDATAWritePointer 0020  
                        _enc424j600_setGPDATAWritePointer 70D2  
                                        ___lldiv@quotient 001E  
                                         ___lwmod@divisor 0026  
                                  arp_sendRequest@request 010C  
                      enc424j600_setNextPacketPointer@ptr 0016  
                                         ___lwmod@counter 0028  
                            ??_ipv4_writeHeaderIntoBuffer 002F  
                                            ?_macToString 0066  
              enc424j600_readControlRegisterUnbanked@addr 0022  
              enc424j600_readControlRegisterUnbanked@data 0020  
                         ethernetController_getRSV@opcode 002C  
                    __end_of_ethernetController_softReset 5790  
                   __size_of_ethernetController_softReset 010C  
                            _ethernetController_softReset 5684  
                                         ?_mac_setAllZero 0016  
                                __end_of_tcp_stateMachine 5E06  
                            __end_of_ipv4_handleNewPacket 32DC  
             ethernetController_getSourceMACAddress@field 0025  
                                      arp_sendReply@reply 0118  
                                          ?_arp_sendReply 00DF  
                                   ??_ipv4_SrcAddrChanged 0018  
                                        ?_tcp_parseHeader 002A  
                                arp_handleNewPacket@frame 0138  
                                 ?_enc424j600_setTXLength 0024  
                                 __end_of_checkForOverlap 5684  
                          ?_ethernetController_dropPacket 0028  
                                       ?_ipv4_parseHeader 0060  
                          icmp_handleNewPacket@icmpHeader 0285  
                                 _sevenSegmentUpdate$2612 0013  
                                      ??_ipv4_parseHeader 002A  
                                   ??_memory_txFrameClear 0016  
