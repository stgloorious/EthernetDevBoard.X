

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 31 22:51:53 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   138                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   139                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   140  0000                     
   141                           ; Version 1.45
   142                           ; Generated 16/11/2017 GMT
   143                           ; 
   144                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   145                           ; All rights reserved.
   146                           ; 
   147                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   148                           ; 
   149                           ; Redistribution and use in source and binary forms, with or without modification, are
   150                           ; permitted provided that the following conditions are met:
   151                           ; 
   152                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   153                           ;        conditions and the following disclaimer.
   154                           ; 
   155                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   156                           ;        of conditions and the following disclaimer in the documentation and/or other
   157                           ;        materials provided with the distribution.
   158                           ; 
   159                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   160                           ;        software without specific prior written permission.
   161                           ; 
   162                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   163                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   164                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   165                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   166                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   167                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   168                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   169                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   170                           ; 
   171                           ; 
   172                           ; Code-generator required, PIC18F25K50 Definitions
   173                           ; 
   174                           ; SFR Addresses
   175  0000                     
   176                           	psect	idataCOMRAM
   177  00584A                     __pidataCOMRAM:
   178                           	opt stack 0
   179                           
   180                           ;initializer for _randx
   181  00584A  0001               	dw	1
   182  00584C  0000               	dw	0
   183                           
   184                           ;initializer for ethernetController_softReset@F5988
   185  00584E  12                 	db	18
   186  00584F  34                 	db	52
   187                           
   188                           	psect	idataBANK2
   189  005442                     __pidataBANK2:
   190                           	opt stack 0
   191                           
   192                           ;initializer for macToString@F5948
   193  005442  3F                 	db	63
   194  005443  3F                 	db	63
   195  005444  3A                 	db	58
   196  005445  3F                 	db	63
   197  005446  3F                 	db	63
   198  005447  3A                 	db	58
   199  005448  3F                 	db	63
   200  005449  3F                 	db	63
   201  00544A  3A                 	db	58
   202  00544B  3F                 	db	63
   203  00544C  3F                 	db	63
   204  00544D  3A                 	db	58
   205  00544E  3F                 	db	63
   206  00544F  3F                 	db	63
   207  005450  3A                 	db	58
   208  005451  3F                 	db	63
   209  005452  3F                 	db	63
   210  005453  00                 	db	0
   211                           
   212                           ;initializer for _sevenSegCharacters
   213  005454  3F                 	db	63
   214  005455  06                 	db	6
   215  005456  5B                 	db	91
   216  005457  4F                 	db	79
   217  005458  66                 	db	102
   218  005459  6D                 	db	109
   219  00545A  7D                 	db	125
   220  00545B  07                 	db	7
   221  00545C  7F                 	db	127
   222  00545D  6F                 	db	111
   223  00545E  00                 	db	0
   224  00545F  40                 	db	64
   225                           
   226                           ;initializer for ipAdressToString@address
   227  005460  3F                 	db	63
   228  005461  3F                 	db	63
   229  005462  3F                 	db	63
   230  005463  2E                 	db	46
   231  005464  3F                 	db	63
   232  005465  3F                 	db	63
   233  005466  3F                 	db	63
   234  005467  2E                 	db	46
   235  005468  3F                 	db	63
   236  005469  3F                 	db	63
   237  00546A  3F                 	db	63
   238  00546B  2E                 	db	46
   239  00546C  3F                 	db	63
   240  00546D  3F                 	db	63
   241  00546E  3F                 	db	63
   242  00546F  00                 	db	0
   243                           
   244                           	psect	mediumconst
   245  007A0A                     __pmediumconst:
   246                           	opt stack 0
   247  007A0A  00                 	db	0
   248  007A0B                     ethernetController_getDeviceName@F6000:
   249                           	opt stack 0
   250  007A0B  45                 	db	69
   251  007A0C  4E                 	db	78
   252  007A0D  43                 	db	67
   253  007A0E  34                 	db	52
   254  007A0F  32                 	db	50
   255  007A10  34                 	db	52
   256  007A11  4A                 	db	74
   257  007A12  36                 	db	54
   258  007A13  30                 	db	48
   259  007A14  30                 	db	48
   260  007A15  00                 	db	0
   261  007A16                     __end_ofethernetController_getDeviceName@F6000:
   262                           	opt stack 0
   263  0000                     _ANSELC	set	3933
   264  0000                     _ANSELA	set	3931
   265  0000                     _ANSELB	set	3932
   266  0000                     _ANSELBbits	set	3932
   267  0000                     _CCPR1	set	4030
   268  0000                     _TXREG1	set	4013
   269  0000                     _SPBRG	set	4015
   270  0000                     _RCSTA1bits	set	4011
   271  0000                     _TXSTA1bits	set	4012
   272  0000                     _PORTA	set	3968
   273  0000                     _TRISA	set	3986
   274  0000                     _TRISC	set	3988
   275  0000                     _PORTC	set	3970
   276  0000                     _PIR1bits	set	3998
   277  0000                     _PORTB	set	3969
   278  0000                     _TRISB	set	3987
   279  0000                     _RCONbits	set	4048
   280  0000                     _PIE1bits	set	3997
   281  0000                     _CCP1CONbits	set	4029
   282  0000                     _T1CONbits	set	4045
   283  0000                     _T0CONbits	set	4053
   284  0000                     _INTCON3bits	set	4080
   285  0000                     _INTCONbits	set	4082
   286  0000                     _OSCCON2bits	set	4050
   287  0000                     _OSCCONbits	set	4051
   288  0000                     _SSP1BUF	set	4041
   289  0000                     _TRISBbits	set	3987
   290  0000                     _SSP1STATbits	set	4039
   291  0000                     _SSP1CON1bits	set	4038
   292  0000                     _PORTBbits	set	3969
   293  0000                     _TRMT	set	32097
   294  0000                     _RCIF	set	31989
   295  0000                     _RCIE	set	31981
   296  0000                     _RCIP	set	31997
   297  0000                     _TXIF	set	31988
   298  007A16                     STR_88:
   299  007A16  5B                 	db	91	;'['
   300  007A17  41                 	db	65	;'A'
   301  007A18  52                 	db	82	;'R'
   302  007A19  50                 	db	80	;'P'
   303  007A1A  5D                 	db	93	;']'
   304  007A1B  3A                 	db	58	;':'
   305  007A1C  20                 	db	32
   306  007A1D  4F                 	db	79	;'O'
   307  007A1E  70                 	db	112	;'p'
   308  007A1F  65                 	db	101	;'e'
   309  007A20  72                 	db	114	;'r'
   310  007A21  61                 	db	97	;'a'
   311  007A22  74                 	db	116	;'t'
   312  007A23  69                 	db	105	;'i'
   313  007A24  6F                 	db	111	;'o'
   314  007A25  6E                 	db	110	;'n'
   315  007A26  20                 	db	32
   316  007A27  77                 	db	119	;'w'
   317  007A28  61                 	db	97	;'a'
   318  007A29  73                 	db	115	;'s'
   319  007A2A  20                 	db	32
   320  007A2B  69                 	db	105	;'i'
   321  007A2C  6E                 	db	110	;'n'
   322  007A2D  74                 	db	116	;'t'
   323  007A2E  65                 	db	101	;'e'
   324  007A2F  72                 	db	114	;'r'
   325  007A30  72                 	db	114	;'r'
   326  007A31  75                 	db	117	;'u'
   327  007A32  70                 	db	112	;'p'
   328  007A33  74                 	db	116	;'t'
   329  007A34  65                 	db	101	;'e'
   330  007A35  64                 	db	100	;'d'
   331  007A36  20                 	db	32
   332  007A37  62                 	db	98	;'b'
   333  007A38  65                 	db	101	;'e'
   334  007A39  63                 	db	99	;'c'
   335  007A3A  61                 	db	97	;'a'
   336  007A3B  75                 	db	117	;'u'
   337  007A3C  73                 	db	115	;'s'
   338  007A3D  65                 	db	101	;'e'
   339  007A3E  20                 	db	32
   340  007A3F  6C                 	db	108	;'l'
   341  007A40  69                 	db	105	;'i'
   342  007A41  6E                 	db	110	;'n'
   343  007A42  6B                 	db	107	;'k'
   344  007A43  20                 	db	32
   345  007A44  77                 	db	119	;'w'
   346  007A45  61                 	db	97	;'a'
   347  007A46  73                 	db	115	;'s'
   348  007A47  20                 	db	32
   349  007A48  6C                 	db	108	;'l'
   350  007A49  6F                 	db	111	;'o'
   351  007A4A  73                 	db	115	;'s'
   352  007A4B  74                 	db	116	;'t'
   353  007A4C  2E                 	db	46
   354  007A4D  0A                 	db	10
   355  007A4E  0D                 	db	13
   356  007A4F  00                 	db	0
   357  007A50                     STR_58:
   358  007A50  45                 	db	69	;'E'
   359  007A51  74                 	db	116	;'t'
   360  007A52  68                 	db	104	;'h'
   361  007A53  65                 	db	101	;'e'
   362  007A54  72                 	db	114	;'r'
   363  007A55  6E                 	db	110	;'n'
   364  007A56  65                 	db	101	;'e'
   365  007A57  74                 	db	116	;'t'
   366  007A58  20                 	db	32
   367  007A59  63                 	db	99	;'c'
   368  007A5A  6F                 	db	111	;'o'
   369  007A5B  6E                 	db	110	;'n'
   370  007A5C  74                 	db	116	;'t'
   371  007A5D  72                 	db	114	;'r'
   372  007A5E  6F                 	db	111	;'o'
   373  007A5F  6C                 	db	108	;'l'
   374  007A60  6C                 	db	108	;'l'
   375  007A61  65                 	db	101	;'e'
   376  007A62  72                 	db	114	;'r'
   377  007A63  20                 	db	32
   378  007A64  68                 	db	104	;'h'
   379  007A65  61                 	db	97	;'a'
   380  007A66  73                 	db	115	;'s'
   381  007A67  20                 	db	32
   382  007A68  72                 	db	114	;'r'
   383  007A69  65                 	db	101	;'e'
   384  007A6A  74                 	db	116	;'t'
   385  007A6B  75                 	db	117	;'u'
   386  007A6C  72                 	db	114	;'r'
   387  007A6D  6E                 	db	110	;'n'
   388  007A6E  65                 	db	101	;'e'
   389  007A6F  64                 	db	100	;'d'
   390  007A70  20                 	db	32
   391  007A71  61                 	db	97	;'a'
   392  007A72  6E                 	db	110	;'n'
   393  007A73  20                 	db	32
   394  007A74  75                 	db	117	;'u'
   395  007A75  6E                 	db	110	;'n'
   396  007A76  6B                 	db	107	;'k'
   397  007A77  6E                 	db	110	;'n'
   398  007A78  6F                 	db	111	;'o'
   399  007A79  77                 	db	119	;'w'
   400  007A7A  6E                 	db	110	;'n'
   401  007A7B  20                 	db	32
   402  007A7C  64                 	db	100	;'d'
   403  007A7D  65                 	db	101	;'e'
   404  007A7E  76                 	db	118	;'v'
   405  007A7F  69                 	db	105	;'i'
   406  007A80  63                 	db	99	;'c'
   407  007A81  65                 	db	101	;'e'
   408  007A82  20                 	db	32
   409  007A83  49                 	db	73	;'I'
   410  007A84  44                 	db	68	;'D'
   411  007A85  2E                 	db	46
   412  007A86  00                 	db	0
   413  007A87                     STR_28:
   414  007A87  2D                 	db	45
   415  007A88  2D                 	db	45
   416  007A89  2D                 	db	45
   417  007A8A  2D                 	db	45
   418  007A8B  2D                 	db	45
   419  007A8C  2D                 	db	45
   420  007A8D  2D                 	db	45
   421  007A8E  2D                 	db	45
   422  007A8F  2D                 	db	45
   423  007A90  2D                 	db	45
   424  007A91  2D                 	db	45
   425  007A92  2D                 	db	45
   426  007A93  2D                 	db	45
   427  007A94  2D                 	db	45
   428  007A95  2D                 	db	45
   429  007A96  2D                 	db	45
   430  007A97  2D                 	db	45
   431  007A98  2D                 	db	45
   432  007A99  2D                 	db	45
   433  007A9A  2D                 	db	45
   434  007A9B  2D                 	db	45
   435  007A9C  2D                 	db	45
   436  007A9D  2D                 	db	45
   437  007A9E  2D                 	db	45
   438  007A9F  2D                 	db	45
   439  007AA0  2D                 	db	45
   440  007AA1  2D                 	db	45
   441  007AA2  2D                 	db	45
   442  007AA3  2D                 	db	45
   443  007AA4  2D                 	db	45
   444  007AA5  2D                 	db	45
   445  007AA6  2D                 	db	45
   446  007AA7  2D                 	db	45
   447  007AA8  2D                 	db	45
   448  007AA9  2D                 	db	45
   449  007AAA  2D                 	db	45
   450  007AAB  2D                 	db	45
   451  007AAC  2D                 	db	45
   452  007AAD  2D                 	db	45
   453  007AAE  2D                 	db	45
   454  007AAF  2D                 	db	45
   455  007AB0  2D                 	db	45
   456  007AB1  2D                 	db	45
   457  007AB2  2D                 	db	45
   458  007AB3  2D                 	db	45
   459  007AB4  2D                 	db	45
   460  007AB5  2D                 	db	45
   461  007AB6  2D                 	db	45
   462  007AB7  0A                 	db	10
   463  007AB8  0D                 	db	13
   464  007AB9  00                 	db	0
   465  007ABA                     STR_29:
   466  007ABA  07                 	db	7
   467  007ABB  2A                 	db	42
   468  007ABC  2A                 	db	42
   469  007ABD  2A                 	db	42
   470  007ABE  20                 	db	32
   471  007ABF  43                 	db	67	;'C'
   472  007AC0  52                 	db	82	;'R'
   473  007AC1  49                 	db	73	;'I'
   474  007AC2  54                 	db	84	;'T'
   475  007AC3  49                 	db	73	;'I'
   476  007AC4  43                 	db	67	;'C'
   477  007AC5  41                 	db	65	;'A'
   478  007AC6  4C                 	db	76	;'L'
   479  007AC7  20                 	db	32
   480  007AC8  45                 	db	69	;'E'
   481  007AC9  52                 	db	82	;'R'
   482  007ACA  52                 	db	82	;'R'
   483  007ACB  4F                 	db	79	;'O'
   484  007ACC  52                 	db	82	;'R'
   485  007ACD  3A                 	db	58	;':'
   486  007ACE  20                 	db	32
   487  007ACF  57                 	db	87	;'W'
   488  007AD0  41                 	db	65	;'A'
   489  007AD1  54                 	db	84	;'T'
   490  007AD2  43                 	db	67	;'C'
   491  007AD3  48                 	db	72	;'H'
   492  007AD4  44                 	db	68	;'D'
   493  007AD5  4F                 	db	79	;'O'
   494  007AD6  47                 	db	71	;'G'
   495  007AD7  20                 	db	32
   496  007AD8  43                 	db	67	;'C'
   497  007AD9  41                 	db	65	;'A'
   498  007ADA  55                 	db	85	;'U'
   499  007ADB  53                 	db	83	;'S'
   500  007ADC  45                 	db	69	;'E'
   501  007ADD  44                 	db	68	;'D'
   502  007ADE  20                 	db	32
   503  007ADF  52                 	db	82	;'R'
   504  007AE0  45                 	db	69	;'E'
   505  007AE1  53                 	db	83	;'S'
   506  007AE2  45                 	db	69	;'E'
   507  007AE3  54                 	db	84	;'T'
   508  007AE4  20                 	db	32
   509  007AE5  2A                 	db	42
   510  007AE6  2A                 	db	42
   511  007AE7  2A                 	db	42
   512  007AE8  0A                 	db	10
   513  007AE9  0D                 	db	13
   514  007AEA  00                 	db	0
   515  007AEB                     STR_84:
   516  007AEB  5B                 	db	91	;'['
   517  007AEC  41                 	db	65	;'A'
   518  007AED  52                 	db	82	;'R'
   519  007AEE  50                 	db	80	;'P'
   520  007AEF  5D                 	db	93	;']'
   521  007AF0  3A                 	db	58	;':'
   522  007AF1  20                 	db	32
   523  007AF2  53                 	db	83	;'S'
   524  007AF3  65                 	db	101	;'e'
   525  007AF4  6E                 	db	110	;'n'
   526  007AF5  64                 	db	100	;'d'
   527  007AF6  69                 	db	105	;'i'
   528  007AF7  6E                 	db	110	;'n'
   529  007AF8  67                 	db	103	;'g'
   530  007AF9  20                 	db	32
   531  007AFA  47                 	db	71	;'G'
   532  007AFB  72                 	db	114	;'r'
   533  007AFC  61                 	db	97	;'a'
   534  007AFD  74                 	db	116	;'t'
   535  007AFE  75                 	db	117	;'u'
   536  007AFF  69                 	db	105	;'i'
   537  007B00  74                 	db	116	;'t'
   538  007B01  6F                 	db	111	;'o'
   539  007B02  75                 	db	117	;'u'
   540  007B03  73                 	db	115	;'s'
   541  007B04  20                 	db	32
   542  007B05  41                 	db	65	;'A'
   543  007B06  52                 	db	82	;'R'
   544  007B07  50                 	db	80	;'P'
   545  007B08  20                 	db	32
   546  007B09  72                 	db	114	;'r'
   547  007B0A  65                 	db	101	;'e'
   548  007B0B  71                 	db	113	;'q'
   549  007B0C  75                 	db	117	;'u'
   550  007B0D  65                 	db	101	;'e'
   551  007B0E  73                 	db	115	;'s'
   552  007B0F  74                 	db	116	;'t'
   553  007B10  20                 	db	32
   554  007B11  66                 	db	102	;'f'
   555  007B12  6F                 	db	111	;'o'
   556  007B13  72                 	db	114	;'r'
   557  007B14  20                 	db	32
   558  007B15  00                 	db	0
   559  007B16                     STR_21:
   560  007B16  5B                 	db	91	;'['
   561  007B17  49                 	db	73	;'I'
   562  007B18  50                 	db	80	;'P'
   563  007B19  76                 	db	118	;'v'
   564  007B1A  34                 	db	52	;'4'
   565  007B1B  5D                 	db	93	;']'
   566  007B1C  3A                 	db	58	;':'
   567  007B1D  20                 	db	32
   568  007B1E  50                 	db	80	;'P'
   569  007B1F  61                 	db	97	;'a'
   570  007B20  63                 	db	99	;'c'
   571  007B21  6B                 	db	107	;'k'
   572  007B22  65                 	db	101	;'e'
   573  007B23  74                 	db	116	;'t'
   574  007B24  20                 	db	32
   575  007B25  77                 	db	119	;'w'
   576  007B26  61                 	db	97	;'a'
   577  007B27  73                 	db	115	;'s'
   578  007B28  20                 	db	32
   579  007B29  73                 	db	115	;'s'
   580  007B2A  65                 	db	101	;'e'
   581  007B2B  6E                 	db	110	;'n'
   582  007B2C  74                 	db	116	;'t'
   583  007B2D  20                 	db	32
   584  007B2E  73                 	db	115	;'s'
   585  007B2F  75                 	db	117	;'u'
   586  007B30  63                 	db	99	;'c'
   587  007B31  63                 	db	99	;'c'
   588  007B32  65                 	db	101	;'e'
   589  007B33  73                 	db	115	;'s'
   590  007B34  73                 	db	115	;'s'
   591  007B35  66                 	db	102	;'f'
   592  007B36  75                 	db	117	;'u'
   593  007B37  6C                 	db	108	;'l'
   594  007B38  6C                 	db	108	;'l'
   595  007B39  79                 	db	121	;'y'
   596  007B3A  2E                 	db	46
   597  007B3B  0A                 	db	10
   598  007B3C  0D                 	db	13
   599  007B3D  00                 	db	0
   600  007B3E                     STR_70:
   601  007B3E  5B                 	db	91	;'['
   602  007B3F  49                 	db	73	;'I'
   603  007B40  6E                 	db	110	;'n'
   604  007B41  76                 	db	118	;'v'
   605  007B42  61                 	db	97	;'a'
   606  007B43  6C                 	db	108	;'l'
   607  007B44  69                 	db	105	;'i'
   608  007B45  64                 	db	100	;'d'
   609  007B46  20                 	db	32
   610  007B47  41                 	db	65	;'A'
   611  007B48  52                 	db	82	;'R'
   612  007B49  50                 	db	80	;'P'
   613  007B4A  20                 	db	32
   614  007B4B  4D                 	db	77	;'M'
   615  007B4C  65                 	db	101	;'e'
   616  007B4D  73                 	db	115	;'s'
   617  007B4E  73                 	db	115	;'s'
   618  007B4F  61                 	db	97	;'a'
   619  007B50  67                 	db	103	;'g'
   620  007B51  65                 	db	101	;'e'
   621  007B52  20                 	db	32
   622  007B53  77                 	db	119	;'w'
   623  007B54  61                 	db	97	;'a'
   624  007B55  73                 	db	115	;'s'
   625  007B56  20                 	db	32
   626  007B57  64                 	db	100	;'d'
   627  007B58  69                 	db	105	;'i'
   628  007B59  73                 	db	115	;'s'
   629  007B5A  63                 	db	99	;'c'
   630  007B5B  61                 	db	97	;'a'
   631  007B5C  72                 	db	114	;'r'
   632  007B5D  64                 	db	100	;'d'
   633  007B5E  65                 	db	101	;'e'
   634  007B5F  64                 	db	100	;'d'
   635  007B60  2E                 	db	46
   636  007B61  5D                 	db	93	;']'
   637  007B62  0D                 	db	13
   638  007B63  0A                 	db	10
   639  007B64  00                 	db	0
   640  007B65                     STR_90:
   641  007B65  5B                 	db	91	;'['
   642  007B66  41                 	db	65	;'A'
   643  007B67  52                 	db	82	;'R'
   644  007B68  50                 	db	80	;'P'
   645  007B69  5D                 	db	93	;']'
   646  007B6A  3A                 	db	58	;':'
   647  007B6B  20                 	db	32
   648  007B6C  43                 	db	67	;'C'
   649  007B6D  6F                 	db	111	;'o'
   650  007B6E  6E                 	db	110	;'n'
   651  007B6F  66                 	db	102	;'f'
   652  007B70  6C                 	db	108	;'l'
   653  007B71  69                 	db	105	;'i'
   654  007B72  63                 	db	99	;'c'
   655  007B73  74                 	db	116	;'t'
   656  007B74  20                 	db	32
   657  007B75  64                 	db	100	;'d'
   658  007B76  75                 	db	117	;'u'
   659  007B77  72                 	db	114	;'r'
   660  007B78  69                 	db	105	;'i'
   661  007B79  6E                 	db	110	;'n'
   662  007B7A  67                 	db	103	;'g'
   663  007B7B  20                 	db	32
   664  007B7C  61                 	db	97	;'a'
   665  007B7D  6E                 	db	110	;'n'
   666  007B7E  6E                 	db	110	;'n'
   667  007B7F  6F                 	db	111	;'o'
   668  007B80  75                 	db	117	;'u'
   669  007B81  6E                 	db	110	;'n'
   670  007B82  63                 	db	99	;'c'
   671  007B83  65                 	db	101	;'e'
   672  007B84  6D                 	db	109	;'m'
   673  007B85  65                 	db	101	;'e'
   674  007B86  6E                 	db	110	;'n'
   675  007B87  74                 	db	116	;'t'
   676  007B88  2E                 	db	46
   677  007B89  0A                 	db	10
   678  007B8A  0D                 	db	13
   679  007B8B  00                 	db	0
   680  007B8C                     STR_95:
   681  007B8C  5B                 	db	91	;'['
   682  007B8D  41                 	db	65	;'A'
   683  007B8E  52                 	db	82	;'R'
   684  007B8F  50                 	db	80	;'P'
   685  007B90  5D                 	db	93	;']'
   686  007B91  3A                 	db	58	;':'
   687  007B92  20                 	db	32
   688  007B93  54                 	db	84	;'T'
   689  007B94  61                 	db	97	;'a'
   690  007B95  62                 	db	98	;'b'
   691  007B96  6C                 	db	108	;'l'
   692  007B97  65                 	db	101	;'e'
   693  007B98  20                 	db	32
   694  007B99  77                 	db	119	;'w'
   695  007B9A  61                 	db	97	;'a'
   696  007B9B  73                 	db	115	;'s'
   697  007B9C  20                 	db	32
   698  007B9D  72                 	db	114	;'r'
   699  007B9E  65                 	db	101	;'e'
   700  007B9F  73                 	db	115	;'s'
   701  007BA0  65                 	db	101	;'e'
   702  007BA1  74                 	db	116	;'t'
   703  007BA2  20                 	db	32
   704  007BA3  73                 	db	115	;'s'
   705  007BA4  75                 	db	117	;'u'
   706  007BA5  63                 	db	99	;'c'
   707  007BA6  63                 	db	99	;'c'
   708  007BA7  65                 	db	101	;'e'
   709  007BA8  73                 	db	115	;'s'
   710  007BA9  73                 	db	115	;'s'
   711  007BAA  66                 	db	102	;'f'
   712  007BAB  75                 	db	117	;'u'
   713  007BAC  6C                 	db	108	;'l'
   714  007BAD  6C                 	db	108	;'l'
   715  007BAE  79                 	db	121	;'y'
   716  007BAF  2E                 	db	46
   717  007BB0  0A                 	db	10
   718  007BB1  0D                 	db	13
   719  007BB2  00                 	db	0
   720  007BB3                     STR_57:
   721  007BB3  45                 	db	69	;'E'
   722  007BB4  74                 	db	116	;'t'
   723  007BB5  68                 	db	104	;'h'
   724  007BB6  65                 	db	101	;'e'
   725  007BB7  72                 	db	114	;'r'
   726  007BB8  6E                 	db	110	;'n'
   727  007BB9  65                 	db	101	;'e'
   728  007BBA  74                 	db	116	;'t'
   729  007BBB  20                 	db	32
   730  007BBC  63                 	db	99	;'c'
   731  007BBD  6F                 	db	111	;'o'
   732  007BBE  6E                 	db	110	;'n'
   733  007BBF  74                 	db	116	;'t'
   734  007BC0  72                 	db	114	;'r'
   735  007BC1  6F                 	db	111	;'o'
   736  007BC2  6C                 	db	108	;'l'
   737  007BC3  6C                 	db	108	;'l'
   738  007BC4  65                 	db	101	;'e'
   739  007BC5  72                 	db	114	;'r'
   740  007BC6  20                 	db	32
   741  007BC7  69                 	db	105	;'i'
   742  007BC8  73                 	db	115	;'s'
   743  007BC9  20                 	db	32
   744  007BCA  75                 	db	117	;'u'
   745  007BCB  6E                 	db	110	;'n'
   746  007BCC  72                 	db	114	;'r'
   747  007BCD  65                 	db	101	;'e'
   748  007BCE  73                 	db	115	;'s'
   749  007BCF  70                 	db	112	;'p'
   750  007BD0  6F                 	db	111	;'o'
   751  007BD1  6E                 	db	110	;'n'
   752  007BD2  73                 	db	115	;'s'
   753  007BD3  69                 	db	105	;'i'
   754  007BD4  76                 	db	118	;'v'
   755  007BD5  65                 	db	101	;'e'
   756  007BD6  2E                 	db	46
   757  007BD7  00                 	db	0
   758  007BD8                     STR_24:
   759  007BD8  5B                 	db	91	;'['
   760  007BD9  49                 	db	73	;'I'
   761  007BDA  50                 	db	80	;'P'
   762  007BDB  76                 	db	118	;'v'
   763  007BDC  34                 	db	52	;'4'
   764  007BDD  5D                 	db	93	;']'
   765  007BDE  3A                 	db	58	;':'
   766  007BDF  20                 	db	32
   767  007BE0  41                 	db	65	;'A'
   768  007BE1  64                 	db	100	;'d'
   769  007BE2  64                 	db	100	;'d'
   770  007BE3  72                 	db	114	;'r'
   771  007BE4  65                 	db	101	;'e'
   772  007BE5  73                 	db	115	;'s'
   773  007BE6  73                 	db	115	;'s'
   774  007BE7  20                 	db	32
   775  007BE8  63                 	db	99	;'c'
   776  007BE9  6F                 	db	111	;'o'
   777  007BEA  6E                 	db	110	;'n'
   778  007BEB  66                 	db	102	;'f'
   779  007BEC  6C                 	db	108	;'l'
   780  007BED  69                 	db	105	;'i'
   781  007BEE  63                 	db	99	;'c'
   782  007BEF  74                 	db	116	;'t'
   783  007BF0  20                 	db	32
   784  007BF1  64                 	db	100	;'d'
   785  007BF2  65                 	db	101	;'e'
   786  007BF3  74                 	db	116	;'t'
   787  007BF4  65                 	db	101	;'e'
   788  007BF5  63                 	db	99	;'c'
   789  007BF6  74                 	db	116	;'t'
   790  007BF7  65                 	db	101	;'e'
   791  007BF8  64                 	db	100	;'d'
   792  007BF9  2E                 	db	46
   793  007BFA  0A                 	db	10
   794  007BFB  0D                 	db	13
   795  007BFC  00                 	db	0
   796  007BFD                     STR_25:
   797  007BFD  5B                 	db	91	;'['
   798  007BFE  49                 	db	73	;'I'
   799  007BFF  50                 	db	80	;'P'
   800  007C00  76                 	db	118	;'v'
   801  007C01  34                 	db	52	;'4'
   802  007C02  5D                 	db	93	;']'
   803  007C03  3A                 	db	58	;':'
   804  007C04  20                 	db	32
   805  007C05  53                 	db	83	;'S'
   806  007C06  65                 	db	101	;'e'
   807  007C07  74                 	db	116	;'t'
   808  007C08  74                 	db	116	;'t'
   809  007C09  69                 	db	105	;'i'
   810  007C0A  6E                 	db	110	;'n'
   811  007C0B  67                 	db	103	;'g'
   812  007C0C  20                 	db	32
   813  007C0D  49                 	db	73	;'I'
   814  007C0E  50                 	db	80	;'P'
   815  007C0F  76                 	db	118	;'v'
   816  007C10  34                 	db	52	;'4'
   817  007C11  20                 	db	32
   818  007C12  53                 	db	83	;'S'
   819  007C13  72                 	db	114	;'r'
   820  007C14  63                 	db	99	;'c'
   821  007C15  20                 	db	32
   822  007C16  41                 	db	65	;'A'
   823  007C17  64                 	db	100	;'d'
   824  007C18  64                 	db	100	;'d'
   825  007C19  72                 	db	114	;'r'
   826  007C1A  65                 	db	101	;'e'
   827  007C1B  73                 	db	115	;'s'
   828  007C1C  73                 	db	115	;'s'
   829  007C1D  20                 	db	32
   830  007C1E  74                 	db	116	;'t'
   831  007C1F  6F                 	db	111	;'o'
   832  007C20  20                 	db	32
   833  007C21  00                 	db	0
   834  007C22                     STR_87:
   835  007C22  5B                 	db	91	;'['
   836  007C23  41                 	db	65	;'A'
   837  007C24  52                 	db	82	;'R'
   838  007C25  50                 	db	80	;'P'
   839  007C26  5D                 	db	93	;']'
   840  007C27  3A                 	db	58	;':'
   841  007C28  20                 	db	32
   842  007C29  4E                 	db	78	;'N'
   843  007C2A  6F                 	db	111	;'o'
   844  007C2B  62                 	db	98	;'b'
   845  007C2C  6F                 	db	111	;'o'
   846  007C2D  64                 	db	100	;'d'
   847  007C2E  79                 	db	121	;'y'
   848  007C2F  20                 	db	32
   849  007C30  61                 	db	97	;'a'
   850  007C31  6E                 	db	110	;'n'
   851  007C32  73                 	db	115	;'s'
   852  007C33  77                 	db	119	;'w'
   853  007C34  65                 	db	101	;'e'
   854  007C35  72                 	db	114	;'r'
   855  007C36  65                 	db	101	;'e'
   856  007C37  64                 	db	100	;'d'
   857  007C38  20                 	db	32
   858  007C39  74                 	db	116	;'t'
   859  007C3A  6F                 	db	111	;'o'
   860  007C3B  20                 	db	32
   861  007C3C  70                 	db	112	;'p'
   862  007C3D  72                 	db	114	;'r'
   863  007C3E  6F                 	db	111	;'o'
   864  007C3F  62                 	db	98	;'b'
   865  007C40  65                 	db	101	;'e'
   866  007C41  73                 	db	115	;'s'
   867  007C42  2E                 	db	46
   868  007C43  0A                 	db	10
   869  007C44  0D                 	db	13
   870  007C45  00                 	db	0
   871  007C46                     STR_89:
   872  007C46  5B                 	db	91	;'['
   873  007C47  41                 	db	65	;'A'
   874  007C48  52                 	db	82	;'R'
   875  007C49  50                 	db	80	;'P'
   876  007C4A  5D                 	db	93	;']'
   877  007C4B  3A                 	db	58	;':'
   878  007C4C  20                 	db	32
   879  007C4D  41                 	db	65	;'A'
   880  007C4E  6E                 	db	110	;'n'
   881  007C4F  20                 	db	32
   882  007C50  75                 	db	117	;'u'
   883  007C51  6E                 	db	110	;'n'
   884  007C52  6B                 	db	107	;'k'
   885  007C53  6E                 	db	110	;'n'
   886  007C54  6F                 	db	111	;'o'
   887  007C55  77                 	db	119	;'w'
   888  007C56  6E                 	db	110	;'n'
   889  007C57  20                 	db	32
   890  007C58  65                 	db	101	;'e'
   891  007C59  72                 	db	114	;'r'
   892  007C5A  72                 	db	114	;'r'
   893  007C5B  6F                 	db	111	;'o'
   894  007C5C  72                 	db	114	;'r'
   895  007C5D  20                 	db	32
   896  007C5E  6F                 	db	111	;'o'
   897  007C5F  63                 	db	99	;'c'
   898  007C60  63                 	db	99	;'c'
   899  007C61  75                 	db	117	;'u'
   900  007C62  72                 	db	114	;'r'
   901  007C63  65                 	db	101	;'e'
   902  007C64  64                 	db	100	;'d'
   903  007C65  2E                 	db	46
   904  007C66  0A                 	db	10
   905  007C67  0D                 	db	13
   906  007C68  00                 	db	0
   907  007C69                     STR_86:
   908  007C69  5B                 	db	91	;'['
   909  007C6A  41                 	db	65	;'A'
   910  007C6B  52                 	db	82	;'R'
   911  007C6C  50                 	db	80	;'P'
   912  007C6D  5D                 	db	93	;']'
   913  007C6E  3A                 	db	58	;':'
   914  007C6F  20                 	db	32
   915  007C70  43                 	db	67	;'C'
   916  007C71  6F                 	db	111	;'o'
   917  007C72  6E                 	db	110	;'n'
   918  007C73  66                 	db	102	;'f'
   919  007C74  6C                 	db	108	;'l'
   920  007C75  69                 	db	105	;'i'
   921  007C76  63                 	db	99	;'c'
   922  007C77  74                 	db	116	;'t'
   923  007C78  20                 	db	32
   924  007C79  64                 	db	100	;'d'
   925  007C7A  75                 	db	117	;'u'
   926  007C7B  72                 	db	114	;'r'
   927  007C7C  69                 	db	105	;'i'
   928  007C7D  6E                 	db	110	;'n'
   929  007C7E  67                 	db	103	;'g'
   930  007C7F  20                 	db	32
   931  007C80  70                 	db	112	;'p'
   932  007C81  72                 	db	114	;'r'
   933  007C82  6F                 	db	111	;'o'
   934  007C83  62                 	db	98	;'b'
   935  007C84  69                 	db	105	;'i'
   936  007C85  6E                 	db	110	;'n'
   937  007C86  67                 	db	103	;'g'
   938  007C87  2E                 	db	46
   939  007C88  0A                 	db	10
   940  007C89  0D                 	db	13
   941  007C8A  00                 	db	0
   942  007C8B                     STR_59:
   943  007C8B  49                 	db	73	;'I'
   944  007C8C  50                 	db	80	;'P'
   945  007C8D  20                 	db	32
   946  007C8E  61                 	db	97	;'a'
   947  007C8F  64                 	db	100	;'d'
   948  007C90  64                 	db	100	;'d'
   949  007C91  72                 	db	114	;'r'
   950  007C92  65                 	db	101	;'e'
   951  007C93  73                 	db	115	;'s'
   952  007C94  73                 	db	115	;'s'
   953  007C95  20                 	db	32
   954  007C96  63                 	db	99	;'c'
   955  007C97  6F                 	db	111	;'o'
   956  007C98  75                 	db	117	;'u'
   957  007C99  6C                 	db	108	;'l'
   958  007C9A  64                 	db	100	;'d'
   959  007C9B  20                 	db	32
   960  007C9C  6E                 	db	110	;'n'
   961  007C9D  6F                 	db	111	;'o'
   962  007C9E  74                 	db	116	;'t'
   963  007C9F  20                 	db	32
   964  007CA0  62                 	db	98	;'b'
   965  007CA1  65                 	db	101	;'e'
   966  007CA2  20                 	db	32
   967  007CA3  72                 	db	114	;'r'
   968  007CA4  65                 	db	101	;'e'
   969  007CA5  73                 	db	115	;'s'
   970  007CA6  6F                 	db	111	;'o'
   971  007CA7  6C                 	db	108	;'l'
   972  007CA8  76                 	db	118	;'v'
   973  007CA9  65                 	db	101	;'e'
   974  007CAA  64                 	db	100	;'d'
   975  007CAB  2E                 	db	46
   976  007CAC  00                 	db	0
   977  007CAD                     STR_113:
   978  007CAD  5B                 	db	91	;'['
   979  007CAE  49                 	db	73	;'I'
   980  007CAF  50                 	db	80	;'P'
   981  007CB0  76                 	db	118	;'v'
   982  007CB1  34                 	db	52	;'4'
   983  007CB2  5D                 	db	93	;']'
   984  007CB3  3A                 	db	58	;':'
   985  007CB4  20                 	db	32
   986  007CB5  41                 	db	65	;'A'
   987  007CB6  52                 	db	82	;'R'
   988  007CB7  50                 	db	80	;'P'
   989  007CB8  20                 	db	32
   990  007CB9  70                 	db	112	;'p'
   991  007CBA  72                 	db	114	;'r'
   992  007CBB  6F                 	db	111	;'o'
   993  007CBC  63                 	db	99	;'c'
   994  007CBD  65                 	db	101	;'e'
   995  007CBE  73                 	db	115	;'s'
   996  007CBF  73                 	db	115	;'s'
   997  007CC0  20                 	db	32
   998  007CC1  63                 	db	99	;'c'
   999  007CC2  6F                 	db	111	;'o'
  1000  007CC3  6D                 	db	109	;'m'
  1001  007CC4  70                 	db	112	;'p'
  1002  007CC5  6C                 	db	108	;'l'
  1003  007CC6  65                 	db	101	;'e'
  1004  007CC7  74                 	db	116	;'t'
  1005  007CC8  65                 	db	101	;'e'
  1006  007CC9  64                 	db	100	;'d'
  1007  007CCA  2E                 	db	46
  1008  007CCB  0A                 	db	10
  1009  007CCC  0D                 	db	13
  1010  007CCD  00                 	db	0
  1011  007CCE                     STR_91:
  1012  007CCE  5B                 	db	91	;'['
  1013  007CCF  41                 	db	65	;'A'
  1014  007CD0  52                 	db	82	;'R'
  1015  007CD1  50                 	db	80	;'P'
  1016  007CD2  5D                 	db	93	;']'
  1017  007CD3  3A                 	db	58	;':'
  1018  007CD4  20                 	db	32
  1019  007CD5  41                 	db	65	;'A'
  1020  007CD6  6C                 	db	108	;'l'
  1021  007CD7  6C                 	db	108	;'l'
  1022  007CD8  20                 	db	32
  1023  007CD9  61                 	db	97	;'a'
  1024  007CDA  6E                 	db	110	;'n'
  1025  007CDB  6E                 	db	110	;'n'
  1026  007CDC  6F                 	db	111	;'o'
  1027  007CDD  75                 	db	117	;'u'
  1028  007CDE  6E                 	db	110	;'n'
  1029  007CDF  63                 	db	99	;'c'
  1030  007CE0  65                 	db	101	;'e'
  1031  007CE1  6D                 	db	109	;'m'
  1032  007CE2  65                 	db	101	;'e'
  1033  007CE3  6E                 	db	110	;'n'
  1034  007CE4  74                 	db	116	;'t'
  1035  007CE5  73                 	db	115	;'s'
  1036  007CE6  20                 	db	32
  1037  007CE7  73                 	db	115	;'s'
  1038  007CE8  65                 	db	101	;'e'
  1039  007CE9  6E                 	db	110	;'n'
  1040  007CEA  74                 	db	116	;'t'
  1041  007CEB  2E                 	db	46
  1042  007CEC  0A                 	db	10
  1043  007CED  0D                 	db	13
  1044  007CEE  00                 	db	0
  1045  007CEF                     STR_42:
  1046  007CEF  5B                 	db	91	;'['
  1047  007CF0  49                 	db	73	;'I'
  1048  007CF1  50                 	db	80	;'P'
  1049  007CF2  76                 	db	118	;'v'
  1050  007CF3  34                 	db	52	;'4'
  1051  007CF4  5D                 	db	93	;']'
  1052  007CF5  3A                 	db	58	;':'
  1053  007CF6  20                 	db	32
  1054  007CF7  41                 	db	65	;'A'
  1055  007CF8  20                 	db	32
  1056  007CF9  70                 	db	112	;'p'
  1057  007CFA  61                 	db	97	;'a'
  1058  007CFB  63                 	db	99	;'c'
  1059  007CFC  6B                 	db	107	;'k'
  1060  007CFD  65                 	db	101	;'e'
  1061  007CFE  74                 	db	116	;'t'
  1062  007CFF  20                 	db	32
  1063  007D00  77                 	db	119	;'w'
  1064  007D01  61                 	db	97	;'a'
  1065  007D02  73                 	db	115	;'s'
  1066  007D03  20                 	db	32
  1067  007D04  70                 	db	112	;'p'
  1068  007D05  72                 	db	114	;'r'
  1069  007D06  65                 	db	101	;'e'
  1070  007D07  70                 	db	112	;'p'
  1071  007D08  61                 	db	97	;'a'
  1072  007D09  72                 	db	114	;'r'
  1073  007D0A  65                 	db	101	;'e'
  1074  007D0B  64                 	db	100	;'d'
  1075  007D0C  20                 	db	32
  1076  007D0D  28                 	db	40
  1077  007D0E  00                 	db	0
  1078  007D0F                     STR_92:
  1079  007D0F  5B                 	db	91	;'['
  1080  007D10  41                 	db	65	;'A'
  1081  007D11  52                 	db	82	;'R'
  1082  007D12  50                 	db	80	;'P'
  1083  007D13  5D                 	db	93	;']'
  1084  007D14  3A                 	db	58	;':'
  1085  007D15  20                 	db	32
  1086  007D16  4E                 	db	78	;'N'
  1087  007D17  65                 	db	101	;'e'
  1088  007D18  77                 	db	119	;'w'
  1089  007D19  20                 	db	32
  1090  007D1A  65                 	db	101	;'e'
  1091  007D1B  6E                 	db	110	;'n'
  1092  007D1C  74                 	db	116	;'t'
  1093  007D1D  72                 	db	114	;'r'
  1094  007D1E  79                 	db	121	;'y'
  1095  007D1F  20                 	db	32
  1096  007D20  63                 	db	99	;'c'
  1097  007D21  72                 	db	114	;'r'
  1098  007D22  65                 	db	101	;'e'
  1099  007D23  61                 	db	97	;'a'
  1100  007D24  74                 	db	116	;'t'
  1101  007D25  65                 	db	101	;'e'
  1102  007D26  64                 	db	100	;'d'
  1103  007D27  20                 	db	32
  1104  007D28  66                 	db	102	;'f'
  1105  007D29  6F                 	db	111	;'o'
  1106  007D2A  72                 	db	114	;'r'
  1107  007D2B  20                 	db	32
  1108  007D2C  00                 	db	0
  1109  007D2D                     STR_53:
  1110  007D2D  20                 	db	32
  1111  007D2E  45                 	db	69	;'E'
  1112  007D2F  54                 	db	84	;'T'
  1113  007D30  48                 	db	72	;'H'
  1114  007D31  45                 	db	69	;'E'
  1115  007D32  52                 	db	82	;'R'
  1116  007D33  4E                 	db	78	;'N'
  1117  007D34  45                 	db	69	;'E'
  1118  007D35  54                 	db	84	;'T'
  1119  007D36  20                 	db	32
  1120  007D37  43                 	db	67	;'C'
  1121  007D38  4F                 	db	79	;'O'
  1122  007D39  4E                 	db	78	;'N'
  1123  007D3A  54                 	db	84	;'T'
  1124  007D3B  52                 	db	82	;'R'
  1125  007D3C  4F                 	db	79	;'O'
  1126  007D3D  4C                 	db	76	;'L'
  1127  007D3E  4C                 	db	76	;'L'
  1128  007D3F  45                 	db	69	;'E'
  1129  007D40  52                 	db	82	;'R'
  1130  007D41  20                 	db	32
  1131  007D42  4D                 	db	77	;'M'
  1132  007D43  4F                 	db	79	;'O'
  1133  007D44  44                 	db	68	;'D'
  1134  007D45  55                 	db	85	;'U'
  1135  007D46  4C                 	db	76	;'L'
  1136  007D47  45                 	db	69	;'E'
  1137  007D48  3A                 	db	58	;':'
  1138  007D49  20                 	db	32
  1139  007D4A  00                 	db	0
  1140  007D4B                     STR_60:
  1141  007D4B  41                 	db	65	;'A'
  1142  007D4C  6E                 	db	110	;'n'
  1143  007D4D  20                 	db	32
  1144  007D4E  75                 	db	117	;'u'
  1145  007D4F  6E                 	db	110	;'n'
  1146  007D50  6B                 	db	107	;'k'
  1147  007D51  6E                 	db	110	;'n'
  1148  007D52  6F                 	db	111	;'o'
  1149  007D53  77                 	db	119	;'w'
  1150  007D54  6E                 	db	110	;'n'
  1151  007D55  20                 	db	32
  1152  007D56  65                 	db	101	;'e'
  1153  007D57  72                 	db	114	;'r'
  1154  007D58  72                 	db	114	;'r'
  1155  007D59  6F                 	db	111	;'o'
  1156  007D5A  72                 	db	114	;'r'
  1157  007D5B  20                 	db	32
  1158  007D5C  68                 	db	104	;'h'
  1159  007D5D  61                 	db	97	;'a'
  1160  007D5E  73                 	db	115	;'s'
  1161  007D5F  20                 	db	32
  1162  007D60  6F                 	db	111	;'o'
  1163  007D61  63                 	db	99	;'c'
  1164  007D62  63                 	db	99	;'c'
  1165  007D63  75                 	db	117	;'u'
  1166  007D64  72                 	db	114	;'r'
  1167  007D65  65                 	db	101	;'e'
  1168  007D66  64                 	db	100	;'d'
  1169  007D67  2E                 	db	46
  1170  007D68  00                 	db	0
  1171  007D69                     STR_49:
  1172  007D69  63                 	db	99	;'c'
  1173  007D6A  6F                 	db	111	;'o'
  1174  007D6B  6E                 	db	110	;'n'
  1175  007D6C  6E                 	db	110	;'n'
  1176  007D6D  65                 	db	101	;'e'
  1177  007D6E  63                 	db	99	;'c'
  1178  007D6F  74                 	db	116	;'t'
  1179  007D70  69                 	db	105	;'i'
  1180  007D71  6F                 	db	111	;'o'
  1181  007D72  6E                 	db	110	;'n'
  1182  007D73  20                 	db	32
  1183  007D74  69                 	db	105	;'i'
  1184  007D75  73                 	db	115	;'s'
  1185  007D76  20                 	db	32
  1186  007D77  48                 	db	72	;'H'
  1187  007D78  61                 	db	97	;'a'
  1188  007D79  6C                 	db	108	;'l'
  1189  007D7A  66                 	db	102	;'f'
  1190  007D7B  20                 	db	32
  1191  007D7C  44                 	db	68	;'D'
  1192  007D7D  75                 	db	117	;'u'
  1193  007D7E  70                 	db	112	;'p'
  1194  007D7F  6C                 	db	108	;'l'
  1195  007D80  65                 	db	101	;'e'
  1196  007D81  78                 	db	120	;'x'
  1197  007D82  2E                 	db	46
  1198  007D83  0A                 	db	10
  1199  007D84  0D                 	db	13
  1200  007D85  00                 	db	0
  1201  007D86                     STR_50:
  1202  007D86  63                 	db	99	;'c'
  1203  007D87  6F                 	db	111	;'o'
  1204  007D88  6E                 	db	110	;'n'
  1205  007D89  6E                 	db	110	;'n'
  1206  007D8A  65                 	db	101	;'e'
  1207  007D8B  63                 	db	99	;'c'
  1208  007D8C  74                 	db	116	;'t'
  1209  007D8D  69                 	db	105	;'i'
  1210  007D8E  6F                 	db	111	;'o'
  1211  007D8F  6E                 	db	110	;'n'
  1212  007D90  20                 	db	32
  1213  007D91  69                 	db	105	;'i'
  1214  007D92  73                 	db	115	;'s'
  1215  007D93  20                 	db	32
  1216  007D94  46                 	db	70	;'F'
  1217  007D95  75                 	db	117	;'u'
  1218  007D96  6C                 	db	108	;'l'
  1219  007D97  6C                 	db	108	;'l'
  1220  007D98  20                 	db	32
  1221  007D99  44                 	db	68	;'D'
  1222  007D9A  75                 	db	117	;'u'
  1223  007D9B  70                 	db	112	;'p'
  1224  007D9C  6C                 	db	108	;'l'
  1225  007D9D  65                 	db	101	;'e'
  1226  007D9E  78                 	db	120	;'x'
  1227  007D9F  2E                 	db	46
  1228  007DA0  0A                 	db	10
  1229  007DA1  0D                 	db	13
  1230  007DA2  00                 	db	0
  1231  007DA3                     STR_100:
  1232  007DA3  5B                 	db	91	;'['
  1233  007DA4  49                 	db	73	;'I'
  1234  007DA5  50                 	db	80	;'P'
  1235  007DA6  76                 	db	118	;'v'
  1236  007DA7  34                 	db	52	;'4'
  1237  007DA8  5D                 	db	93	;']'
  1238  007DA9  3A                 	db	58	;':'
  1239  007DAA  20                 	db	32
  1240  007DAB  54                 	db	84	;'T'
  1241  007DAC  72                 	db	114	;'r'
  1242  007DAD  79                 	db	121	;'y'
  1243  007DAE  69                 	db	105	;'i'
  1244  007DAF  6E                 	db	110	;'n'
  1245  007DB0  67                 	db	103	;'g'
  1246  007DB1  20                 	db	32
  1247  007DB2  74                 	db	116	;'t'
  1248  007DB3  6F                 	db	111	;'o'
  1249  007DB4  20                 	db	32
  1250  007DB5  72                 	db	114	;'r'
  1251  007DB6  65                 	db	101	;'e'
  1252  007DB7  73                 	db	115	;'s'
  1253  007DB8  6F                 	db	111	;'o'
  1254  007DB9  6C                 	db	108	;'l'
  1255  007DBA  76                 	db	118	;'v'
  1256  007DBB  65                 	db	101	;'e'
  1257  007DBC  20                 	db	32
  1258  007DBD  00                 	db	0
  1259  007DBE                     STR_22:
  1260  007DBE  5B                 	db	91	;'['
  1261  007DBF  49                 	db	73	;'I'
  1262  007DC0  50                 	db	80	;'P'
  1263  007DC1  76                 	db	118	;'v'
  1264  007DC2  34                 	db	52	;'4'
  1265  007DC3  5D                 	db	93	;']'
  1266  007DC4  3A                 	db	58	;':'
  1267  007DC5  20                 	db	32
  1268  007DC6  46                 	db	70	;'F'
  1269  007DC7  61                 	db	97	;'a'
  1270  007DC8  69                 	db	105	;'i'
  1271  007DC9  6C                 	db	108	;'l'
  1272  007DCA  65                 	db	101	;'e'
  1273  007DCB  64                 	db	100	;'d'
  1274  007DCC  20                 	db	32
  1275  007DCD  74                 	db	116	;'t'
  1276  007DCE  6F                 	db	111	;'o'
  1277  007DCF  20                 	db	32
  1278  007DD0  72                 	db	114	;'r'
  1279  007DD1  65                 	db	101	;'e'
  1280  007DD2  73                 	db	115	;'s'
  1281  007DD3  6F                 	db	111	;'o'
  1282  007DD4  6C                 	db	108	;'l'
  1283  007DD5  76                 	db	118	;'v'
  1284  007DD6  65                 	db	101	;'e'
  1285  007DD7  20                 	db	32
  1286  007DD8  00                 	db	0
  1287  007DD9                     STR_81:
  1288  007DD9  5B                 	db	91	;'['
  1289  007DDA  41                 	db	65	;'A'
  1290  007DDB  52                 	db	82	;'R'
  1291  007DDC  50                 	db	80	;'P'
  1292  007DDD  5D                 	db	93	;']'
  1293  007DDE  3A                 	db	58	;':'
  1294  007DDF  20                 	db	32
  1295  007DE0  53                 	db	83	;'S'
  1296  007DE1  65                 	db	101	;'e'
  1297  007DE2  6E                 	db	110	;'n'
  1298  007DE3  64                 	db	100	;'d'
  1299  007DE4  69                 	db	105	;'i'
  1300  007DE5  6E                 	db	110	;'n'
  1301  007DE6  67                 	db	103	;'g'
  1302  007DE7  20                 	db	32
  1303  007DE8  50                 	db	80	;'P'
  1304  007DE9  72                 	db	114	;'r'
  1305  007DEA  6F                 	db	111	;'o'
  1306  007DEB  62                 	db	98	;'b'
  1307  007DEC  65                 	db	101	;'e'
  1308  007DED  20                 	db	32
  1309  007DEE  66                 	db	102	;'f'
  1310  007DEF  6F                 	db	111	;'o'
  1311  007DF0  72                 	db	114	;'r'
  1312  007DF1  20                 	db	32
  1313  007DF2  00                 	db	0
  1314  007DF3                     STR_31:
  1315  007DF3  46                 	db	70	;'F'
  1316  007DF4  49                 	db	73	;'I'
  1317  007DF5  52                 	db	82	;'R'
  1318  007DF6  4D                 	db	77	;'M'
  1319  007DF7  57                 	db	87	;'W'
  1320  007DF8  41                 	db	65	;'A'
  1321  007DF9  52                 	db	82	;'R'
  1322  007DFA  45                 	db	69	;'E'
  1323  007DFB  20                 	db	32
  1324  007DFC  42                 	db	66	;'B'
  1325  007DFD  55                 	db	85	;'U'
  1326  007DFE  49                 	db	73	;'I'
  1327  007DFF  4C                 	db	76	;'L'
  1328  007E00  44                 	db	68	;'D'
  1329  007E01  20                 	db	32
  1330  007E02  44                 	db	68	;'D'
  1331  007E03  41                 	db	65	;'A'
  1332  007E04  54                 	db	84	;'T'
  1333  007E05  45                 	db	69	;'E'
  1334  007E06  20                 	db	32
  1335  007E07  49                 	db	73	;'I'
  1336  007E08  53                 	db	83	;'S'
  1337  007E09  20                 	db	32
  1338  007E0A  00                 	db	0
  1339  007E0B                     STR_37:
  1340  007E0B  53                 	db	83	;'S'
  1341  007E0C  6F                 	db	111	;'o'
  1342  007E0D  75                 	db	117	;'u'
  1343  007E0E  72                 	db	114	;'r'
  1344  007E0F  63                 	db	99	;'c'
  1345  007E10  65                 	db	101	;'e'
  1346  007E11  20                 	db	32
  1347  007E12  4D                 	db	77	;'M'
  1348  007E13  41                 	db	65	;'A'
  1349  007E14  43                 	db	67	;'C'
  1350  007E15  20                 	db	32
  1351  007E16  61                 	db	97	;'a'
  1352  007E17  64                 	db	100	;'d'
  1353  007E18  64                 	db	100	;'d'
  1354  007E19  72                 	db	114	;'r'
  1355  007E1A  65                 	db	101	;'e'
  1356  007E1B  73                 	db	115	;'s'
  1357  007E1C  73                 	db	115	;'s'
  1358  007E1D  20                 	db	32
  1359  007E1E  69                 	db	105	;'i'
  1360  007E1F  73                 	db	115	;'s'
  1361  007E20  20                 	db	32
  1362  007E21  00                 	db	0
  1363  007E22                     STR_48:
  1364  007E22  53                 	db	83	;'S'
  1365  007E23  70                 	db	112	;'p'
  1366  007E24  65                 	db	101	;'e'
  1367  007E25  65                 	db	101	;'e'
  1368  007E26  64                 	db	100	;'d'
  1369  007E27  20                 	db	32
  1370  007E28  69                 	db	105	;'i'
  1371  007E29  73                 	db	115	;'s'
  1372  007E2A  20                 	db	32
  1373  007E2B  31                 	db	49	;'1'
  1374  007E2C  30                 	db	48	;'0'
  1375  007E2D  30                 	db	48	;'0'
  1376  007E2E  20                 	db	32
  1377  007E2F  4D                 	db	77	;'M'
  1378  007E30  62                 	db	98	;'b'
  1379  007E31  70                 	db	112	;'p'
  1380  007E32  73                 	db	115	;'s'
  1381  007E33  2C                 	db	44
  1382  007E34  20                 	db	32
  1383  007E35  00                 	db	0
  1384  007E36                     STR_10:
  1385  007E36  5B                 	db	91	;'['
  1386  007E37  55                 	db	85	;'U'
  1387  007E38  6E                 	db	110	;'n'
  1388  007E39  6B                 	db	107	;'k'
  1389  007E3A  6E                 	db	110	;'n'
  1390  007E3B  6F                 	db	111	;'o'
  1391  007E3C  77                 	db	119	;'w'
  1392  007E3D  6E                 	db	110	;'n'
  1393  007E3E  20                 	db	32
  1394  007E3F  45                 	db	69	;'E'
  1395  007E40  74                 	db	116	;'t'
  1396  007E41  68                 	db	104	;'h'
  1397  007E42  65                 	db	101	;'e'
  1398  007E43  72                 	db	114	;'r'
  1399  007E44  54                 	db	84	;'T'
  1400  007E45  79                 	db	121	;'y'
  1401  007E46  70                 	db	112	;'p'
  1402  007E47  65                 	db	101	;'e'
  1403  007E48  5D                 	db	93	;']'
  1404  007E49  00                 	db	0
  1405  007E4A                     STR_112:
  1406  007E4A  5B                 	db	91	;'['
  1407  007E4B  49                 	db	73	;'I'
  1408  007E4C  4E                 	db	78	;'N'
  1409  007E4D  56                 	db	86	;'V'
  1410  007E4E  41                 	db	65	;'A'
  1411  007E4F  4C                 	db	76	;'L'
  1412  007E50  49                 	db	73	;'I'
  1413  007E51  44                 	db	68	;'D'
  1414  007E52  20                 	db	32
  1415  007E53  43                 	db	67	;'C'
  1416  007E54  48                 	db	72	;'H'
  1417  007E55  45                 	db	69	;'E'
  1418  007E56  43                 	db	67	;'C'
  1419  007E57  4B                 	db	75	;'K'
  1420  007E58  53                 	db	83	;'S'
  1421  007E59  55                 	db	85	;'U'
  1422  007E5A  4D                 	db	77	;'M'
  1423  007E5B  5D                 	db	93	;']'
  1424  007E5C  00                 	db	0
  1425  007E5D                     STR_47:
  1426  007E5D  53                 	db	83	;'S'
  1427  007E5E  70                 	db	112	;'p'
  1428  007E5F  65                 	db	101	;'e'
  1429  007E60  65                 	db	101	;'e'
  1430  007E61  64                 	db	100	;'d'
  1431  007E62  20                 	db	32
  1432  007E63  69                 	db	105	;'i'
  1433  007E64  73                 	db	115	;'s'
  1434  007E65  20                 	db	32
  1435  007E66  31                 	db	49	;'1'
  1436  007E67  30                 	db	48	;'0'
  1437  007E68  20                 	db	32
  1438  007E69  4D                 	db	77	;'M'
  1439  007E6A  62                 	db	98	;'b'
  1440  007E6B  70                 	db	112	;'p'
  1441  007E6C  73                 	db	115	;'s'
  1442  007E6D  2C                 	db	44
  1443  007E6E  20                 	db	32
  1444  007E6F  00                 	db	0
  1445  007E70                     STR_46:
  1446  007E70  4C                 	db	76	;'L'
  1447  007E71  69                 	db	105	;'i'
  1448  007E72  6E                 	db	110	;'n'
  1449  007E73  6B                 	db	107	;'k'
  1450  007E74  20                 	db	32
  1451  007E75  65                 	db	101	;'e'
  1452  007E76  73                 	db	115	;'s'
  1453  007E77  74                 	db	116	;'t'
  1454  007E78  61                 	db	97	;'a'
  1455  007E79  62                 	db	98	;'b'
  1456  007E7A  6C                 	db	108	;'l'
  1457  007E7B  69                 	db	105	;'i'
  1458  007E7C  73                 	db	115	;'s'
  1459  007E7D  68                 	db	104	;'h'
  1460  007E7E  65                 	db	101	;'e'
  1461  007E7F  64                 	db	100	;'d'
  1462  007E80  2E                 	db	46
  1463  007E81  20                 	db	32
  1464  007E82  00                 	db	0
  1465  007E83                     STR_54:
  1466  007E83  20                 	db	32
  1467  007E84  45                 	db	69	;'E'
  1468  007E85  54                 	db	84	;'T'
  1469  007E86  48                 	db	72	;'H'
  1470  007E87  45                 	db	69	;'E'
  1471  007E88  52                 	db	82	;'R'
  1472  007E89  4E                 	db	78	;'N'
  1473  007E8A  45                 	db	69	;'E'
  1474  007E8B  54                 	db	84	;'T'
  1475  007E8C  20                 	db	32
  1476  007E8D  4D                 	db	77	;'M'
  1477  007E8E  4F                 	db	79	;'O'
  1478  007E8F  44                 	db	68	;'D'
  1479  007E90  55                 	db	85	;'U'
  1480  007E91  4C                 	db	76	;'L'
  1481  007E92  45                 	db	69	;'E'
  1482  007E93  3A                 	db	58	;':'
  1483  007E94  20                 	db	32
  1484  007E95  00                 	db	0
  1485  007E96                     STR_65:
  1486  007E96  55                 	db	85	;'U'
  1487  007E97  6E                 	db	110	;'n'
  1488  007E98  6B                 	db	107	;'k'
  1489  007E99  6E                 	db	110	;'n'
  1490  007E9A  6F                 	db	111	;'o'
  1491  007E9B  77                 	db	119	;'w'
  1492  007E9C  6E                 	db	110	;'n'
  1493  007E9D  20                 	db	32
  1494  007E9E  45                 	db	69	;'E'
  1495  007E9F  74                 	db	116	;'t'
  1496  007EA0  68                 	db	104	;'h'
  1497  007EA1  65                 	db	101	;'e'
  1498  007EA2  72                 	db	114	;'r'
  1499  007EA3  54                 	db	84	;'T'
  1500  007EA4  79                 	db	121	;'y'
  1501  007EA5  70                 	db	112	;'p'
  1502  007EA6  65                 	db	101	;'e'
  1503  007EA7  00                 	db	0
  1504  007EA8                     STR_69:
  1505  007EA8  55                 	db	85	;'U'
  1506  007EA9  6E                 	db	110	;'n'
  1507  007EAA  6B                 	db	107	;'k'
  1508  007EAB  6E                 	db	110	;'n'
  1509  007EAC  6F                 	db	111	;'o'
  1510  007EAD  77                 	db	119	;'w'
  1511  007EAE  6E                 	db	110	;'n'
  1512  007EAF  20                 	db	32
  1513  007EB0  50                 	db	80	;'P'
  1514  007EB1  72                 	db	114	;'r'
  1515  007EB2  6F                 	db	111	;'o'
  1516  007EB3  74                 	db	116	;'t'
  1517  007EB4  6F                 	db	111	;'o'
  1518  007EB5  63                 	db	99	;'c'
  1519  007EB6  6F                 	db	111	;'o'
  1520  007EB7  6C                 	db	108	;'l'
  1521  007EB8  00                 	db	0
  1522  007EB9                     STR_52:
  1523  007EB9  20                 	db	32
  1524  007EBA  4D                 	db	77	;'M'
  1525  007EBB  45                 	db	69	;'E'
  1526  007EBC  4D                 	db	77	;'M'
  1527  007EBD  4F                 	db	79	;'O'
  1528  007EBE  52                 	db	82	;'R'
  1529  007EBF  59                 	db	89	;'Y'
  1530  007EC0  20                 	db	32
  1531  007EC1  4D                 	db	77	;'M'
  1532  007EC2  4F                 	db	79	;'O'
  1533  007EC3  44                 	db	68	;'D'
  1534  007EC4  55                 	db	85	;'U'
  1535  007EC5  4C                 	db	76	;'L'
  1536  007EC6  45                 	db	69	;'E'
  1537  007EC7  3A                 	db	58	;':'
  1538  007EC8  20                 	db	32
  1539  007EC9  00                 	db	0
  1540  007ECA                     STR_78:
  1541  007ECA  5B                 	db	91	;'['
  1542  007ECB  52                 	db	82	;'R'
  1543  007ECC  65                 	db	101	;'e'
  1544  007ECD  70                 	db	112	;'p'
  1545  007ECE  6C                 	db	108	;'l'
  1546  007ECF  79                 	db	121	;'y'
  1547  007ED0  20                 	db	32
  1548  007ED1  73                 	db	115	;'s'
  1549  007ED2  65                 	db	101	;'e'
  1550  007ED3  6E                 	db	110	;'n'
  1551  007ED4  74                 	db	116	;'t'
  1552  007ED5  20                 	db	32
  1553  007ED6  74                 	db	116	;'t'
  1554  007ED7  6F                 	db	111	;'o'
  1555  007ED8  20                 	db	32
  1556  007ED9  00                 	db	0
  1557  007EDA                     STR_5:
  1558  007EDA  5B                 	db	91	;'['
  1559  007EDB  53                 	db	83	;'S'
  1560  007EDC  79                 	db	121	;'y'
  1561  007EDD  6D                 	db	109	;'m'
  1562  007EDE  62                 	db	98	;'b'
  1563  007EDF  6F                 	db	111	;'o'
  1564  007EE0  6C                 	db	108	;'l'
  1565  007EE1  20                 	db	32
  1566  007EE2  45                 	db	69	;'E'
  1567  007EE3  72                 	db	114	;'r'
  1568  007EE4  72                 	db	114	;'r'
  1569  007EE5  6F                 	db	111	;'o'
  1570  007EE6  72                 	db	114	;'r'
  1571  007EE7  73                 	db	115	;'s'
  1572  007EE8  5D                 	db	93	;']'
  1573  007EE9  00                 	db	0
  1574  007EEA                     STR_77:
  1575  007EEA  5B                 	db	91	;'['
  1576  007EEB  49                 	db	73	;'I'
  1577  007EEC  73                 	db	115	;'s'
  1578  007EED  47                 	db	71	;'G'
  1579  007EEE  72                 	db	114	;'r'
  1580  007EEF  61                 	db	97	;'a'
  1581  007EF0  74                 	db	116	;'t'
  1582  007EF1  75                 	db	117	;'u'
  1583  007EF2  69                 	db	105	;'i'
  1584  007EF3  74                 	db	116	;'t'
  1585  007EF4  6F                 	db	111	;'o'
  1586  007EF5  75                 	db	117	;'u'
  1587  007EF6  73                 	db	115	;'s'
  1588  007EF7  5D                 	db	93	;']'
  1589  007EF8  00                 	db	0
  1590  007EF9                     STR_56:
  1591  007EF9  20                 	db	32
  1592  007EFA  49                 	db	73	;'I'
  1593  007EFB  50                 	db	80	;'P'
  1594  007EFC  76                 	db	118	;'v'
  1595  007EFD  34                 	db	52	;'4'
  1596  007EFE  20                 	db	32
  1597  007EFF  4D                 	db	77	;'M'
  1598  007F00  4F                 	db	79	;'O'
  1599  007F01  44                 	db	68	;'D'
  1600  007F02  55                 	db	85	;'U'
  1601  007F03  4C                 	db	76	;'L'
  1602  007F04  45                 	db	69	;'E'
  1603  007F05  3A                 	db	58	;':'
  1604  007F06  20                 	db	32
  1605  007F07  00                 	db	0
  1606  007F08                     STR_40:
  1607  007F08  4D                 	db	77	;'M'
  1608  007F09  79                 	db	121	;'y'
  1609  007F0A  20                 	db	32
  1610  007F0B  41                 	db	65	;'A'
  1611  007F0C  64                 	db	100	;'d'
  1612  007F0D  64                 	db	100	;'d'
  1613  007F0E  72                 	db	114	;'r'
  1614  007F0F  65                 	db	101	;'e'
  1615  007F10  73                 	db	115	;'s'
  1616  007F11  73                 	db	115	;'s'
  1617  007F12  20                 	db	32
  1618  007F13  69                 	db	105	;'i'
  1619  007F14  73                 	db	115	;'s'
  1620  007F15  20                 	db	32
  1621  007F16  00                 	db	0
  1622  007F17                     STR_55:
  1623  007F17  20                 	db	32
  1624  007F18  41                 	db	65	;'A'
  1625  007F19  52                 	db	82	;'R'
  1626  007F1A  50                 	db	80	;'P'
  1627  007F1B  20                 	db	32
  1628  007F1C  4D                 	db	77	;'M'
  1629  007F1D  4F                 	db	79	;'O'
  1630  007F1E  44                 	db	68	;'D'
  1631  007F1F  55                 	db	85	;'U'
  1632  007F20  4C                 	db	76	;'L'
  1633  007F21  45                 	db	69	;'E'
  1634  007F22  3A                 	db	58	;':'
  1635  007F23  20                 	db	32
  1636  007F24  00                 	db	0
  1637  007F25                     STR_45:
  1638  007F25  4C                 	db	76	;'L'
  1639  007F26  69                 	db	105	;'i'
  1640  007F27  6E                 	db	110	;'n'
  1641  007F28  6B                 	db	107	;'k'
  1642  007F29  20                 	db	32
  1643  007F2A  6C                 	db	108	;'l'
  1644  007F2B  6F                 	db	111	;'o'
  1645  007F2C  73                 	db	115	;'s'
  1646  007F2D  74                 	db	116	;'t'
  1647  007F2E  2E                 	db	46
  1648  007F2F  0A                 	db	10
  1649  007F30  0D                 	db	13
  1650  007F31  00                 	db	0
  1651  007F32                     STR_82:
  1652  007F32  20                 	db	32
  1653  007F33  28                 	db	40
  1654  007F34  72                 	db	114	;'r'
  1655  007F35  65                 	db	101	;'e'
  1656  007F36  70                 	db	112	;'p'
  1657  007F37  6C                 	db	108	;'l'
  1658  007F38  79                 	db	121	;'y'
  1659  007F39  20                 	db	32
  1660  007F3A  74                 	db	116	;'t'
  1661  007F3B  6F                 	db	111	;'o'
  1662  007F3C  20                 	db	32
  1663  007F3D  00                 	db	0
  1664  007F3E                     STR_36:
  1665  007F3E  20                 	db	32
  1666  007F3F  64                 	db	100	;'d'
  1667  007F40  65                 	db	101	;'e'
  1668  007F41  74                 	db	116	;'t'
  1669  007F42  65                 	db	101	;'e'
  1670  007F43  63                 	db	99	;'c'
  1671  007F44  74                 	db	116	;'t'
  1672  007F45  65                 	db	101	;'e'
  1673  007F46  64                 	db	100	;'d'
  1674  007F47  2E                 	db	46
  1675  007F48  20                 	db	32
  1676  007F49  00                 	db	0
  1677  007F4A                     STR_32:
  1678  007F4A  4D                 	db	77	;'M'
  1679  007F4B  61                 	db	97	;'a'
  1680  007F4C  72                 	db	114	;'r'
  1681  007F4D  20                 	db	32
  1682  007F4E  33                 	db	51	;'3'
  1683  007F4F  31                 	db	49	;'1'
  1684  007F50  20                 	db	32
  1685  007F51  32                 	db	50	;'2'
  1686  007F52  30                 	db	48	;'0'
  1687  007F53  31                 	db	49	;'1'
  1688  007F54  39                 	db	57	;'9'
  1689  007F55  00                 	db	0
  1690  007F56                     STR_3:
  1691  007F56  5B                 	db	91	;'['
  1692  007F57  42                 	db	66	;'B'
  1693  007F58  72                 	db	114	;'r'
  1694  007F59  6F                 	db	111	;'o'
  1695  007F5A  61                 	db	97	;'a'
  1696  007F5B  64                 	db	100	;'d'
  1697  007F5C  63                 	db	99	;'c'
  1698  007F5D  61                 	db	97	;'a'
  1699  007F5E  73                 	db	115	;'s'
  1700  007F5F  74                 	db	116	;'t'
  1701  007F60  5D                 	db	93	;']'
  1702  007F61  00                 	db	0
  1703  007F62                     STR_102:
  1704  007F62  5B                 	db	91	;'['
  1705  007F63  45                 	db	69	;'E'
  1706  007F64  78                 	db	120	;'x'
  1707  007F65  70                 	db	112	;'p'
  1708  007F66  65                 	db	101	;'e'
  1709  007F67  63                 	db	99	;'c'
  1710  007F68  74                 	db	116	;'t'
  1711  007F69  65                 	db	101	;'e'
  1712  007F6A  64                 	db	100	;'d'
  1713  007F6B  20                 	db	32
  1714  007F6C  00                 	db	0
  1715  007F6D                     STR_76:
  1716  007F6D  5B                 	db	91	;'['
  1717  007F6E  49                 	db	73	;'I'
  1718  007F6F  73                 	db	115	;'s'
  1719  007F70  50                 	db	80	;'P'
  1720  007F71  72                 	db	114	;'r'
  1721  007F72  6F                 	db	111	;'o'
  1722  007F73  62                 	db	98	;'b'
  1723  007F74  65                 	db	101	;'e'
  1724  007F75  5D                 	db	93	;']'
  1725  007F76  00                 	db	0
  1726  007F77                     STR_4:
  1727  007F77  5B                 	db	91	;'['
  1728  007F78  55                 	db	85	;'U'
  1729  007F79  6E                 	db	110	;'n'
  1730  007F7A  69                 	db	105	;'i'
  1731  007F7B  63                 	db	99	;'c'
  1732  007F7C  61                 	db	97	;'a'
  1733  007F7D  73                 	db	115	;'s'
  1734  007F7E  74                 	db	116	;'t'
  1735  007F7F  5D                 	db	93	;']'
  1736  007F80  00                 	db	0
  1737  007F81                     STR_97:
  1738  007F81  5B                 	db	91	;'['
  1739  007F82  49                 	db	73	;'I'
  1740  007F83  50                 	db	80	;'P'
  1741  007F84  76                 	db	118	;'v'
  1742  007F85  34                 	db	52	;'4'
  1743  007F86  5D                 	db	93	;']'
  1744  007F87  3A                 	db	58	;':'
  1745  007F88  20                 	db	32
  1746  007F89  00                 	db	0
  1747  007F8A                     STR_61:
  1748  007F8A  20                 	db	32
  1749  007F8B  28                 	db	40
  1750  007F8C  43                 	db	67	;'C'
  1751  007F8D  6F                 	db	111	;'o'
  1752  007F8E  64                 	db	100	;'d'
  1753  007F8F  65                 	db	101	;'e'
  1754  007F90  3A                 	db	58	;':'
  1755  007F91  20                 	db	32
  1756  007F92  00                 	db	0
  1757  007F93                     STR_34:
  1758  007F93  32                 	db	50	;'2'
  1759  007F94  32                 	db	50	;'2'
  1760  007F95  3A                 	db	58	;':'
  1761  007F96  35                 	db	53	;'5'
  1762  007F97  31                 	db	49	;'1'
  1763  007F98  3A                 	db	58	;':'
  1764  007F99  34                 	db	52	;'4'
  1765  007F9A  34                 	db	52	;'4'
  1766  007F9B  00                 	db	0
  1767  007F9C                     STR_98:
  1768  007F9C  20                 	db	32
  1769  007F9D  69                 	db	105	;'i'
  1770  007F9E  73                 	db	115	;'s'
  1771  007F9F  20                 	db	32
  1772  007FA0  61                 	db	97	;'a'
  1773  007FA1  74                 	db	116	;'t'
  1774  007FA2  20                 	db	32
  1775  007FA3  00                 	db	0
  1776  007FA4                     STR_51:
  1777  007FA4  5B                 	db	91	;'['
  1778  007FA5  45                 	db	69	;'E'
  1779  007FA6  52                 	db	82	;'R'
  1780  007FA7  52                 	db	82	;'R'
  1781  007FA8  4F                 	db	79	;'O'
  1782  007FA9  52                 	db	82	;'R'
  1783  007FAA  5D                 	db	93	;']'
  1784  007FAB  00                 	db	0
  1785  007FAC                     STR_103:
  1786  007FAC  2C                 	db	44
  1787  007FAD  20                 	db	32
  1788  007FAE  67                 	db	103	;'g'
  1789  007FAF  6F                 	db	111	;'o'
  1790  007FB0  74                 	db	116	;'t'
  1791  007FB1  20                 	db	32
  1792  007FB2  00                 	db	0
  1793  007FB3                     STR_9:
  1794  007FB3  5B                 	db	91	;'['
  1795  007FB4  49                 	db	73	;'I'
  1796  007FB5  50                 	db	80	;'P'
  1797  007FB6  76                 	db	118	;'v'
  1798  007FB7  34                 	db	52	;'4'
  1799  007FB8  5D                 	db	93	;']'
  1800  007FB9  00                 	db	0
  1801  007FBA                     STR_8:
  1802  007FBA  5B                 	db	91	;'['
  1803  007FBB  41                 	db	65	;'A'
  1804  007FBC  52                 	db	82	;'R'
  1805  007FBD  50                 	db	80	;'P'
  1806  007FBE  5D                 	db	93	;']'
  1807  007FBF  00                 	db	0
  1808  007FC0                     STR_73:
  1809  007FC0  5D                 	db	93	;']'
  1810  007FC1  2D                 	db	45
  1811  007FC2  3E                 	db	62	;'>'
  1812  007FC3  5B                 	db	91	;'['
  1813  007FC4  00                 	db	0
  1814  007FC5                     STR_63:
  1815  007FC5  49                 	db	73	;'I'
  1816  007FC6  50                 	db	80	;'P'
  1817  007FC7  76                 	db	118	;'v'
  1818  007FC8  34                 	db	52	;'4'
  1819  007FC9  00                 	db	0
  1820  007FCA                     STR_66:
  1821  007FCA  49                 	db	73	;'I'
  1822  007FCB  43                 	db	67	;'C'
  1823  007FCC  4D                 	db	77	;'M'
  1824  007FCD  50                 	db	80	;'P'
  1825  007FCE  00                 	db	0
  1826  007FCF                     STR_62:
  1827  007FCF  29                 	db	41
  1828  007FD0  2E                 	db	46
  1829  007FD1  0A                 	db	10
  1830  007FD2  0D                 	db	13
  1831  007FD3  00                 	db	0
  1832  007FD4                     STR_43:
  1833  007FD4  20                 	db	32
  1834  007FD5  2D                 	db	45
  1835  007FD6  3E                 	db	62	;'>'
  1836  007FD7  20                 	db	32
  1837  007FD8  00                 	db	0
  1838  007FD9                     STR_14:
  1839  007FD9  5D                 	db	93	;']'
  1840  007FDA  5B                 	db	91	;'['
  1841  007FDB  4C                 	db	76	;'L'
  1842  007FDC  3D                 	db	61	;'='
  1843  007FDD  00                 	db	0
  1844  007FDE                     STR_67:
  1845  007FDE  54                 	db	84	;'T'
  1846  007FDF  43                 	db	67	;'C'
  1847  007FE0  50                 	db	80	;'P'
  1848  007FE1  00                 	db	0
  1849  007FE2                     STR_68:
  1850  007FE2  55                 	db	85	;'U'
  1851  007FE3  44                 	db	68	;'D'
  1852  007FE4  50                 	db	80	;'P'
  1853  007FE5  00                 	db	0
  1854  007FE6                     STR_64:
  1855  007FE6  41                 	db	65	;'A'
  1856  007FE7  52                 	db	82	;'R'
  1857  007FE8  50                 	db	80	;'P'
  1858  007FE9  00                 	db	0
  1859  007FEA                     STR_44:
  1860  007FEA  29                 	db	41
  1861  007FEB  0A                 	db	10
  1862  007FEC  0D                 	db	13
  1863  007FED  00                 	db	0
  1864  007FEE                     STR_94:
  1865  007FEE  29                 	db	41
  1866  007FEF  20                 	db	32
  1867  007FF0  00                 	db	0
  1868  007FF1                     STR_15:
  1869  007FF1  5D                 	db	93	;']'
  1870  007FF2  20                 	db	32
  1871  007FF3  00                 	db	0
  1872  007FF4                     STR_12:
  1873  007FF4  2D                 	db	45
  1874  007FF5  3E                 	db	62	;'>'
  1875  007FF6  00                 	db	0
  1876  007FF7                     STR_13:
  1877  007FF7  5D                 	db	93	;']'
  1878  007FF8  5B                 	db	91	;'['
  1879  007FF9  00                 	db	0
  1880  007FFA                     STR_19:
  1881  007FFA  29                 	db	41
  1882  007FFB  5D                 	db	93	;']'
  1883  007FFC  00                 	db	0
  1884  007FFD                     STR_27:
  1885  007FFD  12                 	db	18
  1886  007FFE  00                 	db	0
  1887  0000                     
  1888                           ; #config settings
  1889  007FFF  00                 	db	0	; dummy byte at the end
  1890  0000                     
  1891                           	psect	cinit
  1892  0046EE                     __pcinit:
  1893                           	opt stack 0
  1894  0046EE                     start_initialization:
  1895                           	opt stack 0
  1896  0046EE                     __initialization:
  1897                           	opt stack 0
  1898                           
  1899                           ; Initialize objects allocated to BANK2 (46 bytes)
  1900                           ; load TBLPTR registers with __pidataBANK2
  1901  0046EE  0E42               	movlw	low __pidataBANK2
  1902  0046F0  6EF6               	movwf	tblptrl,c
  1903  0046F2  0E54               	movlw	high __pidataBANK2
  1904  0046F4  6EF7               	movwf	tblptrh,c
  1905  0046F6  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1906  0046F8  6EF8               	movwf	tblptru,c
  1907  0046FA  EE02  F0D2         	lfsr	0,__pdataBANK2
  1908  0046FE  EE10 F02E          	lfsr	1,46
  1909  004702                     copy_data0:
  1910  004702  0009               	tblrd		*+
  1911  004704  CFF5 FFEE          	movff	tablat,postinc0
  1912  004708  50E5               	movf	postdec1,w,c
  1913  00470A  50E1               	movf	fsr1l,w,c
  1914  00470C  E1FA               	bnz	copy_data0
  1915                           
  1916                           ; Initialize objects allocated to COMRAM (6 bytes)
  1917                           ; load TBLPTR registers with __pidataCOMRAM
  1918  00470E  0E4A               	movlw	low __pidataCOMRAM
  1919  004710  6EF6               	movwf	tblptrl,c
  1920  004712  0E58               	movlw	high __pidataCOMRAM
  1921  004714  6EF7               	movwf	tblptrh,c
  1922  004716  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1923  004718  6EF8               	movwf	tblptru,c
  1924  00471A  EE00  F048         	lfsr	0,__pdataCOMRAM
  1925  00471E  EE10 F006          	lfsr	1,6
  1926  004722                     copy_data1:
  1927  004722  0009               	tblrd		*+
  1928  004724  CFF5 FFEE          	movff	tablat,postinc0
  1929  004728  50E5               	movf	postdec1,w,c
  1930  00472A  50E1               	movf	fsr1l,w,c
  1931  00472C  E1FA               	bnz	copy_data1
  1932                           
  1933                           ; Clear objects allocated to BANK3 (162 bytes)
  1934  00472E  EE03  F000         	lfsr	0,__pbssBANK3
  1935  004732  0EA2               	movlw	162
  1936  004734                     clear_0:
  1937  004734  6AEE               	clrf	postinc0,c
  1938  004736  06E8               	decf	wreg,f,c
  1939  004738  E1FD               	bnz	clear_0
  1940                           
  1941                           ; Clear objects allocated to BANK2 (210 bytes)
  1942  00473A  EE02  F000         	lfsr	0,__pbssBANK2
  1943  00473E  0ED2               	movlw	210
  1944  004740                     clear_1:
  1945  004740  6AEE               	clrf	postinc0,c
  1946  004742  06E8               	decf	wreg,f,c
  1947  004744  E1FD               	bnz	clear_1
  1948                           
  1949                           ; Clear objects allocated to BANK1 (56 bytes)
  1950  004746  EE01  F0C2         	lfsr	0,__pbssBANK1
  1951  00474A  0E38               	movlw	56
  1952  00474C                     clear_2:
  1953  00474C  6AEE               	clrf	postinc0,c
  1954  00474E  06E8               	decf	wreg,f,c
  1955  004750  E1FD               	bnz	clear_2
  1956                           
  1957                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  1958  004752  6A4E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  1959                           
  1960                           ; Clear objects allocated to COMRAM (31 bytes)
  1961  004754  EE00  F029         	lfsr	0,__pbssCOMRAM
  1962  004758  0E1F               	movlw	31
  1963  00475A                     clear_3:
  1964  00475A  6AEE               	clrf	postinc0,c
  1965  00475C  06E8               	decf	wreg,f,c
  1966  00475E  E1FD               	bnz	clear_3
  1967  004760                     end_of_initialization:
  1968                           	opt stack 0
  1969  004760                     __end_of__initialization:
  1970                           	opt stack 0
  1971  004760  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1972  004762  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1973  004764  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1974  004766  6EF8               	movwf	tblptru,c
  1975  004768  0100               	movlb	0
  1976  00476A  EF6D  F005         	goto	_main	;jump to C main() function
  1977                           tblptru	equ	0xFF8
  1978                           tblptrh	equ	0xFF7
  1979                           tblptrl	equ	0xFF6
  1980                           tablat	equ	0xFF5
  1981                           postinc0	equ	0xFEE
  1982                           wreg	equ	0xFE8
  1983                           postdec1	equ	0xFE5
  1984                           fsr1l	equ	0xFE1
  1985                           
  1986                           	psect	bitbssCOMRAM
  1987  000270                     __pbitbssCOMRAM:
  1988                           	opt stack 0
  1989  000270                     _fSrcAddrChanged:
  1990                           	opt stack 0
  1991  000270                     	ds	1
  1992  000271                     	ds	1
  1993                           tblptru	equ	0xFF8
  1994                           tblptrh	equ	0xFF7
  1995                           tblptrl	equ	0xFF6
  1996                           tablat	equ	0xFF5
  1997                           postinc0	equ	0xFEE
  1998                           wreg	equ	0xFE8
  1999                           postdec1	equ	0xFE5
  2000                           fsr1l	equ	0xFE1
  2001                           
  2002                           	psect	bssCOMRAM
  2003  000029                     __pbssCOMRAM:
  2004                           	opt stack 0
  2005  000029                     _time:
  2006                           	opt stack 0
  2007  000029                     	ds	4
  2008  00002D                     buttonHandler@debounceCounter:
  2009                           	opt stack 0
  2010  00002D                     	ds	4
  2011  000031                     _numberToDisplay:
  2012                           	opt stack 0
  2013  000031                     	ds	4
  2014  000035                     ethernet_rxGetNewFrame@counter:
  2015                           	opt stack 0
  2016  000035                     	ds	4
  2017  000039                     sevenSegmentUpdate@digitsToDisplay:
  2018                           	opt stack 0
  2019  000039                     	ds	3
  2020  00003C                     _arpStatus:
  2021                           	opt stack 0
  2022  00003C                     	ds	2
  2023  00003E                     ethernetController_streamToTransmitBuffer@pointer:
  2024                           	opt stack 0
  2025  00003E                     	ds	2
  2026  000040                     ethernetController_softReset@F5990:
  2027                           	opt stack 0
  2028  000040                     	ds	2
  2029  000042                     _nextPacketPointer:
  2030                           	opt stack 0
  2031  000042                     	ds	2
  2032  000044                     sevenSegmentUpdate@digitPointer:
  2033                           	opt stack 0
  2034  000044                     	ds	1
  2035  000045                     buttonHandler@newState:
  2036                           	opt stack 0
  2037  000045                     	ds	1
  2038  000046                     buttonHandler@oldState:
  2039                           	opt stack 0
  2040  000046                     	ds	1
  2041  000047                     	ds	1
  2042                           tblptru	equ	0xFF8
  2043                           tblptrh	equ	0xFF7
  2044                           tblptrl	equ	0xFF6
  2045                           tablat	equ	0xFF5
  2046                           postinc0	equ	0xFEE
  2047                           wreg	equ	0xFE8
  2048                           postdec1	equ	0xFE5
  2049                           fsr1l	equ	0xFE1
  2050                           
  2051                           	psect	dataCOMRAM
  2052  000048                     __pdataCOMRAM:
  2053                           	opt stack 0
  2054  000048                     _randx:
  2055                           	opt stack 0
  2056  000048                     	ds	4
  2057  00004C                     ethernetController_softReset@F5988:
  2058                           	opt stack 0
  2059  00004C                     	ds	2
  2060                           tblptru	equ	0xFF8
  2061                           tblptrh	equ	0xFF7
  2062                           tblptrl	equ	0xFF6
  2063                           tablat	equ	0xFF5
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           postdec1	equ	0xFE5
  2067                           fsr1l	equ	0xFE1
  2068                           
  2069                           	psect	bssBANK1
  2070  0001C2                     __pbssBANK1:
  2071                           	opt stack 0
  2072  0001C2                     ipv4_sendFrame@oldTime:
  2073                           	opt stack 0
  2074  0001C2                     	ds	4
  2075  0001C6                     arp_background@ipPreliminary:
  2076                           	opt stack 0
  2077  0001C6                     	ds	4
  2078  0001CA                     arp_gratuitous@timeStart:
  2079                           	opt stack 0
  2080  0001CA                     	ds	4
  2081  0001CE                     ipv4_sendFrame@failedResolveCounter:
  2082                           	opt stack 0
  2083  0001CE                     	ds	1
  2084  0001CF                     arp_background@state:
  2085                           	opt stack 0
  2086  0001CF                     	ds	1
  2087  0001D0                     arp_gratuitous@state:
  2088                           	opt stack 0
  2089  0001D0                     	ds	1
  2090  0001D1                     arp_gratuitous@announceCounter:
  2091                           	opt stack 0
  2092  0001D1                     	ds	1
  2093  0001D2                     arp_probe@state:
  2094                           	opt stack 0
  2095  0001D2                     	ds	1
  2096  0001D3                     arp_probe@probeCounter:
  2097                           	opt stack 0
  2098  0001D3                     	ds	1
  2099  0001D4                     hexToString@number:
  2100                           	opt stack 0
  2101  0001D4                     	ds	10
  2102  0001DE                     intToString@number:
  2103                           	opt stack 0
  2104  0001DE                     	ds	10
  2105  0001E8                     ethernetController_getRSV@temp:
  2106                           	opt stack 0
  2107  0001E8                     	ds	6
  2108  0001EE                     _ipPreliminarySource:
  2109                           	opt stack 0
  2110  0001EE                     	ds	4
  2111  0001F2                     _ipSource:
  2112                           	opt stack 0
  2113  0001F2                     	ds	4
  2114  0001F6                     arp_background@err:
  2115                           	opt stack 0
  2116  0001F6                     	ds	3
  2117  0001F9                     _buttonState:
  2118                           	opt stack 0
  2119  0001F9                     	ds	1
  2120                           tblptru	equ	0xFF8
  2121                           tblptrh	equ	0xFF7
  2122                           tblptrl	equ	0xFF6
  2123                           tablat	equ	0xFF5
  2124                           postinc0	equ	0xFEE
  2125                           wreg	equ	0xFE8
  2126                           postdec1	equ	0xFE5
  2127                           fsr1l	equ	0xFE1
  2128                           
  2129                           	psect	bssBANK2
  2130  000200                     __pbssBANK2:
  2131                           	opt stack 0
  2132  000200                     _occupiedMemory:
  2133                           	opt stack 0
  2134  000200                     	ds	72
  2135  000248                     printEthernetState@oldState:
  2136                           	opt stack 0
  2137  000248                     	ds	15
  2138  000257                     _stack:
  2139                           	opt stack 0
  2140  000257                     	ds	123
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           postinc0	equ	0xFEE
  2146                           wreg	equ	0xFE8
  2147                           postdec1	equ	0xFE5
  2148                           fsr1l	equ	0xFE1
  2149                           
  2150                           	psect	dataBANK2
  2151  0002D2                     __pdataBANK2:
  2152                           	opt stack 0
  2153  0002D2                     macToString@F5948:
  2154                           	opt stack 0
  2155  0002D2                     	ds	18
  2156  0002E4                     _sevenSegCharacters:
  2157                           	opt stack 0
  2158  0002E4                     	ds	12
  2159  0002F0                     ipAdressToString@address:
  2160                           	opt stack 0
  2161  0002F0                     	ds	16
  2162                           tblptru	equ	0xFF8
  2163                           tblptrh	equ	0xFF7
  2164                           tblptrl	equ	0xFF6
  2165                           tablat	equ	0xFF5
  2166                           postinc0	equ	0xFEE
  2167                           wreg	equ	0xFE8
  2168                           postdec1	equ	0xFE5
  2169                           fsr1l	equ	0xFE1
  2170                           
  2171                           	psect	bssBANK3
  2172  000300                     __pbssBANK3:
  2173                           	opt stack 0
  2174  000300                     _arp_table:
  2175                           	opt stack 0
  2176  000300                     	ds	112
  2177  000370                     arpEntryToString@string:
  2178                           	opt stack 0
  2179  000370                     	ds	50
  2180                           tblptru	equ	0xFF8
  2181                           tblptrh	equ	0xFF7
  2182                           tblptrl	equ	0xFF6
  2183                           tablat	equ	0xFF5
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           postdec1	equ	0xFE5
  2187                           fsr1l	equ	0xFE1
  2188                           
  2189                           	psect	cstackBANK1
  2190  000100                     __pcstackBANK1:
  2191                           	opt stack 0
  2192  000100                     arp_sendRequest@ipSender:
  2193                           	opt stack 0
  2194  000100                     arp_sendReply@request:
  2195                           	opt stack 0
  2196                           
  2197                           ; 32 bytes @ 0x0
  2198  000100                     	ds	4
  2199  000104                     arp_sendRequest@ipTarget:
  2200                           	opt stack 0
  2201                           
  2202                           ; 4 bytes @ 0x4
  2203  000104                     	ds	4
  2204  000108                     arp_sendRequest@senderMAC:
  2205                           	opt stack 0
  2206                           
  2207                           ; 6 bytes @ 0x8
  2208  000108                     	ds	6
  2209  00010E                     arp_sendRequest@targetMAC:
  2210                           	opt stack 0
  2211                           
  2212                           ; 6 bytes @ 0xE
  2213  00010E                     	ds	6
  2214  000114                     arp_sendRequest@request:
  2215                           	opt stack 0
  2216                           
  2217                           ; 32 bytes @ 0x14
  2218  000114                     	ds	12
  2219  000120                     arp_sendReply@senderMAC:
  2220                           	opt stack 0
  2221                           
  2222                           ; 6 bytes @ 0x20
  2223  000120                     	ds	6
  2224  000126                     arp_sendReply@targetMAC:
  2225                           	opt stack 0
  2226                           
  2227                           ; 6 bytes @ 0x26
  2228  000126                     	ds	6
  2229  00012C                     arp_sendReply@senderIP:
  2230                           	opt stack 0
  2231                           
  2232                           ; 4 bytes @ 0x2C
  2233  00012C                     	ds	4
  2234  000130                     arp_sendReply@targetIP:
  2235                           	opt stack 0
  2236                           
  2237                           ; 4 bytes @ 0x30
  2238  000130                     	ds	4
  2239  000134                     ?_ipv4_sendFrame:
  2240                           	opt stack 0
  2241  000134                     ?_arp_probe:
  2242                           	opt stack 0
  2243  000134                     ?_arp_gratuitous:
  2244                           	opt stack 0
  2245  000134                     arp_sendReply@myIP:
  2246                           	opt stack 0
  2247  000134                     arp_probe@ipTarget:
  2248                           	opt stack 0
  2249  000134                     arp_gratuitous@ip:
  2250                           	opt stack 0
  2251  000134                     ipv4_sendFrame@ipPacket:
  2252                           	opt stack 0
  2253                           
  2254                           ; 66 bytes @ 0x34
  2255  000134                     	ds	4
  2256  000138                     arp_probe@link:
  2257                           	opt stack 0
  2258  000138                     arp_gratuitous@link:
  2259                           	opt stack 0
  2260  000138                     arp_sendReply@reply:
  2261                           	opt stack 0
  2262                           
  2263                           ; 32 bytes @ 0x38
  2264  000138                     	ds	1
  2265  000139                     ??_arp_probe:
  2266  000139                     ??_arp_gratuitous:
  2267                           
  2268                           ; 1 bytes @ 0x39
  2269  000139                     	ds	8
  2270  000141                     arp_probe@index:
  2271                           	opt stack 0
  2272                           
  2273                           ; 1 bytes @ 0x41
  2274  000141                     	ds	1
  2275  000142                     arp_probe@timeStart:
  2276                           	opt stack 0
  2277                           
  2278                           ; 4 bytes @ 0x42
  2279  000142                     	ds	4
  2280  000146                     arp_probe@waitingTime:
  2281                           	opt stack 0
  2282                           
  2283                           ; 4 bytes @ 0x46
  2284  000146                     	ds	4
  2285  00014A                     arp_probe@ipSender:
  2286                           	opt stack 0
  2287                           
  2288                           ; 4 bytes @ 0x4A
  2289  00014A                     	ds	4
  2290  00014E                     arp_probe@err:
  2291                           	opt stack 0
  2292                           
  2293                           ; 3 bytes @ 0x4E
  2294  00014E                     	ds	3
  2295  000151                     ?_arp_background:
  2296                           	opt stack 0
  2297                           
  2298                           ; 3 bytes @ 0x51
  2299  000151                     	ds	3
  2300  000154                     ??_arp_background:
  2301                           
  2302                           ; 1 bytes @ 0x54
  2303  000154                     	ds	2
  2304  000156                     arp_background@link:
  2305                           	opt stack 0
  2306                           
  2307                           ; 1 bytes @ 0x56
  2308  000156                     	ds	1
  2309  000157                     arp_background@errAnnounce:
  2310                           	opt stack 0
  2311                           
  2312                           ; 3 bytes @ 0x57
  2313  000157                     	ds	1
  2314  000158                     arp_handleNewPacket@arp:
  2315                           	opt stack 0
  2316                           
  2317                           ; 32 bytes @ 0x58
  2318  000158                     	ds	2
  2319  00015A                     arp_background@errProbe:
  2320                           	opt stack 0
  2321                           
  2322                           ; 3 bytes @ 0x5A
  2323  00015A                     	ds	28
  2324  000176                     ??_ipv4_sendFrame:
  2325                           
  2326                           ; 1 bytes @ 0x76
  2327  000176                     	ds	2
  2328  000178                     ethernet_rxGetNewFrame@frame:
  2329                           	opt stack 0
  2330                           
  2331                           ; 2 bytes @ 0x78
  2332  000178                     	ds	2
  2333  00017A                     ??_ethernet_rxGetNewFrame:
  2334                           
  2335                           ; 1 bytes @ 0x7A
  2336  00017A                     	ds	8
  2337  000182                     ethernet_rxGetNewFrame@err:
  2338                           	opt stack 0
  2339                           
  2340                           ; 3 bytes @ 0x82
  2341  000182                     	ds	3
  2342  000185                     handleStackBackgroundTasks@stack:
  2343                           	opt stack 0
  2344                           
  2345                           ; 2 bytes @ 0x85
  2346  000185                     	ds	2
  2347  000187                     ??_handleStackBackgroundTasks:
  2348                           
  2349                           ; 1 bytes @ 0x87
  2350  000187                     	ds	2
  2351  000189                     handleStackBackgroundTasks@errArp:
  2352                           	opt stack 0
  2353                           
  2354                           ; 3 bytes @ 0x89
  2355  000189                     	ds	3
  2356  00018C                     handleStackBackgroundTasks@intf:
  2357                           	opt stack 0
  2358                           
  2359                           ; 2 bytes @ 0x8C
  2360  00018C                     	ds	2
  2361  00018E                     handleStackBackgroundTasks@errIPv4:
  2362                           	opt stack 0
  2363                           
  2364                           ; 3 bytes @ 0x8E
  2365  00018E                     	ds	3
  2366  000191                     ??_main:
  2367                           
  2368                           ; 1 bytes @ 0x91
  2369  000191                     	ds	3
  2370  000194                     main@prescaler:
  2371                           	opt stack 0
  2372                           
  2373                           ; 4 bytes @ 0x94
  2374  000194                     	ds	4
  2375  000198                     main@headerBuf:
  2376                           	opt stack 0
  2377                           
  2378                           ; 32 bytes @ 0x98
  2379  000198                     	ds	32
  2380  0001B8                     _main$2409:
  2381                           	opt stack 0
  2382                           
  2383                           ; 2 bytes @ 0xB8
  2384  0001B8                     	ds	2
  2385  0001BA                     main@i:
  2386                           	opt stack 0
  2387                           
  2388                           ; 1 bytes @ 0xBA
  2389  0001BA                     	ds	1
  2390  0001BB                     main@err:
  2391                           	opt stack 0
  2392                           
  2393                           ; 3 bytes @ 0xBB
  2394  0001BB                     	ds	3
  2395  0001BE                     main@ipDst:
  2396                           	opt stack 0
  2397                           
  2398                           ; 4 bytes @ 0xBE
  2399  0001BE                     	ds	4
  2400                           tblptru	equ	0xFF8
  2401                           tblptrh	equ	0xFF7
  2402                           tblptrl	equ	0xFF6
  2403                           tablat	equ	0xFF5
  2404                           postinc0	equ	0xFEE
  2405                           wreg	equ	0xFE8
  2406                           postdec1	equ	0xFE5
  2407                           fsr1l	equ	0xFE1
  2408                           
  2409                           	psect	cstackBANK0
  2410  000060                     __pcstackBANK0:
  2411                           	opt stack 0
  2412  000060                     ?_enc424j600_getNextPacketPointer:
  2413                           	opt stack 0
  2414  000060                     ?_ethernetController_getDeviceName:
  2415                           	opt stack 0
  2416  000060                     ?_etherTypeToString:
  2417                           	opt stack 0
  2418  000060                     ?_ipProtocolToString:
  2419                           	opt stack 0
  2420  000060                     ?___wmul:
  2421                           	opt stack 0
  2422  000060                     ?___lwdiv:
  2423                           	opt stack 0
  2424  000060                     ?_getMillis:
  2425                           	opt stack 0
  2426  000060                     ?_ipv4_getIPSourceAddress:
  2427                           	opt stack 0
  2428  000060                     ?_ipv4_getPreliminaryIPSourceAddress:
  2429                           	opt stack 0
  2430  000060                     ?___lmul:
  2431                           	opt stack 0
  2432  000060                     ?___lldiv:
  2433                           	opt stack 0
  2434  000060                     ?___llmod:
  2435                           	opt stack 0
  2436  000060                     ?_enc424j600_updateReceiveStatusVector:
  2437                           	opt stack 0
  2438  000060                     ?_arp_getEntryFromTable:
  2439                           	opt stack 0
  2440  000060                     entireMemoryEmpty@i:
  2441                           	opt stack 0
  2442  000060                     entireMemoryFull@i:
  2443                           	opt stack 0
  2444  000060                     memory_txFrameClear@index:
  2445                           	opt stack 0
  2446  000060                     hexToChar@val:
  2447                           	opt stack 0
  2448  000060                     enc424j600_writeSPI@data:
  2449                           	opt stack 0
  2450  000060                     enc424j600_readSPI@data:
  2451                           	opt stack 0
  2452  000060                     enc424j600_setNextPacketPointer@ptr:
  2453                           	opt stack 0
  2454  000060                     enc424j600_updateReceiveStatusVector@rsv:
  2455                           	opt stack 0
  2456  000060                     mac_setToBroadcast@mac:
  2457                           	opt stack 0
  2458  000060                     mac_isAllZero@mac:
  2459                           	opt stack 0
  2460  000060                     mac_cmp@a:
  2461                           	opt stack 0
  2462  000060                     mac_setAllZero@mac:
  2463                           	opt stack 0
  2464  000060                     etherTypeToString@ethertype:
  2465                           	opt stack 0
  2466  000060                     ipv4_calculateHeaderChecksum@header:
  2467                           	opt stack 0
  2468  000060                     ipv4_SrcAddrChanged@err:
  2469                           	opt stack 0
  2470  000060                     ipv4_cmp@a:
  2471                           	opt stack 0
  2472  000060                     ipv4_isAllZero@ip:
  2473                           	opt stack 0
  2474  000060                     ipv4_setToAllZero@ip:
  2475                           	opt stack 0
  2476  000060                     ___wmul@multiplier:
  2477                           	opt stack 0
  2478  000060                     ___lwdiv@dividend:
  2479                           	opt stack 0
  2480  000060                     ipv4_setIPSourceAddress@ip:
  2481                           	opt stack 0
  2482  000060                     ___lmul@multiplier:
  2483                           	opt stack 0
  2484  000060                     ___lldiv@dividend:
  2485                           	opt stack 0
  2486  000060                     ___llmod@dividend:
  2487                           	opt stack 0
  2488  000060                     checkForOverlapSwitched@a:
  2489                           	opt stack 0
  2490  000060                     ipv4_writeHeaderIntoBuffer@header:
  2491                           	opt stack 0
  2492                           
  2493                           ; 23 bytes @ 0x0
  2494  000060                     	ds	1
  2495  000061                     ?_hexToString:
  2496                           	opt stack 0
  2497  000061                     hexToString@val:
  2498                           	opt stack 0
  2499                           
  2500                           ; 4 bytes @ 0x1
  2501  000061                     	ds	1
  2502  000062                     ??_enc424j600_writeSPI:
  2503  000062                     ??_enc424j600_readSPI:
  2504  000062                     ??_etherTypeToString:
  2505  000062                     ??_ipv4_calculateHeaderChecksum:
  2506  000062                     ?_ethernetController_getNextPacketPointer:
  2507                           	opt stack 0
  2508  000062                     mac_setToBroadcast@i:
  2509                           	opt stack 0
  2510  000062                     mac_isAllZero@i:
  2511                           	opt stack 0
  2512  000062                     mac_setAllZero@i:
  2513                           	opt stack 0
  2514  000062                     ipProtocolToString@protocol:
  2515                           	opt stack 0
  2516  000062                     ipv4_isAllZero@i:
  2517                           	opt stack 0
  2518  000062                     ipv4_setToAllZero@i:
  2519                           	opt stack 0
  2520  000062                     mac_cmp@b:
  2521                           	opt stack 0
  2522  000062                     ipv4_cmp@b:
  2523                           	opt stack 0
  2524  000062                     ___wmul@multiplicand:
  2525                           	opt stack 0
  2526  000062                     ___lwdiv@divisor:
  2527                           	opt stack 0
  2528  000062                     ethernetController_getDeviceName@string:
  2529                           	opt stack 0
  2530                           
  2531                           ; 11 bytes @ 0x2
  2532  000062                     	ds	1
  2533  000063                     
  2534                           ; 1 bytes @ 0x3
  2535  000063                     	ds	1
  2536  000064                     ___lwdiv@counter:
  2537                           	opt stack 0
  2538  000064                     ___wmul@product:
  2539                           	opt stack 0
  2540  000064                     ___lmul@multiplicand:
  2541                           	opt stack 0
  2542  000064                     ___lldiv@divisor:
  2543                           	opt stack 0
  2544  000064                     ___llmod@divisor:
  2545                           	opt stack 0
  2546                           
  2547                           ; 4 bytes @ 0x4
  2548  000064                     	ds	1
  2549  000065                     ??_enc424j600_updateReceiveStatusVector:
  2550  000065                     ??_hexToString:
  2551  000065                     ___lwdiv@quotient:
  2552                           	opt stack 0
  2553                           
  2554                           ; 2 bytes @ 0x5
  2555  000065                     	ds	1
  2556  000066                     mac_cmp@i:
  2557                           	opt stack 0
  2558  000066                     ipv4_cmp@i:
  2559                           	opt stack 0
  2560  000066                     enc424j600_writeSPI@timeoutCounter:
  2561                           	opt stack 0
  2562  000066                     enc424j600_readSPI@timeoutCounter:
  2563                           	opt stack 0
  2564                           
  2565                           ; 4 bytes @ 0x6
  2566  000066                     	ds	1
  2567  000067                     arp_getEntryFromTable@index:
  2568                           	opt stack 0
  2569  000067                     arp_checkForEntry@ip:
  2570                           	opt stack 0
  2571                           
  2572                           ; 4 bytes @ 0x7
  2573  000067                     	ds	1
  2574  000068                     ___llmod@counter:
  2575                           	opt stack 0
  2576  000068                     ___lmul@product:
  2577                           	opt stack 0
  2578  000068                     ___lldiv@quotient:
  2579                           	opt stack 0
  2580                           
  2581                           ; 4 bytes @ 0x8
  2582  000068                     	ds	1
  2583  000069                     hexToString@pointer:
  2584                           	opt stack 0
  2585  000069                     checkForOverlapSwitched@b:
  2586                           	opt stack 0
  2587                           
  2588                           ; 9 bytes @ 0x9
  2589  000069                     	ds	1
  2590  00006A                     enc424j600_writeSingleByte@opcode:
  2591                           	opt stack 0
  2592  00006A                     enc424j600_writeControlRegisterUnbanked@data:
  2593                           	opt stack 0
  2594  00006A                     enc424j600_readControlRegisterUnbanked@data:
  2595                           	opt stack 0
  2596  00006A                     enc424j600_setGPDATAWritePointer@addr:
  2597                           	opt stack 0
  2598  00006A                     enc424j600_setERXDATAReadPointer@addr:
  2599                           	opt stack 0
  2600                           
  2601                           ; 2 bytes @ 0xA
  2602  00006A                     	ds	1
  2603  00006B                     arp_checkForEntry@index:
  2604                           	opt stack 0
  2605                           
  2606                           ; 2 bytes @ 0xB
  2607  00006B                     	ds	1
  2608  00006C                     ?_rand:
  2609                           	opt stack 0
  2610  00006C                     enc424j600_writeControlRegisterUnbanked@addr:
  2611                           	opt stack 0
  2612  00006C                     enc424j600_readControlRegisterUnbanked@addr:
  2613                           	opt stack 0
  2614  00006C                     enc424j600_setGPDATAWritePointer@opcode:
  2615                           	opt stack 0
  2616  00006C                     enc424j600_setERXDATAReadPointer@opcode:
  2617                           	opt stack 0
  2618  00006C                     ___lldiv@counter:
  2619                           	opt stack 0
  2620  00006C                     enc424j600_updateReceiveStatusVector@receiveStatusVector:
  2621                           	opt stack 0
  2622                           
  2623                           ; 5 bytes @ 0xC
  2624  00006C                     	ds	1
  2625  00006D                     ??_arp_checkForEntry:
  2626  00006D                     enc424j600_writeControlRegisterUnbanked@opcode:
  2627                           	opt stack 0
  2628  00006D                     enc424j600_readControlRegisterUnbanked@opcode:
  2629                           	opt stack 0
  2630  00006D                     enc424j600_setGPDATAWritePointer@lowByte:
  2631                           	opt stack 0
  2632  00006D                     enc424j600_setERXDATAReadPointer@lowByte:
  2633                           	opt stack 0
  2634  00006D                     ultoa@buf:
  2635                           	opt stack 0
  2636                           
  2637                           ; 2 bytes @ 0xD
  2638  00006D                     	ds	1
  2639  00006E                     ??_enc424j600_clearInterruptFlag:
  2640  00006E                     ?_enc424j600_getInterruptFlags:
  2641                           	opt stack 0
  2642  00006E                     ?___awmod:
  2643                           	opt stack 0
  2644  00006E                     ?___lwmod:
  2645                           	opt stack 0
  2646  00006E                     ?_ethernetController_softReset:
  2647                           	opt stack 0
  2648  00006E                     ?_ethernetController_checkDeviceId:
  2649                           	opt stack 0
  2650  00006E                     ?_ethernetController_getMacAddress:
  2651                           	opt stack 0
  2652  00006E                     ethernetController_setLEDConfig@conf:
  2653                           	opt stack 0
  2654  00006E                     enc424j600_getPacketCount@lowByte:
  2655                           	opt stack 0
  2656  00006E                     enc424j600_setGPDATAWritePointer@highByte:
  2657                           	opt stack 0
  2658  00006E                     enc424j600_setERXDATAReadPointer@highByte:
  2659                           	opt stack 0
  2660  00006E                     enc424j600_enableAutoMACInsertion@temp:
  2661                           	opt stack 0
  2662  00006E                     enc424j600_readPHYRegister@data:
  2663                           	opt stack 0
  2664  00006E                     enc424j600_setTXLength@len:
  2665                           	opt stack 0
  2666  00006E                     enc424j600_setTXStartAddress@addr:
  2667                           	opt stack 0
  2668  00006E                     enc424j600_setRXBufferStartAddress@addr:
  2669                           	opt stack 0
  2670  00006E                     enc424j600_setRXTailPointer@addr:
  2671                           	opt stack 0
  2672  00006E                     ___awmod@dividend:
  2673                           	opt stack 0
  2674  00006E                     ___lwmod@dividend:
  2675                           	opt stack 0
  2676  00006E                     ipv4_calculateHeaderChecksum@sum:
  2677                           	opt stack 0
  2678                           
  2679                           ; 4 bytes @ 0xE
  2680  00006E                     	ds	1
  2681  00006F                     ??_ethernetController_updateNextPacketPointer:
  2682  00006F                     ?_ethernetController_getEtherTypeField:
  2683                           	opt stack 0
  2684  00006F                     ?_ethernetController_getSourceMACAddress:
  2685                           	opt stack 0
  2686  00006F                     ethernetController_setLEDConfig@LED:
  2687                           	opt stack 0
  2688  00006F                     ethernetController_writeEtherTypeFieldToBuffer@ethtype:
  2689                           	opt stack 0
  2690  00006F                     ethernetController_streamFromRXBuffer@startAddress:
  2691                           	opt stack 0
  2692  00006F                     ultoa@val:
  2693                           	opt stack 0
  2694  00006F                     ethernetController_writeDestinationMACAddress@addr:
  2695                           	opt stack 0
  2696  00006F                     ethernetController_streamToTransmitBuffer@field:
  2697                           	opt stack 0
  2698  00006F                     ethernetController_getSourceMACAddress@field:
  2699                           	opt stack 0
  2700  00006F                     ethernetController_getEtherTypeField@field:
  2701                           	opt stack 0
  2702                           
  2703                           ; 9 bytes @ 0xF
  2704  00006F                     	ds	1
  2705  000070                     ??_enc424j600_getInterruptFlags:
  2706  000070                     ??_enc424j600_readPHYRegister:
  2707  000070                     ethernetController_setLEDConfig@data:
  2708                           	opt stack 0
  2709  000070                     enc424j600_setTXLength@lowByte:
  2710                           	opt stack 0
  2711  000070                     enc424j600_setTXStartAddress@lowByte:
  2712                           	opt stack 0
  2713  000070                     enc424j600_setRXBufferStartAddress@lowByte:
  2714                           	opt stack 0
  2715  000070                     enc424j600_setRXTailPointer@lowByte:
  2716                           	opt stack 0
  2717  000070                     enc424j600_clearInterruptFlag@flag:
  2718                           	opt stack 0
  2719  000070                     ___awmod@divisor:
  2720                           	opt stack 0
  2721  000070                     ___lwmod@divisor:
  2722                           	opt stack 0
  2723                           
  2724                           ; 2 bytes @ 0x10
  2725  000070                     	ds	1
  2726  000071                     ??_ethernetController_softReset:
  2727  000071                     ?_ethernetController_getRSV:
  2728                           	opt stack 0
  2729  000071                     ethernetController_checkDeviceId@data:
  2730                           	opt stack 0
  2731  000071                     ethernetController_streamFromRXBuffer@startEnd:
  2732                           	opt stack 0
  2733  000071                     enc424j600_setTXLength@highByte:
  2734                           	opt stack 0
  2735  000071                     enc424j600_setTXStartAddress@highByte:
  2736                           	opt stack 0
  2737  000071                     enc424j600_setRXBufferStartAddress@highByte:
  2738                           	opt stack 0
  2739  000071                     enc424j600_setRXTailPointer@highByte:
  2740                           	opt stack 0
  2741  000071                     enc424j600_clearInterruptFlag@temp:
  2742                           	opt stack 0
  2743  000071                     ethernetController_getRSV@address:
  2744                           	opt stack 0
  2745  000071                     ethernetController_writeEtherTypeFieldToBuffer@field:
  2746                           	opt stack 0
  2747                           
  2748                           ; 9 bytes @ 0x11
  2749  000071                     	ds	1
  2750  000072                     ?_ethernetController_dropPacket:
  2751                           	opt stack 0
  2752  000072                     ethernetController_softReset@comFailCount:
  2753                           	opt stack 0
  2754  000072                     ethernetController_clearInterruptFlag@flag:
  2755                           	opt stack 0
  2756  000072                     ethernetController_streamFromRXBuffer@opcode:
  2757                           	opt stack 0
  2758  000072                     ___awmod@counter:
  2759                           	opt stack 0
  2760  000072                     ___lwmod@counter:
  2761                           	opt stack 0
  2762  000072                     ethernetController_checkDeviceId@err:
  2763                           	opt stack 0
  2764  000072                     ethernetController_sendPacket@field:
  2765                           	opt stack 0
  2766  000072                     checkForOverlap@a:
  2767                           	opt stack 0
  2768                           
  2769                           ; 9 bytes @ 0x12
  2770  000072                     	ds	1
  2771  000073                     ?_ipAdressToString:
  2772                           	opt stack 0
  2773  000073                     ethernetController_streamFromRXBuffer@temp:
  2774                           	opt stack 0
  2775  000073                     ___awmod@sign:
  2776                           	opt stack 0
  2777  000073                     ethernetController_softReset@dataToSend:
  2778                           	opt stack 0
  2779  000073                     ultoa@base:
  2780                           	opt stack 0
  2781  000073                     ipAdressToString@ip:
  2782                           	opt stack 0
  2783                           
  2784                           ; 4 bytes @ 0x13
  2785  000073                     	ds	1
  2786  000074                     ?_ipv4_generateAutoIP:
  2787                           	opt stack 0
  2788  000074                     ?_ipv4_parseHeader:
  2789                           	opt stack 0
  2790  000074                     ?_arp_parseFromRXBuffer:
  2791                           	opt stack 0
  2792  000074                     arp_parseFromRXBuffer@frame:
  2793                           	opt stack 0
  2794  000074                     ipv4_parseHeader@field:
  2795                           	opt stack 0
  2796  000074                     ethernetController_getMacAddress@mac:
  2797                           	opt stack 0
  2798                           
  2799                           ; 6 bytes @ 0x14
  2800  000074                     	ds	1
  2801  000075                     arp_checkForEntry@i:
  2802                           	opt stack 0
  2803  000075                     ethernetController_softReset@receivedData:
  2804                           	opt stack 0
  2805  000075                     ethernetController_updateNextPacketPointer@nextPktPointer:
  2806                           	opt stack 0
  2807  000075                     ultoa@v:
  2808                           	opt stack 0
  2809  000075                     ethernetController_writeDestinationMACAddress@field:
  2810                           	opt stack 0
  2811                           
  2812                           ; 9 bytes @ 0x15
  2813  000075                     	ds	1
  2814  000076                     ethernetController_getRSV@opcode:
  2815                           	opt stack 0
  2816  000076                     enc424j600_readPHYRegister@addr:
  2817                           	opt stack 0
  2818  000076                     enc424j600_getInterruptFlags@low:
  2819                           	opt stack 0
  2820                           
  2821                           ; 1 bytes @ 0x16
  2822  000076                     	ds	1
  2823  000077                     ??_ipAdressToString:
  2824  000077                     ethernetController_getRSV@i:
  2825                           	opt stack 0
  2826  000077                     ethernetController_updateNextPacketPointer@opcode:
  2827                           	opt stack 0
  2828  000077                     enc424j600_readPHYRegister@PHYaddress:
  2829                           	opt stack 0
  2830  000077                     enc424j600_getInterruptFlags@high:
  2831                           	opt stack 0
  2832  000077                     ipv4_writeHeaderIntoBuffer@ptr:
  2833                           	opt stack 0
  2834  000077                     ethernetController_softReset@err:
  2835                           	opt stack 0
  2836                           
  2837                           ; 3 bytes @ 0x17
  2838  000077                     	ds	1
  2839  000078                     ??_ethernetController_streamToTransmitBuffer:
  2840  000078                     ??_ethernetController_getEtherTypeField:
  2841  000078                     ?_ethernetController_pollInterruptFlags:
  2842                           	opt stack 0
  2843  000078                     ethernetController_getSourceMACAddress@opcode:
  2844                           	opt stack 0
  2845  000078                     ethernetController_updateNextPacketPointer@newPointerL:
  2846                           	opt stack 0
  2847  000078                     enc424j600_readPHYRegister@unusedBits:
  2848                           	opt stack 0
  2849  000078                     ipv4_generateAutoIP@ip:
  2850                           	opt stack 0
  2851                           
  2852                           ; 4 bytes @ 0x18
  2853  000078                     	ds	1
  2854  000079                     ??_ipv4_writeHeaderIntoBuffer:
  2855  000079                     ethernetController_updateNextPacketPointer@newPointerH:
  2856                           	opt stack 0
  2857  000079                     ultoa@c:
  2858                           	opt stack 0
  2859  000079                     enc424j600_readPHYRegister@timeoutCounter:
  2860                           	opt stack 0
  2861  000079                     ethernetController_getSourceMACAddress@sourceAddress:
  2862                           	opt stack 0
  2863                           
  2864                           ; 6 bytes @ 0x19
  2865  000079                     	ds	1
  2866  00007A                     ??_ethernetController_pollInterruptFlags:
  2867  00007A                     ?_macToString:
  2868                           	opt stack 0
  2869  00007A                     ?_ethernetController_init:
  2870                           	opt stack 0
  2871  00007A                     ethernetController_writeEtherTypeFieldToBuffer@lowByte:
  2872                           	opt stack 0
  2873  00007A                     ltoa@buf:
  2874                           	opt stack 0
  2875  00007A                     srand@x:
  2876                           	opt stack 0
  2877  00007A                     macToString@addr:
  2878                           	opt stack 0
  2879                           
  2880                           ; 6 bytes @ 0x1A
  2881  00007A                     	ds	1
  2882  00007B                     ethernetController_writeEtherTypeFieldToBuffer@highByte:
  2883                           	opt stack 0
  2884  00007B                     ipAdressToString@ones:
  2885                           	opt stack 0
  2886  00007B                     checkForOverlap@b:
  2887                           	opt stack 0
  2888                           
  2889                           ; 9 bytes @ 0x1B
  2890  00007B                     	ds	1
  2891  00007C                     ethernetController_streamToTransmitBuffer@data:
  2892                           	opt stack 0
  2893  00007C                     ethernetController_writeEtherTypeFieldToBuffer@opcode:
  2894                           	opt stack 0
  2895  00007C                     ethernetController_getEtherTypeField@ethertype:
  2896                           	opt stack 0
  2897  00007C                     ltoa@val:
  2898                           	opt stack 0
  2899                           
  2900                           ; 4 bytes @ 0x1C
  2901  00007C                     	ds	1
  2902  00007D                     ethernetController_streamToTransmitBuffer@opcode:
  2903                           	opt stack 0
  2904  00007D                     enc424j600_readPHYRegister@lowByte:
  2905                           	opt stack 0
  2906  00007D                     ethernetController_init@err:
  2907                           	opt stack 0
  2908                           
  2909                           ; 3 bytes @ 0x1D
  2910  00007D                     	ds	1
  2911  00007E                     ethernetController_getEtherTypeField@opcode:
  2912                           	opt stack 0
  2913  00007E                     enc424j600_readPHYRegister@highByte:
  2914                           	opt stack 0
  2915  00007E                     ethernetController_pollInterruptFlags@flags:
  2916                           	opt stack 0
  2917  00007E                     ethernetController_writeDestinationMACAddress@data:
  2918                           	opt stack 0
  2919  00007E                     ipv4_streamToTransmissionBuffer@packet:
  2920                           	opt stack 0
  2921                           
  2922                           ; 66 bytes @ 0x1E
  2923  00007E                     	ds	1
  2924  00007F                     ethernetController_getSourceMACAddress@temp:
  2925                           	opt stack 0
  2926  00007F                     ethernetController_getEtherTypeField@lowByte:
  2927                           	opt stack 0
  2928  00007F                     enc424j600_readPHYRegister@temp:
  2929                           	opt stack 0
  2930  00007F                     ipAdressToString@tens:
  2931                           	opt stack 0
  2932                           
  2933                           ; 4 bytes @ 0x1F
  2934  00007F                     	ds	1
  2935  000080                     ??_macToString:
  2936  000080                     ethernetController_getSourceMACAddress@i:
  2937                           	opt stack 0
  2938  000080                     ethernetController_getEtherTypeField@highByte:
  2939                           	opt stack 0
  2940  000080                     ethernetController_pollInterruptFlags@reg:
  2941                           	opt stack 0
  2942  000080                     ethernetController_updateLinkStatus@state:
  2943                           	opt stack 0
  2944  000080                     ltoa@base:
  2945                           	opt stack 0
  2946                           
  2947                           ; 2 bytes @ 0x20
  2948  000080                     	ds	1
  2949  000081                     macToString@address:
  2950                           	opt stack 0
  2951                           
  2952                           ; 18 bytes @ 0x21
  2953  000081                     	ds	1
  2954  000082                     ethernetController_updateLinkStatus@temp:
  2955                           	opt stack 0
  2956  000082                     ltoa@cp:
  2957                           	opt stack 0
  2958                           
  2959                           ; 2 bytes @ 0x22
  2960  000082                     	ds	1
  2961  000083                     ethernetController_updateLinkStatus@temp16:
  2962                           	opt stack 0
  2963  000083                     ipAdressToString@hundreds:
  2964                           	opt stack 0
  2965                           
  2966                           ; 4 bytes @ 0x23
  2967  000083                     	ds	1
  2968  000084                     ?_intToString:
  2969                           	opt stack 0
  2970  000084                     ?_memory_txFrameRequest:
  2971                           	opt stack 0
  2972  000084                     ethernetController_writeDestinationMACAddress@opcode:
  2973                           	opt stack 0
  2974  000084                     memory_txFrameRequest@length:
  2975                           	opt stack 0
  2976  000084                     intToString@val:
  2977                           	opt stack 0
  2978                           
  2979                           ; 4 bytes @ 0x24
  2980  000084                     	ds	1
  2981  000085                     ethernetController_writeDestinationMACAddress@i_638:
  2982                           	opt stack 0
  2983                           
  2984                           ; 1 bytes @ 0x25
  2985  000085                     	ds	1
  2986  000086                     ethernetController_writeDestinationMACAddress@i:
  2987                           	opt stack 0
  2988                           
  2989                           ; 1 bytes @ 0x26
  2990  000086                     	ds	1
  2991  000087                     ipAdressToString@pointer:
  2992                           	opt stack 0
  2993                           
  2994                           ; 1 bytes @ 0x27
  2995  000087                     	ds	1
  2996  000088                     ipAdressToString@i:
  2997                           	opt stack 0
  2998                           
  2999                           ; 1 bytes @ 0x28
  3000  000088                     	ds	3
  3001  00008B                     ??_ipv4_parseHeader:
  3002                           
  3003                           ; 1 bytes @ 0x2B
  3004  00008B                     	ds	1
  3005  00008C                     ipv4_parseHeader@i:
  3006                           	opt stack 0
  3007                           
  3008                           ; 1 bytes @ 0x2C
  3009  00008C                     	ds	1
  3010  00008D                     ??_memory_txFrameRequest:
  3011  00008D                     ipv4_parseHeader@i_3672:
  3012                           	opt stack 0
  3013                           
  3014                           ; 1 bytes @ 0x2D
  3015  00008D                     	ds	1
  3016  00008E                     ipv4_parseHeader@temp:
  3017                           	opt stack 0
  3018                           
  3019                           ; 1 bytes @ 0x2E
  3020  00008E                     	ds	1
  3021  00008F                     ipv4_parseHeader@ip:
  3022                           	opt stack 0
  3023                           
  3024                           ; 23 bytes @ 0x2F
  3025  00008F                     	ds	4
  3026  000093                     macToString@firstDigit:
  3027                           	opt stack 0
  3028  000093                     _memory_txFrameRequest$1174:
  3029                           	opt stack 0
  3030                           
  3031                           ; 2 bytes @ 0x33
  3032  000093                     	ds	1
  3033  000094                     ??_arp_parseFromRXBuffer:
  3034  000094                     macToString@secondDigit:
  3035                           	opt stack 0
  3036                           
  3037                           ; 1 bytes @ 0x34
  3038  000094                     	ds	1
  3039  000095                     memory_txFrameRequest@fNoOverlapMarker:
  3040                           	opt stack 0
  3041  000095                     macToString@i:
  3042                           	opt stack 0
  3043                           
  3044                           ; 2 bytes @ 0x35
  3045  000095                     	ds	1
  3046  000096                     memory_txFrameRequest@i:
  3047                           	opt stack 0
  3048                           
  3049                           ; 1 bytes @ 0x36
  3050  000096                     	ds	1
  3051  000097                     memory_txFrameRequest@i_1178:
  3052                           	opt stack 0
  3053  000097                     macToString@j:
  3054                           	opt stack 0
  3055  000097                     arp_parseFromRXBuffer@i:
  3056                           	opt stack 0
  3057                           
  3058                           ; 1 bytes @ 0x37
  3059  000097                     	ds	1
  3060  000098                     arp_parseFromRXBuffer@i_3038:
  3061                           	opt stack 0
  3062  000098                     UARTTransmitText@str:
  3063                           	opt stack 0
  3064  000098                     memory_txFrameRequest@field:
  3065                           	opt stack 0
  3066                           
  3067                           ; 9 bytes @ 0x38
  3068  000098                     	ds	1
  3069  000099                     arp_parseFromRXBuffer@i_3039:
  3070                           	opt stack 0
  3071                           
  3072                           ; 1 bytes @ 0x39
  3073  000099                     	ds	1
  3074  00009A                     ?_ipv4_background:
  3075                           	opt stack 0
  3076  00009A                     arp_parseFromRXBuffer@i_3040:
  3077                           	opt stack 0
  3078  00009A                     ipv4_checkHeaderChecksum@header:
  3079                           	opt stack 0
  3080  00009A                     printErrorMessage@err:
  3081                           	opt stack 0
  3082  00009A                     UARTTransmitInt@val:
  3083                           	opt stack 0
  3084  00009A                     arp_setNewEntry@mac:
  3085                           	opt stack 0
  3086  00009A                     printEthernetState@state:
  3087                           	opt stack 0
  3088                           
  3089                           ; 15 bytes @ 0x3A
  3090  00009A                     	ds	1
  3091  00009B                     arp_parseFromRXBuffer@offset:
  3092                           	opt stack 0
  3093                           
  3094                           ; 2 bytes @ 0x3B
  3095  00009B                     	ds	1
  3096  00009C                     ??_ipv4_checkHeaderChecksum:
  3097                           
  3098                           ; 1 bytes @ 0x3C
  3099  00009C                     	ds	1
  3100  00009D                     ??_ipv4_background:
  3101  00009D                     ??_printErrorMessage:
  3102  00009D                     arp_parseFromRXBuffer@arp:
  3103                           	opt stack 0
  3104                           
  3105                           ; 32 bytes @ 0x3D
  3106  00009D                     	ds	1
  3107  00009E                     ipv4_checkHeaderChecksum@testHeader:
  3108                           	opt stack 0
  3109                           
  3110                           ; 23 bytes @ 0x3E
  3111  00009E                     	ds	1
  3112  00009F                     ipv4_background@err:
  3113                           	opt stack 0
  3114                           
  3115                           ; 3 bytes @ 0x3F
  3116  00009F                     	ds	1
  3117  0000A0                     arp_setNewEntry@ip:
  3118                           	opt stack 0
  3119                           
  3120                           ; 4 bytes @ 0x40
  3121  0000A0                     	ds	1
  3122  0000A1                     memory_txFrameRequest@freeIndex:
  3123                           	opt stack 0
  3124                           
  3125                           ; 1 bytes @ 0x41
  3126  0000A1                     	ds	1
  3127  0000A2                     ethernet_txFrameRequest@frame:
  3128                           	opt stack 0
  3129                           
  3130                           ; 2 bytes @ 0x42
  3131  0000A2                     	ds	2
  3132  0000A4                     ethernet_txFrameRequest@err:
  3133                           	opt stack 0
  3134  0000A4                     arp_setNewEntry@timestamp:
  3135                           	opt stack 0
  3136                           
  3137                           ; 4 bytes @ 0x44
  3138  0000A4                     	ds	3
  3139  0000A7                     ipv4_txFrameRequest@packet:
  3140                           	opt stack 0
  3141  0000A7                     arp_send@arp:
  3142                           	opt stack 0
  3143                           
  3144                           ; 32 bytes @ 0x47
  3145  0000A7                     	ds	1
  3146  0000A8                     
  3147                           ; 1 bytes @ 0x48
  3148  0000A8                     	ds	1
  3149  0000A9                     ??_ipv4_txFrameRequest:
  3150                           
  3151                           ; 1 bytes @ 0x49
  3152  0000A9                     	ds	3
  3153  0000AC                     arp_setNewEntry@maxSeconds:
  3154                           	opt stack 0
  3155                           
  3156                           ; 4 bytes @ 0x4C
  3157  0000AC                     	ds	4
  3158  0000B0                     arp_setNewEntry@oldestIndex:
  3159                           	opt stack 0
  3160                           
  3161                           ; 1 bytes @ 0x50
  3162  0000B0                     	ds	1
  3163  0000B1                     arp_setNewEntry@i:
  3164                           	opt stack 0
  3165                           
  3166                           ; 1 bytes @ 0x51
  3167  0000B1                     	ds	1
  3168  0000B2                     arp_init@mac:
  3169                           	opt stack 0
  3170                           
  3171                           ; 6 bytes @ 0x52
  3172  0000B2                     	ds	3
  3173  0000B5                     ipv4_handleNewPacket@frame:
  3174                           	opt stack 0
  3175                           
  3176                           ; 2 bytes @ 0x55
  3177  0000B5                     	ds	2
  3178  0000B7                     ??_ipv4_handleNewPacket:
  3179                           
  3180                           ; 1 bytes @ 0x57
  3181  0000B7                     	ds	1
  3182  0000B8                     arp_init@ip:
  3183                           	opt stack 0
  3184                           
  3185                           ; 4 bytes @ 0x58
  3186  0000B8                     	ds	1
  3187  0000B9                     ipv4_handleNewPacket@headerField:
  3188                           	opt stack 0
  3189                           
  3190                           ; 9 bytes @ 0x59
  3191  0000B9                     	ds	3
  3192  0000BC                     arp_init@i:
  3193                           	opt stack 0
  3194                           
  3195                           ; 1 bytes @ 0x5C
  3196  0000BC                     	ds	1
  3197  0000BD                     
  3198                           ; 1 bytes @ 0x5D
  3199  0000BD                     	ds	3
  3200  0000C0                     ipv4_streamToTransmissionBuffer@ethernetPacketLength:
  3201                           	opt stack 0
  3202                           
  3203                           ; 2 bytes @ 0x60
  3204  0000C0                     	ds	2
  3205  0000C2                     ipv4_streamToTransmissionBuffer@data:
  3206                           	opt stack 0
  3207  0000C2                     ipv4_handleNewPacket@ip:
  3208                           	opt stack 0
  3209                           
  3210                           ; 23 bytes @ 0x62
  3211  0000C2                     	ds	5
  3212  0000C7                     arp_send@destination:
  3213                           	opt stack 0
  3214                           
  3215                           ; 6 bytes @ 0x67
  3216  0000C7                     	ds	6
  3217  0000CD                     arp_send@i:
  3218                           	opt stack 0
  3219                           
  3220                           ; 1 bytes @ 0x6D
  3221  0000CD                     	ds	1
  3222  0000CE                     arp_send@i_3113:
  3223                           	opt stack 0
  3224                           
  3225                           ; 1 bytes @ 0x6E
  3226  0000CE                     	ds	1
  3227  0000CF                     arp_send@i_3114:
  3228                           	opt stack 0
  3229                           
  3230                           ; 1 bytes @ 0x6F
  3231  0000CF                     	ds	1
  3232  0000D0                     arp_send@i_3115:
  3233                           	opt stack 0
  3234                           
  3235                           ; 1 bytes @ 0x70
  3236  0000D0                     	ds	1
  3237  0000D1                     arp_send@ethFrame:
  3238                           	opt stack 0
  3239                           
  3240                           ; 34 bytes @ 0x71
  3241  0000D1                     	ds	34
  3242  0000F3                     arp_send@field:
  3243                           	opt stack 0
  3244                           
  3245                           ; 9 bytes @ 0x93
  3246  0000F3                     	ds	9
  3247  0000FC                     arp_gratuitous@index:
  3248                           	opt stack 0
  3249  0000FC                     ipv4_sendFrame@index:
  3250                           	opt stack 0
  3251  0000FC                     arp_handleNewPacket@frame:
  3252                           	opt stack 0
  3253                           
  3254                           ; 2 bytes @ 0x9C
  3255  0000FC                     	ds	1
  3256  0000FD                     arp_gratuitous@err:
  3257                           	opt stack 0
  3258  0000FD                     ipv4_sendFrame@err:
  3259                           	opt stack 0
  3260                           
  3261                           ; 3 bytes @ 0x9D
  3262  0000FD                     	ds	1
  3263  0000FE                     
  3264                           ; 1 bytes @ 0x9E
  3265  0000FE                     	ds	2
  3266                           tblptru	equ	0xFF8
  3267                           tblptrh	equ	0xFF7
  3268                           tblptrl	equ	0xFF6
  3269                           tablat	equ	0xFF5
  3270                           postinc0	equ	0xFEE
  3271                           wreg	equ	0xFE8
  3272                           postdec1	equ	0xFE5
  3273                           fsr1l	equ	0xFE1
  3274                           
  3275                           	psect	cstackCOMRAM
  3276  000001                     __pcstackCOMRAM:
  3277                           	opt stack 0
  3278  000001                     ?i2___lwdiv:
  3279                           	opt stack 0
  3280  000001                     buttonHandler@state:
  3281                           	opt stack 0
  3282  000001                     i2___lwdiv@dividend:
  3283                           	opt stack 0
  3284                           
  3285                           ; 2 bytes @ 0x0
  3286  000001                     	ds	2
  3287  000003                     i2___lwdiv@divisor:
  3288                           	opt stack 0
  3289  000003                     buttonHandler@resetValue:
  3290                           	opt stack 0
  3291                           
  3292                           ; 4 bytes @ 0x2
  3293  000003                     	ds	2
  3294  000005                     i2___lwdiv@quotient:
  3295                           	opt stack 0
  3296                           
  3297                           ; 2 bytes @ 0x4
  3298  000005                     	ds	2
  3299  000007                     i2___lwdiv@counter:
  3300                           	opt stack 0
  3301  000007                     buttonHandler@debounceValue:
  3302                           	opt stack 0
  3303                           
  3304                           ; 4 bytes @ 0x6
  3305  000007                     	ds	1
  3306  000008                     parseNumber@numberToDisplay:
  3307                           	opt stack 0
  3308                           
  3309                           ; 2 bytes @ 0x7
  3310  000008                     	ds	2
  3311  00000A                     parseNumber@digit:
  3312                           	opt stack 0
  3313                           
  3314                           ; 1 bytes @ 0x9
  3315  00000A                     	ds	1
  3316  00000B                     ??_parseNumber:
  3317                           
  3318                           ; 1 bytes @ 0xA
  3319  00000B                     	ds	1
  3320  00000C                     parseNumber@ones:
  3321                           	opt stack 0
  3322                           
  3323                           ; 1 bytes @ 0xB
  3324  00000C                     	ds	1
  3325  00000D                     parseNumber@tens:
  3326                           	opt stack 0
  3327                           
  3328                           ; 1 bytes @ 0xC
  3329  00000D                     	ds	1
  3330  00000E                     parseNumber@hundreds:
  3331                           	opt stack 0
  3332                           
  3333                           ; 1 bytes @ 0xD
  3334  00000E                     	ds	1
  3335  00000F                     sevenSegmentUpdate@numberToDisplay:
  3336                           	opt stack 0
  3337                           
  3338                           ; 2 bytes @ 0xE
  3339  00000F                     	ds	2
  3340  000011                     ??_sevenSegmentUpdate:
  3341                           
  3342                           ; 1 bytes @ 0x10
  3343  000011                     	ds	2
  3344  000013                     _sevenSegmentUpdate$2500:
  3345                           	opt stack 0
  3346                           
  3347                           ; 2 bytes @ 0x12
  3348  000013                     	ds	2
  3349  000015                     sevenSegmentUpdate@i:
  3350                           	opt stack 0
  3351                           
  3352                           ; 1 bytes @ 0x14
  3353  000015                     	ds	1
  3354  000016                     ??_ISR:
  3355                           
  3356                           ; 1 bytes @ 0x15
  3357  000016                     	ds	19
  3358                           tblptru	equ	0xFF8
  3359                           tblptrh	equ	0xFF7
  3360                           tblptrl	equ	0xFF6
  3361                           tablat	equ	0xFF5
  3362                           postinc0	equ	0xFEE
  3363                           wreg	equ	0xFE8
  3364                           postdec1	equ	0xFE5
  3365                           fsr1l	equ	0xFE1
  3366                           
  3367 ;;
  3368 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3369 ;;
  3370 ;; *************** function _main *****************
  3371 ;; Defined at:
  3372 ;;		line 33 in file "src/system/main.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  i               1  186[BANK1 ] unsigned char 
  3377 ;;  headerBuf      32  152[BANK1 ] unsigned char [32]
  3378 ;;  ipDst           4  190[BANK1 ] struct ipv4_address
  3379 ;;  prescaler       4  148[BANK1 ] unsigned long 
  3380 ;;  err             3  187[BANK1 ] struct error
  3381 ;;  oldState        1    0        unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3391 ;;      Params:         0       0       0       0       0       0       0       0       0
  3392 ;;      Locals:         0       0      46       0       0       0       0       0       0
  3393 ;;      Temps:          0       0       3       0       0       0       0       0       0
  3394 ;;      Totals:         0       0      49       0       0       0       0       0       0
  3395 ;;Total ram usage:       49 bytes
  3396 ;; Hardware stack levels required when called:   14
  3397 ;; This function calls:
  3398 ;;		_UARTInit
  3399 ;;		_UARTTransmitText
  3400 ;;		_ethernetController_checkDeviceId
  3401 ;;		_ethernetController_getDeviceName
  3402 ;;		_ethernetController_getMacAddress
  3403 ;;		_ethernetController_init
  3404 ;;		_ethernetController_setLEDConfig
  3405 ;;		_handleStackBackgroundTasks
  3406 ;;		_ipAdressToString
  3407 ;;		_ipv4_calculateHeaderChecksum
  3408 ;;		_ipv4_generateAutoIP
  3409 ;;		_ipv4_getIPSourceAddress
  3410 ;;		_ipv4_streamToTransmissionBuffer
  3411 ;;		_ipv4_txFrameRequest
  3412 ;;		_ipv4_writeHeaderIntoBuffer
  3413 ;;		_macToString
  3414 ;;		_printErrorMessage
  3415 ;;		_printEthernetState
  3416 ;;		_sevenSegmentInit
  3417 ;;		_srand
  3418 ;;		_stack_init
  3419 ;; This function is called by:
  3420 ;;		Startup code after reset
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text0
  3425  000ADA                     __ptext0:
  3426                           	opt stack 0
  3427  000ADA                     _main:
  3428                           	opt stack 17
  3429                           
  3430                           ;main.c: 36: OSCCONbits.SCS = 0b00;
  3431                           
  3432                           ;incstack = 0
  3433  000ADA  0EFC               	movlw	-4
  3434  000ADC  16D3               	andwf	4051,f,c	;volatile
  3435                           
  3436                           ;main.c: 37: OSCCONbits.IRCF = 0b1110;
  3437  000ADE  50D3               	movf	4051,w,c	;volatile
  3438  000AE0  0B8F               	andlw	-113
  3439  000AE2  0960               	iorlw	96
  3440  000AE4  6ED3               	movwf	4051,c	;volatile
  3441                           
  3442                           ;main.c: 38: OSCCON2bits.PLLEN = 0b1;
  3443  000AE6  88D2               	bsf	4050,4,c	;volatile
  3444                           
  3445                           ;main.c: 41: INTCONbits.GIE = 0;
  3446  000AE8  9EF2               	bcf	intcon,7,c	;volatile
  3447                           
  3448                           ;main.c: 42: INTCONbits.TMR0IE = 1;
  3449  000AEA  8AF2               	bsf	intcon,5,c	;volatile
  3450                           
  3451                           ;main.c: 43: INTCON3bits.INT2IE = 1;
  3452  000AEC  88F0               	bsf	intcon3,4,c	;volatile
  3453                           
  3454                           ;main.c: 44: RCIP = 0;
  3455  000AEE  9A9F               	bcf	3999,5,c	;volatile
  3456                           
  3457                           ;main.c: 45: RCIE = 1;
  3458  000AF0  8A9D               	bsf	3997,5,c	;volatile
  3459                           
  3460                           ;main.c: 46: INTCONbits.PEIE = 1;
  3461  000AF2  8CF2               	bsf	intcon,6,c	;volatile
  3462                           
  3463                           ;main.c: 50: T0CONbits.TMR0ON = 1;
  3464  000AF4  8ED5               	bsf	4053,7,c	;volatile
  3465                           
  3466                           ;main.c: 51: T0CONbits.T08BIT = 1;
  3467  000AF6  8CD5               	bsf	4053,6,c	;volatile
  3468                           
  3469                           ;main.c: 52: T0CONbits.T0CS = 0;
  3470  000AF8  9AD5               	bcf	4053,5,c	;volatile
  3471                           
  3472                           ;main.c: 53: T0CONbits.PSA = 0;
  3473  000AFA  96D5               	bcf	4053,3,c	;volatile
  3474                           
  3475                           ;main.c: 54: T0CONbits.T0PS = 0b101;
  3476  000AFC  50D5               	movf	4053,w,c	;volatile
  3477  000AFE  0BF8               	andlw	-8
  3478  000B00  0905               	iorlw	5
  3479  000B02  6ED5               	movwf	4053,c	;volatile
  3480                           
  3481                           ;main.c: 58: T1CONbits.TMR1ON = 1;
  3482  000B04  80CD               	bsf	4045,0,c	;volatile
  3483                           
  3484                           ;main.c: 59: CCP1CONbits.CCP1M = 0b1011;
  3485  000B06  50BD               	movf	4029,w,c	;volatile
  3486  000B08  0BF0               	andlw	-16
  3487  000B0A  090B               	iorlw	11
  3488  000B0C  6EBD               	movwf	4029,c	;volatile
  3489                           
  3490                           ;main.c: 60: CCPR1 = 8000;
  3491  000B0E  0E1F               	movlw	31
  3492  000B10  6EBF               	movwf	4031,c	;volatile
  3493  000B12  0E40               	movlw	64
  3494  000B14  6EBE               	movwf	4030,c	;volatile
  3495                           
  3496                           ;main.c: 61: PIE1bits.CCP1IE = 1;
  3497  000B16  849D               	bsf	3997,2,c	;volatile
  3498                           
  3499                           ;main.c: 62: INTCONbits.PEIE = 1;
  3500  000B18  8CF2               	bsf	intcon,6,c	;volatile
  3501                           
  3502                           ;main.c: 64: TRISBbits.RB6 = 0;
  3503  000B1A  9C93               	bcf	3987,6,c	;volatile
  3504                           
  3505                           ;main.c: 67: UARTInit();
  3506  000B1C  ECEE  F02B         	call	_UARTInit	;wreg free
  3507                           
  3508                           ;main.c: 68: sevenSegmentInit();
  3509  000B20  EC90  F02B         	call	_sevenSegmentInit	;wreg free
  3510                           
  3511                           ;main.c: 69: _delay((unsigned long)((10)*(32000000UL/4000.0)));
  3512  000B24  0E68               	movlw	104
  3513  000B26  0101               	movlb	1	; () banked
  3514  000B28  6F91               	movwf	??_main& (0+255),b
  3515  000B2A  0EE4               	movlw	228
  3516  000B2C                     u12877:
  3517  000B2C  2EE8               	decfsz	wreg,f,c
  3518  000B2E  D7FE               	bra	u12877
  3519  000B30  2F91               	decfsz	??_main& (0+255),f,b
  3520  000B32  D7FC               	bra	u12877
  3521  000B34  F000               	nop	
  3522                           
  3523                           ;main.c: 70: UARTTransmitText("\x12");
  3524  000B36  0EFD               	movlw	low STR_27
  3525  000B38  0100               	movlb	0	; () banked
  3526  000B3A  6F98               	movwf	UARTTransmitText@str& (0+255),b
  3527  000B3C  0E7F               	movlw	high STR_27
  3528  000B3E  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3529  000B40  EC27  F027         	call	_UARTTransmitText	;wreg free
  3530                           
  3531                           ;main.c: 71: if (!RCONbits.TO) {
  3532  000B44  B6D0               	btfsc	4048,3,c	;volatile
  3533  000B46  D015               	goto	l653
  3534                           
  3535                           ;main.c: 72: UARTTransmitText("------------------------------------------------\n\r");
  3536  000B48  0E87               	movlw	low STR_28
  3537  000B4A  0100               	movlb	0	; () banked
  3538  000B4C  6F98               	movwf	UARTTransmitText@str& (0+255),b
  3539  000B4E  0E7A               	movlw	high STR_28
  3540  000B50  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3541  000B52  EC27  F027         	call	_UARTTransmitText	;wreg free
  3542                           
  3543                           ;main.c: 73: UARTTransmitText("\a*** CRITICAL ERROR: WATCHDOG CAUSED RESET ***\n\r");
  3544  000B56  0EBA               	movlw	low STR_29
  3545  000B58  0100               	movlb	0	; () banked
  3546  000B5A  6F98               	movwf	UARTTransmitText@str& (0+255),b
  3547  000B5C  0E7A               	movlw	high STR_29
  3548  000B5E  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3549  000B60  EC27  F027         	call	_UARTTransmitText	;wreg free
  3550                           
  3551                           ;main.c: 74: UARTTransmitText("------------------------------------------------\n\r");
  3552  000B64  0E87               	movlw	low STR_28
  3553  000B66  0100               	movlb	0	; () banked
  3554  000B68  6F98               	movwf	UARTTransmitText@str& (0+255),b
  3555  000B6A  0E7A               	movlw	high STR_28
  3556  000B6C  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3557  000B6E  EC27  F027         	call	_UARTTransmitText	;wreg free
  3558  000B72                     l653:
  3559                           
  3560                           ;main.c: 75: }
  3561                           ;main.c: 76: UARTTransmitText("FIRMWARE BUILD DATE IS ");
  3562  000B72  0EF3               	movlw	low STR_31
  3563  000B74  0100               	movlb	0	; () banked
  3564  000B76  6F98               	movwf	UARTTransmitText@str& (0+255),b
  3565  000B78  0E7D               	movlw	high STR_31
  3566  000B7A  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3567  000B7C  EC27  F027         	call	_UARTTransmitText	;wreg free
  3568                           
  3569                           ;main.c: 77: UARTTransmitText("Mar 31 2019");
  3570  000B80  0E4A               	movlw	low STR_32
  3571  000B82  0100               	movlb	0	; () banked
  3572  000B84  6F98               	movwf	UARTTransmitText@str& (0+255),b
  3573  000B86  0E7F               	movlw	high STR_32
  3574  000B88  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3575  000B8A  EC27  F027         	call	_UARTTransmitText	;wreg free
  3576                           
  3577                           ;main.c: 78: UARTTransmitText(" ");
  3578  000B8E  0EEF               	movlw	low (STR_94+1)
  3579  000B90  0100               	movlb	0	; () banked
  3580  000B92  6F98               	movwf	UARTTransmitText@str& (0+255),b
  3581  000B94  0E7F               	movlw	high (STR_94+1)
  3582  000B96  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3583  000B98  EC27  F027         	call	_UARTTransmitText	;wreg free
  3584                           
  3585                           ;main.c: 79: UARTTransmitText("22:51:44");
  3586  000B9C  0E93               	movlw	low STR_34
  3587  000B9E  0100               	movlb	0	; () banked
  3588  000BA0  6F98               	movwf	UARTTransmitText@str& (0+255),b
  3589  000BA2  0E7F               	movlw	high STR_34
  3590  000BA4  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3591  000BA6  EC27  F027         	call	_UARTTransmitText	;wreg free
  3592                           
  3593                           ;main.c: 80: UARTTransmitText(".\n\r");
  3594  000BAA  0ED0               	movlw	low (STR_62+1)
  3595  000BAC  0100               	movlb	0	; () banked
  3596  000BAE  6F98               	movwf	UARTTransmitText@str& (0+255),b
  3597  000BB0  0E7F               	movlw	high (STR_62+1)
  3598  000BB2  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3599  000BB4  EC27  F027         	call	_UARTTransmitText	;wreg free
  3600                           
  3601                           ;main.c: 81: error_t err;
  3602                           ;main.c: 82: err = ethernetController_init();
  3603  000BB8  ECC5  F021         	call	_ethernetController_init	;wreg free
  3604  000BBC  C07A  F1BB         	movff	?_ethernetController_init,main@err
  3605  000BC0  C07B  F1BC         	movff	?_ethernetController_init+1,main@err+1
  3606  000BC4  C07C  F1BD         	movff	?_ethernetController_init+2,main@err+2
  3607                           
  3608                           ;main.c: 83: if (err.code != (uint16_t)0)
  3609  000BC8  0101               	movlb	1	; () banked
  3610  000BCA  51BC               	movf	(main@err+1)& (0+255),w,b
  3611  000BCC  11BD               	iorwf	(main@err+2)& (0+255),w,b
  3612  000BCE  B4D8               	btfsc	status,2,c
  3613  000BD0  D008               	goto	l654
  3614                           
  3615                           ; BSR set to: 1
  3616                           ;main.c: 84: printErrorMessage(err);
  3617  000BD2  C1BB  F09A         	movff	main@err,printErrorMessage@err
  3618  000BD6  C1BC  F09B         	movff	main@err+1,printErrorMessage@err+1
  3619  000BDA  C1BD  F09C         	movff	main@err+2,printErrorMessage@err+2
  3620  000BDE  EC7F  F01B         	call	_printErrorMessage	;wreg free
  3621  000BE2                     l654:
  3622                           
  3623                           ;main.c: 85: err = ethernetController_checkDeviceId();
  3624  000BE2  ECF6  F027         	call	_ethernetController_checkDeviceId	;wreg free
  3625  000BE6  C06E  F1BB         	movff	?_ethernetController_checkDeviceId,main@err
  3626  000BEA  C06F  F1BC         	movff	?_ethernetController_checkDeviceId+1,main@err+1
  3627  000BEE  C070  F1BD         	movff	?_ethernetController_checkDeviceId+2,main@err+2
  3628                           
  3629                           ;main.c: 86: if (err.code == (uint16_t)0) {
  3630  000BF2  0101               	movlb	1	; () banked
  3631  000BF4  51BC               	movf	(main@err+1)& (0+255),w,b
  3632  000BF6  11BD               	iorwf	(main@err+2)& (0+255),w,b
  3633  000BF8  A4D8               	btfss	status,2,c
  3634  000BFA  D00F               	goto	l655
  3635                           
  3636                           ; BSR set to: 1
  3637                           ;main.c: 87: UARTTransmitText(ethernetController_getDeviceName());
  3638  000BFC  EC3E  F02B         	call	_ethernetController_getDeviceName	;wreg free
  3639  000C00  C060  F098         	movff	?_ethernetController_getDeviceName,UARTTransmitText@str
  3640  000C04  C061  F099         	movff	?_ethernetController_getDeviceName+1,UARTTransmitText@str+1
  3641  000C08  EC27  F027         	call	_UARTTransmitText	;wreg free
  3642                           
  3643                           ;main.c: 88: UARTTransmitText(" detected. ");
  3644  000C0C  0E3E               	movlw	low STR_36
  3645  000C0E  0100               	movlb	0	; () banked
  3646  000C10  6F98               	movwf	UARTTransmitText@str& (0+255),b
  3647  000C12  0E7F               	movlw	high STR_36
  3648  000C14  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3649  000C16  EC27  F027         	call	_UARTTransmitText	;wreg free
  3650  000C1A                     l655:
  3651                           
  3652                           ;main.c: 89: }
  3653                           ;main.c: 90: UARTTransmitText("Source MAC address is ");
  3654  000C1A  0E0B               	movlw	low STR_37
  3655  000C1C  0100               	movlb	0	; () banked
  3656  000C1E  6F98               	movwf	UARTTransmitText@str& (0+255),b
  3657  000C20  0E7E               	movlw	high STR_37
  3658  000C22  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3659  000C24  EC27  F027         	call	_UARTTransmitText	;wreg free
  3660                           
  3661                           ;main.c: 91: UARTTransmitText(macToString(ethernetController_getMacAddress()));
  3662  000C28  EC23  F025         	call	_ethernetController_getMacAddress	;wreg free
  3663  000C2C  CFE9 FFD9          	movff	fsr0l,fsr2l
  3664  000C30  CFEA FFDA          	movff	fsr0h,fsr2h
  3665  000C34  EE00  F07A         	lfsr	0,macToString@addr
  3666  000C38  0E05               	movlw	5
  3667  000C3A                     u12741:
  3668  000C3A  CFDB FFEB          	movff	plusw2,plusw0
  3669  000C3E  06E8               	decf	wreg,f,c
  3670  000C40  E2FC               	bc	u12741
  3671  000C42  ECBB  F01D         	call	_macToString	;wreg free
  3672  000C46  C07A  F098         	movff	?_macToString,UARTTransmitText@str
  3673  000C4A  C07B  F099         	movff	?_macToString+1,UARTTransmitText@str+1
  3674  000C4E  EC27  F027         	call	_UARTTransmitText	;wreg free
  3675                           
  3676                           ;main.c: 92: UARTTransmitText(".\n\r");
  3677  000C52  0ED0               	movlw	low (STR_62+1)
  3678  000C54  0100               	movlb	0	; () banked
  3679  000C56  6F98               	movwf	UARTTransmitText@str& (0+255),b
  3680  000C58  0E7F               	movlw	high (STR_62+1)
  3681  000C5A  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3682  000C5C  EC27  F027         	call	_UARTTransmitText	;wreg free
  3683                           
  3684                           ;main.c: 93: UARTTransmitText("------------------------------------------------\n\r");
  3685  000C60  0E87               	movlw	low STR_28
  3686  000C62  0100               	movlb	0	; () banked
  3687  000C64  6F98               	movwf	UARTTransmitText@str& (0+255),b
  3688  000C66  0E7A               	movlw	high STR_28
  3689  000C68  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3690  000C6A  EC27  F027         	call	_UARTTransmitText	;wreg free
  3691                           
  3692                           ;main.c: 95: stack_init();
  3693  000C6E  EC12  F02C         	call	_stack_init	;wreg free
  3694                           
  3695                           ;main.c: 97: ethernetController_setLEDConfig(LEDA, LED_ON);
  3696  000C72  0E00               	movlw	0
  3697  000C74  0100               	movlb	0	; () banked
  3698  000C76  6F6E               	movwf	ethernetController_setLEDConfig@conf& (0+255),b
  3699  000C78  0E00               	movlw	0
  3700  000C7A  EC64  F022         	call	_ethernetController_setLEDConfig
  3701                           
  3702                           ;main.c: 98: ethernetController_setLEDConfig(LEDA, LED_ON);
  3703  000C7E  0E00               	movlw	0
  3704  000C80  0100               	movlb	0	; () banked
  3705  000C82  6F6E               	movwf	ethernetController_setLEDConfig@conf& (0+255),b
  3706  000C84  0E00               	movlw	0
  3707  000C86  EC64  F022         	call	_ethernetController_setLEDConfig
  3708                           
  3709                           ;main.c: 99: _delay((unsigned long)((500)*(32000000UL/4000.0)));
  3710  000C8A  0E15               	movlw	21
  3711  000C8C  0101               	movlb	1	; () banked
  3712  000C8E  6F92               	movwf	(??_main+1)& (0+255),b
  3713  000C90  0E4B               	movlw	75
  3714  000C92  6F91               	movwf	??_main& (0+255),b
  3715  000C94  0EBE               	movlw	190
  3716  000C96                     u12887:
  3717  000C96  2EE8               	decfsz	wreg,f,c
  3718  000C98  D7FE               	bra	u12887
  3719  000C9A  2F91               	decfsz	??_main& (0+255),f,b
  3720  000C9C  D7FC               	bra	u12887
  3721  000C9E  2F92               	decfsz	(??_main+1)& (0+255),f,b
  3722  000CA0  D7FA               	bra	u12887
  3723  000CA2  F000               	nop	
  3724                           
  3725                           ;main.c: 101: ethernetController_setLEDConfig(LEDA, LED_OFF);
  3726  000CA4  0E01               	movlw	1
  3727  000CA6  0100               	movlb	0	; () banked
  3728  000CA8  6F6E               	movwf	ethernetController_setLEDConfig@conf& (0+255),b
  3729  000CAA  0E00               	movlw	0
  3730  000CAC  EC64  F022         	call	_ethernetController_setLEDConfig
  3731                           
  3732                           ;main.c: 102: ethernetController_setLEDConfig(LEDA, LED_OFF);
  3733  000CB0  0E01               	movlw	1
  3734  000CB2  0100               	movlb	0	; () banked
  3735  000CB4  6F6E               	movwf	ethernetController_setLEDConfig@conf& (0+255),b
  3736  000CB6  0E00               	movlw	0
  3737  000CB8  EC64  F022         	call	_ethernetController_setLEDConfig
  3738                           
  3739                           ;main.c: 105: uint32_t prescaler = 0;
  3740  000CBC  0E00               	movlw	0
  3741  000CBE  0101               	movlb	1	; () banked
  3742  000CC0  6F94               	movwf	main@prescaler& (0+255),b
  3743  000CC2  0E00               	movlw	0
  3744  000CC4  6F95               	movwf	(main@prescaler+1)& (0+255),b
  3745  000CC6  0E00               	movlw	0
  3746  000CC8  6F96               	movwf	(main@prescaler+2)& (0+255),b
  3747  000CCA  0E00               	movlw	0
  3748  000CCC  6F97               	movwf	(main@prescaler+3)& (0+255),b
  3749                           
  3750                           ; BSR set to: 1
  3751                           ;main.c: 107: ANSELB &= ~(1<<5);
  3752  000CCE  010F               	movlb	15	; () banked
  3753  000CD0  9B5C               	bcf	92,5,b	;volatile
  3754                           
  3755                           ; BSR set to: 15
  3756                           ;main.c: 108: TRISB |= (1<<5);
  3757  000CD2  8A93               	bsf	3987,5,c	;volatile
  3758                           
  3759                           ; BSR set to: 15
  3760                           ;main.c: 110: uint8_t oldState;
  3761                           ;main.c: 112: ipv4_address_t ipDst;
  3762                           ;main.c: 113: ipDst.address[0] = 169;
  3763  000CD4  0EA9               	movlw	169
  3764  000CD6  0101               	movlb	1	; () banked
  3765  000CD8  6FBE               	movwf	main@ipDst& (0+255),b
  3766                           
  3767                           ; BSR set to: 1
  3768                           ;main.c: 114: ipDst.address[1] = 254;
  3769  000CDA  0EFE               	movlw	254
  3770  000CDC  6FBF               	movwf	(main@ipDst+1)& (0+255),b
  3771                           
  3772                           ; BSR set to: 1
  3773                           ;main.c: 115: ipDst.address[2] = 108;
  3774  000CDE  0E6C               	movlw	108
  3775  000CE0  6FC0               	movwf	(main@ipDst+2)& (0+255),b
  3776                           
  3777                           ; BSR set to: 1
  3778                           ;main.c: 116: ipDst.address[3] = 135;
  3779  000CE2  0E87               	movlw	135
  3780  000CE4  6FC1               	movwf	(main@ipDst+3)& (0+255),b
  3781                           
  3782                           ; BSR set to: 1
  3783                           ;main.c: 119: INTCONbits.GIE = 1;
  3784  000CE6  8EF2               	bsf	intcon,7,c	;volatile
  3785                           
  3786                           ; BSR set to: 1
  3787                           ;main.c: 120: INTCONbits.PEIE = 1;
  3788  000CE8  8CF2               	bsf	intcon,6,c	;volatile
  3789                           
  3790                           ; BSR set to: 1
  3791                           ;main.c: 122: srand(ethernetController_getMacAddress().address[5]);
  3792  000CEA  EC23  F025         	call	_ethernetController_getMacAddress	;wreg free
  3793  000CEE  0E05               	movlw	5
  3794  000CF0  26E9               	addwf	fsr0l,f,c
  3795  000CF2  0E00               	movlw	0
  3796  000CF4  22EA               	addwfc	fsr0h,f,c
  3797  000CF6  50EF               	movf	indf0,w,c
  3798  000CF8  0101               	movlb	1	; () banked
  3799  000CFA  6F91               	movwf	??_main& (0+255),b
  3800  000CFC  5191               	movf	??_main& (0+255),w,b
  3801  000CFE  0100               	movlb	0	; () banked
  3802  000D00  6F7A               	movwf	srand@x& (0+255),b
  3803  000D02  6B7B               	clrf	(srand@x+1)& (0+255),b
  3804  000D04  ECF6  F02B         	call	_srand	;wreg free
  3805                           
  3806                           ;main.c: 123: stack.source = ipv4_generateAutoIP();
  3807  000D08  EC67  F028         	call	_ipv4_generateAutoIP	;wreg free
  3808  000D0C  C074  F2CE         	movff	?_ipv4_generateAutoIP,_stack+119
  3809  000D10  C075  F2CF         	movff	?_ipv4_generateAutoIP+1,_stack+120
  3810  000D14  C076  F2D0         	movff	?_ipv4_generateAutoIP+2,_stack+121
  3811  000D18  C077  F2D1         	movff	?_ipv4_generateAutoIP+3,_stack+122
  3812  000D1C                     l656:
  3813  000D1C  0004               	clrwdt		;# 
  3814                           
  3815                           ;main.c: 128: handleStackBackgroundTasks(&stack);
  3816  000D1E  0E57               	movlw	low _stack
  3817  000D20  0101               	movlb	1	; () banked
  3818  000D22  6F85               	movwf	handleStackBackgroundTasks@stack& (0+255),b
  3819  000D24  0E02               	movlw	high _stack
  3820  000D26  6F86               	movwf	(handleStackBackgroundTasks@stack+1)& (0+255),b
  3821  000D28  EC0E  F00E         	call	_handleStackBackgroundTasks	;wreg free
  3822                           
  3823                           ;main.c: 130: printEthernetState(stack.ethernet);
  3824  000D2C  EE22  F079         	lfsr	2,_stack+34
  3825  000D30  EE00  F09A         	lfsr	0,printEthernetState@state
  3826  000D34  0E0E               	movlw	14
  3827  000D36                     u12751:
  3828  000D36  CFDB FFEB          	movff	plusw2,plusw0
  3829  000D3A  06E8               	decf	wreg,f,c
  3830  000D3C  E2FC               	bc	u12751
  3831  000D3E  EC74  F021         	call	_printEthernetState	;wreg free
  3832                           
  3833                           ;main.c: 132: numberToDisplay = (stack.ethernet.link == NO_LINK) ? 1000 : stack.source.a
      +                          ddress[3];
  3834  000D42  0102               	movlb	2	; () banked
  3835  000D44  5179               	movf	(_stack+34)& (0+255),w,b
  3836  000D46  B4D8               	btfsc	status,2,c
  3837  000D48  D005               	goto	l658
  3838                           
  3839                           ; BSR set to: 2
  3840  000D4A  C2D1  F1B8         	movff	_stack+122,_main$2409
  3841  000D4E  0101               	movlb	1	; () banked
  3842  000D50  6BB9               	clrf	(_main$2409+1)& (0+255),b
  3843  000D52  D005               	goto	l660
  3844  000D54                     l658:
  3845                           
  3846                           ; BSR set to: 1
  3847  000D54  0E03               	movlw	3
  3848  000D56  0101               	movlb	1	; () banked
  3849  000D58  6FB9               	movwf	(_main$2409+1)& (0+255),b
  3850  000D5A  0EE8               	movlw	232
  3851  000D5C  6FB8               	movwf	_main$2409& (0+255),b
  3852  000D5E                     l660:
  3853                           
  3854                           ; BSR set to: 1
  3855                           
  3856                           ; BSR set to: 1
  3857  000D5E  C1B8  F031         	movff	_main$2409,_numberToDisplay	;volatile
  3858  000D62  C1B9  F032         	movff	_main$2409+1,_numberToDisplay+1	;volatile
  3859  000D66  0E00               	movlw	0
  3860  000D68  BE32               	btfsc	_numberToDisplay+1,7,c	;volatile
  3861  000D6A  0EFF               	movlw	-1
  3862  000D6C  6E33               	movwf	_numberToDisplay+2,c	;volatile
  3863  000D6E  6E34               	movwf	_numberToDisplay+3,c	;volatile
  3864                           
  3865                           ; BSR set to: 1
  3866                           ;main.c: 134: if (buttonState) {
  3867  000D70  51F9               	movf	_buttonState& (0+255),w,b	;volatile
  3868  000D72  B4D8               	btfsc	status,2,c
  3869  000D74  D7D3               	goto	l656
  3870                           
  3871                           ; BSR set to: 1
  3872                           ;main.c: 135: buttonState = 0;
  3873  000D76  0E00               	movlw	0
  3874  000D78  6FF9               	movwf	_buttonState& (0+255),b	;volatile
  3875                           
  3876                           ; BSR set to: 1
  3877                           ;main.c: 137: UARTTransmitText("My Address is ");
  3878  000D7A  0E08               	movlw	low STR_40
  3879  000D7C  0100               	movlb	0	; () banked
  3880  000D7E  6F98               	movwf	UARTTransmitText@str& (0+255),b
  3881  000D80  0E7F               	movlw	high STR_40
  3882  000D82  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3883  000D84  EC27  F027         	call	_UARTTransmitText	;wreg free
  3884                           
  3885                           ;main.c: 138: UARTTransmitText(ipAdressToString(ipv4_getIPSourceAddress()));
  3886  000D88  ECCA  F02B         	call	_ipv4_getIPSourceAddress	;wreg free
  3887  000D8C  C060  F073         	movff	?_ipv4_getIPSourceAddress,ipAdressToString@ip
  3888  000D90  C061  F074         	movff	?_ipv4_getIPSourceAddress+1,ipAdressToString@ip+1
  3889  000D94  C062  F075         	movff	?_ipv4_getIPSourceAddress+2,ipAdressToString@ip+2
  3890  000D98  C063  F076         	movff	?_ipv4_getIPSourceAddress+3,ipAdressToString@ip+3
  3891  000D9C  ECF3  F013         	call	_ipAdressToString	;wreg free
  3892  000DA0  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
  3893  000DA4  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
  3894  000DA8  EC27  F027         	call	_UARTTransmitText	;wreg free
  3895                           
  3896                           ;main.c: 139: UARTTransmitText("\n\r");
  3897  000DAC  0EEB               	movlw	low (STR_44+1)
  3898  000DAE  0100               	movlb	0	; () banked
  3899  000DB0  6F98               	movwf	UARTTransmitText@str& (0+255),b
  3900  000DB2  0E7F               	movlw	high (STR_44+1)
  3901  000DB4  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  3902  000DB6  EC27  F027         	call	_UARTTransmitText	;wreg free
  3903                           
  3904                           ;main.c: 142: if (stack.ethernet.link == LINK_ESTABLISHED) {
  3905  000DBA  0102               	movlb	2	; () banked
  3906  000DBC  0579               	decf	(_stack+34)& (0+255),w,b
  3907  000DBE  A4D8               	btfss	status,2,c
  3908  000DC0  D7AD               	goto	l656
  3909                           
  3910                           ; BSR set to: 2
  3911                           ;main.c: 145: uint8_t headerBuf[32];
  3912                           ;main.c: 146: stack.pendingPacketToSend.ipv4Header.destination = ipDst;
  3913  000DC2  C1BE  F29F         	movff	main@ipDst,_stack+72
  3914  000DC6  C1BF  F2A0         	movff	main@ipDst+1,_stack+73
  3915  000DCA  C1C0  F2A1         	movff	main@ipDst+2,_stack+74
  3916  000DCE  C1C1  F2A2         	movff	main@ipDst+3,_stack+75
  3917                           
  3918                           ; BSR set to: 2
  3919                           ;main.c: 147: stack.pendingPacketToSend.ipv4Header.source = ipv4_getIPSourceAddress();
  3920  000DD2  ECCA  F02B         	call	_ipv4_getIPSourceAddress	;wreg free
  3921  000DD6  C060  F29B         	movff	?_ipv4_getIPSourceAddress,_stack+68
  3922  000DDA  C061  F29C         	movff	?_ipv4_getIPSourceAddress+1,_stack+69
  3923  000DDE  C062  F29D         	movff	?_ipv4_getIPSourceAddress+2,_stack+70
  3924  000DE2  C063  F29E         	movff	?_ipv4_getIPSourceAddress+3,_stack+71
  3925                           
  3926                           ;main.c: 148: stack.pendingPacketToSend.ipv4Header.totalLength = 120;
  3927  000DE6  0E00               	movlw	0
  3928  000DE8  0102               	movlb	2	; () banked
  3929  000DEA  6F91               	movwf	(_stack+58)& (0+255),b
  3930  000DEC  0E78               	movlw	120
  3931  000DEE  6F90               	movwf	(_stack+57)& (0+255),b
  3932                           
  3933                           ; BSR set to: 2
  3934                           ;main.c: 149: stack.pendingPacketToSend.ipv4Header.timeToLive = 255;
  3935  000DF0  6997               	setf	(_stack+64)& (0+255),b
  3936                           
  3937                           ; BSR set to: 2
  3938                           ;main.c: 150: stack.pendingPacketToSend.ipv4Header.version = 4;
  3939  000DF2  0E04               	movlw	4
  3940  000DF4  6F8C               	movwf	(_stack+53)& (0+255),b
  3941                           
  3942                           ; BSR set to: 2
  3943                           ;main.c: 151: ipv4_calculateHeaderChecksum(&stack.pendingPacketToSend.ipv4Header);
  3944  000DF6  0E8C               	movlw	low (_stack+53)
  3945  000DF8  0100               	movlb	0	; () banked
  3946  000DFA  6F60               	movwf	ipv4_calculateHeaderChecksum@header& (0+255),b
  3947  000DFC  0E02               	movlw	high (_stack+53)
  3948  000DFE  6F61               	movwf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),b
  3949  000E00  EC22  F00B         	call	_ipv4_calculateHeaderChecksum	;wreg free
  3950                           
  3951                           ;main.c: 152: ipv4_writeHeaderIntoBuffer(stack.pendingPacketToSend.ipv4Header, headerBuf
      +                          );
  3952  000E04  EE22  F08C         	lfsr	2,_stack+53
  3953  000E08  EE00  F060         	lfsr	0,ipv4_writeHeaderIntoBuffer@header
  3954  000E0C  0E16               	movlw	22
  3955  000E0E                     u12791:
  3956  000E0E  CFDB FFEB          	movff	plusw2,plusw0
  3957  000E12  06E8               	decf	wreg,f,c
  3958  000E14  E2FC               	bc	u12791
  3959  000E16  0E98               	movlw	low main@headerBuf
  3960  000E18  0100               	movlb	0	; () banked
  3961  000E1A  6F77               	movwf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),b
  3962  000E1C  0E01               	movlw	high main@headerBuf
  3963  000E1E  6F78               	movwf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),b
  3964  000E20  EC1F  F018         	call	_ipv4_writeHeaderIntoBuffer	;wreg free
  3965                           
  3966                           ;main.c: 154: ipv4_txFrameRequest(&stack.pendingPacketToSend);
  3967  000E24  0E8C               	movlw	low (_stack+53)
  3968  000E26  0100               	movlb	0	; () banked
  3969  000E28  6FA7               	movwf	ipv4_txFrameRequest@packet& (0+255),b
  3970  000E2A  0E02               	movlw	high (_stack+53)
  3971  000E2C  6FA8               	movwf	(ipv4_txFrameRequest@packet+1)& (0+255),b
  3972  000E2E  ECE4  F01A         	call	_ipv4_txFrameRequest	;wreg free
  3973                           
  3974                           ;main.c: 156: for (uint8_t i = 0; i < stack.pendingPacketToSend.ipv4Header.totalLength; 
      +                          i++) {
  3975  000E32  0E00               	movlw	0
  3976  000E34  0101               	movlb	1	; () banked
  3977  000E36  6FBA               	movwf	main@i& (0+255),b
  3978  000E38  D034               	goto	l663
  3979  000E3A                     
  3980                           ; BSR set to: 1
  3981                           ;main.c: 157: if (i < stack.pendingPacketToSend.ipv4Header.headerLength * 4) {
  3982                           
  3983                           ; BSR set to: 1
  3984  000E3A  0102               	movlb	2	; () banked
  3985  000E3C  518D               	movf	(_stack+54)& (0+255),w,b
  3986  000E3E  0D04               	mullw	4
  3987  000E40  0101               	movlb	1	; () banked
  3988  000E42  51BA               	movf	main@i& (0+255),w,b
  3989  000E44  6F91               	movwf	??_main& (0+255),b
  3990  000E46  6B92               	clrf	(??_main+1)& (0+255),b
  3991  000E48  50F3               	movf	prodl,w,c
  3992  000E4A  5D91               	subwf	??_main& (0+255),w,b
  3993  000E4C  5192               	movf	(??_main+1)& (0+255),w,b
  3994  000E4E  0A80               	xorlw	128
  3995  000E50  6F93               	movwf	(??_main+2)& (0+255),b
  3996  000E52  50F4               	movf	prodh,w,c
  3997  000E54  0A80               	xorlw	128
  3998  000E56  5993               	subwfb	(??_main+2)& (0+255),w,b
  3999  000E58  B0D8               	btfsc	status,0,c
  4000  000E5A  D015               	goto	l665
  4001                           
  4002                           ; BSR set to: 1
  4003                           ;main.c: 158: ipv4_streamToTransmissionBuffer(headerBuf[i], stack.pendingPacketToSend);
  4004  000E5C  EE22  F08C         	lfsr	2,_stack+53
  4005  000E60  EE00  F07E         	lfsr	0,ipv4_streamToTransmissionBuffer@packet
  4006  000E64  0E41               	movlw	65
  4007  000E66                     u12811:
  4008  000E66  CFDB FFEB          	movff	plusw2,plusw0
  4009  000E6A  06E8               	decf	wreg,f,c
  4010  000E6C  E2FC               	bc	u12811
  4011  000E6E  51BA               	movf	main@i& (0+255),w,b
  4012  000E70  0D01               	mullw	1
  4013  000E72  0E98               	movlw	low main@headerBuf
  4014  000E74  24F3               	addwf	prodl,w,c
  4015  000E76  6ED9               	movwf	fsr2l,c
  4016  000E78  0E01               	movlw	high main@headerBuf
  4017  000E7A  20F4               	addwfc	prodh,w,c
  4018  000E7C  6EDA               	movwf	fsr2h,c
  4019  000E7E  50DF               	movf	indf2,w,c
  4020  000E80  ECA3  F02A         	call	_ipv4_streamToTransmissionBuffer
  4021                           
  4022                           ;main.c: 159: } else
  4023  000E84  D00C               	goto	l666
  4024  000E86                     l665:
  4025                           
  4026                           ;main.c: 160: ipv4_streamToTransmissionBuffer(0, stack.pendingPacketToSend);
  4027  000E86  EE22  F08C         	lfsr	2,_stack+53
  4028  000E8A  EE00  F07E         	lfsr	0,ipv4_streamToTransmissionBuffer@packet
  4029  000E8E  0E41               	movlw	65
  4030  000E90                     u12821:
  4031  000E90  CFDB FFEB          	movff	plusw2,plusw0
  4032  000E94  06E8               	decf	wreg,f,c
  4033  000E96  E2FC               	bc	u12821
  4034  000E98  0E00               	movlw	0
  4035  000E9A  ECA3  F02A         	call	_ipv4_streamToTransmissionBuffer
  4036  000E9E                     l666:
  4037  000E9E  0101               	movlb	1	; () banked
  4038  000EA0  2BBA               	incf	main@i& (0+255),f,b
  4039  000EA2                     l663:
  4040                           
  4041                           ; BSR set to: 1
  4042                           
  4043                           ; BSR set to: 1
  4044  000EA2  51BA               	movf	main@i& (0+255),w,b
  4045  000EA4  6F91               	movwf	??_main& (0+255),b
  4046  000EA6  6B92               	clrf	(??_main+1)& (0+255),b
  4047  000EA8  0102               	movlb	2	; () banked
  4048  000EAA  5190               	movf	(_stack+57)& (0+255),w,b
  4049  000EAC  0101               	movlb	1	; () banked
  4050  000EAE  5D91               	subwf	??_main& (0+255),w,b
  4051  000EB0  0102               	movlb	2	; () banked
  4052  000EB2  5191               	movf	(_stack+58)& (0+255),w,b
  4053  000EB4  0101               	movlb	1	; () banked
  4054  000EB6  5992               	subwfb	(??_main+1)& (0+255),w,b
  4055  000EB8  A0D8               	btfss	status,0,c
  4056  000EBA  D7BF               	goto	l664
  4057                           
  4058                           ; BSR set to: 1
  4059                           ;main.c: 161: }
  4060                           ;main.c: 162: UARTTransmitText("[IPv4]: A packet was prepared (");
  4061                           
  4062                           ; BSR set to: 1
  4063  000EBC  0EEF               	movlw	low STR_42
  4064  000EBE  0100               	movlb	0	; () banked
  4065  000EC0  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4066  000EC2  0E7C               	movlw	high STR_42
  4067  000EC4  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4068  000EC6  EC27  F027         	call	_UARTTransmitText	;wreg free
  4069                           
  4070                           ;main.c: 163: UARTTransmitText(ipAdressToString(stack.pendingPacketToSend.ipv4Header.sou
      +                          rce));
  4071  000ECA  C29B  F073         	movff	_stack+68,ipAdressToString@ip
  4072  000ECE  C29C  F074         	movff	_stack+69,ipAdressToString@ip+1
  4073  000ED2  C29D  F075         	movff	_stack+70,ipAdressToString@ip+2
  4074  000ED6  C29E  F076         	movff	_stack+71,ipAdressToString@ip+3
  4075  000EDA  ECF3  F013         	call	_ipAdressToString	;wreg free
  4076  000EDE  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
  4077  000EE2  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
  4078  000EE6  EC27  F027         	call	_UARTTransmitText	;wreg free
  4079                           
  4080                           ;main.c: 164: UARTTransmitText(" -> ");
  4081  000EEA  0ED4               	movlw	low STR_43
  4082  000EEC  0100               	movlb	0	; () banked
  4083  000EEE  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4084  000EF0  0E7F               	movlw	high STR_43
  4085  000EF2  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4086  000EF4  EC27  F027         	call	_UARTTransmitText	;wreg free
  4087                           
  4088                           ;main.c: 165: UARTTransmitText(ipAdressToString(stack.pendingPacketToSend.ipv4Header.des
      +                          tination));
  4089  000EF8  C29F  F073         	movff	_stack+72,ipAdressToString@ip
  4090  000EFC  C2A0  F074         	movff	_stack+73,ipAdressToString@ip+1
  4091  000F00  C2A1  F075         	movff	_stack+74,ipAdressToString@ip+2
  4092  000F04  C2A2  F076         	movff	_stack+75,ipAdressToString@ip+3
  4093  000F08  ECF3  F013         	call	_ipAdressToString	;wreg free
  4094  000F0C  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
  4095  000F10  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
  4096  000F14  EC27  F027         	call	_UARTTransmitText	;wreg free
  4097                           
  4098                           ;main.c: 166: UARTTransmitText(")\n\r");
  4099  000F18  0EEA               	movlw	low STR_44
  4100  000F1A  0100               	movlb	0	; () banked
  4101  000F1C  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4102  000F1E  0E7F               	movlw	high STR_44
  4103  000F20  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4104  000F22  EC27  F027         	call	_UARTTransmitText	;wreg free
  4105                           
  4106                           ;main.c: 168: stack.background.fPacketPending = 1;
  4107  000F26  0E01               	movlw	1
  4108  000F28  0102               	movlb	2	; () banked
  4109  000F2A  6F8B               	movwf	(_stack+52)& (0+255),b
  4110                           
  4111                           ; BSR set to: 2
  4112                           
  4113                           ; BSR set to: 2
  4114                           
  4115                           ; BSR set to: 2
  4116  000F2C  D6F7               	goto	l656
  4117  000F2E                     __end_of_main:
  4118                           	opt stack 0
  4119                           tblptru	equ	0xFF8
  4120                           tblptrh	equ	0xFF7
  4121                           tblptrl	equ	0xFF6
  4122                           tablat	equ	0xFF5
  4123                           prodh	equ	0xFF4
  4124                           prodl	equ	0xFF3
  4125                           intcon	equ	0xFF2
  4126                           intcon3	equ	0xFF0
  4127                           indf0	equ	0xFEF
  4128                           postinc0	equ	0xFEE
  4129                           plusw0	equ	0xFEB
  4130                           fsr0h	equ	0xFEA
  4131                           fsr0l	equ	0xFE9
  4132                           wreg	equ	0xFE8
  4133                           postdec1	equ	0xFE5
  4134                           fsr1l	equ	0xFE1
  4135                           indf2	equ	0xFDF
  4136                           plusw2	equ	0xFDB
  4137                           fsr2h	equ	0xFDA
  4138                           fsr2l	equ	0xFD9
  4139                           status	equ	0xFD8
  4140                           
  4141 ;; *************** function _stack_init *****************
  4142 ;; Defined at:
  4143 ;;		line 27 in file "src/stack/stack.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;		None
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  3  549[None  ] struct error
  4150 ;; Registers used:
  4151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4157 ;;      Params:         0       0       0       0       0       0       0       0       0
  4158 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4160 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4161 ;;Total ram usage:        0 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    8
  4164 ;; This function calls:
  4165 ;;		_arp_init
  4166 ;;		_ipv4_init
  4167 ;; This function is called by:
  4168 ;;		_main
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text1
  4173  005824                     __ptext1:
  4174                           	opt stack 0
  4175  005824                     _stack_init:
  4176                           	opt stack 22
  4177                           
  4178                           ;stack.c: 28: arp_init();
  4179                           
  4180                           ; BSR set to: 2
  4181                           ;incstack = 0
  4182  005824  ECE9  F024         	call	_arp_init	;wreg free
  4183                           
  4184                           ;stack.c: 29: ipv4_init();
  4185  005828  EC72  F02B         	call	_ipv4_init	;wreg free
  4186  00582C  0012               	return		;funcret
  4187  00582E                     __end_of_stack_init:
  4188                           	opt stack 0
  4189                           tblptru	equ	0xFF8
  4190                           tblptrh	equ	0xFF7
  4191                           tblptrl	equ	0xFF6
  4192                           tablat	equ	0xFF5
  4193                           prodh	equ	0xFF4
  4194                           prodl	equ	0xFF3
  4195                           intcon	equ	0xFF2
  4196                           intcon3	equ	0xFF0
  4197                           indf0	equ	0xFEF
  4198                           postinc0	equ	0xFEE
  4199                           plusw0	equ	0xFEB
  4200                           fsr0h	equ	0xFEA
  4201                           fsr0l	equ	0xFE9
  4202                           wreg	equ	0xFE8
  4203                           postdec1	equ	0xFE5
  4204                           fsr1l	equ	0xFE1
  4205                           indf2	equ	0xFDF
  4206                           plusw2	equ	0xFDB
  4207                           fsr2h	equ	0xFDA
  4208                           fsr2l	equ	0xFD9
  4209                           status	equ	0xFD8
  4210                           
  4211 ;; *************** function _ipv4_init *****************
  4212 ;; Defined at:
  4213 ;;		line 327 in file "src/stack/protocols/ipv4.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;		None
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;		None
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      void 
  4220 ;; Registers used:
  4221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4227 ;;      Params:         0       0       0       0       0       0       0       0       0
  4228 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4230 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4231 ;;Total ram usage:        0 bytes
  4232 ;; Hardware stack levels used:    1
  4233 ;; Hardware stack levels required when called:    5
  4234 ;; This function calls:
  4235 ;;		_ipv4_setToAllZero
  4236 ;; This function is called by:
  4237 ;;		_stack_init
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           	psect	text2
  4242  0056E4                     __ptext2:
  4243                           	opt stack 0
  4244  0056E4                     _ipv4_init:
  4245                           	opt stack 24
  4246                           
  4247                           ;ipv4.c: 328: fSrcAddrChanged = 0;
  4248                           
  4249                           ;incstack = 0
  4250  0056E4  904E               	bcf	_fSrcAddrChanged/(0+8),_fSrcAddrChanged& (0+7),c
  4251                           
  4252                           ;ipv4.c: 329: ipv4_setToAllZero(&ipSource);
  4253  0056E6  0EF2               	movlw	low _ipSource
  4254  0056E8  0100               	movlb	0	; () banked
  4255  0056EA  6F60               	movwf	ipv4_setToAllZero@ip& (0+255),b
  4256  0056EC  0E01               	movlw	high _ipSource
  4257  0056EE  6F61               	movwf	(ipv4_setToAllZero@ip+1)& (0+255),b
  4258  0056F0  ECF3  F02A         	call	_ipv4_setToAllZero	;wreg free
  4259                           
  4260                           ;ipv4.c: 330: ipv4_setToAllZero(&ipPreliminarySource);
  4261  0056F4  0EEE               	movlw	low _ipPreliminarySource
  4262  0056F6  0100               	movlb	0	; () banked
  4263  0056F8  6F60               	movwf	ipv4_setToAllZero@ip& (0+255),b
  4264  0056FA  0E01               	movlw	high _ipPreliminarySource
  4265  0056FC  6F61               	movwf	(ipv4_setToAllZero@ip+1)& (0+255),b
  4266  0056FE  ECF3  F02A         	call	_ipv4_setToAllZero	;wreg free
  4267  005702  0012               	return		;funcret
  4268  005704                     __end_of_ipv4_init:
  4269                           	opt stack 0
  4270                           tblptru	equ	0xFF8
  4271                           tblptrh	equ	0xFF7
  4272                           tblptrl	equ	0xFF6
  4273                           tablat	equ	0xFF5
  4274                           prodh	equ	0xFF4
  4275                           prodl	equ	0xFF3
  4276                           intcon	equ	0xFF2
  4277                           intcon3	equ	0xFF0
  4278                           indf0	equ	0xFEF
  4279                           postinc0	equ	0xFEE
  4280                           plusw0	equ	0xFEB
  4281                           fsr0h	equ	0xFEA
  4282                           fsr0l	equ	0xFE9
  4283                           wreg	equ	0xFE8
  4284                           postdec1	equ	0xFE5
  4285                           fsr1l	equ	0xFE1
  4286                           indf2	equ	0xFDF
  4287                           plusw2	equ	0xFDB
  4288                           fsr2h	equ	0xFDA
  4289                           fsr2l	equ	0xFD9
  4290                           status	equ	0xFD8
  4291                           
  4292 ;; *************** function _srand *****************
  4293 ;; Defined at:
  4294 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  x               2   26[BANK0 ] unsigned int 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;		None
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      void 
  4301 ;; Registers used:
  4302 ;;		status,2
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4308 ;;      Params:         0       2       0       0       0       0       0       0       0
  4309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4311 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4312 ;;Total ram usage:        2 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    4
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_main
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text3
  4323  0057EC                     __ptext3:
  4324                           	opt stack 0
  4325  0057EC                     _srand:
  4326                           	opt stack 26
  4327                           
  4328                           ;incstack = 0
  4329  0057EC  C07A  F048         	movff	srand@x,_randx
  4330  0057F0  C07B  F049         	movff	srand@x+1,_randx+1
  4331  0057F4  6A4A               	clrf	_randx+2,c
  4332  0057F6  6A4B               	clrf	_randx+3,c
  4333  0057F8  0012               	return		;funcret
  4334  0057FA                     __end_of_srand:
  4335                           	opt stack 0
  4336                           tblptru	equ	0xFF8
  4337                           tblptrh	equ	0xFF7
  4338                           tblptrl	equ	0xFF6
  4339                           tablat	equ	0xFF5
  4340                           prodh	equ	0xFF4
  4341                           prodl	equ	0xFF3
  4342                           intcon	equ	0xFF2
  4343                           intcon3	equ	0xFF0
  4344                           indf0	equ	0xFEF
  4345                           postinc0	equ	0xFEE
  4346                           plusw0	equ	0xFEB
  4347                           fsr0h	equ	0xFEA
  4348                           fsr0l	equ	0xFE9
  4349                           wreg	equ	0xFE8
  4350                           postdec1	equ	0xFE5
  4351                           fsr1l	equ	0xFE1
  4352                           indf2	equ	0xFDF
  4353                           plusw2	equ	0xFDB
  4354                           fsr2h	equ	0xFDA
  4355                           fsr2l	equ	0xFD9
  4356                           status	equ	0xFD8
  4357                           
  4358 ;; *************** function _sevenSegmentInit *****************
  4359 ;; Defined at:
  4360 ;;		line 28 in file "src/system/sevenseg.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;		None
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;		None
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  1    wreg      void 
  4367 ;; Registers used:
  4368 ;;		wreg, status,2, status,0
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4374 ;;      Params:         0       0       0       0       0       0       0       0       0
  4375 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4377 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4378 ;;Total ram usage:        0 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; Hardware stack levels required when called:    4
  4381 ;; This function calls:
  4382 ;;		Nothing
  4383 ;; This function is called by:
  4384 ;;		_main
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text4
  4389  005720                     __ptext4:
  4390                           	opt stack 0
  4391  005720                     _sevenSegmentInit:
  4392                           	opt stack 26
  4393                           
  4394                           ;sevenseg.c: 30: PORTC &= ~(0x07);
  4395                           
  4396                           ;incstack = 0
  4397  005720  0EF8               	movlw	248
  4398  005722  1682               	andwf	3970,f,c	;volatile
  4399                           
  4400                           ;sevenseg.c: 32: TRISC&= ~0x07;;
  4401  005724  0EF8               	movlw	248
  4402  005726  1694               	andwf	3988,f,c	;volatile
  4403                           
  4404                           ;sevenseg.c: 33: TRISA &=~0xff;;
  4405  005728  0E00               	movlw	0
  4406  00572A  6E92               	movwf	3986,c	;volatile
  4407                           
  4408                           ;sevenseg.c: 35: ANSELA&=~0xff;;
  4409  00572C  0E00               	movlw	0
  4410  00572E  010F               	movlb	15	; () banked
  4411  005730  6F5B               	movwf	91,b	;volatile
  4412                           
  4413                           ;sevenseg.c: 36: ANSELC&= ~0x07;;
  4414  005732  0EF8               	movlw	248
  4415  005734  175D               	andwf	93,f,b	;volatile
  4416                           
  4417                           ; BSR set to: 15
  4418                           ;sevenseg.c: 38: PORTA = 0xff;
  4419  005736  6880               	setf	3968,c	;volatile
  4420                           
  4421                           ; BSR set to: 15
  4422  005738  0012               	return		;funcret
  4423  00573A                     __end_of_sevenSegmentInit:
  4424                           	opt stack 0
  4425                           tblptru	equ	0xFF8
  4426                           tblptrh	equ	0xFF7
  4427                           tblptrl	equ	0xFF6
  4428                           tablat	equ	0xFF5
  4429                           prodh	equ	0xFF4
  4430                           prodl	equ	0xFF3
  4431                           intcon	equ	0xFF2
  4432                           intcon3	equ	0xFF0
  4433                           indf0	equ	0xFEF
  4434                           postinc0	equ	0xFEE
  4435                           plusw0	equ	0xFEB
  4436                           fsr0h	equ	0xFEA
  4437                           fsr0l	equ	0xFE9
  4438                           wreg	equ	0xFE8
  4439                           postdec1	equ	0xFE5
  4440                           fsr1l	equ	0xFE1
  4441                           indf2	equ	0xFDF
  4442                           plusw2	equ	0xFDB
  4443                           fsr2h	equ	0xFDA
  4444                           fsr2l	equ	0xFD9
  4445                           status	equ	0xFD8
  4446                           
  4447 ;; *************** function _printEthernetState *****************
  4448 ;; Defined at:
  4449 ;;		line 174 in file "src/system/main.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  state          15   58[BANK0 ] struct ethernetConnectio
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;		None
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4463 ;;      Params:         0      15       0       0       0       0       0       0       0
  4464 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4465 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4466 ;;      Totals:         0      15       0       0       0       0       0       0       0
  4467 ;;Total ram usage:       15 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:    5
  4470 ;; This function calls:
  4471 ;;		_UARTTransmitText
  4472 ;; This function is called by:
  4473 ;;		_main
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text5
  4478  0042E8                     __ptext5:
  4479                           	opt stack 0
  4480  0042E8                     _printEthernetState:
  4481                           	opt stack 25
  4482                           
  4483                           ;main.c: 175: static ethernetConnection_t oldState;
  4484                           ;main.c: 176: if (state.link != oldState.link) {
  4485                           
  4486                           ; BSR set to: 15
  4487                           ;incstack = 0
  4488  0042E8  0102               	movlb	2	; () banked
  4489  0042EA  5148               	movf	printEthernetState@oldState& (0+255),w,b
  4490  0042EC  0100               	movlb	0	; () banked
  4491  0042EE  199A               	xorwf	printEthernetState@state& (0+255),w,b
  4492  0042F0  B4D8               	btfsc	status,2,c
  4493  0042F2  D041               	goto	l685
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;main.c: 177: if (state.link == NO_LINK) {
  4497  0042F4  519A               	movf	printEthernetState@state& (0+255),w,b
  4498  0042F6  A4D8               	btfss	status,2,c
  4499  0042F8  D007               	goto	l676
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;main.c: 178: UARTTransmitText("Link lost.\n\r");
  4503  0042FA  0E25               	movlw	low STR_45
  4504  0042FC  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4505  0042FE  0E7F               	movlw	high STR_45
  4506  004300  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4507  004302  EC27  F027         	call	_UARTTransmitText	;wreg free
  4508                           
  4509                           ;main.c: 179: } else if (state.link == LINK_ESTABLISHED) {
  4510  004306  D00A               	goto	l678
  4511  004308                     l676:
  4512  004308  0100               	movlb	0	; () banked
  4513  00430A  059A               	decf	printEthernetState@state& (0+255),w,b
  4514  00430C  A4D8               	btfss	status,2,c
  4515  00430E  D006               	goto	l678
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;main.c: 180: UARTTransmitText("Link established. ");
  4519  004310  0E70               	movlw	low STR_46
  4520  004312  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4521  004314  0E7E               	movlw	high STR_46
  4522  004316  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4523  004318  EC27  F027         	call	_UARTTransmitText	;wreg free
  4524  00431C                     l678:
  4525                           
  4526                           ;main.c: 181: }
  4527                           ;main.c: 183: if (state.link == LINK_ESTABLISHED) {
  4528  00431C  0100               	movlb	0	; () banked
  4529  00431E  059A               	decf	printEthernetState@state& (0+255),w,b
  4530  004320  A4D8               	btfss	status,2,c
  4531  004322  D029               	goto	l685
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;main.c: 184: if (state.speed == TEN_MBIT) {
  4535  004324  519B               	movf	(printEthernetState@state+1)& (0+255),w,b
  4536  004326  A4D8               	btfss	status,2,c
  4537  004328  D007               	goto	l680
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;main.c: 185: UARTTransmitText("Speed is 10 Mbps, ");
  4541  00432A  0E5D               	movlw	low STR_47
  4542  00432C  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4543  00432E  0E7E               	movlw	high STR_47
  4544  004330  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4545  004332  EC27  F027         	call	_UARTTransmitText	;wreg free
  4546                           
  4547                           ;main.c: 186: } else if (state.speed == HUNDRED_MBIT) {
  4548  004336  D00A               	goto	l682
  4549  004338                     l680:
  4550  004338  0100               	movlb	0	; () banked
  4551  00433A  059B               	decf	(printEthernetState@state+1)& (0+255),w,b
  4552  00433C  A4D8               	btfss	status,2,c
  4553  00433E  D006               	goto	l682
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;main.c: 187: UARTTransmitText("Speed is 100 Mbps, ");
  4557  004340  0E22               	movlw	low STR_48
  4558  004342  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4559  004344  0E7E               	movlw	high STR_48
  4560  004346  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4561  004348  EC27  F027         	call	_UARTTransmitText	;wreg free
  4562  00434C                     l682:
  4563                           
  4564                           ;main.c: 188: }
  4565                           ;main.c: 189: if (state.duplex == HALF_DUPLEX) {
  4566  00434C  0100               	movlb	0	; () banked
  4567  00434E  519C               	movf	(printEthernetState@state+2)& (0+255),w,b
  4568  004350  A4D8               	btfss	status,2,c
  4569  004352  D007               	goto	l683
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;main.c: 190: UARTTransmitText("connection is Half Duplex.\n\r");
  4573  004354  0E69               	movlw	low STR_49
  4574  004356  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4575  004358  0E7D               	movlw	high STR_49
  4576  00435A  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4577  00435C  EC27  F027         	call	_UARTTransmitText	;wreg free
  4578                           
  4579                           ;main.c: 191: } else if (state.duplex == FULL_DUPLEX) {
  4580  004360  D00A               	goto	l685
  4581  004362                     l683:
  4582  004362  0100               	movlb	0	; () banked
  4583  004364  059C               	decf	(printEthernetState@state+2)& (0+255),w,b
  4584  004366  A4D8               	btfss	status,2,c
  4585  004368  D006               	goto	l685
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;main.c: 193: UARTTransmitText("connection is Full Duplex.\n\r");
  4589  00436A  0E86               	movlw	low STR_50
  4590  00436C  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4591  00436E  0E7D               	movlw	high STR_50
  4592  004370  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4593  004372  EC27  F027         	call	_UARTTransmitText	;wreg free
  4594  004376                     l685:
  4595                           
  4596                           ;main.c: 194: }
  4597                           ;main.c: 195: }
  4598                           ;main.c: 196: }
  4599                           ;main.c: 197: oldState = state;
  4600  004376  EE20  F09A         	lfsr	2,printEthernetState@state
  4601  00437A  EE12  F048         	lfsr	1,printEthernetState@oldState
  4602  00437E  0E0E               	movlw	14
  4603  004380                     u12631:
  4604  004380  CFDB FFE3          	movff	plusw2,plusw1
  4605  004384  06E8               	decf	wreg,f,c
  4606  004386  E2FC               	bc	u12631
  4607  004388  0012               	return		;funcret
  4608  00438A                     __end_of_printEthernetState:
  4609                           	opt stack 0
  4610                           tblptru	equ	0xFF8
  4611                           tblptrh	equ	0xFF7
  4612                           tblptrl	equ	0xFF6
  4613                           tablat	equ	0xFF5
  4614                           prodh	equ	0xFF4
  4615                           prodl	equ	0xFF3
  4616                           intcon	equ	0xFF2
  4617                           intcon3	equ	0xFF0
  4618                           indf0	equ	0xFEF
  4619                           postinc0	equ	0xFEE
  4620                           plusw0	equ	0xFEB
  4621                           fsr0h	equ	0xFEA
  4622                           fsr0l	equ	0xFE9
  4623                           wreg	equ	0xFE8
  4624                           postdec1	equ	0xFE5
  4625                           plusw1	equ	0xFE3
  4626                           fsr1l	equ	0xFE1
  4627                           indf2	equ	0xFDF
  4628                           plusw2	equ	0xFDB
  4629                           fsr2h	equ	0xFDA
  4630                           fsr2l	equ	0xFD9
  4631                           status	equ	0xFD8
  4632                           
  4633 ;; *************** function _printErrorMessage *****************
  4634 ;; Defined at:
  4635 ;;		line 200 in file "src/system/main.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;  err             3   58[BANK0 ] struct error
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;		None
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  1    wreg      void 
  4642 ;; Registers used:
  4643 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4649 ;;      Params:         0       3       0       0       0       0       0       0       0
  4650 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4651 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4652 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4653 ;;Total ram usage:        5 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    8
  4656 ;; This function calls:
  4657 ;;		_UARTTransmitText
  4658 ;;		_intToString
  4659 ;; This function is called by:
  4660 ;;		_main
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text6
  4665  0036FE                     __ptext6:
  4666                           	opt stack 0
  4667  0036FE                     _printErrorMessage:
  4668                           	opt stack 22
  4669                           
  4670                           ;main.c: 201: UARTTransmitText("[ERROR]");
  4671                           
  4672                           ;incstack = 0
  4673  0036FE  0EA4               	movlw	low STR_51
  4674  003700  0100               	movlb	0	; () banked
  4675  003702  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4676  003704  0E7F               	movlw	high STR_51
  4677  003706  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4678  003708  EC27  F027         	call	_UARTTransmitText	;wreg free
  4679                           
  4680                           ;main.c: 202: switch (err.module) {
  4681  00370C  D028               	goto	l689
  4682  00370E                     
  4683                           ;main.c: 204: UARTTransmitText(" MEMORY MODULE: ");
  4684  00370E  0EB9               	movlw	low STR_52
  4685  003710  0100               	movlb	0	; () banked
  4686  003712  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4687  003714  0E7E               	movlw	high STR_52
  4688  003716  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4689  003718  EC27  F027         	call	_UARTTransmitText	;wreg free
  4690                           
  4691                           ;main.c: 205: break;
  4692  00371C  D050               	goto	l697
  4693  00371E                     
  4694                           ;main.c: 207: UARTTransmitText(" ETHERNET CONTROLLER MODULE: ");
  4695  00371E  0E2D               	movlw	low STR_53
  4696  003720  0100               	movlb	0	; () banked
  4697  003722  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4698  003724  0E7D               	movlw	high STR_53
  4699  003726  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4700  003728  EC27  F027         	call	_UARTTransmitText	;wreg free
  4701                           
  4702                           ;main.c: 208: break;
  4703  00372C  D048               	goto	l697
  4704  00372E                     
  4705                           ;main.c: 210: UARTTransmitText(" ETHERNET MODULE: ");
  4706  00372E  0E83               	movlw	low STR_54
  4707  003730  0100               	movlb	0	; () banked
  4708  003732  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4709  003734  0E7E               	movlw	high STR_54
  4710  003736  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4711  003738  EC27  F027         	call	_UARTTransmitText	;wreg free
  4712                           
  4713                           ;main.c: 211: break;
  4714  00373C  D040               	goto	l697
  4715  00373E                     
  4716                           ;main.c: 213: UARTTransmitText(" ARP MODULE: ");
  4717  00373E  0E17               	movlw	low STR_55
  4718  003740  0100               	movlb	0	; () banked
  4719  003742  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4720  003744  0E7F               	movlw	high STR_55
  4721  003746  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4722  003748  EC27  F027         	call	_UARTTransmitText	;wreg free
  4723                           
  4724                           ;main.c: 214: break;
  4725  00374C  D038               	goto	l697
  4726  00374E                     
  4727                           ;main.c: 216: UARTTransmitText(" IPv4 MODULE: ");
  4728  00374E  0EF9               	movlw	low STR_56
  4729  003750  0100               	movlb	0	; () banked
  4730  003752  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4731  003754  0E7E               	movlw	high STR_56
  4732  003756  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4733  003758  EC27  F027         	call	_UARTTransmitText	;wreg free
  4734                           
  4735                           ;main.c: 219: }
  4736                           
  4737                           ;main.c: 218: break;
  4738                           
  4739                           ;main.c: 217: default:
  4740  00375C  D030               	goto	l697
  4741  00375E                     l689:
  4742  00375E  0100               	movlb	0	; () banked
  4743  003760  519A               	movf	printErrorMessage@err& (0+255),w,b
  4744                           
  4745                           ; Switch size 1, requested type "space"
  4746                           ; Number of cases is 5, Range of values is 0 to 4
  4747                           ; switch strategies available:
  4748                           ; Name         Instructions Cycles
  4749                           ; simple_byte           16     9 (average)
  4750                           ;	Chosen strategy is simple_byte
  4751  003762  0A00               	xorlw	0	; case 0
  4752  003764  B4D8               	btfsc	status,2,c
  4753  003766  D7D3               	goto	l690
  4754  003768  0A01               	xorlw	1	; case 1
  4755  00376A  B4D8               	btfsc	status,2,c
  4756  00376C  D7D8               	goto	l692
  4757  00376E  0A03               	xorlw	3	; case 2
  4758  003770  B4D8               	btfsc	status,2,c
  4759  003772  D7DD               	goto	l693
  4760  003774  0A01               	xorlw	1	; case 3
  4761  003776  B4D8               	btfsc	status,2,c
  4762  003778  D7E2               	goto	l694
  4763  00377A  0A07               	xorlw	7	; case 4
  4764  00377C  B4D8               	btfsc	status,2,c
  4765  00377E  D7E7               	goto	l695
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;main.c: 220: switch (err.code) {
  4769  003780  D01E               	goto	l697
  4770  003782                     
  4771                           ; BSR set to: 0
  4772                           ;main.c: 222: UARTTransmitText("Ethernet controller is unresponsive.");
  4773                           
  4774                           ; BSR set to: 0
  4775  003782  0EB3               	movlw	low STR_57
  4776  003784  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4777  003786  0E7B               	movlw	high STR_57
  4778  003788  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4779  00378A  EC27  F027         	call	_UARTTransmitText	;wreg free
  4780                           
  4781                           ;main.c: 223: break;
  4782  00378E  D030               	goto	l699
  4783  003790                     
  4784                           ;main.c: 225: UARTTransmitText("Ethernet controller has returned an unknown device ID.")
      +                          ;
  4785  003790  0E50               	movlw	low STR_58
  4786  003792  0100               	movlb	0	; () banked
  4787  003794  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4788  003796  0E7A               	movlw	high STR_58
  4789  003798  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4790  00379A  EC27  F027         	call	_UARTTransmitText	;wreg free
  4791                           
  4792                           ;main.c: 226: break;
  4793  00379E  D028               	goto	l699
  4794  0037A0                     
  4795                           ;main.c: 228: UARTTransmitText("IP address could not be resolved.");
  4796  0037A0  0E8B               	movlw	low STR_59
  4797  0037A2  0100               	movlb	0	; () banked
  4798  0037A4  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4799  0037A6  0E7C               	movlw	high STR_59
  4800  0037A8  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4801  0037AA  EC27  F027         	call	_UARTTransmitText	;wreg free
  4802  0037AE                     
  4803                           ;main.c: 231: UARTTransmitText("An unknown error has occured.");
  4804                           
  4805                           ;main.c: 230: case ERROR_ETHERNET_CONTROLLER_UNKNOWN:
  4806  0037AE  0E4B               	movlw	low STR_60
  4807  0037B0  0100               	movlb	0	; () banked
  4808  0037B2  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4809  0037B4  0E7D               	movlw	high STR_60
  4810  0037B6  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4811  0037B8  EC27  F027         	call	_UARTTransmitText	;wreg free
  4812                           
  4813                           ;main.c: 233: }
  4814                           
  4815                           ;main.c: 232: break;
  4816  0037BC  D019               	goto	l699
  4817  0037BE                     l697:
  4818  0037BE  EE20  F09B         	lfsr	2,printErrorMessage@err+1
  4819  0037C2  CFDE F09D          	movff	postinc2,??_printErrorMessage
  4820  0037C6  CFDD F09E          	movff	postdec2,??_printErrorMessage+1
  4821                           
  4822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4823                           ; Switch size 1, requested type "space"
  4824                           ; Number of cases is 1, Range of values is 1 to 1
  4825                           ; switch strategies available:
  4826                           ; Name         Instructions Cycles
  4827                           ; simple_byte            4     3 (average)
  4828                           ;	Chosen strategy is simple_byte
  4829  0037CA  0100               	movlb	0	; () banked
  4830  0037CC  519E               	movf	(??_printErrorMessage+1)& (0+255),w,b
  4831  0037CE  0A01               	xorlw	1	; case 1
  4832  0037D0  A4D8               	btfss	status,2,c
  4833  0037D2  D7ED               	goto	l702
  4834                           
  4835                           ; BSR set to: 0
  4836                           ; Switch size 1, requested type "space"
  4837                           ; Number of cases is 4, Range of values is 45 to 147
  4838                           ; switch strategies available:
  4839                           ; Name         Instructions Cycles
  4840                           ; simple_byte           13     7 (average)
  4841                           ;	Chosen strategy is simple_byte
  4842  0037D4  519D               	movf	??_printErrorMessage& (0+255),w,b
  4843  0037D6  0A2D               	xorlw	45	; case 45
  4844  0037D8  B4D8               	btfsc	status,2,c
  4845  0037DA  D7DA               	goto	l700
  4846  0037DC  0A03               	xorlw	3	; case 46
  4847  0037DE  B4D8               	btfsc	status,2,c
  4848  0037E0  D7D0               	goto	l698
  4849  0037E2  0AA1               	xorlw	161	; case 143
  4850  0037E4  B4D8               	btfsc	status,2,c
  4851  0037E6  D7E3               	goto	l702
  4852  0037E8  0A1C               	xorlw	28	; case 147
  4853  0037EA  B4D8               	btfsc	status,2,c
  4854  0037EC  D7D9               	goto	l701
  4855  0037EE  D7DF               	goto	l702
  4856  0037F0                     l699:
  4857                           
  4858                           ;main.c: 235: UARTTransmitText(" (Code: ");
  4859                           
  4860                           ; BSR set to: 0
  4861  0037F0  0E8A               	movlw	low STR_61
  4862  0037F2  0100               	movlb	0	; () banked
  4863  0037F4  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4864  0037F6  0E7F               	movlw	high STR_61
  4865  0037F8  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4866  0037FA  EC27  F027         	call	_UARTTransmitText	;wreg free
  4867                           
  4868                           ;main.c: 236: UARTTransmitText(intToString(err.code));
  4869  0037FE  C09B  F084         	movff	printErrorMessage@err+1,intToString@val
  4870  003802  C09C  F085         	movff	printErrorMessage@err+2,intToString@val+1
  4871  003806  0100               	movlb	0	; () banked
  4872  003808  6B86               	clrf	(intToString@val+2)& (0+255),b
  4873  00380A  6B87               	clrf	(intToString@val+3)& (0+255),b
  4874  00380C  ECD8  F029         	call	_intToString	;wreg free
  4875  003810  C084  F098         	movff	?_intToString,UARTTransmitText@str
  4876  003814  C085  F099         	movff	?_intToString+1,UARTTransmitText@str+1
  4877  003818  EC27  F027         	call	_UARTTransmitText	;wreg free
  4878                           
  4879                           ;main.c: 237: UARTTransmitText(").\n\r");
  4880  00381C  0ECF               	movlw	low STR_62
  4881  00381E  0100               	movlb	0	; () banked
  4882  003820  6F98               	movwf	UARTTransmitText@str& (0+255),b
  4883  003822  0E7F               	movlw	high STR_62
  4884  003824  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  4885  003826  EC27  F027         	call	_UARTTransmitText	;wreg free
  4886  00382A  0012               	return		;funcret
  4887  00382C                     __end_of_printErrorMessage:
  4888                           	opt stack 0
  4889                           tblptru	equ	0xFF8
  4890                           tblptrh	equ	0xFF7
  4891                           tblptrl	equ	0xFF6
  4892                           tablat	equ	0xFF5
  4893                           prodh	equ	0xFF4
  4894                           prodl	equ	0xFF3
  4895                           intcon	equ	0xFF2
  4896                           intcon3	equ	0xFF0
  4897                           indf0	equ	0xFEF
  4898                           postinc0	equ	0xFEE
  4899                           plusw0	equ	0xFEB
  4900                           fsr0h	equ	0xFEA
  4901                           fsr0l	equ	0xFE9
  4902                           wreg	equ	0xFE8
  4903                           postdec1	equ	0xFE5
  4904                           plusw1	equ	0xFE3
  4905                           fsr1l	equ	0xFE1
  4906                           indf2	equ	0xFDF
  4907                           postinc2	equ	0xFDE
  4908                           postdec2	equ	0xFDD
  4909                           plusw2	equ	0xFDB
  4910                           fsr2h	equ	0xFDA
  4911                           fsr2l	equ	0xFD9
  4912                           status	equ	0xFD8
  4913                           
  4914 ;; *************** function _ipv4_writeHeaderIntoBuffer *****************
  4915 ;; Defined at:
  4916 ;;		line 105 in file "src/stack/protocols/ipv4.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  header         23    0[BANK0 ] struct ipv4_header
  4919 ;;  ptr             2   23[BANK0 ] PTR unsigned char 
  4920 ;;		 -> main@headerBuf(32), 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;		None
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      void 
  4925 ;; Registers used:
  4926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4932 ;;      Params:         0      25       0       0       0       0       0       0       0
  4933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4934 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4935 ;;      Totals:         0      27       0       0       0       0       0       0       0
  4936 ;;Total ram usage:       27 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:    4
  4939 ;; This function calls:
  4940 ;;		Nothing
  4941 ;; This function is called by:
  4942 ;;		_main
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text7
  4947  00303E                     __ptext7:
  4948                           	opt stack 0
  4949  00303E                     _ipv4_writeHeaderIntoBuffer:
  4950                           	opt stack 26
  4951                           
  4952                           ;ipv4.c: 106: *ptr = (header.version << 4) | (header.headerLength);
  4953                           
  4954                           ;incstack = 0
  4955  00303E  0100               	movlb	0	; () banked
  4956  003040  3960               	swapf	ipv4_writeHeaderIntoBuffer@header& (0+255),w,b
  4957  003042  0BF0               	andlw	240
  4958  003044  1161               	iorwf	(ipv4_writeHeaderIntoBuffer@header+1)& (0+255),w,b
  4959  003046  C077  FFD9         	movff	ipv4_writeHeaderIntoBuffer@ptr,fsr2l
  4960  00304A  C078  FFDA         	movff	ipv4_writeHeaderIntoBuffer@ptr+1,fsr2h
  4961  00304E  6EDF               	movwf	indf2,c
  4962                           
  4963                           ;ipv4.c: 107: *(ptr + 1) = (header.dscp << 2) | (header.ecn & 0x03);
  4964  003050  EE20 F001          	lfsr	2,1
  4965  003054  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  4966  003056  26D9               	addwf	fsr2l,f,c
  4967  003058  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  4968  00305A  22DA               	addwfc	fsr2h,f,c
  4969  00305C  C063  F079         	movff	ipv4_writeHeaderIntoBuffer@header+3,??_ipv4_writeHeaderIntoBuffer
  4970  003060  0E03               	movlw	3
  4971  003062  1779               	andwf	??_ipv4_writeHeaderIntoBuffer& (0+255),f,b
  4972  003064  4562               	rlncf	(ipv4_writeHeaderIntoBuffer@header+2)& (0+255),w,b
  4973  003066  46E8               	rlncf	wreg,f,c
  4974  003068  0BFC               	andlw	252
  4975  00306A  1179               	iorwf	??_ipv4_writeHeaderIntoBuffer& (0+255),w,b
  4976  00306C  6EDF               	movwf	indf2,c
  4977                           
  4978                           ;ipv4.c: 108: *(ptr + 2) = (header.totalLength & 0xff00) >> 8;
  4979  00306E  EE20 F002          	lfsr	2,2
  4980  003072  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  4981  003074  26D9               	addwf	fsr2l,f,c
  4982  003076  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  4983  003078  22DA               	addwfc	fsr2h,f,c
  4984  00307A  5165               	movf	(ipv4_writeHeaderIntoBuffer@header+5)& (0+255),w,b
  4985  00307C  6EDF               	movwf	indf2,c
  4986                           
  4987                           ;ipv4.c: 109: *(ptr + 3) = header.totalLength & 0x00ff;
  4988  00307E  EE20 F003          	lfsr	2,3
  4989  003082  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  4990  003084  26D9               	addwf	fsr2l,f,c
  4991  003086  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  4992  003088  22DA               	addwfc	fsr2h,f,c
  4993  00308A  C064  FFDF         	movff	ipv4_writeHeaderIntoBuffer@header+4,indf2
  4994                           
  4995                           ;ipv4.c: 110: *(ptr + 4) = (header.identification & 0xff00) >> 8;
  4996  00308E  EE20 F004          	lfsr	2,4
  4997  003092  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  4998  003094  26D9               	addwf	fsr2l,f,c
  4999  003096  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5000  003098  22DA               	addwfc	fsr2h,f,c
  5001  00309A  5167               	movf	(ipv4_writeHeaderIntoBuffer@header+7)& (0+255),w,b
  5002  00309C  6EDF               	movwf	indf2,c
  5003                           
  5004                           ;ipv4.c: 111: *(ptr + 5) = header.identification & 0x00ff;
  5005  00309E  EE20 F005          	lfsr	2,5
  5006  0030A2  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  5007  0030A4  26D9               	addwf	fsr2l,f,c
  5008  0030A6  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5009  0030A8  22DA               	addwfc	fsr2h,f,c
  5010  0030AA  C066  FFDF         	movff	ipv4_writeHeaderIntoBuffer@header+6,indf2
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;ipv4.c: 112: *(ptr + 6) = (header.flags << 5) | ((header.fragmentOffset & 0x1f00) >> 8)
      +                          ;
  5014  0030AE  EE20 F006          	lfsr	2,6
  5015  0030B2  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  5016  0030B4  26D9               	addwf	fsr2l,f,c
  5017  0030B6  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5018  0030B8  22DA               	addwfc	fsr2h,f,c
  5019  0030BA  EE10  F069         	lfsr	1,ipv4_writeHeaderIntoBuffer@header+9
  5020  0030BE  CFE6 F079          	movff	postinc1,??_ipv4_writeHeaderIntoBuffer
  5021  0030C2  CFE5 F07A          	movff	postdec1,??_ipv4_writeHeaderIntoBuffer+1
  5022  0030C6  C07A  F079         	movff	??_ipv4_writeHeaderIntoBuffer+1,??_ipv4_writeHeaderIntoBuffer
  5023  0030CA  6B7A               	clrf	(??_ipv4_writeHeaderIntoBuffer+1)& (0+255),b
  5024  0030CC  0E1F               	movlw	31
  5025  0030CE  1779               	andwf	??_ipv4_writeHeaderIntoBuffer& (0+255),f,b
  5026  0030D0  3968               	swapf	(ipv4_writeHeaderIntoBuffer@header+8)& (0+255),w,b
  5027  0030D2  46E8               	rlncf	wreg,f,c
  5028  0030D4  0BE0               	andlw	224
  5029  0030D6  1179               	iorwf	??_ipv4_writeHeaderIntoBuffer& (0+255),w,b
  5030  0030D8  6EDF               	movwf	indf2,c
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;ipv4.c: 113: *(ptr + 7) = (header.fragmentOffset & 0x00ff);
  5034  0030DA  EE20 F007          	lfsr	2,7
  5035  0030DE  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  5036  0030E0  26D9               	addwf	fsr2l,f,c
  5037  0030E2  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5038  0030E4  22DA               	addwfc	fsr2h,f,c
  5039  0030E6  C069  FFDF         	movff	ipv4_writeHeaderIntoBuffer@header+9,indf2
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;ipv4.c: 114: *(ptr + 8) = (header.timeToLive);
  5043  0030EA  EE20 F008          	lfsr	2,8
  5044  0030EE  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  5045  0030F0  26D9               	addwf	fsr2l,f,c
  5046  0030F2  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5047  0030F4  22DA               	addwfc	fsr2h,f,c
  5048  0030F6  C06B  FFDF         	movff	ipv4_writeHeaderIntoBuffer@header+11,indf2
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;ipv4.c: 115: *(ptr + 9) = (header.protocol);
  5052  0030FA  EE20 F009          	lfsr	2,9
  5053  0030FE  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  5054  003100  26D9               	addwf	fsr2l,f,c
  5055  003102  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5056  003104  22DA               	addwfc	fsr2h,f,c
  5057  003106  C06C  FFDF         	movff	ipv4_writeHeaderIntoBuffer@header+12,indf2
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;ipv4.c: 116: *(ptr + 10) = (header.checksum & 0xff00) >> 8;
  5061  00310A  EE20 F00A          	lfsr	2,10
  5062  00310E  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  5063  003110  26D9               	addwf	fsr2l,f,c
  5064  003112  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5065  003114  22DA               	addwfc	fsr2h,f,c
  5066  003116  516E               	movf	(ipv4_writeHeaderIntoBuffer@header+14)& (0+255),w,b
  5067  003118  6EDF               	movwf	indf2,c
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;ipv4.c: 117: *(ptr + 11) = (header.checksum & 0x00ff);
  5071  00311A  EE20 F00B          	lfsr	2,11
  5072  00311E  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  5073  003120  26D9               	addwf	fsr2l,f,c
  5074  003122  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5075  003124  22DA               	addwfc	fsr2h,f,c
  5076  003126  C06D  FFDF         	movff	ipv4_writeHeaderIntoBuffer@header+13,indf2
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;ipv4.c: 118: *(ptr + 12) = (header.source.address[0]);
  5080  00312A  EE20 F00C          	lfsr	2,12
  5081  00312E  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  5082  003130  26D9               	addwf	fsr2l,f,c
  5083  003132  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5084  003134  22DA               	addwfc	fsr2h,f,c
  5085  003136  C06F  FFDF         	movff	ipv4_writeHeaderIntoBuffer@header+15,indf2
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;ipv4.c: 119: *(ptr + 13) = (header.source.address[1]);
  5089  00313A  EE20 F00D          	lfsr	2,13
  5090  00313E  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  5091  003140  26D9               	addwf	fsr2l,f,c
  5092  003142  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5093  003144  22DA               	addwfc	fsr2h,f,c
  5094  003146  C070  FFDF         	movff	ipv4_writeHeaderIntoBuffer@header+16,indf2
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;ipv4.c: 120: *(ptr + 14) = (header.source.address[2]);
  5098  00314A  EE20 F00E          	lfsr	2,14
  5099  00314E  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  5100  003150  26D9               	addwf	fsr2l,f,c
  5101  003152  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5102  003154  22DA               	addwfc	fsr2h,f,c
  5103  003156  C071  FFDF         	movff	ipv4_writeHeaderIntoBuffer@header+17,indf2
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;ipv4.c: 121: *(ptr + 15) = (header.source.address[3]);
  5107  00315A  EE20 F00F          	lfsr	2,15
  5108  00315E  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  5109  003160  26D9               	addwf	fsr2l,f,c
  5110  003162  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5111  003164  22DA               	addwfc	fsr2h,f,c
  5112  003166  C072  FFDF         	movff	ipv4_writeHeaderIntoBuffer@header+18,indf2
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;ipv4.c: 122: *(ptr + 16) = (header.destination.address[0]);
  5116  00316A  EE20 F010          	lfsr	2,16
  5117  00316E  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  5118  003170  26D9               	addwf	fsr2l,f,c
  5119  003172  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5120  003174  22DA               	addwfc	fsr2h,f,c
  5121  003176  C073  FFDF         	movff	ipv4_writeHeaderIntoBuffer@header+19,indf2
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;ipv4.c: 123: *(ptr + 17) = (header.destination.address[1]);
  5125  00317A  EE20 F011          	lfsr	2,17
  5126  00317E  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  5127  003180  26D9               	addwf	fsr2l,f,c
  5128  003182  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5129  003184  22DA               	addwfc	fsr2h,f,c
  5130  003186  C074  FFDF         	movff	ipv4_writeHeaderIntoBuffer@header+20,indf2
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;ipv4.c: 124: *(ptr + 18) = (header.destination.address[2]);
  5134  00318A  EE20 F012          	lfsr	2,18
  5135  00318E  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  5136  003190  26D9               	addwf	fsr2l,f,c
  5137  003192  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5138  003194  22DA               	addwfc	fsr2h,f,c
  5139  003196  C075  FFDF         	movff	ipv4_writeHeaderIntoBuffer@header+21,indf2
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;ipv4.c: 125: *(ptr + 19) = (header.destination.address[3]);
  5143  00319A  EE20 F013          	lfsr	2,19
  5144  00319E  5177               	movf	ipv4_writeHeaderIntoBuffer@ptr& (0+255),w,b
  5145  0031A0  26D9               	addwf	fsr2l,f,c
  5146  0031A2  5178               	movf	(ipv4_writeHeaderIntoBuffer@ptr+1)& (0+255),w,b
  5147  0031A4  22DA               	addwfc	fsr2h,f,c
  5148  0031A6  C076  FFDF         	movff	ipv4_writeHeaderIntoBuffer@header+22,indf2
  5149                           
  5150                           ; BSR set to: 0
  5151  0031AA  0012               	return		;funcret
  5152  0031AC                     __end_of_ipv4_writeHeaderIntoBuffer:
  5153                           	opt stack 0
  5154                           tblptru	equ	0xFF8
  5155                           tblptrh	equ	0xFF7
  5156                           tblptrl	equ	0xFF6
  5157                           tablat	equ	0xFF5
  5158                           prodh	equ	0xFF4
  5159                           prodl	equ	0xFF3
  5160                           intcon	equ	0xFF2
  5161                           intcon3	equ	0xFF0
  5162                           indf0	equ	0xFEF
  5163                           postinc0	equ	0xFEE
  5164                           plusw0	equ	0xFEB
  5165                           fsr0h	equ	0xFEA
  5166                           fsr0l	equ	0xFE9
  5167                           wreg	equ	0xFE8
  5168                           postinc1	equ	0xFE6
  5169                           postdec1	equ	0xFE5
  5170                           plusw1	equ	0xFE3
  5171                           fsr1l	equ	0xFE1
  5172                           indf2	equ	0xFDF
  5173                           postinc2	equ	0xFDE
  5174                           postdec2	equ	0xFDD
  5175                           plusw2	equ	0xFDB
  5176                           fsr2h	equ	0xFDA
  5177                           fsr2l	equ	0xFD9
  5178                           status	equ	0xFD8
  5179                           
  5180 ;; *************** function _ipv4_txFrameRequest *****************
  5181 ;; Defined at:
  5182 ;;		line 37 in file "src/stack/protocols/ipv4.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  packet          2   71[BANK0 ] PTR struct ipv4_packet
  5185 ;;		 -> stack(123), 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      void 
  5190 ;; Registers used:
  5191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5197 ;;      Params:         0       2       0       0       0       0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5199 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5200 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5201 ;;Total ram usage:        6 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    9
  5204 ;; This function calls:
  5205 ;;		_ethernet_txFrameRequest
  5206 ;; This function is called by:
  5207 ;;		_main
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           	psect	text8
  5212  0035C8                     __ptext8:
  5213                           	opt stack 0
  5214  0035C8                     _ipv4_txFrameRequest:
  5215                           	opt stack 21
  5216                           
  5217                           ;ipv4.c: 38: packet->ethernet.length = packet->ipv4Header.totalLength + 8;
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;incstack = 0
  5221  0035C8  0100               	movlb	0	; () banked
  5222  0035CA  EE20 F004          	lfsr	2,4
  5223  0035CE  51A7               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
  5224  0035D0  26D9               	addwf	fsr2l,f,c
  5225  0035D2  51A8               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5226  0035D4  22DA               	addwfc	fsr2h,f,c
  5227  0035D6  CFDE F0A9          	movff	postinc2,??_ipv4_txFrameRequest
  5228  0035DA  CFDD F0AA          	movff	postdec2,??_ipv4_txFrameRequest+1
  5229  0035DE  0E08               	movlw	8
  5230  0035E0  27A9               	addwf	??_ipv4_txFrameRequest& (0+255),f,b
  5231  0035E2  0E00               	movlw	0
  5232  0035E4  23AA               	addwfc	(??_ipv4_txFrameRequest+1)& (0+255),f,b
  5233  0035E6  EE20 F020          	lfsr	2,32
  5234  0035EA  51A7               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
  5235  0035EC  26D9               	addwf	fsr2l,f,c
  5236  0035EE  51A8               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5237  0035F0  22DA               	addwfc	fsr2h,f,c
  5238  0035F2  C0A9  FFDE         	movff	??_ipv4_txFrameRequest,postinc2
  5239  0035F6  C0AA  FFDD         	movff	??_ipv4_txFrameRequest+1,postdec2
  5240                           
  5241                           ;ipv4.c: 39: packet->ethernet.ethertype = ETHERTYPE_IPv4;
  5242  0035FA  EE20 F02E          	lfsr	2,46
  5243  0035FE  51A7               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
  5244  003600  26D9               	addwf	fsr2l,f,c
  5245  003602  51A8               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5246  003604  22DA               	addwfc	fsr2h,f,c
  5247  003606  0E00               	movlw	0
  5248  003608  6EDE               	movwf	postinc2,c
  5249  00360A  0E08               	movlw	8
  5250  00360C  6EDD               	movwf	postdec2,c
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;ipv4.c: 40: ethernet_txFrameRequest(&packet->ethernet);
  5254  00360E  0E20               	movlw	32
  5255  003610  25A7               	addwf	ipv4_txFrameRequest@packet& (0+255),w,b
  5256  003612  6FA2               	movwf	ethernet_txFrameRequest@frame& (0+255),b
  5257  003614  0E00               	movlw	0
  5258  003616  21A8               	addwfc	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5259  003618  6FA3               	movwf	(ethernet_txFrameRequest@frame+1)& (0+255),b
  5260  00361A  EC35  F01F         	call	_ethernet_txFrameRequest	;wreg free
  5261                           
  5262                           ;ipv4.c: 42: packet->memory.fIsAssigned = packet->ethernet.memory.fIsAssigned;
  5263  00361E  0100               	movlb	0	; () banked
  5264  003620  EE20 F036          	lfsr	2,54
  5265  003624  51A7               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
  5266  003626  26D9               	addwf	fsr2l,f,c
  5267  003628  51A8               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5268  00362A  22DA               	addwfc	fsr2h,f,c
  5269  00362C  EE10 F01D          	lfsr	1,29
  5270  003630  51A7               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
  5271  003632  26E1               	addwf	fsr1l,f,c
  5272  003634  51A8               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5273  003636  22E2               	addwfc	fsr1h,f,c
  5274  003638  CFDF FFE7          	movff	indf2,indf1
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;ipv4.c: 43: packet->memory.fOutOfMemory = packet->ethernet.memory.fOutOfMemory;
  5278  00363C  EE20 F037          	lfsr	2,55
  5279  003640  51A7               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
  5280  003642  26D9               	addwf	fsr2l,f,c
  5281  003644  51A8               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5282  003646  22DA               	addwfc	fsr2h,f,c
  5283  003648  EE10 F01E          	lfsr	1,30
  5284  00364C  51A7               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
  5285  00364E  26E1               	addwf	fsr1l,f,c
  5286  003650  51A8               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5287  003652  22E2               	addwfc	fsr1h,f,c
  5288  003654  CFDF FFE7          	movff	indf2,indf1
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;ipv4.c: 44: packet->memory.index = packet->ethernet.memory.index;
  5292  003658  EE20 F038          	lfsr	2,56
  5293  00365C  51A7               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
  5294  00365E  26D9               	addwf	fsr2l,f,c
  5295  003660  51A8               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5296  003662  22DA               	addwfc	fsr2h,f,c
  5297  003664  EE10 F01F          	lfsr	1,31
  5298  003668  51A7               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
  5299  00366A  26E1               	addwf	fsr1l,f,c
  5300  00366C  51A8               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5301  00366E  22E2               	addwfc	fsr1h,f,c
  5302  003670  CFDF FFE7          	movff	indf2,indf1
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;ipv4.c: 45: packet->memory.start = packet->ethernet.memory.start + 8;
  5306  003674  EE20 F030          	lfsr	2,48
  5307  003678  51A7               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
  5308  00367A  26D9               	addwf	fsr2l,f,c
  5309  00367C  51A8               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5310  00367E  22DA               	addwfc	fsr2h,f,c
  5311  003680  CFDE F0A9          	movff	postinc2,??_ipv4_txFrameRequest
  5312  003684  CFDD F0AA          	movff	postdec2,??_ipv4_txFrameRequest+1
  5313  003688  0E08               	movlw	8
  5314  00368A  27A9               	addwf	??_ipv4_txFrameRequest& (0+255),f,b
  5315  00368C  0E00               	movlw	0
  5316  00368E  23AA               	addwfc	(??_ipv4_txFrameRequest+1)& (0+255),f,b
  5317  003690  EE20 F017          	lfsr	2,23
  5318  003694  51A7               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
  5319  003696  26D9               	addwf	fsr2l,f,c
  5320  003698  51A8               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5321  00369A  22DA               	addwfc	fsr2h,f,c
  5322  00369C  C0A9  FFDE         	movff	??_ipv4_txFrameRequest,postinc2
  5323  0036A0  C0AA  FFDD         	movff	??_ipv4_txFrameRequest+1,postdec2
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;ipv4.c: 46: packet->memory.end = packet->ethernet.memory.end;
  5327  0036A4  EE20 F032          	lfsr	2,50
  5328  0036A8  51A7               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
  5329  0036AA  26D9               	addwf	fsr2l,f,c
  5330  0036AC  51A8               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5331  0036AE  22DA               	addwfc	fsr2h,f,c
  5332  0036B0  EE10 F019          	lfsr	1,25
  5333  0036B4  51A7               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
  5334  0036B6  26E1               	addwf	fsr1l,f,c
  5335  0036B8  51A8               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5336  0036BA  22E2               	addwfc	fsr1h,f,c
  5337  0036BC  CFDE FFE6          	movff	postinc2,postinc1
  5338  0036C0  CFDD FFE5          	movff	postdec2,postdec1
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;ipv4.c: 47: packet->memory.length = packet->ethernet.memory.length - 8;
  5342  0036C4  0EF8               	movlw	248
  5343  0036C6  6FA9               	movwf	??_ipv4_txFrameRequest& (0+255),b
  5344  0036C8  0EFF               	movlw	255
  5345  0036CA  6FAA               	movwf	(??_ipv4_txFrameRequest+1)& (0+255),b
  5346  0036CC  EE20 F034          	lfsr	2,52
  5347  0036D0  51A7               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
  5348  0036D2  26D9               	addwf	fsr2l,f,c
  5349  0036D4  51A8               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5350  0036D6  22DA               	addwfc	fsr2h,f,c
  5351  0036D8  CFDE F0AB          	movff	postinc2,??_ipv4_txFrameRequest+2
  5352  0036DC  CFDD F0AC          	movff	postdec2,??_ipv4_txFrameRequest+3
  5353  0036E0  51A9               	movf	??_ipv4_txFrameRequest& (0+255),w,b
  5354  0036E2  27AB               	addwf	(??_ipv4_txFrameRequest+2)& (0+255),f,b
  5355  0036E4  51AA               	movf	(??_ipv4_txFrameRequest+1)& (0+255),w,b
  5356  0036E6  23AC               	addwfc	(??_ipv4_txFrameRequest+3)& (0+255),f,b
  5357  0036E8  EE20 F01B          	lfsr	2,27
  5358  0036EC  51A7               	movf	ipv4_txFrameRequest@packet& (0+255),w,b
  5359  0036EE  26D9               	addwf	fsr2l,f,c
  5360  0036F0  51A8               	movf	(ipv4_txFrameRequest@packet+1)& (0+255),w,b
  5361  0036F2  22DA               	addwfc	fsr2h,f,c
  5362  0036F4  C0AB  FFDE         	movff	??_ipv4_txFrameRequest+2,postinc2
  5363  0036F8  C0AC  FFDD         	movff	??_ipv4_txFrameRequest+3,postdec2
  5364                           
  5365                           ; BSR set to: 0
  5366  0036FC  0012               	return		;funcret
  5367  0036FE                     __end_of_ipv4_txFrameRequest:
  5368                           	opt stack 0
  5369                           tblptru	equ	0xFF8
  5370                           tblptrh	equ	0xFF7
  5371                           tblptrl	equ	0xFF6
  5372                           tablat	equ	0xFF5
  5373                           prodh	equ	0xFF4
  5374                           prodl	equ	0xFF3
  5375                           intcon	equ	0xFF2
  5376                           intcon3	equ	0xFF0
  5377                           indf0	equ	0xFEF
  5378                           postinc0	equ	0xFEE
  5379                           plusw0	equ	0xFEB
  5380                           fsr0h	equ	0xFEA
  5381                           fsr0l	equ	0xFE9
  5382                           wreg	equ	0xFE8
  5383                           indf1	equ	0xFE7
  5384                           postinc1	equ	0xFE6
  5385                           postdec1	equ	0xFE5
  5386                           plusw1	equ	0xFE3
  5387                           fsr1h	equ	0xFE2
  5388                           fsr1l	equ	0xFE1
  5389                           indf2	equ	0xFDF
  5390                           postinc2	equ	0xFDE
  5391                           postdec2	equ	0xFDD
  5392                           plusw2	equ	0xFDB
  5393                           fsr2h	equ	0xFDA
  5394                           fsr2l	equ	0xFD9
  5395                           status	equ	0xFD8
  5396                           
  5397 ;; *************** function _ipv4_streamToTransmissionBuffer *****************
  5398 ;; Defined at:
  5399 ;;		line 94 in file "src/stack/protocols/ipv4.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  data            1    wreg     unsigned char 
  5402 ;;  packet         66   30[BANK0 ] struct ipv4_packet
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  data            1   98[BANK0 ] unsigned char 
  5405 ;;  ethernetPack    2   96[BANK0 ] unsigned int 
  5406 ;;  remainingLen    2    0        unsigned int 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      void 
  5409 ;; Registers used:
  5410 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5416 ;;      Params:         0      66       0       0       0       0       0       0       0
  5417 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5418 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5419 ;;      Totals:         0      69       0       0       0       0       0       0       0
  5420 ;;Total ram usage:       69 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:    8
  5423 ;; This function calls:
  5424 ;;		_ethernetController_streamToTransmitBuffer
  5425 ;; This function is called by:
  5426 ;;		_main
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           	psect	text9
  5431  005546                     __ptext9:
  5432                           	opt stack 0
  5433  005546                     _ipv4_streamToTransmissionBuffer:
  5434                           	opt stack 22
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;incstack = 0
  5438                           ;ipv4_streamToTransmissionBuffer@data stored from wreg
  5439  005546  0100               	movlb	0	; () banked
  5440  005548  6FC2               	movwf	ipv4_streamToTransmissionBuffer@data& (0+255),b
  5441                           
  5442                           ;ipv4.c: 95: uint16_t ethernetPacketLength = packet.ipv4Header.totalLength;
  5443  00554A  C082  F0C0         	movff	ipv4_streamToTransmissionBuffer@packet+4,ipv4_streamToTransmissionBuffer@ethernet
      +                          PacketLength
  5444  00554E  C083  F0C1         	movff	ipv4_streamToTransmissionBuffer@packet+5,ipv4_streamToTransmissionBuffer@ethernet
      +                          PacketLength+1
  5445                           
  5446                           ;ipv4.c: 96: uint16_t remainingLength;
  5447                           ;ipv4.c: 100: ethernetController_streamToTransmitBuffer(data, packet.memory);
  5448  005552  EE20  F095         	lfsr	2,ipv4_streamToTransmissionBuffer@packet+23
  5449  005556  EE00  F06F         	lfsr	0,ethernetController_streamToTransmitBuffer@field
  5450  00555A  0E08               	movlw	8
  5451  00555C                     u12641:
  5452  00555C  CFDB FFEB          	movff	plusw2,plusw0
  5453  005560  06E8               	decf	wreg,f,c
  5454  005562  E2FC               	bc	u12641
  5455  005564  0100               	movlb	0	; () banked
  5456  005566  51C2               	movf	ipv4_streamToTransmissionBuffer@data& (0+255),w,b
  5457  005568  EC73  F024         	call	_ethernetController_streamToTransmitBuffer
  5458  00556C  0012               	return		;funcret
  5459  00556E                     __end_of_ipv4_streamToTransmissionBuffer:
  5460                           	opt stack 0
  5461                           tblptru	equ	0xFF8
  5462                           tblptrh	equ	0xFF7
  5463                           tblptrl	equ	0xFF6
  5464                           tablat	equ	0xFF5
  5465                           prodh	equ	0xFF4
  5466                           prodl	equ	0xFF3
  5467                           intcon	equ	0xFF2
  5468                           intcon3	equ	0xFF0
  5469                           indf0	equ	0xFEF
  5470                           postinc0	equ	0xFEE
  5471                           plusw0	equ	0xFEB
  5472                           fsr0h	equ	0xFEA
  5473                           fsr0l	equ	0xFE9
  5474                           wreg	equ	0xFE8
  5475                           indf1	equ	0xFE7
  5476                           postinc1	equ	0xFE6
  5477                           postdec1	equ	0xFE5
  5478                           plusw1	equ	0xFE3
  5479                           fsr1h	equ	0xFE2
  5480                           fsr1l	equ	0xFE1
  5481                           indf2	equ	0xFDF
  5482                           postinc2	equ	0xFDE
  5483                           postdec2	equ	0xFDD
  5484                           plusw2	equ	0xFDB
  5485                           fsr2h	equ	0xFDA
  5486                           fsr2l	equ	0xFD9
  5487                           status	equ	0xFD8
  5488                           
  5489 ;; *************** function _handleStackBackgroundTasks *****************
  5490 ;; Defined at:
  5491 ;;		line 39 in file "src/stack/backgroundTasks.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  stack           2  133[BANK1 ] PTR struct stack
  5494 ;;		 -> stack(123), 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  foo            10    0        unsigned char [10]
  5497 ;;  errIPv4         3  142[BANK1 ] struct error
  5498 ;;  errArp          3  137[BANK1 ] struct error
  5499 ;;  intf            2  140[BANK1 ] struct interruptFlags
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  1    wreg      void 
  5502 ;; Registers used:
  5503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5509 ;;      Params:         0       0       2       0       0       0       0       0       0
  5510 ;;      Locals:         0       0       8       0       0       0       0       0       0
  5511 ;;      Temps:          0       0       2       0       0       0       0       0       0
  5512 ;;      Totals:         0       0      12       0       0       0       0       0       0
  5513 ;;Total ram usage:       12 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:   13
  5516 ;; This function calls:
  5517 ;;		_UARTTransmitText
  5518 ;;		_arp_background
  5519 ;;		_arp_init
  5520 ;;		_ethernetController_clearInterruptFlag
  5521 ;;		_ethernetController_newPacketAvailable
  5522 ;;		_ethernetController_pollInterruptFlags
  5523 ;;		_ethernetController_setLEDConfig
  5524 ;;		_ethernetController_updateLinkStatus
  5525 ;;		_ethernet_rxGetNewFrame
  5526 ;;		_ipAdressToString
  5527 ;;		_ipv4_background
  5528 ;;		_ipv4_generateAutoIP
  5529 ;;		_ipv4_sendFrame
  5530 ;;		_ipv4_setIPSourceAddress
  5531 ;; This function is called by:
  5532 ;;		_main
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text10
  5537  001C1C                     __ptext10:
  5538                           	opt stack 0
  5539  001C1C                     _handleStackBackgroundTasks:
  5540                           	opt stack 17
  5541                           
  5542                           ;backgroundTasks.c: 40: unsigned char foo[10];
  5543                           ;backgroundTasks.c: 41: error_t errArp;
  5544                           ;backgroundTasks.c: 42: error_t errIPv4;
  5545                           ;backgroundTasks.c: 43: interruptFlags_t intf;
  5546                           ;backgroundTasks.c: 45: intf = ethernetController_pollInterruptFlags();
  5547                           
  5548                           ;incstack = 0
  5549  001C1C  EC38  F01A         	call	_ethernetController_pollInterruptFlags	;wreg free
  5550  001C20  C078  F18C         	movff	?_ethernetController_pollInterruptFlags,handleStackBackgroundTasks@intf
  5551  001C24  C079  F18D         	movff	?_ethernetController_pollInterruptFlags+1,handleStackBackgroundTasks@intf+1
  5552                           
  5553                           ;backgroundTasks.c: 46: if (intf.LINKIF) {
  5554  001C28  0101               	movlb	1	; () banked
  5555  001C2A  A78C               	btfss	handleStackBackgroundTasks@intf& (0+255),3,b
  5556  001C2C  D044               	goto	l526
  5557                           
  5558                           ; BSR set to: 1
  5559                           ;backgroundTasks.c: 48: ethernetController_updateLinkStatus(&(stack->ethernet));
  5560  001C2E  0E22               	movlw	34
  5561  001C30  2585               	addwf	handleStackBackgroundTasks@stack& (0+255),w,b
  5562  001C32  0100               	movlb	0	; () banked
  5563  001C34  6F80               	movwf	ethernetController_updateLinkStatus@state& (0+255),b
  5564  001C36  0E00               	movlw	0
  5565  001C38  0101               	movlb	1	; () banked
  5566  001C3A  2186               	addwfc	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5567  001C3C  0100               	movlb	0	; () banked
  5568  001C3E  6F81               	movwf	(ethernetController_updateLinkStatus@state+1)& (0+255),b
  5569  001C40  ECAB  F022         	call	_ethernetController_updateLinkStatus	;wreg free
  5570                           
  5571                           ;backgroundTasks.c: 50: if (stack->ethernet.link == LINK_ESTABLISHED) {
  5572  001C44  0101               	movlb	1	; () banked
  5573  001C46  EE20 F022          	lfsr	2,34
  5574  001C4A  5185               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5575  001C4C  26D9               	addwf	fsr2l,f,c
  5576  001C4E  5186               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5577  001C50  22DA               	addwfc	fsr2h,f,c
  5578  001C52  04DE               	decf	postinc2,w,c
  5579  001C54  A4D8               	btfss	status,2,c
  5580  001C56  D01E               	goto	l527
  5581                           
  5582                           ; BSR set to: 1
  5583                           ;backgroundTasks.c: 51: ethernetController_setLEDConfig(LEDA, LED_ON);
  5584  001C58  0E00               	movlw	0
  5585  001C5A  0100               	movlb	0	; () banked
  5586  001C5C  6F6E               	movwf	ethernetController_setLEDConfig@conf& (0+255),b
  5587  001C5E  0E00               	movlw	0
  5588  001C60  EC64  F022         	call	_ethernetController_setLEDConfig
  5589                           
  5590                           ;backgroundTasks.c: 52: ethernetController_setLEDConfig(LEDB, LED_TRANSMIT_RECEIVE_EVENT
      +                          S);
  5591  001C64  0E02               	movlw	2
  5592  001C66  0100               	movlb	0	; () banked
  5593  001C68  6F6E               	movwf	ethernetController_setLEDConfig@conf& (0+255),b
  5594  001C6A  0E01               	movlw	1
  5595  001C6C  EC64  F022         	call	_ethernetController_setLEDConfig
  5596                           
  5597                           ;backgroundTasks.c: 53: ipv4_setIPSourceAddress(stack->source);
  5598  001C70  0101               	movlb	1	; () banked
  5599  001C72  EE20 F077          	lfsr	2,119
  5600  001C76  5185               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5601  001C78  26D9               	addwf	fsr2l,f,c
  5602  001C7A  5186               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5603  001C7C  22DA               	addwfc	fsr2h,f,c
  5604  001C7E  CFDE F060          	movff	postinc2,ipv4_setIPSourceAddress@ip
  5605  001C82  CFDE F061          	movff	postinc2,ipv4_setIPSourceAddress@ip+1
  5606  001C86  CFDE F062          	movff	postinc2,ipv4_setIPSourceAddress@ip+2
  5607  001C8A  CFDE F063          	movff	postinc2,ipv4_setIPSourceAddress@ip+3
  5608  001C8E  ECB6  F02B         	call	_ipv4_setIPSourceAddress	;wreg free
  5609                           
  5610                           ;backgroundTasks.c: 54: } else {
  5611  001C92  D00E               	goto	l528
  5612  001C94                     l527:
  5613                           
  5614                           ;backgroundTasks.c: 55: ethernetController_setLEDConfig(LEDA, LED_OFF);
  5615  001C94  0E01               	movlw	1
  5616  001C96  0100               	movlb	0	; () banked
  5617  001C98  6F6E               	movwf	ethernetController_setLEDConfig@conf& (0+255),b
  5618  001C9A  0E00               	movlw	0
  5619  001C9C  EC64  F022         	call	_ethernetController_setLEDConfig
  5620                           
  5621                           ;backgroundTasks.c: 56: ethernetController_setLEDConfig(LEDB, LED_OFF);
  5622  001CA0  0E01               	movlw	1
  5623  001CA2  0100               	movlb	0	; () banked
  5624  001CA4  6F6E               	movwf	ethernetController_setLEDConfig@conf& (0+255),b
  5625  001CA6  0E01               	movlw	1
  5626  001CA8  EC64  F022         	call	_ethernetController_setLEDConfig
  5627                           
  5628                           ;backgroundTasks.c: 57: arp_init();
  5629  001CAC  ECE9  F024         	call	_arp_init	;wreg free
  5630  001CB0                     l528:
  5631                           
  5632                           ;backgroundTasks.c: 58: }
  5633                           ;backgroundTasks.c: 59: ethernetController_clearInterruptFlag(LINKIF);
  5634  001CB0  0E0B               	movlw	11
  5635  001CB2  EC04  F02C         	call	_ethernetController_clearInterruptFlag
  5636  001CB6                     l526:
  5637                           
  5638                           ;backgroundTasks.c: 60: }
  5639                           ;backgroundTasks.c: 61: if (intf.PKTIF) {
  5640  001CB6  0101               	movlb	1	; () banked
  5641  001CB8  A98C               	btfss	handleStackBackgroundTasks@intf& (0+255),4,b
  5642  001CBA  D00B               	goto	l530
  5643                           
  5644                           ; BSR set to: 1
  5645                           ;backgroundTasks.c: 63: if (ethernetController_newPacketAvailable()) {
  5646  001CBC  ECD3  F02B         	call	_ethernetController_newPacketAvailable	;wreg free
  5647  001CC0  0900               	iorlw	0
  5648  001CC2  B4D8               	btfsc	status,2,c
  5649  001CC4  D006               	goto	l530
  5650                           
  5651                           ;backgroundTasks.c: 65: ethernet_rxGetNewFrame(&stack->newReceivedFrame);
  5652  001CC6  C185  F178         	movff	handleStackBackgroundTasks@stack,ethernet_rxGetNewFrame@frame
  5653  001CCA  C186  F179         	movff	handleStackBackgroundTasks@stack+1,ethernet_rxGetNewFrame@frame+1
  5654  001CCE  EC76  F000         	call	_ethernet_rxGetNewFrame	;wreg free
  5655  001CD2                     l530:
  5656                           
  5657                           ;backgroundTasks.c: 66: }
  5658                           ;backgroundTasks.c: 67: }
  5659                           ;backgroundTasks.c: 74: if (stack->background.fPacketPending == 1) {
  5660  001CD2  0101               	movlb	1	; () banked
  5661  001CD4  EE20 F034          	lfsr	2,52
  5662  001CD8  5185               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5663  001CDA  26D9               	addwf	fsr2l,f,c
  5664  001CDC  5186               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5665  001CDE  22DA               	addwfc	fsr2h,f,c
  5666  001CE0  04DE               	decf	postinc2,w,c
  5667  001CE2  A4D8               	btfss	status,2,c
  5668  001CE4  D06C               	goto	l535
  5669                           
  5670                           ; BSR set to: 1
  5671                           ;backgroundTasks.c: 76: errIPv4 = ipv4_sendFrame(stack->pendingPacketToSend);
  5672  001CE6  EE20 F035          	lfsr	2,53
  5673  001CEA  5185               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5674  001CEC  26D9               	addwf	fsr2l,f,c
  5675  001CEE  5186               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5676  001CF0  22DA               	addwfc	fsr2h,f,c
  5677  001CF2  EE01  F034         	lfsr	0,ipv4_sendFrame@ipPacket
  5678  001CF6  0E41               	movlw	65
  5679  001CF8                     u12511:
  5680  001CF8  CFDB FFEB          	movff	plusw2,plusw0
  5681  001CFC  06E8               	decf	wreg,f,c
  5682  001CFE  E2FC               	bc	u12511
  5683  001D00  ECDC  F012         	call	_ipv4_sendFrame	;wreg free
  5684  001D04  C134  F18E         	movff	?_ipv4_sendFrame,handleStackBackgroundTasks@errIPv4
  5685  001D08  C135  F18F         	movff	?_ipv4_sendFrame+1,handleStackBackgroundTasks@errIPv4+1
  5686  001D0C  C136  F190         	movff	?_ipv4_sendFrame+2,handleStackBackgroundTasks@errIPv4+2
  5687                           
  5688                           ;backgroundTasks.c: 77: if (errIPv4.module == ERROR_MODULE_ARP) {
  5689  001D10  0E03               	movlw	3
  5690  001D12  0101               	movlb	1	; () banked
  5691  001D14  198E               	xorwf	handleStackBackgroundTasks@errIPv4& (0+255),w,b
  5692  001D16  B4D8               	btfsc	status,2,c
  5693  001D18  D038               	goto	l533
  5694  001D1A  D051               	goto	l535
  5695  001D1C                     
  5696                           ; BSR set to: 1
  5697                           ;backgroundTasks.c: 83: UARTTransmitText("[IPv4]: Packet was sent successfully.\n\r");
  5698                           
  5699                           ; BSR set to: 1
  5700  001D1C  0E16               	movlw	low STR_21
  5701  001D1E  0100               	movlb	0	; () banked
  5702  001D20  6F98               	movwf	UARTTransmitText@str& (0+255),b
  5703  001D22  0E7B               	movlw	high STR_21
  5704  001D24  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5705  001D26  EC27  F027         	call	_UARTTransmitText	;wreg free
  5706  001D2A  D025               	goto	l10645
  5707  001D2C                     
  5708                           ; BSR set to: 1
  5709                           ;backgroundTasks.c: 89: UARTTransmitText("[IPv4]: Failed to resolve ");
  5710                           
  5711                           ; BSR set to: 1
  5712  001D2C  0EBE               	movlw	low STR_22
  5713  001D2E  0100               	movlb	0	; () banked
  5714  001D30  6F98               	movwf	UARTTransmitText@str& (0+255),b
  5715  001D32  0E7D               	movlw	high STR_22
  5716  001D34  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5717  001D36  EC27  F027         	call	_UARTTransmitText	;wreg free
  5718                           
  5719                           ;backgroundTasks.c: 90: UARTTransmitText(ipAdressToString(stack->pendingPacketToSend.ipv
      +                          4Header.destination));
  5720  001D3A  0101               	movlb	1	; () banked
  5721  001D3C  EE20 F048          	lfsr	2,72
  5722  001D40  5185               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5723  001D42  26D9               	addwf	fsr2l,f,c
  5724  001D44  5186               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5725  001D46  22DA               	addwfc	fsr2h,f,c
  5726  001D48  CFDE F073          	movff	postinc2,ipAdressToString@ip
  5727  001D4C  CFDE F074          	movff	postinc2,ipAdressToString@ip+1
  5728  001D50  CFDE F075          	movff	postinc2,ipAdressToString@ip+2
  5729  001D54  CFDE F076          	movff	postinc2,ipAdressToString@ip+3
  5730  001D58  ECF3  F013         	call	_ipAdressToString	;wreg free
  5731  001D5C  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
  5732  001D60  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
  5733  001D64  EC27  F027         	call	_UARTTransmitText	;wreg free
  5734                           
  5735                           ;backgroundTasks.c: 91: UARTTransmitText("\n\r");
  5736  001D68  0EEB               	movlw	low (STR_44+1)
  5737  001D6A  0100               	movlb	0	; () banked
  5738  001D6C  6F98               	movwf	UARTTransmitText@str& (0+255),b
  5739  001D6E  0E7F               	movlw	high (STR_44+1)
  5740  001D70  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5741  001D72  EC27  F027         	call	_UARTTransmitText	;wreg free
  5742  001D76                     l10645:
  5743                           
  5744                           ;backgroundTasks.c: 93: stack->background.fPacketPending = 0;
  5745  001D76  0101               	movlb	1	; () banked
  5746  001D78  EE20 F034          	lfsr	2,52
  5747  001D7C  5185               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5748  001D7E  26D9               	addwf	fsr2l,f,c
  5749  001D80  5186               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5750  001D82  22DA               	addwfc	fsr2h,f,c
  5751  001D84  0E00               	movlw	0
  5752  001D86  6EDF               	movwf	indf2,c
  5753                           
  5754                           ; BSR set to: 1
  5755                           ;backgroundTasks.c: 97: }
  5756                           
  5757                           ; BSR set to: 1
  5758                           ;backgroundTasks.c: 96: break;
  5759                           
  5760                           ;backgroundTasks.c: 95: default:
  5761                           
  5762                           ;backgroundTasks.c: 94: break;
  5763  001D88  D01A               	goto	l535
  5764  001D8A                     l533:
  5765                           
  5766                           ; BSR set to: 1
  5767                           
  5768                           ; BSR set to: 1
  5769  001D8A  EE21  F08F         	lfsr	2,handleStackBackgroundTasks@errIPv4+1
  5770  001D8E  CFDE F187          	movff	postinc2,??_handleStackBackgroundTasks
  5771  001D92  CFDD F188          	movff	postdec2,??_handleStackBackgroundTasks+1
  5772                           
  5773                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  5774                           ; Switch size 1, requested type "space"
  5775                           ; Number of cases is 2, Range of values is 0 to 1
  5776                           ; switch strategies available:
  5777                           ; Name         Instructions Cycles
  5778                           ; simple_byte            7     4 (average)
  5779                           ;	Chosen strategy is simple_byte
  5780  001D96  5188               	movf	(??_handleStackBackgroundTasks+1)& (0+255),w,b
  5781  001D98  0A00               	xorlw	0	; case 0
  5782  001D9A  B4D8               	btfsc	status,2,c
  5783  001D9C  D004               	goto	l11293
  5784  001D9E  0A01               	xorlw	1	; case 1
  5785  001DA0  B4D8               	btfsc	status,2,c
  5786  001DA2  D006               	goto	l11295
  5787  001DA4  D00C               	goto	l535
  5788  001DA6                     l11293:
  5789                           
  5790                           ; BSR set to: 1
  5791                           ; Switch size 1, requested type "space"
  5792                           ; Number of cases is 1, Range of values is 0 to 0
  5793                           ; switch strategies available:
  5794                           ; Name         Instructions Cycles
  5795                           ; simple_byte            4     3 (average)
  5796                           ;	Chosen strategy is simple_byte
  5797  001DA6  5187               	movf	??_handleStackBackgroundTasks& (0+255),w,b
  5798  001DA8  0A00               	xorlw	0	; case 0
  5799  001DAA  B4D8               	btfsc	status,2,c
  5800  001DAC  D7B7               	goto	l536
  5801  001DAE  D007               	goto	l535
  5802  001DB0                     l11295:
  5803                           
  5804                           ; BSR set to: 1
  5805                           ; Switch size 1, requested type "space"
  5806                           ; Number of cases is 2, Range of values is 145 to 148
  5807                           ; switch strategies available:
  5808                           ; Name         Instructions Cycles
  5809                           ; simple_byte            7     4 (average)
  5810                           ;	Chosen strategy is simple_byte
  5811  001DB0  5187               	movf	??_handleStackBackgroundTasks& (0+255),w,b
  5812  001DB2  0A91               	xorlw	145	; case 145
  5813  001DB4  B4D8               	btfsc	status,2,c
  5814  001DB6  D003               	goto	l535
  5815  001DB8  0A05               	xorlw	5	; case 148
  5816  001DBA  B4D8               	btfsc	status,2,c
  5817  001DBC  D7B7               	goto	l537
  5818  001DBE                     l535:
  5819                           
  5820                           ; BSR set to: 1
  5821                           ;backgroundTasks.c: 100: }
  5822                           ;backgroundTasks.c: 101: }
  5823                           ;backgroundTasks.c: 104: errArp = arp_background(stack->ethernet.link);
  5824                           
  5825                           ; BSR set to: 1
  5826                           
  5827                           ; BSR set to: 1
  5828                           
  5829                           ; BSR set to: 1
  5830                           
  5831                           ; BSR set to: 1
  5832                           ;backgroundTasks.c: 98: } else {
  5833  001DBE  EE20 F022          	lfsr	2,34
  5834  001DC2  5185               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5835  001DC4  26D9               	addwf	fsr2l,f,c
  5836  001DC6  5186               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5837  001DC8  22DA               	addwfc	fsr2h,f,c
  5838  001DCA  50DF               	movf	indf2,w,c
  5839  001DCC  ECA1  F016         	call	_arp_background
  5840  001DD0  C151  F189         	movff	?_arp_background,handleStackBackgroundTasks@errArp
  5841  001DD4  C152  F18A         	movff	?_arp_background+1,handleStackBackgroundTasks@errArp+1
  5842  001DD8  C153  F18B         	movff	?_arp_background+2,handleStackBackgroundTasks@errArp+2
  5843                           
  5844                           ;backgroundTasks.c: 105: errIPv4 = ipv4_background(stack->ethernet.link);
  5845  001DDC  0101               	movlb	1	; () banked
  5846  001DDE  EE20 F022          	lfsr	2,34
  5847  001DE2  5185               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5848  001DE4  26D9               	addwf	fsr2l,f,c
  5849  001DE6  5186               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5850  001DE8  22DA               	addwfc	fsr2h,f,c
  5851  001DEA  50DF               	movf	indf2,w,c
  5852  001DEC  EC8C  F019         	call	_ipv4_background
  5853  001DF0  C09A  F18E         	movff	?_ipv4_background,handleStackBackgroundTasks@errIPv4
  5854  001DF4  C09B  F18F         	movff	?_ipv4_background+1,handleStackBackgroundTasks@errIPv4+1
  5855  001DF8  C09C  F190         	movff	?_ipv4_background+2,handleStackBackgroundTasks@errIPv4+2
  5856                           
  5857                           ;backgroundTasks.c: 107: if (errIPv4.module == ERROR_MODULE_IPv4 &&
  5858                           ;backgroundTasks.c: 108: errIPv4.code == ERROR_IPv4_ADDRESS_ALREADY_IN_USE) {
  5859  001DFC  0E04               	movlw	4
  5860  001DFE  0101               	movlb	1	; () banked
  5861  001E00  198E               	xorwf	handleStackBackgroundTasks@errIPv4& (0+255),w,b
  5862  001E02  A4D8               	btfss	status,2,c
  5863  001E04  0012               	return	
  5864                           
  5865                           ; BSR set to: 1
  5866  001E06  0EF5               	movlw	245
  5867  001E08  198F               	xorwf	(handleStackBackgroundTasks@errIPv4+1)& (0+255),w,b
  5868  001E0A  E152               	bnz	l541
  5869  001E0C  0590               	decf	(handleStackBackgroundTasks@errIPv4+2)& (0+255),w,b
  5870  001E0E  A4D8               	btfss	status,2,c
  5871  001E10  0012               	return	
  5872                           
  5873                           ; BSR set to: 1
  5874                           ;backgroundTasks.c: 110: UARTTransmitText("[IPv4]: Address conflict detected.\n\r");
  5875  001E12  0ED8               	movlw	low STR_24
  5876  001E14  0100               	movlb	0	; () banked
  5877  001E16  6F98               	movwf	UARTTransmitText@str& (0+255),b
  5878  001E18  0E7B               	movlw	high STR_24
  5879  001E1A  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5880  001E1C  EC27  F027         	call	_UARTTransmitText	;wreg free
  5881                           
  5882                           ;backgroundTasks.c: 112: stack->source = ipv4_generateAutoIP();
  5883  001E20  EC67  F028         	call	_ipv4_generateAutoIP	;wreg free
  5884  001E24  0101               	movlb	1	; () banked
  5885  001E26  EE20 F077          	lfsr	2,119
  5886  001E2A  5185               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5887  001E2C  26D9               	addwf	fsr2l,f,c
  5888  001E2E  5186               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5889  001E30  22DA               	addwfc	fsr2h,f,c
  5890  001E32  0100               	movlb	0	; () banked
  5891  001E34  C074  FFDE         	movff	?_ipv4_generateAutoIP,postinc2
  5892  001E38  C075  FFDE         	movff	?_ipv4_generateAutoIP+1,postinc2
  5893  001E3C  C076  FFDE         	movff	?_ipv4_generateAutoIP+2,postinc2
  5894  001E40  C077  FFDE         	movff	?_ipv4_generateAutoIP+3,postinc2
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;backgroundTasks.c: 114: UARTTransmitText("[IPv4]: Setting IPv4 Src Address to ");
  5898  001E44  0EFD               	movlw	low STR_25
  5899  001E46  6F98               	movwf	UARTTransmitText@str& (0+255),b
  5900  001E48  0E7B               	movlw	high STR_25
  5901  001E4A  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5902  001E4C  EC27  F027         	call	_UARTTransmitText	;wreg free
  5903                           
  5904                           ;backgroundTasks.c: 115: UARTTransmitText(ipAdressToString(stack->source));
  5905  001E50  0101               	movlb	1	; () banked
  5906  001E52  EE20 F077          	lfsr	2,119
  5907  001E56  5185               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5908  001E58  26D9               	addwf	fsr2l,f,c
  5909  001E5A  5186               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5910  001E5C  22DA               	addwfc	fsr2h,f,c
  5911  001E5E  CFDE F073          	movff	postinc2,ipAdressToString@ip
  5912  001E62  CFDE F074          	movff	postinc2,ipAdressToString@ip+1
  5913  001E66  CFDE F075          	movff	postinc2,ipAdressToString@ip+2
  5914  001E6A  CFDE F076          	movff	postinc2,ipAdressToString@ip+3
  5915  001E6E  ECF3  F013         	call	_ipAdressToString	;wreg free
  5916  001E72  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
  5917  001E76  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
  5918  001E7A  EC27  F027         	call	_UARTTransmitText	;wreg free
  5919                           
  5920                           ;backgroundTasks.c: 116: UARTTransmitText("\n\r");
  5921  001E7E  0EEB               	movlw	low (STR_44+1)
  5922  001E80  0100               	movlb	0	; () banked
  5923  001E82  6F98               	movwf	UARTTransmitText@str& (0+255),b
  5924  001E84  0E7F               	movlw	high (STR_44+1)
  5925  001E86  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  5926  001E88  EC27  F027         	call	_UARTTransmitText	;wreg free
  5927                           
  5928                           ;backgroundTasks.c: 118: ipv4_setIPSourceAddress(stack->source);
  5929  001E8C  0101               	movlb	1	; () banked
  5930  001E8E  EE20 F077          	lfsr	2,119
  5931  001E92  5185               	movf	handleStackBackgroundTasks@stack& (0+255),w,b
  5932  001E94  26D9               	addwf	fsr2l,f,c
  5933  001E96  5186               	movf	(handleStackBackgroundTasks@stack+1)& (0+255),w,b
  5934  001E98  22DA               	addwfc	fsr2h,f,c
  5935  001E9A  CFDE F060          	movff	postinc2,ipv4_setIPSourceAddress@ip
  5936  001E9E  CFDE F061          	movff	postinc2,ipv4_setIPSourceAddress@ip+1
  5937  001EA2  CFDE F062          	movff	postinc2,ipv4_setIPSourceAddress@ip+2
  5938  001EA6  CFDE F063          	movff	postinc2,ipv4_setIPSourceAddress@ip+3
  5939  001EAA  ECB6  F02B         	call	_ipv4_setIPSourceAddress	;wreg free
  5940  001EAE  0012               	return	
  5941  001EB0                     l541:
  5942  001EB0  0012               	return		;funcret
  5943  001EB2                     __end_of_handleStackBackgroundTasks:
  5944                           	opt stack 0
  5945                           tblptru	equ	0xFF8
  5946                           tblptrh	equ	0xFF7
  5947                           tblptrl	equ	0xFF6
  5948                           tablat	equ	0xFF5
  5949                           prodh	equ	0xFF4
  5950                           prodl	equ	0xFF3
  5951                           intcon	equ	0xFF2
  5952                           intcon3	equ	0xFF0
  5953                           indf0	equ	0xFEF
  5954                           postinc0	equ	0xFEE
  5955                           plusw0	equ	0xFEB
  5956                           fsr0h	equ	0xFEA
  5957                           fsr0l	equ	0xFE9
  5958                           wreg	equ	0xFE8
  5959                           indf1	equ	0xFE7
  5960                           postinc1	equ	0xFE6
  5961                           postdec1	equ	0xFE5
  5962                           plusw1	equ	0xFE3
  5963                           fsr1h	equ	0xFE2
  5964                           fsr1l	equ	0xFE1
  5965                           indf2	equ	0xFDF
  5966                           postinc2	equ	0xFDE
  5967                           postdec2	equ	0xFDD
  5968                           plusw2	equ	0xFDB
  5969                           fsr2h	equ	0xFDA
  5970                           fsr2l	equ	0xFD9
  5971                           status	equ	0xFD8
  5972                           
  5973 ;; *************** function _ipv4_setIPSourceAddress *****************
  5974 ;; Defined at:
  5975 ;;		line 250 in file "src/stack/protocols/ipv4.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;  ip              4    0[BANK0 ] struct ipv4_address
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;		None
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  1    wreg      void 
  5982 ;; Registers used:
  5983 ;;		None
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5989 ;;      Params:         0       4       0       0       0       0       0       0       0
  5990 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5991 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5992 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5993 ;;Total ram usage:        4 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:    4
  5996 ;; This function calls:
  5997 ;;		Nothing
  5998 ;; This function is called by:
  5999 ;;		_handleStackBackgroundTasks
  6000 ;; This function uses a non-reentrant model
  6001 ;;
  6002                           
  6003                           	psect	text11
  6004  00576C                     __ptext11:
  6005                           	opt stack 0
  6006  00576C                     _ipv4_setIPSourceAddress:
  6007                           	opt stack 25
  6008                           
  6009                           ;ipv4.c: 251: ipPreliminarySource = ip;
  6010                           
  6011                           ;incstack = 0
  6012  00576C  C060  F1EE         	movff	ipv4_setIPSourceAddress@ip,_ipPreliminarySource
  6013  005770  C061  F1EF         	movff	ipv4_setIPSourceAddress@ip+1,_ipPreliminarySource+1
  6014  005774  C062  F1F0         	movff	ipv4_setIPSourceAddress@ip+2,_ipPreliminarySource+2
  6015  005778  C063  F1F1         	movff	ipv4_setIPSourceAddress@ip+3,_ipPreliminarySource+3
  6016                           
  6017                           ;ipv4.c: 252: fSrcAddrChanged = 1;
  6018  00577C  804E               	bsf	_fSrcAddrChanged/(0+8),_fSrcAddrChanged& (0+7),c
  6019  00577E  0012               	return		;funcret
  6020  005780                     __end_of_ipv4_setIPSourceAddress:
  6021                           	opt stack 0
  6022                           tblptru	equ	0xFF8
  6023                           tblptrh	equ	0xFF7
  6024                           tblptrl	equ	0xFF6
  6025                           tablat	equ	0xFF5
  6026                           prodh	equ	0xFF4
  6027                           prodl	equ	0xFF3
  6028                           intcon	equ	0xFF2
  6029                           intcon3	equ	0xFF0
  6030                           indf0	equ	0xFEF
  6031                           postinc0	equ	0xFEE
  6032                           plusw0	equ	0xFEB
  6033                           fsr0h	equ	0xFEA
  6034                           fsr0l	equ	0xFE9
  6035                           wreg	equ	0xFE8
  6036                           indf1	equ	0xFE7
  6037                           postinc1	equ	0xFE6
  6038                           postdec1	equ	0xFE5
  6039                           plusw1	equ	0xFE3
  6040                           fsr1h	equ	0xFE2
  6041                           fsr1l	equ	0xFE1
  6042                           indf2	equ	0xFDF
  6043                           postinc2	equ	0xFDE
  6044                           postdec2	equ	0xFDD
  6045                           plusw2	equ	0xFDB
  6046                           fsr2h	equ	0xFDA
  6047                           fsr2l	equ	0xFD9
  6048                           status	equ	0xFD8
  6049                           
  6050 ;; *************** function _ipv4_sendFrame *****************
  6051 ;; Defined at:
  6052 ;;		line 50 in file "src/stack/protocols/ipv4.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  ipPacket       66   52[BANK1 ] struct ipv4_packet
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  err             3  157[BANK0 ] struct error
  6057 ;;  index           1  156[BANK0 ] unsigned char 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  3   52[BANK1 ] struct error
  6060 ;; Registers used:
  6061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6067 ;;      Params:         0       0      66       0       0       0       0       0       0
  6068 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6069 ;;      Temps:          0       0       8       0       0       0       0       0       0
  6070 ;;      Totals:         0       4      74       0       0       0       0       0       0
  6071 ;;Total ram usage:       78 bytes
  6072 ;; Hardware stack levels used:    1
  6073 ;; Hardware stack levels required when called:   11
  6074 ;; This function calls:
  6075 ;;		_UARTTransmitText
  6076 ;;		_arp_checkForEntry
  6077 ;;		_arp_getEntryFromTable
  6078 ;;		_arp_sendRequest
  6079 ;;		_ethernetController_getMacAddress
  6080 ;;		_ethernetController_sendPacket
  6081 ;;		_ethernetController_writeDestinationMACAddress
  6082 ;;		_getMillis
  6083 ;;		_ipAdressToString
  6084 ;;		_macToString
  6085 ;; This function is called by:
  6086 ;;		_handleStackBackgroundTasks
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text12
  6091  0025B8                     __ptext12:
  6092                           	opt stack 0
  6093  0025B8                     _ipv4_sendFrame:
  6094                           	opt stack 18
  6095                           
  6096                           ;ipv4.c: 51: error_t err;
  6097                           ;ipv4.c: 52: err.module = ERROR_MODULE_ARP;
  6098                           
  6099                           ;incstack = 0
  6100  0025B8  0E03               	movlw	3
  6101  0025BA  0100               	movlb	0	; () banked
  6102  0025BC  6FFD               	movwf	ipv4_sendFrame@err& (0+255),b
  6103                           
  6104                           ;ipv4.c: 53: err.code = ERROR_ARP_WAITING;
  6105  0025BE  0E01               	movlw	1
  6106  0025C0  6FFF               	movwf	(ipv4_sendFrame@err+2)& (0+255),b
  6107  0025C2  0E91               	movlw	145
  6108  0025C4  6FFE               	movwf	(ipv4_sendFrame@err+1)& (0+255),b
  6109                           
  6110                           ; BSR set to: 0
  6111                           ;ipv4.c: 54: uint8_t index;
  6112                           ;ipv4.c: 55: uint8_t static failedResolveCounter = 0;
  6113                           ;ipv4.c: 56: time_t static oldTime = 0;
  6114                           ;ipv4.c: 59: if (arp_checkForEntry(ipPacket.ipv4Header.destination, &index)) {
  6115  0025C6  C147  F067         	movff	ipv4_sendFrame@ipPacket+19,arp_checkForEntry@ip
  6116  0025CA  C148  F068         	movff	ipv4_sendFrame@ipPacket+20,arp_checkForEntry@ip+1
  6117  0025CE  C149  F069         	movff	ipv4_sendFrame@ipPacket+21,arp_checkForEntry@ip+2
  6118  0025D2  C14A  F06A         	movff	ipv4_sendFrame@ipPacket+22,arp_checkForEntry@ip+3
  6119  0025D6  0EFC               	movlw	low ipv4_sendFrame@index
  6120  0025D8  6F6B               	movwf	arp_checkForEntry@index& (0+255),b
  6121  0025DA  0E00               	movlw	high ipv4_sendFrame@index
  6122  0025DC  6F6C               	movwf	(arp_checkForEntry@index+1)& (0+255),b
  6123  0025DE  ECC5  F020         	call	_arp_checkForEntry	;wreg free
  6124  0025E2  0900               	iorlw	0
  6125  0025E4  B4D8               	btfsc	status,2,c
  6126  0025E6  D07A               	goto	l1141
  6127                           
  6128                           ;ipv4.c: 61: ipPacket.ethernet.destination = arp_getEntryFromTable(index);
  6129  0025E8  0100               	movlb	0	; () banked
  6130  0025EA  51FC               	movf	ipv4_sendFrame@index& (0+255),w,b
  6131  0025EC  EC38  F02A         	call	_arp_getEntryFromTable
  6132  0025F0  EE21  F05C         	lfsr	2,ipv4_sendFrame@ipPacket+40
  6133  0025F4  0E05               	movlw	5
  6134  0025F6                     u12281:
  6135  0025F6  CFEB FFDB          	movff	plusw0,plusw2
  6136  0025FA  06E8               	decf	wreg,f,c
  6137  0025FC  E2FC               	bc	u12281
  6138                           
  6139                           ;ipv4.c: 63: UARTTransmitText("[IPv4]: ");
  6140  0025FE  0E81               	movlw	low STR_97
  6141  002600  0100               	movlb	0	; () banked
  6142  002602  6F98               	movwf	UARTTransmitText@str& (0+255),b
  6143  002604  0E7F               	movlw	high STR_97
  6144  002606  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  6145  002608  EC27  F027         	call	_UARTTransmitText	;wreg free
  6146                           
  6147                           ;ipv4.c: 64: UARTTransmitText(ipAdressToString(ipPacket.ipv4Header.destination));
  6148  00260C  C147  F073         	movff	ipv4_sendFrame@ipPacket+19,ipAdressToString@ip
  6149  002610  C148  F074         	movff	ipv4_sendFrame@ipPacket+20,ipAdressToString@ip+1
  6150  002614  C149  F075         	movff	ipv4_sendFrame@ipPacket+21,ipAdressToString@ip+2
  6151  002618  C14A  F076         	movff	ipv4_sendFrame@ipPacket+22,ipAdressToString@ip+3
  6152  00261C  ECF3  F013         	call	_ipAdressToString	;wreg free
  6153  002620  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
  6154  002624  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
  6155  002628  EC27  F027         	call	_UARTTransmitText	;wreg free
  6156                           
  6157                           ;ipv4.c: 65: UARTTransmitText(" is at ");
  6158  00262C  0E9C               	movlw	low STR_98
  6159  00262E  0100               	movlb	0	; () banked
  6160  002630  6F98               	movwf	UARTTransmitText@str& (0+255),b
  6161  002632  0E7F               	movlw	high STR_98
  6162  002634  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  6163  002636  EC27  F027         	call	_UARTTransmitText	;wreg free
  6164                           
  6165                           ;ipv4.c: 66: UARTTransmitText(macToString(ipPacket.ethernet.destination));
  6166  00263A  EE21  F05C         	lfsr	2,ipv4_sendFrame@ipPacket+40
  6167  00263E  EE00  F07A         	lfsr	0,macToString@addr
  6168  002642  0E05               	movlw	5
  6169  002644                     u12291:
  6170  002644  CFDB FFEB          	movff	plusw2,plusw0
  6171  002648  06E8               	decf	wreg,f,c
  6172  00264A  E2FC               	bc	u12291
  6173  00264C  ECBB  F01D         	call	_macToString	;wreg free
  6174  002650  C07A  F098         	movff	?_macToString,UARTTransmitText@str
  6175  002654  C07B  F099         	movff	?_macToString+1,UARTTransmitText@str+1
  6176  002658  EC27  F027         	call	_UARTTransmitText	;wreg free
  6177                           
  6178                           ;ipv4.c: 67: UARTTransmitText("\n\r");
  6179  00265C  0EEB               	movlw	low (STR_44+1)
  6180  00265E  0100               	movlb	0	; () banked
  6181  002660  6F98               	movwf	UARTTransmitText@str& (0+255),b
  6182  002662  0E7F               	movlw	high (STR_44+1)
  6183  002664  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  6184  002666  EC27  F027         	call	_UARTTransmitText	;wreg free
  6185                           
  6186                           ;ipv4.c: 70: ipPacket.ethernet.source = ethernetController_getMacAddress();
  6187  00266A  EC23  F025         	call	_ethernetController_getMacAddress	;wreg free
  6188  00266E  EE21  F056         	lfsr	2,ipv4_sendFrame@ipPacket+34
  6189  002672  0E05               	movlw	5
  6190  002674                     u12301:
  6191  002674  CFEB FFDB          	movff	plusw0,plusw2
  6192  002678  06E8               	decf	wreg,f,c
  6193  00267A  E2FC               	bc	u12301
  6194                           
  6195                           ;ipv4.c: 72: ethernetController_writeDestinationMACAddress(ipPacket.ethernet.destination
      +                          , ipPacket.ethernet.memory);
  6196  00267C  EE21  F05C         	lfsr	2,ipv4_sendFrame@ipPacket+40
  6197  002680  EE00  F06F         	lfsr	0,ethernetController_writeDestinationMACAddress@addr
  6198  002684  0E05               	movlw	5
  6199  002686                     u12311:
  6200  002686  CFDB FFEB          	movff	plusw2,plusw0
  6201  00268A  06E8               	decf	wreg,f,c
  6202  00268C  E2FC               	bc	u12311
  6203  00268E  EE21  F064         	lfsr	2,ipv4_sendFrame@ipPacket+48
  6204  002692  EE00  F075         	lfsr	0,ethernetController_writeDestinationMACAddress@field
  6205  002696  0E08               	movlw	8
  6206  002698                     u12321:
  6207  002698  CFDB FFEB          	movff	plusw2,plusw0
  6208  00269C  06E8               	decf	wreg,f,c
  6209  00269E  E2FC               	bc	u12321
  6210  0026A0  ECB7  F023         	call	_ethernetController_writeDestinationMACAddress	;wreg free
  6211                           
  6212                           ;ipv4.c: 73: ethernetController_sendPacket(ipPacket.ethernet.memory);
  6213  0026A4  EE21  F064         	lfsr	2,ipv4_sendFrame@ipPacket+48
  6214  0026A8  EE00  F072         	lfsr	0,ethernetController_sendPacket@field
  6215  0026AC  0E08               	movlw	8
  6216  0026AE                     u12331:
  6217  0026AE  CFDB FFEB          	movff	plusw2,plusw0
  6218  0026B2  06E8               	decf	wreg,f,c
  6219  0026B4  E2FC               	bc	u12331
  6220  0026B6  ECCB  F02A         	call	_ethernetController_sendPacket	;wreg free
  6221                           
  6222                           ;ipv4.c: 74: err.code = (uint16_t)0;
  6223  0026BA  0E00               	movlw	0
  6224  0026BC  0100               	movlb	0	; () banked
  6225  0026BE  6FFF               	movwf	(ipv4_sendFrame@err+2)& (0+255),b
  6226  0026C0  0E00               	movlw	0
  6227  0026C2  6FFE               	movwf	(ipv4_sendFrame@err+1)& (0+255),b
  6228                           
  6229                           ; BSR set to: 0
  6230                           ;ipv4.c: 75: oldTime = 0;
  6231  0026C4  0E00               	movlw	0
  6232  0026C6  0101               	movlb	1	; () banked
  6233  0026C8  6FC2               	movwf	ipv4_sendFrame@oldTime& (0+255),b
  6234  0026CA  0E00               	movlw	0
  6235  0026CC  6FC3               	movwf	(ipv4_sendFrame@oldTime+1)& (0+255),b
  6236  0026CE  0E00               	movlw	0
  6237  0026D0  6FC4               	movwf	(ipv4_sendFrame@oldTime+2)& (0+255),b
  6238  0026D2  0E00               	movlw	0
  6239  0026D4  6FC5               	movwf	(ipv4_sendFrame@oldTime+3)& (0+255),b
  6240                           
  6241                           ; BSR set to: 1
  6242                           ;ipv4.c: 76: failedResolveCounter = 0;
  6243  0026D6  0E00               	movlw	0
  6244  0026D8  6FCE               	movwf	ipv4_sendFrame@failedResolveCounter& (0+255),b
  6245                           
  6246                           ;ipv4.c: 77: } else if ((getMillis() - oldTime) > 2000u || oldTime == 0) {
  6247  0026DA  D07E               	goto	l1146
  6248  0026DC                     l1141:
  6249                           
  6250                           ; BSR set to: 1
  6251  0026DC  C1C2  F176         	movff	ipv4_sendFrame@oldTime,??_ipv4_sendFrame
  6252  0026E0  C1C3  F177         	movff	ipv4_sendFrame@oldTime+1,??_ipv4_sendFrame+1
  6253  0026E4  C1C4  F178         	movff	ipv4_sendFrame@oldTime+2,??_ipv4_sendFrame+2
  6254  0026E8  C1C5  F179         	movff	ipv4_sendFrame@oldTime+3,??_ipv4_sendFrame+3
  6255  0026EC  0101               	movlb	1	; () banked
  6256  0026EE  1F76               	comf	??_ipv4_sendFrame& (0+255),f,b
  6257  0026F0  1F77               	comf	(??_ipv4_sendFrame+1)& (0+255),f,b
  6258  0026F2  1F78               	comf	(??_ipv4_sendFrame+2)& (0+255),f,b
  6259  0026F4  1F79               	comf	(??_ipv4_sendFrame+3)& (0+255),f,b
  6260  0026F6  2B76               	incf	??_ipv4_sendFrame& (0+255),f,b
  6261  0026F8  0E00               	movlw	0
  6262  0026FA  2377               	addwfc	(??_ipv4_sendFrame+1)& (0+255),f,b
  6263  0026FC  2378               	addwfc	(??_ipv4_sendFrame+2)& (0+255),f,b
  6264  0026FE  2379               	addwfc	(??_ipv4_sendFrame+3)& (0+255),f,b
  6265  002700  ECE5  F02B         	call	_getMillis	;wreg free
  6266  002704  0101               	movlb	1	; () banked
  6267  002706  5176               	movf	??_ipv4_sendFrame& (0+255),w,b
  6268  002708  0100               	movlb	0	; () banked
  6269  00270A  2560               	addwf	?_getMillis& (0+255),w,b
  6270  00270C  0101               	movlb	1	; () banked
  6271  00270E  6F7A               	movwf	(??_ipv4_sendFrame+4)& (0+255),b
  6272  002710  5177               	movf	(??_ipv4_sendFrame+1)& (0+255),w,b
  6273  002712  0100               	movlb	0	; () banked
  6274  002714  2161               	addwfc	(?_getMillis+1)& (0+255),w,b
  6275  002716  0101               	movlb	1	; () banked
  6276  002718  6F7B               	movwf	(??_ipv4_sendFrame+5)& (0+255),b
  6277  00271A  5178               	movf	(??_ipv4_sendFrame+2)& (0+255),w,b
  6278  00271C  0100               	movlb	0	; () banked
  6279  00271E  2162               	addwfc	(?_getMillis+2)& (0+255),w,b
  6280  002720  0101               	movlb	1	; () banked
  6281  002722  6F7C               	movwf	(??_ipv4_sendFrame+6)& (0+255),b
  6282  002724  5179               	movf	(??_ipv4_sendFrame+3)& (0+255),w,b
  6283  002726  0100               	movlb	0	; () banked
  6284  002728  2163               	addwfc	(?_getMillis+3)& (0+255),w,b
  6285  00272A  0101               	movlb	1	; () banked
  6286  00272C  6F7D               	movwf	(??_ipv4_sendFrame+7)& (0+255),b
  6287  00272E  517D               	movf	(??_ipv4_sendFrame+7)& (0+255),w,b
  6288  002730  117C               	iorwf	(??_ipv4_sendFrame+6)& (0+255),w,b
  6289  002732  E10C               	bnz	l10415
  6290  002734  0ED1               	movlw	209
  6291  002736  5D7A               	subwf	(??_ipv4_sendFrame+4)& (0+255),w,b
  6292  002738  0E07               	movlw	7
  6293  00273A  597B               	subwfb	(??_ipv4_sendFrame+5)& (0+255),w,b
  6294  00273C  B0D8               	btfsc	status,0,c
  6295  00273E  D006               	goto	u12350
  6296                           
  6297                           ; BSR set to: 1
  6298  002740  51C2               	movf	ipv4_sendFrame@oldTime& (0+255),w,b
  6299  002742  11C3               	iorwf	(ipv4_sendFrame@oldTime+1)& (0+255),w,b
  6300  002744  11C4               	iorwf	(ipv4_sendFrame@oldTime+2)& (0+255),w,b
  6301  002746  11C5               	iorwf	(ipv4_sendFrame@oldTime+3)& (0+255),w,b
  6302  002748  A4D8               	btfss	status,2,c
  6303  00274A  D046               	goto	l1146
  6304  00274C                     u12350:
  6305  00274C                     l10415:
  6306                           
  6307                           ; BSR set to: 1
  6308                           ;ipv4.c: 78: failedResolveCounter++;
  6309  00274C  2BCE               	incf	ipv4_sendFrame@failedResolveCounter& (0+255),f,b
  6310                           
  6311                           ; BSR set to: 1
  6312                           ;ipv4.c: 80: UARTTransmitText("[IPv4]: Trying to resolve ");
  6313  00274E  0EA3               	movlw	low STR_100
  6314  002750  0100               	movlb	0	; () banked
  6315  002752  6F98               	movwf	UARTTransmitText@str& (0+255),b
  6316  002754  0E7D               	movlw	high STR_100
  6317  002756  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  6318  002758  EC27  F027         	call	_UARTTransmitText	;wreg free
  6319                           
  6320                           ;ipv4.c: 81: UARTTransmitText(ipAdressToString(ipPacket.ipv4Header.destination));
  6321  00275C  C147  F073         	movff	ipv4_sendFrame@ipPacket+19,ipAdressToString@ip
  6322  002760  C148  F074         	movff	ipv4_sendFrame@ipPacket+20,ipAdressToString@ip+1
  6323  002764  C149  F075         	movff	ipv4_sendFrame@ipPacket+21,ipAdressToString@ip+2
  6324  002768  C14A  F076         	movff	ipv4_sendFrame@ipPacket+22,ipAdressToString@ip+3
  6325  00276C  ECF3  F013         	call	_ipAdressToString	;wreg free
  6326  002770  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
  6327  002774  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
  6328  002778  EC27  F027         	call	_UARTTransmitText	;wreg free
  6329                           
  6330                           ;ipv4.c: 82: UARTTransmitText("\n\r");
  6331  00277C  0EEB               	movlw	low (STR_44+1)
  6332  00277E  0100               	movlb	0	; () banked
  6333  002780  6F98               	movwf	UARTTransmitText@str& (0+255),b
  6334  002782  0E7F               	movlw	high (STR_44+1)
  6335  002784  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  6336  002786  EC27  F027         	call	_UARTTransmitText	;wreg free
  6337                           
  6338                           ;ipv4.c: 84: oldTime = getMillis();
  6339  00278A  ECE5  F02B         	call	_getMillis	;wreg free
  6340  00278E  C060  F1C2         	movff	?_getMillis,ipv4_sendFrame@oldTime
  6341  002792  C061  F1C3         	movff	?_getMillis+1,ipv4_sendFrame@oldTime+1
  6342  002796  C062  F1C4         	movff	?_getMillis+2,ipv4_sendFrame@oldTime+2
  6343  00279A  C063  F1C5         	movff	?_getMillis+3,ipv4_sendFrame@oldTime+3
  6344                           
  6345                           ;ipv4.c: 85: arp_sendRequest(ipPacket.ipv4Header.source, ipPacket.ipv4Header.destination
      +                          );
  6346  00279E  C143  F100         	movff	ipv4_sendFrame@ipPacket+15,arp_sendRequest@ipSender
  6347  0027A2  C144  F101         	movff	ipv4_sendFrame@ipPacket+16,arp_sendRequest@ipSender+1
  6348  0027A6  C145  F102         	movff	ipv4_sendFrame@ipPacket+17,arp_sendRequest@ipSender+2
  6349  0027AA  C146  F103         	movff	ipv4_sendFrame@ipPacket+18,arp_sendRequest@ipSender+3
  6350  0027AE  C147  F104         	movff	ipv4_sendFrame@ipPacket+19,arp_sendRequest@ipTarget
  6351  0027B2  C148  F105         	movff	ipv4_sendFrame@ipPacket+20,arp_sendRequest@ipTarget+1
  6352  0027B6  C149  F106         	movff	ipv4_sendFrame@ipPacket+21,arp_sendRequest@ipTarget+2
  6353  0027BA  C14A  F107         	movff	ipv4_sendFrame@ipPacket+22,arp_sendRequest@ipTarget+3
  6354  0027BE  EC15  F022         	call	_arp_sendRequest	;wreg free
  6355                           
  6356                           ;ipv4.c: 86: if (failedResolveCounter >= 3u) {
  6357  0027C2  0E02               	movlw	2
  6358  0027C4  0101               	movlb	1	; () banked
  6359  0027C6  65CE               	cpfsgt	ipv4_sendFrame@failedResolveCounter& (0+255),b
  6360  0027C8  D007               	goto	l1146
  6361                           
  6362                           ; BSR set to: 1
  6363                           ;ipv4.c: 87: failedResolveCounter = 0;
  6364  0027CA  0E00               	movlw	0
  6365  0027CC  6FCE               	movwf	ipv4_sendFrame@failedResolveCounter& (0+255),b
  6366                           
  6367                           ;ipv4.c: 88: err.code = ERROR_ARP_MAXIMUM_NUMBER_OF_REQUESTS_REACHED;
  6368  0027CE  0E01               	movlw	1
  6369  0027D0  0100               	movlb	0	; () banked
  6370  0027D2  6FFF               	movwf	(ipv4_sendFrame@err+2)& (0+255),b
  6371  0027D4  0E94               	movlw	148
  6372  0027D6  6FFE               	movwf	(ipv4_sendFrame@err+1)& (0+255),b
  6373  0027D8                     l1146:
  6374                           
  6375                           ;ipv4.c: 89: }
  6376                           ;ipv4.c: 90: }
  6377                           ;ipv4.c: 91: return err;
  6378                           
  6379                           ; BSR set to: 0
  6380                           
  6381                           ; BSR set to: 0
  6382                           
  6383                           ; BSR set to: 0
  6384  0027D8  C0FD  F134         	movff	ipv4_sendFrame@err,?_ipv4_sendFrame
  6385  0027DC  C0FE  F135         	movff	ipv4_sendFrame@err+1,?_ipv4_sendFrame+1
  6386  0027E0  C0FF  F136         	movff	ipv4_sendFrame@err+2,?_ipv4_sendFrame+2
  6387  0027E4  0012               	return	
  6388  0027E6                     __end_of_ipv4_sendFrame:
  6389                           	opt stack 0
  6390                           tblptru	equ	0xFF8
  6391                           tblptrh	equ	0xFF7
  6392                           tblptrl	equ	0xFF6
  6393                           tablat	equ	0xFF5
  6394                           prodh	equ	0xFF4
  6395                           prodl	equ	0xFF3
  6396                           intcon	equ	0xFF2
  6397                           intcon3	equ	0xFF0
  6398                           indf0	equ	0xFEF
  6399                           postinc0	equ	0xFEE
  6400                           plusw0	equ	0xFEB
  6401                           fsr0h	equ	0xFEA
  6402                           fsr0l	equ	0xFE9
  6403                           wreg	equ	0xFE8
  6404                           indf1	equ	0xFE7
  6405                           postinc1	equ	0xFE6
  6406                           postdec1	equ	0xFE5
  6407                           plusw1	equ	0xFE3
  6408                           fsr1h	equ	0xFE2
  6409                           fsr1l	equ	0xFE1
  6410                           indf2	equ	0xFDF
  6411                           postinc2	equ	0xFDE
  6412                           postdec2	equ	0xFDD
  6413                           plusw2	equ	0xFDB
  6414                           fsr2h	equ	0xFDA
  6415                           fsr2l	equ	0xFD9
  6416                           status	equ	0xFD8
  6417                           
  6418 ;; *************** function _arp_getEntryFromTable *****************
  6419 ;; Defined at:
  6420 ;;		line 473 in file "src/stack/protocols/arp.c"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;  index           1    wreg     unsigned char 
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;  index           1    7[BANK0 ] unsigned char 
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  6    0[BANK0 ] struct macaddress
  6427 ;; Registers used:
  6428 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6434 ;;      Params:         0       7       0       0       0       0       0       0       0
  6435 ;;      Locals:         0       1       0       0       0       0       0       0       0
  6436 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6437 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6438 ;;Total ram usage:        8 bytes
  6439 ;; Hardware stack levels used:    1
  6440 ;; Hardware stack levels required when called:    4
  6441 ;; This function calls:
  6442 ;;		Nothing
  6443 ;; This function is called by:
  6444 ;;		_ipv4_sendFrame
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           
  6448                           	psect	text13
  6449  005470                     __ptext13:
  6450                           	opt stack 0
  6451  005470                     _arp_getEntryFromTable:
  6452                           	opt stack 24
  6453                           
  6454                           ;incstack = 0
  6455                           ;arp_getEntryFromTable@index stored from wreg
  6456  005470  0100               	movlb	0	; () banked
  6457  005472  6F67               	movwf	arp_getEntryFromTable@index& (0+255),b
  6458                           
  6459                           ;arp.c: 474: return arp_table[index].mac;
  6460  005474  0100               	movlb	0	; () banked
  6461  005476  5167               	movf	arp_getEntryFromTable@index& (0+255),w,b
  6462  005478  0D0E               	mullw	14
  6463  00547A  0E04               	movlw	4
  6464  00547C  26F3               	addwf	prodl,f,c
  6465  00547E  0E00               	movlw	0
  6466  005480  22F4               	addwfc	prodh,f,c
  6467  005482  0E00               	movlw	low _arp_table
  6468  005484  24F3               	addwf	prodl,w,c
  6469  005486  6ED9               	movwf	fsr2l,c
  6470  005488  0E03               	movlw	high _arp_table
  6471  00548A  20F4               	addwfc	prodh,w,c
  6472  00548C  6EDA               	movwf	fsr2h,c
  6473  00548E  EE00  F060         	lfsr	0,?_arp_getEntryFromTable
  6474  005492  0E05               	movlw	5
  6475  005494                     u11731:
  6476  005494  CFDB FFEB          	movff	plusw2,plusw0
  6477  005498  06E8               	decf	wreg,f,c
  6478  00549A  E2FC               	bc	u11731
  6479  00549C  0012               	return	
  6480  00549E                     __end_of_arp_getEntryFromTable:
  6481                           	opt stack 0
  6482                           tblptru	equ	0xFF8
  6483                           tblptrh	equ	0xFF7
  6484                           tblptrl	equ	0xFF6
  6485                           tablat	equ	0xFF5
  6486                           prodh	equ	0xFF4
  6487                           prodl	equ	0xFF3
  6488                           intcon	equ	0xFF2
  6489                           intcon3	equ	0xFF0
  6490                           indf0	equ	0xFEF
  6491                           postinc0	equ	0xFEE
  6492                           plusw0	equ	0xFEB
  6493                           fsr0h	equ	0xFEA
  6494                           fsr0l	equ	0xFE9
  6495                           wreg	equ	0xFE8
  6496                           indf1	equ	0xFE7
  6497                           postinc1	equ	0xFE6
  6498                           postdec1	equ	0xFE5
  6499                           plusw1	equ	0xFE3
  6500                           fsr1h	equ	0xFE2
  6501                           fsr1l	equ	0xFE1
  6502                           indf2	equ	0xFDF
  6503                           postinc2	equ	0xFDE
  6504                           postdec2	equ	0xFDD
  6505                           plusw2	equ	0xFDB
  6506                           fsr2h	equ	0xFDA
  6507                           fsr2l	equ	0xFD9
  6508                           status	equ	0xFD8
  6509                           
  6510 ;; *************** function _ipv4_generateAutoIP *****************
  6511 ;; Defined at:
  6512 ;;		line 333 in file "src/stack/protocols/ipv4.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;		None
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;  ip              4   24[BANK0 ] struct ipv4_address
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  4   20[BANK0 ] struct ipv4_address
  6519 ;; Registers used:
  6520 ;;		wreg, status,2, status,0, cstack
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6526 ;;      Params:         0       4       0       0       0       0       0       0       0
  6527 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6528 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6529 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6530 ;;Total ram usage:        8 bytes
  6531 ;; Hardware stack levels used:    1
  6532 ;; Hardware stack levels required when called:    6
  6533 ;; This function calls:
  6534 ;;		___awmod
  6535 ;;		_rand
  6536 ;; This function is called by:
  6537 ;;		_handleStackBackgroundTasks
  6538 ;;		_main
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text14
  6543  0050CE                     __ptext14:
  6544                           	opt stack 0
  6545  0050CE                     _ipv4_generateAutoIP:
  6546                           	opt stack 24
  6547                           
  6548                           ;ipv4.c: 334: ipv4_address_t ip;
  6549                           ;ipv4.c: 336: ip.address[0] = 169;
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;incstack = 0
  6553  0050CE  0EA9               	movlw	169
  6554  0050D0  0100               	movlb	0	; () banked
  6555  0050D2  6F78               	movwf	ipv4_generateAutoIP@ip& (0+255),b
  6556                           
  6557                           ;ipv4.c: 337: ip.address[1] = 254;
  6558  0050D4  0EFE               	movlw	254
  6559  0050D6  6F79               	movwf	(ipv4_generateAutoIP@ip+1)& (0+255),b
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;ipv4.c: 338: ip.address[2] = (rand() % 253) + 1;
  6563  0050D8  ECFC  F026         	call	_rand	;wreg free
  6564  0050DC  C06C  F06E         	movff	?_rand,___awmod@dividend
  6565  0050E0  C06D  F06F         	movff	?_rand+1,___awmod@dividend+1
  6566  0050E4  0E00               	movlw	0
  6567  0050E6  0100               	movlb	0	; () banked
  6568  0050E8  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  6569  0050EA  0EFD               	movlw	253
  6570  0050EC  6F70               	movwf	___awmod@divisor& (0+255),b
  6571  0050EE  EC5D  F025         	call	___awmod	;wreg free
  6572  0050F2  0100               	movlb	0	; () banked
  6573  0050F4  296E               	incf	?___awmod& (0+255),w,b
  6574  0050F6  6F7A               	movwf	(ipv4_generateAutoIP@ip+2)& (0+255),b
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;ipv4.c: 339: ip.address[3] = (rand() % 256);
  6578  0050F8  ECFC  F026         	call	_rand	;wreg free
  6579  0050FC  0100               	movlb	0	; () banked
  6580  0050FE  516C               	movf	?_rand& (0+255),w,b
  6581  005100  6F7B               	movwf	(ipv4_generateAutoIP@ip+3)& (0+255),b
  6582                           
  6583                           ; BSR set to: 0
  6584                           ;ipv4.c: 340: return ip;
  6585  005102  C078  F074         	movff	ipv4_generateAutoIP@ip,?_ipv4_generateAutoIP
  6586  005106  C079  F075         	movff	ipv4_generateAutoIP@ip+1,?_ipv4_generateAutoIP+1
  6587  00510A  C07A  F076         	movff	ipv4_generateAutoIP@ip+2,?_ipv4_generateAutoIP+2
  6588  00510E  C07B  F077         	movff	ipv4_generateAutoIP@ip+3,?_ipv4_generateAutoIP+3
  6589  005112  0012               	return	
  6590  005114                     __end_of_ipv4_generateAutoIP:
  6591                           	opt stack 0
  6592                           tblptru	equ	0xFF8
  6593                           tblptrh	equ	0xFF7
  6594                           tblptrl	equ	0xFF6
  6595                           tablat	equ	0xFF5
  6596                           prodh	equ	0xFF4
  6597                           prodl	equ	0xFF3
  6598                           intcon	equ	0xFF2
  6599                           intcon3	equ	0xFF0
  6600                           indf0	equ	0xFEF
  6601                           postinc0	equ	0xFEE
  6602                           plusw0	equ	0xFEB
  6603                           fsr0h	equ	0xFEA
  6604                           fsr0l	equ	0xFE9
  6605                           wreg	equ	0xFE8
  6606                           indf1	equ	0xFE7
  6607                           postinc1	equ	0xFE6
  6608                           postdec1	equ	0xFE5
  6609                           plusw1	equ	0xFE3
  6610                           fsr1h	equ	0xFE2
  6611                           fsr1l	equ	0xFE1
  6612                           indf2	equ	0xFDF
  6613                           postinc2	equ	0xFDE
  6614                           postdec2	equ	0xFDD
  6615                           plusw2	equ	0xFDB
  6616                           fsr2h	equ	0xFDA
  6617                           fsr2l	equ	0xFD9
  6618                           status	equ	0xFD8
  6619                           
  6620 ;; *************** function ___awmod *****************
  6621 ;; Defined at:
  6622 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  dividend        2   14[BANK0 ] int 
  6625 ;;  divisor         2   16[BANK0 ] int 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;  sign            1   19[BANK0 ] unsigned char 
  6628 ;;  counter         1   18[BANK0 ] unsigned char 
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  2   14[BANK0 ] int 
  6631 ;; Registers used:
  6632 ;;		wreg, status,2, status,0
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6638 ;;      Params:         0       4       0       0       0       0       0       0       0
  6639 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6640 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6641 ;;      Totals:         0       6       0       0       0       0       0       0       0
  6642 ;;Total ram usage:        6 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:    4
  6645 ;; This function calls:
  6646 ;;		Nothing
  6647 ;; This function is called by:
  6648 ;;		_ipv4_generateAutoIP
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           	psect	text15
  6653  004ABA                     __ptext15:
  6654                           	opt stack 0
  6655  004ABA                     ___awmod:
  6656                           	opt stack 25
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;incstack = 0
  6660  004ABA  0E00               	movlw	0
  6661  004ABC  0100               	movlb	0	; () banked
  6662  004ABE  6F73               	movwf	___awmod@sign& (0+255),b
  6663                           
  6664                           ; BSR set to: 0
  6665  004AC0  AF6F               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6666  004AC2  D006               	goto	l1410
  6667                           
  6668                           ; BSR set to: 0
  6669  004AC4  6D6E               	negf	___awmod@dividend& (0+255),b
  6670  004AC6  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  6671  004AC8  B0D8               	btfsc	status,0,c
  6672  004ACA  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  6673                           
  6674                           ; BSR set to: 0
  6675  004ACC  0E01               	movlw	1
  6676  004ACE  6F73               	movwf	___awmod@sign& (0+255),b
  6677  004AD0                     l1410:
  6678                           
  6679                           ; BSR set to: 0
  6680                           
  6681                           ; BSR set to: 0
  6682  004AD0  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6683  004AD2  D004               	goto	l1411
  6684                           
  6685                           ; BSR set to: 0
  6686  004AD4  6D70               	negf	___awmod@divisor& (0+255),b
  6687  004AD6  1F71               	comf	(___awmod@divisor+1)& (0+255),f,b
  6688  004AD8  B0D8               	btfsc	status,0,c
  6689  004ADA  2B71               	incf	(___awmod@divisor+1)& (0+255),f,b
  6690  004ADC                     l1411:
  6691                           
  6692                           ; BSR set to: 0
  6693                           
  6694                           ; BSR set to: 0
  6695  004ADC  5170               	movf	___awmod@divisor& (0+255),w,b
  6696  004ADE  1171               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6697  004AE0  B4D8               	btfsc	status,2,c
  6698  004AE2  D018               	goto	l1418
  6699                           
  6700                           ; BSR set to: 0
  6701  004AE4  0E01               	movlw	1
  6702  004AE6  6F72               	movwf	___awmod@counter& (0+255),b
  6703  004AE8  D004               	goto	l1413
  6704  004AEA                     
  6705                           ; BSR set to: 0
  6706                           
  6707                           ; BSR set to: 0
  6708  004AEA  90D8               	bcf	status,0,c
  6709  004AEC  3770               	rlcf	___awmod@divisor& (0+255),f,b
  6710  004AEE  3771               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6711  004AF0  2B72               	incf	___awmod@counter& (0+255),f,b
  6712  004AF2                     l1413:
  6713                           
  6714                           ; BSR set to: 0
  6715                           
  6716                           ; BSR set to: 0
  6717  004AF2  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6718  004AF4  D7FA               	goto	l1414
  6719  004AF6                     u11770:
  6720                           
  6721                           ; BSR set to: 0
  6722                           
  6723                           ; BSR set to: 0
  6724                           
  6725                           ; BSR set to: 0
  6726  004AF6  5170               	movf	___awmod@divisor& (0+255),w,b
  6727  004AF8  5D6E               	subwf	___awmod@dividend& (0+255),w,b
  6728  004AFA  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  6729  004AFC  596F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6730  004AFE  A0D8               	btfss	status,0,c
  6731  004B00  D004               	goto	l1417
  6732                           
  6733                           ; BSR set to: 0
  6734  004B02  5170               	movf	___awmod@divisor& (0+255),w,b
  6735  004B04  5F6E               	subwf	___awmod@dividend& (0+255),f,b
  6736  004B06  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  6737  004B08  5B6F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6738  004B0A                     l1417:
  6739                           
  6740                           ; BSR set to: 0
  6741                           
  6742                           ; BSR set to: 0
  6743  004B0A  90D8               	bcf	status,0,c
  6744  004B0C  3371               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6745  004B0E  3370               	rrcf	___awmod@divisor& (0+255),f,b
  6746                           
  6747                           ; BSR set to: 0
  6748  004B10  2F72               	decfsz	___awmod@counter& (0+255),f,b
  6749  004B12  D7F1               	goto	u11770
  6750  004B14                     l1418:
  6751                           
  6752                           ; BSR set to: 0
  6753                           
  6754                           ; BSR set to: 0
  6755                           
  6756                           ; BSR set to: 0
  6757  004B14  5173               	movf	___awmod@sign& (0+255),w,b
  6758  004B16  B4D8               	btfsc	status,2,c
  6759  004B18  D004               	goto	l1419
  6760                           
  6761                           ; BSR set to: 0
  6762  004B1A  6D6E               	negf	___awmod@dividend& (0+255),b
  6763  004B1C  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  6764  004B1E  B0D8               	btfsc	status,0,c
  6765  004B20  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  6766  004B22                     l1419:
  6767                           
  6768                           ; BSR set to: 0
  6769                           
  6770                           ; BSR set to: 0
  6771  004B22  C06E  F06E         	movff	___awmod@dividend,?___awmod
  6772  004B26  C06F  F06F         	movff	___awmod@dividend+1,?___awmod+1
  6773  004B2A  0012               	return	
  6774  004B2C                     __end_of___awmod:
  6775                           	opt stack 0
  6776                           tblptru	equ	0xFF8
  6777                           tblptrh	equ	0xFF7
  6778                           tblptrl	equ	0xFF6
  6779                           tablat	equ	0xFF5
  6780                           prodh	equ	0xFF4
  6781                           prodl	equ	0xFF3
  6782                           intcon	equ	0xFF2
  6783                           intcon3	equ	0xFF0
  6784                           indf0	equ	0xFEF
  6785                           postinc0	equ	0xFEE
  6786                           plusw0	equ	0xFEB
  6787                           fsr0h	equ	0xFEA
  6788                           fsr0l	equ	0xFE9
  6789                           wreg	equ	0xFE8
  6790                           indf1	equ	0xFE7
  6791                           postinc1	equ	0xFE6
  6792                           postdec1	equ	0xFE5
  6793                           plusw1	equ	0xFE3
  6794                           fsr1h	equ	0xFE2
  6795                           fsr1l	equ	0xFE1
  6796                           indf2	equ	0xFDF
  6797                           postinc2	equ	0xFDE
  6798                           postdec2	equ	0xFDD
  6799                           plusw2	equ	0xFDB
  6800                           fsr2h	equ	0xFDA
  6801                           fsr2l	equ	0xFD9
  6802                           status	equ	0xFD8
  6803                           
  6804 ;; *************** function _ipv4_background *****************
  6805 ;; Defined at:
  6806 ;;		line 257 in file "src/stack/protocols/ipv4.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;  link            1    wreg     enum E72
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;  link            1    0[COMRAM] enum E72
  6811 ;;  err             3   63[BANK0 ] struct error
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  3   58[BANK0 ] struct error
  6814 ;; Registers used:
  6815 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6821 ;;      Params:         0       3       0       0       0       0       0       0       0
  6822 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6823 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6824 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6825 ;;Total ram usage:        8 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; Hardware stack levels required when called:    5
  6828 ;; This function calls:
  6829 ;;		_UARTTransmitText
  6830 ;; This function is called by:
  6831 ;;		_handleStackBackgroundTasks
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835                           	psect	text16
  6836  003318                     __ptext16:
  6837                           	opt stack 0
  6838  003318                     _ipv4_background:
  6839                           	opt stack 24
  6840                           
  6841                           ;ipv4.c: 258: error_t err;
  6842                           ;ipv4.c: 259: err.module = ERROR_MODULE_IPv4;
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;incstack = 0
  6846  003318  0E04               	movlw	4
  6847  00331A  0100               	movlb	0	; () banked
  6848  00331C  6F9F               	movwf	ipv4_background@err& (0+255),b
  6849                           
  6850                           ;ipv4.c: 260: err.code = (uint16_t)0;
  6851  00331E  0E00               	movlw	0
  6852  003320  6FA1               	movwf	(ipv4_background@err+2)& (0+255),b
  6853  003322  0E00               	movlw	0
  6854  003324  6FA0               	movwf	(ipv4_background@err+1)& (0+255),b
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;ipv4.c: 261: if ((*arpStatus).module == ERROR_MODULE_ARP && fSrcAddrChanged) {
  6858  003326  C03C  FFD9         	movff	_arpStatus,fsr2l
  6859  00332A  C03D  FFDA         	movff	_arpStatus+1,fsr2h
  6860  00332E  0E03               	movlw	3
  6861  003330  18DE               	xorwf	postinc2,w,c
  6862  003332  A4D8               	btfss	status,2,c
  6863  003334  D092               	goto	l1184
  6864                           
  6865                           ; BSR set to: 0
  6866  003336  B04E               	btfsc	_fSrcAddrChanged/(0+8),_fSrcAddrChanged& (0+7),c
  6867  003338  D06A               	goto	l1185
  6868  00333A  D08F               	goto	l1184
  6869  00333C                     
  6870                           ; BSR set to: 0
  6871                           ;ipv4.c: 264: err = (*arpStatus);
  6872                           
  6873                           ; BSR set to: 0
  6874  00333C  C03C  FFD9         	movff	_arpStatus,fsr2l
  6875  003340  C03D  FFDA         	movff	_arpStatus+1,fsr2h
  6876  003344  CFDE F09F          	movff	postinc2,ipv4_background@err
  6877  003348  CFDE F0A0          	movff	postinc2,ipv4_background@err+1
  6878  00334C  CFDD F0A1          	movff	postdec2,ipv4_background@err+2
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;ipv4.c: 266: UARTTransmitText("[IPv4]: ARP process completed.\n\r");
  6882  003350  0EAD               	movlw	low STR_113
  6883  003352  6F98               	movwf	UARTTransmitText@str& (0+255),b
  6884  003354  0E7C               	movlw	high STR_113
  6885  003356  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  6886  003358  EC27  F027         	call	_UARTTransmitText	;wreg free
  6887                           
  6888                           ;ipv4.c: 268: ipSource = ipPreliminarySource;
  6889  00335C  C1EE  F1F2         	movff	_ipPreliminarySource,_ipSource
  6890  003360  C1EF  F1F3         	movff	_ipPreliminarySource+1,_ipSource+1
  6891  003364  C1F0  F1F4         	movff	_ipPreliminarySource+2,_ipSource+2
  6892  003368  C1F1  F1F5         	movff	_ipPreliminarySource+3,_ipSource+3
  6893                           
  6894                           ;ipv4.c: 269: fSrcAddrChanged = 0;
  6895  00336C  904E               	bcf	_fSrcAddrChanged/(0+8),_fSrcAddrChanged& (0+7),c
  6896                           
  6897                           ;ipv4.c: 270: return err;
  6898  00336E  C09F  F09A         	movff	ipv4_background@err,?_ipv4_background
  6899  003372  C0A0  F09B         	movff	ipv4_background@err+1,?_ipv4_background+1
  6900  003376  C0A1  F09C         	movff	ipv4_background@err+2,?_ipv4_background+2
  6901  00337A  0012               	return	
  6902  00337C                     
  6903                           ;ipv4.c: 272: err = (*arpStatus);
  6904  00337C  C03C  FFD9         	movff	_arpStatus,fsr2l
  6905  003380  C03D  FFDA         	movff	_arpStatus+1,fsr2h
  6906  003384  CFDE F09F          	movff	postinc2,ipv4_background@err
  6907  003388  CFDE F0A0          	movff	postinc2,ipv4_background@err+1
  6908  00338C  CFDD F0A1          	movff	postdec2,ipv4_background@err+2
  6909                           
  6910                           ;ipv4.c: 273: return err;
  6911  003390  C09F  F09A         	movff	ipv4_background@err,?_ipv4_background
  6912  003394  C0A0  F09B         	movff	ipv4_background@err+1,?_ipv4_background+1
  6913  003398  C0A1  F09C         	movff	ipv4_background@err+2,?_ipv4_background+2
  6914  00339C  0012               	return	
  6915  00339E                     
  6916                           ;ipv4.c: 275: err.code = ERROR_IPv4_ADDRESS_ALREADY_IN_USE;
  6917  00339E  0E01               	movlw	1
  6918  0033A0  0100               	movlb	0	; () banked
  6919  0033A2  6FA1               	movwf	(ipv4_background@err+2)& (0+255),b
  6920  0033A4  0EF5               	movlw	245
  6921  0033A6  6FA0               	movwf	(ipv4_background@err+1)& (0+255),b
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;ipv4.c: 276: fSrcAddrChanged = 0;
  6925  0033A8  904E               	bcf	_fSrcAddrChanged/(0+8),_fSrcAddrChanged& (0+7),c
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;ipv4.c: 277: return err;
  6929  0033AA  C09F  F09A         	movff	ipv4_background@err,?_ipv4_background
  6930  0033AE  C0A0  F09B         	movff	ipv4_background@err+1,?_ipv4_background+1
  6931  0033B2  C0A1  F09C         	movff	ipv4_background@err+2,?_ipv4_background+2
  6932                           
  6933                           ; BSR set to: 0
  6934  0033B6  0012               	return	
  6935  0033B8                     l1190:
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;ipv4.c: 281: return err;
  6939  0033B8  C09F  F09A         	movff	ipv4_background@err,?_ipv4_background
  6940  0033BC  C0A0  F09B         	movff	ipv4_background@err+1,?_ipv4_background+1
  6941  0033C0  C0A1  F09C         	movff	ipv4_background@err+2,?_ipv4_background+2
  6942  0033C4  0012               	return	
  6943  0033C6                     
  6944                           ; BSR set to: 0
  6945                           ;ipv4.c: 283: err = (*arpStatus);
  6946                           
  6947                           ; BSR set to: 0
  6948  0033C6  C03C  FFD9         	movff	_arpStatus,fsr2l
  6949  0033CA  C03D  FFDA         	movff	_arpStatus+1,fsr2h
  6950  0033CE  CFDE F09F          	movff	postinc2,ipv4_background@err
  6951  0033D2  CFDE F0A0          	movff	postinc2,ipv4_background@err+1
  6952  0033D6  CFDD F0A1          	movff	postdec2,ipv4_background@err+2
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;ipv4.c: 284: fSrcAddrChanged = 0;
  6956  0033DA  904E               	bcf	_fSrcAddrChanged/(0+8),_fSrcAddrChanged& (0+7),c
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;ipv4.c: 285: return err;
  6960  0033DC  C09F  F09A         	movff	ipv4_background@err,?_ipv4_background
  6961  0033E0  C0A0  F09B         	movff	ipv4_background@err+1,?_ipv4_background+1
  6962  0033E4  C0A1  F09C         	movff	ipv4_background@err+2,?_ipv4_background+2
  6963                           
  6964                           ; BSR set to: 0
  6965  0033E8  0012               	return	
  6966  0033EA                     
  6967                           ; BSR set to: 0
  6968                           ;ipv4.c: 288: fSrcAddrChanged = 0;
  6969                           
  6970                           ; BSR set to: 0
  6971                           ;ipv4.c: 287: case ERROR_ARP_UNKNOWN:
  6972  0033EA  904E               	bcf	_fSrcAddrChanged/(0+8),_fSrcAddrChanged& (0+7),c
  6973                           
  6974                           ; BSR set to: 0
  6975                           ;ipv4.c: 289: err = (*arpStatus);
  6976  0033EC  C03C  FFD9         	movff	_arpStatus,fsr2l
  6977  0033F0  C03D  FFDA         	movff	_arpStatus+1,fsr2h
  6978  0033F4  CFDE F09F          	movff	postinc2,ipv4_background@err
  6979  0033F8  CFDE F0A0          	movff	postinc2,ipv4_background@err+1
  6980  0033FC  CFDD F0A1          	movff	postdec2,ipv4_background@err+2
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;ipv4.c: 290: return err;
  6984  003400  C09F  F09A         	movff	ipv4_background@err,?_ipv4_background
  6985  003404  C0A0  F09B         	movff	ipv4_background@err+1,?_ipv4_background+1
  6986  003408  C0A1  F09C         	movff	ipv4_background@err+2,?_ipv4_background+2
  6987                           
  6988                           ; BSR set to: 0
  6989  00340C  0012               	return	
  6990  00340E                     l1185:
  6991                           
  6992                           ; BSR set to: 0
  6993                           
  6994                           ; BSR set to: 0
  6995  00340E  EE20 F001          	lfsr	2,1
  6996  003412  503C               	movf	_arpStatus,w,c
  6997  003414  26D9               	addwf	fsr2l,f,c
  6998  003416  503D               	movf	_arpStatus+1,w,c
  6999  003418  22DA               	addwfc	fsr2h,f,c
  7000  00341A  CFDE F09D          	movff	postinc2,??_ipv4_background
  7001  00341E  CFDD F09E          	movff	postdec2,??_ipv4_background+1
  7002                           
  7003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7004                           ; Switch size 1, requested type "space"
  7005                           ; Number of cases is 2, Range of values is 0 to 1
  7006                           ; switch strategies available:
  7007                           ; Name         Instructions Cycles
  7008                           ; simple_byte            7     4 (average)
  7009                           ;	Chosen strategy is simple_byte
  7010  003422  519E               	movf	(??_ipv4_background+1)& (0+255),w,b
  7011  003424  0A00               	xorlw	0	; case 0
  7012  003426  B4D8               	btfsc	status,2,c
  7013  003428  D004               	goto	l11297
  7014  00342A  0A01               	xorlw	1	; case 1
  7015  00342C  B4D8               	btfsc	status,2,c
  7016  00342E  D006               	goto	l11299
  7017  003430  D7DC               	goto	l1192
  7018  003432                     l11297:
  7019                           
  7020                           ; BSR set to: 0
  7021                           ; Switch size 1, requested type "space"
  7022                           ; Number of cases is 1, Range of values is 0 to 0
  7023                           ; switch strategies available:
  7024                           ; Name         Instructions Cycles
  7025                           ; simple_byte            4     3 (average)
  7026                           ;	Chosen strategy is simple_byte
  7027  003432  519D               	movf	??_ipv4_background& (0+255),w,b
  7028  003434  0A00               	xorlw	0	; case 0
  7029  003436  B4D8               	btfsc	status,2,c
  7030  003438  D781               	goto	l1186
  7031  00343A  D7D7               	goto	l1192
  7032  00343C                     l11299:
  7033                           
  7034                           ; BSR set to: 0
  7035                           ; Switch size 1, requested type "space"
  7036                           ; Number of cases is 5, Range of values is 145 to 243
  7037                           ; switch strategies available:
  7038                           ; Name         Instructions Cycles
  7039                           ; simple_byte           16     9 (average)
  7040                           ;	Chosen strategy is simple_byte
  7041  00343C  519D               	movf	??_ipv4_background& (0+255),w,b
  7042  00343E  0A91               	xorlw	145	; case 145
  7043  003440  B4D8               	btfsc	status,2,c
  7044  003442  D79C               	goto	l1188
  7045  003444  0A02               	xorlw	2	; case 147
  7046  003446  B4D8               	btfsc	status,2,c
  7047  003448  D7B7               	goto	l1190
  7048  00344A  0A05               	xorlw	5	; case 150
  7049  00344C  B4D8               	btfsc	status,2,c
  7050  00344E  D7A7               	goto	l1189
  7051  003450  0A01               	xorlw	1	; case 151
  7052  003452  B4D8               	btfsc	status,2,c
  7053  003454  D7B8               	goto	l1191
  7054  003456  0A64               	xorlw	100	; case 243
  7055  003458  D7C8               	goto	l1192
  7056  00345A                     l1184:
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;ipv4.c: 293: err.code = ERROR_IPv4_UNKNOWN;
  7060                           
  7061                           ; BSR set to: 0
  7062  00345A  0E02               	movlw	2
  7063  00345C  6FA1               	movwf	(ipv4_background@err+2)& (0+255),b
  7064  00345E  0E57               	movlw	87
  7065  003460  6FA0               	movwf	(ipv4_background@err+1)& (0+255),b
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;ipv4.c: 294: return err;
  7069                           
  7070                           ; BSR set to: 0
  7071  003462  C09F  F09A         	movff	ipv4_background@err,?_ipv4_background
  7072  003466  C0A0  F09B         	movff	ipv4_background@err+1,?_ipv4_background+1
  7073  00346A  C0A1  F09C         	movff	ipv4_background@err+2,?_ipv4_background+2
  7074  00346E  0012               	return	
  7075  003470                     __end_of_ipv4_background:
  7076                           	opt stack 0
  7077                           tblptru	equ	0xFF8
  7078                           tblptrh	equ	0xFF7
  7079                           tblptrl	equ	0xFF6
  7080                           tablat	equ	0xFF5
  7081                           prodh	equ	0xFF4
  7082                           prodl	equ	0xFF3
  7083                           intcon	equ	0xFF2
  7084                           intcon3	equ	0xFF0
  7085                           indf0	equ	0xFEF
  7086                           postinc0	equ	0xFEE
  7087                           plusw0	equ	0xFEB
  7088                           fsr0h	equ	0xFEA
  7089                           fsr0l	equ	0xFE9
  7090                           wreg	equ	0xFE8
  7091                           indf1	equ	0xFE7
  7092                           postinc1	equ	0xFE6
  7093                           postdec1	equ	0xFE5
  7094                           plusw1	equ	0xFE3
  7095                           fsr1h	equ	0xFE2
  7096                           fsr1l	equ	0xFE1
  7097                           indf2	equ	0xFDF
  7098                           postinc2	equ	0xFDE
  7099                           postdec2	equ	0xFDD
  7100                           plusw2	equ	0xFDB
  7101                           fsr2h	equ	0xFDA
  7102                           fsr2l	equ	0xFD9
  7103                           status	equ	0xFD8
  7104                           
  7105 ;; *************** function _ethernet_rxGetNewFrame *****************
  7106 ;; Defined at:
  7107 ;;		line 55 in file "src/eth/ethernet.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  frame           2  120[BANK1 ] PTR struct ethernetFrame
  7110 ;;		 -> stack(123), 
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;  err             3  130[BANK1 ] struct error
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  3  120[BANK1 ] struct error
  7115 ;; Registers used:
  7116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7122 ;;      Params:         0       0       2       0       0       0       0       0       0
  7123 ;;      Locals:         0       0       3       0       0       0       0       0       0
  7124 ;;      Temps:          0       0       8       0       0       0       0       0       0
  7125 ;;      Totals:         0       0      13       0       0       0       0       0       0
  7126 ;;Total ram usage:       13 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; Hardware stack levels required when called:   12
  7129 ;; This function calls:
  7130 ;;		_UARTTransmitInt
  7131 ;;		_UARTTransmitText
  7132 ;;		_arp_handleNewPacket
  7133 ;;		_etherTypeToString
  7134 ;;		_ethernetController_dropPacket
  7135 ;;		_ethernetController_getEtherTypeField
  7136 ;;		_ethernetController_getNextPacketPointer
  7137 ;;		_ethernetController_getRSV
  7138 ;;		_ethernetController_updateNextPacketPointer
  7139 ;;		_getMillis
  7140 ;;		_intToString
  7141 ;;		_ipv4_handleNewPacket
  7142 ;;		_macToString
  7143 ;; This function is called by:
  7144 ;;		_handleStackBackgroundTasks
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text17
  7149  0000EC                     __ptext17:
  7150                           	opt stack 0
  7151  0000EC                     _ethernet_rxGetNewFrame:
  7152                           	opt stack 17
  7153                           
  7154                           ;ethernet.c: 56: uint32_t static counter = 0;
  7155                           ;ethernet.c: 57: error_t err;
  7156                           ;ethernet.c: 58: err.module = ERROR_MODULE_ETHERNET;
  7157                           
  7158                           ;incstack = 0
  7159  0000EC  0E02               	movlw	2
  7160  0000EE  0101               	movlb	1	; () banked
  7161  0000F0  6F82               	movwf	ethernet_rxGetNewFrame@err& (0+255),b
  7162                           
  7163                           ;ethernet.c: 59: err.code = (uint16_t)0;
  7164  0000F2  0E00               	movlw	0
  7165  0000F4  6F84               	movwf	(ethernet_rxGetNewFrame@err+2)& (0+255),b
  7166  0000F6  0E00               	movlw	0
  7167  0000F8  6F83               	movwf	(ethernet_rxGetNewFrame@err+1)& (0+255),b
  7168                           
  7169                           ; BSR set to: 1
  7170                           ;ethernet.c: 62: frame->tReceived = getMillis();
  7171  0000FA  ECE5  F02B         	call	_getMillis	;wreg free
  7172  0000FE  0101               	movlb	1	; () banked
  7173  000100  EE20 F01E          	lfsr	2,30
  7174  000104  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7175  000106  26D9               	addwf	fsr2l,f,c
  7176  000108  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7177  00010A  22DA               	addwfc	fsr2h,f,c
  7178  00010C  0100               	movlb	0	; () banked
  7179  00010E  C060  FFDE         	movff	?_getMillis,postinc2
  7180  000112  C061  FFDE         	movff	?_getMillis+1,postinc2
  7181  000116  C062  FFDE         	movff	?_getMillis+2,postinc2
  7182  00011A  C063  FFDE         	movff	?_getMillis+3,postinc2
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;ethernet.c: 63: frame->memory.start = ethernetController_getNextPacketPointer();
  7186  00011E  ECFD  F02B         	call	_ethernetController_getNextPacketPointer	;wreg free
  7187  000122  0101               	movlb	1	; () banked
  7188  000124  EE20 F010          	lfsr	2,16
  7189  000128  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7190  00012A  26D9               	addwf	fsr2l,f,c
  7191  00012C  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7192  00012E  22DA               	addwfc	fsr2h,f,c
  7193  000130  0100               	movlb	0	; () banked
  7194  000132  C062  FFDE         	movff	?_ethernetController_getNextPacketPointer,postinc2
  7195  000136  C063  FFDD         	movff	?_ethernetController_getNextPacketPointer+1,postdec2
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;ethernet.c: 64: ethernetController_updateNextPacketPointer();
  7199  00013A  EC36  F024         	call	_ethernetController_updateNextPacketPointer	;wreg free
  7200                           
  7201                           ;ethernet.c: 65: frame->memory.fIsAssigned = 1;
  7202  00013E  0101               	movlb	1	; () banked
  7203  000140  EE20 F016          	lfsr	2,22
  7204  000144  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7205  000146  26D9               	addwf	fsr2l,f,c
  7206  000148  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7207  00014A  22DA               	addwfc	fsr2h,f,c
  7208  00014C  0E01               	movlw	1
  7209  00014E  6EDF               	movwf	indf2,c
  7210                           
  7211                           ; BSR set to: 1
  7212                           ;ethernet.c: 66: frame->receiveStatusVector = ethernetController_getRSV(frame->memory.st
      +                          art);
  7213  000150  EE20 F010          	lfsr	2,16
  7214  000154  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7215  000156  26D9               	addwf	fsr2l,f,c
  7216  000158  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7217  00015A  22DA               	addwfc	fsr2h,f,c
  7218  00015C  CFDE F071          	movff	postinc2,ethernetController_getRSV@address
  7219  000160  CFDD F072          	movff	postdec2,ethernetController_getRSV@address+1
  7220  000164  ECAF  F024         	call	_ethernetController_getRSV	;wreg free
  7221  000168  0101               	movlb	1	; () banked
  7222  00016A  EE20 F019          	lfsr	2,25
  7223  00016E  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7224  000170  26D9               	addwf	fsr2l,f,c
  7225  000172  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7226  000174  22DA               	addwfc	fsr2h,f,c
  7227  000176  0E04               	movlw	4
  7228  000178                     u12161:
  7229  000178  CFEB FFDB          	movff	plusw0,plusw2
  7230  00017C  06E8               	decf	wreg,f,c
  7231  00017E  E2FC               	bc	u12161
  7232                           
  7233                           ; BSR set to: 1
  7234                           ;ethernet.c: 67: frame->memory.length = frame->receiveStatusVector.length;
  7235  000180  EE20 F019          	lfsr	2,25
  7236  000184  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7237  000186  26D9               	addwf	fsr2l,f,c
  7238  000188  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7239  00018A  22DA               	addwfc	fsr2h,f,c
  7240  00018C  EE10 F014          	lfsr	1,20
  7241  000190  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7242  000192  26E1               	addwf	fsr1l,f,c
  7243  000194  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7244  000196  22E2               	addwfc	fsr1h,f,c
  7245  000198  CFDE FFE6          	movff	postinc2,postinc1
  7246  00019C  CFDD FFE5          	movff	postdec2,postdec1
  7247                           
  7248                           ; BSR set to: 1
  7249                           ;ethernet.c: 71: if (frame->memory.start + frame->memory.length > 0x5FFF) {
  7250  0001A0  EE20 F014          	lfsr	2,20
  7251  0001A4  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7252  0001A6  26D9               	addwf	fsr2l,f,c
  7253  0001A8  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7254  0001AA  22DA               	addwfc	fsr2h,f,c
  7255  0001AC  CFDE F17A          	movff	postinc2,??_ethernet_rxGetNewFrame
  7256  0001B0  CFDD F17B          	movff	postdec2,??_ethernet_rxGetNewFrame+1
  7257  0001B4  EE20 F010          	lfsr	2,16
  7258  0001B8  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7259  0001BA  26D9               	addwf	fsr2l,f,c
  7260  0001BC  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7261  0001BE  22DA               	addwfc	fsr2h,f,c
  7262  0001C0  CFDE F17C          	movff	postinc2,??_ethernet_rxGetNewFrame+2
  7263  0001C4  CFDD F17D          	movff	postdec2,??_ethernet_rxGetNewFrame+3
  7264  0001C8  517A               	movf	??_ethernet_rxGetNewFrame& (0+255),w,b
  7265  0001CA  277C               	addwf	(??_ethernet_rxGetNewFrame+2)& (0+255),f,b
  7266  0001CC  517B               	movf	(??_ethernet_rxGetNewFrame+1)& (0+255),w,b
  7267  0001CE  237D               	addwfc	(??_ethernet_rxGetNewFrame+3)& (0+255),f,b
  7268  0001D0  0E60               	movlw	96
  7269  0001D2  5D7D               	subwf	(??_ethernet_rxGetNewFrame+3)& (0+255),w,b
  7270  0001D4  A0D8               	btfss	status,0,c
  7271  0001D6  D03B               	goto	l366
  7272                           
  7273                           ; BSR set to: 1
  7274                           ;ethernet.c: 73: frame->memory.end = frame->memory.length - ((0x5FFF - 0x3000) - frame->
      +                          memory.start) + 0x3000;
  7275  0001D8  0E00               	movlw	0
  7276  0001DA  6F7A               	movwf	??_ethernet_rxGetNewFrame& (0+255),b
  7277  0001DC  0E30               	movlw	48
  7278  0001DE  6F7B               	movwf	(??_ethernet_rxGetNewFrame+1)& (0+255),b
  7279  0001E0  EE20 F014          	lfsr	2,20
  7280  0001E4  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7281  0001E6  26D9               	addwf	fsr2l,f,c
  7282  0001E8  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7283  0001EA  22DA               	addwfc	fsr2h,f,c
  7284  0001EC  CFDE F17C          	movff	postinc2,??_ethernet_rxGetNewFrame+2
  7285  0001F0  CFDD F17D          	movff	postdec2,??_ethernet_rxGetNewFrame+3
  7286  0001F4  0EFF               	movlw	255
  7287  0001F6  6F7E               	movwf	(??_ethernet_rxGetNewFrame+4)& (0+255),b
  7288  0001F8  0E2F               	movlw	47
  7289  0001FA  6F7F               	movwf	(??_ethernet_rxGetNewFrame+5)& (0+255),b
  7290  0001FC  EE20 F010          	lfsr	2,16
  7291  000200  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7292  000202  26D9               	addwf	fsr2l,f,c
  7293  000204  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7294  000206  22DA               	addwfc	fsr2h,f,c
  7295  000208  CFDE F180          	movff	postinc2,??_ethernet_rxGetNewFrame+6
  7296  00020C  CFDD F181          	movff	postdec2,??_ethernet_rxGetNewFrame+7
  7297  000210  1F80               	comf	(??_ethernet_rxGetNewFrame+6)& (0+255),f,b
  7298  000212  1F81               	comf	(??_ethernet_rxGetNewFrame+7)& (0+255),f,b
  7299  000214  4B80               	infsnz	(??_ethernet_rxGetNewFrame+6)& (0+255),f,b
  7300  000216  2B81               	incf	(??_ethernet_rxGetNewFrame+7)& (0+255),f,b
  7301  000218  517E               	movf	(??_ethernet_rxGetNewFrame+4)& (0+255),w,b
  7302  00021A  2780               	addwf	(??_ethernet_rxGetNewFrame+6)& (0+255),f,b
  7303  00021C  517F               	movf	(??_ethernet_rxGetNewFrame+5)& (0+255),w,b
  7304  00021E  2381               	addwfc	(??_ethernet_rxGetNewFrame+7)& (0+255),f,b
  7305  000220  1F80               	comf	(??_ethernet_rxGetNewFrame+6)& (0+255),f,b
  7306  000222  1F81               	comf	(??_ethernet_rxGetNewFrame+7)& (0+255),f,b
  7307  000224  4B80               	infsnz	(??_ethernet_rxGetNewFrame+6)& (0+255),f,b
  7308  000226  2B81               	incf	(??_ethernet_rxGetNewFrame+7)& (0+255),f,b
  7309  000228  517C               	movf	(??_ethernet_rxGetNewFrame+2)& (0+255),w,b
  7310  00022A  2780               	addwf	(??_ethernet_rxGetNewFrame+6)& (0+255),f,b
  7311  00022C  517D               	movf	(??_ethernet_rxGetNewFrame+3)& (0+255),w,b
  7312  00022E  2381               	addwfc	(??_ethernet_rxGetNewFrame+7)& (0+255),f,b
  7313  000230  517A               	movf	??_ethernet_rxGetNewFrame& (0+255),w,b
  7314  000232  2780               	addwf	(??_ethernet_rxGetNewFrame+6)& (0+255),f,b
  7315  000234  517B               	movf	(??_ethernet_rxGetNewFrame+1)& (0+255),w,b
  7316  000236  2381               	addwfc	(??_ethernet_rxGetNewFrame+7)& (0+255),f,b
  7317  000238  EE20 F012          	lfsr	2,18
  7318  00023C  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7319  00023E  26D9               	addwf	fsr2l,f,c
  7320  000240  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7321  000242  22DA               	addwfc	fsr2h,f,c
  7322  000244  C180  FFDE         	movff	??_ethernet_rxGetNewFrame+6,postinc2
  7323  000248  C181  FFDD         	movff	??_ethernet_rxGetNewFrame+7,postdec2
  7324                           
  7325                           ;ethernet.c: 74: } else {
  7326  00024C  D022               	goto	l367
  7327  00024E                     l366:
  7328                           
  7329                           ; BSR set to: 1
  7330                           ;ethernet.c: 75: frame->memory.end = frame->memory.start + frame->memory.length;
  7331                           
  7332                           ; BSR set to: 1
  7333  00024E  EE20 F014          	lfsr	2,20
  7334  000252  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7335  000254  26D9               	addwf	fsr2l,f,c
  7336  000256  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7337  000258  22DA               	addwfc	fsr2h,f,c
  7338  00025A  CFDE F17A          	movff	postinc2,??_ethernet_rxGetNewFrame
  7339  00025E  CFDD F17B          	movff	postdec2,??_ethernet_rxGetNewFrame+1
  7340  000262  EE20 F010          	lfsr	2,16
  7341  000266  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7342  000268  26D9               	addwf	fsr2l,f,c
  7343  00026A  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7344  00026C  22DA               	addwfc	fsr2h,f,c
  7345  00026E  CFDE F17C          	movff	postinc2,??_ethernet_rxGetNewFrame+2
  7346  000272  CFDD F17D          	movff	postdec2,??_ethernet_rxGetNewFrame+3
  7347  000276  517A               	movf	??_ethernet_rxGetNewFrame& (0+255),w,b
  7348  000278  277C               	addwf	(??_ethernet_rxGetNewFrame+2)& (0+255),f,b
  7349  00027A  517B               	movf	(??_ethernet_rxGetNewFrame+1)& (0+255),w,b
  7350  00027C  237D               	addwfc	(??_ethernet_rxGetNewFrame+3)& (0+255),f,b
  7351  00027E  EE20 F012          	lfsr	2,18
  7352  000282  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7353  000284  26D9               	addwf	fsr2l,f,c
  7354  000286  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7355  000288  22DA               	addwfc	fsr2h,f,c
  7356  00028A  C17C  FFDE         	movff	??_ethernet_rxGetNewFrame+2,postinc2
  7357  00028E  C17D  FFDD         	movff	??_ethernet_rxGetNewFrame+3,postdec2
  7358  000292                     l367:
  7359                           
  7360                           ; BSR set to: 1
  7361                           ;ethernet.c: 76: }
  7362                           ;ethernet.c: 77: frame->ethertype = ethernetController_getEtherTypeField(frame->memory);
  7363                           
  7364                           ; BSR set to: 1
  7365  000292  EE20 F010          	lfsr	2,16
  7366  000296  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7367  000298  26D9               	addwf	fsr2l,f,c
  7368  00029A  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7369  00029C  22DA               	addwfc	fsr2h,f,c
  7370  00029E  EE00  F06F         	lfsr	0,ethernetController_getEtherTypeField@field
  7371  0002A2  0E08               	movlw	8
  7372  0002A4                     u12181:
  7373  0002A4  CFDB FFEB          	movff	plusw2,plusw0
  7374  0002A8  06E8               	decf	wreg,f,c
  7375  0002AA  E2FC               	bc	u12181
  7376  0002AC  EC96  F025         	call	_ethernetController_getEtherTypeField	;wreg free
  7377  0002B0  0101               	movlb	1	; () banked
  7378  0002B2  EE20 F00E          	lfsr	2,14
  7379  0002B6  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7380  0002B8  26D9               	addwf	fsr2l,f,c
  7381  0002BA  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7382  0002BC  22DA               	addwfc	fsr2h,f,c
  7383  0002BE  0100               	movlb	0	; () banked
  7384  0002C0  C06F  FFDE         	movff	?_ethernetController_getEtherTypeField,postinc2
  7385  0002C4  C070  FFDD         	movff	?_ethernetController_getEtherTypeField+1,postdec2
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;ethernet.c: 79: UARTTransmitText("[");
  7389  0002C8  0EC3               	movlw	low (STR_73+3)
  7390  0002CA  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7391  0002CC  0E7F               	movlw	high (STR_73+3)
  7392  0002CE  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7393  0002D0  EC27  F027         	call	_UARTTransmitText	;wreg free
  7394                           
  7395                           ;ethernet.c: 80: UARTTransmitText(intToString(counter++));
  7396  0002D4  C035  F084         	movff	ethernet_rxGetNewFrame@counter,intToString@val
  7397  0002D8  C036  F085         	movff	ethernet_rxGetNewFrame@counter+1,intToString@val+1
  7398  0002DC  C037  F086         	movff	ethernet_rxGetNewFrame@counter+2,intToString@val+2
  7399  0002E0  C038  F087         	movff	ethernet_rxGetNewFrame@counter+3,intToString@val+3
  7400  0002E4  ECD8  F029         	call	_intToString	;wreg free
  7401  0002E8  C084  F098         	movff	?_intToString,UARTTransmitText@str
  7402  0002EC  C085  F099         	movff	?_intToString+1,UARTTransmitText@str+1
  7403  0002F0  EC27  F027         	call	_UARTTransmitText	;wreg free
  7404  0002F4  0E01               	movlw	1
  7405  0002F6  2635               	addwf	ethernet_rxGetNewFrame@counter,f,c
  7406  0002F8  0E00               	movlw	0
  7407  0002FA  2236               	addwfc	ethernet_rxGetNewFrame@counter+1,f,c
  7408  0002FC  2237               	addwfc	ethernet_rxGetNewFrame@counter+2,f,c
  7409  0002FE  2238               	addwfc	ethernet_rxGetNewFrame@counter+3,f,c
  7410                           
  7411                           ;ethernet.c: 81: UARTTransmitText("]");
  7412  000300  0EFB               	movlw	low (STR_19+1)
  7413  000302  0100               	movlb	0	; () banked
  7414  000304  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7415  000306  0E7F               	movlw	high (STR_19+1)
  7416  000308  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7417  00030A  EC27  F027         	call	_UARTTransmitText	;wreg free
  7418                           
  7419                           ;ethernet.c: 84: if (frame->receiveStatusVector.broadcast)
  7420  00030E  0101               	movlb	1	; () banked
  7421  000310  EE20 F01B          	lfsr	2,27
  7422  000314  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7423  000316  26D9               	addwf	fsr2l,f,c
  7424  000318  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7425  00031A  22DA               	addwfc	fsr2h,f,c
  7426  00031C  AEDF               	btfss	indf2,7,c
  7427  00031E  D007               	goto	l368
  7428                           
  7429                           ; BSR set to: 1
  7430                           ;ethernet.c: 85: UARTTransmitText("[Broadcast]");
  7431  000320  0E56               	movlw	low STR_3
  7432  000322  0100               	movlb	0	; () banked
  7433  000324  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7434  000326  0E7F               	movlw	high STR_3
  7435  000328  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7436  00032A  EC27  F027         	call	_UARTTransmitText	;wreg free
  7437  00032E                     l368:
  7438                           
  7439                           ;ethernet.c: 86: if (frame->receiveStatusVector.unicast)
  7440  00032E  0101               	movlb	1	; () banked
  7441  000330  EE20 F01D          	lfsr	2,29
  7442  000334  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7443  000336  26D9               	addwf	fsr2l,f,c
  7444  000338  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7445  00033A  22DA               	addwfc	fsr2h,f,c
  7446  00033C  A4DF               	btfss	indf2,2,c
  7447  00033E  D007               	goto	l369
  7448                           
  7449                           ; BSR set to: 1
  7450                           ;ethernet.c: 87: UARTTransmitText("[Unicast]");
  7451  000340  0E77               	movlw	low STR_4
  7452  000342  0100               	movlb	0	; () banked
  7453  000344  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7454  000346  0E7F               	movlw	high STR_4
  7455  000348  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7456  00034A  EC27  F027         	call	_UARTTransmitText	;wreg free
  7457  00034E                     l369:
  7458                           
  7459                           ;ethernet.c: 88: if (!frame->receiveStatusVector.receivedOk)
  7460  00034E  0101               	movlb	1	; () banked
  7461  000350  EE20 F01B          	lfsr	2,27
  7462  000354  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7463  000356  26D9               	addwf	fsr2l,f,c
  7464  000358  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7465  00035A  22DA               	addwfc	fsr2h,f,c
  7466  00035C  BADF               	btfsc	indf2,5,c
  7467  00035E  D007               	goto	l370
  7468                           
  7469                           ; BSR set to: 1
  7470                           ;ethernet.c: 89: UARTTransmitText("[Symbol Errors]");
  7471  000360  0EDA               	movlw	low STR_5
  7472  000362  0100               	movlb	0	; () banked
  7473  000364  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7474  000366  0E7E               	movlw	high STR_5
  7475  000368  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7476  00036A  EC27  F027         	call	_UARTTransmitText	;wreg free
  7477  00036E                     l370:
  7478                           
  7479                           ;ethernet.c: 91: UARTTransmitText("[");
  7480  00036E  0EC3               	movlw	low (STR_73+3)
  7481  000370  0100               	movlb	0	; () banked
  7482  000372  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7483  000374  0E7F               	movlw	high (STR_73+3)
  7484  000376  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7485  000378  EC27  F027         	call	_UARTTransmitText	;wreg free
  7486                           
  7487                           ;ethernet.c: 92: UARTTransmitText(intToString(frame->tReceived));
  7488  00037C  0101               	movlb	1	; () banked
  7489  00037E  EE20 F01E          	lfsr	2,30
  7490  000382  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7491  000384  26D9               	addwf	fsr2l,f,c
  7492  000386  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7493  000388  22DA               	addwfc	fsr2h,f,c
  7494  00038A  CFDE F084          	movff	postinc2,intToString@val
  7495  00038E  CFDE F085          	movff	postinc2,intToString@val+1
  7496  000392  CFDE F086          	movff	postinc2,intToString@val+2
  7497  000396  CFDE F087          	movff	postinc2,intToString@val+3
  7498  00039A  ECD8  F029         	call	_intToString	;wreg free
  7499  00039E  C084  F098         	movff	?_intToString,UARTTransmitText@str
  7500  0003A2  C085  F099         	movff	?_intToString+1,UARTTransmitText@str+1
  7501  0003A6  EC27  F027         	call	_UARTTransmitText	;wreg free
  7502                           
  7503                           ;ethernet.c: 93: UARTTransmitText("]");
  7504  0003AA  0EFB               	movlw	low (STR_19+1)
  7505  0003AC  0100               	movlb	0	; () banked
  7506  0003AE  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7507  0003B0  0E7F               	movlw	high (STR_19+1)
  7508  0003B2  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7509  0003B4  EC27  F027         	call	_UARTTransmitText	;wreg free
  7510                           
  7511                           ;ethernet.c: 99: switch (frame->ethertype) {
  7512  0003B8  D097               	goto	l371
  7513  0003BA                     
  7514                           ;ethernet.c: 101: UARTTransmitText("[ARP]");
  7515  0003BA  0EBA               	movlw	low STR_8
  7516  0003BC  0100               	movlb	0	; () banked
  7517  0003BE  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7518  0003C0  0E7F               	movlw	high STR_8
  7519  0003C2  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7520  0003C4  EC27  F027         	call	_UARTTransmitText	;wreg free
  7521                           
  7522                           ;ethernet.c: 102: arp_handleNewPacket(frame);
  7523  0003C8  C178  F0FC         	movff	ethernet_rxGetNewFrame@frame,arp_handleNewPacket@frame
  7524  0003CC  C179  F0FD         	movff	ethernet_rxGetNewFrame@frame+1,arp_handleNewPacket@frame+1
  7525  0003D0  ECEA  F014         	call	_arp_handleNewPacket	;wreg free
  7526                           
  7527                           ;ethernet.c: 103: break;
  7528  0003D4  D0A0               	goto	l373
  7529  0003D6                     
  7530                           ;ethernet.c: 105: UARTTransmitText("[IPv4]");
  7531  0003D6  0EB3               	movlw	low STR_9
  7532  0003D8  0100               	movlb	0	; () banked
  7533  0003DA  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7534  0003DC  0E7F               	movlw	high STR_9
  7535  0003DE  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7536  0003E0  EC27  F027         	call	_UARTTransmitText	;wreg free
  7537                           
  7538                           ;ethernet.c: 106: ipv4_handleNewPacket(frame);
  7539  0003E4  C178  F0B5         	movff	ethernet_rxGetNewFrame@frame,ipv4_handleNewPacket@frame
  7540  0003E8  C179  F0B6         	movff	ethernet_rxGetNewFrame@frame+1,ipv4_handleNewPacket@frame+1
  7541  0003EC  ECCB  F015         	call	_ipv4_handleNewPacket	;wreg free
  7542                           
  7543                           ;ethernet.c: 107: break;
  7544  0003F0  D092               	goto	l373
  7545  0003F2                     
  7546                           ;ethernet.c: 109: UARTTransmitText("[Unknown EtherType]");
  7547  0003F2  0E36               	movlw	low STR_10
  7548  0003F4  0100               	movlb	0	; () banked
  7549  0003F6  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7550  0003F8  0E7E               	movlw	high STR_10
  7551  0003FA  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7552  0003FC  EC27  F027         	call	_UARTTransmitText	;wreg free
  7553                           
  7554                           ;ethernet.c: 110: UARTTransmitText("[");
  7555  000400  0EC3               	movlw	low (STR_73+3)
  7556  000402  0100               	movlb	0	; () banked
  7557  000404  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7558  000406  0E7F               	movlw	high (STR_73+3)
  7559  000408  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7560  00040A  EC27  F027         	call	_UARTTransmitText	;wreg free
  7561                           
  7562                           ;ethernet.c: 111: UARTTransmitText(macToString(frame->source));
  7563  00040E  0101               	movlb	1	; () banked
  7564  000410  EE20 F002          	lfsr	2,2
  7565  000414  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7566  000416  26D9               	addwf	fsr2l,f,c
  7567  000418  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7568  00041A  22DA               	addwfc	fsr2h,f,c
  7569  00041C  EE00  F07A         	lfsr	0,macToString@addr
  7570  000420  0E05               	movlw	5
  7571  000422                     u12221:
  7572  000422  CFDB FFEB          	movff	plusw2,plusw0
  7573  000426  06E8               	decf	wreg,f,c
  7574  000428  E2FC               	bc	u12221
  7575  00042A  ECBB  F01D         	call	_macToString	;wreg free
  7576  00042E  C07A  F098         	movff	?_macToString,UARTTransmitText@str
  7577  000432  C07B  F099         	movff	?_macToString+1,UARTTransmitText@str+1
  7578  000436  EC27  F027         	call	_UARTTransmitText	;wreg free
  7579                           
  7580                           ;ethernet.c: 112: UARTTransmitText("->");
  7581  00043A  0EF4               	movlw	low STR_12
  7582  00043C  0100               	movlb	0	; () banked
  7583  00043E  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7584  000440  0E7F               	movlw	high STR_12
  7585  000442  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7586  000444  EC27  F027         	call	_UARTTransmitText	;wreg free
  7587                           
  7588                           ;ethernet.c: 113: UARTTransmitText(macToString(frame->destination));
  7589  000448  0101               	movlb	1	; () banked
  7590  00044A  EE20 F008          	lfsr	2,8
  7591  00044E  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7592  000450  26D9               	addwf	fsr2l,f,c
  7593  000452  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7594  000454  22DA               	addwfc	fsr2h,f,c
  7595  000456  EE00  F07A         	lfsr	0,macToString@addr
  7596  00045A  0E05               	movlw	5
  7597  00045C                     u12231:
  7598  00045C  CFDB FFEB          	movff	plusw2,plusw0
  7599  000460  06E8               	decf	wreg,f,c
  7600  000462  E2FC               	bc	u12231
  7601  000464  ECBB  F01D         	call	_macToString	;wreg free
  7602  000468  C07A  F098         	movff	?_macToString,UARTTransmitText@str
  7603  00046C  C07B  F099         	movff	?_macToString+1,UARTTransmitText@str+1
  7604  000470  EC27  F027         	call	_UARTTransmitText	;wreg free
  7605                           
  7606                           ;ethernet.c: 114: UARTTransmitText("][");
  7607  000474  0EF7               	movlw	low STR_13
  7608  000476  0100               	movlb	0	; () banked
  7609  000478  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7610  00047A  0E7F               	movlw	high STR_13
  7611  00047C  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7612  00047E  EC27  F027         	call	_UARTTransmitText	;wreg free
  7613                           
  7614                           ;ethernet.c: 115: UARTTransmitText(etherTypeToString(frame->ethertype));
  7615  000482  0101               	movlb	1	; () banked
  7616  000484  EE20 F00E          	lfsr	2,14
  7617  000488  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7618  00048A  26D9               	addwf	fsr2l,f,c
  7619  00048C  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7620  00048E  22DA               	addwfc	fsr2h,f,c
  7621  000490  CFDE F060          	movff	postinc2,etherTypeToString@ethertype
  7622  000494  CFDD F061          	movff	postdec2,etherTypeToString@ethertype+1
  7623  000498  EC8A  F028         	call	_etherTypeToString	;wreg free
  7624  00049C  C060  F098         	movff	?_etherTypeToString,UARTTransmitText@str
  7625  0004A0  C061  F099         	movff	?_etherTypeToString+1,UARTTransmitText@str+1
  7626  0004A4  EC27  F027         	call	_UARTTransmitText	;wreg free
  7627                           
  7628                           ;ethernet.c: 116: UARTTransmitText("][L=");
  7629  0004A8  0ED9               	movlw	low STR_14
  7630  0004AA  0100               	movlb	0	; () banked
  7631  0004AC  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7632  0004AE  0E7F               	movlw	high STR_14
  7633  0004B0  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7634  0004B2  EC27  F027         	call	_UARTTransmitText	;wreg free
  7635                           
  7636                           ;ethernet.c: 117: UARTTransmitInt(frame->length);
  7637  0004B6  C178  FFD9         	movff	ethernet_rxGetNewFrame@frame,fsr2l
  7638  0004BA  C179  FFDA         	movff	ethernet_rxGetNewFrame@frame+1,fsr2h
  7639  0004BE  CFDE F17A          	movff	postinc2,??_ethernet_rxGetNewFrame
  7640  0004C2  CFDD F17B          	movff	postdec2,??_ethernet_rxGetNewFrame+1
  7641  0004C6  C17A  F09A         	movff	??_ethernet_rxGetNewFrame,UARTTransmitInt@val
  7642  0004CA  C17B  F09B         	movff	??_ethernet_rxGetNewFrame+1,UARTTransmitInt@val+1
  7643  0004CE  0100               	movlb	0	; () banked
  7644  0004D0  6B9C               	clrf	(UARTTransmitInt@val+2)& (0+255),b
  7645  0004D2  6B9D               	clrf	(UARTTransmitInt@val+3)& (0+255),b
  7646  0004D4  EC61  F02B         	call	_UARTTransmitInt	;wreg free
  7647                           
  7648                           ;ethernet.c: 118: UARTTransmitText("] ");
  7649  0004D8  0EF1               	movlw	low STR_15
  7650  0004DA  0100               	movlb	0	; () banked
  7651  0004DC  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7652  0004DE  0E7F               	movlw	high STR_15
  7653  0004E0  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7654  0004E2  EC27  F027         	call	_UARTTransmitText	;wreg free
  7655                           
  7656                           ;ethernet.c: 120: }
  7657                           
  7658                           ;ethernet.c: 119: break;
  7659  0004E6  D017               	goto	l373
  7660  0004E8                     l371:
  7661  0004E8  0101               	movlb	1	; () banked
  7662  0004EA  EE20 F00E          	lfsr	2,14
  7663  0004EE  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7664  0004F0  26D9               	addwf	fsr2l,f,c
  7665  0004F2  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7666  0004F4  22DA               	addwfc	fsr2h,f,c
  7667  0004F6  CFDE F17A          	movff	postinc2,??_ethernet_rxGetNewFrame
  7668  0004FA  CFDD F17B          	movff	postdec2,??_ethernet_rxGetNewFrame+1
  7669                           
  7670                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7671                           ; Switch size 1, requested type "space"
  7672                           ; Number of cases is 1, Range of values is 8 to 8
  7673                           ; switch strategies available:
  7674                           ; Name         Instructions Cycles
  7675                           ; simple_byte            4     3 (average)
  7676                           ;	Chosen strategy is simple_byte
  7677  0004FE  517B               	movf	(??_ethernet_rxGetNewFrame+1)& (0+255),w,b
  7678  000500  0A08               	xorlw	8	; case 8
  7679  000502  A4D8               	btfss	status,2,c
  7680  000504  D776               	goto	l375
  7681                           
  7682                           ; BSR set to: 1
  7683                           ; Switch size 1, requested type "space"
  7684                           ; Number of cases is 2, Range of values is 0 to 6
  7685                           ; switch strategies available:
  7686                           ; Name         Instructions Cycles
  7687                           ; simple_byte            7     4 (average)
  7688                           ;	Chosen strategy is simple_byte
  7689  000506  517A               	movf	??_ethernet_rxGetNewFrame& (0+255),w,b
  7690  000508  0A00               	xorlw	0	; case 0
  7691  00050A  B4D8               	btfsc	status,2,c
  7692  00050C  D764               	goto	l374
  7693  00050E  0A06               	xorlw	6	; case 6
  7694  000510  B4D8               	btfsc	status,2,c
  7695  000512  D753               	goto	l372
  7696  000514  D76E               	goto	l375
  7697  000516                     l373:
  7698                           
  7699                           ;ethernet.c: 123: UARTTransmitText("[");
  7700                           
  7701                           ; BSR set to: 1
  7702  000516  0EC3               	movlw	low (STR_73+3)
  7703  000518  0100               	movlb	0	; () banked
  7704  00051A  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7705  00051C  0E7F               	movlw	high (STR_73+3)
  7706  00051E  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7707  000520  EC27  F027         	call	_UARTTransmitText	;wreg free
  7708                           
  7709                           ;ethernet.c: 124: UARTTransmitText(intToString(frame->memory.start));
  7710  000524  0101               	movlb	1	; () banked
  7711  000526  EE20 F010          	lfsr	2,16
  7712  00052A  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7713  00052C  26D9               	addwf	fsr2l,f,c
  7714  00052E  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7715  000530  22DA               	addwfc	fsr2h,f,c
  7716  000532  CFDE F17A          	movff	postinc2,??_ethernet_rxGetNewFrame
  7717  000536  CFDD F17B          	movff	postdec2,??_ethernet_rxGetNewFrame+1
  7718  00053A  C17A  F084         	movff	??_ethernet_rxGetNewFrame,intToString@val
  7719  00053E  C17B  F085         	movff	??_ethernet_rxGetNewFrame+1,intToString@val+1
  7720  000542  0100               	movlb	0	; () banked
  7721  000544  6B86               	clrf	(intToString@val+2)& (0+255),b
  7722  000546  6B87               	clrf	(intToString@val+3)& (0+255),b
  7723  000548  ECD8  F029         	call	_intToString	;wreg free
  7724  00054C  C084  F098         	movff	?_intToString,UARTTransmitText@str
  7725  000550  C085  F099         	movff	?_intToString+1,UARTTransmitText@str+1
  7726  000554  EC27  F027         	call	_UARTTransmitText	;wreg free
  7727                           
  7728                           ;ethernet.c: 125: UARTTransmitText(" to ");
  7729  000558  0E1D               	movlw	low (STR_25+32)
  7730  00055A  0100               	movlb	0	; () banked
  7731  00055C  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7732  00055E  0E7C               	movlw	high (STR_25+32)
  7733  000560  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7734  000562  EC27  F027         	call	_UARTTransmitText	;wreg free
  7735                           
  7736                           ;ethernet.c: 126: UARTTransmitText(intToString(frame->memory.end));
  7737  000566  0101               	movlb	1	; () banked
  7738  000568  EE20 F012          	lfsr	2,18
  7739  00056C  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7740  00056E  26D9               	addwf	fsr2l,f,c
  7741  000570  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7742  000572  22DA               	addwfc	fsr2h,f,c
  7743  000574  CFDE F17A          	movff	postinc2,??_ethernet_rxGetNewFrame
  7744  000578  CFDD F17B          	movff	postdec2,??_ethernet_rxGetNewFrame+1
  7745  00057C  C17A  F084         	movff	??_ethernet_rxGetNewFrame,intToString@val
  7746  000580  C17B  F085         	movff	??_ethernet_rxGetNewFrame+1,intToString@val+1
  7747  000584  0100               	movlb	0	; () banked
  7748  000586  6B86               	clrf	(intToString@val+2)& (0+255),b
  7749  000588  6B87               	clrf	(intToString@val+3)& (0+255),b
  7750  00058A  ECD8  F029         	call	_intToString	;wreg free
  7751  00058E  C084  F098         	movff	?_intToString,UARTTransmitText@str
  7752  000592  C085  F099         	movff	?_intToString+1,UARTTransmitText@str+1
  7753  000596  EC27  F027         	call	_UARTTransmitText	;wreg free
  7754                           
  7755                           ;ethernet.c: 127: UARTTransmitText(" (");
  7756  00059A  0E0C               	movlw	low (STR_42+29)
  7757  00059C  0100               	movlb	0	; () banked
  7758  00059E  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7759  0005A0  0E7D               	movlw	high (STR_42+29)
  7760  0005A2  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7761  0005A4  EC27  F027         	call	_UARTTransmitText	;wreg free
  7762                           
  7763                           ;ethernet.c: 128: UARTTransmitText(intToString(frame->memory.length));
  7764  0005A8  0101               	movlb	1	; () banked
  7765  0005AA  EE20 F014          	lfsr	2,20
  7766  0005AE  5178               	movf	ethernet_rxGetNewFrame@frame& (0+255),w,b
  7767  0005B0  26D9               	addwf	fsr2l,f,c
  7768  0005B2  5179               	movf	(ethernet_rxGetNewFrame@frame+1)& (0+255),w,b
  7769  0005B4  22DA               	addwfc	fsr2h,f,c
  7770  0005B6  CFDE F17A          	movff	postinc2,??_ethernet_rxGetNewFrame
  7771  0005BA  CFDD F17B          	movff	postdec2,??_ethernet_rxGetNewFrame+1
  7772  0005BE  C17A  F084         	movff	??_ethernet_rxGetNewFrame,intToString@val
  7773  0005C2  C17B  F085         	movff	??_ethernet_rxGetNewFrame+1,intToString@val+1
  7774  0005C6  0100               	movlb	0	; () banked
  7775  0005C8  6B86               	clrf	(intToString@val+2)& (0+255),b
  7776  0005CA  6B87               	clrf	(intToString@val+3)& (0+255),b
  7777  0005CC  ECD8  F029         	call	_intToString	;wreg free
  7778  0005D0  C084  F098         	movff	?_intToString,UARTTransmitText@str
  7779  0005D4  C085  F099         	movff	?_intToString+1,UARTTransmitText@str+1
  7780  0005D8  EC27  F027         	call	_UARTTransmitText	;wreg free
  7781                           
  7782                           ;ethernet.c: 129: UARTTransmitText(")]");
  7783  0005DC  0EFA               	movlw	low STR_19
  7784  0005DE  0100               	movlb	0	; () banked
  7785  0005E0  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7786  0005E2  0E7F               	movlw	high STR_19
  7787  0005E4  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7788  0005E6  EC27  F027         	call	_UARTTransmitText	;wreg free
  7789                           
  7790                           ;ethernet.c: 131: ethernetController_dropPacket();
  7791  0005EA  EC10  F029         	call	_ethernetController_dropPacket	;wreg free
  7792                           
  7793                           ;ethernet.c: 133: UARTTransmitText("\n\r");
  7794  0005EE  0EEB               	movlw	low (STR_44+1)
  7795  0005F0  0100               	movlb	0	; () banked
  7796  0005F2  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7797  0005F4  0E7F               	movlw	high (STR_44+1)
  7798  0005F6  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7799  0005F8  EC27  F027         	call	_UARTTransmitText	;wreg free
  7800  0005FC  0012               	return	
  7801  0005FE                     __end_of_ethernet_rxGetNewFrame:
  7802                           	opt stack 0
  7803                           tblptru	equ	0xFF8
  7804                           tblptrh	equ	0xFF7
  7805                           tblptrl	equ	0xFF6
  7806                           tablat	equ	0xFF5
  7807                           prodh	equ	0xFF4
  7808                           prodl	equ	0xFF3
  7809                           intcon	equ	0xFF2
  7810                           intcon3	equ	0xFF0
  7811                           indf0	equ	0xFEF
  7812                           postinc0	equ	0xFEE
  7813                           plusw0	equ	0xFEB
  7814                           fsr0h	equ	0xFEA
  7815                           fsr0l	equ	0xFE9
  7816                           wreg	equ	0xFE8
  7817                           indf1	equ	0xFE7
  7818                           postinc1	equ	0xFE6
  7819                           postdec1	equ	0xFE5
  7820                           plusw1	equ	0xFE3
  7821                           fsr1h	equ	0xFE2
  7822                           fsr1l	equ	0xFE1
  7823                           indf2	equ	0xFDF
  7824                           postinc2	equ	0xFDE
  7825                           postdec2	equ	0xFDD
  7826                           plusw2	equ	0xFDB
  7827                           fsr2h	equ	0xFDA
  7828                           fsr2l	equ	0xFD9
  7829                           status	equ	0xFD8
  7830                           
  7831 ;; *************** function _ipv4_handleNewPacket *****************
  7832 ;; Defined at:
  7833 ;;		line 212 in file "src/stack/protocols/ipv4.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;  frame           2   85[BANK0 ] PTR struct ethernetFrame
  7836 ;;		 -> stack(123), 
  7837 ;; Auto vars:     Size  Location     Type
  7838 ;;  ip             23   98[BANK0 ] struct ipv4_header
  7839 ;;  headerField     9   89[BANK0 ] struct memoryField
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  1    wreg      void 
  7842 ;; Registers used:
  7843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7844 ;; Tracked objects:
  7845 ;;		On entry : 0/0
  7846 ;;		On exit  : 0/0
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7849 ;;      Params:         0       2       0       0       0       0       0       0       0
  7850 ;;      Locals:         0      32       0       0       0       0       0       0       0
  7851 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7852 ;;      Totals:         0      36       0       0       0       0       0       0       0
  7853 ;;Total ram usage:       36 bytes
  7854 ;; Hardware stack levels used:    1
  7855 ;; Hardware stack levels required when called:    9
  7856 ;; This function calls:
  7857 ;;		_UARTTransmitText
  7858 ;;		_ethernetController_dropPacket
  7859 ;;		_intToString
  7860 ;;		_ipAdressToString
  7861 ;;		_ipProtocolToString
  7862 ;;		_ipv4_checkHeaderChecksum
  7863 ;;		_ipv4_parseHeader
  7864 ;; This function is called by:
  7865 ;;		_ethernet_rxGetNewFrame
  7866 ;; This function uses a non-reentrant model
  7867 ;;
  7868                           
  7869                           	psect	text18
  7870  002B96                     __ptext18:
  7871                           	opt stack 0
  7872  002B96                     _ipv4_handleNewPacket:
  7873                           	opt stack 19
  7874                           
  7875                           ;ipv4.c: 213: ipv4_header_t ip;
  7876                           ;ipv4.c: 214: memoryField_t headerField;
  7877                           ;ipv4.c: 215: if (frame->ethertype != ETHERTYPE_IPv4) {
  7878                           
  7879                           ;incstack = 0
  7880  002B96  0100               	movlb	0	; () banked
  7881  002B98  EE20 F00E          	lfsr	2,14
  7882  002B9C  51B5               	movf	ipv4_handleNewPacket@frame& (0+255),w,b
  7883  002B9E  26D9               	addwf	fsr2l,f,c
  7884  002BA0  51B6               	movf	(ipv4_handleNewPacket@frame+1)& (0+255),w,b
  7885  002BA2  22DA               	addwfc	fsr2h,f,c
  7886  002BA4  50DE               	movf	postinc2,w,c
  7887  002BA6  E104               	bnz	u11550
  7888  002BA8  0E08               	movlw	8
  7889  002BAA  18DE               	xorwf	postinc2,w,c
  7890  002BAC  B4D8               	btfsc	status,2,c
  7891  002BAE  D007               	goto	l1170
  7892  002BB0                     u11550:
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;ipv4.c: 216: ethernetController_dropPacket(frame);
  7896  002BB0  C0B5  F072         	movff	ipv4_handleNewPacket@frame,?_ethernetController_dropPacket
  7897  002BB4  C0B6  F073         	movff	ipv4_handleNewPacket@frame+1,?_ethernetController_dropPacket+1
  7898  002BB8  EC10  F029         	call	_ethernetController_dropPacket	;wreg free
  7899                           
  7900                           ;ipv4.c: 217: return;
  7901  002BBC  0012               	return	
  7902  002BBE                     l1170:
  7903                           
  7904                           ;ipv4.c: 218: }
  7905                           ;ipv4.c: 219: headerField = frame->memory;
  7906  002BBE  0100               	movlb	0	; () banked
  7907  002BC0  EE20 F010          	lfsr	2,16
  7908  002BC4  51B5               	movf	ipv4_handleNewPacket@frame& (0+255),w,b
  7909  002BC6  26D9               	addwf	fsr2l,f,c
  7910  002BC8  51B6               	movf	(ipv4_handleNewPacket@frame+1)& (0+255),w,b
  7911  002BCA  22DA               	addwfc	fsr2h,f,c
  7912  002BCC  EE10  F0B9         	lfsr	1,ipv4_handleNewPacket@headerField
  7913  002BD0  0E08               	movlw	8
  7914  002BD2                     u11561:
  7915  002BD2  CFDB FFE3          	movff	plusw2,plusw1
  7916  002BD6  06E8               	decf	wreg,f,c
  7917  002BD8  E2FC               	bc	u11561
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;ipv4.c: 220: headerField.start = frame->memory.start + 22;
  7921  002BDA  EE20 F010          	lfsr	2,16
  7922  002BDE  51B5               	movf	ipv4_handleNewPacket@frame& (0+255),w,b
  7923  002BE0  26D9               	addwf	fsr2l,f,c
  7924  002BE2  51B6               	movf	(ipv4_handleNewPacket@frame+1)& (0+255),w,b
  7925  002BE4  22DA               	addwfc	fsr2h,f,c
  7926  002BE6  CFDE F0B7          	movff	postinc2,??_ipv4_handleNewPacket
  7927  002BEA  CFDD F0B8          	movff	postdec2,??_ipv4_handleNewPacket+1
  7928  002BEE  0E16               	movlw	22
  7929  002BF0  25B7               	addwf	??_ipv4_handleNewPacket& (0+255),w,b
  7930  002BF2  6FB9               	movwf	ipv4_handleNewPacket@headerField& (0+255),b
  7931  002BF4  0E00               	movlw	0
  7932  002BF6  21B8               	addwfc	(??_ipv4_handleNewPacket+1)& (0+255),w,b
  7933  002BF8  6FBA               	movwf	(ipv4_handleNewPacket@headerField+1)& (0+255),b
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;ipv4.c: 222: ip = ipv4_parseHeader(&headerField);
  7937  002BFA  0EB9               	movlw	low ipv4_handleNewPacket@headerField
  7938  002BFC  6F74               	movwf	ipv4_parseHeader@field& (0+255),b
  7939  002BFE  0E00               	movlw	high ipv4_handleNewPacket@headerField
  7940  002C00  6F75               	movwf	(ipv4_parseHeader@field+1)& (0+255),b
  7941  002C02  EC95  F010         	call	_ipv4_parseHeader	;wreg free
  7942  002C06  EE20  F0C2         	lfsr	2,ipv4_handleNewPacket@ip
  7943  002C0A  0E16               	movlw	22
  7944  002C0C                     u11571:
  7945  002C0C  CFEB FFDB          	movff	plusw0,plusw2
  7946  002C10  06E8               	decf	wreg,f,c
  7947  002C12  E2FC               	bc	u11571
  7948                           
  7949                           ;ipv4.c: 224: UARTTransmitText("[");
  7950  002C14  0EC3               	movlw	low (STR_73+3)
  7951  002C16  0100               	movlb	0	; () banked
  7952  002C18  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7953  002C1A  0E7F               	movlw	high (STR_73+3)
  7954  002C1C  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7955  002C1E  EC27  F027         	call	_UARTTransmitText	;wreg free
  7956                           
  7957                           ;ipv4.c: 225: UARTTransmitText(ipAdressToString(ip.source));
  7958  002C22  C0D1  F073         	movff	ipv4_handleNewPacket@ip+15,ipAdressToString@ip
  7959  002C26  C0D2  F074         	movff	ipv4_handleNewPacket@ip+16,ipAdressToString@ip+1
  7960  002C2A  C0D3  F075         	movff	ipv4_handleNewPacket@ip+17,ipAdressToString@ip+2
  7961  002C2E  C0D4  F076         	movff	ipv4_handleNewPacket@ip+18,ipAdressToString@ip+3
  7962  002C32  ECF3  F013         	call	_ipAdressToString	;wreg free
  7963  002C36  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
  7964  002C3A  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
  7965  002C3E  EC27  F027         	call	_UARTTransmitText	;wreg free
  7966                           
  7967                           ;ipv4.c: 226: UARTTransmitText(" -> ");
  7968  002C42  0ED4               	movlw	low STR_43
  7969  002C44  0100               	movlb	0	; () banked
  7970  002C46  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7971  002C48  0E7F               	movlw	high STR_43
  7972  002C4A  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7973  002C4C  EC27  F027         	call	_UARTTransmitText	;wreg free
  7974                           
  7975                           ;ipv4.c: 227: UARTTransmitText(ipAdressToString(ip.destination));
  7976  002C50  C0D5  F073         	movff	ipv4_handleNewPacket@ip+19,ipAdressToString@ip
  7977  002C54  C0D6  F074         	movff	ipv4_handleNewPacket@ip+20,ipAdressToString@ip+1
  7978  002C58  C0D7  F075         	movff	ipv4_handleNewPacket@ip+21,ipAdressToString@ip+2
  7979  002C5C  C0D8  F076         	movff	ipv4_handleNewPacket@ip+22,ipAdressToString@ip+3
  7980  002C60  ECF3  F013         	call	_ipAdressToString	;wreg free
  7981  002C64  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
  7982  002C68  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
  7983  002C6C  EC27  F027         	call	_UARTTransmitText	;wreg free
  7984                           
  7985                           ;ipv4.c: 228: UARTTransmitText("][");
  7986  002C70  0EF7               	movlw	low STR_13
  7987  002C72  0100               	movlb	0	; () banked
  7988  002C74  6F98               	movwf	UARTTransmitText@str& (0+255),b
  7989  002C76  0E7F               	movlw	high STR_13
  7990  002C78  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  7991  002C7A  EC27  F027         	call	_UARTTransmitText	;wreg free
  7992                           
  7993                           ;ipv4.c: 229: UARTTransmitText((ipProtocolToString(ip.protocol)));
  7994  002C7E  0100               	movlb	0	; () banked
  7995  002C80  51CE               	movf	(ipv4_handleNewPacket@ip+12)& (0+255),w,b
  7996  002C82  EC43  F028         	call	_ipProtocolToString
  7997  002C86  C060  F098         	movff	?_ipProtocolToString,UARTTransmitText@str
  7998  002C8A  C061  F099         	movff	?_ipProtocolToString+1,UARTTransmitText@str+1
  7999  002C8E  EC27  F027         	call	_UARTTransmitText	;wreg free
  8000                           
  8001                           ;ipv4.c: 230: UARTTransmitText("][");
  8002  002C92  0EF7               	movlw	low STR_13
  8003  002C94  0100               	movlb	0	; () banked
  8004  002C96  6F98               	movwf	UARTTransmitText@str& (0+255),b
  8005  002C98  0E7F               	movlw	high STR_13
  8006  002C9A  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8007  002C9C  EC27  F027         	call	_UARTTransmitText	;wreg free
  8008                           
  8009                           ;ipv4.c: 231: UARTTransmitText(intToString(ip.totalLength));
  8010  002CA0  C0C6  F084         	movff	ipv4_handleNewPacket@ip+4,intToString@val
  8011  002CA4  C0C7  F085         	movff	ipv4_handleNewPacket@ip+5,intToString@val+1
  8012  002CA8  0100               	movlb	0	; () banked
  8013  002CAA  6B86               	clrf	(intToString@val+2)& (0+255),b
  8014  002CAC  6B87               	clrf	(intToString@val+3)& (0+255),b
  8015  002CAE  ECD8  F029         	call	_intToString	;wreg free
  8016  002CB2  C084  F098         	movff	?_intToString,UARTTransmitText@str
  8017  002CB6  C085  F099         	movff	?_intToString+1,UARTTransmitText@str+1
  8018  002CBA  EC27  F027         	call	_UARTTransmitText	;wreg free
  8019                           
  8020                           ;ipv4.c: 232: UARTTransmitText("][");
  8021  002CBE  0EF7               	movlw	low STR_13
  8022  002CC0  0100               	movlb	0	; () banked
  8023  002CC2  6F98               	movwf	UARTTransmitText@str& (0+255),b
  8024  002CC4  0E7F               	movlw	high STR_13
  8025  002CC6  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8026  002CC8  EC27  F027         	call	_UARTTransmitText	;wreg free
  8027                           
  8028                           ;ipv4.c: 233: UARTTransmitText(intToString(ip.version));
  8029  002CCC  0100               	movlb	0	; () banked
  8030  002CCE  51C2               	movf	ipv4_handleNewPacket@ip& (0+255),w,b
  8031  002CD0  6F84               	movwf	intToString@val& (0+255),b
  8032  002CD2  6B85               	clrf	(intToString@val+1)& (0+255),b
  8033  002CD4  6B86               	clrf	(intToString@val+2)& (0+255),b
  8034  002CD6  6B87               	clrf	(intToString@val+3)& (0+255),b
  8035  002CD8  ECD8  F029         	call	_intToString	;wreg free
  8036  002CDC  C084  F098         	movff	?_intToString,UARTTransmitText@str
  8037  002CE0  C085  F099         	movff	?_intToString+1,UARTTransmitText@str+1
  8038  002CE4  EC27  F027         	call	_UARTTransmitText	;wreg free
  8039                           
  8040                           ;ipv4.c: 234: UARTTransmitText(", ");
  8041  002CE8  0E33               	movlw	low (STR_48+17)
  8042  002CEA  0100               	movlb	0	; () banked
  8043  002CEC  6F98               	movwf	UARTTransmitText@str& (0+255),b
  8044  002CEE  0E7E               	movlw	high (STR_48+17)
  8045  002CF0  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8046  002CF2  EC27  F027         	call	_UARTTransmitText	;wreg free
  8047                           
  8048                           ;ipv4.c: 235: UARTTransmitText(intToString(ip.headerLength));
  8049  002CF6  0100               	movlb	0	; () banked
  8050  002CF8  51C3               	movf	(ipv4_handleNewPacket@ip+1)& (0+255),w,b
  8051  002CFA  6F84               	movwf	intToString@val& (0+255),b
  8052  002CFC  6B85               	clrf	(intToString@val+1)& (0+255),b
  8053  002CFE  6B86               	clrf	(intToString@val+2)& (0+255),b
  8054  002D00  6B87               	clrf	(intToString@val+3)& (0+255),b
  8055  002D02  ECD8  F029         	call	_intToString	;wreg free
  8056  002D06  C084  F098         	movff	?_intToString,UARTTransmitText@str
  8057  002D0A  C085  F099         	movff	?_intToString+1,UARTTransmitText@str+1
  8058  002D0E  EC27  F027         	call	_UARTTransmitText	;wreg free
  8059                           
  8060                           ;ipv4.c: 236: UARTTransmitText("]");
  8061  002D12  0EFB               	movlw	low (STR_19+1)
  8062  002D14  0100               	movlb	0	; () banked
  8063  002D16  6F98               	movwf	UARTTransmitText@str& (0+255),b
  8064  002D18  0E7F               	movlw	high (STR_19+1)
  8065  002D1A  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8066  002D1C  EC27  F027         	call	_UARTTransmitText	;wreg free
  8067                           
  8068                           ;ipv4.c: 237: if (!ipv4_checkHeaderChecksum(&ip))
  8069  002D20  0EC2               	movlw	low ipv4_handleNewPacket@ip
  8070  002D22  0100               	movlb	0	; () banked
  8071  002D24  6F9A               	movwf	ipv4_checkHeaderChecksum@header& (0+255),b
  8072  002D26  0E00               	movlw	high ipv4_handleNewPacket@ip
  8073  002D28  6F9B               	movwf	(ipv4_checkHeaderChecksum@header+1)& (0+255),b
  8074  002D2A  ECA9  F01F         	call	_ipv4_checkHeaderChecksum	;wreg free
  8075  002D2E  0100               	movlb	0	; () banked
  8076  002D30  B0D8               	btfsc	status,0,c
  8077  002D32  0012               	return	
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;ipv4.c: 238: UARTTransmitText("[INVALID CHECKSUM]");
  8081  002D34  0E4A               	movlw	low STR_112
  8082  002D36  6F98               	movwf	UARTTransmitText@str& (0+255),b
  8083  002D38  0E7E               	movlw	high STR_112
  8084  002D3A  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8085  002D3C  EC27  F027         	call	_UARTTransmitText	;wreg free
  8086  002D40  0012               	return	
  8087  002D42                     __end_of_ipv4_handleNewPacket:
  8088                           	opt stack 0
  8089                           tblptru	equ	0xFF8
  8090                           tblptrh	equ	0xFF7
  8091                           tblptrl	equ	0xFF6
  8092                           tablat	equ	0xFF5
  8093                           prodh	equ	0xFF4
  8094                           prodl	equ	0xFF3
  8095                           intcon	equ	0xFF2
  8096                           intcon3	equ	0xFF0
  8097                           indf0	equ	0xFEF
  8098                           postinc0	equ	0xFEE
  8099                           plusw0	equ	0xFEB
  8100                           fsr0h	equ	0xFEA
  8101                           fsr0l	equ	0xFE9
  8102                           wreg	equ	0xFE8
  8103                           indf1	equ	0xFE7
  8104                           postinc1	equ	0xFE6
  8105                           postdec1	equ	0xFE5
  8106                           plusw1	equ	0xFE3
  8107                           fsr1h	equ	0xFE2
  8108                           fsr1l	equ	0xFE1
  8109                           indf2	equ	0xFDF
  8110                           postinc2	equ	0xFDE
  8111                           postdec2	equ	0xFDD
  8112                           plusw2	equ	0xFDB
  8113                           fsr2h	equ	0xFDA
  8114                           fsr2l	equ	0xFD9
  8115                           status	equ	0xFD8
  8116                           
  8117 ;; *************** function _ipv4_parseHeader *****************
  8118 ;; Defined at:
  8119 ;;		line 148 in file "src/stack/protocols/ipv4.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;  field           2   20[BANK0 ] PTR struct memoryField
  8122 ;;		 -> ipv4_handleNewPacket@headerField(9), 
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;  i               1   45[BANK0 ] unsigned char 
  8125 ;;  i               1   44[BANK0 ] unsigned char 
  8126 ;;  ip             23   47[BANK0 ] struct ipv4_header
  8127 ;;  temp            1   46[BANK0 ] unsigned char 
  8128 ;; Return value:  Size  Location     Type
  8129 ;;                  23   20[BANK0 ] struct ipv4_header
  8130 ;; Registers used:
  8131 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8132 ;; Tracked objects:
  8133 ;;		On entry : 0/0
  8134 ;;		On exit  : 0/0
  8135 ;;		Unchanged: 0/0
  8136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8137 ;;      Params:         0      23       0       0       0       0       0       0       0
  8138 ;;      Locals:         0      26       0       0       0       0       0       0       0
  8139 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8140 ;;      Totals:         0      50       0       0       0       0       0       0       0
  8141 ;;Total ram usage:       50 bytes
  8142 ;; Hardware stack levels used:    1
  8143 ;; Hardware stack levels required when called:    8
  8144 ;; This function calls:
  8145 ;;		_ethernetController_streamFromRXBuffer
  8146 ;; This function is called by:
  8147 ;;		_ipv4_handleNewPacket
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151                           	psect	text19
  8152  00212A                     __ptext19:
  8153                           	opt stack 0
  8154  00212A                     _ipv4_parseHeader:
  8155                           	opt stack 19
  8156                           
  8157                           ;ipv4.c: 149: ipv4_header_t ip;
  8158                           ;ipv4.c: 150: uint8_t temp;
  8159                           ;ipv4.c: 152: ethernetController_streamFromRXBuffer(0, field->start);
  8160                           
  8161                           ;incstack = 0
  8162  00212A  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8163  00212E  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8164  002132  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8165  002136  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8166  00213A  0E00               	movlw	0
  8167  00213C  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8168                           
  8169                           ;ipv4.c: 154: temp = ethernetController_streamFromRXBuffer(1, field->start);
  8170  002140  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8171  002144  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8172  002148  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8173  00214C  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8174  002150  0E01               	movlw	1
  8175  002152  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8176  002156  0100               	movlb	0	; () banked
  8177  002158  6F8E               	movwf	ipv4_parseHeader@temp& (0+255),b
  8178                           
  8179                           ; BSR set to: 0
  8180                           ;ipv4.c: 155: ip.version = (temp & 0xf0) >> 4;
  8181  00215A  398E               	swapf	ipv4_parseHeader@temp& (0+255),w,b
  8182  00215C  0B0F               	andlw	15
  8183  00215E  0B0F               	andlw	15
  8184  002160  6F8F               	movwf	ipv4_parseHeader@ip& (0+255),b
  8185                           
  8186                           ; BSR set to: 0
  8187                           ;ipv4.c: 156: ip.headerLength = temp & 0x0f;
  8188  002162  518E               	movf	ipv4_parseHeader@temp& (0+255),w,b
  8189  002164  0B0F               	andlw	15
  8190  002166  6F90               	movwf	(ipv4_parseHeader@ip+1)& (0+255),b
  8191                           
  8192                           ;ipv4.c: 158: temp = ethernetController_streamFromRXBuffer(1, field->start);
  8193  002168  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8194  00216C  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8195  002170  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8196  002174  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8197  002178  0E01               	movlw	1
  8198  00217A  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8199  00217E  0100               	movlb	0	; () banked
  8200  002180  6F8E               	movwf	ipv4_parseHeader@temp& (0+255),b
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;ipv4.c: 159: ip.dscp = (temp & 0x1f);
  8204  002182  518E               	movf	ipv4_parseHeader@temp& (0+255),w,b
  8205  002184  0B1F               	andlw	31
  8206  002186  6F91               	movwf	(ipv4_parseHeader@ip+2)& (0+255),b
  8207                           
  8208                           ; BSR set to: 0
  8209                           ;ipv4.c: 160: ip.ecn = (temp & 0xC0) >> 6;
  8210  002188  458E               	rlncf	ipv4_parseHeader@temp& (0+255),w,b
  8211  00218A  46E8               	rlncf	wreg,f,c
  8212  00218C  0B03               	andlw	3
  8213  00218E  0B03               	andlw	3
  8214  002190  6F92               	movwf	(ipv4_parseHeader@ip+3)& (0+255),b
  8215                           
  8216                           ;ipv4.c: 162: ip.totalLength = (ethernetController_streamFromRXBuffer(1, field->start) <
      +                          < 8);
  8217  002192  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8218  002196  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8219  00219A  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8220  00219E  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8221  0021A2  0E01               	movlw	1
  8222  0021A4  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8223  0021A8  0100               	movlb	0	; () banked
  8224  0021AA  6F94               	movwf	(ipv4_parseHeader@ip+5)& (0+255),b
  8225  0021AC  6B93               	clrf	(ipv4_parseHeader@ip+4)& (0+255),b
  8226                           
  8227                           ;ipv4.c: 163: ip.totalLength |= ethernetController_streamFromRXBuffer(1, field->start);
  8228  0021AE  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8229  0021B2  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8230  0021B6  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8231  0021BA  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8232  0021BE  0E01               	movlw	1
  8233  0021C0  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8234  0021C4  0100               	movlb	0	; () banked
  8235  0021C6  6F8B               	movwf	??_ipv4_parseHeader& (0+255),b
  8236  0021C8  518B               	movf	??_ipv4_parseHeader& (0+255),w,b
  8237  0021CA  1393               	iorwf	(ipv4_parseHeader@ip+4)& (0+255),f,b
  8238                           
  8239                           ;ipv4.c: 165: ip.identification = (ethernetController_streamFromRXBuffer(1, field->start
      +                          ) << 8);
  8240  0021CC  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8241  0021D0  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8242  0021D4  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8243  0021D8  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8244  0021DC  0E01               	movlw	1
  8245  0021DE  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8246  0021E2  0100               	movlb	0	; () banked
  8247  0021E4  6F96               	movwf	(ipv4_parseHeader@ip+7)& (0+255),b
  8248  0021E6  6B95               	clrf	(ipv4_parseHeader@ip+6)& (0+255),b
  8249                           
  8250                           ;ipv4.c: 166: ip.identification |= ethernetController_streamFromRXBuffer(1, field->start
      +                          );
  8251  0021E8  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8252  0021EC  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8253  0021F0  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8254  0021F4  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8255  0021F8  0E01               	movlw	1
  8256  0021FA  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8257  0021FE  0100               	movlb	0	; () banked
  8258  002200  6F8B               	movwf	??_ipv4_parseHeader& (0+255),b
  8259  002202  518B               	movf	??_ipv4_parseHeader& (0+255),w,b
  8260  002204  1395               	iorwf	(ipv4_parseHeader@ip+6)& (0+255),f,b
  8261                           
  8262                           ;ipv4.c: 168: temp = ethernetController_streamFromRXBuffer(1, field->start);
  8263  002206  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8264  00220A  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8265  00220E  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8266  002212  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8267  002216  0E01               	movlw	1
  8268  002218  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8269  00221C  0100               	movlb	0	; () banked
  8270  00221E  6F8E               	movwf	ipv4_parseHeader@temp& (0+255),b
  8271                           
  8272                           ; BSR set to: 0
  8273                           ;ipv4.c: 169: ip.flags = ((temp & 0xC0) >> 6);
  8274  002220  458E               	rlncf	ipv4_parseHeader@temp& (0+255),w,b
  8275  002222  46E8               	rlncf	wreg,f,c
  8276  002224  0B03               	andlw	3
  8277  002226  0B03               	andlw	3
  8278  002228  6F97               	movwf	(ipv4_parseHeader@ip+8)& (0+255),b
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;ipv4.c: 170: ip.fragmentOffset = ((temp & 0x1f) << 8);
  8282  00222A  518E               	movf	ipv4_parseHeader@temp& (0+255),w,b
  8283  00222C  0B1F               	andlw	31
  8284  00222E  6F99               	movwf	(ipv4_parseHeader@ip+10)& (0+255),b
  8285  002230  6B98               	clrf	(ipv4_parseHeader@ip+9)& (0+255),b
  8286                           
  8287                           ;ipv4.c: 172: ip.fragmentOffset |= ethernetController_streamFromRXBuffer(1, field->start
      +                          );
  8288  002232  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8289  002236  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8290  00223A  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8291  00223E  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8292  002242  0E01               	movlw	1
  8293  002244  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8294  002248  0100               	movlb	0	; () banked
  8295  00224A  6F8B               	movwf	??_ipv4_parseHeader& (0+255),b
  8296  00224C  518B               	movf	??_ipv4_parseHeader& (0+255),w,b
  8297  00224E  1398               	iorwf	(ipv4_parseHeader@ip+9)& (0+255),f,b
  8298                           
  8299                           ;ipv4.c: 174: ip.timeToLive = ethernetController_streamFromRXBuffer(1, field->start);
  8300  002250  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8301  002254  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8302  002258  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8303  00225C  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8304  002260  0E01               	movlw	1
  8305  002262  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8306  002266  0100               	movlb	0	; () banked
  8307  002268  6F9A               	movwf	(ipv4_parseHeader@ip+11)& (0+255),b
  8308                           
  8309                           ;ipv4.c: 176: ip.protocol = ethernetController_streamFromRXBuffer(1, field->start);
  8310  00226A  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8311  00226E  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8312  002272  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8313  002276  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8314  00227A  0E01               	movlw	1
  8315  00227C  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8316  002280  0100               	movlb	0	; () banked
  8317  002282  6F9B               	movwf	(ipv4_parseHeader@ip+12)& (0+255),b
  8318                           
  8319                           ;ipv4.c: 178: ip.checksum = (ethernetController_streamFromRXBuffer(1, field->start) << 8
      +                          );
  8320  002284  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8321  002288  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8322  00228C  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8323  002290  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8324  002294  0E01               	movlw	1
  8325  002296  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8326  00229A  0100               	movlb	0	; () banked
  8327  00229C  6F9D               	movwf	(ipv4_parseHeader@ip+14)& (0+255),b
  8328  00229E  6B9C               	clrf	(ipv4_parseHeader@ip+13)& (0+255),b
  8329                           
  8330                           ;ipv4.c: 179: ip.checksum |= ethernetController_streamFromRXBuffer(1, field->start);
  8331  0022A0  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8332  0022A4  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8333  0022A8  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8334  0022AC  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8335  0022B0  0E01               	movlw	1
  8336  0022B2  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8337  0022B6  0100               	movlb	0	; () banked
  8338  0022B8  6F8B               	movwf	??_ipv4_parseHeader& (0+255),b
  8339  0022BA  518B               	movf	??_ipv4_parseHeader& (0+255),w,b
  8340  0022BC  139C               	iorwf	(ipv4_parseHeader@ip+13)& (0+255),f,b
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;ipv4.c: 181: for (uint8_t i = 0; i < 4; i++)
  8344  0022BE  0E00               	movlw	0
  8345  0022C0  6F8C               	movwf	ipv4_parseHeader@i& (0+255),b
  8346  0022C2                     l9653:
  8347                           
  8348                           ; BSR set to: 0
  8349  0022C2  0E03               	movlw	3
  8350  0022C4  658C               	cpfsgt	ipv4_parseHeader@i& (0+255),b
  8351  0022C6  D001               	goto	l1159
  8352  0022C8  D01D               	goto	u11300
  8353  0022CA                     l1159:
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;ipv4.c: 182: ip.source.address[i] = ethernetController_streamFromRXBuffer(1, field->sta
      +                          rt);
  8357                           
  8358                           ; BSR set to: 0
  8359  0022CA  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8360  0022CE  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8361  0022D2  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8362  0022D6  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8363  0022DA  0E01               	movlw	1
  8364  0022DC  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8365  0022E0  0100               	movlb	0	; () banked
  8366  0022E2  6F8B               	movwf	??_ipv4_parseHeader& (0+255),b
  8367  0022E4  518C               	movf	ipv4_parseHeader@i& (0+255),w,b
  8368  0022E6  0D01               	mullw	1
  8369  0022E8  0E0F               	movlw	15
  8370  0022EA  26F3               	addwf	prodl,f,c
  8371  0022EC  0E00               	movlw	0
  8372  0022EE  22F4               	addwfc	prodh,f,c
  8373  0022F0  0E8F               	movlw	low ipv4_parseHeader@ip
  8374  0022F2  24F3               	addwf	prodl,w,c
  8375  0022F4  6ED9               	movwf	fsr2l,c
  8376  0022F6  0E00               	movlw	high ipv4_parseHeader@ip
  8377  0022F8  20F4               	addwfc	prodh,w,c
  8378  0022FA  6EDA               	movwf	fsr2h,c
  8379  0022FC  C08B  FFDF         	movff	??_ipv4_parseHeader,indf2
  8380                           
  8381                           ; BSR set to: 0
  8382  002300  2B8C               	incf	ipv4_parseHeader@i& (0+255),f,b
  8383  002302  D7DF               	goto	l9653
  8384  002304                     u11300:
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;ipv4.c: 184: for (uint8_t i = 0; i < 4; i++)
  8388                           
  8389                           ; BSR set to: 0
  8390  002304  0E00               	movlw	0
  8391  002306  6F8D               	movwf	ipv4_parseHeader@i_3672& (0+255),b
  8392  002308                     l9665:
  8393                           
  8394                           ; BSR set to: 0
  8395  002308  0E03               	movlw	3
  8396  00230A  658D               	cpfsgt	ipv4_parseHeader@i_3672& (0+255),b
  8397  00230C  D001               	goto	l1161
  8398  00230E  D01D               	goto	u11320
  8399  002310                     l1161:
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;ipv4.c: 185: ip.destination.address[i] = ethernetController_streamFromRXBuffer(1, field
      +                          ->start);
  8403                           
  8404                           ; BSR set to: 0
  8405  002310  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8406  002314  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8407  002318  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8408  00231C  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8409  002320  0E01               	movlw	1
  8410  002322  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8411  002326  0100               	movlb	0	; () banked
  8412  002328  6F8B               	movwf	??_ipv4_parseHeader& (0+255),b
  8413  00232A  518D               	movf	ipv4_parseHeader@i_3672& (0+255),w,b
  8414  00232C  0D01               	mullw	1
  8415  00232E  0E13               	movlw	19
  8416  002330  26F3               	addwf	prodl,f,c
  8417  002332  0E00               	movlw	0
  8418  002334  22F4               	addwfc	prodh,f,c
  8419  002336  0E8F               	movlw	low ipv4_parseHeader@ip
  8420  002338  24F3               	addwf	prodl,w,c
  8421  00233A  6ED9               	movwf	fsr2l,c
  8422  00233C  0E00               	movlw	high ipv4_parseHeader@ip
  8423  00233E  20F4               	addwfc	prodh,w,c
  8424  002340  6EDA               	movwf	fsr2h,c
  8425  002342  C08B  FFDF         	movff	??_ipv4_parseHeader,indf2
  8426                           
  8427                           ; BSR set to: 0
  8428  002346  2B8D               	incf	ipv4_parseHeader@i_3672& (0+255),f,b
  8429  002348  D7DF               	goto	l9665
  8430  00234A                     u11320:
  8431                           
  8432                           ; BSR set to: 0
  8433                           ;ipv4.c: 187: ethernetController_streamFromRXBuffer(2, field->start);
  8434                           
  8435                           ; BSR set to: 0
  8436  00234A  C074  FFD9         	movff	ipv4_parseHeader@field,fsr2l
  8437  00234E  C075  FFDA         	movff	ipv4_parseHeader@field+1,fsr2h
  8438  002352  CFDE F06F          	movff	postinc2,ethernetController_streamFromRXBuffer@startAddress
  8439  002356  CFDD F070          	movff	postdec2,ethernetController_streamFromRXBuffer@startAddress+1
  8440  00235A  0E02               	movlw	2
  8441  00235C  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
  8442                           
  8443                           ;ipv4.c: 189: return ip;
  8444  002360  EE20  F08F         	lfsr	2,ipv4_parseHeader@ip
  8445  002364  EE00  F074         	lfsr	0,?_ipv4_parseHeader
  8446  002368  0E16               	movlw	22
  8447  00236A                     u11331:
  8448  00236A  CFDB FFEB          	movff	plusw2,plusw0
  8449  00236E  06E8               	decf	wreg,f,c
  8450  002370  E2FC               	bc	u11331
  8451  002372  0012               	return	
  8452  002374                     __end_of_ipv4_parseHeader:
  8453                           	opt stack 0
  8454                           tblptru	equ	0xFF8
  8455                           tblptrh	equ	0xFF7
  8456                           tblptrl	equ	0xFF6
  8457                           tablat	equ	0xFF5
  8458                           prodh	equ	0xFF4
  8459                           prodl	equ	0xFF3
  8460                           intcon	equ	0xFF2
  8461                           intcon3	equ	0xFF0
  8462                           indf0	equ	0xFEF
  8463                           postinc0	equ	0xFEE
  8464                           plusw0	equ	0xFEB
  8465                           fsr0h	equ	0xFEA
  8466                           fsr0l	equ	0xFE9
  8467                           wreg	equ	0xFE8
  8468                           indf1	equ	0xFE7
  8469                           postinc1	equ	0xFE6
  8470                           postdec1	equ	0xFE5
  8471                           plusw1	equ	0xFE3
  8472                           fsr1h	equ	0xFE2
  8473                           fsr1l	equ	0xFE1
  8474                           indf2	equ	0xFDF
  8475                           postinc2	equ	0xFDE
  8476                           postdec2	equ	0xFDD
  8477                           plusw2	equ	0xFDB
  8478                           fsr2h	equ	0xFDA
  8479                           fsr2l	equ	0xFD9
  8480                           status	equ	0xFD8
  8481                           
  8482 ;; *************** function _ipv4_checkHeaderChecksum *****************
  8483 ;; Defined at:
  8484 ;;		line 192 in file "src/stack/protocols/ipv4.c"
  8485 ;; Parameters:    Size  Location     Type
  8486 ;;  header          2   58[BANK0 ] PTR struct ipv4_header
  8487 ;;		 -> ipv4_handleNewPacket@ip(23), 
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;  testHeader     23   62[BANK0 ] struct ipv4_header
  8490 ;; Return value:  Size  Location     Type
  8491 ;;		None               void
  8492 ;; Registers used:
  8493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8499 ;;      Params:         0       2       0       0       0       0       0       0       0
  8500 ;;      Locals:         0      23       0       0       0       0       0       0       0
  8501 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8502 ;;      Totals:         0      27       0       0       0       0       0       0       0
  8503 ;;Total ram usage:       27 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; Hardware stack levels required when called:    6
  8506 ;; This function calls:
  8507 ;;		_UARTTransmitText
  8508 ;;		_hexToString
  8509 ;;		_ipv4_calculateHeaderChecksum
  8510 ;; This function is called by:
  8511 ;;		_ipv4_handleNewPacket
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514                           
  8515                           	psect	text20
  8516  003F52                     __ptext20:
  8517                           	opt stack 0
  8518  003F52                     _ipv4_checkHeaderChecksum:
  8519                           	opt stack 21
  8520                           
  8521                           ;ipv4.c: 193: ipv4_header_t testHeader;
  8522                           ;ipv4.c: 194: testHeader = *header;
  8523                           
  8524                           ;incstack = 0
  8525  003F52  C09A  FFD9         	movff	ipv4_checkHeaderChecksum@header,fsr2l
  8526  003F56  C09B  FFDA         	movff	ipv4_checkHeaderChecksum@header+1,fsr2h
  8527  003F5A  EE10  F09E         	lfsr	1,ipv4_checkHeaderChecksum@testHeader
  8528  003F5E  0E16               	movlw	22
  8529  003F60                     u11341:
  8530  003F60  CFDB FFE3          	movff	plusw2,plusw1
  8531  003F64  06E8               	decf	wreg,f,c
  8532  003F66  E2FC               	bc	u11341
  8533                           
  8534                           ;ipv4.c: 195: testHeader.checksum = 0x0000;
  8535  003F68  0E00               	movlw	0
  8536  003F6A  0100               	movlb	0	; () banked
  8537  003F6C  6FAC               	movwf	(ipv4_checkHeaderChecksum@testHeader+14)& (0+255),b
  8538  003F6E  0E00               	movlw	0
  8539  003F70  6FAB               	movwf	(ipv4_checkHeaderChecksum@testHeader+13)& (0+255),b
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;ipv4.c: 196: ipv4_calculateHeaderChecksum(&testHeader);
  8543  003F72  0E9E               	movlw	low ipv4_checkHeaderChecksum@testHeader
  8544  003F74  6F60               	movwf	ipv4_calculateHeaderChecksum@header& (0+255),b
  8545  003F76  0E00               	movlw	high ipv4_checkHeaderChecksum@testHeader
  8546  003F78  6F61               	movwf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),b
  8547  003F7A  EC22  F00B         	call	_ipv4_calculateHeaderChecksum	;wreg free
  8548                           
  8549                           ;ipv4.c: 197: if (testHeader.checksum == header->checksum) {
  8550  003F7E  0100               	movlb	0	; () banked
  8551  003F80  EE20 F00D          	lfsr	2,13
  8552  003F84  519A               	movf	ipv4_checkHeaderChecksum@header& (0+255),w,b
  8553  003F86  26D9               	addwf	fsr2l,f,c
  8554  003F88  519B               	movf	(ipv4_checkHeaderChecksum@header+1)& (0+255),w,b
  8555  003F8A  22DA               	addwfc	fsr2h,f,c
  8556  003F8C  50DE               	movf	postinc2,w,c
  8557  003F8E  19AB               	xorwf	(ipv4_checkHeaderChecksum@testHeader+13)& (0+255),w,b
  8558  003F90  E106               	bnz	l9693
  8559  003F92  50DE               	movf	postinc2,w,c
  8560  003F94  19AC               	xorwf	(ipv4_checkHeaderChecksum@testHeader+14)& (0+255),w,b
  8561  003F96  A4D8               	btfss	status,2,c
  8562  003F98  D002               	goto	l1166
  8563                           
  8564                           ; BSR set to: 0
  8565                           ;ipv4.c: 198: return 1;
  8566  003F9A  80D8               	bsf	status,0,c
  8567                           
  8568                           ; BSR set to: 0
  8569  003F9C  0012               	return	
  8570  003F9E                     l1166:
  8571  003F9E                     l9693:
  8572                           
  8573                           ; BSR set to: 0
  8574                           ;ipv4.c: 199: }
  8575                           ;ipv4.c: 201: UARTTransmitText("[Expected ");
  8576  003F9E  0E62               	movlw	low STR_102
  8577  003FA0  6F98               	movwf	UARTTransmitText@str& (0+255),b
  8578  003FA2  0E7F               	movlw	high STR_102
  8579  003FA4  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8580  003FA6  EC27  F027         	call	_UARTTransmitText	;wreg free
  8581                           
  8582                           ;ipv4.c: 202: UARTTransmitText(hexToString(testHeader.checksum));
  8583  003FAA  C0AB  F061         	movff	ipv4_checkHeaderChecksum@testHeader+13,hexToString@val
  8584  003FAE  C0AC  F062         	movff	ipv4_checkHeaderChecksum@testHeader+14,hexToString@val+1
  8585  003FB2  0100               	movlb	0	; () banked
  8586  003FB4  6B63               	clrf	(hexToString@val+2)& (0+255),b
  8587  003FB6  6B64               	clrf	(hexToString@val+3)& (0+255),b
  8588  003FB8  ECBE  F01E         	call	_hexToString	;wreg free
  8589  003FBC  C061  F098         	movff	?_hexToString,UARTTransmitText@str
  8590  003FC0  C062  F099         	movff	?_hexToString+1,UARTTransmitText@str+1
  8591  003FC4  EC27  F027         	call	_UARTTransmitText	;wreg free
  8592                           
  8593                           ;ipv4.c: 203: UARTTransmitText(", got ");
  8594  003FC8  0EAC               	movlw	low STR_103
  8595  003FCA  0100               	movlb	0	; () banked
  8596  003FCC  6F98               	movwf	UARTTransmitText@str& (0+255),b
  8597  003FCE  0E7F               	movlw	high STR_103
  8598  003FD0  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8599  003FD2  EC27  F027         	call	_UARTTransmitText	;wreg free
  8600                           
  8601                           ;ipv4.c: 204: UARTTransmitText(hexToString(header->checksum));
  8602  003FD6  0100               	movlb	0	; () banked
  8603  003FD8  EE20 F00D          	lfsr	2,13
  8604  003FDC  519A               	movf	ipv4_checkHeaderChecksum@header& (0+255),w,b
  8605  003FDE  26D9               	addwf	fsr2l,f,c
  8606  003FE0  519B               	movf	(ipv4_checkHeaderChecksum@header+1)& (0+255),w,b
  8607  003FE2  22DA               	addwfc	fsr2h,f,c
  8608  003FE4  CFDE F09C          	movff	postinc2,??_ipv4_checkHeaderChecksum
  8609  003FE8  CFDD F09D          	movff	postdec2,??_ipv4_checkHeaderChecksum+1
  8610  003FEC  C09C  F061         	movff	??_ipv4_checkHeaderChecksum,hexToString@val
  8611  003FF0  C09D  F062         	movff	??_ipv4_checkHeaderChecksum+1,hexToString@val+1
  8612  003FF4  6B63               	clrf	(hexToString@val+2)& (0+255),b
  8613  003FF6  6B64               	clrf	(hexToString@val+3)& (0+255),b
  8614  003FF8  ECBE  F01E         	call	_hexToString	;wreg free
  8615  003FFC  C061  F098         	movff	?_hexToString,UARTTransmitText@str
  8616  004000  C062  F099         	movff	?_hexToString+1,UARTTransmitText@str+1
  8617  004004  EC27  F027         	call	_UARTTransmitText	;wreg free
  8618                           
  8619                           ;ipv4.c: 205: UARTTransmitText("]");
  8620  004008  0EFB               	movlw	low (STR_19+1)
  8621  00400A  0100               	movlb	0	; () banked
  8622  00400C  6F98               	movwf	UARTTransmitText@str& (0+255),b
  8623  00400E  0E7F               	movlw	high (STR_19+1)
  8624  004010  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
  8625  004012  EC27  F027         	call	_UARTTransmitText	;wreg free
  8626                           
  8627                           ;ipv4.c: 207: return 0;
  8628  004016  90D8               	bcf	status,0,c
  8629  004018  0012               	return	
  8630  00401A                     __end_of_ipv4_checkHeaderChecksum:
  8631                           	opt stack 0
  8632                           tblptru	equ	0xFF8
  8633                           tblptrh	equ	0xFF7
  8634                           tblptrl	equ	0xFF6
  8635                           tablat	equ	0xFF5
  8636                           prodh	equ	0xFF4
  8637                           prodl	equ	0xFF3
  8638                           intcon	equ	0xFF2
  8639                           intcon3	equ	0xFF0
  8640                           indf0	equ	0xFEF
  8641                           postinc0	equ	0xFEE
  8642                           plusw0	equ	0xFEB
  8643                           fsr0h	equ	0xFEA
  8644                           fsr0l	equ	0xFE9
  8645                           wreg	equ	0xFE8
  8646                           indf1	equ	0xFE7
  8647                           postinc1	equ	0xFE6
  8648                           postdec1	equ	0xFE5
  8649                           plusw1	equ	0xFE3
  8650                           fsr1h	equ	0xFE2
  8651                           fsr1l	equ	0xFE1
  8652                           indf2	equ	0xFDF
  8653                           postinc2	equ	0xFDE
  8654                           postdec2	equ	0xFDD
  8655                           plusw2	equ	0xFDB
  8656                           fsr2h	equ	0xFDA
  8657                           fsr2l	equ	0xFD9
  8658                           status	equ	0xFD8
  8659                           
  8660 ;; *************** function _ipv4_calculateHeaderChecksum *****************
  8661 ;; Defined at:
  8662 ;;		line 128 in file "src/stack/protocols/ipv4.c"
  8663 ;; Parameters:    Size  Location     Type
  8664 ;;  header          2    0[BANK0 ] PTR struct ipv4_header
  8665 ;;		 -> ipv4_checkHeaderChecksum@testHeader(23), stack.pendingPacketToSend(66), stack(123), 
  8666 ;; Auto vars:     Size  Location     Type
  8667 ;;  sum             4   14[BANK0 ] unsigned long 
  8668 ;; Return value:  Size  Location     Type
  8669 ;;                  1    wreg      void 
  8670 ;; Registers used:
  8671 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8672 ;; Tracked objects:
  8673 ;;		On entry : 0/0
  8674 ;;		On exit  : 0/0
  8675 ;;		Unchanged: 0/0
  8676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8677 ;;      Params:         0       2       0       0       0       0       0       0       0
  8678 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8679 ;;      Temps:          0      12       0       0       0       0       0       0       0
  8680 ;;      Totals:         0      18       0       0       0       0       0       0       0
  8681 ;;Total ram usage:       18 bytes
  8682 ;; Hardware stack levels used:    1
  8683 ;; Hardware stack levels required when called:    4
  8684 ;; This function calls:
  8685 ;;		Nothing
  8686 ;; This function is called by:
  8687 ;;		_main
  8688 ;;		_ipv4_checkHeaderChecksum
  8689 ;; This function uses a non-reentrant model
  8690 ;;
  8691                           
  8692                           	psect	text21
  8693  001644                     __ptext21:
  8694                           	opt stack 0
  8695  001644                     _ipv4_calculateHeaderChecksum:
  8696                           	opt stack 26
  8697                           
  8698                           ;ipv4.c: 130: uint32_t sum = 0;
  8699                           
  8700                           ;incstack = 0
  8701  001644  0E00               	movlw	0
  8702  001646  0100               	movlb	0	; () banked
  8703  001648  6F6E               	movwf	ipv4_calculateHeaderChecksum@sum& (0+255),b
  8704  00164A  0E00               	movlw	0
  8705  00164C  6F6F               	movwf	(ipv4_calculateHeaderChecksum@sum+1)& (0+255),b
  8706  00164E  0E00               	movlw	0
  8707  001650  6F70               	movwf	(ipv4_calculateHeaderChecksum@sum+2)& (0+255),b
  8708  001652  0E00               	movlw	0
  8709  001654  6F71               	movwf	(ipv4_calculateHeaderChecksum@sum+3)& (0+255),b
  8710                           
  8711                           ; BSR set to: 0
  8712                           ;ipv4.c: 131: sum = ((header->version << 12) | (header->headerLength << 8) | (header->ds
      +                          cp << 2) | (header->ecn))&0xffff;
  8713  001656  EE20 F002          	lfsr	2,2
  8714  00165A  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8715  00165C  26D9               	addwf	fsr2l,f,c
  8716  00165E  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8717  001660  22DA               	addwfc	fsr2h,f,c
  8718  001662  50DF               	movf	indf2,w,c
  8719  001664  6F62               	movwf	??_ipv4_calculateHeaderChecksum& (0+255),b
  8720  001666  6B63               	clrf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),b
  8721  001668  90D8               	bcf	status,0,c
  8722  00166A  3762               	rlcf	??_ipv4_calculateHeaderChecksum& (0+255),f,b
  8723  00166C  3763               	rlcf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),f,b
  8724  00166E  90D8               	bcf	status,0,c
  8725  001670  3762               	rlcf	??_ipv4_calculateHeaderChecksum& (0+255),f,b
  8726  001672  3763               	rlcf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),f,b
  8727  001674  EE20 F001          	lfsr	2,1
  8728  001678  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8729  00167A  26D9               	addwf	fsr2l,f,c
  8730  00167C  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8731  00167E  22DA               	addwfc	fsr2h,f,c
  8732  001680  50DF               	movf	indf2,w,c
  8733  001682  6F64               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),b
  8734  001684  5164               	movf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),w,b
  8735  001686  6F66               	movwf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),b
  8736  001688  6B65               	clrf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),b
  8737  00168A  C060  FFD9         	movff	ipv4_calculateHeaderChecksum@header,fsr2l
  8738  00168E  C061  FFDA         	movff	ipv4_calculateHeaderChecksum@header+1,fsr2h
  8739  001692  50DF               	movf	indf2,w,c
  8740  001694  6F67               	movwf	(??_ipv4_calculateHeaderChecksum+5)& (0+255),b
  8741  001696  6B68               	clrf	(??_ipv4_calculateHeaderChecksum+6)& (0+255),b
  8742  001698  0E0C               	movlw	12
  8743  00169A                     u10135:
  8744  00169A  90D8               	bcf	status,0,c
  8745  00169C  3767               	rlcf	(??_ipv4_calculateHeaderChecksum+5)& (0+255),f,b
  8746  00169E  3768               	rlcf	(??_ipv4_calculateHeaderChecksum+6)& (0+255),f,b
  8747  0016A0  2EE8               	decfsz	wreg,f,c
  8748  0016A2  D7FB               	goto	u10135
  8749  0016A4  5165               	movf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),w,b
  8750  0016A6  1367               	iorwf	(??_ipv4_calculateHeaderChecksum+5)& (0+255),f,b
  8751  0016A8  5166               	movf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),w,b
  8752  0016AA  1368               	iorwf	(??_ipv4_calculateHeaderChecksum+6)& (0+255),f,b
  8753  0016AC  5162               	movf	??_ipv4_calculateHeaderChecksum& (0+255),w,b
  8754  0016AE  1367               	iorwf	(??_ipv4_calculateHeaderChecksum+5)& (0+255),f,b
  8755  0016B0  5163               	movf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),w,b
  8756  0016B2  1368               	iorwf	(??_ipv4_calculateHeaderChecksum+6)& (0+255),f,b
  8757  0016B4  EE20 F003          	lfsr	2,3
  8758  0016B8  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8759  0016BA  26D9               	addwf	fsr2l,f,c
  8760  0016BC  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8761  0016BE  22DA               	addwfc	fsr2h,f,c
  8762  0016C0  50DF               	movf	indf2,w,c
  8763  0016C2  6F69               	movwf	(??_ipv4_calculateHeaderChecksum+7)& (0+255),b
  8764  0016C4  5169               	movf	(??_ipv4_calculateHeaderChecksum+7)& (0+255),w,b
  8765  0016C6  1367               	iorwf	(??_ipv4_calculateHeaderChecksum+5)& (0+255),f,b
  8766  0016C8  0E00               	movlw	0
  8767  0016CA  1368               	iorwf	(??_ipv4_calculateHeaderChecksum+6)& (0+255),f,b
  8768  0016CC  C067  F06E         	movff	??_ipv4_calculateHeaderChecksum+5,ipv4_calculateHeaderChecksum@sum
  8769  0016D0  C068  F06F         	movff	??_ipv4_calculateHeaderChecksum+6,ipv4_calculateHeaderChecksum@sum+1
  8770  0016D4  6B70               	clrf	(ipv4_calculateHeaderChecksum@sum+2)& (0+255),b
  8771  0016D6  6B71               	clrf	(ipv4_calculateHeaderChecksum@sum+3)& (0+255),b
  8772                           
  8773                           ; BSR set to: 0
  8774                           ;ipv4.c: 132: sum += header->totalLength;
  8775  0016D8  EE20 F004          	lfsr	2,4
  8776  0016DC  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8777  0016DE  26D9               	addwf	fsr2l,f,c
  8778  0016E0  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8779  0016E2  22DA               	addwfc	fsr2h,f,c
  8780  0016E4  CFDE F062          	movff	postinc2,??_ipv4_calculateHeaderChecksum
  8781  0016E8  CFDD F063          	movff	postdec2,??_ipv4_calculateHeaderChecksum+1
  8782  0016EC  5162               	movf	??_ipv4_calculateHeaderChecksum& (0+255),w,b
  8783  0016EE  276E               	addwf	ipv4_calculateHeaderChecksum@sum& (0+255),f,b
  8784  0016F0  5163               	movf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),w,b
  8785  0016F2  236F               	addwfc	(ipv4_calculateHeaderChecksum@sum+1)& (0+255),f,b
  8786  0016F4  0E00               	movlw	0
  8787  0016F6  2370               	addwfc	(ipv4_calculateHeaderChecksum@sum+2)& (0+255),f,b
  8788  0016F8  0E00               	movlw	0
  8789  0016FA  2371               	addwfc	(ipv4_calculateHeaderChecksum@sum+3)& (0+255),f,b
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;ipv4.c: 133: sum += header->identification;
  8793  0016FC  EE20 F006          	lfsr	2,6
  8794  001700  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8795  001702  26D9               	addwf	fsr2l,f,c
  8796  001704  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8797  001706  22DA               	addwfc	fsr2h,f,c
  8798  001708  CFDE F062          	movff	postinc2,??_ipv4_calculateHeaderChecksum
  8799  00170C  CFDD F063          	movff	postdec2,??_ipv4_calculateHeaderChecksum+1
  8800  001710  5162               	movf	??_ipv4_calculateHeaderChecksum& (0+255),w,b
  8801  001712  276E               	addwf	ipv4_calculateHeaderChecksum@sum& (0+255),f,b
  8802  001714  5163               	movf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),w,b
  8803  001716  236F               	addwfc	(ipv4_calculateHeaderChecksum@sum+1)& (0+255),f,b
  8804  001718  0E00               	movlw	0
  8805  00171A  2370               	addwfc	(ipv4_calculateHeaderChecksum@sum+2)& (0+255),f,b
  8806  00171C  0E00               	movlw	0
  8807  00171E  2371               	addwfc	(ipv4_calculateHeaderChecksum@sum+3)& (0+255),f,b
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;ipv4.c: 134: sum += ((header->flags << 13) | (header->fragmentOffset))&0xffff;
  8811  001720  EE20 F009          	lfsr	2,9
  8812  001724  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8813  001726  26D9               	addwf	fsr2l,f,c
  8814  001728  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8815  00172A  22DA               	addwfc	fsr2h,f,c
  8816  00172C  CFDE F062          	movff	postinc2,??_ipv4_calculateHeaderChecksum
  8817  001730  CFDD F063          	movff	postdec2,??_ipv4_calculateHeaderChecksum+1
  8818  001734  EE20 F008          	lfsr	2,8
  8819  001738  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8820  00173A  26D9               	addwf	fsr2l,f,c
  8821  00173C  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8822  00173E  22DA               	addwfc	fsr2h,f,c
  8823  001740  50DF               	movf	indf2,w,c
  8824  001742  6F64               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),b
  8825  001744  6B65               	clrf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),b
  8826  001746  0E0D               	movlw	13
  8827  001748                     u10145:
  8828  001748  90D8               	bcf	status,0,c
  8829  00174A  3764               	rlcf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),f,b
  8830  00174C  3765               	rlcf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),f,b
  8831  00174E  2EE8               	decfsz	wreg,f,c
  8832  001750  D7FB               	goto	u10145
  8833  001752  5162               	movf	??_ipv4_calculateHeaderChecksum& (0+255),w,b
  8834  001754  1364               	iorwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),f,b
  8835  001756  5163               	movf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),w,b
  8836  001758  1365               	iorwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),f,b
  8837  00175A  5164               	movf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),w,b
  8838  00175C  276E               	addwf	ipv4_calculateHeaderChecksum@sum& (0+255),f,b
  8839  00175E  5165               	movf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),w,b
  8840  001760  236F               	addwfc	(ipv4_calculateHeaderChecksum@sum+1)& (0+255),f,b
  8841  001762  0E00               	movlw	0
  8842  001764  2370               	addwfc	(ipv4_calculateHeaderChecksum@sum+2)& (0+255),f,b
  8843  001766  0E00               	movlw	0
  8844  001768  2371               	addwfc	(ipv4_calculateHeaderChecksum@sum+3)& (0+255),f,b
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;ipv4.c: 135: sum += ((header->timeToLive << 8) | (header->protocol))&0xffff;
  8848  00176A  EE20 F00B          	lfsr	2,11
  8849  00176E  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8850  001770  26D9               	addwf	fsr2l,f,c
  8851  001772  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8852  001774  22DA               	addwfc	fsr2h,f,c
  8853  001776  50DF               	movf	indf2,w,c
  8854  001778  6F62               	movwf	??_ipv4_calculateHeaderChecksum& (0+255),b
  8855  00177A  5162               	movf	??_ipv4_calculateHeaderChecksum& (0+255),w,b
  8856  00177C  6F64               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),b
  8857  00177E  6B63               	clrf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),b
  8858  001780  EE20 F00C          	lfsr	2,12
  8859  001784  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8860  001786  26D9               	addwf	fsr2l,f,c
  8861  001788  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8862  00178A  22DA               	addwfc	fsr2h,f,c
  8863  00178C  50DF               	movf	indf2,w,c
  8864  00178E  6F65               	movwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),b
  8865  001790  5165               	movf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),w,b
  8866  001792  1363               	iorwf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),f,b
  8867  001794  0E00               	movlw	0
  8868  001796  1364               	iorwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),f,b
  8869  001798  5163               	movf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),w,b
  8870  00179A  276E               	addwf	ipv4_calculateHeaderChecksum@sum& (0+255),f,b
  8871  00179C  5164               	movf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),w,b
  8872  00179E  236F               	addwfc	(ipv4_calculateHeaderChecksum@sum+1)& (0+255),f,b
  8873  0017A0  0E00               	movlw	0
  8874  0017A2  2370               	addwfc	(ipv4_calculateHeaderChecksum@sum+2)& (0+255),f,b
  8875  0017A4  0E00               	movlw	0
  8876  0017A6  2371               	addwfc	(ipv4_calculateHeaderChecksum@sum+3)& (0+255),f,b
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;ipv4.c: 137: sum += ((header->source.address[1] | (header->source.address[0] << 8)))&0x
      +                          ffff;
  8880  0017A8  EE20 F00F          	lfsr	2,15
  8881  0017AC  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8882  0017AE  26D9               	addwf	fsr2l,f,c
  8883  0017B0  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8884  0017B2  22DA               	addwfc	fsr2h,f,c
  8885  0017B4  50DF               	movf	indf2,w,c
  8886  0017B6  6F62               	movwf	??_ipv4_calculateHeaderChecksum& (0+255),b
  8887  0017B8  5162               	movf	??_ipv4_calculateHeaderChecksum& (0+255),w,b
  8888  0017BA  6F64               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),b
  8889  0017BC  6B63               	clrf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),b
  8890  0017BE  EE20 F010          	lfsr	2,16
  8891  0017C2  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8892  0017C4  26D9               	addwf	fsr2l,f,c
  8893  0017C6  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8894  0017C8  22DA               	addwfc	fsr2h,f,c
  8895  0017CA  50DF               	movf	indf2,w,c
  8896  0017CC  6F65               	movwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),b
  8897  0017CE  6B66               	clrf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),b
  8898  0017D0  5163               	movf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),w,b
  8899  0017D2  1365               	iorwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),f,b
  8900  0017D4  5164               	movf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),w,b
  8901  0017D6  1366               	iorwf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),f,b
  8902  0017D8  5165               	movf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),w,b
  8903  0017DA  276E               	addwf	ipv4_calculateHeaderChecksum@sum& (0+255),f,b
  8904  0017DC  5166               	movf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),w,b
  8905  0017DE  236F               	addwfc	(ipv4_calculateHeaderChecksum@sum+1)& (0+255),f,b
  8906  0017E0  0E00               	movlw	0
  8907  0017E2  2370               	addwfc	(ipv4_calculateHeaderChecksum@sum+2)& (0+255),f,b
  8908  0017E4  0E00               	movlw	0
  8909  0017E6  2371               	addwfc	(ipv4_calculateHeaderChecksum@sum+3)& (0+255),f,b
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;ipv4.c: 138: sum += ((header->source.address[3] | (header->source.address[2] << 8)))&0x
      +                          ffff;
  8913  0017E8  EE20 F011          	lfsr	2,17
  8914  0017EC  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8915  0017EE  26D9               	addwf	fsr2l,f,c
  8916  0017F0  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8917  0017F2  22DA               	addwfc	fsr2h,f,c
  8918  0017F4  50DF               	movf	indf2,w,c
  8919  0017F6  6F62               	movwf	??_ipv4_calculateHeaderChecksum& (0+255),b
  8920  0017F8  5162               	movf	??_ipv4_calculateHeaderChecksum& (0+255),w,b
  8921  0017FA  6F64               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),b
  8922  0017FC  6B63               	clrf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),b
  8923  0017FE  EE20 F012          	lfsr	2,18
  8924  001802  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8925  001804  26D9               	addwf	fsr2l,f,c
  8926  001806  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8927  001808  22DA               	addwfc	fsr2h,f,c
  8928  00180A  50DF               	movf	indf2,w,c
  8929  00180C  6F65               	movwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),b
  8930  00180E  6B66               	clrf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),b
  8931  001810  5163               	movf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),w,b
  8932  001812  1365               	iorwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),f,b
  8933  001814  5164               	movf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),w,b
  8934  001816  1366               	iorwf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),f,b
  8935  001818  5165               	movf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),w,b
  8936  00181A  276E               	addwf	ipv4_calculateHeaderChecksum@sum& (0+255),f,b
  8937  00181C  5166               	movf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),w,b
  8938  00181E  236F               	addwfc	(ipv4_calculateHeaderChecksum@sum+1)& (0+255),f,b
  8939  001820  0E00               	movlw	0
  8940  001822  2370               	addwfc	(ipv4_calculateHeaderChecksum@sum+2)& (0+255),f,b
  8941  001824  0E00               	movlw	0
  8942  001826  2371               	addwfc	(ipv4_calculateHeaderChecksum@sum+3)& (0+255),f,b
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;ipv4.c: 139: sum += ((header->destination.address[1] | (header->destination.address[0] 
      +                          << 8)))&0xffff;
  8946  001828  EE20 F013          	lfsr	2,19
  8947  00182C  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8948  00182E  26D9               	addwf	fsr2l,f,c
  8949  001830  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8950  001832  22DA               	addwfc	fsr2h,f,c
  8951  001834  50DF               	movf	indf2,w,c
  8952  001836  6F62               	movwf	??_ipv4_calculateHeaderChecksum& (0+255),b
  8953  001838  5162               	movf	??_ipv4_calculateHeaderChecksum& (0+255),w,b
  8954  00183A  6F64               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),b
  8955  00183C  6B63               	clrf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),b
  8956  00183E  EE20 F014          	lfsr	2,20
  8957  001842  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8958  001844  26D9               	addwf	fsr2l,f,c
  8959  001846  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8960  001848  22DA               	addwfc	fsr2h,f,c
  8961  00184A  50DF               	movf	indf2,w,c
  8962  00184C  6F65               	movwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),b
  8963  00184E  6B66               	clrf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),b
  8964  001850  5163               	movf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),w,b
  8965  001852  1365               	iorwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),f,b
  8966  001854  5164               	movf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),w,b
  8967  001856  1366               	iorwf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),f,b
  8968  001858  5165               	movf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),w,b
  8969  00185A  276E               	addwf	ipv4_calculateHeaderChecksum@sum& (0+255),f,b
  8970  00185C  5166               	movf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),w,b
  8971  00185E  236F               	addwfc	(ipv4_calculateHeaderChecksum@sum+1)& (0+255),f,b
  8972  001860  0E00               	movlw	0
  8973  001862  2370               	addwfc	(ipv4_calculateHeaderChecksum@sum+2)& (0+255),f,b
  8974  001864  0E00               	movlw	0
  8975  001866  2371               	addwfc	(ipv4_calculateHeaderChecksum@sum+3)& (0+255),f,b
  8976                           
  8977                           ; BSR set to: 0
  8978                           ;ipv4.c: 140: sum += ((header->destination.address[3] | (header->destination.address[2] 
      +                          << 8)))&0xffff;
  8979  001868  EE20 F015          	lfsr	2,21
  8980  00186C  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8981  00186E  26D9               	addwf	fsr2l,f,c
  8982  001870  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8983  001872  22DA               	addwfc	fsr2h,f,c
  8984  001874  50DF               	movf	indf2,w,c
  8985  001876  6F62               	movwf	??_ipv4_calculateHeaderChecksum& (0+255),b
  8986  001878  5162               	movf	??_ipv4_calculateHeaderChecksum& (0+255),w,b
  8987  00187A  6F64               	movwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),b
  8988  00187C  6B63               	clrf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),b
  8989  00187E  EE20 F016          	lfsr	2,22
  8990  001882  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  8991  001884  26D9               	addwf	fsr2l,f,c
  8992  001886  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  8993  001888  22DA               	addwfc	fsr2h,f,c
  8994  00188A  50DF               	movf	indf2,w,c
  8995  00188C  6F65               	movwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),b
  8996  00188E  6B66               	clrf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),b
  8997  001890  5163               	movf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),w,b
  8998  001892  1365               	iorwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),f,b
  8999  001894  5164               	movf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),w,b
  9000  001896  1366               	iorwf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),f,b
  9001  001898  5165               	movf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),w,b
  9002  00189A  276E               	addwf	ipv4_calculateHeaderChecksum@sum& (0+255),f,b
  9003  00189C  5166               	movf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),w,b
  9004  00189E  236F               	addwfc	(ipv4_calculateHeaderChecksum@sum+1)& (0+255),f,b
  9005  0018A0  0E00               	movlw	0
  9006  0018A2  2370               	addwfc	(ipv4_calculateHeaderChecksum@sum+2)& (0+255),f,b
  9007  0018A4  0E00               	movlw	0
  9008  0018A6  2371               	addwfc	(ipv4_calculateHeaderChecksum@sum+3)& (0+255),f,b
  9009                           
  9010                           ; BSR set to: 0
  9011                           ;ipv4.c: 142: sum = (sum & 0x0ffff)+((sum & 0xf0000) >> 16);
  9012  0018A8  C06E  F062         	movff	ipv4_calculateHeaderChecksum@sum,??_ipv4_calculateHeaderChecksum
  9013  0018AC  C06F  F063         	movff	ipv4_calculateHeaderChecksum@sum+1,??_ipv4_calculateHeaderChecksum+1
  9014  0018B0  C070  F064         	movff	ipv4_calculateHeaderChecksum@sum+2,??_ipv4_calculateHeaderChecksum+2
  9015  0018B4  C071  F065         	movff	ipv4_calculateHeaderChecksum@sum+3,??_ipv4_calculateHeaderChecksum+3
  9016  0018B8  0E11               	movlw	17
  9017  0018BA  D005               	goto	u10150
  9018  0018BC                     u10155:
  9019  0018BC  90D8               	bcf	status,0,c
  9020  0018BE  3365               	rrcf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),f,b
  9021  0018C0  3364               	rrcf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),f,b
  9022  0018C2  3363               	rrcf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),f,b
  9023  0018C4  3362               	rrcf	??_ipv4_calculateHeaderChecksum& (0+255),f,b
  9024  0018C6                     u10150:
  9025  0018C6  2EE8               	decfsz	wreg,f,c
  9026  0018C8  D7F9               	goto	u10155
  9027  0018CA  0E0F               	movlw	15
  9028  0018CC  1562               	andwf	??_ipv4_calculateHeaderChecksum& (0+255),w,b
  9029  0018CE  6F66               	movwf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),b
  9030  0018D0  0E00               	movlw	0
  9031  0018D2  1563               	andwf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),w,b
  9032  0018D4  6F67               	movwf	(??_ipv4_calculateHeaderChecksum+5)& (0+255),b
  9033  0018D6  0E00               	movlw	0
  9034  0018D8  1564               	andwf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),w,b
  9035  0018DA  6F68               	movwf	(??_ipv4_calculateHeaderChecksum+6)& (0+255),b
  9036  0018DC  0E00               	movlw	0
  9037  0018DE  1565               	andwf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),w,b
  9038  0018E0  6F69               	movwf	(??_ipv4_calculateHeaderChecksum+7)& (0+255),b
  9039  0018E2  0EFF               	movlw	255
  9040  0018E4  156E               	andwf	ipv4_calculateHeaderChecksum@sum& (0+255),w,b
  9041  0018E6  6F6A               	movwf	(??_ipv4_calculateHeaderChecksum+8)& (0+255),b
  9042  0018E8  0EFF               	movlw	255
  9043  0018EA  156F               	andwf	(ipv4_calculateHeaderChecksum@sum+1)& (0+255),w,b
  9044  0018EC  6F6B               	movwf	(??_ipv4_calculateHeaderChecksum+9)& (0+255),b
  9045  0018EE  0E00               	movlw	0
  9046  0018F0  1570               	andwf	(ipv4_calculateHeaderChecksum@sum+2)& (0+255),w,b
  9047  0018F2  6F6C               	movwf	(??_ipv4_calculateHeaderChecksum+10)& (0+255),b
  9048  0018F4  0E00               	movlw	0
  9049  0018F6  1571               	andwf	(ipv4_calculateHeaderChecksum@sum+3)& (0+255),w,b
  9050  0018F8  6F6D               	movwf	(??_ipv4_calculateHeaderChecksum+11)& (0+255),b
  9051  0018FA  5166               	movf	(??_ipv4_calculateHeaderChecksum+4)& (0+255),w,b
  9052  0018FC  256A               	addwf	(??_ipv4_calculateHeaderChecksum+8)& (0+255),w,b
  9053  0018FE  6F6E               	movwf	ipv4_calculateHeaderChecksum@sum& (0+255),b
  9054  001900  5167               	movf	(??_ipv4_calculateHeaderChecksum+5)& (0+255),w,b
  9055  001902  216B               	addwfc	(??_ipv4_calculateHeaderChecksum+9)& (0+255),w,b
  9056  001904  6F6F               	movwf	(ipv4_calculateHeaderChecksum@sum+1)& (0+255),b
  9057  001906  5168               	movf	(??_ipv4_calculateHeaderChecksum+6)& (0+255),w,b
  9058  001908  216C               	addwfc	(??_ipv4_calculateHeaderChecksum+10)& (0+255),w,b
  9059  00190A  6F70               	movwf	(ipv4_calculateHeaderChecksum@sum+2)& (0+255),b
  9060  00190C  5169               	movf	(??_ipv4_calculateHeaderChecksum+7)& (0+255),w,b
  9061  00190E  216D               	addwfc	(??_ipv4_calculateHeaderChecksum+11)& (0+255),w,b
  9062  001910  6F71               	movwf	(ipv4_calculateHeaderChecksum@sum+3)& (0+255),b
  9063                           
  9064                           ; BSR set to: 0
  9065                           ;ipv4.c: 143: sum = ~sum;
  9066  001912  C06E  F062         	movff	ipv4_calculateHeaderChecksum@sum,??_ipv4_calculateHeaderChecksum
  9067  001916  C06F  F063         	movff	ipv4_calculateHeaderChecksum@sum+1,??_ipv4_calculateHeaderChecksum+1
  9068  00191A  C070  F064         	movff	ipv4_calculateHeaderChecksum@sum+2,??_ipv4_calculateHeaderChecksum+2
  9069  00191E  C071  F065         	movff	ipv4_calculateHeaderChecksum@sum+3,??_ipv4_calculateHeaderChecksum+3
  9070  001922  1F62               	comf	??_ipv4_calculateHeaderChecksum& (0+255),f,b
  9071  001924  1F63               	comf	(??_ipv4_calculateHeaderChecksum+1)& (0+255),f,b
  9072  001926  1F64               	comf	(??_ipv4_calculateHeaderChecksum+2)& (0+255),f,b
  9073  001928  1F65               	comf	(??_ipv4_calculateHeaderChecksum+3)& (0+255),f,b
  9074  00192A  C062  F06E         	movff	??_ipv4_calculateHeaderChecksum,ipv4_calculateHeaderChecksum@sum
  9075  00192E  C063  F06F         	movff	??_ipv4_calculateHeaderChecksum+1,ipv4_calculateHeaderChecksum@sum+1
  9076  001932  C064  F070         	movff	??_ipv4_calculateHeaderChecksum+2,ipv4_calculateHeaderChecksum@sum+2
  9077  001936  C065  F071         	movff	??_ipv4_calculateHeaderChecksum+3,ipv4_calculateHeaderChecksum@sum+3
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;ipv4.c: 145: header->checksum = sum;
  9081  00193A  EE20 F00D          	lfsr	2,13
  9082  00193E  5160               	movf	ipv4_calculateHeaderChecksum@header& (0+255),w,b
  9083  001940  26D9               	addwf	fsr2l,f,c
  9084  001942  5161               	movf	(ipv4_calculateHeaderChecksum@header+1)& (0+255),w,b
  9085  001944  22DA               	addwfc	fsr2h,f,c
  9086  001946  C06E  FFDE         	movff	ipv4_calculateHeaderChecksum@sum,postinc2
  9087  00194A  C06F  FFDD         	movff	ipv4_calculateHeaderChecksum@sum+1,postdec2
  9088                           
  9089                           ; BSR set to: 0
  9090  00194E  0012               	return		;funcret
  9091  001950                     __end_of_ipv4_calculateHeaderChecksum:
  9092                           	opt stack 0
  9093                           tblptru	equ	0xFF8
  9094                           tblptrh	equ	0xFF7
  9095                           tblptrl	equ	0xFF6
  9096                           tablat	equ	0xFF5
  9097                           prodh	equ	0xFF4
  9098                           prodl	equ	0xFF3
  9099                           intcon	equ	0xFF2
  9100                           intcon3	equ	0xFF0
  9101                           indf0	equ	0xFEF
  9102                           postinc0	equ	0xFEE
  9103                           plusw0	equ	0xFEB
  9104                           fsr0h	equ	0xFEA
  9105                           fsr0l	equ	0xFE9
  9106                           wreg	equ	0xFE8
  9107                           indf1	equ	0xFE7
  9108                           postinc1	equ	0xFE6
  9109                           postdec1	equ	0xFE5
  9110                           plusw1	equ	0xFE3
  9111                           fsr1h	equ	0xFE2
  9112                           fsr1l	equ	0xFE1
  9113                           indf2	equ	0xFDF
  9114                           postinc2	equ	0xFDE
  9115                           postdec2	equ	0xFDD
  9116                           plusw2	equ	0xFDB
  9117                           fsr2h	equ	0xFDA
  9118                           fsr2l	equ	0xFD9
  9119                           status	equ	0xFD8
  9120                           
  9121 ;; *************** function _hexToString *****************
  9122 ;; Defined at:
  9123 ;;		line 93 in file "src/system/uart.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  val             4    1[BANK0 ] unsigned long 
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;  pointer         1    9[BANK0 ] unsigned char 
  9128 ;; Return value:  Size  Location     Type
  9129 ;;                  2    1[BANK0 ] PTR unsigned char 
  9130 ;; Registers used:
  9131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9132 ;; Tracked objects:
  9133 ;;		On entry : 0/0
  9134 ;;		On exit  : 0/0
  9135 ;;		Unchanged: 0/0
  9136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9137 ;;      Params:         0       4       0       0       0       0       0       0       0
  9138 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9139 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9140 ;;      Totals:         0       9       0       0       0       0       0       0       0
  9141 ;;Total ram usage:        9 bytes
  9142 ;; Hardware stack levels used:    1
  9143 ;; Hardware stack levels required when called:    5
  9144 ;; This function calls:
  9145 ;;		_hexToChar
  9146 ;; This function is called by:
  9147 ;;		_ipv4_checkHeaderChecksum
  9148 ;; This function uses a non-reentrant model
  9149 ;;
  9150                           
  9151                           	psect	text22
  9152  003D7C                     __ptext22:
  9153                           	opt stack 0
  9154  003D7C                     _hexToString:
  9155                           	opt stack 21
  9156                           
  9157                           ;uart.c: 94: char static number [10];
  9158                           ;uart.c: 95: uint8_t pointer = 0;
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;incstack = 0
  9162  003D7C  0E00               	movlw	0
  9163  003D7E  0100               	movlb	0	; () banked
  9164  003D80  6F69               	movwf	hexToString@pointer& (0+255),b
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;uart.c: 96: if (val > 0xff) {
  9168  003D82  5164               	movf	(hexToString@val+3)& (0+255),w,b
  9169  003D84  1163               	iorwf	(hexToString@val+2)& (0+255),w,b
  9170  003D86  E103               	bnz	u10170
  9171  003D88  0562               	decf	(hexToString@val+1)& (0+255),w,b
  9172  003D8A  A0D8               	btfss	status,0,c
  9173  003D8C  D02F               	goto	l818
  9174  003D8E                     u10170:
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;uart.c: 97: number[pointer++] = hexToChar((val >> 12) & 0xf);
  9178  003D8E  5169               	movf	hexToString@pointer& (0+255),w,b
  9179  003D90  0D01               	mullw	1
  9180  003D92  0ED4               	movlw	low hexToString@number
  9181  003D94  24F3               	addwf	prodl,w,c
  9182  003D96  6ED9               	movwf	fsr2l,c
  9183  003D98  0E01               	movlw	high hexToString@number
  9184  003D9A  20F4               	addwfc	prodh,w,c
  9185  003D9C  6EDA               	movwf	fsr2h,c
  9186  003D9E  C061  F065         	movff	hexToString@val,??_hexToString
  9187  003DA2  C062  F066         	movff	hexToString@val+1,??_hexToString+1
  9188  003DA6  C063  F067         	movff	hexToString@val+2,??_hexToString+2
  9189  003DAA  C064  F068         	movff	hexToString@val+3,??_hexToString+3
  9190  003DAE  0E0D               	movlw	13
  9191  003DB0  D005               	goto	u10180
  9192  003DB2                     u10185:
  9193  003DB2  90D8               	bcf	status,0,c
  9194  003DB4  3368               	rrcf	(??_hexToString+3)& (0+255),f,b
  9195  003DB6  3367               	rrcf	(??_hexToString+2)& (0+255),f,b
  9196  003DB8  3366               	rrcf	(??_hexToString+1)& (0+255),f,b
  9197  003DBA  3365               	rrcf	??_hexToString& (0+255),f,b
  9198  003DBC                     u10180:
  9199  003DBC  2EE8               	decfsz	wreg,f,c
  9200  003DBE  D7F9               	goto	u10185
  9201  003DC0  5165               	movf	??_hexToString& (0+255),w,b
  9202  003DC2  0B0F               	andlw	15
  9203  003DC4  EC50  F02B         	call	_hexToChar
  9204  003DC8  6EDF               	movwf	indf2,c
  9205  003DCA  0100               	movlb	0	; () banked
  9206  003DCC  2B69               	incf	hexToString@pointer& (0+255),f,b
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;uart.c: 98: number[pointer++] = hexToChar((val >> 8) & 0xf);
  9210  003DCE  5169               	movf	hexToString@pointer& (0+255),w,b
  9211  003DD0  0D01               	mullw	1
  9212  003DD2  0ED4               	movlw	low hexToString@number
  9213  003DD4  24F3               	addwf	prodl,w,c
  9214  003DD6  6ED9               	movwf	fsr2l,c
  9215  003DD8  0E01               	movlw	high hexToString@number
  9216  003DDA  20F4               	addwfc	prodh,w,c
  9217  003DDC  6EDA               	movwf	fsr2h,c
  9218  003DDE  5162               	movf	(hexToString@val+1)& (0+255),w,b
  9219  003DE0  0B0F               	andlw	15
  9220  003DE2  EC50  F02B         	call	_hexToChar
  9221  003DE6  6EDF               	movwf	indf2,c
  9222  003DE8  0100               	movlb	0	; () banked
  9223  003DEA  2B69               	incf	hexToString@pointer& (0+255),f,b
  9224  003DEC                     l818:
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;uart.c: 99: }
  9228                           ;uart.c: 100: number[pointer++] = hexToChar((val >> 4) & 0xf);
  9229                           
  9230                           ; BSR set to: 0
  9231  003DEC  5169               	movf	hexToString@pointer& (0+255),w,b
  9232  003DEE  0D01               	mullw	1
  9233  003DF0  0ED4               	movlw	low hexToString@number
  9234  003DF2  24F3               	addwf	prodl,w,c
  9235  003DF4  6ED9               	movwf	fsr2l,c
  9236  003DF6  0E01               	movlw	high hexToString@number
  9237  003DF8  20F4               	addwfc	prodh,w,c
  9238  003DFA  6EDA               	movwf	fsr2h,c
  9239  003DFC  C061  F065         	movff	hexToString@val,??_hexToString
  9240  003E00  C062  F066         	movff	hexToString@val+1,??_hexToString+1
  9241  003E04  C063  F067         	movff	hexToString@val+2,??_hexToString+2
  9242  003E08  C064  F068         	movff	hexToString@val+3,??_hexToString+3
  9243  003E0C  0E05               	movlw	5
  9244  003E0E  D005               	goto	u10190
  9245  003E10                     u10195:
  9246  003E10  90D8               	bcf	status,0,c
  9247  003E12  3368               	rrcf	(??_hexToString+3)& (0+255),f,b
  9248  003E14  3367               	rrcf	(??_hexToString+2)& (0+255),f,b
  9249  003E16  3366               	rrcf	(??_hexToString+1)& (0+255),f,b
  9250  003E18  3365               	rrcf	??_hexToString& (0+255),f,b
  9251  003E1A                     u10190:
  9252  003E1A  2EE8               	decfsz	wreg,f,c
  9253  003E1C  D7F9               	goto	u10195
  9254  003E1E  5165               	movf	??_hexToString& (0+255),w,b
  9255  003E20  0B0F               	andlw	15
  9256  003E22  EC50  F02B         	call	_hexToChar
  9257  003E26  6EDF               	movwf	indf2,c
  9258  003E28  0100               	movlb	0	; () banked
  9259  003E2A  2B69               	incf	hexToString@pointer& (0+255),f,b
  9260                           
  9261                           ;uart.c: 101: number[pointer++] = hexToChar(val & 0xf);
  9262  003E2C  5169               	movf	hexToString@pointer& (0+255),w,b
  9263  003E2E  0D01               	mullw	1
  9264  003E30  0ED4               	movlw	low hexToString@number
  9265  003E32  24F3               	addwf	prodl,w,c
  9266  003E34  6ED9               	movwf	fsr2l,c
  9267  003E36  0E01               	movlw	high hexToString@number
  9268  003E38  20F4               	addwfc	prodh,w,c
  9269  003E3A  6EDA               	movwf	fsr2h,c
  9270  003E3C  5161               	movf	hexToString@val& (0+255),w,b
  9271  003E3E  0B0F               	andlw	15
  9272  003E40  EC50  F02B         	call	_hexToChar
  9273  003E44  6EDF               	movwf	indf2,c
  9274  003E46  0100               	movlb	0	; () banked
  9275  003E48  2B69               	incf	hexToString@pointer& (0+255),f,b
  9276                           
  9277                           ; BSR set to: 0
  9278                           ;uart.c: 103: number[pointer++] = '\0';
  9279  003E4A  5169               	movf	hexToString@pointer& (0+255),w,b
  9280  003E4C  0D01               	mullw	1
  9281  003E4E  0ED4               	movlw	low hexToString@number
  9282  003E50  24F3               	addwf	prodl,w,c
  9283  003E52  6ED9               	movwf	fsr2l,c
  9284  003E54  0E01               	movlw	high hexToString@number
  9285  003E56  20F4               	addwfc	prodh,w,c
  9286  003E58  6EDA               	movwf	fsr2h,c
  9287  003E5A  0E00               	movlw	0
  9288  003E5C  6EDF               	movwf	indf2,c
  9289                           
  9290                           ; BSR set to: 0
  9291  003E5E  2B69               	incf	hexToString@pointer& (0+255),f,b
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;uart.c: 104: return number;
  9295  003E60  0ED4               	movlw	low hexToString@number
  9296  003E62  6F61               	movwf	?_hexToString& (0+255),b
  9297  003E64  0E01               	movlw	high hexToString@number
  9298  003E66  6F62               	movwf	(?_hexToString+1)& (0+255),b
  9299  003E68  0012               	return	
  9300  003E6A                     __end_of_hexToString:
  9301                           	opt stack 0
  9302                           tblptru	equ	0xFF8
  9303                           tblptrh	equ	0xFF7
  9304                           tblptrl	equ	0xFF6
  9305                           tablat	equ	0xFF5
  9306                           prodh	equ	0xFF4
  9307                           prodl	equ	0xFF3
  9308                           intcon	equ	0xFF2
  9309                           intcon3	equ	0xFF0
  9310                           indf0	equ	0xFEF
  9311                           postinc0	equ	0xFEE
  9312                           plusw0	equ	0xFEB
  9313                           fsr0h	equ	0xFEA
  9314                           fsr0l	equ	0xFE9
  9315                           wreg	equ	0xFE8
  9316                           indf1	equ	0xFE7
  9317                           postinc1	equ	0xFE6
  9318                           postdec1	equ	0xFE5
  9319                           plusw1	equ	0xFE3
  9320                           fsr1h	equ	0xFE2
  9321                           fsr1l	equ	0xFE1
  9322                           indf2	equ	0xFDF
  9323                           postinc2	equ	0xFDE
  9324                           postdec2	equ	0xFDD
  9325                           plusw2	equ	0xFDB
  9326                           fsr2h	equ	0xFDA
  9327                           fsr2l	equ	0xFD9
  9328                           status	equ	0xFD8
  9329                           
  9330 ;; *************** function _hexToChar *****************
  9331 ;; Defined at:
  9332 ;;		line 84 in file "src/system/uart.c"
  9333 ;; Parameters:    Size  Location     Type
  9334 ;;  val             1    wreg     unsigned char 
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;  val             1    0[BANK0 ] unsigned char 
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  1    wreg      unsigned char 
  9339 ;; Registers used:
  9340 ;;		wreg, status,2, status,0
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9346 ;;      Params:         0       0       0       0       0       0       0       0       0
  9347 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9349 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9350 ;;Total ram usage:        1 bytes
  9351 ;; Hardware stack levels used:    1
  9352 ;; Hardware stack levels required when called:    4
  9353 ;; This function calls:
  9354 ;;		Nothing
  9355 ;; This function is called by:
  9356 ;;		_hexToString
  9357 ;; This function uses a non-reentrant model
  9358 ;;
  9359                           
  9360                           	psect	text23
  9361  0056A0                     __ptext23:
  9362                           	opt stack 0
  9363  0056A0                     _hexToChar:
  9364                           	opt stack 21
  9365                           
  9366                           ; BSR set to: 0
  9367                           ;incstack = 0
  9368                           ;hexToChar@val stored from wreg
  9369  0056A0  0100               	movlb	0	; () banked
  9370  0056A2  6F60               	movwf	hexToChar@val& (0+255),b
  9371                           
  9372                           ;uart.c: 85: if (val < 10) {
  9373  0056A4  0E0A               	movlw	10
  9374  0056A6  0100               	movlb	0	; () banked
  9375  0056A8  6160               	cpfslt	hexToChar@val& (0+255),b
  9376  0056AA  D003               	goto	l810
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;uart.c: 86: return val + 0x30u;
  9380  0056AC  5160               	movf	hexToChar@val& (0+255),w,b
  9381  0056AE  0F30               	addlw	48
  9382                           
  9383                           ; BSR set to: 0
  9384  0056B0  0012               	return	
  9385  0056B2                     l810:
  9386                           
  9387                           ; BSR set to: 0
  9388                           
  9389                           ; BSR set to: 0
  9390  0056B2  0E10               	movlw	16
  9391  0056B4  6160               	cpfslt	hexToChar@val& (0+255),b
  9392  0056B6  D003               	goto	l813
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;uart.c: 88: return val + 0x41u - 10;
  9396  0056B8  5160               	movf	hexToChar@val& (0+255),w,b
  9397  0056BA  0F37               	addlw	55
  9398                           
  9399                           ; BSR set to: 0
  9400  0056BC  0012               	return	
  9401  0056BE                     l813:
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;uart.c: 89: }
  9405                           ;uart.c: 90: return 0;
  9406                           
  9407                           ; BSR set to: 0
  9408                           
  9409                           ; BSR set to: 0
  9410  0056BE  0E00               	movlw	0
  9411  0056C0  0012               	return	
  9412  0056C2                     __end_of_hexToChar:
  9413                           	opt stack 0
  9414                           tblptru	equ	0xFF8
  9415                           tblptrh	equ	0xFF7
  9416                           tblptrl	equ	0xFF6
  9417                           tablat	equ	0xFF5
  9418                           prodh	equ	0xFF4
  9419                           prodl	equ	0xFF3
  9420                           intcon	equ	0xFF2
  9421                           intcon3	equ	0xFF0
  9422                           indf0	equ	0xFEF
  9423                           postinc0	equ	0xFEE
  9424                           plusw0	equ	0xFEB
  9425                           fsr0h	equ	0xFEA
  9426                           fsr0l	equ	0xFE9
  9427                           wreg	equ	0xFE8
  9428                           indf1	equ	0xFE7
  9429                           postinc1	equ	0xFE6
  9430                           postdec1	equ	0xFE5
  9431                           plusw1	equ	0xFE3
  9432                           fsr1h	equ	0xFE2
  9433                           fsr1l	equ	0xFE1
  9434                           indf2	equ	0xFDF
  9435                           postinc2	equ	0xFDE
  9436                           postdec2	equ	0xFDD
  9437                           plusw2	equ	0xFDB
  9438                           fsr2h	equ	0xFDA
  9439                           fsr2l	equ	0xFD9
  9440                           status	equ	0xFD8
  9441                           
  9442 ;; *************** function _ipProtocolToString *****************
  9443 ;; Defined at:
  9444 ;;		line 149 in file "src/system/uart.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;  protocol        1    wreg     enum E5627
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;  protocol        1    2[BANK0 ] enum E5627
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  2    0[BANK0 ] PTR unsigned char 
  9451 ;; Registers used:
  9452 ;;		wreg, status,2, status,0
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9458 ;;      Params:         0       2       0       0       0       0       0       0       0
  9459 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9461 ;;      Totals:         0       3       0       0       0       0       0       0       0
  9462 ;;Total ram usage:        3 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:    4
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_ipv4_handleNewPacket
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           	psect	text24
  9473  005086                     __ptext24:
  9474                           	opt stack 0
  9475  005086                     _ipProtocolToString:
  9476                           	opt stack 23
  9477                           
  9478                           ; BSR set to: 0
  9479                           ;incstack = 0
  9480                           ;ipProtocolToString@protocol stored from wreg
  9481  005086  0100               	movlb	0	; () banked
  9482  005088  6F62               	movwf	ipProtocolToString@protocol& (0+255),b
  9483                           
  9484                           ;uart.c: 150: switch (protocol) {
  9485  00508A  D015               	goto	l842
  9486  00508C                     
  9487                           ;uart.c: 152: return "ICMP";
  9488  00508C  0ECA               	movlw	low STR_66
  9489  00508E  0100               	movlb	0	; () banked
  9490  005090  6F60               	movwf	?_ipProtocolToString& (0+255),b
  9491  005092  0E7F               	movlw	high STR_66
  9492  005094  6F61               	movwf	(?_ipProtocolToString+1)& (0+255),b
  9493                           
  9494                           ; BSR set to: 0
  9495  005096  0012               	return	
  9496  005098                     
  9497                           ; BSR set to: 0
  9498                           ;uart.c: 154: return "TCP";
  9499                           
  9500                           ; BSR set to: 0
  9501  005098  0EDE               	movlw	low STR_67
  9502  00509A  6F60               	movwf	?_ipProtocolToString& (0+255),b
  9503  00509C  0E7F               	movlw	high STR_67
  9504  00509E  6F61               	movwf	(?_ipProtocolToString+1)& (0+255),b
  9505                           
  9506                           ; BSR set to: 0
  9507  0050A0  0012               	return	
  9508  0050A2                     
  9509                           ; BSR set to: 0
  9510                           ;uart.c: 156: return "UDP";
  9511                           
  9512                           ; BSR set to: 0
  9513  0050A2  0EE2               	movlw	low STR_68
  9514  0050A4  6F60               	movwf	?_ipProtocolToString& (0+255),b
  9515  0050A6  0E7F               	movlw	high STR_68
  9516  0050A8  6F61               	movwf	(?_ipProtocolToString+1)& (0+255),b
  9517                           
  9518                           ; BSR set to: 0
  9519  0050AA  0012               	return	
  9520  0050AC                     
  9521                           ; BSR set to: 0
  9522                           ;uart.c: 158: return "Unknown Protocol";
  9523                           
  9524                           ; BSR set to: 0
  9525  0050AC  0EA8               	movlw	low STR_69
  9526  0050AE  6F60               	movwf	?_ipProtocolToString& (0+255),b
  9527  0050B0  0E7E               	movlw	high STR_69
  9528  0050B2  6F61               	movwf	(?_ipProtocolToString+1)& (0+255),b
  9529                           
  9530                           ; BSR set to: 0
  9531                           ;uart.c: 159: }
  9532                           
  9533                           ; BSR set to: 0
  9534  0050B4  0012               	return	
  9535  0050B6                     l842:
  9536                           
  9537                           ; BSR set to: 0
  9538  0050B6  0100               	movlb	0	; () banked
  9539  0050B8  5162               	movf	ipProtocolToString@protocol& (0+255),w,b
  9540                           
  9541                           ; Switch size 1, requested type "space"
  9542                           ; Number of cases is 3, Range of values is 1 to 17
  9543                           ; switch strategies available:
  9544                           ; Name         Instructions Cycles
  9545                           ; simple_byte           10     6 (average)
  9546                           ;	Chosen strategy is simple_byte
  9547  0050BA  0A01               	xorlw	1	; case 1
  9548  0050BC  B4D8               	btfsc	status,2,c
  9549  0050BE  D7E6               	goto	l843
  9550  0050C0  0A07               	xorlw	7	; case 6
  9551  0050C2  B4D8               	btfsc	status,2,c
  9552  0050C4  D7E9               	goto	l845
  9553  0050C6  0A17               	xorlw	23	; case 17
  9554  0050C8  B4D8               	btfsc	status,2,c
  9555  0050CA  D7EB               	goto	l846
  9556  0050CC  D7EF               	goto	l847
  9557  0050CE                     __end_of_ipProtocolToString:
  9558                           	opt stack 0
  9559                           tblptru	equ	0xFF8
  9560                           tblptrh	equ	0xFF7
  9561                           tblptrl	equ	0xFF6
  9562                           tablat	equ	0xFF5
  9563                           prodh	equ	0xFF4
  9564                           prodl	equ	0xFF3
  9565                           intcon	equ	0xFF2
  9566                           intcon3	equ	0xFF0
  9567                           indf0	equ	0xFEF
  9568                           postinc0	equ	0xFEE
  9569                           plusw0	equ	0xFEB
  9570                           fsr0h	equ	0xFEA
  9571                           fsr0l	equ	0xFE9
  9572                           wreg	equ	0xFE8
  9573                           indf1	equ	0xFE7
  9574                           postinc1	equ	0xFE6
  9575                           postdec1	equ	0xFE5
  9576                           plusw1	equ	0xFE3
  9577                           fsr1h	equ	0xFE2
  9578                           fsr1l	equ	0xFE1
  9579                           indf2	equ	0xFDF
  9580                           postinc2	equ	0xFDE
  9581                           postdec2	equ	0xFDD
  9582                           plusw2	equ	0xFDB
  9583                           fsr2h	equ	0xFDA
  9584                           fsr2l	equ	0xFD9
  9585                           status	equ	0xFD8
  9586                           
  9587 ;; *************** function _ethernetController_updateNextPacketPointer *****************
  9588 ;; Defined at:
  9589 ;;		line 334 in file "src/enc424j600/ENC424J600.c"
  9590 ;; Parameters:    Size  Location     Type
  9591 ;;		None
  9592 ;; Auto vars:     Size  Location     Type
  9593 ;;  nextPktPoint    2   21[BANK0 ] unsigned int 
  9594 ;;  newPointerH     1   25[BANK0 ] unsigned char 
  9595 ;;  newPointerL     1   24[BANK0 ] unsigned char 
  9596 ;;  opcode          1   23[BANK0 ] unsigned char 
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  1    wreg      void 
  9599 ;; Registers used:
  9600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9606 ;;      Params:         0       0       0       0       0       0       0       0       0
  9607 ;;      Locals:         0       5       0       0       0       0       0       0       0
  9608 ;;      Temps:          0       6       0       0       0       0       0       0       0
  9609 ;;      Totals:         0      11       0       0       0       0       0       0       0
  9610 ;;Total ram usage:       11 bytes
  9611 ;; Hardware stack levels used:    1
  9612 ;; Hardware stack levels required when called:    7
  9613 ;; This function calls:
  9614 ;;		_enc424j600_getNextPacketPointer
  9615 ;;		_enc424j600_readSPI
  9616 ;;		_enc424j600_setERXDATAReadPointer
  9617 ;;		_enc424j600_setNextPacketPointer
  9618 ;;		_enc424j600_writeSPI
  9619 ;; This function is called by:
  9620 ;;		_ethernet_rxGetNewFrame
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text25
  9625  00486C                     __ptext25:
  9626                           	opt stack 0
  9627  00486C                     _ethernetController_updateNextPacketPointer:
  9628                           	opt stack 21
  9629                           
  9630                           ;ENC424J600.c: 335: uint16_t nextPktPointer;
  9631                           ;ENC424J600.c: 336: uint8_t opcode;
  9632                           ;ENC424J600.c: 337: uint8_t newPointerL, newPointerH;
  9633                           ;ENC424J600.c: 338: nextPktPointer = enc424j600_getNextPacketPointer();
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;incstack = 0
  9637  00486C  EC17  F02C         	call	_enc424j600_getNextPacketPointer	;wreg free
  9638  004870  C060  F075         	movff	?_enc424j600_getNextPacketPointer,ethernetController_updateNextPacketPointer@next
      +                          PktPointer
  9639  004874  C061  F076         	movff	?_enc424j600_getNextPacketPointer+1,ethernetController_updateNextPacketPointer@ne
      +                          xtPktPointer+1
  9640                           
  9641                           ;ENC424J600.c: 339: enc424j600_setERXDATAReadPointer(nextPktPointer);
  9642  004878  C075  F06A         	movff	ethernetController_updateNextPacketPointer@nextPktPointer,enc424j600_setERXDATARe
      +                          adPointer@addr
  9643  00487C  C076  F06B         	movff	ethernetController_updateNextPacketPointer@nextPktPointer+1,enc424j600_setERXDATA
      +                          ReadPointer@addr+1
  9644  004880  EC4C  F029         	call	_enc424j600_setERXDATAReadPointer	;wreg free
  9645                           
  9646                           ;ENC424J600.c: 340: opcode = 0x2C;
  9647  004884  0E2C               	movlw	44
  9648  004886  0100               	movlb	0	; () banked
  9649  004888  6F77               	movwf	ethernetController_updateNextPacketPointer@opcode& (0+255),b
  9650                           
  9651                           ; BSR set to: 0
  9652                           ;ENC424J600.c: 341: PORTBbits.RB4=0;
  9653  00488A  9881               	bcf	3969,4,c	;volatile
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;ENC424J600.c: 342: enc424j600_writeSPI(&opcode);
  9657  00488C  0E77               	movlw	low ethernetController_updateNextPacketPointer@opcode
  9658  00488E  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
  9659  004890  0E00               	movlw	high ethernetController_updateNextPacketPointer@opcode
  9660  004892  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
  9661  004894  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
  9662                           
  9663                           ;ENC424J600.c: 343: enc424j600_readSPI(&newPointerL);
  9664  004898  0E78               	movlw	low ethernetController_updateNextPacketPointer@newPointerL
  9665  00489A  0100               	movlb	0	; () banked
  9666  00489C  6F60               	movwf	enc424j600_readSPI@data& (0+255),b
  9667  00489E  0E00               	movlw	high ethernetController_updateNextPacketPointer@newPointerL
  9668  0048A0  6F61               	movwf	(enc424j600_readSPI@data+1)& (0+255),b
  9669  0048A2  EC06  F026         	call	_enc424j600_readSPI	;wreg free
  9670                           
  9671                           ;ENC424J600.c: 344: enc424j600_readSPI(&newPointerH);
  9672  0048A6  0E79               	movlw	low ethernetController_updateNextPacketPointer@newPointerH
  9673  0048A8  0100               	movlb	0	; () banked
  9674  0048AA  6F60               	movwf	enc424j600_readSPI@data& (0+255),b
  9675  0048AC  0E00               	movlw	high ethernetController_updateNextPacketPointer@newPointerH
  9676  0048AE  6F61               	movwf	(enc424j600_readSPI@data+1)& (0+255),b
  9677  0048B0  EC06  F026         	call	_enc424j600_readSPI	;wreg free
  9678                           
  9679                           ;ENC424J600.c: 345: PORTBbits.RB4=1;
  9680  0048B4  8881               	bsf	3969,4,c	;volatile
  9681                           
  9682                           ;ENC424J600.c: 347: enc424j600_setNextPacketPointer((uint16_t) ((newPointerL & (unsigned
      +                          ) 0x00ff) | ((unsigned) (newPointerH << 8)&(unsigned) 0xff00)));
  9683  0048B6  0E00               	movlw	0
  9684  0048B8  0100               	movlb	0	; () banked
  9685  0048BA  6F6F               	movwf	??_ethernetController_updateNextPacketPointer& (0+255),b
  9686  0048BC  0EFF               	movlw	255
  9687  0048BE  6F70               	movwf	(??_ethernetController_updateNextPacketPointer+1)& (0+255),b
  9688  0048C0  5179               	movf	ethernetController_updateNextPacketPointer@newPointerH& (0+255),w,b
  9689  0048C2  6F72               	movwf	(??_ethernetController_updateNextPacketPointer+3)& (0+255),b
  9690  0048C4  6B71               	clrf	(??_ethernetController_updateNextPacketPointer+2)& (0+255),b
  9691  0048C6  516F               	movf	??_ethernetController_updateNextPacketPointer& (0+255),w,b
  9692  0048C8  1771               	andwf	(??_ethernetController_updateNextPacketPointer+2)& (0+255),f,b
  9693  0048CA  5170               	movf	(??_ethernetController_updateNextPacketPointer+1)& (0+255),w,b
  9694  0048CC  1772               	andwf	(??_ethernetController_updateNextPacketPointer+3)& (0+255),f,b
  9695  0048CE  5178               	movf	ethernetController_updateNextPacketPointer@newPointerL& (0+255),w,b
  9696  0048D0  6F73               	movwf	(??_ethernetController_updateNextPacketPointer+4)& (0+255),b
  9697  0048D2  6B74               	clrf	(??_ethernetController_updateNextPacketPointer+5)& (0+255),b
  9698  0048D4  5171               	movf	(??_ethernetController_updateNextPacketPointer+2)& (0+255),w,b
  9699  0048D6  1173               	iorwf	(??_ethernetController_updateNextPacketPointer+4)& (0+255),w,b
  9700  0048D8  6F60               	movwf	enc424j600_setNextPacketPointer@ptr& (0+255),b
  9701  0048DA  5172               	movf	(??_ethernetController_updateNextPacketPointer+3)& (0+255),w,b
  9702  0048DC  1174               	iorwf	(??_ethernetController_updateNextPacketPointer+5)& (0+255),w,b
  9703  0048DE  6F61               	movwf	(enc424j600_setNextPacketPointer@ptr+1)& (0+255),b
  9704  0048E0  EC1C  F02C         	call	_enc424j600_setNextPacketPointer	;wreg free
  9705  0048E4  0012               	return		;funcret
  9706  0048E6                     __end_of_ethernetController_updateNextPacketPointer:
  9707                           	opt stack 0
  9708                           tblptru	equ	0xFF8
  9709                           tblptrh	equ	0xFF7
  9710                           tblptrl	equ	0xFF6
  9711                           tablat	equ	0xFF5
  9712                           prodh	equ	0xFF4
  9713                           prodl	equ	0xFF3
  9714                           intcon	equ	0xFF2
  9715                           intcon3	equ	0xFF0
  9716                           indf0	equ	0xFEF
  9717                           postinc0	equ	0xFEE
  9718                           plusw0	equ	0xFEB
  9719                           fsr0h	equ	0xFEA
  9720                           fsr0l	equ	0xFE9
  9721                           wreg	equ	0xFE8
  9722                           indf1	equ	0xFE7
  9723                           postinc1	equ	0xFE6
  9724                           postdec1	equ	0xFE5
  9725                           plusw1	equ	0xFE3
  9726                           fsr1h	equ	0xFE2
  9727                           fsr1l	equ	0xFE1
  9728                           indf2	equ	0xFDF
  9729                           postinc2	equ	0xFDE
  9730                           postdec2	equ	0xFDD
  9731                           plusw2	equ	0xFDB
  9732                           fsr2h	equ	0xFDA
  9733                           fsr2l	equ	0xFD9
  9734                           status	equ	0xFD8
  9735                           
  9736 ;; *************** function _ethernetController_getRSV *****************
  9737 ;; Defined at:
  9738 ;;		line 299 in file "src/enc424j600/ENC424J600.c"
  9739 ;; Parameters:    Size  Location     Type
  9740 ;;  address         2   17[BANK0 ] unsigned int 
  9741 ;; Auto vars:     Size  Location     Type
  9742 ;;  i               1   23[BANK0 ] unsigned char 
  9743 ;;  opcode          1   22[BANK0 ] unsigned char 
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  5   17[BANK0 ] struct RSV
  9746 ;; Registers used:
  9747 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9753 ;;      Params:         0       5       0       0       0       0       0       0       0
  9754 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9755 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9756 ;;      Totals:         0       7       0       0       0       0       0       0       0
  9757 ;;Total ram usage:        7 bytes
  9758 ;; Hardware stack levels used:    1
  9759 ;; Hardware stack levels required when called:    7
  9760 ;; This function calls:
  9761 ;;		_enc424j600_readSPI
  9762 ;;		_enc424j600_setERXDATAReadPointer
  9763 ;;		_enc424j600_updateReceiveStatusVector
  9764 ;;		_enc424j600_writeSPI
  9765 ;; This function is called by:
  9766 ;;		_ethernet_rxGetNewFrame
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770                           	psect	text26
  9771  00495E                     __ptext26:
  9772                           	opt stack 0
  9773  00495E                     _ethernetController_getRSV:
  9774                           	opt stack 21
  9775                           
  9776                           ;ENC424J600.c: 300: uint8_t static temp[6];
  9777                           ;ENC424J600.c: 301: enc424j600_setERXDATAReadPointer(address + 2);
  9778                           
  9779                           ;incstack = 0
  9780  00495E  0E02               	movlw	2
  9781  004960  0100               	movlb	0	; () banked
  9782  004962  2571               	addwf	ethernetController_getRSV@address& (0+255),w,b
  9783  004964  6F6A               	movwf	enc424j600_setERXDATAReadPointer@addr& (0+255),b
  9784  004966  0E00               	movlw	0
  9785  004968  2172               	addwfc	(ethernetController_getRSV@address+1)& (0+255),w,b
  9786  00496A  6F6B               	movwf	(enc424j600_setERXDATAReadPointer@addr+1)& (0+255),b
  9787  00496C  EC4C  F029         	call	_enc424j600_setERXDATAReadPointer	;wreg free
  9788                           
  9789                           ;ENC424J600.c: 302: uint8_t opcode = 0x2C;
  9790  004970  0E2C               	movlw	44
  9791  004972  0100               	movlb	0	; () banked
  9792  004974  6F76               	movwf	ethernetController_getRSV@opcode& (0+255),b
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;ENC424J600.c: 303: PORTBbits.RB4=0;
  9796  004976  9881               	bcf	3969,4,c	;volatile
  9797                           
  9798                           ; BSR set to: 0
  9799                           ;ENC424J600.c: 304: enc424j600_writeSPI(&opcode);
  9800  004978  0E76               	movlw	low ethernetController_getRSV@opcode
  9801  00497A  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
  9802  00497C  0E00               	movlw	high ethernetController_getRSV@opcode
  9803  00497E  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
  9804  004980  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
  9805                           
  9806                           ;ENC424J600.c: 305: for (uint8_t i = 0; i < 6; i++) {
  9807  004984  0E00               	movlw	0
  9808  004986  0100               	movlb	0	; () banked
  9809  004988  6F77               	movwf	ethernetController_getRSV@i& (0+255),b
  9810  00498A                     l9729:
  9811                           
  9812                           ; BSR set to: 0
  9813  00498A  0E05               	movlw	5
  9814  00498C  6577               	cpfsgt	ethernetController_getRSV@i& (0+255),b
  9815  00498E  D001               	goto	l165
  9816  004990  D00D               	goto	u11370
  9817  004992                     l165:
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;ENC424J600.c: 306: enc424j600_readSPI(&temp[i]);
  9821                           
  9822                           ; BSR set to: 0
  9823  004992  5177               	movf	ethernetController_getRSV@i& (0+255),w,b
  9824  004994  0D01               	mullw	1
  9825  004996  0EE8               	movlw	low ethernetController_getRSV@temp
  9826  004998  24F3               	addwf	prodl,w,c
  9827  00499A  6F60               	movwf	enc424j600_readSPI@data& (0+255),b
  9828  00499C  0E01               	movlw	high ethernetController_getRSV@temp
  9829  00499E  20F4               	addwfc	prodh,w,c
  9830  0049A0  6F61               	movwf	(enc424j600_readSPI@data+1)& (0+255),b
  9831  0049A2  EC06  F026         	call	_enc424j600_readSPI	;wreg free
  9832  0049A6  0100               	movlb	0	; () banked
  9833  0049A8  2B77               	incf	ethernetController_getRSV@i& (0+255),f,b
  9834  0049AA  D7EF               	goto	l9729
  9835  0049AC                     u11370:
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;ENC424J600.c: 307: }
  9839                           ;ENC424J600.c: 308: PORTBbits.RB4=1;
  9840  0049AC  8881               	bsf	3969,4,c	;volatile
  9841                           
  9842                           ; BSR set to: 0
  9843                           ;ENC424J600.c: 309: return enc424j600_updateReceiveStatusVector(&temp[0]);
  9844  0049AE  0EE8               	movlw	low ethernetController_getRSV@temp
  9845  0049B0  6F60               	movwf	enc424j600_updateReceiveStatusVector@rsv& (0+255),b
  9846  0049B2  0E01               	movlw	high ethernetController_getRSV@temp
  9847  0049B4  6F61               	movwf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),b
  9848  0049B6  EC94  F009         	call	_enc424j600_updateReceiveStatusVector	;wreg free
  9849  0049BA  CFE9 FFD9          	movff	fsr0l,fsr2l
  9850  0049BE  CFEA FFDA          	movff	fsr0h,fsr2h
  9851  0049C2  EE00  F071         	lfsr	0,?_ethernetController_getRSV
  9852  0049C6  0E04               	movlw	4
  9853  0049C8                     u11381:
  9854  0049C8  CFDB FFEB          	movff	plusw2,plusw0
  9855  0049CC  06E8               	decf	wreg,f,c
  9856  0049CE  E2FC               	bc	u11381
  9857  0049D0  0012               	return	
  9858  0049D2                     __end_of_ethernetController_getRSV:
  9859                           	opt stack 0
  9860                           tblptru	equ	0xFF8
  9861                           tblptrh	equ	0xFF7
  9862                           tblptrl	equ	0xFF6
  9863                           tablat	equ	0xFF5
  9864                           prodh	equ	0xFF4
  9865                           prodl	equ	0xFF3
  9866                           intcon	equ	0xFF2
  9867                           intcon3	equ	0xFF0
  9868                           indf0	equ	0xFEF
  9869                           postinc0	equ	0xFEE
  9870                           plusw0	equ	0xFEB
  9871                           fsr0h	equ	0xFEA
  9872                           fsr0l	equ	0xFE9
  9873                           wreg	equ	0xFE8
  9874                           indf1	equ	0xFE7
  9875                           postinc1	equ	0xFE6
  9876                           postdec1	equ	0xFE5
  9877                           plusw1	equ	0xFE3
  9878                           fsr1h	equ	0xFE2
  9879                           fsr1l	equ	0xFE1
  9880                           indf2	equ	0xFDF
  9881                           postinc2	equ	0xFDE
  9882                           postdec2	equ	0xFDD
  9883                           plusw2	equ	0xFDB
  9884                           fsr2h	equ	0xFDA
  9885                           fsr2l	equ	0xFD9
  9886                           status	equ	0xFD8
  9887                           
  9888 ;; *************** function _enc424j600_updateReceiveStatusVector *****************
  9889 ;; Defined at:
  9890 ;;		line 719 in file "src/enc424j600/ENC424J600.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;  rsv             2    0[BANK0 ] PTR unsigned char 
  9893 ;;		 -> ethernetController_getRSV@temp(6), 
  9894 ;; Auto vars:     Size  Location     Type
  9895 ;;  receiveStatu    5   12[BANK0 ] struct RSV
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  5    0[BANK0 ] struct RSV
  9898 ;; Registers used:
  9899 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9905 ;;      Params:         0       5       0       0       0       0       0       0       0
  9906 ;;      Locals:         0       5       0       0       0       0       0       0       0
  9907 ;;      Temps:          0       7       0       0       0       0       0       0       0
  9908 ;;      Totals:         0      17       0       0       0       0       0       0       0
  9909 ;;Total ram usage:       17 bytes
  9910 ;; Hardware stack levels used:    1
  9911 ;; Hardware stack levels required when called:    4
  9912 ;; This function calls:
  9913 ;;		Nothing
  9914 ;; This function is called by:
  9915 ;;		_ethernetController_getRSV
  9916 ;; This function uses a non-reentrant model
  9917 ;;
  9918                           
  9919                           	psect	text27
  9920  001328                     __ptext27:
  9921                           	opt stack 0
  9922  001328                     _enc424j600_updateReceiveStatusVector:
  9923                           	opt stack 23
  9924                           
  9925                           ;ENC424J600.c: 720: RSV_t receiveStatusVector;
  9926                           ;ENC424J600.c: 723: receiveStatusVector.length = (uint16_t) ((*(rsv + 0)) | (uint16_t) (
      +                          ((*(rsv + 1)) << 8)&0xff00));
  9927                           
  9928                           ;incstack = 0
  9929  001328  0E00               	movlw	0
  9930  00132A  0100               	movlb	0	; () banked
  9931  00132C  6F65               	movwf	??_enc424j600_updateReceiveStatusVector& (0+255),b
  9932  00132E  0EFF               	movlw	255
  9933  001330  6F66               	movwf	(??_enc424j600_updateReceiveStatusVector+1)& (0+255),b
  9934  001332  EE20 F001          	lfsr	2,1
  9935  001336  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
  9936  001338  26D9               	addwf	fsr2l,f,c
  9937  00133A  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
  9938  00133C  22DA               	addwfc	fsr2h,f,c
  9939  00133E  50DF               	movf	indf2,w,c
  9940  001340  6F67               	movwf	(??_enc424j600_updateReceiveStatusVector+2)& (0+255),b
  9941  001342  5167               	movf	(??_enc424j600_updateReceiveStatusVector+2)& (0+255),w,b
  9942  001344  6F69               	movwf	(??_enc424j600_updateReceiveStatusVector+4)& (0+255),b
  9943  001346  6B68               	clrf	(??_enc424j600_updateReceiveStatusVector+3)& (0+255),b
  9944  001348  5165               	movf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
  9945  00134A  1768               	andwf	(??_enc424j600_updateReceiveStatusVector+3)& (0+255),f,b
  9946  00134C  5166               	movf	(??_enc424j600_updateReceiveStatusVector+1)& (0+255),w,b
  9947  00134E  1769               	andwf	(??_enc424j600_updateReceiveStatusVector+4)& (0+255),f,b
  9948  001350  C060  FFD9         	movff	enc424j600_updateReceiveStatusVector@rsv,fsr2l
  9949  001354  C061  FFDA         	movff	enc424j600_updateReceiveStatusVector@rsv+1,fsr2h
  9950  001358  50DF               	movf	indf2,w,c
  9951  00135A  6F6A               	movwf	(??_enc424j600_updateReceiveStatusVector+5)& (0+255),b
  9952  00135C  6B6B               	clrf	(??_enc424j600_updateReceiveStatusVector+6)& (0+255),b
  9953  00135E  5168               	movf	(??_enc424j600_updateReceiveStatusVector+3)& (0+255),w,b
  9954  001360  116A               	iorwf	(??_enc424j600_updateReceiveStatusVector+5)& (0+255),w,b
  9955  001362  6F6C               	movwf	enc424j600_updateReceiveStatusVector@receiveStatusVector& (0+255),b
  9956  001364  5169               	movf	(??_enc424j600_updateReceiveStatusVector+4)& (0+255),w,b
  9957  001366  116B               	iorwf	(??_enc424j600_updateReceiveStatusVector+6)& (0+255),w,b
  9958  001368  6F6D               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+1)& (0+255),b
  9959                           
  9960                           ;ENC424J600.c: 725: receiveStatusVector.packetPreviouslyIgnored = (uint8_t) (*(rsv + 2) 
      +                          & 0b00000001) != 0 ? 1 : 0;
  9961  00136A  EE20 F002          	lfsr	2,2
  9962  00136E  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
  9963  001370  26D9               	addwf	fsr2l,f,c
  9964  001372  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
  9965  001374  22DA               	addwfc	fsr2h,f,c
  9966  001376  A0DF               	btfss	indf2,0,c
  9967  001378  D003               	goto	u10490
  9968  00137A  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
  9969  00137C  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
  9970  00137E  D002               	goto	u10508
  9971  001380                     u10490:
  9972  001380  0100               	movlb	0	; () banked
  9973  001382  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
  9974  001384                     u10508:
  9975  001384  516E               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),w,b
  9976  001386  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
  9977  001388  0BFE               	andlw	-2
  9978  00138A  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
  9979  00138C  6F6E               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),b
  9980                           
  9981                           ;ENC424J600.c: 726: receiveStatusVector.carrierEventPreviouslySeen = (uint8_t) (*(rsv + 
      +                          2) & 0b00000100) != 0 ? 1 : 0;
  9982  00138E  EE20 F002          	lfsr	2,2
  9983  001392  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
  9984  001394  26D9               	addwf	fsr2l,f,c
  9985  001396  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
  9986  001398  22DA               	addwfc	fsr2h,f,c
  9987  00139A  A4DF               	btfss	indf2,2,c
  9988  00139C  D003               	goto	u10510
  9989  00139E  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
  9990  0013A0  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
  9991  0013A2  D002               	goto	u10528
  9992  0013A4                     u10510:
  9993  0013A4  0100               	movlb	0	; () banked
  9994  0013A6  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
  9995  0013A8                     u10528:
  9996  0013A8  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
  9997  0013AA  516E               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),w,b
  9998  0013AC  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
  9999  0013AE  0BFD               	andlw	-3
 10000  0013B0  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10001  0013B2  6F6E               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),b
 10002                           
 10003                           ;ENC424J600.c: 727: receiveStatusVector.CRCError = (uint8_t) (*(rsv + 2) & 0b00010000) !
      +                          = 0 ? 1 : 0;
 10004  0013B4  EE20 F002          	lfsr	2,2
 10005  0013B8  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10006  0013BA  26D9               	addwf	fsr2l,f,c
 10007  0013BC  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10008  0013BE  22DA               	addwfc	fsr2h,f,c
 10009  0013C0  A8DF               	btfss	indf2,4,c
 10010  0013C2  D003               	goto	u10530
 10011  0013C4  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10012  0013C6  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10013  0013C8  D002               	goto	u10548
 10014  0013CA                     u10530:
 10015  0013CA  0100               	movlb	0	; () banked
 10016  0013CC  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10017  0013CE                     u10548:
 10018  0013CE  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10019  0013D0  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10020  0013D2  516E               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),w,b
 10021  0013D4  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10022  0013D6  0BFB               	andlw	-5
 10023  0013D8  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10024  0013DA  6F6E               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),b
 10025                           
 10026                           ;ENC424J600.c: 728: receiveStatusVector.lengthCheckError = (uint8_t) (*(rsv + 2) & 0b001
      +                          00000) != 0 ? 1 : 0;
 10027  0013DC  EE20 F002          	lfsr	2,2
 10028  0013E0  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10029  0013E2  26D9               	addwf	fsr2l,f,c
 10030  0013E4  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10031  0013E6  22DA               	addwfc	fsr2h,f,c
 10032  0013E8  AADF               	btfss	indf2,5,c
 10033  0013EA  D003               	goto	u10550
 10034  0013EC  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10035  0013EE  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10036  0013F0  D002               	goto	u10568
 10037  0013F2                     u10550:
 10038  0013F2  0100               	movlb	0	; () banked
 10039  0013F4  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10040  0013F6                     u10568:
 10041  0013F6  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10042  0013F8  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10043  0013FA  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10044  0013FC  516E               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),w,b
 10045  0013FE  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10046  001400  0BF7               	andlw	-9
 10047  001402  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10048  001404  6F6E               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),b
 10049                           
 10050                           ;ENC424J600.c: 729: receiveStatusVector.lengthOutOfRange = (uint8_t) (*(rsv + 2) & 0b010
      +                          00000) != 0 ? 1 : 0;
 10051  001406  EE20 F002          	lfsr	2,2
 10052  00140A  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10053  00140C  26D9               	addwf	fsr2l,f,c
 10054  00140E  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10055  001410  22DA               	addwfc	fsr2h,f,c
 10056  001412  ACDF               	btfss	indf2,6,c
 10057  001414  D003               	goto	u10570
 10058  001416  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10059  001418  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10060  00141A  D002               	goto	u10588
 10061  00141C                     u10570:
 10062  00141C  0100               	movlb	0	; () banked
 10063  00141E  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10064  001420                     u10588:
 10065  001420  3B65               	swapf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10066  001422  516E               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),w,b
 10067  001424  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10068  001426  0BEF               	andlw	-17
 10069  001428  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10070  00142A  6F6E               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),b
 10071                           
 10072                           ;ENC424J600.c: 730: receiveStatusVector.receivedOk = (uint8_t) (*(rsv + 2) & 0b10000000)
      +                           != 0 ? 1 : 0;
 10073  00142C  EE20 F002          	lfsr	2,2
 10074  001430  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10075  001432  26D9               	addwf	fsr2l,f,c
 10076  001434  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10077  001436  22DA               	addwfc	fsr2h,f,c
 10078  001438  AEDF               	btfss	indf2,7,c
 10079  00143A  D003               	goto	u10590
 10080  00143C  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10081  00143E  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10082  001440  D002               	goto	u10608
 10083  001442                     u10590:
 10084  001442  0100               	movlb	0	; () banked
 10085  001444  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10086  001446                     u10608:
 10087  001446  3B65               	swapf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10088  001448  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10089  00144A  516E               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),w,b
 10090  00144C  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10091  00144E  0BDF               	andlw	-33
 10092  001450  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10093  001452  6F6E               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),b
 10094                           
 10095                           ;ENC424J600.c: 732: receiveStatusVector.multicast = (uint8_t) (*(rsv + 3) & 0b00000001) 
      +                          != 0 ? 1 : 0;
 10096  001454  EE20 F003          	lfsr	2,3
 10097  001458  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10098  00145A  26D9               	addwf	fsr2l,f,c
 10099  00145C  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10100  00145E  22DA               	addwfc	fsr2h,f,c
 10101  001460  A0DF               	btfss	indf2,0,c
 10102  001462  D003               	goto	u10610
 10103  001464  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10104  001466  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10105  001468  D002               	goto	u10628
 10106  00146A                     u10610:
 10107  00146A  0100               	movlb	0	; () banked
 10108  00146C  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10109  00146E                     u10628:
 10110  00146E  3B65               	swapf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10111  001470  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10112  001472  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10113  001474  516E               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),w,b
 10114  001476  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10115  001478  0BBF               	andlw	-65
 10116  00147A  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10117  00147C  6F6E               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),b
 10118                           
 10119                           ;ENC424J600.c: 733: receiveStatusVector.broadcast = (uint8_t) (*(rsv + 3) & 0b00000010) 
      +                          != 0 ? 1 : 0;
 10120  00147E  EE20 F003          	lfsr	2,3
 10121  001482  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10122  001484  26D9               	addwf	fsr2l,f,c
 10123  001486  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10124  001488  22DA               	addwfc	fsr2h,f,c
 10125  00148A  A2DF               	btfss	indf2,1,c
 10126  00148C  D003               	goto	u10630
 10127  00148E  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10128  001490  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10129  001492  D002               	goto	u10648
 10130  001494                     u10630:
 10131  001494  0100               	movlb	0	; () banked
 10132  001496  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10133  001498                     u10648:
 10134  001498  3365               	rrcf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10135  00149A  3365               	rrcf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10136  00149C  516E               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),w,b
 10137  00149E  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10138  0014A0  0B7F               	andlw	-129
 10139  0014A2  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10140  0014A4  6F6E               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+2)& (0+255),b
 10141                           
 10142                           ;ENC424J600.c: 734: receiveStatusVector.controlFrame = (uint8_t) (*(rsv + 3) & 0b0000100
      +                          0) != 0 ? 1 : 0;
 10143  0014A6  EE20 F003          	lfsr	2,3
 10144  0014AA  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10145  0014AC  26D9               	addwf	fsr2l,f,c
 10146  0014AE  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10147  0014B0  22DA               	addwfc	fsr2h,f,c
 10148  0014B2  A6DF               	btfss	indf2,3,c
 10149  0014B4  D003               	goto	u10650
 10150  0014B6  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10151  0014B8  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10152  0014BA  D002               	goto	u10668
 10153  0014BC                     u10650:
 10154  0014BC  0100               	movlb	0	; () banked
 10155  0014BE  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10156  0014C0                     u10668:
 10157  0014C0  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10158  0014C2  516F               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+3)& (0+255),w,b
 10159  0014C4  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10160  0014C6  0BFD               	andlw	-3
 10161  0014C8  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10162  0014CA  6F6F               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+3)& (0+255),b
 10163                           
 10164                           ;ENC424J600.c: 735: receiveStatusVector.pauseFrame = (uint8_t) (*(rsv + 3) & 0b00010000)
      +                           != 0 ? 1 : 0;
 10165  0014CC  EE20 F003          	lfsr	2,3
 10166  0014D0  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10167  0014D2  26D9               	addwf	fsr2l,f,c
 10168  0014D4  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10169  0014D6  22DA               	addwfc	fsr2h,f,c
 10170  0014D8  A8DF               	btfss	indf2,4,c
 10171  0014DA  D003               	goto	u10670
 10172  0014DC  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10173  0014DE  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10174  0014E0  D002               	goto	u10688
 10175  0014E2                     u10670:
 10176  0014E2  0100               	movlb	0	; () banked
 10177  0014E4  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10178  0014E6                     u10688:
 10179  0014E6  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10180  0014E8  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10181  0014EA  516F               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+3)& (0+255),w,b
 10182  0014EC  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10183  0014EE  0BFB               	andlw	-5
 10184  0014F0  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10185  0014F2  6F6F               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+3)& (0+255),b
 10186                           
 10187                           ;ENC424J600.c: 736: receiveStatusVector.unknownOpcode = (uint8_t) (*(rsv + 3) & 0b001000
      +                          00) != 0 ? 1 : 0;
 10188  0014F4  EE20 F003          	lfsr	2,3
 10189  0014F8  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10190  0014FA  26D9               	addwf	fsr2l,f,c
 10191  0014FC  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10192  0014FE  22DA               	addwfc	fsr2h,f,c
 10193  001500  AADF               	btfss	indf2,5,c
 10194  001502  D003               	goto	u10690
 10195  001504  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10196  001506  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10197  001508  D002               	goto	u10708
 10198  00150A                     u10690:
 10199  00150A  0100               	movlb	0	; () banked
 10200  00150C  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10201  00150E                     u10708:
 10202  00150E  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10203  001510  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10204  001512  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10205  001514  516F               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+3)& (0+255),w,b
 10206  001516  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10207  001518  0BF7               	andlw	-9
 10208  00151A  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10209  00151C  6F6F               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+3)& (0+255),b
 10210                           
 10211                           ;ENC424J600.c: 737: receiveStatusVector.vlan = (uint8_t) (*(rsv + 3) & 0b01000000) != 0 
      +                          ? 1 : 0;
 10212  00151E  EE20 F003          	lfsr	2,3
 10213  001522  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10214  001524  26D9               	addwf	fsr2l,f,c
 10215  001526  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10216  001528  22DA               	addwfc	fsr2h,f,c
 10217  00152A  ACDF               	btfss	indf2,6,c
 10218  00152C  D003               	goto	u10710
 10219  00152E  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10220  001530  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10221  001532  D002               	goto	u10728
 10222  001534                     u10710:
 10223  001534  0100               	movlb	0	; () banked
 10224  001536  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10225  001538                     u10728:
 10226  001538  3B65               	swapf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10227  00153A  516F               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+3)& (0+255),w,b
 10228  00153C  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10229  00153E  0BEF               	andlw	-17
 10230  001540  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10231  001542  6F6F               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+3)& (0+255),b
 10232                           
 10233                           ;ENC424J600.c: 738: receiveStatusVector.runtFilter = (uint8_t) (*(rsv + 3) & 0b10000000)
      +                           != 0 ? 1 : 0;
 10234  001544  EE20 F003          	lfsr	2,3
 10235  001548  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10236  00154A  26D9               	addwf	fsr2l,f,c
 10237  00154C  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10238  00154E  22DA               	addwfc	fsr2h,f,c
 10239  001550  AEDF               	btfss	indf2,7,c
 10240  001552  D003               	goto	u10730
 10241  001554  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10242  001556  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10243  001558  D002               	goto	u10748
 10244  00155A                     u10730:
 10245  00155A  0100               	movlb	0	; () banked
 10246  00155C  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10247  00155E                     u10748:
 10248  00155E  3B65               	swapf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10249  001560  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10250  001562  516F               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+3)& (0+255),w,b
 10251  001564  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10252  001566  0BDF               	andlw	-33
 10253  001568  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10254  00156A  6F6F               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+3)& (0+255),b
 10255                           
 10256                           ;ENC424J600.c: 740: receiveStatusVector.notMeFilter = (uint8_t) (*(rsv + 4) & 0b00000001
      +                          ) != 0 ? 1 : 0;
 10257  00156C  EE20 F004          	lfsr	2,4
 10258  001570  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10259  001572  26D9               	addwf	fsr2l,f,c
 10260  001574  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10261  001576  22DA               	addwfc	fsr2h,f,c
 10262  001578  A0DF               	btfss	indf2,0,c
 10263  00157A  D003               	goto	u10750
 10264  00157C  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10265  00157E  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10266  001580  D002               	goto	u10768
 10267  001582                     u10750:
 10268  001582  0100               	movlb	0	; () banked
 10269  001584  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10270  001586                     u10768:
 10271  001586  3B65               	swapf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10272  001588  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10273  00158A  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10274  00158C  516F               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+3)& (0+255),w,b
 10275  00158E  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10276  001590  0BBF               	andlw	-65
 10277  001592  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10278  001594  6F6F               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+3)& (0+255),b
 10279                           
 10280                           ;ENC424J600.c: 741: receiveStatusVector.hashFilter = (uint8_t) (*(rsv + 4) & 0b00000010)
      +                           != 0 ? 1 : 0;
 10281  001596  EE20 F004          	lfsr	2,4
 10282  00159A  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10283  00159C  26D9               	addwf	fsr2l,f,c
 10284  00159E  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10285  0015A0  22DA               	addwfc	fsr2h,f,c
 10286  0015A2  A2DF               	btfss	indf2,1,c
 10287  0015A4  D003               	goto	u10770
 10288  0015A6  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10289  0015A8  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10290  0015AA  D002               	goto	u10788
 10291  0015AC                     u10770:
 10292  0015AC  0100               	movlb	0	; () banked
 10293  0015AE  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10294  0015B0                     u10788:
 10295  0015B0  3365               	rrcf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10296  0015B2  3365               	rrcf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10297  0015B4  516F               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+3)& (0+255),w,b
 10298  0015B6  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10299  0015B8  0B7F               	andlw	-129
 10300  0015BA  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10301  0015BC  6F6F               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+3)& (0+255),b
 10302                           
 10303                           ;ENC424J600.c: 742: receiveStatusVector.magicFilter = (uint8_t) (*(rsv + 4) & 0b00000100
      +                          ) != 0 ? 1 : 0;
 10304  0015BE  EE20 F004          	lfsr	2,4
 10305  0015C2  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10306  0015C4  26D9               	addwf	fsr2l,f,c
 10307  0015C6  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10308  0015C8  22DA               	addwfc	fsr2h,f,c
 10309  0015CA  A4DF               	btfss	indf2,2,c
 10310  0015CC  D003               	goto	u10790
 10311  0015CE  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10312  0015D0  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10313  0015D2  D002               	goto	u10808
 10314  0015D4                     u10790:
 10315  0015D4  0100               	movlb	0	; () banked
 10316  0015D6  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10317  0015D8                     u10808:
 10318  0015D8  5170               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+4)& (0+255),w,b
 10319  0015DA  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10320  0015DC  0BFE               	andlw	-2
 10321  0015DE  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10322  0015E0  6F70               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+4)& (0+255),b
 10323                           
 10324                           ;ENC424J600.c: 743: receiveStatusVector.patternMatch = (uint8_t) (*(rsv + 4) & 0b0000100
      +                          0) != 0 ? 1 : 0;
 10325  0015E2  EE20 F004          	lfsr	2,4
 10326  0015E6  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10327  0015E8  26D9               	addwf	fsr2l,f,c
 10328  0015EA  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10329  0015EC  22DA               	addwfc	fsr2h,f,c
 10330  0015EE  A6DF               	btfss	indf2,3,c
 10331  0015F0  D003               	goto	u10810
 10332  0015F2  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10333  0015F4  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10334  0015F6  D002               	goto	u10828
 10335  0015F8                     u10810:
 10336  0015F8  0100               	movlb	0	; () banked
 10337  0015FA  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10338  0015FC                     u10828:
 10339  0015FC  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10340  0015FE  5170               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+4)& (0+255),w,b
 10341  001600  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10342  001602  0BFD               	andlw	-3
 10343  001604  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10344  001606  6F70               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+4)& (0+255),b
 10345                           
 10346                           ;ENC424J600.c: 744: receiveStatusVector.unicast = (uint8_t) (*(rsv + 4) & 0b00010000) !=
      +                           0 ? 1 : 0;
 10347  001608  EE20 F004          	lfsr	2,4
 10348  00160C  5160               	movf	enc424j600_updateReceiveStatusVector@rsv& (0+255),w,b
 10349  00160E  26D9               	addwf	fsr2l,f,c
 10350  001610  5161               	movf	(enc424j600_updateReceiveStatusVector@rsv+1)& (0+255),w,b
 10351  001612  22DA               	addwfc	fsr2h,f,c
 10352  001614  A8DF               	btfss	indf2,4,c
 10353  001616  D003               	goto	u10830
 10354  001618  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10355  00161A  2B65               	incf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10356  00161C  D002               	goto	u10848
 10357  00161E                     u10830:
 10358  00161E  0100               	movlb	0	; () banked
 10359  001620  6B65               	clrf	??_enc424j600_updateReceiveStatusVector& (0+255),b
 10360  001622                     u10848:
 10361  001622  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10362  001624  4765               	rlncf	??_enc424j600_updateReceiveStatusVector& (0+255),f,b
 10363  001626  5170               	movf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+4)& (0+255),w,b
 10364  001628  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10365  00162A  0BFB               	andlw	-5
 10366  00162C  1965               	xorwf	??_enc424j600_updateReceiveStatusVector& (0+255),w,b
 10367  00162E  6F70               	movwf	(enc424j600_updateReceiveStatusVector@receiveStatusVector+4)& (0+255),b
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;ENC424J600.c: 746: return receiveStatusVector;
 10371  001630  EE20  F06C         	lfsr	2,enc424j600_updateReceiveStatusVector@receiveStatusVector
 10372  001634  EE00  F060         	lfsr	0,?_enc424j600_updateReceiveStatusVector
 10373  001638  0E04               	movlw	4
 10374  00163A                     u10851:
 10375  00163A  CFDB FFEB          	movff	plusw2,plusw0
 10376  00163E  06E8               	decf	wreg,f,c
 10377  001640  E2FC               	bc	u10851
 10378  001642  0012               	return	
 10379  001644                     __end_of_enc424j600_updateReceiveStatusVector:
 10380                           	opt stack 0
 10381                           tblptru	equ	0xFF8
 10382                           tblptrh	equ	0xFF7
 10383                           tblptrl	equ	0xFF6
 10384                           tablat	equ	0xFF5
 10385                           prodh	equ	0xFF4
 10386                           prodl	equ	0xFF3
 10387                           intcon	equ	0xFF2
 10388                           intcon3	equ	0xFF0
 10389                           indf0	equ	0xFEF
 10390                           postinc0	equ	0xFEE
 10391                           plusw0	equ	0xFEB
 10392                           fsr0h	equ	0xFEA
 10393                           fsr0l	equ	0xFE9
 10394                           wreg	equ	0xFE8
 10395                           indf1	equ	0xFE7
 10396                           postinc1	equ	0xFE6
 10397                           postdec1	equ	0xFE5
 10398                           plusw1	equ	0xFE3
 10399                           fsr1h	equ	0xFE2
 10400                           fsr1l	equ	0xFE1
 10401                           indf2	equ	0xFDF
 10402                           postinc2	equ	0xFDE
 10403                           postdec2	equ	0xFDD
 10404                           plusw2	equ	0xFDB
 10405                           fsr2h	equ	0xFDA
 10406                           fsr2l	equ	0xFD9
 10407                           status	equ	0xFD8
 10408                           
 10409 ;; *************** function _ethernetController_getEtherTypeField *****************
 10410 ;; Defined at:
 10411 ;;		line 283 in file "src/enc424j600/ENC424J600.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;  field           9   15[BANK0 ] struct memoryField
 10414 ;; Auto vars:     Size  Location     Type
 10415 ;;  ethertype       2   28[BANK0 ] enum E5509
 10416 ;;  highByte        1   32[BANK0 ] unsigned char 
 10417 ;;  lowByte         1   31[BANK0 ] unsigned char 
 10418 ;;  opcode          1   30[BANK0 ] unsigned char 
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  2   15[BANK0 ] enum E5509
 10421 ;; Registers used:
 10422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10423 ;; Tracked objects:
 10424 ;;		On entry : 0/0
 10425 ;;		On exit  : 0/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10428 ;;      Params:         0       9       0       0       0       0       0       0       0
 10429 ;;      Locals:         0       5       0       0       0       0       0       0       0
 10430 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10431 ;;      Totals:         0      18       0       0       0       0       0       0       0
 10432 ;;Total ram usage:       18 bytes
 10433 ;; Hardware stack levels used:    1
 10434 ;; Hardware stack levels required when called:    7
 10435 ;; This function calls:
 10436 ;;		_enc424j600_readSPI
 10437 ;;		_enc424j600_setERXDATAReadPointer
 10438 ;;		_enc424j600_writeSPI
 10439 ;; This function is called by:
 10440 ;;		_ethernet_rxGetNewFrame
 10441 ;; This function uses a non-reentrant model
 10442 ;;
 10443                           
 10444                           	psect	text28
 10445  004B2C                     __ptext28:
 10446                           	opt stack 0
 10447  004B2C                     _ethernetController_getEtherTypeField:
 10448                           	opt stack 21
 10449                           
 10450                           ;ENC424J600.c: 284: etherType_t ethertype = 0x0000;
 10451                           
 10452                           ; BSR set to: 0
 10453                           ;incstack = 0
 10454  004B2C  0E00               	movlw	0
 10455  004B2E  0100               	movlb	0	; () banked
 10456  004B30  6F7D               	movwf	(ethernetController_getEtherTypeField@ethertype+1)& (0+255),b
 10457  004B32  0E00               	movlw	0
 10458  004B34  6F7C               	movwf	ethernetController_getEtherTypeField@ethertype& (0+255),b
 10459                           
 10460                           ; BSR set to: 0
 10461                           ;ENC424J600.c: 285: enc424j600_setERXDATAReadPointer(field.start + 20);
 10462  004B36  0E14               	movlw	20
 10463  004B38  256F               	addwf	ethernetController_getEtherTypeField@field& (0+255),w,b
 10464  004B3A  6F6A               	movwf	enc424j600_setERXDATAReadPointer@addr& (0+255),b
 10465  004B3C  0E00               	movlw	0
 10466  004B3E  2170               	addwfc	(ethernetController_getEtherTypeField@field+1)& (0+255),w,b
 10467  004B40  6F6B               	movwf	(enc424j600_setERXDATAReadPointer@addr+1)& (0+255),b
 10468  004B42  EC4C  F029         	call	_enc424j600_setERXDATAReadPointer	;wreg free
 10469                           
 10470                           ;ENC424J600.c: 286: uint8_t opcode = 0x2C;
 10471  004B46  0E2C               	movlw	44
 10472  004B48  0100               	movlb	0	; () banked
 10473  004B4A  6F7E               	movwf	ethernetController_getEtherTypeField@opcode& (0+255),b
 10474                           
 10475                           ; BSR set to: 0
 10476                           ;ENC424J600.c: 287: PORTBbits.RB4=0;
 10477  004B4C  9881               	bcf	3969,4,c	;volatile
 10478                           
 10479                           ;ENC424J600.c: 288: enc424j600_writeSPI(&opcode);
 10480  004B4E  0E7E               	movlw	low ethernetController_getEtherTypeField@opcode
 10481  004B50  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 10482  004B52  0E00               	movlw	high ethernetController_getEtherTypeField@opcode
 10483  004B54  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 10484  004B56  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 10485                           
 10486                           ;ENC424J600.c: 290: uint8_t lowByte;
 10487                           ;ENC424J600.c: 291: uint8_t highByte;
 10488                           ;ENC424J600.c: 292: enc424j600_readSPI(&highByte);
 10489  004B5A  0E80               	movlw	low ethernetController_getEtherTypeField@highByte
 10490  004B5C  0100               	movlb	0	; () banked
 10491  004B5E  6F60               	movwf	enc424j600_readSPI@data& (0+255),b
 10492  004B60  0E00               	movlw	high ethernetController_getEtherTypeField@highByte
 10493  004B62  6F61               	movwf	(enc424j600_readSPI@data+1)& (0+255),b
 10494  004B64  EC06  F026         	call	_enc424j600_readSPI	;wreg free
 10495                           
 10496                           ;ENC424J600.c: 293: enc424j600_readSPI(&lowByte);
 10497  004B68  0E7F               	movlw	low ethernetController_getEtherTypeField@lowByte
 10498  004B6A  0100               	movlb	0	; () banked
 10499  004B6C  6F60               	movwf	enc424j600_readSPI@data& (0+255),b
 10500  004B6E  0E00               	movlw	high ethernetController_getEtherTypeField@lowByte
 10501  004B70  6F61               	movwf	(enc424j600_readSPI@data+1)& (0+255),b
 10502  004B72  EC06  F026         	call	_enc424j600_readSPI	;wreg free
 10503                           
 10504                           ;ENC424J600.c: 294: ethertype = (uint16_t) (lowByte | (highByte << 8));
 10505  004B76  0100               	movlb	0	; () banked
 10506  004B78  5180               	movf	ethernetController_getEtherTypeField@highByte& (0+255),w,b
 10507  004B7A  6F79               	movwf	(??_ethernetController_getEtherTypeField+1)& (0+255),b
 10508  004B7C  6B78               	clrf	??_ethernetController_getEtherTypeField& (0+255),b
 10509  004B7E  517F               	movf	ethernetController_getEtherTypeField@lowByte& (0+255),w,b
 10510  004B80  6F7A               	movwf	(??_ethernetController_getEtherTypeField+2)& (0+255),b
 10511  004B82  6B7B               	clrf	(??_ethernetController_getEtherTypeField+3)& (0+255),b
 10512  004B84  5178               	movf	??_ethernetController_getEtherTypeField& (0+255),w,b
 10513  004B86  117A               	iorwf	(??_ethernetController_getEtherTypeField+2)& (0+255),w,b
 10514  004B88  6F7C               	movwf	ethernetController_getEtherTypeField@ethertype& (0+255),b
 10515  004B8A  5179               	movf	(??_ethernetController_getEtherTypeField+1)& (0+255),w,b
 10516  004B8C  117B               	iorwf	(??_ethernetController_getEtherTypeField+3)& (0+255),w,b
 10517  004B8E  6F7D               	movwf	(ethernetController_getEtherTypeField@ethertype+1)& (0+255),b
 10518                           
 10519                           ; BSR set to: 0
 10520                           ;ENC424J600.c: 295: PORTBbits.RB4=1;
 10521  004B90  8881               	bsf	3969,4,c	;volatile
 10522                           
 10523                           ; BSR set to: 0
 10524                           ;ENC424J600.c: 296: return ethertype;
 10525  004B92  C07C  F06F         	movff	ethernetController_getEtherTypeField@ethertype,?_ethernetController_getEtherTypeF
      +                          ield
 10526  004B96  C07D  F070         	movff	ethernetController_getEtherTypeField@ethertype+1,?_ethernetController_getEtherTyp
      +                          eField+1
 10527  004B9A  0012               	return	
 10528  004B9C                     __end_of_ethernetController_getEtherTypeField:
 10529                           	opt stack 0
 10530                           tblptru	equ	0xFF8
 10531                           tblptrh	equ	0xFF7
 10532                           tblptrl	equ	0xFF6
 10533                           tablat	equ	0xFF5
 10534                           prodh	equ	0xFF4
 10535                           prodl	equ	0xFF3
 10536                           intcon	equ	0xFF2
 10537                           intcon3	equ	0xFF0
 10538                           indf0	equ	0xFEF
 10539                           postinc0	equ	0xFEE
 10540                           plusw0	equ	0xFEB
 10541                           fsr0h	equ	0xFEA
 10542                           fsr0l	equ	0xFE9
 10543                           wreg	equ	0xFE8
 10544                           indf1	equ	0xFE7
 10545                           postinc1	equ	0xFE6
 10546                           postdec1	equ	0xFE5
 10547                           plusw1	equ	0xFE3
 10548                           fsr1h	equ	0xFE2
 10549                           fsr1l	equ	0xFE1
 10550                           indf2	equ	0xFDF
 10551                           postinc2	equ	0xFDE
 10552                           postdec2	equ	0xFDD
 10553                           plusw2	equ	0xFDB
 10554                           fsr2h	equ	0xFDA
 10555                           fsr2l	equ	0xFD9
 10556                           status	equ	0xFD8
 10557                           
 10558 ;; *************** function _etherTypeToString *****************
 10559 ;; Defined at:
 10560 ;;		line 138 in file "src/system/uart.c"
 10561 ;; Parameters:    Size  Location     Type
 10562 ;;  ethertype       2    0[BANK0 ] enum E5590
 10563 ;; Auto vars:     Size  Location     Type
 10564 ;;		None
 10565 ;; Return value:  Size  Location     Type
 10566 ;;                  2    0[BANK0 ] PTR unsigned char 
 10567 ;; Registers used:
 10568 ;;		wreg, status,2, status,0
 10569 ;; Tracked objects:
 10570 ;;		On entry : 0/0
 10571 ;;		On exit  : 0/0
 10572 ;;		Unchanged: 0/0
 10573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10574 ;;      Params:         0       2       0       0       0       0       0       0       0
 10575 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10576 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10577 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10578 ;;Total ram usage:        4 bytes
 10579 ;; Hardware stack levels used:    1
 10580 ;; Hardware stack levels required when called:    4
 10581 ;; This function calls:
 10582 ;;		Nothing
 10583 ;; This function is called by:
 10584 ;;		_ethernet_rxGetNewFrame
 10585 ;; This function uses a non-reentrant model
 10586 ;;
 10587                           
 10588                           	psect	text29
 10589  005114                     __ptext29:
 10590                           	opt stack 0
 10591  005114                     _etherTypeToString:
 10592                           	opt stack 24
 10593                           
 10594                           ;uart.c: 139: switch (ethertype) {
 10595                           
 10596                           ; BSR set to: 0
 10597                           ;incstack = 0
 10598  005114  D010               	goto	l834
 10599  005116                     
 10600                           ;uart.c: 141: return "IPv4";
 10601  005116  0EC5               	movlw	low STR_63
 10602  005118  0100               	movlb	0	; () banked
 10603  00511A  6F60               	movwf	?_etherTypeToString& (0+255),b
 10604  00511C  0E7F               	movlw	high STR_63
 10605  00511E  6F61               	movwf	(?_etherTypeToString+1)& (0+255),b
 10606                           
 10607                           ; BSR set to: 0
 10608  005120  0012               	return	
 10609  005122                     
 10610                           ; BSR set to: 0
 10611                           ;uart.c: 143: return "ARP";
 10612                           
 10613                           ; BSR set to: 0
 10614  005122  0EE6               	movlw	low STR_64
 10615  005124  6F60               	movwf	?_etherTypeToString& (0+255),b
 10616  005126  0E7F               	movlw	high STR_64
 10617  005128  6F61               	movwf	(?_etherTypeToString+1)& (0+255),b
 10618                           
 10619                           ; BSR set to: 0
 10620  00512A  0012               	return	
 10621  00512C                     
 10622                           ; BSR set to: 0
 10623                           ;uart.c: 145: return "Unknown EtherType";
 10624                           
 10625                           ; BSR set to: 0
 10626  00512C  0E96               	movlw	low STR_65
 10627  00512E  6F60               	movwf	?_etherTypeToString& (0+255),b
 10628  005130  0E7E               	movlw	high STR_65
 10629  005132  6F61               	movwf	(?_etherTypeToString+1)& (0+255),b
 10630                           
 10631                           ; BSR set to: 0
 10632                           ;uart.c: 146: }
 10633                           
 10634                           ; BSR set to: 0
 10635  005134  0012               	return	
 10636  005136                     l834:
 10637                           
 10638                           ; BSR set to: 0
 10639  005136  C060  F062         	movff	etherTypeToString@ethertype,??_etherTypeToString
 10640  00513A  C061  F063         	movff	etherTypeToString@ethertype+1,??_etherTypeToString+1
 10641                           
 10642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10643                           ; Switch size 1, requested type "space"
 10644                           ; Number of cases is 1, Range of values is 8 to 8
 10645                           ; switch strategies available:
 10646                           ; Name         Instructions Cycles
 10647                           ; simple_byte            4     3 (average)
 10648                           ;	Chosen strategy is simple_byte
 10649  00513E  0100               	movlb	0	; () banked
 10650  005140  5163               	movf	(??_etherTypeToString+1)& (0+255),w,b
 10651  005142  0A08               	xorlw	8	; case 8
 10652  005144  A4D8               	btfss	status,2,c
 10653  005146  D7F2               	goto	l838
 10654                           
 10655                           ; BSR set to: 0
 10656                           ; Switch size 1, requested type "space"
 10657                           ; Number of cases is 2, Range of values is 0 to 6
 10658                           ; switch strategies available:
 10659                           ; Name         Instructions Cycles
 10660                           ; simple_byte            7     4 (average)
 10661                           ;	Chosen strategy is simple_byte
 10662  005148  5162               	movf	??_etherTypeToString& (0+255),w,b
 10663  00514A  0A00               	xorlw	0	; case 0
 10664  00514C  B4D8               	btfsc	status,2,c
 10665  00514E  D7E3               	goto	l835
 10666  005150  0A06               	xorlw	6	; case 6
 10667  005152  B4D8               	btfsc	status,2,c
 10668  005154  D7E6               	goto	l837
 10669  005156  D7EA               	goto	l838
 10670  005158                     __end_of_etherTypeToString:
 10671                           	opt stack 0
 10672                           tblptru	equ	0xFF8
 10673                           tblptrh	equ	0xFF7
 10674                           tblptrl	equ	0xFF6
 10675                           tablat	equ	0xFF5
 10676                           prodh	equ	0xFF4
 10677                           prodl	equ	0xFF3
 10678                           intcon	equ	0xFF2
 10679                           intcon3	equ	0xFF0
 10680                           indf0	equ	0xFEF
 10681                           postinc0	equ	0xFEE
 10682                           plusw0	equ	0xFEB
 10683                           fsr0h	equ	0xFEA
 10684                           fsr0l	equ	0xFE9
 10685                           wreg	equ	0xFE8
 10686                           indf1	equ	0xFE7
 10687                           postinc1	equ	0xFE6
 10688                           postdec1	equ	0xFE5
 10689                           plusw1	equ	0xFE3
 10690                           fsr1h	equ	0xFE2
 10691                           fsr1l	equ	0xFE1
 10692                           indf2	equ	0xFDF
 10693                           postinc2	equ	0xFDE
 10694                           postdec2	equ	0xFDD
 10695                           plusw2	equ	0xFDB
 10696                           fsr2h	equ	0xFDA
 10697                           fsr2l	equ	0xFD9
 10698                           status	equ	0xFD8
 10699                           
 10700 ;; *************** function _arp_handleNewPacket *****************
 10701 ;; Defined at:
 10702 ;;		line 33 in file "src/stack/protocols/arp.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;  frame           2  156[BANK0 ] PTR struct ethernetFrame
 10705 ;;		 -> stack(123), 
 10706 ;; Auto vars:     Size  Location     Type
 10707 ;;  arp            32   88[BANK1 ] struct arp_message
 10708 ;; Return value:  Size  Location     Type
 10709 ;;                  1    wreg      void 
 10710 ;; Registers used:
 10711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10712 ;; Tracked objects:
 10713 ;;		On entry : 0/0
 10714 ;;		On exit  : 0/0
 10715 ;;		Unchanged: 0/0
 10716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10717 ;;      Params:         0       2       0       0       0       0       0       0       0
 10718 ;;      Locals:         0       0      32       0       0       0       0       0       0
 10719 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10720 ;;      Totals:         0       4      32       0       0       0       0       0       0
 10721 ;;Total ram usage:       36 bytes
 10722 ;; Hardware stack levels used:    1
 10723 ;; Hardware stack levels required when called:   11
 10724 ;; This function calls:
 10725 ;;		_UARTTransmitText
 10726 ;;		_arp_parseFromRXBuffer
 10727 ;;		_arp_sendReply
 10728 ;;		_arp_setNewEntry
 10729 ;;		_ethernetController_dropPacket
 10730 ;;		_getMillis
 10731 ;;		_ipAdressToString
 10732 ;;		_ipv4_isAllZero
 10733 ;;		_macToString
 10734 ;; This function is called by:
 10735 ;;		_ethernet_rxGetNewFrame
 10736 ;; This function uses a non-reentrant model
 10737 ;;
 10738                           
 10739                           	psect	text30
 10740  0029D4                     __ptext30:
 10741                           	opt stack 0
 10742  0029D4                     _arp_handleNewPacket:
 10743                           	opt stack 17
 10744                           
 10745                           ;arp.c: 34: arp_message_t arp;
 10746                           ;arp.c: 35: if (frame->ethertype != ETHERTYPE_ARP) {
 10747                           
 10748                           ; BSR set to: 0
 10749                           ;incstack = 0
 10750  0029D4  0100               	movlb	0	; () banked
 10751  0029D6  EE20 F00E          	lfsr	2,14
 10752  0029DA  51FC               	movf	arp_handleNewPacket@frame& (0+255),w,b
 10753  0029DC  26D9               	addwf	fsr2l,f,c
 10754  0029DE  51FD               	movf	(arp_handleNewPacket@frame+1)& (0+255),w,b
 10755  0029E0  22DA               	addwfc	fsr2h,f,c
 10756  0029E2  0E06               	movlw	6
 10757  0029E4  18DE               	xorwf	postinc2,w,c
 10758  0029E6  E104               	bnz	u11450
 10759  0029E8  0E08               	movlw	8
 10760  0029EA  18DE               	xorwf	postinc2,w,c
 10761  0029EC  B4D8               	btfsc	status,2,c
 10762  0029EE  D007               	goto	l935
 10763  0029F0                     u11450:
 10764                           
 10765                           ; BSR set to: 0
 10766                           ;arp.c: 36: ethernetController_dropPacket(frame);
 10767  0029F0  C0FC  F072         	movff	arp_handleNewPacket@frame,?_ethernetController_dropPacket
 10768  0029F4  C0FD  F073         	movff	arp_handleNewPacket@frame+1,?_ethernetController_dropPacket+1
 10769  0029F8  EC10  F029         	call	_ethernetController_dropPacket	;wreg free
 10770                           
 10771                           ;arp.c: 37: return;
 10772  0029FC  0012               	return	
 10773  0029FE                     l935:
 10774                           
 10775                           ;arp.c: 38: }
 10776                           ;arp.c: 40: arp = arp_parseFromRXBuffer(frame);
 10777  0029FE  C0FC  F074         	movff	arp_handleNewPacket@frame,arp_parseFromRXBuffer@frame
 10778  002A02  C0FD  F075         	movff	arp_handleNewPacket@frame+1,arp_parseFromRXBuffer@frame+1
 10779  002A06  EC97  F007         	call	_arp_parseFromRXBuffer	;wreg free
 10780  002A0A  EE21  F058         	lfsr	2,arp_handleNewPacket@arp
 10781  002A0E  0E1F               	movlw	31
 10782  002A10                     u11461:
 10783  002A10  CFEB FFDB          	movff	plusw0,plusw2
 10784  002A14  06E8               	decf	wreg,f,c
 10785  002A16  E2FC               	bc	u11461
 10786                           
 10787                           ;arp.c: 41: if (arp.err.code != (uint16_t)0) {
 10788  002A18  0101               	movlb	1	; () banked
 10789  002A1A  5176               	movf	(arp_handleNewPacket@arp+30)& (0+255),w,b
 10790  002A1C  1177               	iorwf	(arp_handleNewPacket@arp+31)& (0+255),w,b
 10791  002A1E  B4D8               	btfsc	status,2,c
 10792  002A20  D00E               	goto	l937
 10793                           
 10794                           ; BSR set to: 1
 10795                           ;arp.c: 42: ethernetController_dropPacket(frame);
 10796  002A22  C0FC  F072         	movff	arp_handleNewPacket@frame,?_ethernetController_dropPacket
 10797  002A26  C0FD  F073         	movff	arp_handleNewPacket@frame+1,?_ethernetController_dropPacket+1
 10798  002A2A  EC10  F029         	call	_ethernetController_dropPacket	;wreg free
 10799                           
 10800                           ;arp.c: 44: UARTTransmitText("[Invalid ARP Message was discarded.]\r\n");
 10801  002A2E  0E3E               	movlw	low STR_70
 10802  002A30  0100               	movlb	0	; () banked
 10803  002A32  6F98               	movwf	UARTTransmitText@str& (0+255),b
 10804  002A34  0E7B               	movlw	high STR_70
 10805  002A36  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 10806  002A38  EC27  F027         	call	_UARTTransmitText	;wreg free
 10807                           
 10808                           ;arp.c: 46: return;
 10809  002A3C  0012               	return	
 10810  002A3E                     l937:
 10811                           
 10812                           ;arp.c: 47: }
 10813                           ;arp.c: 49: UARTTransmitText("[");
 10814  002A3E  0EC3               	movlw	low (STR_73+3)
 10815  002A40  0100               	movlb	0	; () banked
 10816  002A42  6F98               	movwf	UARTTransmitText@str& (0+255),b
 10817  002A44  0E7F               	movlw	high (STR_73+3)
 10818  002A46  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 10819  002A48  EC27  F027         	call	_UARTTransmitText	;wreg free
 10820                           
 10821                           ;arp.c: 50: UARTTransmitText(macToString(arp.senderMACAddress));
 10822  002A4C  EE21  F060         	lfsr	2,arp_handleNewPacket@arp+8
 10823  002A50  EE00  F07A         	lfsr	0,macToString@addr
 10824  002A54  0E05               	movlw	5
 10825  002A56                     u11481:
 10826  002A56  CFDB FFEB          	movff	plusw2,plusw0
 10827  002A5A  06E8               	decf	wreg,f,c
 10828  002A5C  E2FC               	bc	u11481
 10829  002A5E  ECBB  F01D         	call	_macToString	;wreg free
 10830  002A62  C07A  F098         	movff	?_macToString,UARTTransmitText@str
 10831  002A66  C07B  F099         	movff	?_macToString+1,UARTTransmitText@str+1
 10832  002A6A  EC27  F027         	call	_UARTTransmitText	;wreg free
 10833                           
 10834                           ;arp.c: 51: UARTTransmitText(", ");
 10835  002A6E  0E33               	movlw	low (STR_48+17)
 10836  002A70  0100               	movlb	0	; () banked
 10837  002A72  6F98               	movwf	UARTTransmitText@str& (0+255),b
 10838  002A74  0E7E               	movlw	high (STR_48+17)
 10839  002A76  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 10840  002A78  EC27  F027         	call	_UARTTransmitText	;wreg free
 10841                           
 10842                           ;arp.c: 52: UARTTransmitText(ipAdressToString(arp.senderIPAddress));
 10843  002A7C  C166  F073         	movff	arp_handleNewPacket@arp+14,ipAdressToString@ip
 10844  002A80  C167  F074         	movff	arp_handleNewPacket@arp+15,ipAdressToString@ip+1
 10845  002A84  C168  F075         	movff	arp_handleNewPacket@arp+16,ipAdressToString@ip+2
 10846  002A88  C169  F076         	movff	arp_handleNewPacket@arp+17,ipAdressToString@ip+3
 10847  002A8C  ECF3  F013         	call	_ipAdressToString	;wreg free
 10848  002A90  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
 10849  002A94  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
 10850  002A98  EC27  F027         	call	_UARTTransmitText	;wreg free
 10851                           
 10852                           ;arp.c: 53: UARTTransmitText("]->[");
 10853  002A9C  0EC0               	movlw	low STR_73
 10854  002A9E  0100               	movlb	0	; () banked
 10855  002AA0  6F98               	movwf	UARTTransmitText@str& (0+255),b
 10856  002AA2  0E7F               	movlw	high STR_73
 10857  002AA4  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 10858  002AA6  EC27  F027         	call	_UARTTransmitText	;wreg free
 10859                           
 10860                           ;arp.c: 54: UARTTransmitText(macToString(arp.targetMACAddress));
 10861  002AAA  EE21  F06A         	lfsr	2,arp_handleNewPacket@arp+18
 10862  002AAE  EE00  F07A         	lfsr	0,macToString@addr
 10863  002AB2  0E05               	movlw	5
 10864  002AB4                     u11491:
 10865  002AB4  CFDB FFEB          	movff	plusw2,plusw0
 10866  002AB8  06E8               	decf	wreg,f,c
 10867  002ABA  E2FC               	bc	u11491
 10868  002ABC  ECBB  F01D         	call	_macToString	;wreg free
 10869  002AC0  C07A  F098         	movff	?_macToString,UARTTransmitText@str
 10870  002AC4  C07B  F099         	movff	?_macToString+1,UARTTransmitText@str+1
 10871  002AC8  EC27  F027         	call	_UARTTransmitText	;wreg free
 10872                           
 10873                           ;arp.c: 55: UARTTransmitText(", ");
 10874  002ACC  0E33               	movlw	low (STR_48+17)
 10875  002ACE  0100               	movlb	0	; () banked
 10876  002AD0  6F98               	movwf	UARTTransmitText@str& (0+255),b
 10877  002AD2  0E7E               	movlw	high (STR_48+17)
 10878  002AD4  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 10879  002AD6  EC27  F027         	call	_UARTTransmitText	;wreg free
 10880                           
 10881                           ;arp.c: 56: UARTTransmitText(ipAdressToString(arp.targetIPAddress));
 10882  002ADA  C170  F073         	movff	arp_handleNewPacket@arp+24,ipAdressToString@ip
 10883  002ADE  C171  F074         	movff	arp_handleNewPacket@arp+25,ipAdressToString@ip+1
 10884  002AE2  C172  F075         	movff	arp_handleNewPacket@arp+26,ipAdressToString@ip+2
 10885  002AE6  C173  F076         	movff	arp_handleNewPacket@arp+27,ipAdressToString@ip+3
 10886  002AEA  ECF3  F013         	call	_ipAdressToString	;wreg free
 10887  002AEE  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
 10888  002AF2  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
 10889  002AF6  EC27  F027         	call	_UARTTransmitText	;wreg free
 10890                           
 10891                           ;arp.c: 57: UARTTransmitText("]");
 10892  002AFA  0EFB               	movlw	low (STR_19+1)
 10893  002AFC  0100               	movlb	0	; () banked
 10894  002AFE  6F98               	movwf	UARTTransmitText@str& (0+255),b
 10895  002B00  0E7F               	movlw	high (STR_19+1)
 10896  002B02  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 10897  002B04  EC27  F027         	call	_UARTTransmitText	;wreg free
 10898                           
 10899                           ;arp.c: 58: if (arp.fIsProbe)
 10900  002B08  0101               	movlb	1	; () banked
 10901  002B0A  A374               	btfss	(arp_handleNewPacket@arp+28)& (0+255),1,b
 10902  002B0C  D007               	goto	l938
 10903                           
 10904                           ; BSR set to: 1
 10905                           ;arp.c: 59: UARTTransmitText("[IsProbe]");
 10906  002B0E  0E6D               	movlw	low STR_76
 10907  002B10  0100               	movlb	0	; () banked
 10908  002B12  6F98               	movwf	UARTTransmitText@str& (0+255),b
 10909  002B14  0E7F               	movlw	high STR_76
 10910  002B16  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 10911  002B18  EC27  F027         	call	_UARTTransmitText	;wreg free
 10912  002B1C                     l938:
 10913                           
 10914                           ;arp.c: 60: if (arp.fIsGratuitous)
 10915  002B1C  0101               	movlb	1	; () banked
 10916  002B1E  A174               	btfss	(arp_handleNewPacket@arp+28)& (0+255),0,b
 10917  002B20  D007               	goto	l939
 10918                           
 10919                           ; BSR set to: 1
 10920                           ;arp.c: 61: UARTTransmitText("[IsGratuitous]");
 10921  002B22  0EEA               	movlw	low STR_77
 10922  002B24  0100               	movlb	0	; () banked
 10923  002B26  6F98               	movwf	UARTTransmitText@str& (0+255),b
 10924  002B28  0E7E               	movlw	high STR_77
 10925  002B2A  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 10926  002B2C  EC27  F027         	call	_UARTTransmitText	;wreg free
 10927  002B30                     l939:
 10928                           
 10929                           ;arp.c: 63: arp_sendReply(arp);
 10930  002B30  EE21  F058         	lfsr	2,arp_handleNewPacket@arp
 10931  002B34  EE01  F000         	lfsr	0,arp_sendReply@request
 10932  002B38  0E1F               	movlw	31
 10933  002B3A                     u11521:
 10934  002B3A  CFDB FFEB          	movff	plusw2,plusw0
 10935  002B3E  06E8               	decf	wreg,f,c
 10936  002B40  E2FC               	bc	u11521
 10937  002B42  ECD6  F018         	call	_arp_sendReply	;wreg free
 10938                           
 10939                           ;arp.c: 64: if (!ipv4_isAllZero(&arp.senderIPAddress)) {
 10940  002B46  0E66               	movlw	low (arp_handleNewPacket@arp+14)
 10941  002B48  0100               	movlb	0	; () banked
 10942  002B4A  6F60               	movwf	ipv4_isAllZero@ip& (0+255),b
 10943  002B4C  0E01               	movlw	high (arp_handleNewPacket@arp+14)
 10944  002B4E  6F61               	movwf	(ipv4_isAllZero@ip+1)& (0+255),b
 10945  002B50  EC09  F02A         	call	_ipv4_isAllZero	;wreg free
 10946  002B54  0100               	movlb	0	; () banked
 10947  002B56  B0D8               	btfsc	status,0,c
 10948  002B58  0012               	return	
 10949                           
 10950                           ; BSR set to: 0
 10951                           ;arp.c: 65: arp_setNewEntry(arp.senderMACAddress, arp.senderIPAddress, getMillis());
 10952  002B5A  EE21  F060         	lfsr	2,arp_handleNewPacket@arp+8
 10953  002B5E  EE00  F09A         	lfsr	0,arp_setNewEntry@mac
 10954  002B62  0E05               	movlw	5
 10955  002B64                     u11541:
 10956  002B64  CFDB FFEB          	movff	plusw2,plusw0
 10957  002B68  06E8               	decf	wreg,f,c
 10958  002B6A  E2FC               	bc	u11541
 10959  002B6C  C166  F0A0         	movff	arp_handleNewPacket@arp+14,arp_setNewEntry@ip
 10960  002B70  C167  F0A1         	movff	arp_handleNewPacket@arp+15,arp_setNewEntry@ip+1
 10961  002B74  C168  F0A2         	movff	arp_handleNewPacket@arp+16,arp_setNewEntry@ip+2
 10962  002B78  C169  F0A3         	movff	arp_handleNewPacket@arp+17,arp_setNewEntry@ip+3
 10963  002B7C  ECE5  F02B         	call	_getMillis	;wreg free
 10964  002B80  C060  F0A4         	movff	?_getMillis,arp_setNewEntry@timestamp
 10965  002B84  C061  F0A5         	movff	?_getMillis+1,arp_setNewEntry@timestamp+1
 10966  002B88  C062  F0A6         	movff	?_getMillis+2,arp_setNewEntry@timestamp+2
 10967  002B8C  C063  F0A7         	movff	?_getMillis+3,arp_setNewEntry@timestamp+3
 10968  002B90  EC61  F017         	call	_arp_setNewEntry	;wreg free
 10969  002B94  0012               	return	
 10970  002B96                     __end_of_arp_handleNewPacket:
 10971                           	opt stack 0
 10972                           tblptru	equ	0xFF8
 10973                           tblptrh	equ	0xFF7
 10974                           tblptrl	equ	0xFF6
 10975                           tablat	equ	0xFF5
 10976                           prodh	equ	0xFF4
 10977                           prodl	equ	0xFF3
 10978                           intcon	equ	0xFF2
 10979                           intcon3	equ	0xFF0
 10980                           indf0	equ	0xFEF
 10981                           postinc0	equ	0xFEE
 10982                           plusw0	equ	0xFEB
 10983                           fsr0h	equ	0xFEA
 10984                           fsr0l	equ	0xFE9
 10985                           wreg	equ	0xFE8
 10986                           indf1	equ	0xFE7
 10987                           postinc1	equ	0xFE6
 10988                           postdec1	equ	0xFE5
 10989                           plusw1	equ	0xFE3
 10990                           fsr1h	equ	0xFE2
 10991                           fsr1l	equ	0xFE1
 10992                           indf2	equ	0xFDF
 10993                           postinc2	equ	0xFDE
 10994                           postdec2	equ	0xFDD
 10995                           plusw2	equ	0xFDB
 10996                           fsr2h	equ	0xFDA
 10997                           fsr2l	equ	0xFD9
 10998                           status	equ	0xFD8
 10999                           
 11000 ;; *************** function _ethernetController_dropPacket *****************
 11001 ;; Defined at:
 11002 ;;		line 379 in file "src/enc424j600/ENC424J600.c"
 11003 ;; Parameters:    Size  Location     Type
 11004 ;;		None
 11005 ;; Auto vars:     Size  Location     Type
 11006 ;;		None
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  1    wreg      void 
 11009 ;; Registers used:
 11010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11016 ;;      Params:         0       2       0       0       0       0       0       0       0
 11017 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11018 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11019 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11020 ;;Total ram usage:        2 bytes
 11021 ;; Hardware stack levels used:    1
 11022 ;; Hardware stack levels required when called:    8
 11023 ;; This function calls:
 11024 ;;		_enc424j600_setRXTailPointer
 11025 ;;		_enc424j600_writeSingleByte
 11026 ;;		_ethernetController_getNextPacketPointer
 11027 ;; This function is called by:
 11028 ;;		_ethernet_rxGetNewFrame
 11029 ;;		_arp_handleNewPacket
 11030 ;;		_ipv4_handleNewPacket
 11031 ;; This function uses a non-reentrant model
 11032 ;;
 11033                           
 11034                           	psect	text31
 11035  005220                     __ptext31:
 11036                           	opt stack 0
 11037  005220                     _ethernetController_dropPacket:
 11038                           	opt stack 19
 11039                           
 11040                           ;ENC424J600.c: 381: if (ethernetController_getNextPacketPointer() == 0x3000) {
 11041                           
 11042                           ;incstack = 0
 11043  005220  ECFD  F02B         	call	_ethernetController_getNextPacketPointer	;wreg free
 11044  005224  0E30               	movlw	48
 11045  005226  0100               	movlb	0	; () banked
 11046  005228  1963               	xorwf	(?_ethernetController_getNextPacketPointer+1)& (0+255),w,b
 11047  00522A  1162               	iorwf	?_ethernetController_getNextPacketPointer& (0+255),w,b
 11048  00522C  A4D8               	btfss	status,2,c
 11049  00522E  D007               	goto	l187
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;ENC424J600.c: 382: enc424j600_setRXTailPointer(0x5FFF - 1);
 11053  005230  0E5F               	movlw	95
 11054  005232  6F6F               	movwf	(enc424j600_setRXTailPointer@addr+1)& (0+255),b
 11055  005234  0EFE               	movlw	254
 11056  005236  6F6E               	movwf	enc424j600_setRXTailPointer@addr& (0+255),b
 11057  005238  EC79  F02A         	call	_enc424j600_setRXTailPointer	;wreg free
 11058                           
 11059                           ;ENC424J600.c: 383: } else {
 11060  00523C  D00B               	goto	l188
 11061  00523E                     l187:
 11062                           
 11063                           ;ENC424J600.c: 384: enc424j600_setRXTailPointer(ethernetController_getNextPacketPointer(
      +                          ) - 2);
 11064  00523E  ECFD  F02B         	call	_ethernetController_getNextPacketPointer	;wreg free
 11065  005242  0EFE               	movlw	254
 11066  005244  0100               	movlb	0	; () banked
 11067  005246  2562               	addwf	?_ethernetController_getNextPacketPointer& (0+255),w,b
 11068  005248  6F6E               	movwf	enc424j600_setRXTailPointer@addr& (0+255),b
 11069  00524A  0EFF               	movlw	255
 11070  00524C  2163               	addwfc	(?_ethernetController_getNextPacketPointer+1)& (0+255),w,b
 11071  00524E  6F6F               	movwf	(enc424j600_setRXTailPointer@addr+1)& (0+255),b
 11072  005250  EC79  F02A         	call	_enc424j600_setRXTailPointer	;wreg free
 11073  005254                     l188:
 11074                           
 11075                           ;ENC424J600.c: 385: }
 11076                           ;ENC424J600.c: 387: enc424j600_writeSingleByte(0b11001100);
 11077  005254  0ECC               	movlw	204
 11078  005256  ECAA  F02B         	call	_enc424j600_writeSingleByte
 11079  00525A  0012               	return		;funcret
 11080  00525C                     __end_of_ethernetController_dropPacket:
 11081                           	opt stack 0
 11082                           tblptru	equ	0xFF8
 11083                           tblptrh	equ	0xFF7
 11084                           tblptrl	equ	0xFF6
 11085                           tablat	equ	0xFF5
 11086                           prodh	equ	0xFF4
 11087                           prodl	equ	0xFF3
 11088                           intcon	equ	0xFF2
 11089                           intcon3	equ	0xFF0
 11090                           indf0	equ	0xFEF
 11091                           postinc0	equ	0xFEE
 11092                           plusw0	equ	0xFEB
 11093                           fsr0h	equ	0xFEA
 11094                           fsr0l	equ	0xFE9
 11095                           wreg	equ	0xFE8
 11096                           indf1	equ	0xFE7
 11097                           postinc1	equ	0xFE6
 11098                           postdec1	equ	0xFE5
 11099                           plusw1	equ	0xFE3
 11100                           fsr1h	equ	0xFE2
 11101                           fsr1l	equ	0xFE1
 11102                           indf2	equ	0xFDF
 11103                           postinc2	equ	0xFDE
 11104                           postdec2	equ	0xFDD
 11105                           plusw2	equ	0xFDB
 11106                           fsr2h	equ	0xFDA
 11107                           fsr2l	equ	0xFD9
 11108                           status	equ	0xFD8
 11109                           
 11110 ;; *************** function _ethernetController_getNextPacketPointer *****************
 11111 ;; Defined at:
 11112 ;;		line 461 in file "src/enc424j600/ENC424J600.c"
 11113 ;; Parameters:    Size  Location     Type
 11114 ;;		None
 11115 ;; Auto vars:     Size  Location     Type
 11116 ;;		None
 11117 ;; Return value:  Size  Location     Type
 11118 ;;                  2    2[BANK0 ] unsigned int 
 11119 ;; Registers used:
 11120 ;;		cstack
 11121 ;; Tracked objects:
 11122 ;;		On entry : 0/0
 11123 ;;		On exit  : 0/0
 11124 ;;		Unchanged: 0/0
 11125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11126 ;;      Params:         0       2       0       0       0       0       0       0       0
 11127 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11128 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11129 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11130 ;;Total ram usage:        2 bytes
 11131 ;; Hardware stack levels used:    1
 11132 ;; Hardware stack levels required when called:    5
 11133 ;; This function calls:
 11134 ;;		_enc424j600_getNextPacketPointer
 11135 ;; This function is called by:
 11136 ;;		_ethernetController_dropPacket
 11137 ;;		_ethernet_rxGetNewFrame
 11138 ;; This function uses a non-reentrant model
 11139 ;;
 11140                           
 11141                           	psect	text32
 11142  0057FA                     __ptext32:
 11143                           	opt stack 0
 11144  0057FA                     _ethernetController_getNextPacketPointer:
 11145                           	opt stack 21
 11146                           
 11147                           ;ENC424J600.c: 462: return enc424j600_getNextPacketPointer();
 11148                           
 11149                           ;incstack = 0
 11150  0057FA  EC17  F02C         	call	_enc424j600_getNextPacketPointer	;wreg free
 11151  0057FE  C060  F062         	movff	?_enc424j600_getNextPacketPointer,?_ethernetController_getNextPacketPointer
 11152  005802  C061  F063         	movff	?_enc424j600_getNextPacketPointer+1,?_ethernetController_getNextPacketPointer+1
 11153  005806  0012               	return	
 11154  005808                     __end_of_ethernetController_getNextPacketPointer:
 11155                           	opt stack 0
 11156                           tblptru	equ	0xFF8
 11157                           tblptrh	equ	0xFF7
 11158                           tblptrl	equ	0xFF6
 11159                           tablat	equ	0xFF5
 11160                           prodh	equ	0xFF4
 11161                           prodl	equ	0xFF3
 11162                           intcon	equ	0xFF2
 11163                           intcon3	equ	0xFF0
 11164                           indf0	equ	0xFEF
 11165                           postinc0	equ	0xFEE
 11166                           plusw0	equ	0xFEB
 11167                           fsr0h	equ	0xFEA
 11168                           fsr0l	equ	0xFE9
 11169                           wreg	equ	0xFE8
 11170                           indf1	equ	0xFE7
 11171                           postinc1	equ	0xFE6
 11172                           postdec1	equ	0xFE5
 11173                           plusw1	equ	0xFE3
 11174                           fsr1h	equ	0xFE2
 11175                           fsr1l	equ	0xFE1
 11176                           indf2	equ	0xFDF
 11177                           postinc2	equ	0xFDE
 11178                           postdec2	equ	0xFDD
 11179                           plusw2	equ	0xFDB
 11180                           fsr2h	equ	0xFDA
 11181                           fsr2l	equ	0xFD9
 11182                           status	equ	0xFD8
 11183                           
 11184 ;; *************** function _enc424j600_getNextPacketPointer *****************
 11185 ;; Defined at:
 11186 ;;		line 590 in file "src/enc424j600/ENC424J600.c"
 11187 ;; Parameters:    Size  Location     Type
 11188 ;;		None
 11189 ;; Auto vars:     Size  Location     Type
 11190 ;;		None
 11191 ;; Return value:  Size  Location     Type
 11192 ;;                  2    0[BANK0 ] unsigned int 
 11193 ;; Registers used:
 11194 ;;		None
 11195 ;; Tracked objects:
 11196 ;;		On entry : 0/0
 11197 ;;		On exit  : 0/0
 11198 ;;		Unchanged: 0/0
 11199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11200 ;;      Params:         0       2       0       0       0       0       0       0       0
 11201 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11202 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11203 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11204 ;;Total ram usage:        2 bytes
 11205 ;; Hardware stack levels used:    1
 11206 ;; Hardware stack levels required when called:    4
 11207 ;; This function calls:
 11208 ;;		Nothing
 11209 ;; This function is called by:
 11210 ;;		_ethernetController_updateNextPacketPointer
 11211 ;;		_ethernetController_getNextPacketPointer
 11212 ;; This function uses a non-reentrant model
 11213 ;;
 11214                           
 11215                           	psect	text33
 11216  00582E                     __ptext33:
 11217                           	opt stack 0
 11218  00582E                     _enc424j600_getNextPacketPointer:
 11219                           	opt stack 21
 11220                           
 11221                           ;ENC424J600.c: 591: return nextPacketPointer;
 11222                           
 11223                           ;incstack = 0
 11224  00582E  C042  F060         	movff	_nextPacketPointer,?_enc424j600_getNextPacketPointer
 11225  005832  C043  F061         	movff	_nextPacketPointer+1,?_enc424j600_getNextPacketPointer+1
 11226  005836  0012               	return		;funcret
 11227  005838                     __end_of_enc424j600_getNextPacketPointer:
 11228                           	opt stack 0
 11229                           tblptru	equ	0xFF8
 11230                           tblptrh	equ	0xFF7
 11231                           tblptrl	equ	0xFF6
 11232                           tablat	equ	0xFF5
 11233                           prodh	equ	0xFF4
 11234                           prodl	equ	0xFF3
 11235                           intcon	equ	0xFF2
 11236                           intcon3	equ	0xFF0
 11237                           indf0	equ	0xFEF
 11238                           postinc0	equ	0xFEE
 11239                           plusw0	equ	0xFEB
 11240                           fsr0h	equ	0xFEA
 11241                           fsr0l	equ	0xFE9
 11242                           wreg	equ	0xFE8
 11243                           indf1	equ	0xFE7
 11244                           postinc1	equ	0xFE6
 11245                           postdec1	equ	0xFE5
 11246                           plusw1	equ	0xFE3
 11247                           fsr1h	equ	0xFE2
 11248                           fsr1l	equ	0xFE1
 11249                           indf2	equ	0xFDF
 11250                           postinc2	equ	0xFDE
 11251                           postdec2	equ	0xFDD
 11252                           plusw2	equ	0xFDB
 11253                           fsr2h	equ	0xFDA
 11254                           fsr2l	equ	0xFD9
 11255                           status	equ	0xFD8
 11256                           
 11257 ;; *************** function _arp_sendReply *****************
 11258 ;; Defined at:
 11259 ;;		line 208 in file "src/stack/protocols/arp.c"
 11260 ;; Parameters:    Size  Location     Type
 11261 ;;  request        32    0[BANK1 ] struct arp_message
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;  reply          32   56[BANK1 ] struct arp_message
 11264 ;;  targetMAC       6   38[BANK1 ] struct macaddress
 11265 ;;  senderMAC       6   32[BANK1 ] struct macaddress
 11266 ;;  myIP            4   52[BANK1 ] struct ipv4_address
 11267 ;;  targetIP        4   48[BANK1 ] struct ipv4_address
 11268 ;;  senderIP        4   44[BANK1 ] struct ipv4_address
 11269 ;; Return value:  Size  Location     Type
 11270 ;;                  1    wreg      void 
 11271 ;; Registers used:
 11272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11273 ;; Tracked objects:
 11274 ;;		On entry : 0/0
 11275 ;;		On exit  : 0/0
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11278 ;;      Params:         0       0      32       0       0       0       0       0       0
 11279 ;;      Locals:         0       0      56       0       0       0       0       0       0
 11280 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11281 ;;      Totals:         0       0      88       0       0       0       0       0       0
 11282 ;;Total ram usage:       88 bytes
 11283 ;; Hardware stack levels used:    1
 11284 ;; Hardware stack levels required when called:   10
 11285 ;; This function calls:
 11286 ;;		_UARTTransmitText
 11287 ;;		_arp_send
 11288 ;;		_ethernetController_getMacAddress
 11289 ;;		_ipAdressToString
 11290 ;;		_ipv4_cmp
 11291 ;;		_ipv4_getIPSourceAddress
 11292 ;;		_macToString
 11293 ;; This function is called by:
 11294 ;;		_arp_handleNewPacket
 11295 ;; This function uses a non-reentrant model
 11296 ;;
 11297                           
 11298                           	psect	text34
 11299  0031AC                     __ptext34:
 11300                           	opt stack 0
 11301  0031AC                     _arp_sendReply:
 11302                           	opt stack 17
 11303                           
 11304                           ;arp.c: 209: if (request.operation != ARP_REQUEST)
 11305                           
 11306                           ;incstack = 0
 11307  0031AC  0101               	movlb	1	; () banked
 11308  0031AE  0506               	decf	(arp_sendReply@request+6)& (0+255),w,b
 11309  0031B0  1107               	iorwf	(arp_sendReply@request+7)& (0+255),w,b
 11310  0031B2  A4D8               	btfss	status,2,c
 11311  0031B4  0012               	return	
 11312                           
 11313                           ; BSR set to: 1
 11314                           ;arp.c: 212: ipv4_address_t myIP = ipv4_getIPSourceAddress();
 11315                           
 11316                           ; BSR set to: 1
 11317                           
 11318                           ; BSR set to: 1
 11319                           ;arp.c: 210: return;
 11320  0031B6  ECCA  F02B         	call	_ipv4_getIPSourceAddress	;wreg free
 11321  0031BA  C060  F134         	movff	?_ipv4_getIPSourceAddress,arp_sendReply@myIP
 11322  0031BE  C061  F135         	movff	?_ipv4_getIPSourceAddress+1,arp_sendReply@myIP+1
 11323  0031C2  C062  F136         	movff	?_ipv4_getIPSourceAddress+2,arp_sendReply@myIP+2
 11324  0031C6  C063  F137         	movff	?_ipv4_getIPSourceAddress+3,arp_sendReply@myIP+3
 11325                           
 11326                           ;arp.c: 213: if (!(ipv4_cmp(&request.targetIPAddress, &myIP)))
 11327  0031CA  0E18               	movlw	low (arp_sendReply@request+24)
 11328  0031CC  0100               	movlb	0	; () banked
 11329  0031CE  6F60               	movwf	ipv4_cmp@a& (0+255),b
 11330  0031D0  0E01               	movlw	high (arp_sendReply@request+24)
 11331  0031D2  6F61               	movwf	(ipv4_cmp@a+1)& (0+255),b
 11332  0031D4  0E34               	movlw	low arp_sendReply@myIP
 11333  0031D6  6F62               	movwf	ipv4_cmp@b& (0+255),b
 11334  0031D8  0E01               	movlw	high arp_sendReply@myIP
 11335  0031DA  6F63               	movwf	(ipv4_cmp@b+1)& (0+255),b
 11336  0031DC  ECEF  F028         	call	_ipv4_cmp	;wreg free
 11337  0031E0  0100               	movlb	0	; () banked
 11338  0031E2  A0D8               	btfss	status,0,c
 11339  0031E4  0012               	return	
 11340                           
 11341                           ; BSR set to: 0
 11342                           ;arp.c: 216: arp_message_t reply;
 11343                           ;arp.c: 217: ipv4_address_t senderIP;
 11344                           ;arp.c: 218: ipv4_address_t targetIP;
 11345                           ;arp.c: 219: macaddress_t senderMAC;
 11346                           ;arp.c: 220: macaddress_t targetMAC;
 11347                           ;arp.c: 222: senderMAC = ethernetController_getMacAddress();
 11348                           
 11349                           ; BSR set to: 0
 11350                           
 11351                           ; BSR set to: 0
 11352                           ;arp.c: 214: return;
 11353  0031E6  EC23  F025         	call	_ethernetController_getMacAddress	;wreg free
 11354  0031EA  EE21  F020         	lfsr	2,arp_sendReply@senderMAC
 11355  0031EE  0E05               	movlw	5
 11356  0031F0                     u11061:
 11357  0031F0  CFEB FFDB          	movff	plusw0,plusw2
 11358  0031F4  06E8               	decf	wreg,f,c
 11359  0031F6  E2FC               	bc	u11061
 11360                           
 11361                           ;arp.c: 223: targetMAC = request.senderMACAddress;
 11362  0031F8  EE21  F008         	lfsr	2,arp_sendReply@request+8
 11363  0031FC  EE11  F026         	lfsr	1,arp_sendReply@targetMAC
 11364  003200  0E05               	movlw	5
 11365  003202                     u11071:
 11366  003202  CFDB FFE3          	movff	plusw2,plusw1
 11367  003206  06E8               	decf	wreg,f,c
 11368  003208  E2FC               	bc	u11071
 11369                           
 11370                           ;arp.c: 224: senderIP = ipv4_getIPSourceAddress();
 11371  00320A  ECCA  F02B         	call	_ipv4_getIPSourceAddress	;wreg free
 11372  00320E  C060  F12C         	movff	?_ipv4_getIPSourceAddress,arp_sendReply@senderIP
 11373  003212  C061  F12D         	movff	?_ipv4_getIPSourceAddress+1,arp_sendReply@senderIP+1
 11374  003216  C062  F12E         	movff	?_ipv4_getIPSourceAddress+2,arp_sendReply@senderIP+2
 11375  00321A  C063  F12F         	movff	?_ipv4_getIPSourceAddress+3,arp_sendReply@senderIP+3
 11376                           
 11377                           ;arp.c: 225: targetIP = request.senderIPAddress;
 11378  00321E  C10E  F130         	movff	arp_sendReply@request+14,arp_sendReply@targetIP
 11379  003222  C10F  F131         	movff	arp_sendReply@request+15,arp_sendReply@targetIP+1
 11380  003226  C110  F132         	movff	arp_sendReply@request+16,arp_sendReply@targetIP+2
 11381  00322A  C111  F133         	movff	arp_sendReply@request+17,arp_sendReply@targetIP+3
 11382                           
 11383                           ;arp.c: 227: reply.hlen = 6u;
 11384  00322E  0E06               	movlw	6
 11385  003230  0101               	movlb	1	; () banked
 11386  003232  6F3C               	movwf	(arp_sendReply@reply+4)& (0+255),b
 11387                           
 11388                           ; BSR set to: 1
 11389                           ;arp.c: 228: reply.plen = 4u;
 11390  003234  0E04               	movlw	4
 11391  003236  6F3D               	movwf	(arp_sendReply@reply+5)& (0+255),b
 11392                           
 11393                           ; BSR set to: 1
 11394                           ;arp.c: 229: reply.htype = ARP_HTYPE_ETHERNET;
 11395  003238  0E00               	movlw	0
 11396  00323A  6F39               	movwf	(arp_sendReply@reply+1)& (0+255),b
 11397  00323C  0E01               	movlw	1
 11398  00323E  6F38               	movwf	arp_sendReply@reply& (0+255),b
 11399                           
 11400                           ; BSR set to: 1
 11401                           ;arp.c: 230: reply.ptype = ARP_PTYPE_IPv4;
 11402  003240  0E08               	movlw	8
 11403  003242  6F3B               	movwf	(arp_sendReply@reply+3)& (0+255),b
 11404  003244  0E00               	movlw	0
 11405  003246  6F3A               	movwf	(arp_sendReply@reply+2)& (0+255),b
 11406                           
 11407                           ; BSR set to: 1
 11408                           ;arp.c: 231: reply.operation = ARP_REPLY;
 11409  003248  0E00               	movlw	0
 11410  00324A  6F3F               	movwf	(arp_sendReply@reply+7)& (0+255),b
 11411  00324C  0E02               	movlw	2
 11412  00324E  6F3E               	movwf	(arp_sendReply@reply+6)& (0+255),b
 11413                           
 11414                           ; BSR set to: 1
 11415                           ;arp.c: 232: reply.senderIPAddress = senderIP;
 11416  003250  C12C  F146         	movff	arp_sendReply@senderIP,arp_sendReply@reply+14
 11417  003254  C12D  F147         	movff	arp_sendReply@senderIP+1,arp_sendReply@reply+15
 11418  003258  C12E  F148         	movff	arp_sendReply@senderIP+2,arp_sendReply@reply+16
 11419  00325C  C12F  F149         	movff	arp_sendReply@senderIP+3,arp_sendReply@reply+17
 11420                           
 11421                           ; BSR set to: 1
 11422                           ;arp.c: 233: reply.senderMACAddress = senderMAC;
 11423  003260  EE21  F020         	lfsr	2,arp_sendReply@senderMAC
 11424  003264  EE11  F040         	lfsr	1,arp_sendReply@reply+8
 11425  003268  0E05               	movlw	5
 11426  00326A                     u11081:
 11427  00326A  CFDB FFE3          	movff	plusw2,plusw1
 11428  00326E  06E8               	decf	wreg,f,c
 11429  003270  E2FC               	bc	u11081
 11430                           
 11431                           ; BSR set to: 1
 11432                           ;arp.c: 234: reply.targetIPAddress = targetIP;
 11433  003272  C130  F150         	movff	arp_sendReply@targetIP,arp_sendReply@reply+24
 11434  003276  C131  F151         	movff	arp_sendReply@targetIP+1,arp_sendReply@reply+25
 11435  00327A  C132  F152         	movff	arp_sendReply@targetIP+2,arp_sendReply@reply+26
 11436  00327E  C133  F153         	movff	arp_sendReply@targetIP+3,arp_sendReply@reply+27
 11437                           
 11438                           ; BSR set to: 1
 11439                           ;arp.c: 235: reply.targetMACAddress = targetMAC;
 11440  003282  EE21  F026         	lfsr	2,arp_sendReply@targetMAC
 11441  003286  EE11  F04A         	lfsr	1,arp_sendReply@reply+18
 11442  00328A  0E05               	movlw	5
 11443  00328C                     u11091:
 11444  00328C  CFDB FFE3          	movff	plusw2,plusw1
 11445  003290  06E8               	decf	wreg,f,c
 11446  003292  E2FC               	bc	u11091
 11447                           
 11448                           ; BSR set to: 1
 11449                           ;arp.c: 237: arp_send(reply);
 11450  003294  EE21  F038         	lfsr	2,arp_sendReply@reply
 11451  003298  EE00  F0A7         	lfsr	0,arp_send@arp
 11452  00329C  0E1F               	movlw	31
 11453  00329E                     u11101:
 11454  00329E  CFDB FFEB          	movff	plusw2,plusw0
 11455  0032A2  06E8               	decf	wreg,f,c
 11456  0032A4  E2FC               	bc	u11101
 11457  0032A6  EC59  F00F         	call	_arp_send	;wreg free
 11458                           
 11459                           ;arp.c: 239: UARTTransmitText("[Reply sent to ");
 11460  0032AA  0ECA               	movlw	low STR_78
 11461  0032AC  0100               	movlb	0	; () banked
 11462  0032AE  6F98               	movwf	UARTTransmitText@str& (0+255),b
 11463  0032B0  0E7E               	movlw	high STR_78
 11464  0032B2  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 11465  0032B4  EC27  F027         	call	_UARTTransmitText	;wreg free
 11466                           
 11467                           ;arp.c: 240: UARTTransmitText(macToString(reply.targetMACAddress));
 11468  0032B8  EE21  F04A         	lfsr	2,arp_sendReply@reply+18
 11469  0032BC  EE00  F07A         	lfsr	0,macToString@addr
 11470  0032C0  0E05               	movlw	5
 11471  0032C2                     u11111:
 11472  0032C2  CFDB FFEB          	movff	plusw2,plusw0
 11473  0032C6  06E8               	decf	wreg,f,c
 11474  0032C8  E2FC               	bc	u11111
 11475  0032CA  ECBB  F01D         	call	_macToString	;wreg free
 11476  0032CE  C07A  F098         	movff	?_macToString,UARTTransmitText@str
 11477  0032D2  C07B  F099         	movff	?_macToString+1,UARTTransmitText@str+1
 11478  0032D6  EC27  F027         	call	_UARTTransmitText	;wreg free
 11479                           
 11480                           ;arp.c: 241: UARTTransmitText(", ");
 11481  0032DA  0E33               	movlw	low (STR_48+17)
 11482  0032DC  0100               	movlb	0	; () banked
 11483  0032DE  6F98               	movwf	UARTTransmitText@str& (0+255),b
 11484  0032E0  0E7E               	movlw	high (STR_48+17)
 11485  0032E2  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 11486  0032E4  EC27  F027         	call	_UARTTransmitText	;wreg free
 11487                           
 11488                           ;arp.c: 242: UARTTransmitText(ipAdressToString(reply.targetIPAddress));
 11489  0032E8  C150  F073         	movff	arp_sendReply@reply+24,ipAdressToString@ip
 11490  0032EC  C151  F074         	movff	arp_sendReply@reply+25,ipAdressToString@ip+1
 11491  0032F0  C152  F075         	movff	arp_sendReply@reply+26,ipAdressToString@ip+2
 11492  0032F4  C153  F076         	movff	arp_sendReply@reply+27,ipAdressToString@ip+3
 11493  0032F8  ECF3  F013         	call	_ipAdressToString	;wreg free
 11494  0032FC  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
 11495  003300  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
 11496  003304  EC27  F027         	call	_UARTTransmitText	;wreg free
 11497                           
 11498                           ;arp.c: 243: UARTTransmitText("]");
 11499  003308  0EFB               	movlw	low (STR_19+1)
 11500  00330A  0100               	movlb	0	; () banked
 11501  00330C  6F98               	movwf	UARTTransmitText@str& (0+255),b
 11502  00330E  0E7F               	movlw	high (STR_19+1)
 11503  003310  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 11504  003312  EC27  F027         	call	_UARTTransmitText	;wreg free
 11505  003316  0012               	return		;funcret
 11506  003318                     __end_of_arp_sendReply:
 11507                           	opt stack 0
 11508                           tblptru	equ	0xFF8
 11509                           tblptrh	equ	0xFF7
 11510                           tblptrl	equ	0xFF6
 11511                           tablat	equ	0xFF5
 11512                           prodh	equ	0xFF4
 11513                           prodl	equ	0xFF3
 11514                           intcon	equ	0xFF2
 11515                           intcon3	equ	0xFF0
 11516                           indf0	equ	0xFEF
 11517                           postinc0	equ	0xFEE
 11518                           plusw0	equ	0xFEB
 11519                           fsr0h	equ	0xFEA
 11520                           fsr0l	equ	0xFE9
 11521                           wreg	equ	0xFE8
 11522                           indf1	equ	0xFE7
 11523                           postinc1	equ	0xFE6
 11524                           postdec1	equ	0xFE5
 11525                           plusw1	equ	0xFE3
 11526                           fsr1h	equ	0xFE2
 11527                           fsr1l	equ	0xFE1
 11528                           indf2	equ	0xFDF
 11529                           postinc2	equ	0xFDE
 11530                           postdec2	equ	0xFDD
 11531                           plusw2	equ	0xFDB
 11532                           fsr2h	equ	0xFDA
 11533                           fsr2l	equ	0xFD9
 11534                           status	equ	0xFD8
 11535                           
 11536 ;; *************** function _ipv4_getIPSourceAddress *****************
 11537 ;; Defined at:
 11538 ;;		line 242 in file "src/stack/protocols/ipv4.c"
 11539 ;; Parameters:    Size  Location     Type
 11540 ;;		None
 11541 ;; Auto vars:     Size  Location     Type
 11542 ;;		None
 11543 ;; Return value:  Size  Location     Type
 11544 ;;                  4    0[BANK0 ] struct ipv4_address
 11545 ;; Registers used:
 11546 ;;		None
 11547 ;; Tracked objects:
 11548 ;;		On entry : 0/0
 11549 ;;		On exit  : 0/0
 11550 ;;		Unchanged: 0/0
 11551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11552 ;;      Params:         0       4       0       0       0       0       0       0       0
 11553 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11554 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11555 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11556 ;;Total ram usage:        4 bytes
 11557 ;; Hardware stack levels used:    1
 11558 ;; Hardware stack levels required when called:    4
 11559 ;; This function calls:
 11560 ;;		Nothing
 11561 ;; This function is called by:
 11562 ;;		_main
 11563 ;;		_arp_sendReply
 11564 ;; This function uses a non-reentrant model
 11565 ;;
 11566                           
 11567                           	psect	text35
 11568  005794                     __ptext35:
 11569                           	opt stack 0
 11570  005794                     _ipv4_getIPSourceAddress:
 11571                           	opt stack 26
 11572                           
 11573                           ;ipv4.c: 243: return ipSource;
 11574                           
 11575                           ;incstack = 0
 11576  005794  C1F2  F060         	movff	_ipSource,?_ipv4_getIPSourceAddress
 11577  005798  C1F3  F061         	movff	_ipSource+1,?_ipv4_getIPSourceAddress+1
 11578  00579C  C1F4  F062         	movff	_ipSource+2,?_ipv4_getIPSourceAddress+2
 11579  0057A0  C1F5  F063         	movff	_ipSource+3,?_ipv4_getIPSourceAddress+3
 11580  0057A4  0012               	return		;funcret
 11581  0057A6                     __end_of_ipv4_getIPSourceAddress:
 11582                           	opt stack 0
 11583                           tblptru	equ	0xFF8
 11584                           tblptrh	equ	0xFF7
 11585                           tblptrl	equ	0xFF6
 11586                           tablat	equ	0xFF5
 11587                           prodh	equ	0xFF4
 11588                           prodl	equ	0xFF3
 11589                           intcon	equ	0xFF2
 11590                           intcon3	equ	0xFF0
 11591                           indf0	equ	0xFEF
 11592                           postinc0	equ	0xFEE
 11593                           plusw0	equ	0xFEB
 11594                           fsr0h	equ	0xFEA
 11595                           fsr0l	equ	0xFE9
 11596                           wreg	equ	0xFE8
 11597                           indf1	equ	0xFE7
 11598                           postinc1	equ	0xFE6
 11599                           postdec1	equ	0xFE5
 11600                           plusw1	equ	0xFE3
 11601                           fsr1h	equ	0xFE2
 11602                           fsr1l	equ	0xFE1
 11603                           indf2	equ	0xFDF
 11604                           postinc2	equ	0xFDE
 11605                           postdec2	equ	0xFDD
 11606                           plusw2	equ	0xFDB
 11607                           fsr2h	equ	0xFDA
 11608                           fsr2l	equ	0xFD9
 11609                           status	equ	0xFD8
 11610                           
 11611 ;; *************** function _arp_parseFromRXBuffer *****************
 11612 ;; Defined at:
 11613 ;;		line 69 in file "src/stack/protocols/arp.c"
 11614 ;; Parameters:    Size  Location     Type
 11615 ;;  frame           2   20[BANK0 ] PTR struct ethernetFrame
 11616 ;;		 -> stack(123), 
 11617 ;; Auto vars:     Size  Location     Type
 11618 ;;  i               1   58[BANK0 ] unsigned char 
 11619 ;;  i               1   57[BANK0 ] unsigned char 
 11620 ;;  i               1   56[BANK0 ] unsigned char 
 11621 ;;  i               1   55[BANK0 ] unsigned char 
 11622 ;;  arp            32   61[BANK0 ] struct arp_message
 11623 ;;  offset          2   59[BANK0 ] const unsigned int 
 11624 ;; Return value:  Size  Location     Type
 11625 ;;                  32   20[BANK0 ] struct arp_message
 11626 ;; Registers used:
 11627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11628 ;; Tracked objects:
 11629 ;;		On entry : 0/0
 11630 ;;		On exit  : 0/0
 11631 ;;		Unchanged: 0/0
 11632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11633 ;;      Params:         0      32       0       0       0       0       0       0       0
 11634 ;;      Locals:         0      38       0       0       0       0       0       0       0
 11635 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11636 ;;      Totals:         0      73       0       0       0       0       0       0       0
 11637 ;;Total ram usage:       73 bytes
 11638 ;; Hardware stack levels used:    1
 11639 ;; Hardware stack levels required when called:    8
 11640 ;; This function calls:
 11641 ;;		_ethernetController_streamFromRXBuffer
 11642 ;;		_ipv4_cmp
 11643 ;;		_ipv4_isAllZero
 11644 ;;		_mac_cmp
 11645 ;;		_mac_isAllZero
 11646 ;; This function is called by:
 11647 ;;		_arp_handleNewPacket
 11648 ;; This function uses a non-reentrant model
 11649 ;;
 11650                           
 11651                           	psect	text36
 11652  000F2E                     __ptext36:
 11653                           	opt stack 0
 11654  000F2E                     _arp_parseFromRXBuffer:
 11655                           	opt stack 19
 11656                           
 11657                           ;arp.c: 70: arp_message_t arp;
 11658                           ;arp.c: 71: uint16_t const offset = 22;
 11659                           
 11660                           ;incstack = 0
 11661  000F2E  0E00               	movlw	0
 11662  000F30  0100               	movlb	0	; () banked
 11663  000F32  6F9C               	movwf	(arp_parseFromRXBuffer@offset+1)& (0+255),b
 11664  000F34  0E16               	movlw	22
 11665  000F36  6F9B               	movwf	arp_parseFromRXBuffer@offset& (0+255),b
 11666                           
 11667                           ; BSR set to: 0
 11668                           ;arp.c: 73: ethernetController_streamFromRXBuffer(0, frame->memory.start + offset);
 11669  000F38  EE20 F010          	lfsr	2,16
 11670  000F3C  5174               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 11671  000F3E  26D9               	addwf	fsr2l,f,c
 11672  000F40  5175               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 11673  000F42  22DA               	addwfc	fsr2h,f,c
 11674  000F44  CFDE F094          	movff	postinc2,??_arp_parseFromRXBuffer
 11675  000F48  CFDD F095          	movff	postdec2,??_arp_parseFromRXBuffer+1
 11676  000F4C  519B               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 11677  000F4E  2594               	addwf	??_arp_parseFromRXBuffer& (0+255),w,b
 11678  000F50  6F6F               	movwf	ethernetController_streamFromRXBuffer@startAddress& (0+255),b
 11679  000F52  519C               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 11680  000F54  2195               	addwfc	(??_arp_parseFromRXBuffer+1)& (0+255),w,b
 11681  000F56  6F70               	movwf	(ethernetController_streamFromRXBuffer@startAddress+1)& (0+255),b
 11682  000F58  0E00               	movlw	0
 11683  000F5A  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
 11684                           
 11685                           ;arp.c: 76: arp.htype = (ethernetController_streamFromRXBuffer(1, frame->memory.start + 
      +                          offset) << 8);
 11686  000F5E  0100               	movlb	0	; () banked
 11687  000F60  EE20 F010          	lfsr	2,16
 11688  000F64  5174               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 11689  000F66  26D9               	addwf	fsr2l,f,c
 11690  000F68  5175               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 11691  000F6A  22DA               	addwfc	fsr2h,f,c
 11692  000F6C  CFDE F094          	movff	postinc2,??_arp_parseFromRXBuffer
 11693  000F70  CFDD F095          	movff	postdec2,??_arp_parseFromRXBuffer+1
 11694  000F74  519B               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 11695  000F76  2594               	addwf	??_arp_parseFromRXBuffer& (0+255),w,b
 11696  000F78  6F6F               	movwf	ethernetController_streamFromRXBuffer@startAddress& (0+255),b
 11697  000F7A  519C               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 11698  000F7C  2195               	addwfc	(??_arp_parseFromRXBuffer+1)& (0+255),w,b
 11699  000F7E  6F70               	movwf	(ethernetController_streamFromRXBuffer@startAddress+1)& (0+255),b
 11700  000F80  0E01               	movlw	1
 11701  000F82  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
 11702  000F86  0100               	movlb	0	; () banked
 11703  000F88  6F9E               	movwf	(arp_parseFromRXBuffer@arp+1)& (0+255),b
 11704  000F8A  6B9D               	clrf	arp_parseFromRXBuffer@arp& (0+255),b
 11705                           
 11706                           ; BSR set to: 0
 11707                           ;arp.c: 77: arp.htype |= ethernetController_streamFromRXBuffer(1, frame->memory.start + 
      +                          offset);
 11708  000F8C  EE20 F010          	lfsr	2,16
 11709  000F90  5174               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 11710  000F92  26D9               	addwf	fsr2l,f,c
 11711  000F94  5175               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 11712  000F96  22DA               	addwfc	fsr2h,f,c
 11713  000F98  CFDE F094          	movff	postinc2,??_arp_parseFromRXBuffer
 11714  000F9C  CFDD F095          	movff	postdec2,??_arp_parseFromRXBuffer+1
 11715  000FA0  519B               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 11716  000FA2  2594               	addwf	??_arp_parseFromRXBuffer& (0+255),w,b
 11717  000FA4  6F6F               	movwf	ethernetController_streamFromRXBuffer@startAddress& (0+255),b
 11718  000FA6  519C               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 11719  000FA8  2195               	addwfc	(??_arp_parseFromRXBuffer+1)& (0+255),w,b
 11720  000FAA  6F70               	movwf	(ethernetController_streamFromRXBuffer@startAddress+1)& (0+255),b
 11721  000FAC  0E01               	movlw	1
 11722  000FAE  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
 11723  000FB2  0100               	movlb	0	; () banked
 11724  000FB4  6F96               	movwf	(??_arp_parseFromRXBuffer+2)& (0+255),b
 11725  000FB6  5196               	movf	(??_arp_parseFromRXBuffer+2)& (0+255),w,b
 11726  000FB8  139D               	iorwf	arp_parseFromRXBuffer@arp& (0+255),f,b
 11727                           
 11728                           ; BSR set to: 0
 11729                           ;arp.c: 79: arp.ptype = (ethernetController_streamFromRXBuffer(1, frame->memory.start + 
      +                          offset) << 8);
 11730  000FBA  EE20 F010          	lfsr	2,16
 11731  000FBE  5174               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 11732  000FC0  26D9               	addwf	fsr2l,f,c
 11733  000FC2  5175               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 11734  000FC4  22DA               	addwfc	fsr2h,f,c
 11735  000FC6  CFDE F094          	movff	postinc2,??_arp_parseFromRXBuffer
 11736  000FCA  CFDD F095          	movff	postdec2,??_arp_parseFromRXBuffer+1
 11737  000FCE  519B               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 11738  000FD0  2594               	addwf	??_arp_parseFromRXBuffer& (0+255),w,b
 11739  000FD2  6F6F               	movwf	ethernetController_streamFromRXBuffer@startAddress& (0+255),b
 11740  000FD4  519C               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 11741  000FD6  2195               	addwfc	(??_arp_parseFromRXBuffer+1)& (0+255),w,b
 11742  000FD8  6F70               	movwf	(ethernetController_streamFromRXBuffer@startAddress+1)& (0+255),b
 11743  000FDA  0E01               	movlw	1
 11744  000FDC  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
 11745  000FE0  0100               	movlb	0	; () banked
 11746  000FE2  6FA0               	movwf	(arp_parseFromRXBuffer@arp+3)& (0+255),b
 11747  000FE4  6B9F               	clrf	(arp_parseFromRXBuffer@arp+2)& (0+255),b
 11748                           
 11749                           ; BSR set to: 0
 11750                           ;arp.c: 80: arp.ptype |= ethernetController_streamFromRXBuffer(1, frame->memory.start + 
      +                          offset);
 11751  000FE6  EE20 F010          	lfsr	2,16
 11752  000FEA  5174               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 11753  000FEC  26D9               	addwf	fsr2l,f,c
 11754  000FEE  5175               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 11755  000FF0  22DA               	addwfc	fsr2h,f,c
 11756  000FF2  CFDE F094          	movff	postinc2,??_arp_parseFromRXBuffer
 11757  000FF6  CFDD F095          	movff	postdec2,??_arp_parseFromRXBuffer+1
 11758  000FFA  519B               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 11759  000FFC  2594               	addwf	??_arp_parseFromRXBuffer& (0+255),w,b
 11760  000FFE  6F6F               	movwf	ethernetController_streamFromRXBuffer@startAddress& (0+255),b
 11761  001000  519C               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 11762  001002  2195               	addwfc	(??_arp_parseFromRXBuffer+1)& (0+255),w,b
 11763  001004  6F70               	movwf	(ethernetController_streamFromRXBuffer@startAddress+1)& (0+255),b
 11764  001006  0E01               	movlw	1
 11765  001008  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
 11766  00100C  0100               	movlb	0	; () banked
 11767  00100E  6F96               	movwf	(??_arp_parseFromRXBuffer+2)& (0+255),b
 11768  001010  5196               	movf	(??_arp_parseFromRXBuffer+2)& (0+255),w,b
 11769  001012  139F               	iorwf	(arp_parseFromRXBuffer@arp+2)& (0+255),f,b
 11770                           
 11771                           ; BSR set to: 0
 11772                           ;arp.c: 82: arp.hlen = ethernetController_streamFromRXBuffer(1, frame->memory.start + of
      +                          fset);
 11773  001014  EE20 F010          	lfsr	2,16
 11774  001018  5174               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 11775  00101A  26D9               	addwf	fsr2l,f,c
 11776  00101C  5175               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 11777  00101E  22DA               	addwfc	fsr2h,f,c
 11778  001020  CFDE F094          	movff	postinc2,??_arp_parseFromRXBuffer
 11779  001024  CFDD F095          	movff	postdec2,??_arp_parseFromRXBuffer+1
 11780  001028  519B               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 11781  00102A  2594               	addwf	??_arp_parseFromRXBuffer& (0+255),w,b
 11782  00102C  6F6F               	movwf	ethernetController_streamFromRXBuffer@startAddress& (0+255),b
 11783  00102E  519C               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 11784  001030  2195               	addwfc	(??_arp_parseFromRXBuffer+1)& (0+255),w,b
 11785  001032  6F70               	movwf	(ethernetController_streamFromRXBuffer@startAddress+1)& (0+255),b
 11786  001034  0E01               	movlw	1
 11787  001036  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
 11788  00103A  0100               	movlb	0	; () banked
 11789  00103C  6FA1               	movwf	(arp_parseFromRXBuffer@arp+4)& (0+255),b
 11790                           
 11791                           ; BSR set to: 0
 11792                           ;arp.c: 83: arp.plen = ethernetController_streamFromRXBuffer(1, frame->memory.start + of
      +                          fset);
 11793  00103E  EE20 F010          	lfsr	2,16
 11794  001042  5174               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 11795  001044  26D9               	addwf	fsr2l,f,c
 11796  001046  5175               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 11797  001048  22DA               	addwfc	fsr2h,f,c
 11798  00104A  CFDE F094          	movff	postinc2,??_arp_parseFromRXBuffer
 11799  00104E  CFDD F095          	movff	postdec2,??_arp_parseFromRXBuffer+1
 11800  001052  519B               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 11801  001054  2594               	addwf	??_arp_parseFromRXBuffer& (0+255),w,b
 11802  001056  6F6F               	movwf	ethernetController_streamFromRXBuffer@startAddress& (0+255),b
 11803  001058  519C               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 11804  00105A  2195               	addwfc	(??_arp_parseFromRXBuffer+1)& (0+255),w,b
 11805  00105C  6F70               	movwf	(ethernetController_streamFromRXBuffer@startAddress+1)& (0+255),b
 11806  00105E  0E01               	movlw	1
 11807  001060  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
 11808  001064  0100               	movlb	0	; () banked
 11809  001066  6FA2               	movwf	(arp_parseFromRXBuffer@arp+5)& (0+255),b
 11810                           
 11811                           ; BSR set to: 0
 11812                           ;arp.c: 85: arp.operation = (ethernetController_streamFromRXBuffer(1, frame->memory.star
      +                          t + offset) << 8);
 11813  001068  EE20 F010          	lfsr	2,16
 11814  00106C  5174               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 11815  00106E  26D9               	addwf	fsr2l,f,c
 11816  001070  5175               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 11817  001072  22DA               	addwfc	fsr2h,f,c
 11818  001074  CFDE F094          	movff	postinc2,??_arp_parseFromRXBuffer
 11819  001078  CFDD F095          	movff	postdec2,??_arp_parseFromRXBuffer+1
 11820  00107C  519B               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 11821  00107E  2594               	addwf	??_arp_parseFromRXBuffer& (0+255),w,b
 11822  001080  6F6F               	movwf	ethernetController_streamFromRXBuffer@startAddress& (0+255),b
 11823  001082  519C               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 11824  001084  2195               	addwfc	(??_arp_parseFromRXBuffer+1)& (0+255),w,b
 11825  001086  6F70               	movwf	(ethernetController_streamFromRXBuffer@startAddress+1)& (0+255),b
 11826  001088  0E01               	movlw	1
 11827  00108A  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
 11828  00108E  0100               	movlb	0	; () banked
 11829  001090  6FA4               	movwf	(arp_parseFromRXBuffer@arp+7)& (0+255),b
 11830  001092  6BA3               	clrf	(arp_parseFromRXBuffer@arp+6)& (0+255),b
 11831                           
 11832                           ; BSR set to: 0
 11833                           ;arp.c: 86: arp.operation |= ethernetController_streamFromRXBuffer(1, frame->memory.star
      +                          t + offset);
 11834  001094  EE20 F010          	lfsr	2,16
 11835  001098  5174               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 11836  00109A  26D9               	addwf	fsr2l,f,c
 11837  00109C  5175               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 11838  00109E  22DA               	addwfc	fsr2h,f,c
 11839  0010A0  CFDE F094          	movff	postinc2,??_arp_parseFromRXBuffer
 11840  0010A4  CFDD F095          	movff	postdec2,??_arp_parseFromRXBuffer+1
 11841  0010A8  519B               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 11842  0010AA  2594               	addwf	??_arp_parseFromRXBuffer& (0+255),w,b
 11843  0010AC  6F6F               	movwf	ethernetController_streamFromRXBuffer@startAddress& (0+255),b
 11844  0010AE  519C               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 11845  0010B0  2195               	addwfc	(??_arp_parseFromRXBuffer+1)& (0+255),w,b
 11846  0010B2  6F70               	movwf	(ethernetController_streamFromRXBuffer@startAddress+1)& (0+255),b
 11847  0010B4  0E01               	movlw	1
 11848  0010B6  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
 11849  0010BA  0100               	movlb	0	; () banked
 11850  0010BC  6F96               	movwf	(??_arp_parseFromRXBuffer+2)& (0+255),b
 11851  0010BE  5196               	movf	(??_arp_parseFromRXBuffer+2)& (0+255),w,b
 11852  0010C0  13A3               	iorwf	(arp_parseFromRXBuffer@arp+6)& (0+255),f,b
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;arp.c: 89: for (uint8_t i = 0; i < arp.hlen; i++)
 11856  0010C2  0E00               	movlw	0
 11857  0010C4  6F97               	movwf	arp_parseFromRXBuffer@i& (0+255),b
 11858  0010C6  D024               	goto	l943
 11859  0010C8                     
 11860                           ; BSR set to: 0
 11861                           ;arp.c: 90: arp.senderMACAddress.address[i] = ethernetController_streamFromRXBuffer(1, f
      +                          rame->memory.start + offset);
 11862                           
 11863                           ; BSR set to: 0
 11864  0010C8  EE20 F010          	lfsr	2,16
 11865  0010CC  5174               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 11866  0010CE  26D9               	addwf	fsr2l,f,c
 11867  0010D0  5175               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 11868  0010D2  22DA               	addwfc	fsr2h,f,c
 11869  0010D4  CFDE F094          	movff	postinc2,??_arp_parseFromRXBuffer
 11870  0010D8  CFDD F095          	movff	postdec2,??_arp_parseFromRXBuffer+1
 11871  0010DC  519B               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 11872  0010DE  2594               	addwf	??_arp_parseFromRXBuffer& (0+255),w,b
 11873  0010E0  6F6F               	movwf	ethernetController_streamFromRXBuffer@startAddress& (0+255),b
 11874  0010E2  519C               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 11875  0010E4  2195               	addwfc	(??_arp_parseFromRXBuffer+1)& (0+255),w,b
 11876  0010E6  6F70               	movwf	(ethernetController_streamFromRXBuffer@startAddress+1)& (0+255),b
 11877  0010E8  0E01               	movlw	1
 11878  0010EA  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
 11879  0010EE  0100               	movlb	0	; () banked
 11880  0010F0  6F96               	movwf	(??_arp_parseFromRXBuffer+2)& (0+255),b
 11881  0010F2  5197               	movf	arp_parseFromRXBuffer@i& (0+255),w,b
 11882  0010F4  0D01               	mullw	1
 11883  0010F6  0E08               	movlw	8
 11884  0010F8  26F3               	addwf	prodl,f,c
 11885  0010FA  0E00               	movlw	0
 11886  0010FC  22F4               	addwfc	prodh,f,c
 11887  0010FE  0E9D               	movlw	low arp_parseFromRXBuffer@arp
 11888  001100  24F3               	addwf	prodl,w,c
 11889  001102  6ED9               	movwf	fsr2l,c
 11890  001104  0E00               	movlw	high arp_parseFromRXBuffer@arp
 11891  001106  20F4               	addwfc	prodh,w,c
 11892  001108  6EDA               	movwf	fsr2h,c
 11893  00110A  C096  FFDF         	movff	??_arp_parseFromRXBuffer+2,indf2
 11894                           
 11895                           ; BSR set to: 0
 11896  00110E  2B97               	incf	arp_parseFromRXBuffer@i& (0+255),f,b
 11897  001110                     l943:
 11898                           
 11899                           ; BSR set to: 0
 11900                           
 11901                           ; BSR set to: 0
 11902  001110  51A1               	movf	(arp_parseFromRXBuffer@arp+4)& (0+255),w,b
 11903  001112  5D97               	subwf	arp_parseFromRXBuffer@i& (0+255),w,b
 11904  001114  A0D8               	btfss	status,0,c
 11905  001116  D7D8               	goto	l944
 11906                           
 11907                           ; BSR set to: 0
 11908                           ;arp.c: 91: for (uint8_t i = 0; i < arp.plen; i++)
 11909                           
 11910                           ; BSR set to: 0
 11911  001118  0E00               	movlw	0
 11912  00111A  6F98               	movwf	arp_parseFromRXBuffer@i_3038& (0+255),b
 11913  00111C  D024               	goto	l946
 11914  00111E                     
 11915                           ; BSR set to: 0
 11916                           ;arp.c: 92: arp.senderIPAddress.address[i] = ethernetController_streamFromRXBuffer(1, fr
      +                          ame->memory.start + offset);
 11917                           
 11918                           ; BSR set to: 0
 11919  00111E  EE20 F010          	lfsr	2,16
 11920  001122  5174               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 11921  001124  26D9               	addwf	fsr2l,f,c
 11922  001126  5175               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 11923  001128  22DA               	addwfc	fsr2h,f,c
 11924  00112A  CFDE F094          	movff	postinc2,??_arp_parseFromRXBuffer
 11925  00112E  CFDD F095          	movff	postdec2,??_arp_parseFromRXBuffer+1
 11926  001132  519B               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 11927  001134  2594               	addwf	??_arp_parseFromRXBuffer& (0+255),w,b
 11928  001136  6F6F               	movwf	ethernetController_streamFromRXBuffer@startAddress& (0+255),b
 11929  001138  519C               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 11930  00113A  2195               	addwfc	(??_arp_parseFromRXBuffer+1)& (0+255),w,b
 11931  00113C  6F70               	movwf	(ethernetController_streamFromRXBuffer@startAddress+1)& (0+255),b
 11932  00113E  0E01               	movlw	1
 11933  001140  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
 11934  001144  0100               	movlb	0	; () banked
 11935  001146  6F96               	movwf	(??_arp_parseFromRXBuffer+2)& (0+255),b
 11936  001148  5198               	movf	arp_parseFromRXBuffer@i_3038& (0+255),w,b
 11937  00114A  0D01               	mullw	1
 11938  00114C  0E0E               	movlw	14
 11939  00114E  26F3               	addwf	prodl,f,c
 11940  001150  0E00               	movlw	0
 11941  001152  22F4               	addwfc	prodh,f,c
 11942  001154  0E9D               	movlw	low arp_parseFromRXBuffer@arp
 11943  001156  24F3               	addwf	prodl,w,c
 11944  001158  6ED9               	movwf	fsr2l,c
 11945  00115A  0E00               	movlw	high arp_parseFromRXBuffer@arp
 11946  00115C  20F4               	addwfc	prodh,w,c
 11947  00115E  6EDA               	movwf	fsr2h,c
 11948  001160  C096  FFDF         	movff	??_arp_parseFromRXBuffer+2,indf2
 11949                           
 11950                           ; BSR set to: 0
 11951  001164  2B98               	incf	arp_parseFromRXBuffer@i_3038& (0+255),f,b
 11952  001166                     l946:
 11953                           
 11954                           ; BSR set to: 0
 11955                           
 11956                           ; BSR set to: 0
 11957  001166  51A2               	movf	(arp_parseFromRXBuffer@arp+5)& (0+255),w,b
 11958  001168  5D98               	subwf	arp_parseFromRXBuffer@i_3038& (0+255),w,b
 11959  00116A  A0D8               	btfss	status,0,c
 11960  00116C  D7D8               	goto	l947
 11961                           
 11962                           ; BSR set to: 0
 11963                           ;arp.c: 94: for (uint8_t i = 0; i < arp.hlen; i++)
 11964                           
 11965                           ; BSR set to: 0
 11966  00116E  0E00               	movlw	0
 11967  001170  6F99               	movwf	arp_parseFromRXBuffer@i_3039& (0+255),b
 11968  001172  D024               	goto	l949
 11969  001174                     
 11970                           ; BSR set to: 0
 11971                           ;arp.c: 95: arp.targetMACAddress.address[i] = ethernetController_streamFromRXBuffer(1, f
      +                          rame->memory.start + offset);
 11972                           
 11973                           ; BSR set to: 0
 11974  001174  EE20 F010          	lfsr	2,16
 11975  001178  5174               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 11976  00117A  26D9               	addwf	fsr2l,f,c
 11977  00117C  5175               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 11978  00117E  22DA               	addwfc	fsr2h,f,c
 11979  001180  CFDE F094          	movff	postinc2,??_arp_parseFromRXBuffer
 11980  001184  CFDD F095          	movff	postdec2,??_arp_parseFromRXBuffer+1
 11981  001188  519B               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 11982  00118A  2594               	addwf	??_arp_parseFromRXBuffer& (0+255),w,b
 11983  00118C  6F6F               	movwf	ethernetController_streamFromRXBuffer@startAddress& (0+255),b
 11984  00118E  519C               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 11985  001190  2195               	addwfc	(??_arp_parseFromRXBuffer+1)& (0+255),w,b
 11986  001192  6F70               	movwf	(ethernetController_streamFromRXBuffer@startAddress+1)& (0+255),b
 11987  001194  0E01               	movlw	1
 11988  001196  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
 11989  00119A  0100               	movlb	0	; () banked
 11990  00119C  6F96               	movwf	(??_arp_parseFromRXBuffer+2)& (0+255),b
 11991  00119E  5199               	movf	arp_parseFromRXBuffer@i_3039& (0+255),w,b
 11992  0011A0  0D01               	mullw	1
 11993  0011A2  0E12               	movlw	18
 11994  0011A4  26F3               	addwf	prodl,f,c
 11995  0011A6  0E00               	movlw	0
 11996  0011A8  22F4               	addwfc	prodh,f,c
 11997  0011AA  0E9D               	movlw	low arp_parseFromRXBuffer@arp
 11998  0011AC  24F3               	addwf	prodl,w,c
 11999  0011AE  6ED9               	movwf	fsr2l,c
 12000  0011B0  0E00               	movlw	high arp_parseFromRXBuffer@arp
 12001  0011B2  20F4               	addwfc	prodh,w,c
 12002  0011B4  6EDA               	movwf	fsr2h,c
 12003  0011B6  C096  FFDF         	movff	??_arp_parseFromRXBuffer+2,indf2
 12004                           
 12005                           ; BSR set to: 0
 12006  0011BA  2B99               	incf	arp_parseFromRXBuffer@i_3039& (0+255),f,b
 12007  0011BC                     l949:
 12008                           
 12009                           ; BSR set to: 0
 12010                           
 12011                           ; BSR set to: 0
 12012  0011BC  51A1               	movf	(arp_parseFromRXBuffer@arp+4)& (0+255),w,b
 12013  0011BE  5D99               	subwf	arp_parseFromRXBuffer@i_3039& (0+255),w,b
 12014  0011C0  A0D8               	btfss	status,0,c
 12015  0011C2  D7D8               	goto	l950
 12016                           
 12017                           ; BSR set to: 0
 12018                           ;arp.c: 96: for (uint8_t i = 0; i < arp.plen; i++)
 12019                           
 12020                           ; BSR set to: 0
 12021  0011C4  0E00               	movlw	0
 12022  0011C6  6F9A               	movwf	arp_parseFromRXBuffer@i_3040& (0+255),b
 12023  0011C8  D024               	goto	l952
 12024  0011CA                     
 12025                           ; BSR set to: 0
 12026                           ;arp.c: 97: arp.targetIPAddress.address[i] = ethernetController_streamFromRXBuffer(1, fr
      +                          ame->memory.start + offset);
 12027                           
 12028                           ; BSR set to: 0
 12029  0011CA  EE20 F010          	lfsr	2,16
 12030  0011CE  5174               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 12031  0011D0  26D9               	addwf	fsr2l,f,c
 12032  0011D2  5175               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 12033  0011D4  22DA               	addwfc	fsr2h,f,c
 12034  0011D6  CFDE F094          	movff	postinc2,??_arp_parseFromRXBuffer
 12035  0011DA  CFDD F095          	movff	postdec2,??_arp_parseFromRXBuffer+1
 12036  0011DE  519B               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 12037  0011E0  2594               	addwf	??_arp_parseFromRXBuffer& (0+255),w,b
 12038  0011E2  6F6F               	movwf	ethernetController_streamFromRXBuffer@startAddress& (0+255),b
 12039  0011E4  519C               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 12040  0011E6  2195               	addwfc	(??_arp_parseFromRXBuffer+1)& (0+255),w,b
 12041  0011E8  6F70               	movwf	(ethernetController_streamFromRXBuffer@startAddress+1)& (0+255),b
 12042  0011EA  0E01               	movlw	1
 12043  0011EC  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
 12044  0011F0  0100               	movlb	0	; () banked
 12045  0011F2  6F96               	movwf	(??_arp_parseFromRXBuffer+2)& (0+255),b
 12046  0011F4  519A               	movf	arp_parseFromRXBuffer@i_3040& (0+255),w,b
 12047  0011F6  0D01               	mullw	1
 12048  0011F8  0E18               	movlw	24
 12049  0011FA  26F3               	addwf	prodl,f,c
 12050  0011FC  0E00               	movlw	0
 12051  0011FE  22F4               	addwfc	prodh,f,c
 12052  001200  0E9D               	movlw	low arp_parseFromRXBuffer@arp
 12053  001202  24F3               	addwf	prodl,w,c
 12054  001204  6ED9               	movwf	fsr2l,c
 12055  001206  0E00               	movlw	high arp_parseFromRXBuffer@arp
 12056  001208  20F4               	addwfc	prodh,w,c
 12057  00120A  6EDA               	movwf	fsr2h,c
 12058  00120C  C096  FFDF         	movff	??_arp_parseFromRXBuffer+2,indf2
 12059                           
 12060                           ; BSR set to: 0
 12061  001210  2B9A               	incf	arp_parseFromRXBuffer@i_3040& (0+255),f,b
 12062  001212                     l952:
 12063                           
 12064                           ; BSR set to: 0
 12065                           
 12066                           ; BSR set to: 0
 12067  001212  51A2               	movf	(arp_parseFromRXBuffer@arp+5)& (0+255),w,b
 12068  001214  5D9A               	subwf	arp_parseFromRXBuffer@i_3040& (0+255),w,b
 12069  001216  A0D8               	btfss	status,0,c
 12070  001218  D7D8               	goto	l953
 12071                           
 12072                           ; BSR set to: 0
 12073                           ;arp.c: 99: ethernetController_streamFromRXBuffer(2, frame->memory.start + offset);
 12074                           
 12075                           ; BSR set to: 0
 12076  00121A  EE20 F010          	lfsr	2,16
 12077  00121E  5174               	movf	arp_parseFromRXBuffer@frame& (0+255),w,b
 12078  001220  26D9               	addwf	fsr2l,f,c
 12079  001222  5175               	movf	(arp_parseFromRXBuffer@frame+1)& (0+255),w,b
 12080  001224  22DA               	addwfc	fsr2h,f,c
 12081  001226  CFDE F094          	movff	postinc2,??_arp_parseFromRXBuffer
 12082  00122A  CFDD F095          	movff	postdec2,??_arp_parseFromRXBuffer+1
 12083  00122E  519B               	movf	arp_parseFromRXBuffer@offset& (0+255),w,b
 12084  001230  2594               	addwf	??_arp_parseFromRXBuffer& (0+255),w,b
 12085  001232  6F6F               	movwf	ethernetController_streamFromRXBuffer@startAddress& (0+255),b
 12086  001234  519C               	movf	(arp_parseFromRXBuffer@offset+1)& (0+255),w,b
 12087  001236  2195               	addwfc	(??_arp_parseFromRXBuffer+1)& (0+255),w,b
 12088  001238  6F70               	movwf	(ethernetController_streamFromRXBuffer@startAddress+1)& (0+255),b
 12089  00123A  0E02               	movlw	2
 12090  00123C  ECA1  F026         	call	_ethernetController_streamFromRXBuffer
 12091                           
 12092                           ;arp.c: 101: if (ipv4_isAllZero(&arp.senderIPAddress)) {
 12093  001240  0EAB               	movlw	low (arp_parseFromRXBuffer@arp+14)
 12094  001242  0100               	movlb	0	; () banked
 12095  001244  6F60               	movwf	ipv4_isAllZero@ip& (0+255),b
 12096  001246  0E00               	movlw	high (arp_parseFromRXBuffer@arp+14)
 12097  001248  6F61               	movwf	(ipv4_isAllZero@ip+1)& (0+255),b
 12098  00124A  EC09  F02A         	call	_ipv4_isAllZero	;wreg free
 12099  00124E  0100               	movlb	0	; () banked
 12100  001250  A0D8               	btfss	status,0,c
 12101  001252  D002               	goto	l955
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;arp.c: 102: arp.fIsProbe = 1;
 12105  001254  83B9               	bsf	(arp_parseFromRXBuffer@arp+28)& (0+255),1,b
 12106  001256  D03C               	goto	l959
 12107  001258                     l955:
 12108                           
 12109                           ; BSR set to: 0
 12110                           ;arp.c: 105: arp.fIsProbe = 0;
 12111  001258  93B9               	bcf	(arp_parseFromRXBuffer@arp+28)& (0+255),1,b
 12112                           
 12113                           ; BSR set to: 0
 12114                           ;arp.c: 107: if (ipv4_cmp(&arp.senderIPAddress, &arp.targetIPAddress) &&
 12115                           ;arp.c: 108: mac_isAllZero(&arp.targetMACAddress) &&
 12116                           ;arp.c: 109: arp.operation == ARP_REQUEST) {
 12117  00125A  0EAB               	movlw	low (arp_parseFromRXBuffer@arp+14)
 12118  00125C  6F60               	movwf	ipv4_cmp@a& (0+255),b
 12119  00125E  0E00               	movlw	high (arp_parseFromRXBuffer@arp+14)
 12120  001260  6F61               	movwf	(ipv4_cmp@a+1)& (0+255),b
 12121  001262  0EB5               	movlw	low (arp_parseFromRXBuffer@arp+24)
 12122  001264  6F62               	movwf	ipv4_cmp@b& (0+255),b
 12123  001266  0E00               	movlw	high (arp_parseFromRXBuffer@arp+24)
 12124  001268  6F63               	movwf	(ipv4_cmp@b+1)& (0+255),b
 12125  00126A  ECEF  F028         	call	_ipv4_cmp	;wreg free
 12126  00126E  0100               	movlb	0	; () banked
 12127  001270  A0D8               	btfss	status,0,c
 12128  001272  D00D               	goto	l957
 12129                           
 12130                           ; BSR set to: 0
 12131  001274  0EAF               	movlw	low (arp_parseFromRXBuffer@arp+18)
 12132  001276  6F60               	movwf	mac_isAllZero@mac& (0+255),b
 12133  001278  0E00               	movlw	high (arp_parseFromRXBuffer@arp+18)
 12134  00127A  6F61               	movwf	(mac_isAllZero@mac+1)& (0+255),b
 12135  00127C  ECF1  F029         	call	_mac_isAllZero	;wreg free
 12136  001280  0100               	movlb	0	; () banked
 12137  001282  A0D8               	btfss	status,0,c
 12138  001284  D004               	goto	l957
 12139                           
 12140                           ; BSR set to: 0
 12141  001286  05A3               	decf	(arp_parseFromRXBuffer@arp+6)& (0+255),w,b
 12142  001288  11A4               	iorwf	(arp_parseFromRXBuffer@arp+7)& (0+255),w,b
 12143  00128A  B4D8               	btfsc	status,2,c
 12144  00128C  D01F               	goto	u10970
 12145  00128E                     l957:
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;arp.c: 113: if (ipv4_cmp(&arp.senderIPAddress, &arp.targetIPAddress) &&
 12149                           ;arp.c: 114: mac_cmp(&arp.senderMACAddress, &arp.targetMACAddress) &&
 12150                           ;arp.c: 115: arp.operation == ARP_REPLY) {
 12151                           
 12152                           ; BSR set to: 0
 12153  00128E  0EAB               	movlw	low (arp_parseFromRXBuffer@arp+14)
 12154  001290  6F60               	movwf	ipv4_cmp@a& (0+255),b
 12155  001292  0E00               	movlw	high (arp_parseFromRXBuffer@arp+14)
 12156  001294  6F61               	movwf	(ipv4_cmp@a+1)& (0+255),b
 12157  001296  0EB5               	movlw	low (arp_parseFromRXBuffer@arp+24)
 12158  001298  6F62               	movwf	ipv4_cmp@b& (0+255),b
 12159  00129A  0E00               	movlw	high (arp_parseFromRXBuffer@arp+24)
 12160  00129C  6F63               	movwf	(ipv4_cmp@b+1)& (0+255),b
 12161  00129E  ECEF  F028         	call	_ipv4_cmp	;wreg free
 12162  0012A2  0100               	movlb	0	; () banked
 12163  0012A4  A0D8               	btfss	status,0,c
 12164  0012A6  D014               	goto	l959
 12165                           
 12166                           ; BSR set to: 0
 12167  0012A8  0EA5               	movlw	low (arp_parseFromRXBuffer@arp+8)
 12168  0012AA  6F60               	movwf	mac_cmp@a& (0+255),b
 12169  0012AC  0E00               	movlw	high (arp_parseFromRXBuffer@arp+8)
 12170  0012AE  6F61               	movwf	(mac_cmp@a+1)& (0+255),b
 12171  0012B0  0EAF               	movlw	low (arp_parseFromRXBuffer@arp+18)
 12172  0012B2  6F62               	movwf	mac_cmp@b& (0+255),b
 12173  0012B4  0E00               	movlw	high (arp_parseFromRXBuffer@arp+18)
 12174  0012B6  6F63               	movwf	(mac_cmp@b+1)& (0+255),b
 12175  0012B8  ECCE  F028         	call	_mac_cmp	;wreg free
 12176  0012BC  0100               	movlb	0	; () banked
 12177  0012BE  A0D8               	btfss	status,0,c
 12178  0012C0  D007               	goto	l959
 12179                           
 12180                           ; BSR set to: 0
 12181  0012C2  0E02               	movlw	2
 12182  0012C4  19A3               	xorwf	(arp_parseFromRXBuffer@arp+6)& (0+255),w,b
 12183  0012C6  11A4               	iorwf	(arp_parseFromRXBuffer@arp+7)& (0+255),w,b
 12184  0012C8  A4D8               	btfss	status,2,c
 12185  0012CA  D002               	goto	l959
 12186  0012CC                     u10970:
 12187                           
 12188                           ; BSR set to: 0
 12189                           ;arp.c: 116: arp.fIsGratuitous = 1;
 12190  0012CC  81B9               	bsf	(arp_parseFromRXBuffer@arp+28)& (0+255),0,b
 12191                           
 12192                           ;arp.c: 117: } else {
 12193  0012CE  D001               	goto	l960
 12194  0012D0                     l959:
 12195                           
 12196                           ; BSR set to: 0
 12197                           ;arp.c: 118: arp.fIsGratuitous = 0;
 12198  0012D0  91B9               	bcf	(arp_parseFromRXBuffer@arp+28)& (0+255),0,b
 12199  0012D2                     l960:
 12200                           
 12201                           ; BSR set to: 0
 12202                           ;arp.c: 119: }
 12203                           ;arp.c: 120: }
 12204                           ;arp.c: 121: }
 12205                           ;arp.c: 124: if ((arp.htype != ARP_HTYPE_ETHERNET) ||
 12206                           ;arp.c: 125: (arp.ptype != ARP_PTYPE_IPv4) ||
 12207                           ;arp.c: 126: (arp.operation > 2) ||
 12208                           ;arp.c: 127: (arp.hlen != 6u) ||
 12209                           ;arp.c: 128: (arp.plen != 4u)) {
 12210                           
 12211                           ; BSR set to: 0
 12212                           
 12213                           ; BSR set to: 0
 12214                           
 12215                           ; BSR set to: 0
 12216  0012D2  059D               	decf	arp_parseFromRXBuffer@arp& (0+255),w,b
 12217  0012D4  119E               	iorwf	(arp_parseFromRXBuffer@arp+1)& (0+255),w,b
 12218  0012D6  A4D8               	btfss	status,2,c
 12219  0012D8  D013               	goto	u11020
 12220                           
 12221                           ; BSR set to: 0
 12222  0012DA  0E08               	movlw	8
 12223  0012DC  19A0               	xorwf	(arp_parseFromRXBuffer@arp+3)& (0+255),w,b
 12224  0012DE  119F               	iorwf	(arp_parseFromRXBuffer@arp+2)& (0+255),w,b
 12225  0012E0  A4D8               	btfss	status,2,c
 12226  0012E2  D00E               	goto	u11020
 12227                           
 12228                           ; BSR set to: 0
 12229  0012E4  51A4               	movf	(arp_parseFromRXBuffer@arp+7)& (0+255),w,b
 12230  0012E6  E10C               	bnz	l9479
 12231  0012E8  0E03               	movlw	3
 12232  0012EA  5DA3               	subwf	(arp_parseFromRXBuffer@arp+6)& (0+255),w,b
 12233  0012EC  B0D8               	btfsc	status,0,c
 12234  0012EE  D008               	goto	u11020
 12235                           
 12236                           ; BSR set to: 0
 12237  0012F0  0E06               	movlw	6
 12238  0012F2  19A1               	xorwf	(arp_parseFromRXBuffer@arp+4)& (0+255),w,b
 12239  0012F4  A4D8               	btfss	status,2,c
 12240  0012F6  D004               	goto	u11020
 12241                           
 12242                           ; BSR set to: 0
 12243  0012F8  0E04               	movlw	4
 12244  0012FA  19A2               	xorwf	(arp_parseFromRXBuffer@arp+5)& (0+255),w,b
 12245  0012FC  B4D8               	btfsc	status,2,c
 12246  0012FE  D004               	goto	l961
 12247  001300                     u11020:
 12248  001300                     l9479:
 12249                           
 12250                           ; BSR set to: 0
 12251                           ;arp.c: 129: arp.err.code = ERROR_ARP_INVALID_VALUES;
 12252  001300  0E01               	movlw	1
 12253  001302  6FBC               	movwf	(arp_parseFromRXBuffer@arp+31)& (0+255),b
 12254  001304  0E95               	movlw	149
 12255  001306  D003               	goto	L1
 12256  001308                     l961:
 12257                           
 12258                           ; BSR set to: 0
 12259                           ;arp.c: 132: arp.err.code = (uint16_t)0;
 12260                           
 12261                           ; BSR set to: 0
 12262  001308  0E00               	movlw	0
 12263  00130A  6FBC               	movwf	(arp_parseFromRXBuffer@arp+31)& (0+255),b
 12264  00130C  0E00               	movlw	0
 12265  00130E                     L1:
 12266  00130E  6FBB               	movwf	(arp_parseFromRXBuffer@arp+30)& (0+255),b
 12267                           
 12268                           ;arp.c: 133: arp.err.module = ERROR_MODULE_ARP;
 12269  001310  0E03               	movlw	3
 12270  001312  6FBA               	movwf	(arp_parseFromRXBuffer@arp+29)& (0+255),b
 12271                           
 12272                           ; BSR set to: 0
 12273                           ;arp.c: 134: }
 12274                           ;arp.c: 136: return arp;
 12275                           
 12276                           ; BSR set to: 0
 12277  001314  EE20  F09D         	lfsr	2,arp_parseFromRXBuffer@arp
 12278  001318  EE00  F074         	lfsr	0,?_arp_parseFromRXBuffer
 12279  00131C  0E1F               	movlw	31
 12280  00131E                     u11031:
 12281  00131E  CFDB FFEB          	movff	plusw2,plusw0
 12282  001322  06E8               	decf	wreg,f,c
 12283  001324  E2FC               	bc	u11031
 12284  001326  0012               	return	
 12285  001328                     __end_of_arp_parseFromRXBuffer:
 12286                           	opt stack 0
 12287                           tblptru	equ	0xFF8
 12288                           tblptrh	equ	0xFF7
 12289                           tblptrl	equ	0xFF6
 12290                           tablat	equ	0xFF5
 12291                           prodh	equ	0xFF4
 12292                           prodl	equ	0xFF3
 12293                           intcon	equ	0xFF2
 12294                           intcon3	equ	0xFF0
 12295                           indf0	equ	0xFEF
 12296                           postinc0	equ	0xFEE
 12297                           plusw0	equ	0xFEB
 12298                           fsr0h	equ	0xFEA
 12299                           fsr0l	equ	0xFE9
 12300                           wreg	equ	0xFE8
 12301                           indf1	equ	0xFE7
 12302                           postinc1	equ	0xFE6
 12303                           postdec1	equ	0xFE5
 12304                           plusw1	equ	0xFE3
 12305                           fsr1h	equ	0xFE2
 12306                           fsr1l	equ	0xFE1
 12307                           indf2	equ	0xFDF
 12308                           postinc2	equ	0xFDE
 12309                           postdec2	equ	0xFDD
 12310                           plusw2	equ	0xFDB
 12311                           fsr2h	equ	0xFDA
 12312                           fsr2l	equ	0xFD9
 12313                           status	equ	0xFD8
 12314                           
 12315 ;; *************** function _mac_cmp *****************
 12316 ;; Defined at:
 12317 ;;		line 39 in file "src/eth/mac.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;  a               2    0[BANK0 ] PTR struct macaddress
 12320 ;;		 -> arp_parseFromRXBuffer@arp(32), 
 12321 ;;  b               2    2[BANK0 ] PTR struct macaddress
 12322 ;;		 -> arp_parseFromRXBuffer@arp(32), 
 12323 ;; Auto vars:     Size  Location     Type
 12324 ;;  i               1    6[BANK0 ] unsigned char 
 12325 ;; Return value:  Size  Location     Type
 12326 ;;		None               void
 12327 ;; Registers used:
 12328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12329 ;; Tracked objects:
 12330 ;;		On entry : 0/0
 12331 ;;		On exit  : 0/0
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12334 ;;      Params:         0       4       0       0       0       0       0       0       0
 12335 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12336 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12337 ;;      Totals:         0       7       0       0       0       0       0       0       0
 12338 ;;Total ram usage:        7 bytes
 12339 ;; Hardware stack levels used:    1
 12340 ;; Hardware stack levels required when called:    4
 12341 ;; This function calls:
 12342 ;;		Nothing
 12343 ;; This function is called by:
 12344 ;;		_arp_parseFromRXBuffer
 12345 ;; This function uses a non-reentrant model
 12346 ;;
 12347                           
 12348                           	psect	text37
 12349  00519C                     __ptext37:
 12350                           	opt stack 0
 12351  00519C                     _mac_cmp:
 12352                           	opt stack 22
 12353                           
 12354                           ;mac.c: 40: for (uint8_t i = 0; i < 6; i++) {
 12355                           
 12356                           ; BSR set to: 0
 12357                           ;incstack = 0
 12358  00519C  0E00               	movlw	0
 12359  00519E  0100               	movlb	0	; () banked
 12360  0051A0  6F66               	movwf	mac_cmp@i& (0+255),b
 12361  0051A2                     l9097:
 12362                           
 12363                           ; BSR set to: 0
 12364  0051A2  0E05               	movlw	5
 12365  0051A4  6566               	cpfsgt	mac_cmp@i& (0+255),b
 12366  0051A6  D001               	goto	l390
 12367  0051A8  D018               	goto	u10040
 12368  0051AA                     l390:
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;mac.c: 41: if (a->address[i] != b->address[i])
 12372                           
 12373                           ; BSR set to: 0
 12374  0051AA  5166               	movf	mac_cmp@i& (0+255),w,b
 12375  0051AC  0D01               	mullw	1
 12376  0051AE  50F3               	movf	prodl,w,c
 12377  0051B0  2562               	addwf	mac_cmp@b& (0+255),w,b
 12378  0051B2  6ED9               	movwf	fsr2l,c
 12379  0051B4  50F4               	movf	prodh,w,c
 12380  0051B6  2163               	addwfc	(mac_cmp@b+1)& (0+255),w,b
 12381  0051B8  6EDA               	movwf	fsr2h,c
 12382  0051BA  5166               	movf	mac_cmp@i& (0+255),w,b
 12383  0051BC  0D01               	mullw	1
 12384  0051BE  50F3               	movf	prodl,w,c
 12385  0051C0  2560               	addwf	mac_cmp@a& (0+255),w,b
 12386  0051C2  6EE1               	movwf	fsr1l,c
 12387  0051C4  50F4               	movf	prodh,w,c
 12388  0051C6  2161               	addwfc	(mac_cmp@a+1)& (0+255),w,b
 12389  0051C8  6EE2               	movwf	fsr1h,c
 12390  0051CA  50DE               	movf	postinc2,w,c
 12391  0051CC  18E6               	xorwf	postinc1,w,c
 12392  0051CE  B4D8               	btfsc	status,2,c
 12393  0051D0  D002               	goto	l392
 12394                           
 12395                           ; BSR set to: 0
 12396                           ;mac.c: 42: return 0;
 12397  0051D2  90D8               	bcf	status,0,c
 12398                           
 12399                           ; BSR set to: 0
 12400  0051D4  0012               	return	
 12401  0051D6                     l392:
 12402                           
 12403                           ; BSR set to: 0
 12404                           
 12405                           ; BSR set to: 0
 12406  0051D6  2B66               	incf	mac_cmp@i& (0+255),f,b
 12407  0051D8  D7E4               	goto	l9097
 12408  0051DA                     u10040:
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;mac.c: 43: }
 12412                           ;mac.c: 44: return 1;
 12413                           
 12414                           ; BSR set to: 0
 12415  0051DA  80D8               	bsf	status,0,c
 12416  0051DC  0012               	return	
 12417  0051DE                     __end_of_mac_cmp:
 12418                           	opt stack 0
 12419                           tblptru	equ	0xFF8
 12420                           tblptrh	equ	0xFF7
 12421                           tblptrl	equ	0xFF6
 12422                           tablat	equ	0xFF5
 12423                           prodh	equ	0xFF4
 12424                           prodl	equ	0xFF3
 12425                           intcon	equ	0xFF2
 12426                           intcon3	equ	0xFF0
 12427                           indf0	equ	0xFEF
 12428                           postinc0	equ	0xFEE
 12429                           plusw0	equ	0xFEB
 12430                           fsr0h	equ	0xFEA
 12431                           fsr0l	equ	0xFE9
 12432                           wreg	equ	0xFE8
 12433                           indf1	equ	0xFE7
 12434                           postinc1	equ	0xFE6
 12435                           postdec1	equ	0xFE5
 12436                           plusw1	equ	0xFE3
 12437                           fsr1h	equ	0xFE2
 12438                           fsr1l	equ	0xFE1
 12439                           indf2	equ	0xFDF
 12440                           postinc2	equ	0xFDE
 12441                           postdec2	equ	0xFDD
 12442                           plusw2	equ	0xFDB
 12443                           fsr2h	equ	0xFDA
 12444                           fsr2l	equ	0xFD9
 12445                           status	equ	0xFD8
 12446                           
 12447 ;; *************** function _ethernetController_streamFromRXBuffer *****************
 12448 ;; Defined at:
 12449 ;;		line 350 in file "src/enc424j600/ENC424J600.c"
 12450 ;; Parameters:    Size  Location     Type
 12451 ;;  startEnd        1    wreg     unsigned char 
 12452 ;;  startAddress    2   15[BANK0 ] unsigned int 
 12453 ;; Auto vars:     Size  Location     Type
 12454 ;;  startEnd        1   17[BANK0 ] unsigned char 
 12455 ;;  temp            1   19[BANK0 ] unsigned char 
 12456 ;;  opcode          1   18[BANK0 ] unsigned char 
 12457 ;; Return value:  Size  Location     Type
 12458 ;;                  1    wreg      unsigned char 
 12459 ;; Registers used:
 12460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12461 ;; Tracked objects:
 12462 ;;		On entry : 0/0
 12463 ;;		On exit  : 0/0
 12464 ;;		Unchanged: 0/0
 12465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12466 ;;      Params:         0       2       0       0       0       0       0       0       0
 12467 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12468 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12469 ;;      Totals:         0       5       0       0       0       0       0       0       0
 12470 ;;Total ram usage:        5 bytes
 12471 ;; Hardware stack levels used:    1
 12472 ;; Hardware stack levels required when called:    7
 12473 ;; This function calls:
 12474 ;;		_enc424j600_readSPI
 12475 ;;		_enc424j600_setERXDATAReadPointer
 12476 ;;		_enc424j600_writeSPI
 12477 ;; This function is called by:
 12478 ;;		_arp_parseFromRXBuffer
 12479 ;;		_ipv4_parseHeader
 12480 ;; This function uses a non-reentrant model
 12481 ;;
 12482                           
 12483                           	psect	text38
 12484  004D42                     __ptext38:
 12485                           	opt stack 0
 12486  004D42                     _ethernetController_streamFromRXBuffer:
 12487                           	opt stack 19
 12488                           
 12489                           ; BSR set to: 0
 12490                           ;incstack = 0
 12491                           ;ethernetController_streamFromRXBuffer@startEnd stored from wreg
 12492  004D42  0100               	movlb	0	; () banked
 12493  004D44  6F71               	movwf	ethernetController_streamFromRXBuffer@startEnd& (0+255),b
 12494                           
 12495                           ;ENC424J600.c: 351: uint8_t temp;
 12496                           ;ENC424J600.c: 352: uint8_t opcode;
 12497                           ;ENC424J600.c: 353: switch (startEnd) {
 12498  004D46  D01F               	goto	l179
 12499  004D48                     
 12500                           ;ENC424J600.c: 355: enc424j600_setERXDATAReadPointer(startAddress);
 12501  004D48  C06F  F06A         	movff	ethernetController_streamFromRXBuffer@startAddress,enc424j600_setERXDATAReadPoint
      +                          er@addr
 12502  004D4C  C070  F06B         	movff	ethernetController_streamFromRXBuffer@startAddress+1,enc424j600_setERXDATAReadPoi
      +                          nter@addr+1
 12503  004D50  EC4C  F029         	call	_enc424j600_setERXDATAReadPointer	;wreg free
 12504                           
 12505                           ;ENC424J600.c: 356: opcode = 0x2C;
 12506  004D54  0E2C               	movlw	44
 12507  004D56  0100               	movlb	0	; () banked
 12508  004D58  6F72               	movwf	ethernetController_streamFromRXBuffer@opcode& (0+255),b
 12509                           
 12510                           ; BSR set to: 0
 12511                           ;ENC424J600.c: 357: PORTBbits.RB4=0;
 12512  004D5A  9881               	bcf	3969,4,c	;volatile
 12513                           
 12514                           ; BSR set to: 0
 12515                           ;ENC424J600.c: 358: enc424j600_writeSPI(&opcode);
 12516  004D5C  0E72               	movlw	low ethernetController_streamFromRXBuffer@opcode
 12517  004D5E  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 12518  004D60  0E00               	movlw	high ethernetController_streamFromRXBuffer@opcode
 12519  004D62  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 12520  004D64  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 12521                           
 12522                           ;ENC424J600.c: 359: return 0;
 12523  004D68  0E00               	movlw	0
 12524  004D6A  0012               	return	
 12525  004D6C                     
 12526                           ;ENC424J600.c: 361: enc424j600_readSPI(&temp);
 12527  004D6C  0E73               	movlw	low ethernetController_streamFromRXBuffer@temp
 12528  004D6E  0100               	movlb	0	; () banked
 12529  004D70  6F60               	movwf	enc424j600_readSPI@data& (0+255),b
 12530  004D72  0E00               	movlw	high ethernetController_streamFromRXBuffer@temp
 12531  004D74  6F61               	movwf	(enc424j600_readSPI@data+1)& (0+255),b
 12532  004D76  EC06  F026         	call	_enc424j600_readSPI	;wreg free
 12533                           
 12534                           ;ENC424J600.c: 362: return temp;
 12535  004D7A  0100               	movlb	0	; () banked
 12536  004D7C  5173               	movf	ethernetController_streamFromRXBuffer@temp& (0+255),w,b
 12537                           
 12538                           ; BSR set to: 0
 12539  004D7E  0012               	return	
 12540  004D80                     l183:
 12541                           
 12542                           ; BSR set to: 0
 12543                           ;ENC424J600.c: 364: PORTBbits.RB4=1;
 12544  004D80  8881               	bsf	3969,4,c	;volatile
 12545                           
 12546                           ; BSR set to: 0
 12547                           ;ENC424J600.c: 374: return 0;
 12548  004D82  0E00               	movlw	0
 12549                           
 12550                           ; BSR set to: 0
 12551  004D84  0012               	return	
 12552  004D86                     l179:
 12553                           
 12554                           ; BSR set to: 0
 12555  004D86  0100               	movlb	0	; () banked
 12556  004D88  5171               	movf	ethernetController_streamFromRXBuffer@startEnd& (0+255),w,b
 12557                           
 12558                           ; Switch size 1, requested type "space"
 12559                           ; Number of cases is 3, Range of values is 0 to 2
 12560                           ; switch strategies available:
 12561                           ; Name         Instructions Cycles
 12562                           ; simple_byte           10     6 (average)
 12563                           ;	Chosen strategy is simple_byte
 12564  004D8A  0A00               	xorlw	0	; case 0
 12565  004D8C  B4D8               	btfsc	status,2,c
 12566  004D8E  D7DC               	goto	l180
 12567  004D90  0A01               	xorlw	1	; case 1
 12568  004D92  B4D8               	btfsc	status,2,c
 12569  004D94  D7EB               	goto	l182
 12570  004D96  0A03               	xorlw	3	; case 2
 12571  004D98  B4D8               	btfsc	status,2,c
 12572  004D9A  D7F2               	goto	l183
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;ENC424J600.c: 376: return 0;
 12576                           
 12577                           ; BSR set to: 0
 12578  004D9C  0E00               	movlw	0
 12579  004D9E  0012               	return	
 12580  004DA0                     __end_of_ethernetController_streamFromRXBuffer:
 12581                           	opt stack 0
 12582                           tblptru	equ	0xFF8
 12583                           tblptrh	equ	0xFF7
 12584                           tblptrl	equ	0xFF6
 12585                           tablat	equ	0xFF5
 12586                           prodh	equ	0xFF4
 12587                           prodl	equ	0xFF3
 12588                           intcon	equ	0xFF2
 12589                           intcon3	equ	0xFF0
 12590                           indf0	equ	0xFEF
 12591                           postinc0	equ	0xFEE
 12592                           plusw0	equ	0xFEB
 12593                           fsr0h	equ	0xFEA
 12594                           fsr0l	equ	0xFE9
 12595                           wreg	equ	0xFE8
 12596                           indf1	equ	0xFE7
 12597                           postinc1	equ	0xFE6
 12598                           postdec1	equ	0xFE5
 12599                           plusw1	equ	0xFE3
 12600                           fsr1h	equ	0xFE2
 12601                           fsr1l	equ	0xFE1
 12602                           indf2	equ	0xFDF
 12603                           postinc2	equ	0xFDE
 12604                           postdec2	equ	0xFDD
 12605                           plusw2	equ	0xFDB
 12606                           fsr2h	equ	0xFDA
 12607                           fsr2l	equ	0xFD9
 12608                           status	equ	0xFD8
 12609                           
 12610 ;; *************** function _UARTTransmitInt *****************
 12611 ;; Defined at:
 12612 ;;		line 43 in file "src/system/uart.c"
 12613 ;; Parameters:    Size  Location     Type
 12614 ;;  val             4   58[BANK0 ] unsigned long 
 12615 ;; Auto vars:     Size  Location     Type
 12616 ;;		None
 12617 ;; Return value:  Size  Location     Type
 12618 ;;                  1    wreg      void 
 12619 ;; Registers used:
 12620 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12621 ;; Tracked objects:
 12622 ;;		On entry : 0/0
 12623 ;;		On exit  : 0/0
 12624 ;;		Unchanged: 0/0
 12625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12626 ;;      Params:         0       4       0       0       0       0       0       0       0
 12627 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12628 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12629 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12630 ;;Total ram usage:        4 bytes
 12631 ;; Hardware stack levels used:    1
 12632 ;; Hardware stack levels required when called:    8
 12633 ;; This function calls:
 12634 ;;		_UARTTransmitText
 12635 ;;		_intToString
 12636 ;; This function is called by:
 12637 ;;		_ethernet_rxGetNewFrame
 12638 ;; This function uses a non-reentrant model
 12639 ;;
 12640                           
 12641                           	psect	text39
 12642  0056C2                     __ptext39:
 12643                           	opt stack 0
 12644  0056C2                     _UARTTransmitInt:
 12645                           	opt stack 20
 12646                           
 12647                           ;uart.c: 44: UARTTransmitText(intToString(val));
 12648                           
 12649                           ;incstack = 0
 12650  0056C2  C09A  F084         	movff	UARTTransmitInt@val,intToString@val
 12651  0056C6  C09B  F085         	movff	UARTTransmitInt@val+1,intToString@val+1
 12652  0056CA  C09C  F086         	movff	UARTTransmitInt@val+2,intToString@val+2
 12653  0056CE  C09D  F087         	movff	UARTTransmitInt@val+3,intToString@val+3
 12654  0056D2  ECD8  F029         	call	_intToString	;wreg free
 12655  0056D6  C084  F098         	movff	?_intToString,UARTTransmitText@str
 12656  0056DA  C085  F099         	movff	?_intToString+1,UARTTransmitText@str+1
 12657  0056DE  EC27  F027         	call	_UARTTransmitText	;wreg free
 12658  0056E2  0012               	return		;funcret
 12659  0056E4                     __end_of_UARTTransmitInt:
 12660                           	opt stack 0
 12661                           tblptru	equ	0xFF8
 12662                           tblptrh	equ	0xFF7
 12663                           tblptrl	equ	0xFF6
 12664                           tablat	equ	0xFF5
 12665                           prodh	equ	0xFF4
 12666                           prodl	equ	0xFF3
 12667                           intcon	equ	0xFF2
 12668                           intcon3	equ	0xFF0
 12669                           indf0	equ	0xFEF
 12670                           postinc0	equ	0xFEE
 12671                           plusw0	equ	0xFEB
 12672                           fsr0h	equ	0xFEA
 12673                           fsr0l	equ	0xFE9
 12674                           wreg	equ	0xFE8
 12675                           indf1	equ	0xFE7
 12676                           postinc1	equ	0xFE6
 12677                           postdec1	equ	0xFE5
 12678                           plusw1	equ	0xFE3
 12679                           fsr1h	equ	0xFE2
 12680                           fsr1l	equ	0xFE1
 12681                           indf2	equ	0xFDF
 12682                           postinc2	equ	0xFDE
 12683                           postdec2	equ	0xFDD
 12684                           plusw2	equ	0xFDB
 12685                           fsr2h	equ	0xFDA
 12686                           fsr2l	equ	0xFD9
 12687                           status	equ	0xFD8
 12688                           
 12689 ;; *************** function _intToString *****************
 12690 ;; Defined at:
 12691 ;;		line 75 in file "src/system/uart.c"
 12692 ;; Parameters:    Size  Location     Type
 12693 ;;  val             4   36[BANK0 ] unsigned long 
 12694 ;; Auto vars:     Size  Location     Type
 12695 ;;		None
 12696 ;; Return value:  Size  Location     Type
 12697 ;;                  2   36[BANK0 ] PTR unsigned char 
 12698 ;; Registers used:
 12699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12700 ;; Tracked objects:
 12701 ;;		On entry : 0/0
 12702 ;;		On exit  : 0/0
 12703 ;;		Unchanged: 0/0
 12704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12705 ;;      Params:         0       4       0       0       0       0       0       0       0
 12706 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12707 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12708 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12709 ;;Total ram usage:        4 bytes
 12710 ;; Hardware stack levels used:    1
 12711 ;; Hardware stack levels required when called:    7
 12712 ;; This function calls:
 12713 ;;		_ltoa
 12714 ;; This function is called by:
 12715 ;;		_ethernet_rxGetNewFrame
 12716 ;;		_printErrorMessage
 12717 ;;		_UARTTransmitInt
 12718 ;;		_ipv4_handleNewPacket
 12719 ;;		_arpEntryToString
 12720 ;; This function uses a non-reentrant model
 12721 ;;
 12722                           
 12723                           	psect	text40
 12724  0053B0                     __ptext40:
 12725                           	opt stack 0
 12726  0053B0                     _intToString:
 12727                           	opt stack 22
 12728                           
 12729                           ;uart.c: 76: char static number [10];
 12730                           ;uart.c: 77: ltoa(&number[0], (long) val, 10);
 12731                           
 12732                           ;incstack = 0
 12733  0053B0  0EDE               	movlw	low intToString@number
 12734  0053B2  0100               	movlb	0	; () banked
 12735  0053B4  6F7A               	movwf	ltoa@buf& (0+255),b
 12736  0053B6  0E01               	movlw	high intToString@number
 12737  0053B8  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 12738  0053BA  C084  F07C         	movff	intToString@val,ltoa@val
 12739  0053BE  C085  F07D         	movff	intToString@val+1,ltoa@val+1
 12740  0053C2  C086  F07E         	movff	intToString@val+2,ltoa@val+2
 12741  0053C6  C087  F07F         	movff	intToString@val+3,ltoa@val+3
 12742  0053CA  0E00               	movlw	0
 12743  0053CC  6F81               	movwf	(ltoa@base+1)& (0+255),b
 12744  0053CE  0E0A               	movlw	10
 12745  0053D0  6F80               	movwf	ltoa@base& (0+255),b
 12746  0053D2  EC52  F027         	call	_ltoa	;wreg free
 12747                           
 12748                           ;uart.c: 81: return number;
 12749  0053D6  0EDE               	movlw	low intToString@number
 12750  0053D8  0100               	movlb	0	; () banked
 12751  0053DA  6F84               	movwf	?_intToString& (0+255),b
 12752  0053DC  0E01               	movlw	high intToString@number
 12753  0053DE  6F85               	movwf	(?_intToString+1)& (0+255),b
 12754  0053E0  0012               	return	
 12755  0053E2                     __end_of_intToString:
 12756                           	opt stack 0
 12757                           tblptru	equ	0xFF8
 12758                           tblptrh	equ	0xFF7
 12759                           tblptrl	equ	0xFF6
 12760                           tablat	equ	0xFF5
 12761                           prodh	equ	0xFF4
 12762                           prodl	equ	0xFF3
 12763                           intcon	equ	0xFF2
 12764                           intcon3	equ	0xFF0
 12765                           indf0	equ	0xFEF
 12766                           postinc0	equ	0xFEE
 12767                           plusw0	equ	0xFEB
 12768                           fsr0h	equ	0xFEA
 12769                           fsr0l	equ	0xFE9
 12770                           wreg	equ	0xFE8
 12771                           indf1	equ	0xFE7
 12772                           postinc1	equ	0xFE6
 12773                           postdec1	equ	0xFE5
 12774                           plusw1	equ	0xFE3
 12775                           fsr1h	equ	0xFE2
 12776                           fsr1l	equ	0xFE1
 12777                           indf2	equ	0xFDF
 12778                           postinc2	equ	0xFDE
 12779                           postdec2	equ	0xFDD
 12780                           plusw2	equ	0xFDB
 12781                           fsr2h	equ	0xFDA
 12782                           fsr2l	equ	0xFD9
 12783                           status	equ	0xFD8
 12784                           
 12785 ;; *************** function _ltoa *****************
 12786 ;; Defined at:
 12787 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
 12788 ;; Parameters:    Size  Location     Type
 12789 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 12790 ;;		 -> intToString@number(10), 
 12791 ;;  val             4   28[BANK0 ] long 
 12792 ;;  base            2   32[BANK0 ] int 
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 12795 ;;		 -> intToString@number(10), 
 12796 ;; Return value:  Size  Location     Type
 12797 ;;                  2   26[BANK0 ] PTR unsigned char 
 12798 ;; Registers used:
 12799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12800 ;; Tracked objects:
 12801 ;;		On entry : 0/0
 12802 ;;		On exit  : 0/0
 12803 ;;		Unchanged: 0/0
 12804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12805 ;;      Params:         0       8       0       0       0       0       0       0       0
 12806 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12807 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12808 ;;      Totals:         0      10       0       0       0       0       0       0       0
 12809 ;;Total ram usage:       10 bytes
 12810 ;; Hardware stack levels used:    1
 12811 ;; Hardware stack levels required when called:    6
 12812 ;; This function calls:
 12813 ;;		_ultoa
 12814 ;; This function is called by:
 12815 ;;		_intToString
 12816 ;; This function uses a non-reentrant model
 12817 ;;
 12818                           
 12819                           	psect	text41
 12820  004EA4                     __ptext41:
 12821                           	opt stack 0
 12822  004EA4                     _ltoa:
 12823                           	opt stack 22
 12824                           
 12825                           ; BSR set to: 0
 12826                           ;incstack = 0
 12827  004EA4  C07A  F082         	movff	ltoa@buf,ltoa@cp
 12828  004EA8  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 12829  004EAC  0100               	movlb	0	; () banked
 12830  004EAE  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 12831  004EB0  D010               	goto	l1629
 12832                           
 12833                           ; BSR set to: 0
 12834  004EB2  C07A  FFD9         	movff	ltoa@buf,fsr2l
 12835  004EB6  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 12836  004EBA  0E2D               	movlw	45
 12837  004EBC  6EDF               	movwf	indf2,c
 12838                           
 12839                           ; BSR set to: 0
 12840  004EBE  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 12841  004EC0  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 12842                           
 12843                           ; BSR set to: 0
 12844  004EC2  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 12845  004EC4  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 12846  004EC6  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 12847  004EC8  6D7C               	negf	ltoa@val& (0+255),b
 12848  004ECA  0E00               	movlw	0
 12849  004ECC  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 12850  004ECE  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 12851  004ED0  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 12852  004ED2                     l1629:
 12853                           
 12854                           ; BSR set to: 0
 12855                           
 12856                           ; BSR set to: 0
 12857  004ED2  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 12858  004ED6  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 12859  004EDA  C07C  F06F         	movff	ltoa@val,ultoa@val
 12860  004EDE  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 12861  004EE2  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 12862  004EE6  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 12863  004EEA  C080  F073         	movff	ltoa@base,ultoa@base
 12864  004EEE  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 12865  004EF2  EC3F  F01E         	call	_ultoa	;wreg free
 12866  004EF6  0012               	return	
 12867  004EF8                     __end_of_ltoa:
 12868                           	opt stack 0
 12869                           tblptru	equ	0xFF8
 12870                           tblptrh	equ	0xFF7
 12871                           tblptrl	equ	0xFF6
 12872                           tablat	equ	0xFF5
 12873                           prodh	equ	0xFF4
 12874                           prodl	equ	0xFF3
 12875                           intcon	equ	0xFF2
 12876                           intcon3	equ	0xFF0
 12877                           indf0	equ	0xFEF
 12878                           postinc0	equ	0xFEE
 12879                           plusw0	equ	0xFEB
 12880                           fsr0h	equ	0xFEA
 12881                           fsr0l	equ	0xFE9
 12882                           wreg	equ	0xFE8
 12883                           indf1	equ	0xFE7
 12884                           postinc1	equ	0xFE6
 12885                           postdec1	equ	0xFE5
 12886                           plusw1	equ	0xFE3
 12887                           fsr1h	equ	0xFE2
 12888                           fsr1l	equ	0xFE1
 12889                           indf2	equ	0xFDF
 12890                           postinc2	equ	0xFDE
 12891                           postdec2	equ	0xFDD
 12892                           plusw2	equ	0xFDB
 12893                           fsr2h	equ	0xFDA
 12894                           fsr2l	equ	0xFD9
 12895                           status	equ	0xFD8
 12896                           
 12897 ;; *************** function _ultoa *****************
 12898 ;; Defined at:
 12899 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
 12900 ;; Parameters:    Size  Location     Type
 12901 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 12902 ;;		 -> intToString@number(10), 
 12903 ;;  val             4   15[BANK0 ] unsigned long 
 12904 ;;  base            2   19[BANK0 ] int 
 12905 ;; Auto vars:     Size  Location     Type
 12906 ;;  v               4   21[BANK0 ] unsigned long 
 12907 ;;  c               1   25[BANK0 ] unsigned char 
 12908 ;; Return value:  Size  Location     Type
 12909 ;;                  2   13[BANK0 ] PTR unsigned char 
 12910 ;; Registers used:
 12911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12912 ;; Tracked objects:
 12913 ;;		On entry : 0/0
 12914 ;;		On exit  : 0/0
 12915 ;;		Unchanged: 0/0
 12916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12917 ;;      Params:         0       8       0       0       0       0       0       0       0
 12918 ;;      Locals:         0       5       0       0       0       0       0       0       0
 12919 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12920 ;;      Totals:         0      13       0       0       0       0       0       0       0
 12921 ;;Total ram usage:       13 bytes
 12922 ;; Hardware stack levels used:    1
 12923 ;; Hardware stack levels required when called:    5
 12924 ;; This function calls:
 12925 ;;		___lldiv
 12926 ;;		___llmod
 12927 ;; This function is called by:
 12928 ;;		_ltoa
 12929 ;; This function uses a non-reentrant model
 12930 ;;
 12931                           
 12932                           	psect	text42
 12933  003C7E                     __ptext42:
 12934                           	opt stack 0
 12935  003C7E                     _ultoa:
 12936                           	opt stack 22
 12937                           
 12938                           ;incstack = 0
 12939  003C7E  C06F  F075         	movff	ultoa@val,ultoa@v
 12940  003C82  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 12941  003C86  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 12942  003C8A  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 12943  003C8E  C075  F060         	movff	ultoa@v,___lldiv@dividend
 12944  003C92  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 12945  003C96  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 12946  003C9A  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 12947  003C9E  C073  F064         	movff	ultoa@base,___lldiv@divisor
 12948  003CA2  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 12949  003CA6  0100               	movlb	0	; () banked
 12950  003CA8  0E00               	movlw	0
 12951  003CAA  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 12952  003CAC  0EFF               	movlw	-1
 12953  003CAE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12954  003CB0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12955  003CB2  EC35  F023         	call	___lldiv	;wreg free
 12956  003CB6  C060  F075         	movff	?___lldiv,ultoa@v
 12957  003CBA  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 12958  003CBE  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 12959  003CC2  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 12960  003CC6  0100               	movlb	0	; () banked
 12961  003CC8  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 12962  003CCA  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 12963                           
 12964                           ; BSR set to: 0
 12965  003CCC  5175               	movf	ultoa@v& (0+255),w,b
 12966  003CCE  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 12967  003CD0  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 12968  003CD2  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 12969  003CD4  A4D8               	btfss	status,2,c
 12970  003CD6  D7DB               	goto	l1633
 12971                           
 12972                           ; BSR set to: 0
 12973                           
 12974                           ; BSR set to: 0
 12975  003CD8  C06D  FFD9         	movff	ultoa@buf,fsr2l
 12976  003CDC  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 12977  003CE0  0E00               	movlw	0
 12978  003CE2  6EDF               	movwf	indf2,c
 12979                           
 12980                           ; BSR set to: 0
 12981  003CE4  076D               	decf	ultoa@buf& (0+255),f,b
 12982  003CE6  A0D8               	btfss	status,0,c
 12983  003CE8  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 12984  003CEA                     
 12985                           ; BSR set to: 0
 12986                           
 12987                           ; BSR set to: 0
 12988  003CEA  C06F  F060         	movff	ultoa@val,___llmod@dividend
 12989  003CEE  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 12990  003CF2  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 12991  003CF6  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 12992  003CFA  C073  F064         	movff	ultoa@base,___llmod@divisor
 12993  003CFE  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 12994  003D02  0E00               	movlw	0
 12995  003D04  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 12996  003D06  0EFF               	movlw	-1
 12997  003D08  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 12998  003D0A  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 12999  003D0C  EC3B  F026         	call	___llmod	;wreg free
 13000  003D10  0100               	movlb	0	; () banked
 13001  003D12  5160               	movf	?___llmod& (0+255),w,b
 13002  003D14  6F79               	movwf	ultoa@c& (0+255),b
 13003                           
 13004                           ; BSR set to: 0
 13005  003D16  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 13006  003D1A  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 13007  003D1E  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 13008  003D22  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 13009  003D26  C073  F064         	movff	ultoa@base,___lldiv@divisor
 13010  003D2A  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 13011  003D2E  0E00               	movlw	0
 13012  003D30  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 13013  003D32  0EFF               	movlw	-1
 13014  003D34  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13015  003D36  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13016  003D38  EC35  F023         	call	___lldiv	;wreg free
 13017  003D3C  C060  F06F         	movff	?___lldiv,ultoa@val
 13018  003D40  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 13019  003D44  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 13020  003D48  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 13021  003D4C  0E09               	movlw	9
 13022  003D4E  0100               	movlb	0	; () banked
 13023  003D50  6579               	cpfsgt	ultoa@c& (0+255),b
 13024  003D52  D002               	goto	l1636
 13025                           
 13026                           ; BSR set to: 0
 13027  003D54  0E07               	movlw	7
 13028  003D56  2779               	addwf	ultoa@c& (0+255),f,b
 13029  003D58                     l1636:
 13030                           
 13031                           ; BSR set to: 0
 13032  003D58  0E30               	movlw	48
 13033  003D5A  2779               	addwf	ultoa@c& (0+255),f,b
 13034                           
 13035                           ; BSR set to: 0
 13036  003D5C  C06D  FFD9         	movff	ultoa@buf,fsr2l
 13037  003D60  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 13038  003D64  C079  FFDF         	movff	ultoa@c,indf2
 13039                           
 13040                           ; BSR set to: 0
 13041  003D68  076D               	decf	ultoa@buf& (0+255),f,b
 13042  003D6A  A0D8               	btfss	status,0,c
 13043  003D6C  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 13044                           
 13045                           ; BSR set to: 0
 13046  003D6E  516F               	movf	ultoa@val& (0+255),w,b
 13047  003D70  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 13048  003D72  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 13049  003D74  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 13050  003D76  B4D8               	btfsc	status,2,c
 13051  003D78  0012               	return	
 13052  003D7A  D7B7               	goto	l1635
 13053  003D7C                     __end_of_ultoa:
 13054                           	opt stack 0
 13055                           tblptru	equ	0xFF8
 13056                           tblptrh	equ	0xFF7
 13057                           tblptrl	equ	0xFF6
 13058                           tablat	equ	0xFF5
 13059                           prodh	equ	0xFF4
 13060                           prodl	equ	0xFF3
 13061                           intcon	equ	0xFF2
 13062                           intcon3	equ	0xFF0
 13063                           indf0	equ	0xFEF
 13064                           postinc0	equ	0xFEE
 13065                           plusw0	equ	0xFEB
 13066                           fsr0h	equ	0xFEA
 13067                           fsr0l	equ	0xFE9
 13068                           wreg	equ	0xFE8
 13069                           indf1	equ	0xFE7
 13070                           postinc1	equ	0xFE6
 13071                           postdec1	equ	0xFE5
 13072                           plusw1	equ	0xFE3
 13073                           fsr1h	equ	0xFE2
 13074                           fsr1l	equ	0xFE1
 13075                           indf2	equ	0xFDF
 13076                           postinc2	equ	0xFDE
 13077                           postdec2	equ	0xFDD
 13078                           plusw2	equ	0xFDB
 13079                           fsr2h	equ	0xFDA
 13080                           fsr2l	equ	0xFD9
 13081                           status	equ	0xFD8
 13082                           
 13083 ;; *************** function ___llmod *****************
 13084 ;; Defined at:
 13085 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 13086 ;; Parameters:    Size  Location     Type
 13087 ;;  dividend        4    0[BANK0 ] unsigned long 
 13088 ;;  divisor         4    4[BANK0 ] unsigned long 
 13089 ;; Auto vars:     Size  Location     Type
 13090 ;;  counter         1    8[BANK0 ] unsigned char 
 13091 ;; Return value:  Size  Location     Type
 13092 ;;                  4    0[BANK0 ] unsigned long 
 13093 ;; Registers used:
 13094 ;;		wreg, status,2, status,0
 13095 ;; Tracked objects:
 13096 ;;		On entry : 0/0
 13097 ;;		On exit  : 0/0
 13098 ;;		Unchanged: 0/0
 13099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13100 ;;      Params:         0       8       0       0       0       0       0       0       0
 13101 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13102 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13103 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13104 ;;Total ram usage:        9 bytes
 13105 ;; Hardware stack levels used:    1
 13106 ;; Hardware stack levels required when called:    4
 13107 ;; This function calls:
 13108 ;;		Nothing
 13109 ;; This function is called by:
 13110 ;;		_ultoa
 13111 ;;		_arpEntryToString
 13112 ;; This function uses a non-reentrant model
 13113 ;;
 13114                           
 13115                           	psect	text43
 13116  004C76                     __ptext43:
 13117                           	opt stack 0
 13118  004C76                     ___llmod:
 13119                           	opt stack 22
 13120                           
 13121                           ; BSR set to: 0
 13122                           ;incstack = 0
 13123  004C76  0100               	movlb	0	; () banked
 13124  004C78  5164               	movf	___llmod@divisor& (0+255),w,b
 13125  004C7A  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 13126  004C7C  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 13127  004C7E  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 13128  004C80  B4D8               	btfsc	status,2,c
 13129  004C82  D024               	goto	l1595
 13130                           
 13131                           ; BSR set to: 0
 13132  004C84  0E01               	movlw	1
 13133  004C86  6F68               	movwf	___llmod@counter& (0+255),b
 13134  004C88  D006               	goto	l1590
 13135  004C8A                     
 13136                           ; BSR set to: 0
 13137                           
 13138                           ; BSR set to: 0
 13139  004C8A  90D8               	bcf	status,0,c
 13140  004C8C  3764               	rlcf	___llmod@divisor& (0+255),f,b
 13141  004C8E  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 13142  004C90  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 13143  004C92  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 13144  004C94  2B68               	incf	___llmod@counter& (0+255),f,b
 13145  004C96                     l1590:
 13146                           
 13147                           ; BSR set to: 0
 13148                           
 13149                           ; BSR set to: 0
 13150  004C96  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 13151  004C98  D7F8               	goto	l1591
 13152  004C9A                     u9620:
 13153                           
 13154                           ; BSR set to: 0
 13155                           
 13156                           ; BSR set to: 0
 13157                           
 13158                           ; BSR set to: 0
 13159  004C9A  5164               	movf	___llmod@divisor& (0+255),w,b
 13160  004C9C  5D60               	subwf	___llmod@dividend& (0+255),w,b
 13161  004C9E  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 13162  004CA0  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 13163  004CA2  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 13164  004CA4  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 13165  004CA6  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 13166  004CA8  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 13167  004CAA  A0D8               	btfss	status,0,c
 13168  004CAC  D008               	goto	l1594
 13169                           
 13170                           ; BSR set to: 0
 13171  004CAE  5164               	movf	___llmod@divisor& (0+255),w,b
 13172  004CB0  5F60               	subwf	___llmod@dividend& (0+255),f,b
 13173  004CB2  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 13174  004CB4  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 13175  004CB6  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 13176  004CB8  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 13177  004CBA  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 13178  004CBC  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 13179  004CBE                     l1594:
 13180                           
 13181                           ; BSR set to: 0
 13182                           
 13183                           ; BSR set to: 0
 13184  004CBE  90D8               	bcf	status,0,c
 13185  004CC0  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 13186  004CC2  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 13187  004CC4  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 13188  004CC6  3364               	rrcf	___llmod@divisor& (0+255),f,b
 13189                           
 13190                           ; BSR set to: 0
 13191  004CC8  2F68               	decfsz	___llmod@counter& (0+255),f,b
 13192  004CCA  D7E7               	goto	u9620
 13193  004CCC                     l1595:
 13194                           
 13195                           ; BSR set to: 0
 13196                           
 13197                           ; BSR set to: 0
 13198  004CCC  C060  F060         	movff	___llmod@dividend,?___llmod
 13199  004CD0  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 13200  004CD4  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 13201  004CD8  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 13202                           
 13203                           ; BSR set to: 0
 13204  004CDC  0012               	return		;funcret
 13205  004CDE                     __end_of___llmod:
 13206                           	opt stack 0
 13207                           tblptru	equ	0xFF8
 13208                           tblptrh	equ	0xFF7
 13209                           tblptrl	equ	0xFF6
 13210                           tablat	equ	0xFF5
 13211                           prodh	equ	0xFF4
 13212                           prodl	equ	0xFF3
 13213                           intcon	equ	0xFF2
 13214                           intcon3	equ	0xFF0
 13215                           indf0	equ	0xFEF
 13216                           postinc0	equ	0xFEE
 13217                           plusw0	equ	0xFEB
 13218                           fsr0h	equ	0xFEA
 13219                           fsr0l	equ	0xFE9
 13220                           wreg	equ	0xFE8
 13221                           indf1	equ	0xFE7
 13222                           postinc1	equ	0xFE6
 13223                           postdec1	equ	0xFE5
 13224                           plusw1	equ	0xFE3
 13225                           fsr1h	equ	0xFE2
 13226                           fsr1l	equ	0xFE1
 13227                           indf2	equ	0xFDF
 13228                           postinc2	equ	0xFDE
 13229                           postdec2	equ	0xFDD
 13230                           plusw2	equ	0xFDB
 13231                           fsr2h	equ	0xFDA
 13232                           fsr2l	equ	0xFD9
 13233                           status	equ	0xFD8
 13234                           
 13235 ;; *************** function ___lldiv *****************
 13236 ;; Defined at:
 13237 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 13238 ;; Parameters:    Size  Location     Type
 13239 ;;  dividend        4    0[BANK0 ] unsigned long 
 13240 ;;  divisor         4    4[BANK0 ] unsigned long 
 13241 ;; Auto vars:     Size  Location     Type
 13242 ;;  quotient        4    8[BANK0 ] unsigned long 
 13243 ;;  counter         1   12[BANK0 ] unsigned char 
 13244 ;; Return value:  Size  Location     Type
 13245 ;;                  4    0[BANK0 ] unsigned long 
 13246 ;; Registers used:
 13247 ;;		wreg, status,2, status,0
 13248 ;; Tracked objects:
 13249 ;;		On entry : 0/0
 13250 ;;		On exit  : 0/0
 13251 ;;		Unchanged: 0/0
 13252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13253 ;;      Params:         0       8       0       0       0       0       0       0       0
 13254 ;;      Locals:         0       5       0       0       0       0       0       0       0
 13255 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13256 ;;      Totals:         0      13       0       0       0       0       0       0       0
 13257 ;;Total ram usage:       13 bytes
 13258 ;; Hardware stack levels used:    1
 13259 ;; Hardware stack levels required when called:    4
 13260 ;; This function calls:
 13261 ;;		Nothing
 13262 ;; This function is called by:
 13263 ;;		_ultoa
 13264 ;; This function uses a non-reentrant model
 13265 ;;
 13266                           
 13267                           	psect	text44
 13268  00466A                     __ptext44:
 13269                           	opt stack 0
 13270  00466A                     ___lldiv:
 13271                           	opt stack 22
 13272                           
 13273                           ; BSR set to: 0
 13274                           ;incstack = 0
 13275  00466A  0E00               	movlw	0
 13276  00466C  0100               	movlb	0	; () banked
 13277  00466E  6F68               	movwf	___lldiv@quotient& (0+255),b
 13278  004670  0E00               	movlw	0
 13279  004672  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 13280  004674  0E00               	movlw	0
 13281  004676  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 13282  004678  0E00               	movlw	0
 13283  00467A  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 13284                           
 13285                           ; BSR set to: 0
 13286  00467C  5164               	movf	___lldiv@divisor& (0+255),w,b
 13287  00467E  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 13288  004680  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 13289  004682  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 13290  004684  B4D8               	btfsc	status,2,c
 13291  004686  D02A               	goto	l1585
 13292                           
 13293                           ; BSR set to: 0
 13294  004688  0E01               	movlw	1
 13295  00468A  6F6C               	movwf	___lldiv@counter& (0+255),b
 13296  00468C  D006               	goto	l1580
 13297  00468E                     
 13298                           ; BSR set to: 0
 13299                           
 13300                           ; BSR set to: 0
 13301  00468E  90D8               	bcf	status,0,c
 13302  004690  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 13303  004692  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 13304  004694  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 13305  004696  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 13306  004698  2B6C               	incf	___lldiv@counter& (0+255),f,b
 13307  00469A                     l1580:
 13308                           
 13309                           ; BSR set to: 0
 13310                           
 13311                           ; BSR set to: 0
 13312  00469A  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 13313  00469C  D7F8               	goto	l1581
 13314  00469E                     u9590:
 13315                           
 13316                           ; BSR set to: 0
 13317                           
 13318                           ; BSR set to: 0
 13319                           
 13320                           ; BSR set to: 0
 13321  00469E  90D8               	bcf	status,0,c
 13322  0046A0  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 13323  0046A2  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 13324  0046A4  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 13325  0046A6  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 13326                           
 13327                           ; BSR set to: 0
 13328  0046A8  5164               	movf	___lldiv@divisor& (0+255),w,b
 13329  0046AA  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 13330  0046AC  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13331  0046AE  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 13332  0046B0  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13333  0046B2  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 13334  0046B4  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13335  0046B6  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 13336  0046B8  A0D8               	btfss	status,0,c
 13337  0046BA  D009               	goto	l1584
 13338                           
 13339                           ; BSR set to: 0
 13340  0046BC  5164               	movf	___lldiv@divisor& (0+255),w,b
 13341  0046BE  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 13342  0046C0  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13343  0046C2  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 13344  0046C4  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13345  0046C6  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 13346  0046C8  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13347  0046CA  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 13348                           
 13349                           ; BSR set to: 0
 13350  0046CC  8168               	bsf	___lldiv@quotient& (0+255),0,b
 13351  0046CE                     l1584:
 13352                           
 13353                           ; BSR set to: 0
 13354                           
 13355                           ; BSR set to: 0
 13356  0046CE  90D8               	bcf	status,0,c
 13357  0046D0  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 13358  0046D2  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 13359  0046D4  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 13360  0046D6  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 13361                           
 13362                           ; BSR set to: 0
 13363  0046D8  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 13364  0046DA  D7E1               	goto	u9590
 13365  0046DC                     l1585:
 13366                           
 13367                           ; BSR set to: 0
 13368                           
 13369                           ; BSR set to: 0
 13370  0046DC  C068  F060         	movff	___lldiv@quotient,?___lldiv
 13371  0046E0  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 13372  0046E4  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 13373  0046E8  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 13374                           
 13375                           ; BSR set to: 0
 13376  0046EC  0012               	return		;funcret
 13377  0046EE                     __end_of___lldiv:
 13378                           	opt stack 0
 13379                           tblptru	equ	0xFF8
 13380                           tblptrh	equ	0xFF7
 13381                           tblptrl	equ	0xFF6
 13382                           tablat	equ	0xFF5
 13383                           prodh	equ	0xFF4
 13384                           prodl	equ	0xFF3
 13385                           intcon	equ	0xFF2
 13386                           intcon3	equ	0xFF0
 13387                           indf0	equ	0xFEF
 13388                           postinc0	equ	0xFEE
 13389                           plusw0	equ	0xFEB
 13390                           fsr0h	equ	0xFEA
 13391                           fsr0l	equ	0xFE9
 13392                           wreg	equ	0xFE8
 13393                           indf1	equ	0xFE7
 13394                           postinc1	equ	0xFE6
 13395                           postdec1	equ	0xFE5
 13396                           plusw1	equ	0xFE3
 13397                           fsr1h	equ	0xFE2
 13398                           fsr1l	equ	0xFE1
 13399                           indf2	equ	0xFDF
 13400                           postinc2	equ	0xFDE
 13401                           postdec2	equ	0xFDD
 13402                           plusw2	equ	0xFDB
 13403                           fsr2h	equ	0xFDA
 13404                           fsr2l	equ	0xFD9
 13405                           status	equ	0xFD8
 13406                           
 13407 ;; *************** function _ethernetController_updateLinkStatus *****************
 13408 ;; Defined at:
 13409 ;;		line 394 in file "src/enc424j600/ENC424J600.c"
 13410 ;; Parameters:    Size  Location     Type
 13411 ;;  state           2   32[BANK0 ] PTR struct ethernetConne
 13412 ;;		 -> stack(123), 
 13413 ;; Auto vars:     Size  Location     Type
 13414 ;;  temp16          2   35[BANK0 ] unsigned int 
 13415 ;;  temp            1   34[BANK0 ] unsigned char 
 13416 ;; Return value:  Size  Location     Type
 13417 ;;                  1    wreg      void 
 13418 ;; Registers used:
 13419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13420 ;; Tracked objects:
 13421 ;;		On entry : 0/0
 13422 ;;		On exit  : 0/0
 13423 ;;		Unchanged: 0/0
 13424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13425 ;;      Params:         0       2       0       0       0       0       0       0       0
 13426 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13427 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13428 ;;      Totals:         0       5       0       0       0       0       0       0       0
 13429 ;;Total ram usage:        5 bytes
 13430 ;; Hardware stack levels used:    1
 13431 ;; Hardware stack levels required when called:    8
 13432 ;; This function calls:
 13433 ;;		_enc424j600_readControlRegisterUnbanked
 13434 ;;		_enc424j600_readPHYRegister
 13435 ;; This function is called by:
 13436 ;;		_handleStackBackgroundTasks
 13437 ;; This function uses a non-reentrant model
 13438 ;;
 13439                           
 13440                           	psect	text45
 13441  004556                     __ptext45:
 13442                           	opt stack 0
 13443  004556                     _ethernetController_updateLinkStatus:
 13444                           	opt stack 21
 13445                           
 13446                           ;ENC424J600.c: 395: uint8_t temp;
 13447                           ;ENC424J600.c: 396: uint16_t temp16;
 13448                           ;ENC424J600.c: 397: enc424j600_readControlRegisterUnbanked(0x1B, &temp);
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;incstack = 0
 13452  004556  0E82               	movlw	low ethernetController_updateLinkStatus@temp
 13453  004558  0100               	movlb	0	; () banked
 13454  00455A  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 13455  00455C  0E00               	movlw	high ethernetController_updateLinkStatus@temp
 13456  00455E  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 13457  004560  0E1B               	movlw	27
 13458  004562  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 13459                           
 13460                           ;ENC424J600.c: 398: if (temp & 0x01) {
 13461  004566  0100               	movlb	0	; () banked
 13462  004568  A182               	btfss	ethernetController_updateLinkStatus@temp& (0+255),0,b
 13463  00456A  D006               	goto	l195
 13464                           
 13465                           ; BSR set to: 0
 13466                           ;ENC424J600.c: 399: state->link = LINK_ESTABLISHED;
 13467  00456C  C080  FFD9         	movff	ethernetController_updateLinkStatus@state,fsr2l
 13468  004570  C081  FFDA         	movff	ethernetController_updateLinkStatus@state+1,fsr2h
 13469  004574  0E01               	movlw	1
 13470  004576  D005               	goto	L2
 13471  004578                     l195:
 13472                           
 13473                           ; BSR set to: 0
 13474                           ;ENC424J600.c: 401: state->link = NO_LINK;
 13475                           
 13476                           ; BSR set to: 0
 13477  004578  C080  FFD9         	movff	ethernetController_updateLinkStatus@state,fsr2l
 13478  00457C  C081  FFDA         	movff	ethernetController_updateLinkStatus@state+1,fsr2h
 13479  004580  0E00               	movlw	0
 13480  004582                     L2:
 13481  004582  6EDF               	movwf	indf2,c
 13482                           
 13483                           ; BSR set to: 0
 13484                           ;ENC424J600.c: 402: }
 13485                           ;ENC424J600.c: 404: enc424j600_readPHYRegister(0x1F, &temp16);
 13486                           
 13487                           ; BSR set to: 0
 13488  004584  0E83               	movlw	low ethernetController_updateLinkStatus@temp16
 13489  004586  6F6E               	movwf	enc424j600_readPHYRegister@data& (0+255),b
 13490  004588  0E00               	movlw	high ethernetController_updateLinkStatus@temp16
 13491  00458A  6F6F               	movwf	(enc424j600_readPHYRegister@data+1)& (0+255),b
 13492  00458C  0E1F               	movlw	31
 13493  00458E  EC16  F01C         	call	_enc424j600_readPHYRegister
 13494                           
 13495                           ;ENC424J600.c: 406: if (temp16 & (1 << 3)) {
 13496  004592  0100               	movlb	0	; () banked
 13497  004594  A783               	btfss	ethernetController_updateLinkStatus@temp16& (0+255),3,b
 13498  004596  D008               	goto	l197
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;ENC424J600.c: 407: state->speed = HUNDRED_MBIT;
 13502  004598  EE20 F001          	lfsr	2,1
 13503  00459C  5180               	movf	ethernetController_updateLinkStatus@state& (0+255),w,b
 13504  00459E  26D9               	addwf	fsr2l,f,c
 13505  0045A0  5181               	movf	(ethernetController_updateLinkStatus@state+1)& (0+255),w,b
 13506  0045A2  22DA               	addwfc	fsr2h,f,c
 13507  0045A4  0E01               	movlw	1
 13508  0045A6  D007               	goto	L3
 13509  0045A8                     l197:
 13510                           
 13511                           ; BSR set to: 0
 13512                           ;ENC424J600.c: 409: state->speed = TEN_MBIT;
 13513                           
 13514                           ; BSR set to: 0
 13515  0045A8  EE20 F001          	lfsr	2,1
 13516  0045AC  5180               	movf	ethernetController_updateLinkStatus@state& (0+255),w,b
 13517  0045AE  26D9               	addwf	fsr2l,f,c
 13518  0045B0  5181               	movf	(ethernetController_updateLinkStatus@state+1)& (0+255),w,b
 13519  0045B2  22DA               	addwfc	fsr2h,f,c
 13520  0045B4  0E00               	movlw	0
 13521  0045B6                     L3:
 13522  0045B6  6EDF               	movwf	indf2,c
 13523                           
 13524                           ; BSR set to: 0
 13525                           ;ENC424J600.c: 410: }
 13526                           ;ENC424J600.c: 412: if (temp16 & (1 << 4)) {
 13527                           
 13528                           ; BSR set to: 0
 13529  0045B8  A983               	btfss	ethernetController_updateLinkStatus@temp16& (0+255),4,b
 13530  0045BA  D009               	goto	l199
 13531                           
 13532                           ; BSR set to: 0
 13533                           ;ENC424J600.c: 413: state->duplex = FULL_DUPLEX;
 13534  0045BC  EE20 F002          	lfsr	2,2
 13535  0045C0  5180               	movf	ethernetController_updateLinkStatus@state& (0+255),w,b
 13536  0045C2  26D9               	addwf	fsr2l,f,c
 13537  0045C4  5181               	movf	(ethernetController_updateLinkStatus@state+1)& (0+255),w,b
 13538  0045C6  22DA               	addwfc	fsr2h,f,c
 13539  0045C8  0E01               	movlw	1
 13540  0045CA  6EDF               	movwf	indf2,c
 13541                           
 13542                           ;ENC424J600.c: 414: } else {
 13543  0045CC  0012               	return	
 13544  0045CE                     l199:
 13545                           
 13546                           ; BSR set to: 0
 13547                           ;ENC424J600.c: 415: state->duplex = HALF_DUPLEX;
 13548                           
 13549                           ; BSR set to: 0
 13550  0045CE  EE20 F002          	lfsr	2,2
 13551  0045D2  5180               	movf	ethernetController_updateLinkStatus@state& (0+255),w,b
 13552  0045D4  26D9               	addwf	fsr2l,f,c
 13553  0045D6  5181               	movf	(ethernetController_updateLinkStatus@state+1)& (0+255),w,b
 13554  0045D8  22DA               	addwfc	fsr2h,f,c
 13555  0045DA  0E00               	movlw	0
 13556  0045DC  6EDF               	movwf	indf2,c
 13557  0045DE  0012               	return	
 13558  0045E0                     __end_of_ethernetController_updateLinkStatus:
 13559                           	opt stack 0
 13560                           tblptru	equ	0xFF8
 13561                           tblptrh	equ	0xFF7
 13562                           tblptrl	equ	0xFF6
 13563                           tablat	equ	0xFF5
 13564                           prodh	equ	0xFF4
 13565                           prodl	equ	0xFF3
 13566                           intcon	equ	0xFF2
 13567                           intcon3	equ	0xFF0
 13568                           indf0	equ	0xFEF
 13569                           postinc0	equ	0xFEE
 13570                           plusw0	equ	0xFEB
 13571                           fsr0h	equ	0xFEA
 13572                           fsr0l	equ	0xFE9
 13573                           wreg	equ	0xFE8
 13574                           indf1	equ	0xFE7
 13575                           postinc1	equ	0xFE6
 13576                           postdec1	equ	0xFE5
 13577                           plusw1	equ	0xFE3
 13578                           fsr1h	equ	0xFE2
 13579                           fsr1l	equ	0xFE1
 13580                           indf2	equ	0xFDF
 13581                           postinc2	equ	0xFDE
 13582                           postdec2	equ	0xFDD
 13583                           plusw2	equ	0xFDB
 13584                           fsr2h	equ	0xFDA
 13585                           fsr2l	equ	0xFD9
 13586                           status	equ	0xFD8
 13587                           
 13588 ;; *************** function _enc424j600_readPHYRegister *****************
 13589 ;; Defined at:
 13590 ;;		line 538 in file "src/enc424j600/ENC424J600.c"
 13591 ;; Parameters:    Size  Location     Type
 13592 ;;  addr            1    wreg     unsigned char 
 13593 ;;  data            2   14[BANK0 ] PTR unsigned int 
 13594 ;;		 -> ethernetController_updateLinkStatus@temp16(2), 
 13595 ;; Auto vars:     Size  Location     Type
 13596 ;;  addr            1   22[BANK0 ] unsigned char 
 13597 ;;  timeoutCount    4   25[BANK0 ] unsigned long 
 13598 ;;  temp            1   31[BANK0 ] unsigned char 
 13599 ;;  highByte        1   30[BANK0 ] unsigned char 
 13600 ;;  lowByte         1   29[BANK0 ] unsigned char 
 13601 ;;  unusedBits      1   24[BANK0 ] unsigned char 
 13602 ;;  PHYaddress      1   23[BANK0 ] unsigned char 
 13603 ;; Return value:  Size  Location     Type
 13604 ;;                  1    wreg      void 
 13605 ;; Registers used:
 13606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13607 ;; Tracked objects:
 13608 ;;		On entry : 0/0
 13609 ;;		On exit  : 0/0
 13610 ;;		Unchanged: 0/0
 13611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13612 ;;      Params:         0       2       0       0       0       0       0       0       0
 13613 ;;      Locals:         0      10       0       0       0       0       0       0       0
 13614 ;;      Temps:          0       6       0       0       0       0       0       0       0
 13615 ;;      Totals:         0      18       0       0       0       0       0       0       0
 13616 ;;Total ram usage:       18 bytes
 13617 ;; Hardware stack levels used:    1
 13618 ;; Hardware stack levels required when called:    7
 13619 ;; This function calls:
 13620 ;;		_enc424j600_readControlRegisterUnbanked
 13621 ;;		_enc424j600_writeControlRegisterUnbanked
 13622 ;; This function is called by:
 13623 ;;		_ethernetController_updateLinkStatus
 13624 ;; This function uses a non-reentrant model
 13625 ;;
 13626                           
 13627                           	psect	text46
 13628  00382C                     __ptext46:
 13629                           	opt stack 0
 13630  00382C                     _enc424j600_readPHYRegister:
 13631                           	opt stack 21
 13632                           
 13633                           ; BSR set to: 0
 13634                           ;incstack = 0
 13635                           ;enc424j600_readPHYRegister@addr stored from wreg
 13636  00382C  0100               	movlb	0	; () banked
 13637  00382E  6F76               	movwf	enc424j600_readPHYRegister@addr& (0+255),b
 13638                           
 13639                           ;ENC424J600.c: 540: uint8_t PHYaddress = addr & 0x1F;
 13640  003830  0100               	movlb	0	; () banked
 13641  003832  5176               	movf	enc424j600_readPHYRegister@addr& (0+255),w,b
 13642  003834  0B1F               	andlw	31
 13643  003836  6F77               	movwf	enc424j600_readPHYRegister@PHYaddress& (0+255),b
 13644                           
 13645                           ; BSR set to: 0
 13646                           ;ENC424J600.c: 541: uint8_t unusedBits = 0x01;
 13647  003838  0E01               	movlw	1
 13648  00383A  6F78               	movwf	enc424j600_readPHYRegister@unusedBits& (0+255),b
 13649                           
 13650                           ; BSR set to: 0
 13651                           ;ENC424J600.c: 542: uint8_t temp;
 13652                           ;ENC424J600.c: 543: uint8_t lowByte;
 13653                           ;ENC424J600.c: 544: uint8_t highByte;
 13654                           ;ENC424J600.c: 545: uint32_t timeoutCounter = 0;
 13655  00383C  0E00               	movlw	0
 13656  00383E  6F79               	movwf	enc424j600_readPHYRegister@timeoutCounter& (0+255),b
 13657  003840  0E00               	movlw	0
 13658  003842  6F7A               	movwf	(enc424j600_readPHYRegister@timeoutCounter+1)& (0+255),b
 13659  003844  0E00               	movlw	0
 13660  003846  6F7B               	movwf	(enc424j600_readPHYRegister@timeoutCounter+2)& (0+255),b
 13661  003848  0E00               	movlw	0
 13662  00384A  6F7C               	movwf	(enc424j600_readPHYRegister@timeoutCounter+3)& (0+255),b
 13663                           
 13664                           ; BSR set to: 0
 13665                           ;ENC424J600.c: 547: enc424j600_writeControlRegisterUnbanked(0x14 + 0x40, &PHYaddress);
 13666  00384C  0E77               	movlw	low enc424j600_readPHYRegister@PHYaddress
 13667  00384E  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 13668  003850  0E00               	movlw	high enc424j600_readPHYRegister@PHYaddress
 13669  003852  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 13670  003854  0E54               	movlw	84
 13671  003856  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 13672                           
 13673                           ;ENC424J600.c: 548: enc424j600_writeControlRegisterUnbanked(0x15 + 0x40, &unusedBits);
 13674  00385A  0E78               	movlw	low enc424j600_readPHYRegister@unusedBits
 13675  00385C  0100               	movlb	0	; () banked
 13676  00385E  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 13677  003860  0E00               	movlw	high enc424j600_readPHYRegister@unusedBits
 13678  003862  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 13679  003864  0E55               	movlw	85
 13680  003866  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 13681                           
 13682                           ;ENC424J600.c: 551: enc424j600_readControlRegisterUnbanked(0x12 + 0x40, &temp);
 13683  00386A  0E7F               	movlw	low enc424j600_readPHYRegister@temp
 13684  00386C  0100               	movlb	0	; () banked
 13685  00386E  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 13686  003870  0E00               	movlw	high enc424j600_readPHYRegister@temp
 13687  003872  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 13688  003874  0E52               	movlw	82
 13689  003876  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 13690                           
 13691                           ;ENC424J600.c: 552: temp |= 0x01;
 13692  00387A  0100               	movlb	0	; () banked
 13693  00387C  817F               	bsf	enc424j600_readPHYRegister@temp& (0+255),0,b
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;ENC424J600.c: 553: enc424j600_writeControlRegisterUnbanked(0x12 + 0x40, &temp);
 13697  00387E  0E7F               	movlw	low enc424j600_readPHYRegister@temp
 13698  003880  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 13699  003882  0E00               	movlw	high enc424j600_readPHYRegister@temp
 13700  003884  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 13701  003886  0E52               	movlw	82
 13702  003888  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 13703                           
 13704                           ;ENC424J600.c: 555: _delay((unsigned long)((26)*(32000000UL/4000000.0)));
 13705  00388C  0E45               	movlw	69
 13706  00388E                     u12897:
 13707  00388E  2EE8               	decfsz	wreg,f,c
 13708  003890  D7FE               	bra	u12897
 13709  003892  F000               	nop	
 13710  003894                     
 13711                           ;ENC424J600.c: 558: enc424j600_readControlRegisterUnbanked(0x0A + 0x60, &temp);
 13712  003894  0E7F               	movlw	low enc424j600_readPHYRegister@temp
 13713  003896  0100               	movlb	0	; () banked
 13714  003898  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 13715  00389A  0E00               	movlw	high enc424j600_readPHYRegister@temp
 13716  00389C  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 13717  00389E  0E6A               	movlw	106
 13718  0038A0  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 13719                           
 13720                           ;ENC424J600.c: 559: timeoutCounter++;
 13721  0038A4  0E01               	movlw	1
 13722  0038A6  0100               	movlb	0	; () banked
 13723  0038A8  2779               	addwf	enc424j600_readPHYRegister@timeoutCounter& (0+255),f,b
 13724  0038AA  0E00               	movlw	0
 13725  0038AC  237A               	addwfc	(enc424j600_readPHYRegister@timeoutCounter+1)& (0+255),f,b
 13726  0038AE  237B               	addwfc	(enc424j600_readPHYRegister@timeoutCounter+2)& (0+255),f,b
 13727  0038B0  237C               	addwfc	(enc424j600_readPHYRegister@timeoutCounter+3)& (0+255),f,b
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;ENC424J600.c: 560: } while ((temp & 0x01) && (timeoutCounter < 0xfff));
 13731  0038B2  A17F               	btfss	enc424j600_readPHYRegister@temp& (0+255),0,b
 13732  0038B4  D008               	goto	u11430
 13733                           
 13734                           ; BSR set to: 0
 13735  0038B6  517C               	movf	(enc424j600_readPHYRegister@timeoutCounter+3)& (0+255),w,b
 13736  0038B8  117B               	iorwf	(enc424j600_readPHYRegister@timeoutCounter+2)& (0+255),w,b
 13737  0038BA  E105               	bnz	l9813
 13738  0038BC  2979               	incf	enc424j600_readPHYRegister@timeoutCounter& (0+255),w,b
 13739  0038BE  0E0F               	movlw	15
 13740  0038C0  597A               	subwfb	(enc424j600_readPHYRegister@timeoutCounter+1)& (0+255),w,b
 13741  0038C2  A0D8               	btfss	status,0,c
 13742  0038C4  D7E7               	goto	l258
 13743  0038C6                     u11430:
 13744  0038C6                     l9813:
 13745                           
 13746                           ; BSR set to: 0
 13747                           ;ENC424J600.c: 561: if (timeoutCounter >= 0xfff)
 13748  0038C6  517C               	movf	(enc424j600_readPHYRegister@timeoutCounter+3)& (0+255),w,b
 13749  0038C8  117B               	iorwf	(enc424j600_readPHYRegister@timeoutCounter+2)& (0+255),w,b
 13750  0038CA  E140               	bnz	l263
 13751  0038CC  2979               	incf	enc424j600_readPHYRegister@timeoutCounter& (0+255),w,b
 13752  0038CE  0E0F               	movlw	15
 13753  0038D0  597A               	subwfb	(enc424j600_readPHYRegister@timeoutCounter+1)& (0+255),w,b
 13754  0038D2  B0D8               	btfsc	status,0,c
 13755  0038D4  0012               	return	
 13756                           
 13757                           ; BSR set to: 0
 13758                           ;ENC424J600.c: 565: enc424j600_readControlRegisterUnbanked(0x12 + 0x40, &temp);
 13759                           
 13760                           ; BSR set to: 0
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;ENC424J600.c: 562: return;
 13764  0038D6  0E7F               	movlw	low enc424j600_readPHYRegister@temp
 13765  0038D8  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 13766  0038DA  0E00               	movlw	high enc424j600_readPHYRegister@temp
 13767  0038DC  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 13768  0038DE  0E52               	movlw	82
 13769  0038E0  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 13770                           
 13771                           ;ENC424J600.c: 566: temp &= ~0x01;
 13772  0038E4  0100               	movlb	0	; () banked
 13773  0038E6  917F               	bcf	enc424j600_readPHYRegister@temp& (0+255),0,b
 13774                           
 13775                           ; BSR set to: 0
 13776                           ;ENC424J600.c: 567: enc424j600_writeControlRegisterUnbanked(0x12 + 0x40, &temp);
 13777  0038E8  0E7F               	movlw	low enc424j600_readPHYRegister@temp
 13778  0038EA  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 13779  0038EC  0E00               	movlw	high enc424j600_readPHYRegister@temp
 13780  0038EE  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 13781  0038F0  0E52               	movlw	82
 13782  0038F2  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 13783                           
 13784                           ;ENC424J600.c: 570: enc424j600_readControlRegisterUnbanked(0x08 + 0x60, &lowByte);
 13785  0038F6  0E7D               	movlw	low enc424j600_readPHYRegister@lowByte
 13786  0038F8  0100               	movlb	0	; () banked
 13787  0038FA  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 13788  0038FC  0E00               	movlw	high enc424j600_readPHYRegister@lowByte
 13789  0038FE  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 13790  003900  0E68               	movlw	104
 13791  003902  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 13792                           
 13793                           ;ENC424J600.c: 571: enc424j600_readControlRegisterUnbanked(0x09 + 0x60, &highByte);
 13794  003906  0E7E               	movlw	low enc424j600_readPHYRegister@highByte
 13795  003908  0100               	movlb	0	; () banked
 13796  00390A  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 13797  00390C  0E00               	movlw	high enc424j600_readPHYRegister@highByte
 13798  00390E  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 13799  003910  0E69               	movlw	105
 13800  003912  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 13801                           
 13802                           ;ENC424J600.c: 572: *data = (lowByte | ((highByte << 8)&0xff00));
 13803  003916  0E00               	movlw	0
 13804  003918  0100               	movlb	0	; () banked
 13805  00391A  6F70               	movwf	??_enc424j600_readPHYRegister& (0+255),b
 13806  00391C  0EFF               	movlw	255
 13807  00391E  6F71               	movwf	(??_enc424j600_readPHYRegister+1)& (0+255),b
 13808  003920  517E               	movf	enc424j600_readPHYRegister@highByte& (0+255),w,b
 13809  003922  6F73               	movwf	(??_enc424j600_readPHYRegister+3)& (0+255),b
 13810  003924  6B72               	clrf	(??_enc424j600_readPHYRegister+2)& (0+255),b
 13811  003926  5170               	movf	??_enc424j600_readPHYRegister& (0+255),w,b
 13812  003928  1772               	andwf	(??_enc424j600_readPHYRegister+2)& (0+255),f,b
 13813  00392A  5171               	movf	(??_enc424j600_readPHYRegister+1)& (0+255),w,b
 13814  00392C  1773               	andwf	(??_enc424j600_readPHYRegister+3)& (0+255),f,b
 13815  00392E  517D               	movf	enc424j600_readPHYRegister@lowByte& (0+255),w,b
 13816  003930  6F74               	movwf	(??_enc424j600_readPHYRegister+4)& (0+255),b
 13817  003932  6B75               	clrf	(??_enc424j600_readPHYRegister+5)& (0+255),b
 13818  003934  5172               	movf	(??_enc424j600_readPHYRegister+2)& (0+255),w,b
 13819  003936  1374               	iorwf	(??_enc424j600_readPHYRegister+4)& (0+255),f,b
 13820  003938  5173               	movf	(??_enc424j600_readPHYRegister+3)& (0+255),w,b
 13821  00393A  1375               	iorwf	(??_enc424j600_readPHYRegister+5)& (0+255),f,b
 13822  00393C  C06E  FFD9         	movff	enc424j600_readPHYRegister@data,fsr2l
 13823  003940  C06F  FFDA         	movff	enc424j600_readPHYRegister@data+1,fsr2h
 13824  003944  C074  FFDE         	movff	??_enc424j600_readPHYRegister+4,postinc2
 13825  003948  C075  FFDD         	movff	??_enc424j600_readPHYRegister+5,postdec2
 13826  00394C                     l263:
 13827                           
 13828                           ; BSR set to: 0
 13829  00394C  0012               	return		;funcret
 13830  00394E                     __end_of_enc424j600_readPHYRegister:
 13831                           	opt stack 0
 13832                           tblptru	equ	0xFF8
 13833                           tblptrh	equ	0xFF7
 13834                           tblptrl	equ	0xFF6
 13835                           tablat	equ	0xFF5
 13836                           prodh	equ	0xFF4
 13837                           prodl	equ	0xFF3
 13838                           intcon	equ	0xFF2
 13839                           intcon3	equ	0xFF0
 13840                           indf0	equ	0xFEF
 13841                           postinc0	equ	0xFEE
 13842                           plusw0	equ	0xFEB
 13843                           fsr0h	equ	0xFEA
 13844                           fsr0l	equ	0xFE9
 13845                           wreg	equ	0xFE8
 13846                           indf1	equ	0xFE7
 13847                           postinc1	equ	0xFE6
 13848                           postdec1	equ	0xFE5
 13849                           plusw1	equ	0xFE3
 13850                           fsr1h	equ	0xFE2
 13851                           fsr1l	equ	0xFE1
 13852                           indf2	equ	0xFDF
 13853                           postinc2	equ	0xFDE
 13854                           postdec2	equ	0xFDD
 13855                           plusw2	equ	0xFDB
 13856                           fsr2h	equ	0xFDA
 13857                           fsr2l	equ	0xFD9
 13858                           status	equ	0xFD8
 13859                           
 13860 ;; *************** function _ethernetController_setLEDConfig *****************
 13861 ;; Defined at:
 13862 ;;		line 419 in file "src/enc424j600/ENC424J600.c"
 13863 ;; Parameters:    Size  Location     Type
 13864 ;;  LED             1    wreg     enum E5570
 13865 ;;  conf            1   14[BANK0 ] enum E5574
 13866 ;; Auto vars:     Size  Location     Type
 13867 ;;  LED             1   15[BANK0 ] enum E5570
 13868 ;;  data            1   16[BANK0 ] unsigned char 
 13869 ;; Return value:  Size  Location     Type
 13870 ;;                  1    wreg      void 
 13871 ;; Registers used:
 13872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13873 ;; Tracked objects:
 13874 ;;		On entry : 0/0
 13875 ;;		On exit  : 0/0
 13876 ;;		Unchanged: 0/0
 13877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13878 ;;      Params:         0       1       0       0       0       0       0       0       0
 13879 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13880 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13881 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13882 ;;Total ram usage:        3 bytes
 13883 ;; Hardware stack levels used:    1
 13884 ;; Hardware stack levels required when called:    7
 13885 ;; This function calls:
 13886 ;;		_enc424j600_readControlRegisterUnbanked
 13887 ;;		_enc424j600_writeControlRegisterUnbanked
 13888 ;; This function is called by:
 13889 ;;		_handleStackBackgroundTasks
 13890 ;;		_main
 13891 ;; This function uses a non-reentrant model
 13892 ;;
 13893                           
 13894                           	psect	text47
 13895  0044C8                     __ptext47:
 13896                           	opt stack 0
 13897  0044C8                     _ethernetController_setLEDConfig:
 13898                           	opt stack 22
 13899                           
 13900                           ; BSR set to: 0
 13901                           ;incstack = 0
 13902                           ;ethernetController_setLEDConfig@LED stored from wreg
 13903  0044C8  0100               	movlb	0	; () banked
 13904  0044CA  6F6F               	movwf	ethernetController_setLEDConfig@LED& (0+255),b
 13905                           
 13906                           ;ENC424J600.c: 420: uint8_t data;
 13907                           ;ENC424J600.c: 421: enc424j600_readControlRegisterUnbanked(0x15 + 0x60, &data);
 13908  0044CC  0E70               	movlw	low ethernetController_setLEDConfig@data
 13909  0044CE  0100               	movlb	0	; () banked
 13910  0044D0  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 13911  0044D2  0E00               	movlw	high ethernetController_setLEDConfig@data
 13912  0044D4  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 13913  0044D6  0E75               	movlw	117
 13914  0044D8  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 13915                           
 13916                           ;ENC424J600.c: 422: if (LED == LEDB) {
 13917  0044DC  0100               	movlb	0	; () banked
 13918  0044DE  056F               	decf	ethernetController_setLEDConfig@LED& (0+255),w,b
 13919  0044E0  B4D8               	btfsc	status,2,c
 13920  0044E2  D00B               	goto	l205
 13921  0044E4  D015               	goto	l204
 13922  0044E6                     
 13923                           ; BSR set to: 0
 13924                           ;ENC424J600.c: 427: data &= ~0x0f;
 13925                           
 13926                           ; BSR set to: 0
 13927                           
 13928                           ;ENC424J600.c: 426: case LED_OFF:
 13929                           
 13930                           ; BSR set to: 0
 13931  0044E6  0EF0               	movlw	240
 13932  0044E8  1770               	andwf	ethernetController_setLEDConfig@data& (0+255),f,b
 13933                           
 13934                           ; BSR set to: 0
 13935                           ;ENC424J600.c: 428: data |= 0x01;
 13936  0044EA  8170               	bsf	ethernetController_setLEDConfig@data& (0+255),0,b
 13937                           
 13938                           ;ENC424J600.c: 429: break;
 13939  0044EC  D02C               	goto	l216
 13940  0044EE                     
 13941                           ; BSR set to: 0
 13942                           ;ENC424J600.c: 431: data &= ~0x0f;
 13943                           
 13944                           ; BSR set to: 0
 13945  0044EE  0EF0               	movlw	240
 13946  0044F0  D018               	goto	L4
 13947  0044F2                     
 13948                           ; BSR set to: 0
 13949                           ;ENC424J600.c: 434: data &= ~0x0f;
 13950                           
 13951                           ; BSR set to: 0
 13952  0044F2  0EF0               	movlw	240
 13953  0044F4  1770               	andwf	ethernetController_setLEDConfig@data& (0+255),f,b
 13954                           
 13955                           ;ENC424J600.c: 435: data |= 0x06;
 13956  0044F6  0E06               	movlw	6
 13957  0044F8  D019               	goto	L5
 13958  0044FA                     l205:
 13959                           
 13960                           ; BSR set to: 0
 13961                           
 13962                           ; BSR set to: 0
 13963  0044FA  516E               	movf	ethernetController_setLEDConfig@conf& (0+255),w,b
 13964                           
 13965                           ; Switch size 1, requested type "space"
 13966                           ; Number of cases is 3, Range of values is 0 to 2
 13967                           ; switch strategies available:
 13968                           ; Name         Instructions Cycles
 13969                           ; simple_byte           10     6 (average)
 13970                           ;	Chosen strategy is simple_byte
 13971  0044FC  0A00               	xorlw	0	; case 0
 13972  0044FE  B4D8               	btfsc	status,2,c
 13973  004500  D7F6               	goto	l209
 13974  004502  0A01               	xorlw	1	; case 1
 13975  004504  B4D8               	btfsc	status,2,c
 13976  004506  D7EF               	goto	l206
 13977  004508  0A03               	xorlw	3	; case 2
 13978  00450A  B4D8               	btfsc	status,2,c
 13979  00450C  D7F2               	goto	l210
 13980  00450E  D7EB               	goto	l206
 13981  004510                     l204:
 13982                           
 13983                           ; BSR set to: 0
 13984                           
 13985                           ; BSR set to: 0
 13986  004510  516F               	movf	ethernetController_setLEDConfig@LED& (0+255),w,b
 13987  004512  B4D8               	btfsc	status,2,c
 13988  004514  D00D               	goto	l213
 13989  004516  D017               	goto	l216
 13990  004518                     
 13991                           ; BSR set to: 0
 13992                           ;ENC424J600.c: 442: data &= ~(0x0f << 4);
 13993                           
 13994                           ; BSR set to: 0
 13995                           
 13996                           ;ENC424J600.c: 441: case LED_OFF:
 13997                           
 13998                           ; BSR set to: 0
 13999  004518  0E0F               	movlw	15
 14000  00451A  1770               	andwf	ethernetController_setLEDConfig@data& (0+255),f,b
 14001                           
 14002                           ; BSR set to: 0
 14003                           ;ENC424J600.c: 443: data |= (0x01 << 4);
 14004  00451C  8970               	bsf	ethernetController_setLEDConfig@data& (0+255),4,b
 14005                           
 14006                           ;ENC424J600.c: 444: break;
 14007  00451E  D013               	goto	l216
 14008  004520                     
 14009                           ; BSR set to: 0
 14010                           ;ENC424J600.c: 446: data &= ~(0x0f << 4);
 14011                           
 14012                           ; BSR set to: 0
 14013  004520  0E0F               	movlw	15
 14014  004522                     L4:
 14015  004522  1770               	andwf	ethernetController_setLEDConfig@data& (0+255),f,b
 14016                           
 14017                           ;ENC424J600.c: 447: break;
 14018  004524  D010               	goto	l216
 14019  004526                     
 14020                           ; BSR set to: 0
 14021                           ;ENC424J600.c: 449: data &= ~(0x0f << 4);
 14022                           
 14023                           ; BSR set to: 0
 14024  004526  0E0F               	movlw	15
 14025  004528  1770               	andwf	ethernetController_setLEDConfig@data& (0+255),f,b
 14026                           
 14027                           ;ENC424J600.c: 450: data |= (0x06 << 4);
 14028  00452A  0E60               	movlw	96
 14029  00452C                     L5:
 14030  00452C  1370               	iorwf	ethernetController_setLEDConfig@data& (0+255),f,b
 14031                           
 14032                           ; BSR set to: 0
 14033                           ;ENC424J600.c: 452: }
 14034                           
 14035                           ;ENC424J600.c: 451: break;
 14036  00452E  D00B               	goto	l216
 14037  004530                     l213:
 14038                           
 14039                           ; BSR set to: 0
 14040                           
 14041                           ; BSR set to: 0
 14042  004530  516E               	movf	ethernetController_setLEDConfig@conf& (0+255),w,b
 14043                           
 14044                           ; Switch size 1, requested type "space"
 14045                           ; Number of cases is 3, Range of values is 0 to 2
 14046                           ; switch strategies available:
 14047                           ; Name         Instructions Cycles
 14048                           ; simple_byte           10     6 (average)
 14049                           ;	Chosen strategy is simple_byte
 14050  004532  0A00               	xorlw	0	; case 0
 14051  004534  B4D8               	btfsc	status,2,c
 14052  004536  D7F4               	goto	l217
 14053  004538  0A01               	xorlw	1	; case 1
 14054  00453A  B4D8               	btfsc	status,2,c
 14055  00453C  D7ED               	goto	l214
 14056  00453E  0A03               	xorlw	3	; case 2
 14057  004540  B4D8               	btfsc	status,2,c
 14058  004542  D7F1               	goto	l218
 14059  004544  D7E9               	goto	l214
 14060  004546                     l216:
 14061                           
 14062                           ; BSR set to: 0
 14063                           ;ENC424J600.c: 453: }
 14064                           ;ENC424J600.c: 454: enc424j600_writeControlRegisterUnbanked(0x15 + 0x60, &data);
 14065                           
 14066                           ; BSR set to: 0
 14067                           
 14068                           ; BSR set to: 0
 14069                           
 14070                           ; BSR set to: 0
 14071  004546  0E70               	movlw	low ethernetController_setLEDConfig@data
 14072  004548  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 14073  00454A  0E00               	movlw	high ethernetController_setLEDConfig@data
 14074  00454C  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 14075  00454E  0E75               	movlw	117
 14076  004550  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 14077  004554  0012               	return		;funcret
 14078  004556                     __end_of_ethernetController_setLEDConfig:
 14079                           	opt stack 0
 14080                           tblptru	equ	0xFF8
 14081                           tblptrh	equ	0xFF7
 14082                           tblptrl	equ	0xFF6
 14083                           tablat	equ	0xFF5
 14084                           prodh	equ	0xFF4
 14085                           prodl	equ	0xFF3
 14086                           intcon	equ	0xFF2
 14087                           intcon3	equ	0xFF0
 14088                           indf0	equ	0xFEF
 14089                           postinc0	equ	0xFEE
 14090                           plusw0	equ	0xFEB
 14091                           fsr0h	equ	0xFEA
 14092                           fsr0l	equ	0xFE9
 14093                           wreg	equ	0xFE8
 14094                           indf1	equ	0xFE7
 14095                           postinc1	equ	0xFE6
 14096                           postdec1	equ	0xFE5
 14097                           plusw1	equ	0xFE3
 14098                           fsr1h	equ	0xFE2
 14099                           fsr1l	equ	0xFE1
 14100                           indf2	equ	0xFDF
 14101                           postinc2	equ	0xFDE
 14102                           postdec2	equ	0xFDD
 14103                           plusw2	equ	0xFDB
 14104                           fsr2h	equ	0xFDA
 14105                           fsr2l	equ	0xFD9
 14106                           status	equ	0xFD8
 14107                           
 14108 ;; *************** function _ethernetController_pollInterruptFlags *****************
 14109 ;; Defined at:
 14110 ;;		line 312 in file "src/enc424j600/ENC424J600.c"
 14111 ;; Parameters:    Size  Location     Type
 14112 ;;		None
 14113 ;; Auto vars:     Size  Location     Type
 14114 ;;  reg             2   32[BANK0 ] unsigned int 
 14115 ;;  flags           2   30[BANK0 ] struct interruptFlags
 14116 ;; Return value:  Size  Location     Type
 14117 ;;                  2   24[BANK0 ] struct interruptFlags
 14118 ;; Registers used:
 14119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14120 ;; Tracked objects:
 14121 ;;		On entry : 0/0
 14122 ;;		On exit  : 0/0
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14125 ;;      Params:         0       2       0       0       0       0       0       0       0
 14126 ;;      Locals:         0       4       0       0       0       0       0       0       0
 14127 ;;      Temps:          0       4       0       0       0       0       0       0       0
 14128 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14129 ;;Total ram usage:       10 bytes
 14130 ;; Hardware stack levels used:    1
 14131 ;; Hardware stack levels required when called:    8
 14132 ;; This function calls:
 14133 ;;		_enc424j600_getInterruptFlags
 14134 ;; This function is called by:
 14135 ;;		_handleStackBackgroundTasks
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           	psect	text48
 14140  003470                     __ptext48:
 14141                           	opt stack 0
 14142  003470                     _ethernetController_pollInterruptFlags:
 14143                           	opt stack 21
 14144                           
 14145                           ;ENC424J600.c: 313: interruptFlags_t flags;
 14146                           ;ENC424J600.c: 314: uint16_t reg = enc424j600_getInterruptFlags();
 14147                           
 14148                           ;incstack = 0
 14149  003470  EC1D  F028         	call	_enc424j600_getInterruptFlags	;wreg free
 14150  003474  C06E  F080         	movff	?_enc424j600_getInterruptFlags,ethernetController_pollInterruptFlags@reg
 14151  003478  C06F  F081         	movff	?_enc424j600_getInterruptFlags+1,ethernetController_pollInterruptFlags@reg+1
 14152                           
 14153                           ;ENC424J600.c: 315: flags.MODEXIF = (reg & (1 << MODEXIF)) != 0 ? 1 : 0;
 14154  00347C  0100               	movlb	0	; () banked
 14155  00347E  AD81               	btfss	(ethernetController_pollInterruptFlags@reg+1)& (0+255),6,b
 14156  003480  D003               	goto	u11860
 14157  003482  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14158  003484  2B7A               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14159  003486  D002               	goto	u11878
 14160  003488                     u11860:
 14161  003488  0100               	movlb	0	; () banked
 14162  00348A  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14163  00348C                     u11878:
 14164  00348C  517E               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 14165  00348E  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14166  003490  0BFE               	andlw	-2
 14167  003492  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14168  003494  6F7E               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 14169                           
 14170                           ; BSR set to: 0
 14171                           ;ENC424J600.c: 316: flags.HASHIF = (reg & (1 << HASHIF)) != 0 ? 1 : 0;
 14172  003496  AB81               	btfss	(ethernetController_pollInterruptFlags@reg+1)& (0+255),5,b
 14173  003498  D003               	goto	u11880
 14174  00349A  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14175  00349C  2B7A               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14176  00349E  D002               	goto	u11898
 14177  0034A0                     u11880:
 14178  0034A0  0100               	movlb	0	; () banked
 14179  0034A2  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14180  0034A4                     u11898:
 14181  0034A4  477A               	rlncf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14182  0034A6  517E               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 14183  0034A8  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14184  0034AA  0BFD               	andlw	-3
 14185  0034AC  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14186  0034AE  6F7E               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 14187                           
 14188                           ; BSR set to: 0
 14189                           ;ENC424J600.c: 317: flags.AESIF = (reg & (1 << AESIF)) != 0 ? 1 : 0;
 14190  0034B0  A981               	btfss	(ethernetController_pollInterruptFlags@reg+1)& (0+255),4,b
 14191  0034B2  D003               	goto	u11900
 14192  0034B4  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14193  0034B6  2B7A               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14194  0034B8  D002               	goto	u11918
 14195  0034BA                     u11900:
 14196  0034BA  0100               	movlb	0	; () banked
 14197  0034BC  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14198  0034BE                     u11918:
 14199  0034BE  477A               	rlncf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14200  0034C0  477A               	rlncf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14201  0034C2  517E               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 14202  0034C4  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14203  0034C6  0BFB               	andlw	-5
 14204  0034C8  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14205  0034CA  6F7E               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 14206                           
 14207                           ; BSR set to: 0
 14208                           ;ENC424J600.c: 318: flags.LINKIF = (reg & (1 << LINKIF)) != 0 ? 1 : 0;
 14209  0034CC  A781               	btfss	(ethernetController_pollInterruptFlags@reg+1)& (0+255),3,b
 14210  0034CE  D003               	goto	u11920
 14211  0034D0  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14212  0034D2  2B7A               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14213  0034D4  D002               	goto	u11938
 14214  0034D6                     u11920:
 14215  0034D6  0100               	movlb	0	; () banked
 14216  0034D8  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14217  0034DA                     u11938:
 14218  0034DA  477A               	rlncf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14219  0034DC  477A               	rlncf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14220  0034DE  477A               	rlncf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14221  0034E0  517E               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 14222  0034E2  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14223  0034E4  0BF7               	andlw	-9
 14224  0034E6  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14225  0034E8  6F7E               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 14226                           
 14227                           ; BSR set to: 0
 14228                           ;ENC424J600.c: 320: flags.PKTIF = (reg & (1 << PKTIF)) != 0 ? 1 : 0;
 14229  0034EA  AD80               	btfss	ethernetController_pollInterruptFlags@reg& (0+255),6,b
 14230  0034EC  D003               	goto	u11940
 14231  0034EE  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14232  0034F0  2B7A               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14233  0034F2  D002               	goto	u11958
 14234  0034F4                     u11940:
 14235  0034F4  0100               	movlb	0	; () banked
 14236  0034F6  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14237  0034F8                     u11958:
 14238  0034F8  3B7A               	swapf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14239  0034FA  517E               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 14240  0034FC  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14241  0034FE  0BEF               	andlw	-17
 14242  003500  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14243  003502  6F7E               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 14244                           
 14245                           ; BSR set to: 0
 14246                           ;ENC424J600.c: 321: flags.DMAIF = (reg & (1 << DMAIF)) != 0 ? 1 : 0;
 14247  003504  AB80               	btfss	ethernetController_pollInterruptFlags@reg& (0+255),5,b
 14248  003506  D003               	goto	u11960
 14249  003508  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14250  00350A  2B7A               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14251  00350C  D002               	goto	u11978
 14252  00350E                     u11960:
 14253  00350E  0100               	movlb	0	; () banked
 14254  003510  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14255  003512                     u11978:
 14256  003512  3B7A               	swapf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14257  003514  477A               	rlncf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14258  003516  517E               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 14259  003518  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14260  00351A  0BDF               	andlw	-33
 14261  00351C  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14262  00351E  6F7E               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 14263                           
 14264                           ; BSR set to: 0
 14265                           ;ENC424J600.c: 323: flags.TXIF = (reg & (1 << TXIF)) != 0 ? 1 : 0;
 14266  003520  A89E               	btfss	3998,4,c	;volatile
 14267  003522  D003               	goto	u11980
 14268  003524  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14269  003526  2B7A               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14270  003528  D002               	goto	u11998
 14271  00352A                     u11980:
 14272  00352A  0100               	movlb	0	; () banked
 14273  00352C  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14274  00352E                     u11998:
 14275  00352E  0E01               	movlw	1
 14276  003530  6F7B               	movwf	(??_ethernetController_pollInterruptFlags+1)& (0+255),b
 14277  003532  0E00               	movlw	0
 14278  003534  6F7C               	movwf	(??_ethernetController_pollInterruptFlags+2)& (0+255),b
 14279  003536  2B7A               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14280  003538  D003               	goto	u12004
 14281  00353A                     u12005:
 14282  00353A  90D8               	bcf	status,0,c
 14283  00353C  377B               	rlcf	(??_ethernetController_pollInterruptFlags+1)& (0+255),f,b
 14284  00353E  377C               	rlcf	(??_ethernetController_pollInterruptFlags+2)& (0+255),f,b
 14285  003540                     u12004:
 14286  003540  2F7A               	decfsz	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14287  003542  D7FB               	goto	u12005
 14288  003544  0100               	movlb	0	; () banked
 14289  003546  5180               	movf	ethernetController_pollInterruptFlags@reg& (0+255),w,b
 14290  003548  177B               	andwf	(??_ethernetController_pollInterruptFlags+1)& (0+255),f,b
 14291  00354A  5181               	movf	(ethernetController_pollInterruptFlags@reg+1)& (0+255),w,b
 14292  00354C  177C               	andwf	(??_ethernetController_pollInterruptFlags+2)& (0+255),f,b
 14293  00354E  517B               	movf	(??_ethernetController_pollInterruptFlags+1)& (0+255),w,b
 14294  003550  117C               	iorwf	(??_ethernetController_pollInterruptFlags+2)& (0+255),w,b
 14295  003552  B4D8               	btfsc	status,2,c
 14296  003554  D003               	goto	u12010
 14297  003556  6B7D               	clrf	(??_ethernetController_pollInterruptFlags+3)& (0+255),b
 14298  003558  2B7D               	incf	(??_ethernetController_pollInterruptFlags+3)& (0+255),f,b
 14299  00355A  D002               	goto	u12028
 14300  00355C                     u12010:
 14301  00355C  0100               	movlb	0	; () banked
 14302  00355E  6B7D               	clrf	(??_ethernetController_pollInterruptFlags+3)& (0+255),b
 14303  003560                     u12028:
 14304  003560  3B7D               	swapf	(??_ethernetController_pollInterruptFlags+3)& (0+255),f,b
 14305  003562  477D               	rlncf	(??_ethernetController_pollInterruptFlags+3)& (0+255),f,b
 14306  003564  477D               	rlncf	(??_ethernetController_pollInterruptFlags+3)& (0+255),f,b
 14307  003566  517E               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 14308  003568  197D               	xorwf	(??_ethernetController_pollInterruptFlags+3)& (0+255),w,b
 14309  00356A  0BBF               	andlw	-65
 14310  00356C  197D               	xorwf	(??_ethernetController_pollInterruptFlags+3)& (0+255),w,b
 14311  00356E  6F7E               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 14312                           
 14313                           ; BSR set to: 0
 14314                           ;ENC424J600.c: 324: flags.TXABTIF = (reg & (1 << TXABTIF)) != 0 ? 1 : 0;
 14315  003570  A580               	btfss	ethernetController_pollInterruptFlags@reg& (0+255),2,b
 14316  003572  D003               	goto	u12030
 14317  003574  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14318  003576  2B7A               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14319  003578  D002               	goto	u12048
 14320  00357A                     u12030:
 14321  00357A  0100               	movlb	0	; () banked
 14322  00357C  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14323  00357E                     u12048:
 14324  00357E  337A               	rrcf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14325  003580  337A               	rrcf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14326  003582  517E               	movf	ethernetController_pollInterruptFlags@flags& (0+255),w,b
 14327  003584  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14328  003586  0B7F               	andlw	-129
 14329  003588  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14330  00358A  6F7E               	movwf	ethernetController_pollInterruptFlags@flags& (0+255),b
 14331                           
 14332                           ; BSR set to: 0
 14333                           ;ENC424J600.c: 325: flags.RXABTIF = (reg & (1 << RXABTIF)) != 0 ? 1 : 0;
 14334  00358C  A380               	btfss	ethernetController_pollInterruptFlags@reg& (0+255),1,b
 14335  00358E  D003               	goto	u12050
 14336  003590  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14337  003592  2B7A               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14338  003594  D002               	goto	u12068
 14339  003596                     u12050:
 14340  003596  0100               	movlb	0	; () banked
 14341  003598  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14342  00359A                     u12068:
 14343  00359A  517F               	movf	(ethernetController_pollInterruptFlags@flags+1)& (0+255),w,b
 14344  00359C  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14345  00359E  0BFE               	andlw	-2
 14346  0035A0  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14347  0035A2  6F7F               	movwf	(ethernetController_pollInterruptFlags@flags+1)& (0+255),b
 14348                           
 14349                           ; BSR set to: 0
 14350                           ;ENC424J600.c: 326: flags.PCFULIF = (reg & (1 << PCFULIF)) != 0 ? 1 : 0;
 14351  0035A4  A180               	btfss	ethernetController_pollInterruptFlags@reg& (0+255),0,b
 14352  0035A6  D003               	goto	u12070
 14353  0035A8  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14354  0035AA  2B7A               	incf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14355  0035AC  D002               	goto	u12088
 14356  0035AE                     u12070:
 14357  0035AE  0100               	movlb	0	; () banked
 14358  0035B0  6B7A               	clrf	??_ethernetController_pollInterruptFlags& (0+255),b
 14359  0035B2                     u12088:
 14360  0035B2  477A               	rlncf	??_ethernetController_pollInterruptFlags& (0+255),f,b
 14361  0035B4  517F               	movf	(ethernetController_pollInterruptFlags@flags+1)& (0+255),w,b
 14362  0035B6  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14363  0035B8  0BFD               	andlw	-3
 14364  0035BA  197A               	xorwf	??_ethernetController_pollInterruptFlags& (0+255),w,b
 14365  0035BC  6F7F               	movwf	(ethernetController_pollInterruptFlags@flags+1)& (0+255),b
 14366                           
 14367                           ; BSR set to: 0
 14368                           ;ENC424J600.c: 327: return flags;
 14369  0035BE  C07E  F078         	movff	ethernetController_pollInterruptFlags@flags,?_ethernetController_pollInterruptFla
      +                          gs
 14370  0035C2  C07F  F079         	movff	ethernetController_pollInterruptFlags@flags+1,?_ethernetController_pollInterruptF
      +                          lags+1
 14371  0035C6  0012               	return	
 14372  0035C8                     __end_of_ethernetController_pollInterruptFlags:
 14373                           	opt stack 0
 14374                           tblptru	equ	0xFF8
 14375                           tblptrh	equ	0xFF7
 14376                           tblptrl	equ	0xFF6
 14377                           tablat	equ	0xFF5
 14378                           prodh	equ	0xFF4
 14379                           prodl	equ	0xFF3
 14380                           intcon	equ	0xFF2
 14381                           intcon3	equ	0xFF0
 14382                           indf0	equ	0xFEF
 14383                           postinc0	equ	0xFEE
 14384                           plusw0	equ	0xFEB
 14385                           fsr0h	equ	0xFEA
 14386                           fsr0l	equ	0xFE9
 14387                           wreg	equ	0xFE8
 14388                           indf1	equ	0xFE7
 14389                           postinc1	equ	0xFE6
 14390                           postdec1	equ	0xFE5
 14391                           plusw1	equ	0xFE3
 14392                           fsr1h	equ	0xFE2
 14393                           fsr1l	equ	0xFE1
 14394                           indf2	equ	0xFDF
 14395                           postinc2	equ	0xFDE
 14396                           postdec2	equ	0xFDD
 14397                           plusw2	equ	0xFDB
 14398                           fsr2h	equ	0xFDA
 14399                           fsr2l	equ	0xFD9
 14400                           status	equ	0xFD8
 14401                           
 14402 ;; *************** function _enc424j600_getInterruptFlags *****************
 14403 ;; Defined at:
 14404 ;;		line 696 in file "src/enc424j600/ENC424J600.c"
 14405 ;; Parameters:    Size  Location     Type
 14406 ;;		None
 14407 ;; Auto vars:     Size  Location     Type
 14408 ;;  high            1   23[BANK0 ] unsigned char 
 14409 ;;  low             1   22[BANK0 ] unsigned char 
 14410 ;; Return value:  Size  Location     Type
 14411 ;;                  2   14[BANK0 ] unsigned int 
 14412 ;; Registers used:
 14413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14414 ;; Tracked objects:
 14415 ;;		On entry : 0/0
 14416 ;;		On exit  : 0/0
 14417 ;;		Unchanged: 0/0
 14418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14419 ;;      Params:         0       2       0       0       0       0       0       0       0
 14420 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14421 ;;      Temps:          0       6       0       0       0       0       0       0       0
 14422 ;;      Totals:         0      10       0       0       0       0       0       0       0
 14423 ;;Total ram usage:       10 bytes
 14424 ;; Hardware stack levels used:    1
 14425 ;; Hardware stack levels required when called:    7
 14426 ;; This function calls:
 14427 ;;		_enc424j600_readControlRegisterUnbanked
 14428 ;; This function is called by:
 14429 ;;		_ethernetController_pollInterruptFlags
 14430 ;; This function uses a non-reentrant model
 14431 ;;
 14432                           
 14433                           	psect	text49
 14434  00503A                     __ptext49:
 14435                           	opt stack 0
 14436  00503A                     _enc424j600_getInterruptFlags:
 14437                           	opt stack 21
 14438                           
 14439                           ;ENC424J600.c: 697: uint8_t low, high;
 14440                           ;ENC424J600.c: 698: enc424j600_readControlRegisterUnbanked(0x1C + 0x00, &low);
 14441                           
 14442                           ; BSR set to: 0
 14443                           ;incstack = 0
 14444  00503A  0E76               	movlw	low enc424j600_getInterruptFlags@low
 14445  00503C  0100               	movlb	0	; () banked
 14446  00503E  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 14447  005040  0E00               	movlw	high enc424j600_getInterruptFlags@low
 14448  005042  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 14449  005044  0E1C               	movlw	28
 14450  005046  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 14451                           
 14452                           ;ENC424J600.c: 699: enc424j600_readControlRegisterUnbanked(0x1D + 0x00, &high);
 14453  00504A  0E77               	movlw	low enc424j600_getInterruptFlags@high
 14454  00504C  0100               	movlb	0	; () banked
 14455  00504E  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 14456  005050  0E00               	movlw	high enc424j600_getInterruptFlags@high
 14457  005052  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 14458  005054  0E1D               	movlw	29
 14459  005056  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 14460                           
 14461                           ;ENC424J600.c: 700: return ( (((uint16_t) low)&0x00ff) | (((uint16_t) high << 8)&0xff00)
      +                          );
 14462  00505A  0E00               	movlw	0
 14463  00505C  0100               	movlb	0	; () banked
 14464  00505E  6F70               	movwf	??_enc424j600_getInterruptFlags& (0+255),b
 14465  005060  0EFF               	movlw	255
 14466  005062  6F71               	movwf	(??_enc424j600_getInterruptFlags+1)& (0+255),b
 14467  005064  5177               	movf	enc424j600_getInterruptFlags@high& (0+255),w,b
 14468  005066  6F73               	movwf	(??_enc424j600_getInterruptFlags+3)& (0+255),b
 14469  005068  6B72               	clrf	(??_enc424j600_getInterruptFlags+2)& (0+255),b
 14470  00506A  5170               	movf	??_enc424j600_getInterruptFlags& (0+255),w,b
 14471  00506C  1772               	andwf	(??_enc424j600_getInterruptFlags+2)& (0+255),f,b
 14472  00506E  5171               	movf	(??_enc424j600_getInterruptFlags+1)& (0+255),w,b
 14473  005070  1773               	andwf	(??_enc424j600_getInterruptFlags+3)& (0+255),f,b
 14474  005072  5176               	movf	enc424j600_getInterruptFlags@low& (0+255),w,b
 14475  005074  6F74               	movwf	(??_enc424j600_getInterruptFlags+4)& (0+255),b
 14476  005076  6B75               	clrf	(??_enc424j600_getInterruptFlags+5)& (0+255),b
 14477  005078  5172               	movf	(??_enc424j600_getInterruptFlags+2)& (0+255),w,b
 14478  00507A  1174               	iorwf	(??_enc424j600_getInterruptFlags+4)& (0+255),w,b
 14479  00507C  6F6E               	movwf	?_enc424j600_getInterruptFlags& (0+255),b
 14480  00507E  5173               	movf	(??_enc424j600_getInterruptFlags+3)& (0+255),w,b
 14481  005080  1175               	iorwf	(??_enc424j600_getInterruptFlags+5)& (0+255),w,b
 14482  005082  6F6F               	movwf	(?_enc424j600_getInterruptFlags+1)& (0+255),b
 14483  005084  0012               	return	
 14484  005086                     __end_of_enc424j600_getInterruptFlags:
 14485                           	opt stack 0
 14486                           tblptru	equ	0xFF8
 14487                           tblptrh	equ	0xFF7
 14488                           tblptrl	equ	0xFF6
 14489                           tablat	equ	0xFF5
 14490                           prodh	equ	0xFF4
 14491                           prodl	equ	0xFF3
 14492                           intcon	equ	0xFF2
 14493                           intcon3	equ	0xFF0
 14494                           indf0	equ	0xFEF
 14495                           postinc0	equ	0xFEE
 14496                           plusw0	equ	0xFEB
 14497                           fsr0h	equ	0xFEA
 14498                           fsr0l	equ	0xFE9
 14499                           wreg	equ	0xFE8
 14500                           indf1	equ	0xFE7
 14501                           postinc1	equ	0xFE6
 14502                           postdec1	equ	0xFE5
 14503                           plusw1	equ	0xFE3
 14504                           fsr1h	equ	0xFE2
 14505                           fsr1l	equ	0xFE1
 14506                           indf2	equ	0xFDF
 14507                           postinc2	equ	0xFDE
 14508                           postdec2	equ	0xFDD
 14509                           plusw2	equ	0xFDB
 14510                           fsr2h	equ	0xFDA
 14511                           fsr2l	equ	0xFD9
 14512                           status	equ	0xFD8
 14513                           
 14514 ;; *************** function _ethernetController_newPacketAvailable *****************
 14515 ;; Defined at:
 14516 ;;		line 390 in file "src/enc424j600/ENC424J600.c"
 14517 ;; Parameters:    Size  Location     Type
 14518 ;;		None
 14519 ;; Auto vars:     Size  Location     Type
 14520 ;;		None
 14521 ;; Return value:  Size  Location     Type
 14522 ;;                  1    wreg      unsigned char 
 14523 ;; Registers used:
 14524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14525 ;; Tracked objects:
 14526 ;;		On entry : 0/0
 14527 ;;		On exit  : 0/0
 14528 ;;		Unchanged: 0/0
 14529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14530 ;;      Params:         0       0       0       0       0       0       0       0       0
 14531 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14532 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14533 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14534 ;;Total ram usage:        0 bytes
 14535 ;; Hardware stack levels used:    1
 14536 ;; Hardware stack levels required when called:    8
 14537 ;; This function calls:
 14538 ;;		_enc424j600_getPacketCount
 14539 ;; This function is called by:
 14540 ;;		_handleStackBackgroundTasks
 14541 ;; This function uses a non-reentrant model
 14542 ;;
 14543                           
 14544                           	psect	text50
 14545  0057A6                     __ptext50:
 14546                           	opt stack 0
 14547  0057A6                     _ethernetController_newPacketAvailable:
 14548                           	opt stack 21
 14549                           
 14550                           ;ENC424J600.c: 391: return (unsigned) (enc424j600_getPacketCount() != 0);
 14551                           
 14552                           ; BSR set to: 0
 14553                           ;incstack = 0
 14554  0057A6  EC9D  F02B         	call	_enc424j600_getPacketCount	;wreg free
 14555  0057AA  0900               	iorlw	0
 14556  0057AC  B4D8               	btfsc	status,2,c
 14557  0057AE  D002               	goto	u12090
 14558  0057B0  0E01               	movlw	1
 14559  0057B2  0012               	return	
 14560  0057B4                     u12090:
 14561  0057B4  0E00               	movlw	0
 14562  0057B6  0012               	return	
 14563  0057B8                     __end_of_ethernetController_newPacketAvailable:
 14564                           	opt stack 0
 14565                           tblptru	equ	0xFF8
 14566                           tblptrh	equ	0xFF7
 14567                           tblptrl	equ	0xFF6
 14568                           tablat	equ	0xFF5
 14569                           prodh	equ	0xFF4
 14570                           prodl	equ	0xFF3
 14571                           intcon	equ	0xFF2
 14572                           intcon3	equ	0xFF0
 14573                           indf0	equ	0xFEF
 14574                           postinc0	equ	0xFEE
 14575                           plusw0	equ	0xFEB
 14576                           fsr0h	equ	0xFEA
 14577                           fsr0l	equ	0xFE9
 14578                           wreg	equ	0xFE8
 14579                           indf1	equ	0xFE7
 14580                           postinc1	equ	0xFE6
 14581                           postdec1	equ	0xFE5
 14582                           plusw1	equ	0xFE3
 14583                           fsr1h	equ	0xFE2
 14584                           fsr1l	equ	0xFE1
 14585                           indf2	equ	0xFDF
 14586                           postinc2	equ	0xFDE
 14587                           postdec2	equ	0xFDD
 14588                           plusw2	equ	0xFDB
 14589                           fsr2h	equ	0xFDA
 14590                           fsr2l	equ	0xFD9
 14591                           status	equ	0xFD8
 14592                           
 14593 ;; *************** function _enc424j600_getPacketCount *****************
 14594 ;; Defined at:
 14595 ;;		line 594 in file "src/enc424j600/ENC424J600.c"
 14596 ;; Parameters:    Size  Location     Type
 14597 ;;		None
 14598 ;; Auto vars:     Size  Location     Type
 14599 ;;  lowByte         1   14[BANK0 ] unsigned char 
 14600 ;; Return value:  Size  Location     Type
 14601 ;;                  1    wreg      unsigned char 
 14602 ;; Registers used:
 14603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14604 ;; Tracked objects:
 14605 ;;		On entry : 0/0
 14606 ;;		On exit  : 0/0
 14607 ;;		Unchanged: 0/0
 14608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14609 ;;      Params:         0       0       0       0       0       0       0       0       0
 14610 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14611 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14612 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14613 ;;Total ram usage:        1 bytes
 14614 ;; Hardware stack levels used:    1
 14615 ;; Hardware stack levels required when called:    7
 14616 ;; This function calls:
 14617 ;;		_enc424j600_readControlRegisterUnbanked
 14618 ;; This function is called by:
 14619 ;;		_ethernetController_newPacketAvailable
 14620 ;;		_ethernetController_getCurrentPacketCount
 14621 ;; This function uses a non-reentrant model
 14622 ;;
 14623                           
 14624                           	psect	text51
 14625  00573A                     __ptext51:
 14626                           	opt stack 0
 14627  00573A                     _enc424j600_getPacketCount:
 14628                           	opt stack 21
 14629                           
 14630                           ;ENC424J600.c: 595: uint8_t lowByte = 0;
 14631                           
 14632                           ;incstack = 0
 14633  00573A  0E00               	movlw	0
 14634  00573C  0100               	movlb	0	; () banked
 14635  00573E  6F6E               	movwf	enc424j600_getPacketCount@lowByte& (0+255),b
 14636                           
 14637                           ; BSR set to: 0
 14638                           ;ENC424J600.c: 596: enc424j600_readControlRegisterUnbanked(0x1A + 0x00, &lowByte);
 14639  005740  0E6E               	movlw	low enc424j600_getPacketCount@lowByte
 14640  005742  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 14641  005744  0E00               	movlw	high enc424j600_getPacketCount@lowByte
 14642  005746  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 14643  005748  0E1A               	movlw	26
 14644  00574A  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 14645                           
 14646                           ;ENC424J600.c: 597: return (uint32_t) lowByte;
 14647  00574E  0100               	movlb	0	; () banked
 14648  005750  516E               	movf	enc424j600_getPacketCount@lowByte& (0+255),w,b
 14649  005752  0012               	return	
 14650  005754                     __end_of_enc424j600_getPacketCount:
 14651                           	opt stack 0
 14652                           tblptru	equ	0xFF8
 14653                           tblptrh	equ	0xFF7
 14654                           tblptrl	equ	0xFF6
 14655                           tablat	equ	0xFF5
 14656                           prodh	equ	0xFF4
 14657                           prodl	equ	0xFF3
 14658                           intcon	equ	0xFF2
 14659                           intcon3	equ	0xFF0
 14660                           indf0	equ	0xFEF
 14661                           postinc0	equ	0xFEE
 14662                           plusw0	equ	0xFEB
 14663                           fsr0h	equ	0xFEA
 14664                           fsr0l	equ	0xFE9
 14665                           wreg	equ	0xFE8
 14666                           indf1	equ	0xFE7
 14667                           postinc1	equ	0xFE6
 14668                           postdec1	equ	0xFE5
 14669                           plusw1	equ	0xFE3
 14670                           fsr1h	equ	0xFE2
 14671                           fsr1l	equ	0xFE1
 14672                           indf2	equ	0xFDF
 14673                           postinc2	equ	0xFDE
 14674                           postdec2	equ	0xFDD
 14675                           plusw2	equ	0xFDB
 14676                           fsr2h	equ	0xFDA
 14677                           fsr2l	equ	0xFD9
 14678                           status	equ	0xFD8
 14679                           
 14680 ;; *************** function _ethernetController_clearInterruptFlag *****************
 14681 ;; Defined at:
 14682 ;;		line 330 in file "src/enc424j600/ENC424J600.c"
 14683 ;; Parameters:    Size  Location     Type
 14684 ;;  flag            1    wreg     unsigned char 
 14685 ;; Auto vars:     Size  Location     Type
 14686 ;;  flag            1   18[BANK0 ] unsigned char 
 14687 ;; Return value:  Size  Location     Type
 14688 ;;                  1    wreg      void 
 14689 ;; Registers used:
 14690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14691 ;; Tracked objects:
 14692 ;;		On entry : 0/0
 14693 ;;		On exit  : 0/0
 14694 ;;		Unchanged: 0/0
 14695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14696 ;;      Params:         0       0       0       0       0       0       0       0       0
 14697 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14698 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14699 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14700 ;;Total ram usage:        1 bytes
 14701 ;; Hardware stack levels used:    1
 14702 ;; Hardware stack levels required when called:    8
 14703 ;; This function calls:
 14704 ;;		_enc424j600_clearInterruptFlag
 14705 ;; This function is called by:
 14706 ;;		_handleStackBackgroundTasks
 14707 ;; This function uses a non-reentrant model
 14708 ;;
 14709                           
 14710                           	psect	text52
 14711  005808                     __ptext52:
 14712                           	opt stack 0
 14713  005808                     _ethernetController_clearInterruptFlag:
 14714                           	opt stack 21
 14715                           
 14716                           ; BSR set to: 0
 14717                           ;incstack = 0
 14718                           ;ethernetController_clearInterruptFlag@flag stored from wreg
 14719  005808  0100               	movlb	0	; () banked
 14720  00580A  6F72               	movwf	ethernetController_clearInterruptFlag@flag& (0+255),b
 14721                           
 14722                           ;ENC424J600.c: 331: enc424j600_clearInterruptFlag(flag);
 14723  00580C  0100               	movlb	0	; () banked
 14724  00580E  5172               	movf	ethernetController_clearInterruptFlag@flag& (0+255),w,b
 14725  005810  ECF0  F022         	call	_enc424j600_clearInterruptFlag
 14726  005814  0012               	return		;funcret
 14727  005816                     __end_of_ethernetController_clearInterruptFlag:
 14728                           	opt stack 0
 14729                           tblptru	equ	0xFF8
 14730                           tblptrh	equ	0xFF7
 14731                           tblptrl	equ	0xFF6
 14732                           tablat	equ	0xFF5
 14733                           prodh	equ	0xFF4
 14734                           prodl	equ	0xFF3
 14735                           intcon	equ	0xFF2
 14736                           intcon3	equ	0xFF0
 14737                           indf0	equ	0xFEF
 14738                           postinc0	equ	0xFEE
 14739                           plusw0	equ	0xFEB
 14740                           fsr0h	equ	0xFEA
 14741                           fsr0l	equ	0xFE9
 14742                           wreg	equ	0xFE8
 14743                           indf1	equ	0xFE7
 14744                           postinc1	equ	0xFE6
 14745                           postdec1	equ	0xFE5
 14746                           plusw1	equ	0xFE3
 14747                           fsr1h	equ	0xFE2
 14748                           fsr1l	equ	0xFE1
 14749                           indf2	equ	0xFDF
 14750                           postinc2	equ	0xFDE
 14751                           postdec2	equ	0xFDD
 14752                           plusw2	equ	0xFDB
 14753                           fsr2h	equ	0xFDA
 14754                           fsr2l	equ	0xFD9
 14755                           status	equ	0xFD8
 14756                           
 14757 ;; *************** function _enc424j600_clearInterruptFlag *****************
 14758 ;; Defined at:
 14759 ;;		line 703 in file "src/enc424j600/ENC424J600.c"
 14760 ;; Parameters:    Size  Location     Type
 14761 ;;  flag            1    wreg     unsigned char 
 14762 ;; Auto vars:     Size  Location     Type
 14763 ;;  flag            1   16[BANK0 ] unsigned char 
 14764 ;;  temp            1   17[BANK0 ] unsigned char 
 14765 ;; Return value:  Size  Location     Type
 14766 ;;                  1    wreg      void 
 14767 ;; Registers used:
 14768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14769 ;; Tracked objects:
 14770 ;;		On entry : 0/0
 14771 ;;		On exit  : 0/0
 14772 ;;		Unchanged: 0/0
 14773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14774 ;;      Params:         0       0       0       0       0       0       0       0       0
 14775 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14776 ;;      Temps:          0       2       0       0       0       0       0       0       0
 14777 ;;      Totals:         0       4       0       0       0       0       0       0       0
 14778 ;;Total ram usage:        4 bytes
 14779 ;; Hardware stack levels used:    1
 14780 ;; Hardware stack levels required when called:    7
 14781 ;; This function calls:
 14782 ;;		_enc424j600_readControlRegisterUnbanked
 14783 ;;		_enc424j600_writeControlRegisterUnbanked
 14784 ;; This function is called by:
 14785 ;;		_ethernetController_clearInterruptFlag
 14786 ;; This function uses a non-reentrant model
 14787 ;;
 14788                           
 14789                           	psect	text53
 14790  0045E0                     __ptext53:
 14791                           	opt stack 0
 14792  0045E0                     _enc424j600_clearInterruptFlag:
 14793                           	opt stack 21
 14794                           
 14795                           ;incstack = 0
 14796                           ;enc424j600_clearInterruptFlag@flag stored from wreg
 14797  0045E0  0100               	movlb	0	; () banked
 14798  0045E2  6F70               	movwf	enc424j600_clearInterruptFlag@flag& (0+255),b
 14799                           
 14800                           ;ENC424J600.c: 704: uint8_t temp;
 14801                           ;ENC424J600.c: 705: if (flag < 8) {
 14802  0045E4  0E08               	movlw	8
 14803  0045E6  0100               	movlb	0	; () banked
 14804  0045E8  6170               	cpfslt	enc424j600_clearInterruptFlag@flag& (0+255),b
 14805  0045EA  D01E               	goto	l317
 14806                           
 14807                           ; BSR set to: 0
 14808                           ;ENC424J600.c: 706: enc424j600_readControlRegisterUnbanked(0x1C + 0x00, &temp);
 14809  0045EC  0E71               	movlw	low enc424j600_clearInterruptFlag@temp
 14810  0045EE  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 14811  0045F0  0E00               	movlw	high enc424j600_clearInterruptFlag@temp
 14812  0045F2  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 14813  0045F4  0E1C               	movlw	28
 14814  0045F6  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 14815                           
 14816                           ;ENC424J600.c: 707: temp &= ~(1 << flag);
 14817  0045FA  C070  F06E         	movff	enc424j600_clearInterruptFlag@flag,??_enc424j600_clearInterruptFlag
 14818  0045FE  0E01               	movlw	1
 14819  004600  0100               	movlb	0	; () banked
 14820  004602  6F6F               	movwf	(??_enc424j600_clearInterruptFlag+1)& (0+255),b
 14821  004604  2B6E               	incf	??_enc424j600_clearInterruptFlag& (0+255),f,b
 14822  004606  D002               	goto	u11404
 14823  004608                     u11405:
 14824  004608  90D8               	bcf	status,0,c
 14825  00460A  376F               	rlcf	(??_enc424j600_clearInterruptFlag+1)& (0+255),f,b
 14826  00460C                     u11404:
 14827  00460C  2F6E               	decfsz	??_enc424j600_clearInterruptFlag& (0+255),f,b
 14828  00460E  D7FC               	goto	u11405
 14829  004610  0100               	movlb	0	; () banked
 14830  004612  516F               	movf	(??_enc424j600_clearInterruptFlag+1)& (0+255),w,b
 14831  004614  0AFF               	xorlw	255
 14832  004616  1771               	andwf	enc424j600_clearInterruptFlag@temp& (0+255),f,b
 14833                           
 14834                           ; BSR set to: 0
 14835                           ;ENC424J600.c: 708: enc424j600_writeControlRegisterUnbanked(0x1C + 0x00, &temp);
 14836  004618  0E71               	movlw	low enc424j600_clearInterruptFlag@temp
 14837  00461A  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 14838  00461C  0E00               	movlw	high enc424j600_clearInterruptFlag@temp
 14839  00461E  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 14840  004620  0E1C               	movlw	28
 14841  004622  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 14842                           
 14843                           ;ENC424J600.c: 709: } else {
 14844  004626  0012               	return	
 14845  004628                     l317:
 14846                           
 14847                           ;ENC424J600.c: 710: flag -= 8;
 14848  004628  0E08               	movlw	8
 14849  00462A  0100               	movlb	0	; () banked
 14850  00462C  5F70               	subwf	enc424j600_clearInterruptFlag@flag& (0+255),f,b
 14851                           
 14852                           ; BSR set to: 0
 14853                           ;ENC424J600.c: 711: enc424j600_readControlRegisterUnbanked(0x1D + 0x00, &temp);
 14854  00462E  0E71               	movlw	low enc424j600_clearInterruptFlag@temp
 14855  004630  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 14856  004632  0E00               	movlw	high enc424j600_clearInterruptFlag@temp
 14857  004634  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 14858  004636  0E1D               	movlw	29
 14859  004638  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 14860                           
 14861                           ;ENC424J600.c: 712: temp &= ~(1 << flag);
 14862  00463C  C070  F06E         	movff	enc424j600_clearInterruptFlag@flag,??_enc424j600_clearInterruptFlag
 14863  004640  0E01               	movlw	1
 14864  004642  0100               	movlb	0	; () banked
 14865  004644  6F6F               	movwf	(??_enc424j600_clearInterruptFlag+1)& (0+255),b
 14866  004646  2B6E               	incf	??_enc424j600_clearInterruptFlag& (0+255),f,b
 14867  004648  D002               	goto	u11414
 14868  00464A                     u11415:
 14869  00464A  90D8               	bcf	status,0,c
 14870  00464C  376F               	rlcf	(??_enc424j600_clearInterruptFlag+1)& (0+255),f,b
 14871  00464E                     u11414:
 14872  00464E  2F6E               	decfsz	??_enc424j600_clearInterruptFlag& (0+255),f,b
 14873  004650  D7FC               	goto	u11415
 14874  004652  0100               	movlb	0	; () banked
 14875  004654  516F               	movf	(??_enc424j600_clearInterruptFlag+1)& (0+255),w,b
 14876  004656  0AFF               	xorlw	255
 14877  004658  1771               	andwf	enc424j600_clearInterruptFlag@temp& (0+255),f,b
 14878                           
 14879                           ;ENC424J600.c: 713: enc424j600_writeControlRegisterUnbanked(0x1D + 0x00, &temp);
 14880  00465A  0E71               	movlw	low enc424j600_clearInterruptFlag@temp
 14881  00465C  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 14882  00465E  0E00               	movlw	high enc424j600_clearInterruptFlag@temp
 14883  004660  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 14884  004662  0E1D               	movlw	29
 14885  004664  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 14886  004668  0012               	return	
 14887  00466A                     __end_of_enc424j600_clearInterruptFlag:
 14888                           	opt stack 0
 14889                           tblptru	equ	0xFF8
 14890                           tblptrh	equ	0xFF7
 14891                           tblptrl	equ	0xFF6
 14892                           tablat	equ	0xFF5
 14893                           prodh	equ	0xFF4
 14894                           prodl	equ	0xFF3
 14895                           intcon	equ	0xFF2
 14896                           intcon3	equ	0xFF0
 14897                           indf0	equ	0xFEF
 14898                           postinc0	equ	0xFEE
 14899                           plusw0	equ	0xFEB
 14900                           fsr0h	equ	0xFEA
 14901                           fsr0l	equ	0xFE9
 14902                           wreg	equ	0xFE8
 14903                           indf1	equ	0xFE7
 14904                           postinc1	equ	0xFE6
 14905                           postdec1	equ	0xFE5
 14906                           plusw1	equ	0xFE3
 14907                           fsr1h	equ	0xFE2
 14908                           fsr1l	equ	0xFE1
 14909                           indf2	equ	0xFDF
 14910                           postinc2	equ	0xFDE
 14911                           postdec2	equ	0xFDD
 14912                           plusw2	equ	0xFDB
 14913                           fsr2h	equ	0xFDA
 14914                           fsr2l	equ	0xFD9
 14915                           status	equ	0xFD8
 14916                           
 14917 ;; *************** function _arp_init *****************
 14918 ;; Defined at:
 14919 ;;		line 502 in file "src/stack/protocols/arp.c"
 14920 ;; Parameters:    Size  Location     Type
 14921 ;;		None
 14922 ;; Auto vars:     Size  Location     Type
 14923 ;;  i               1   92[BANK0 ] unsigned char 
 14924 ;;  mac             6   82[BANK0 ] struct macaddress
 14925 ;;  ip              4   88[BANK0 ] struct ipv4_address
 14926 ;; Return value:  Size  Location     Type
 14927 ;;                  1    wreg      void 
 14928 ;; Registers used:
 14929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14930 ;; Tracked objects:
 14931 ;;		On entry : 0/0
 14932 ;;		On exit  : 0/0
 14933 ;;		Unchanged: 0/0
 14934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14935 ;;      Params:         0       0       0       0       0       0       0       0       0
 14936 ;;      Locals:         0      11       0       0       0       0       0       0       0
 14937 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14938 ;;      Totals:         0      11       0       0       0       0       0       0       0
 14939 ;;Total ram usage:       11 bytes
 14940 ;; Hardware stack levels used:    1
 14941 ;; Hardware stack levels required when called:    7
 14942 ;; This function calls:
 14943 ;;		_UARTTransmitText
 14944 ;;		_arp_setNewEntry
 14945 ;;		_ipv4_setToAllZero
 14946 ;;		_mac_setAllZero
 14947 ;; This function is called by:
 14948 ;;		_handleStackBackgroundTasks
 14949 ;;		_stack_init
 14950 ;; This function uses a non-reentrant model
 14951 ;;
 14952                           
 14953                           	psect	text54
 14954  0049D2                     __ptext54:
 14955                           	opt stack 0
 14956  0049D2                     _arp_init:
 14957                           	opt stack 22
 14958                           
 14959                           ;arp.c: 503: macaddress_t mac;
 14960                           ;arp.c: 504: ipv4_address_t ip;
 14961                           ;arp.c: 505: mac_setAllZero(&mac);
 14962                           
 14963                           ;incstack = 0
 14964  0049D2  0EB2               	movlw	low arp_init@mac
 14965  0049D4  0100               	movlb	0	; () banked
 14966  0049D6  6F60               	movwf	mac_setAllZero@mac& (0+255),b
 14967  0049D8  0E00               	movlw	high arp_init@mac
 14968  0049DA  6F61               	movwf	(mac_setAllZero@mac+1)& (0+255),b
 14969  0049DC  EC06  F02B         	call	_mac_setAllZero	;wreg free
 14970                           
 14971                           ;arp.c: 506: ipv4_setToAllZero(&ip);
 14972  0049E0  0EB8               	movlw	low arp_init@ip
 14973  0049E2  0100               	movlb	0	; () banked
 14974  0049E4  6F60               	movwf	ipv4_setToAllZero@ip& (0+255),b
 14975  0049E6  0E00               	movlw	high arp_init@ip
 14976  0049E8  6F61               	movwf	(ipv4_setToAllZero@ip+1)& (0+255),b
 14977  0049EA  ECF3  F02A         	call	_ipv4_setToAllZero	;wreg free
 14978                           
 14979                           ;arp.c: 508: for (uint8_t i = 0; i < 8u; i++)
 14980  0049EE  0E00               	movlw	0
 14981  0049F0  0100               	movlb	0	; () banked
 14982  0049F2  6FBC               	movwf	arp_init@i& (0+255),b
 14983  0049F4                     l10371:
 14984                           
 14985                           ; BSR set to: 0
 14986  0049F4  0E07               	movlw	7
 14987  0049F6  65BC               	cpfsgt	arp_init@i& (0+255),b
 14988  0049F8  D001               	goto	l1080
 14989  0049FA  D01E               	goto	u12260
 14990  0049FC                     l1080:
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;arp.c: 509: arp_setNewEntry(mac, ip, 0xffffffff);
 14994                           
 14995                           ; BSR set to: 0
 14996  0049FC  EE20  F0B2         	lfsr	2,arp_init@mac
 14997  004A00  EE00  F09A         	lfsr	0,arp_setNewEntry@mac
 14998  004A04  0E05               	movlw	5
 14999  004A06                     u12251:
 15000  004A06  CFDB FFEB          	movff	plusw2,plusw0
 15001  004A0A  06E8               	decf	wreg,f,c
 15002  004A0C  E2FC               	bc	u12251
 15003  004A0E  C0B8  F0A0         	movff	arp_init@ip,arp_setNewEntry@ip
 15004  004A12  C0B9  F0A1         	movff	arp_init@ip+1,arp_setNewEntry@ip+1
 15005  004A16  C0BA  F0A2         	movff	arp_init@ip+2,arp_setNewEntry@ip+2
 15006  004A1A  C0BB  F0A3         	movff	arp_init@ip+3,arp_setNewEntry@ip+3
 15007  004A1E  0EFF               	movlw	255
 15008  004A20  6FA4               	movwf	arp_setNewEntry@timestamp& (0+255),b
 15009  004A22  0EFF               	movlw	255
 15010  004A24  6FA5               	movwf	(arp_setNewEntry@timestamp+1)& (0+255),b
 15011  004A26  0EFF               	movlw	255
 15012  004A28  6FA6               	movwf	(arp_setNewEntry@timestamp+2)& (0+255),b
 15013  004A2A  0EFF               	movlw	255
 15014  004A2C  6FA7               	movwf	(arp_setNewEntry@timestamp+3)& (0+255),b
 15015  004A2E  EC61  F017         	call	_arp_setNewEntry	;wreg free
 15016  004A32  0100               	movlb	0	; () banked
 15017  004A34  2BBC               	incf	arp_init@i& (0+255),f,b
 15018  004A36  D7DE               	goto	l10371
 15019  004A38                     u12260:
 15020                           
 15021                           ; BSR set to: 0
 15022                           ;arp.c: 512: UARTTransmitText("[ARP]: Table was reset successfully.\n\r");
 15023                           
 15024                           ; BSR set to: 0
 15025  004A38  0E8C               	movlw	low STR_95
 15026  004A3A  6F98               	movwf	UARTTransmitText@str& (0+255),b
 15027  004A3C  0E7B               	movlw	high STR_95
 15028  004A3E  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 15029  004A40  EC27  F027         	call	_UARTTransmitText	;wreg free
 15030  004A44  0012               	return		;funcret
 15031  004A46                     __end_of_arp_init:
 15032                           	opt stack 0
 15033                           tblptru	equ	0xFF8
 15034                           tblptrh	equ	0xFF7
 15035                           tblptrl	equ	0xFF6
 15036                           tablat	equ	0xFF5
 15037                           prodh	equ	0xFF4
 15038                           prodl	equ	0xFF3
 15039                           intcon	equ	0xFF2
 15040                           intcon3	equ	0xFF0
 15041                           indf0	equ	0xFEF
 15042                           postinc0	equ	0xFEE
 15043                           plusw0	equ	0xFEB
 15044                           fsr0h	equ	0xFEA
 15045                           fsr0l	equ	0xFE9
 15046                           wreg	equ	0xFE8
 15047                           indf1	equ	0xFE7
 15048                           postinc1	equ	0xFE6
 15049                           postdec1	equ	0xFE5
 15050                           plusw1	equ	0xFE3
 15051                           fsr1h	equ	0xFE2
 15052                           fsr1l	equ	0xFE1
 15053                           indf2	equ	0xFDF
 15054                           postinc2	equ	0xFDE
 15055                           postdec2	equ	0xFDD
 15056                           plusw2	equ	0xFDB
 15057                           fsr2h	equ	0xFDA
 15058                           fsr2l	equ	0xFD9
 15059                           status	equ	0xFD8
 15060                           
 15061 ;; *************** function _arp_setNewEntry *****************
 15062 ;; Defined at:
 15063 ;;		line 477 in file "src/stack/protocols/arp.c"
 15064 ;; Parameters:    Size  Location     Type
 15065 ;;  mac             6   58[BANK0 ] struct macaddress
 15066 ;;  ip              4   64[BANK0 ] struct ipv4_address
 15067 ;;  timestamp       4   68[BANK0 ] unsigned long 
 15068 ;; Auto vars:     Size  Location     Type
 15069 ;;  i               1   81[BANK0 ] unsigned char 
 15070 ;;  maxSeconds      4   76[BANK0 ] unsigned long 
 15071 ;;  oldestIndex     1   80[BANK0 ] unsigned char 
 15072 ;; Return value:  Size  Location     Type
 15073 ;;                  1    wreg      void 
 15074 ;; Registers used:
 15075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15076 ;; Tracked objects:
 15077 ;;		On entry : 0/0
 15078 ;;		On exit  : 0/0
 15079 ;;		Unchanged: 0/0
 15080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15081 ;;      Params:         0      14       0       0       0       0       0       0       0
 15082 ;;      Locals:         0       6       0       0       0       0       0       0       0
 15083 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15084 ;;      Totals:         0      24       0       0       0       0       0       0       0
 15085 ;;Total ram usage:       24 bytes
 15086 ;; Hardware stack levels used:    1
 15087 ;; Hardware stack levels required when called:    6
 15088 ;; This function calls:
 15089 ;;		_UARTTransmitText
 15090 ;;		_ipAdressToString
 15091 ;;		_ipv4_isAllZero
 15092 ;;		_macToString
 15093 ;;		_mac_isAllZero
 15094 ;; This function is called by:
 15095 ;;		_arp_handleNewPacket
 15096 ;;		_arp_init
 15097 ;; This function uses a non-reentrant model
 15098 ;;
 15099                           
 15100                           	psect	text55
 15101  002EC2                     __ptext55:
 15102                           	opt stack 0
 15103  002EC2                     _arp_setNewEntry:
 15104                           	opt stack 22
 15105                           
 15106                           ;arp.c: 478: time_t maxSeconds = 0;
 15107                           
 15108                           ;incstack = 0
 15109  002EC2  0E00               	movlw	0
 15110  002EC4  0100               	movlb	0	; () banked
 15111  002EC6  6FAC               	movwf	arp_setNewEntry@maxSeconds& (0+255),b
 15112  002EC8  0E00               	movlw	0
 15113  002ECA  6FAD               	movwf	(arp_setNewEntry@maxSeconds+1)& (0+255),b
 15114  002ECC  0E00               	movlw	0
 15115  002ECE  6FAE               	movwf	(arp_setNewEntry@maxSeconds+2)& (0+255),b
 15116  002ED0  0E00               	movlw	0
 15117  002ED2  6FAF               	movwf	(arp_setNewEntry@maxSeconds+3)& (0+255),b
 15118                           
 15119                           ;arp.c: 479: uint8_t oldestIndex = 0;
 15120  002ED4  0E00               	movlw	0
 15121  002ED6  6FB0               	movwf	arp_setNewEntry@oldestIndex& (0+255),b
 15122                           
 15123                           ;arp.c: 481: for (uint8_t i = 0; i < 8u; i++) {
 15124  002ED8  0E00               	movlw	0
 15125  002EDA  6FB1               	movwf	arp_setNewEntry@i& (0+255),b
 15126  002EDC                     l9537:
 15127                           
 15128                           ; BSR set to: 0
 15129  002EDC  0E07               	movlw	7
 15130  002EDE  65B1               	cpfsgt	arp_setNewEntry@i& (0+255),b
 15131  002EE0  D001               	goto	l1071
 15132  002EE2  D02E               	goto	u11140
 15133  002EE4                     l1071:
 15134                           
 15135                           ; BSR set to: 0
 15136                           ;arp.c: 482: if (arp_table[i].timeCreated > maxSeconds) {
 15137                           
 15138                           ; BSR set to: 0
 15139  002EE4  51B1               	movf	arp_setNewEntry@i& (0+255),w,b
 15140  002EE6  0D0E               	mullw	14
 15141  002EE8  0E0A               	movlw	10
 15142  002EEA  26F3               	addwf	prodl,f,c
 15143  002EEC  0E00               	movlw	0
 15144  002EEE  22F4               	addwfc	prodh,f,c
 15145  002EF0  0E00               	movlw	low _arp_table
 15146  002EF2  24F3               	addwf	prodl,w,c
 15147  002EF4  6ED9               	movwf	fsr2l,c
 15148  002EF6  0E03               	movlw	high _arp_table
 15149  002EF8  20F4               	addwfc	prodh,w,c
 15150  002EFA  6EDA               	movwf	fsr2h,c
 15151  002EFC  50DE               	movf	postinc2,w,c
 15152  002EFE  5DAC               	subwf	arp_setNewEntry@maxSeconds& (0+255),w,b
 15153  002F00  50DE               	movf	postinc2,w,c
 15154  002F02  59AD               	subwfb	(arp_setNewEntry@maxSeconds+1)& (0+255),w,b
 15155  002F04  50DE               	movf	postinc2,w,c
 15156  002F06  59AE               	subwfb	(arp_setNewEntry@maxSeconds+2)& (0+255),w,b
 15157  002F08  50DE               	movf	postinc2,w,c
 15158  002F0A  59AF               	subwfb	(arp_setNewEntry@maxSeconds+3)& (0+255),w,b
 15159  002F0C  B0D8               	btfsc	status,0,c
 15160  002F0E  D016               	goto	l1073
 15161                           
 15162                           ; BSR set to: 0
 15163                           ;arp.c: 483: maxSeconds = arp_table[i].timeCreated;
 15164  002F10  51B1               	movf	arp_setNewEntry@i& (0+255),w,b
 15165  002F12  0D0E               	mullw	14
 15166  002F14  0E0A               	movlw	10
 15167  002F16  26F3               	addwf	prodl,f,c
 15168  002F18  0E00               	movlw	0
 15169  002F1A  22F4               	addwfc	prodh,f,c
 15170  002F1C  0E00               	movlw	low _arp_table
 15171  002F1E  24F3               	addwf	prodl,w,c
 15172  002F20  6ED9               	movwf	fsr2l,c
 15173  002F22  0E03               	movlw	high _arp_table
 15174  002F24  20F4               	addwfc	prodh,w,c
 15175  002F26  6EDA               	movwf	fsr2h,c
 15176  002F28  CFDE F0AC          	movff	postinc2,arp_setNewEntry@maxSeconds
 15177  002F2C  CFDE F0AD          	movff	postinc2,arp_setNewEntry@maxSeconds+1
 15178  002F30  CFDE F0AE          	movff	postinc2,arp_setNewEntry@maxSeconds+2
 15179  002F34  CFDE F0AF          	movff	postinc2,arp_setNewEntry@maxSeconds+3
 15180                           
 15181                           ; BSR set to: 0
 15182                           ;arp.c: 484: oldestIndex = i;
 15183  002F38  C0B1  F0B0         	movff	arp_setNewEntry@i,arp_setNewEntry@oldestIndex
 15184  002F3C                     l1073:
 15185                           
 15186                           ; BSR set to: 0
 15187                           
 15188                           ; BSR set to: 0
 15189  002F3C  2BB1               	incf	arp_setNewEntry@i& (0+255),f,b
 15190  002F3E  D7CE               	goto	l9537
 15191  002F40                     u11140:
 15192                           
 15193                           ; BSR set to: 0
 15194                           ;arp.c: 485: }
 15195                           ;arp.c: 486: }
 15196                           ;arp.c: 488: arp_table[oldestIndex].ip = ip;
 15197                           
 15198                           ; BSR set to: 0
 15199  002F40  51B0               	movf	arp_setNewEntry@oldestIndex& (0+255),w,b
 15200  002F42  0D0E               	mullw	14
 15201  002F44  0E00               	movlw	low _arp_table
 15202  002F46  24F3               	addwf	prodl,w,c
 15203  002F48  6ED9               	movwf	fsr2l,c
 15204  002F4A  0E03               	movlw	high _arp_table
 15205  002F4C  20F4               	addwfc	prodh,w,c
 15206  002F4E  6EDA               	movwf	fsr2h,c
 15207  002F50  C0A0  FFDE         	movff	arp_setNewEntry@ip,postinc2
 15208  002F54  C0A1  FFDE         	movff	arp_setNewEntry@ip+1,postinc2
 15209  002F58  C0A2  FFDE         	movff	arp_setNewEntry@ip+2,postinc2
 15210  002F5C  C0A3  FFDE         	movff	arp_setNewEntry@ip+3,postinc2
 15211                           
 15212                           ; BSR set to: 0
 15213                           ;arp.c: 489: arp_table[oldestIndex].mac = mac;
 15214  002F60  EE20  F09A         	lfsr	2,arp_setNewEntry@mac
 15215  002F64  51B0               	movf	arp_setNewEntry@oldestIndex& (0+255),w,b
 15216  002F66  0D0E               	mullw	14
 15217  002F68  0E04               	movlw	4
 15218  002F6A  26F3               	addwf	prodl,f,c
 15219  002F6C  0E00               	movlw	0
 15220  002F6E  22F4               	addwfc	prodh,f,c
 15221  002F70  0E00               	movlw	low _arp_table
 15222  002F72  24F3               	addwf	prodl,w,c
 15223  002F74  6EE1               	movwf	fsr1l,c
 15224  002F76  0E03               	movlw	high _arp_table
 15225  002F78  20F4               	addwfc	prodh,w,c
 15226  002F7A  6EE2               	movwf	fsr1h,c
 15227  002F7C  0E05               	movlw	5
 15228  002F7E                     u11151:
 15229  002F7E  CFDB FFE3          	movff	plusw2,plusw1
 15230  002F82  06E8               	decf	wreg,f,c
 15231  002F84  E2FC               	bc	u11151
 15232                           
 15233                           ; BSR set to: 0
 15234                           ;arp.c: 490: arp_table[oldestIndex].timeCreated = timestamp;
 15235  002F86  51B0               	movf	arp_setNewEntry@oldestIndex& (0+255),w,b
 15236  002F88  0D0E               	mullw	14
 15237  002F8A  0E0A               	movlw	10
 15238  002F8C  26F3               	addwf	prodl,f,c
 15239  002F8E  0E00               	movlw	0
 15240  002F90  22F4               	addwfc	prodh,f,c
 15241  002F92  0E00               	movlw	low _arp_table
 15242  002F94  24F3               	addwf	prodl,w,c
 15243  002F96  6ED9               	movwf	fsr2l,c
 15244  002F98  0E03               	movlw	high _arp_table
 15245  002F9A  20F4               	addwfc	prodh,w,c
 15246  002F9C  6EDA               	movwf	fsr2h,c
 15247  002F9E  C0A4  FFDE         	movff	arp_setNewEntry@timestamp,postinc2
 15248  002FA2  C0A5  FFDE         	movff	arp_setNewEntry@timestamp+1,postinc2
 15249  002FA6  C0A6  FFDE         	movff	arp_setNewEntry@timestamp+2,postinc2
 15250  002FAA  C0A7  FFDE         	movff	arp_setNewEntry@timestamp+3,postinc2
 15251                           
 15252                           ; BSR set to: 0
 15253                           ;arp.c: 492: if (!((mac_isAllZero(&mac)) && ipv4_isAllZero(&ip))) {
 15254  002FAE  0E9A               	movlw	low arp_setNewEntry@mac
 15255  002FB0  6F60               	movwf	mac_isAllZero@mac& (0+255),b
 15256  002FB2  0E00               	movlw	high arp_setNewEntry@mac
 15257  002FB4  6F61               	movwf	(mac_isAllZero@mac+1)& (0+255),b
 15258  002FB6  ECF1  F029         	call	_mac_isAllZero	;wreg free
 15259  002FBA  0100               	movlb	0	; () banked
 15260  002FBC  A0D8               	btfss	status,0,c
 15261  002FBE  D009               	goto	u11170
 15262                           
 15263                           ; BSR set to: 0
 15264  002FC0  0EA0               	movlw	low arp_setNewEntry@ip
 15265  002FC2  6F60               	movwf	ipv4_isAllZero@ip& (0+255),b
 15266  002FC4  0E00               	movlw	high arp_setNewEntry@ip
 15267  002FC6  6F61               	movwf	(ipv4_isAllZero@ip+1)& (0+255),b
 15268  002FC8  EC09  F02A         	call	_ipv4_isAllZero	;wreg free
 15269  002FCC  0100               	movlb	0	; () banked
 15270  002FCE  B0D8               	btfsc	status,0,c
 15271  002FD0  0012               	return	
 15272  002FD2                     u11170:
 15273                           
 15274                           ; BSR set to: 0
 15275                           ;arp.c: 493: UARTTransmitText("[ARP]: New entry created for ");
 15276                           
 15277                           ; BSR set to: 0
 15278  002FD2  0E0F               	movlw	low STR_92
 15279  002FD4  6F98               	movwf	UARTTransmitText@str& (0+255),b
 15280  002FD6  0E7D               	movlw	high STR_92
 15281  002FD8  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 15282  002FDA  EC27  F027         	call	_UARTTransmitText	;wreg free
 15283                           
 15284                           ;arp.c: 494: UARTTransmitText(ipAdressToString(ip));
 15285  002FDE  C0A0  F073         	movff	arp_setNewEntry@ip,ipAdressToString@ip
 15286  002FE2  C0A1  F074         	movff	arp_setNewEntry@ip+1,ipAdressToString@ip+1
 15287  002FE6  C0A2  F075         	movff	arp_setNewEntry@ip+2,ipAdressToString@ip+2
 15288  002FEA  C0A3  F076         	movff	arp_setNewEntry@ip+3,ipAdressToString@ip+3
 15289  002FEE  ECF3  F013         	call	_ipAdressToString	;wreg free
 15290  002FF2  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
 15291  002FF6  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
 15292  002FFA  EC27  F027         	call	_UARTTransmitText	;wreg free
 15293                           
 15294                           ;arp.c: 495: UARTTransmitText(" (");
 15295  002FFE  0E0C               	movlw	low (STR_42+29)
 15296  003000  0100               	movlb	0	; () banked
 15297  003002  6F98               	movwf	UARTTransmitText@str& (0+255),b
 15298  003004  0E7D               	movlw	high (STR_42+29)
 15299  003006  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 15300  003008  EC27  F027         	call	_UARTTransmitText	;wreg free
 15301                           
 15302                           ;arp.c: 496: UARTTransmitText(macToString(mac));
 15303  00300C  EE20  F09A         	lfsr	2,arp_setNewEntry@mac
 15304  003010  EE00  F07A         	lfsr	0,macToString@addr
 15305  003014  0E05               	movlw	5
 15306  003016                     u11181:
 15307  003016  CFDB FFEB          	movff	plusw2,plusw0
 15308  00301A  06E8               	decf	wreg,f,c
 15309  00301C  E2FC               	bc	u11181
 15310  00301E  ECBB  F01D         	call	_macToString	;wreg free
 15311  003022  C07A  F098         	movff	?_macToString,UARTTransmitText@str
 15312  003026  C07B  F099         	movff	?_macToString+1,UARTTransmitText@str+1
 15313  00302A  EC27  F027         	call	_UARTTransmitText	;wreg free
 15314                           
 15315                           ;arp.c: 497: UARTTransmitText(") ");
 15316  00302E  0EEE               	movlw	low STR_94
 15317  003030  0100               	movlb	0	; () banked
 15318  003032  6F98               	movwf	UARTTransmitText@str& (0+255),b
 15319  003034  0E7F               	movlw	high STR_94
 15320  003036  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 15321  003038  EC27  F027         	call	_UARTTransmitText	;wreg free
 15322  00303C  0012               	return	
 15323  00303E                     __end_of_arp_setNewEntry:
 15324                           	opt stack 0
 15325                           tblptru	equ	0xFF8
 15326                           tblptrh	equ	0xFF7
 15327                           tblptrl	equ	0xFF6
 15328                           tablat	equ	0xFF5
 15329                           prodh	equ	0xFF4
 15330                           prodl	equ	0xFF3
 15331                           intcon	equ	0xFF2
 15332                           intcon3	equ	0xFF0
 15333                           indf0	equ	0xFEF
 15334                           postinc0	equ	0xFEE
 15335                           plusw0	equ	0xFEB
 15336                           fsr0h	equ	0xFEA
 15337                           fsr0l	equ	0xFE9
 15338                           wreg	equ	0xFE8
 15339                           indf1	equ	0xFE7
 15340                           postinc1	equ	0xFE6
 15341                           postdec1	equ	0xFE5
 15342                           plusw1	equ	0xFE3
 15343                           fsr1h	equ	0xFE2
 15344                           fsr1l	equ	0xFE1
 15345                           indf2	equ	0xFDF
 15346                           postinc2	equ	0xFDE
 15347                           postdec2	equ	0xFDD
 15348                           plusw2	equ	0xFDB
 15349                           fsr2h	equ	0xFDA
 15350                           fsr2l	equ	0xFD9
 15351                           status	equ	0xFD8
 15352                           
 15353 ;; *************** function _mac_isAllZero *****************
 15354 ;; Defined at:
 15355 ;;		line 31 in file "src/eth/mac.c"
 15356 ;; Parameters:    Size  Location     Type
 15357 ;;  mac             2    0[BANK0 ] PTR struct macaddress
 15358 ;;		 -> arp_setNewEntry@mac(6), arp_parseFromRXBuffer@arp(32), 
 15359 ;; Auto vars:     Size  Location     Type
 15360 ;;  i               1    2[BANK0 ] unsigned char 
 15361 ;; Return value:  Size  Location     Type
 15362 ;;		None               void
 15363 ;; Registers used:
 15364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15365 ;; Tracked objects:
 15366 ;;		On entry : 0/0
 15367 ;;		On exit  : 0/0
 15368 ;;		Unchanged: 0/0
 15369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15370 ;;      Params:         0       2       0       0       0       0       0       0       0
 15371 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15372 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15373 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15374 ;;Total ram usage:        3 bytes
 15375 ;; Hardware stack levels used:    1
 15376 ;; Hardware stack levels required when called:    4
 15377 ;; This function calls:
 15378 ;;		Nothing
 15379 ;; This function is called by:
 15380 ;;		_arp_parseFromRXBuffer
 15381 ;;		_arp_setNewEntry
 15382 ;; This function uses a non-reentrant model
 15383 ;;
 15384                           
 15385                           	psect	text56
 15386  0053E2                     __ptext56:
 15387                           	opt stack 0
 15388  0053E2                     _mac_isAllZero:
 15389                           	opt stack 23
 15390                           
 15391                           ;mac.c: 32: for (uint8_t i = 0; i < 6; i++) {
 15392                           
 15393                           ;incstack = 0
 15394  0053E2  0E00               	movlw	0
 15395  0053E4  0100               	movlb	0	; () banked
 15396  0053E6  6F62               	movwf	mac_isAllZero@i& (0+255),b
 15397  0053E8                     l9077:
 15398                           
 15399                           ; BSR set to: 0
 15400  0053E8  0E05               	movlw	5
 15401  0053EA  6562               	cpfsgt	mac_isAllZero@i& (0+255),b
 15402  0053EC  D001               	goto	l384
 15403  0053EE  D00F               	goto	u10010
 15404  0053F0                     l384:
 15405                           
 15406                           ; BSR set to: 0
 15407                           ;mac.c: 33: if (mac->address[i] != 0x00)
 15408                           
 15409                           ; BSR set to: 0
 15410  0053F0  5162               	movf	mac_isAllZero@i& (0+255),w,b
 15411  0053F2  0D01               	mullw	1
 15412  0053F4  50F3               	movf	prodl,w,c
 15413  0053F6  2560               	addwf	mac_isAllZero@mac& (0+255),w,b
 15414  0053F8  6ED9               	movwf	fsr2l,c
 15415  0053FA  50F4               	movf	prodh,w,c
 15416  0053FC  2161               	addwfc	(mac_isAllZero@mac+1)& (0+255),w,b
 15417  0053FE  6EDA               	movwf	fsr2h,c
 15418  005400  50DF               	movf	indf2,w,c
 15419  005402  B4D8               	btfsc	status,2,c
 15420  005404  D002               	goto	l386
 15421                           
 15422                           ; BSR set to: 0
 15423                           ;mac.c: 34: return 0;
 15424  005406  90D8               	bcf	status,0,c
 15425                           
 15426                           ; BSR set to: 0
 15427  005408  0012               	return	
 15428  00540A                     l386:
 15429                           
 15430                           ; BSR set to: 0
 15431                           
 15432                           ; BSR set to: 0
 15433  00540A  2B62               	incf	mac_isAllZero@i& (0+255),f,b
 15434  00540C  D7ED               	goto	l9077
 15435  00540E                     u10010:
 15436                           
 15437                           ; BSR set to: 0
 15438                           ;mac.c: 35: }
 15439                           ;mac.c: 36: return 1;
 15440                           
 15441                           ; BSR set to: 0
 15442  00540E  80D8               	bsf	status,0,c
 15443  005410  0012               	return	
 15444  005412                     __end_of_mac_isAllZero:
 15445                           	opt stack 0
 15446                           tblptru	equ	0xFF8
 15447                           tblptrh	equ	0xFF7
 15448                           tblptrl	equ	0xFF6
 15449                           tablat	equ	0xFF5
 15450                           prodh	equ	0xFF4
 15451                           prodl	equ	0xFF3
 15452                           intcon	equ	0xFF2
 15453                           intcon3	equ	0xFF0
 15454                           indf0	equ	0xFEF
 15455                           postinc0	equ	0xFEE
 15456                           plusw0	equ	0xFEB
 15457                           fsr0h	equ	0xFEA
 15458                           fsr0l	equ	0xFE9
 15459                           wreg	equ	0xFE8
 15460                           indf1	equ	0xFE7
 15461                           postinc1	equ	0xFE6
 15462                           postdec1	equ	0xFE5
 15463                           plusw1	equ	0xFE3
 15464                           fsr1h	equ	0xFE2
 15465                           fsr1l	equ	0xFE1
 15466                           indf2	equ	0xFDF
 15467                           postinc2	equ	0xFDE
 15468                           postdec2	equ	0xFDD
 15469                           plusw2	equ	0xFDB
 15470                           fsr2h	equ	0xFDA
 15471                           fsr2l	equ	0xFD9
 15472                           status	equ	0xFD8
 15473                           
 15474 ;; *************** function _macToString *****************
 15475 ;; Defined at:
 15476 ;;		line 107 in file "src/system/uart.c"
 15477 ;; Parameters:    Size  Location     Type
 15478 ;;  addr            6   26[BANK0 ] struct macaddress
 15479 ;; Auto vars:     Size  Location     Type
 15480 ;;  i               2   53[BANK0 ] int 
 15481 ;;  address        18   33[BANK0 ] unsigned char [18]
 15482 ;;  j               1   55[BANK0 ] unsigned char 
 15483 ;;  secondDigit     1   52[BANK0 ] unsigned char 
 15484 ;;  firstDigit      1   51[BANK0 ] unsigned char 
 15485 ;; Return value:  Size  Location     Type
 15486 ;;                  2   26[BANK0 ] PTR unsigned char 
 15487 ;; Registers used:
 15488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15489 ;; Tracked objects:
 15490 ;;		On entry : 0/0
 15491 ;;		On exit  : 0/0
 15492 ;;		Unchanged: 0/0
 15493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15494 ;;      Params:         0       6       0       0       0       0       0       0       0
 15495 ;;      Locals:         0      23       0       0       0       0       0       0       0
 15496 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15497 ;;      Totals:         0      30       0       0       0       0       0       0       0
 15498 ;;Total ram usage:       30 bytes
 15499 ;; Hardware stack levels used:    1
 15500 ;; Hardware stack levels required when called:    4
 15501 ;; This function calls:
 15502 ;;		Nothing
 15503 ;; This function is called by:
 15504 ;;		_ethernet_rxGetNewFrame
 15505 ;;		_main
 15506 ;;		_arp_handleNewPacket
 15507 ;;		_arp_sendReply
 15508 ;;		_arp_setNewEntry
 15509 ;;		_ipv4_sendFrame
 15510 ;;		_arpEntryToString
 15511 ;; This function uses a non-reentrant model
 15512 ;;
 15513                           
 15514                           	psect	text57
 15515  003B76                     __ptext57:
 15516                           	opt stack 0
 15517  003B76                     _macToString:
 15518                           	opt stack 23
 15519                           
 15520                           ;uart.c: 108: char address[] = "??:??:??:??:??:??";
 15521                           
 15522                           ; BSR set to: 0
 15523                           ;incstack = 0
 15524  003B76  EE22  F0D2         	lfsr	2,macToString@F5948
 15525  003B7A  EE10  F081         	lfsr	1,macToString@address
 15526  003B7E  0E11               	movlw	17
 15527  003B80                     u9931:
 15528  003B80  CFDB FFE3          	movff	plusw2,plusw1
 15529  003B84  06E8               	decf	wreg,f,c
 15530  003B86  E2FC               	bc	u9931
 15531                           
 15532                           ;uart.c: 109: uint8_t j = 0;
 15533  003B88  0E00               	movlw	0
 15534  003B8A  0100               	movlb	0	; () banked
 15535  003B8C  6F97               	movwf	macToString@j& (0+255),b
 15536                           
 15537                           ; BSR set to: 0
 15538                           ;uart.c: 110: uint8_t firstDigit;
 15539                           ;uart.c: 111: uint8_t secondDigit;
 15540                           ;uart.c: 113: for (int i = 0; i < 6; i++) {
 15541  003B8E  0E00               	movlw	0
 15542  003B90  6F96               	movwf	(macToString@i+1)& (0+255),b
 15543  003B92  0E00               	movlw	0
 15544  003B94  6F95               	movwf	macToString@i& (0+255),b
 15545                           
 15546                           ; BSR set to: 0
 15547  003B96  BF96               	btfsc	(macToString@i+1)& (0+255),7,b
 15548  003B98  D006               	goto	l824
 15549  003B9A  5196               	movf	(macToString@i+1)& (0+255),w,b
 15550  003B9C  E16B               	bnz	l825
 15551  003B9E  0E06               	movlw	6
 15552  003BA0  5D95               	subwf	macToString@i& (0+255),w,b
 15553  003BA2  B0D8               	btfsc	status,0,c
 15554  003BA4  D067               	goto	u9980
 15555  003BA6                     l824:
 15556                           
 15557                           ; BSR set to: 0
 15558                           ;uart.c: 114: firstDigit = ((addr.address[i] & 0xF0) >> 4)&0x0F;
 15559                           
 15560                           ; BSR set to: 0
 15561  003BA6  0E7A               	movlw	low macToString@addr
 15562  003BA8  2595               	addwf	macToString@i& (0+255),w,b
 15563  003BAA  6ED9               	movwf	fsr2l,c
 15564  003BAC  0E00               	movlw	high macToString@addr
 15565  003BAE  2196               	addwfc	(macToString@i+1)& (0+255),w,b
 15566  003BB0  6EDA               	movwf	fsr2h,c
 15567  003BB2  50DF               	movf	indf2,w,c
 15568  003BB4  6F80               	movwf	??_macToString& (0+255),b
 15569  003BB6  3980               	swapf	??_macToString& (0+255),w,b
 15570  003BB8  0B0F               	andlw	15
 15571  003BBA  0B0F               	andlw	15
 15572  003BBC  6F93               	movwf	macToString@firstDigit& (0+255),b
 15573                           
 15574                           ;uart.c: 115: secondDigit = addr.address[i] & 0x0F;
 15575  003BBE  0E7A               	movlw	low macToString@addr
 15576  003BC0  2595               	addwf	macToString@i& (0+255),w,b
 15577  003BC2  6ED9               	movwf	fsr2l,c
 15578  003BC4  0E00               	movlw	high macToString@addr
 15579  003BC6  2196               	addwfc	(macToString@i+1)& (0+255),w,b
 15580  003BC8  6EDA               	movwf	fsr2h,c
 15581  003BCA  50DF               	movf	indf2,w,c
 15582  003BCC  0B0F               	andlw	15
 15583  003BCE  6F94               	movwf	macToString@secondDigit& (0+255),b
 15584                           
 15585                           ; BSR set to: 0
 15586                           ;uart.c: 117: firstDigit += 0x30;
 15587  003BD0  0E30               	movlw	48
 15588  003BD2  2793               	addwf	macToString@firstDigit& (0+255),f,b
 15589                           
 15590                           ; BSR set to: 0
 15591                           ;uart.c: 118: secondDigit += 0x30;
 15592  003BD4  0E30               	movlw	48
 15593  003BD6  2794               	addwf	macToString@secondDigit& (0+255),f,b
 15594                           
 15595                           ; BSR set to: 0
 15596                           ;uart.c: 120: if (firstDigit > '9') {
 15597  003BD8  0E39               	movlw	57
 15598  003BDA  6593               	cpfsgt	macToString@firstDigit& (0+255),b
 15599  003BDC  D00C               	goto	l826
 15600                           
 15601                           ; BSR set to: 0
 15602                           ;uart.c: 121: address[j++] = firstDigit + 7;
 15603  003BDE  5197               	movf	macToString@j& (0+255),w,b
 15604  003BE0  0D01               	mullw	1
 15605  003BE2  0E81               	movlw	low macToString@address
 15606  003BE4  24F3               	addwf	prodl,w,c
 15607  003BE6  6ED9               	movwf	fsr2l,c
 15608  003BE8  0E00               	movlw	high macToString@address
 15609  003BEA  20F4               	addwfc	prodh,w,c
 15610  003BEC  6EDA               	movwf	fsr2h,c
 15611  003BEE  5193               	movf	macToString@firstDigit& (0+255),w,b
 15612  003BF0  0F07               	addlw	7
 15613  003BF2  6EDF               	movwf	indf2,c
 15614  003BF4  D00A               	goto	l9049
 15615  003BF6                     l826:
 15616                           
 15617                           ; BSR set to: 0
 15618                           ;uart.c: 123: address[j++] = firstDigit;
 15619                           
 15620                           ; BSR set to: 0
 15621  003BF6  5197               	movf	macToString@j& (0+255),w,b
 15622  003BF8  0D01               	mullw	1
 15623  003BFA  0E81               	movlw	low macToString@address
 15624  003BFC  24F3               	addwf	prodl,w,c
 15625  003BFE  6ED9               	movwf	fsr2l,c
 15626  003C00  0E00               	movlw	high macToString@address
 15627  003C02  20F4               	addwfc	prodh,w,c
 15628  003C04  6EDA               	movwf	fsr2h,c
 15629  003C06  C093  FFDF         	movff	macToString@firstDigit,indf2
 15630  003C0A                     l9049:
 15631                           
 15632                           ; BSR set to: 0
 15633  003C0A  2B97               	incf	macToString@j& (0+255),f,b
 15634                           
 15635                           ; BSR set to: 0
 15636                           ;uart.c: 124: }
 15637                           ;uart.c: 125: if (secondDigit > '9') {
 15638                           
 15639                           ; BSR set to: 0
 15640  003C0C  0E39               	movlw	57
 15641  003C0E  6594               	cpfsgt	macToString@secondDigit& (0+255),b
 15642  003C10  D00C               	goto	l828
 15643                           
 15644                           ; BSR set to: 0
 15645                           ;uart.c: 126: address[j++] = secondDigit + 7;
 15646  003C12  5197               	movf	macToString@j& (0+255),w,b
 15647  003C14  0D01               	mullw	1
 15648  003C16  0E81               	movlw	low macToString@address
 15649  003C18  24F3               	addwf	prodl,w,c
 15650  003C1A  6ED9               	movwf	fsr2l,c
 15651  003C1C  0E00               	movlw	high macToString@address
 15652  003C1E  20F4               	addwfc	prodh,w,c
 15653  003C20  6EDA               	movwf	fsr2h,c
 15654  003C22  5194               	movf	macToString@secondDigit& (0+255),w,b
 15655  003C24  0F07               	addlw	7
 15656  003C26  6EDF               	movwf	indf2,c
 15657  003C28  D00A               	goto	l9059
 15658  003C2A                     l828:
 15659                           
 15660                           ; BSR set to: 0
 15661                           ;uart.c: 128: address[j++] = secondDigit;
 15662                           
 15663                           ; BSR set to: 0
 15664  003C2A  5197               	movf	macToString@j& (0+255),w,b
 15665  003C2C  0D01               	mullw	1
 15666  003C2E  0E81               	movlw	low macToString@address
 15667  003C30  24F3               	addwf	prodl,w,c
 15668  003C32  6ED9               	movwf	fsr2l,c
 15669  003C34  0E00               	movlw	high macToString@address
 15670  003C36  20F4               	addwfc	prodh,w,c
 15671  003C38  6EDA               	movwf	fsr2h,c
 15672  003C3A  C094  FFDF         	movff	macToString@secondDigit,indf2
 15673  003C3E                     l9059:
 15674                           
 15675                           ; BSR set to: 0
 15676  003C3E  2B97               	incf	macToString@j& (0+255),f,b
 15677                           
 15678                           ; BSR set to: 0
 15679                           ;uart.c: 129: }
 15680                           ;uart.c: 131: if (i < 5) {
 15681                           
 15682                           ; BSR set to: 0
 15683  003C40  BF96               	btfsc	(macToString@i+1)& (0+255),7,b
 15684  003C42  D006               	goto	u9970
 15685  003C44  5196               	movf	(macToString@i+1)& (0+255),w,b
 15686  003C46  E10F               	bnz	l9067
 15687  003C48  0E05               	movlw	5
 15688  003C4A  5D95               	subwf	macToString@i& (0+255),w,b
 15689  003C4C  B0D8               	btfsc	status,0,c
 15690  003C4E  D00B               	goto	l830
 15691  003C50                     u9970:
 15692                           
 15693                           ; BSR set to: 0
 15694                           ;uart.c: 132: address[j++] = ':';
 15695  003C50  5197               	movf	macToString@j& (0+255),w,b
 15696  003C52  0D01               	mullw	1
 15697  003C54  0E81               	movlw	low macToString@address
 15698  003C56  24F3               	addwf	prodl,w,c
 15699  003C58  6ED9               	movwf	fsr2l,c
 15700  003C5A  0E00               	movlw	high macToString@address
 15701  003C5C  20F4               	addwfc	prodh,w,c
 15702  003C5E  6EDA               	movwf	fsr2h,c
 15703  003C60  0E3A               	movlw	58
 15704  003C62  6EDF               	movwf	indf2,c
 15705                           
 15706                           ; BSR set to: 0
 15707  003C64  2B97               	incf	macToString@j& (0+255),f,b
 15708  003C66                     l830:
 15709  003C66                     l9067:
 15710                           
 15711                           ; BSR set to: 0
 15712  003C66  4B95               	infsnz	macToString@i& (0+255),f,b
 15713  003C68  2B96               	incf	(macToString@i+1)& (0+255),f,b
 15714                           
 15715                           ; BSR set to: 0
 15716  003C6A  BF96               	btfsc	(macToString@i+1)& (0+255),7,b
 15717  003C6C  D79C               	goto	l824
 15718  003C6E  5196               	movf	(macToString@i+1)& (0+255),w,b
 15719  003C70  E101               	bnz	l9071
 15720  003C72  D795               	goto	L6
 15721  003C74                     u9980:
 15722  003C74                     l825:
 15723  003C74                     l9071:
 15724                           
 15725                           ; BSR set to: 0
 15726                           ;uart.c: 133: }
 15727                           ;uart.c: 134: }
 15728                           ;uart.c: 135: return address;
 15729  003C74  0E81               	movlw	low macToString@address
 15730  003C76  6F7A               	movwf	?_macToString& (0+255),b
 15731  003C78  0E00               	movlw	high macToString@address
 15732  003C7A  6F7B               	movwf	(?_macToString+1)& (0+255),b
 15733  003C7C  0012               	return	
 15734  003C7E                     __end_of_macToString:
 15735                           	opt stack 0
 15736                           tblptru	equ	0xFF8
 15737                           tblptrh	equ	0xFF7
 15738                           tblptrl	equ	0xFF6
 15739                           tablat	equ	0xFF5
 15740                           prodh	equ	0xFF4
 15741                           prodl	equ	0xFF3
 15742                           intcon	equ	0xFF2
 15743                           intcon3	equ	0xFF0
 15744                           indf0	equ	0xFEF
 15745                           postinc0	equ	0xFEE
 15746                           plusw0	equ	0xFEB
 15747                           fsr0h	equ	0xFEA
 15748                           fsr0l	equ	0xFE9
 15749                           wreg	equ	0xFE8
 15750                           indf1	equ	0xFE7
 15751                           postinc1	equ	0xFE6
 15752                           postdec1	equ	0xFE5
 15753                           plusw1	equ	0xFE3
 15754                           fsr1h	equ	0xFE2
 15755                           fsr1l	equ	0xFE1
 15756                           indf2	equ	0xFDF
 15757                           postinc2	equ	0xFDE
 15758                           postdec2	equ	0xFDD
 15759                           plusw2	equ	0xFDB
 15760                           fsr2h	equ	0xFDA
 15761                           fsr2l	equ	0xFD9
 15762                           status	equ	0xFD8
 15763                           
 15764 ;; *************** function _ipv4_isAllZero *****************
 15765 ;; Defined at:
 15766 ;;		line 312 in file "src/stack/protocols/ipv4.c"
 15767 ;; Parameters:    Size  Location     Type
 15768 ;;  ip              2    0[BANK0 ] PTR struct ipv4_address
 15769 ;;		 -> arp_setNewEntry@ip(4), arp_parseFromRXBuffer@arp(32), arp_handleNewPacket@arp(32), 
 15770 ;; Auto vars:     Size  Location     Type
 15771 ;;  i               1    2[BANK0 ] unsigned char 
 15772 ;; Return value:  Size  Location     Type
 15773 ;;		None               void
 15774 ;; Registers used:
 15775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15776 ;; Tracked objects:
 15777 ;;		On entry : 0/0
 15778 ;;		On exit  : 0/0
 15779 ;;		Unchanged: 0/0
 15780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15781 ;;      Params:         0       2       0       0       0       0       0       0       0
 15782 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15783 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15784 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15785 ;;Total ram usage:        3 bytes
 15786 ;; Hardware stack levels used:    1
 15787 ;; Hardware stack levels required when called:    4
 15788 ;; This function calls:
 15789 ;;		Nothing
 15790 ;; This function is called by:
 15791 ;;		_arp_handleNewPacket
 15792 ;;		_arp_parseFromRXBuffer
 15793 ;;		_arp_setNewEntry
 15794 ;; This function uses a non-reentrant model
 15795 ;;
 15796                           
 15797                           	psect	text58
 15798  005412                     __ptext58:
 15799                           	opt stack 0
 15800  005412                     _ipv4_isAllZero:
 15801                           	opt stack 23
 15802                           
 15803                           ;ipv4.c: 313: for (uint8_t i = 0; i < 4; i++) {
 15804                           
 15805                           ; BSR set to: 0
 15806                           ;incstack = 0
 15807  005412  0E00               	movlw	0
 15808  005414  0100               	movlb	0	; () banked
 15809  005416  6F62               	movwf	ipv4_isAllZero@i& (0+255),b
 15810  005418                     l9233:
 15811                           
 15812                           ; BSR set to: 0
 15813  005418  0E03               	movlw	3
 15814  00541A  6562               	cpfsgt	ipv4_isAllZero@i& (0+255),b
 15815  00541C  D001               	goto	l1207
 15816  00541E  D00F               	goto	u10220
 15817  005420                     l1207:
 15818                           
 15819                           ; BSR set to: 0
 15820                           ;ipv4.c: 314: if (ip->address[i] != 0x00)
 15821                           
 15822                           ; BSR set to: 0
 15823  005420  5162               	movf	ipv4_isAllZero@i& (0+255),w,b
 15824  005422  0D01               	mullw	1
 15825  005424  50F3               	movf	prodl,w,c
 15826  005426  2560               	addwf	ipv4_isAllZero@ip& (0+255),w,b
 15827  005428  6ED9               	movwf	fsr2l,c
 15828  00542A  50F4               	movf	prodh,w,c
 15829  00542C  2161               	addwfc	(ipv4_isAllZero@ip+1)& (0+255),w,b
 15830  00542E  6EDA               	movwf	fsr2h,c
 15831  005430  50DF               	movf	indf2,w,c
 15832  005432  B4D8               	btfsc	status,2,c
 15833  005434  D002               	goto	l1209
 15834                           
 15835                           ; BSR set to: 0
 15836                           ;ipv4.c: 315: return 0;
 15837  005436  90D8               	bcf	status,0,c
 15838                           
 15839                           ; BSR set to: 0
 15840  005438  0012               	return	
 15841  00543A                     l1209:
 15842                           
 15843                           ; BSR set to: 0
 15844                           
 15845                           ; BSR set to: 0
 15846  00543A  2B62               	incf	ipv4_isAllZero@i& (0+255),f,b
 15847  00543C  D7ED               	goto	l9233
 15848  00543E                     u10220:
 15849                           
 15850                           ; BSR set to: 0
 15851                           ;ipv4.c: 316: }
 15852                           ;ipv4.c: 317: return 1;
 15853                           
 15854                           ; BSR set to: 0
 15855  00543E  80D8               	bsf	status,0,c
 15856  005440  0012               	return	
 15857  005442                     __end_of_ipv4_isAllZero:
 15858                           	opt stack 0
 15859                           tblptru	equ	0xFF8
 15860                           tblptrh	equ	0xFF7
 15861                           tblptrl	equ	0xFF6
 15862                           tablat	equ	0xFF5
 15863                           prodh	equ	0xFF4
 15864                           prodl	equ	0xFF3
 15865                           intcon	equ	0xFF2
 15866                           intcon3	equ	0xFF0
 15867                           indf0	equ	0xFEF
 15868                           postinc0	equ	0xFEE
 15869                           plusw0	equ	0xFEB
 15870                           fsr0h	equ	0xFEA
 15871                           fsr0l	equ	0xFE9
 15872                           wreg	equ	0xFE8
 15873                           indf1	equ	0xFE7
 15874                           postinc1	equ	0xFE6
 15875                           postdec1	equ	0xFE5
 15876                           plusw1	equ	0xFE3
 15877                           fsr1h	equ	0xFE2
 15878                           fsr1l	equ	0xFE1
 15879                           indf2	equ	0xFDF
 15880                           postinc2	equ	0xFDE
 15881                           postdec2	equ	0xFDD
 15882                           plusw2	equ	0xFDB
 15883                           fsr2h	equ	0xFDA
 15884                           fsr2l	equ	0xFD9
 15885                           status	equ	0xFD8
 15886                           
 15887 ;; *************** function _arp_background *****************
 15888 ;; Defined at:
 15889 ;;		line 389 in file "src/stack/protocols/arp.c"
 15890 ;; Parameters:    Size  Location     Type
 15891 ;;  link            1    wreg     enum E233
 15892 ;; Auto vars:     Size  Location     Type
 15893 ;;  link            1   86[BANK1 ] enum E233
 15894 ;;  errProbe        3   90[BANK1 ] struct error
 15895 ;;  errAnnounce     3   87[BANK1 ] struct error
 15896 ;; Return value:  Size  Location     Type
 15897 ;;                  3   81[BANK1 ] struct error
 15898 ;; Registers used:
 15899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15900 ;; Tracked objects:
 15901 ;;		On entry : 0/0
 15902 ;;		On exit  : 0/0
 15903 ;;		Unchanged: 0/0
 15904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15905 ;;      Params:         0       0       3       0       0       0       0       0       0
 15906 ;;      Locals:         0       0       7       0       0       0       0       0       0
 15907 ;;      Temps:          0       0       2       0       0       0       0       0       0
 15908 ;;      Totals:         0       0      12       0       0       0       0       0       0
 15909 ;;Total ram usage:       12 bytes
 15910 ;; Hardware stack levels used:    1
 15911 ;; Hardware stack levels required when called:   12
 15912 ;; This function calls:
 15913 ;;		_UARTTransmitText
 15914 ;;		_arp_gratuitous
 15915 ;;		_arp_probe
 15916 ;;		_ipv4_SrcAddrChanged
 15917 ;;		_ipv4_getPreliminaryIPSourceAddress
 15918 ;; This function is called by:
 15919 ;;		_handleStackBackgroundTasks
 15920 ;; This function uses a non-reentrant model
 15921 ;;
 15922                           
 15923                           	psect	text59
 15924  002D42                     __ptext59:
 15925                           	opt stack 0
 15926  002D42                     _arp_background:
 15927                           	opt stack 17
 15928                           
 15929                           ; BSR set to: 0
 15930                           ;incstack = 0
 15931                           ;arp_background@link stored from wreg
 15932  002D42  0101               	movlb	1	; () banked
 15933  002D44  6F56               	movwf	arp_background@link& (0+255),b
 15934                           
 15935                           ;arp.c: 390: error_t static err;
 15936                           ;arp.c: 391: error_t errProbe;
 15937                           ;arp.c: 392: error_t errAnnounce;
 15938                           ;arp.c: 393: bool_t static fAnnounce = 0;
 15939                           ;arp.c: 394: int8_t static state = 0;
 15940                           ;arp.c: 395: ipv4_address_t static ipPreliminary;
 15941                           ;arp.c: 396: err.code = ERROR_ARP_WAITING;
 15942  002D46  0E01               	movlw	1
 15943  002D48  0101               	movlb	1	; () banked
 15944  002D4A  6FF8               	movwf	(arp_background@err+2)& (0+255),b
 15945  002D4C  0E91               	movlw	145
 15946  002D4E  6FF7               	movwf	(arp_background@err+1)& (0+255),b
 15947                           
 15948                           ;arp.c: 397: err.module = ERROR_MODULE_ARP;
 15949  002D50  0E03               	movlw	3
 15950  002D52  6FF6               	movwf	arp_background@err& (0+255),b
 15951                           
 15952                           ;arp.c: 399: switch (state) {
 15953  002D54  D0A8               	goto	l1044
 15954  002D56                     
 15955                           ; BSR set to: 1
 15956                           ;arp.c: 403: ipPreliminary = ipv4_getPreliminaryIPSourceAddress();
 15957                           
 15958                           ; BSR set to: 1
 15959  002D56  ECDC  F02B         	call	_ipv4_getPreliminaryIPSourceAddress	;wreg free
 15960  002D5A  C060  F1C6         	movff	?_ipv4_getPreliminaryIPSourceAddress,arp_background@ipPreliminary
 15961  002D5E  C061  F1C7         	movff	?_ipv4_getPreliminaryIPSourceAddress+1,arp_background@ipPreliminary+1
 15962  002D62  C062  F1C8         	movff	?_ipv4_getPreliminaryIPSourceAddress+2,arp_background@ipPreliminary+2
 15963  002D66  C063  F1C9         	movff	?_ipv4_getPreliminaryIPSourceAddress+3,arp_background@ipPreliminary+3
 15964                           
 15965                           ;arp.c: 404: if (ipv4_SrcAddrChanged(&err)) {
 15966  002D6A  0EF6               	movlw	low arp_background@err
 15967  002D6C  0100               	movlb	0	; () banked
 15968  002D6E  6F60               	movwf	ipv4_SrcAddrChanged@err& (0+255),b
 15969  002D70  0E01               	movlw	high arp_background@err
 15970  002D72  6F61               	movwf	(ipv4_SrcAddrChanged@err+1)& (0+255),b
 15971  002D74  ECC0  F02B         	call	_ipv4_SrcAddrChanged	;wreg free
 15972  002D78  0100               	movlb	0	; () banked
 15973  002D7A  A0D8               	btfss	status,0,c
 15974  002D7C  D055               	goto	l1049
 15975                           
 15976                           ; BSR set to: 0
 15977                           ;arp.c: 405: errProbe.code = arp_probe(ipPreliminary, link).code;
 15978  002D7E  C1C6  F134         	movff	arp_background@ipPreliminary,arp_probe@ipTarget
 15979  002D82  C1C7  F135         	movff	arp_background@ipPreliminary+1,arp_probe@ipTarget+1
 15980  002D86  C1C8  F136         	movff	arp_background@ipPreliminary+2,arp_probe@ipTarget+2
 15981  002D8A  C1C9  F137         	movff	arp_background@ipPreliminary+3,arp_probe@ipTarget+3
 15982  002D8E  C156  F138         	movff	arp_background@link,arp_probe@link
 15983  002D92  ECA8  F00C         	call	_arp_probe	;wreg free
 15984  002D96  0E34               	movlw	low ?_arp_probe
 15985  002D98  6ED9               	movwf	fsr2l,c
 15986  002D9A  0E01               	movlw	high ?_arp_probe
 15987  002D9C  6EDA               	movwf	fsr2h,c
 15988  002D9E  0E01               	movlw	1
 15989  002DA0  26D9               	addwf	fsr2l,f,c
 15990  002DA2  0E00               	movlw	0
 15991  002DA4  22DA               	addwfc	fsr2h,f,c
 15992  002DA6  CFDE F15B          	movff	postinc2,arp_background@errProbe+1
 15993  002DAA  CFDD F15C          	movff	postdec2,arp_background@errProbe+2
 15994                           
 15995                           ;arp.c: 406: switch (errProbe.code) {
 15996  002DAE  D023               	goto	l1047
 15997  002DB0                     
 15998                           ;arp.c: 409: UARTTransmitText("[ARP]: Conflict during probing.\n\r");
 15999  002DB0  0E69               	movlw	low STR_86
 16000  002DB2  0100               	movlb	0	; () banked
 16001  002DB4  6F98               	movwf	UARTTransmitText@str& (0+255),b
 16002  002DB6  0E7C               	movlw	high STR_86
 16003  002DB8  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16004  002DBA  EC27  F027         	call	_UARTTransmitText	;wreg free
 16005                           
 16006                           ;arp.c: 411: break;
 16007  002DBE  D034               	goto	l1049
 16008  002DC0                     
 16009                           ;arp.c: 414: UARTTransmitText("[ARP]: Nobody answered to probes.\n\r");
 16010  002DC0  0E22               	movlw	low STR_87
 16011  002DC2  0100               	movlb	0	; () banked
 16012  002DC4  6F98               	movwf	UARTTransmitText@str& (0+255),b
 16013  002DC6  0E7C               	movlw	high STR_87
 16014  002DC8  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16015  002DCA  EC27  F027         	call	_UARTTransmitText	;wreg free
 16016                           
 16017                           ;arp.c: 416: state = 1;
 16018  002DCE  0E01               	movlw	1
 16019  002DD0  0101               	movlb	1	; () banked
 16020  002DD2  6FCF               	movwf	arp_background@state& (0+255),b
 16021                           
 16022                           ; BSR set to: 1
 16023                           ;arp.c: 419: break;
 16024                           
 16025                           ;arp.c: 418: case ERROR_ARP_WAITING:
 16026                           
 16027                           ;arp.c: 417: break;
 16028  002DD4  D029               	goto	l1049
 16029  002DD6                     
 16030                           ; BSR set to: 1
 16031                           ;arp.c: 422: UARTTransmitText("[ARP]: Operation was interrupted because link was lost.\n
      +                          \r");
 16032                           
 16033                           ; BSR set to: 1
 16034  002DD6  0E16               	movlw	low STR_88
 16035  002DD8  0100               	movlb	0	; () banked
 16036  002DDA  6F98               	movwf	UARTTransmitText@str& (0+255),b
 16037  002DDC  0E7A               	movlw	high STR_88
 16038  002DDE  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16039  002DE0  EC27  F027         	call	_UARTTransmitText	;wreg free
 16040                           
 16041                           ;arp.c: 424: break;
 16042  002DE4  D021               	goto	l1049
 16043  002DE6                     
 16044                           ;arp.c: 427: UARTTransmitText("[ARP]: An unknown error occured.\n\r");
 16045  002DE6  0E46               	movlw	low STR_89
 16046  002DE8  0100               	movlb	0	; () banked
 16047  002DEA  6F98               	movwf	UARTTransmitText@str& (0+255),b
 16048  002DEC  0E7C               	movlw	high STR_89
 16049  002DEE  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16050  002DF0  EC27  F027         	call	_UARTTransmitText	;wreg free
 16051                           
 16052                           ;arp.c: 430: }
 16053                           
 16054                           ;arp.c: 429: break;
 16055  002DF4  D019               	goto	l1049
 16056  002DF6                     l1047:
 16057  002DF6  EE21  F05B         	lfsr	2,arp_background@errProbe+1
 16058  002DFA  CFDE F154          	movff	postinc2,??_arp_background
 16059  002DFE  CFDD F155          	movff	postdec2,??_arp_background+1
 16060                           
 16061                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16062                           ; Switch size 1, requested type "space"
 16063                           ; Number of cases is 1, Range of values is 1 to 1
 16064                           ; switch strategies available:
 16065                           ; Name         Instructions Cycles
 16066                           ; simple_byte            4     3 (average)
 16067                           ;	Chosen strategy is simple_byte
 16068  002E02  0101               	movlb	1	; () banked
 16069  002E04  5155               	movf	(??_arp_background+1)& (0+255),w,b
 16070  002E06  0A01               	xorlw	1	; case 1
 16071  002E08  A4D8               	btfss	status,2,c
 16072  002E0A  D7ED               	goto	l1053
 16073                           
 16074                           ; BSR set to: 1
 16075                           ; Switch size 1, requested type "space"
 16076                           ; Number of cases is 4, Range of values is 145 to 151
 16077                           ; switch strategies available:
 16078                           ; Name         Instructions Cycles
 16079                           ; simple_byte           13     7 (average)
 16080                           ;	Chosen strategy is simple_byte
 16081  002E0C  5154               	movf	??_arp_background& (0+255),w,b
 16082  002E0E  0A91               	xorlw	145	; case 145
 16083  002E10  B4D8               	btfsc	status,2,c
 16084  002E12  D00A               	goto	l1049
 16085  002E14  0A02               	xorlw	2	; case 147
 16086  002E16  B4D8               	btfsc	status,2,c
 16087  002E18  D7D3               	goto	l1050
 16088  002E1A  0A05               	xorlw	5	; case 150
 16089  002E1C  B4D8               	btfsc	status,2,c
 16090  002E1E  D7C8               	goto	l1048
 16091  002E20  0A01               	xorlw	1	; case 151
 16092  002E22  B4D8               	btfsc	status,2,c
 16093  002E24  D7D8               	goto	l1052
 16094  002E26  D7DF               	goto	l1053
 16095  002E28                     l1049:
 16096                           
 16097                           ;arp.c: 431: }
 16098                           ;arp.c: 432: err.code = errProbe.code;
 16099                           
 16100                           ; BSR set to: 1
 16101  002E28  C15B  F1F7         	movff	arp_background@errProbe+1,arp_background@err+1
 16102  002E2C  C15C  F1F8         	movff	arp_background@errProbe+2,arp_background@err+2
 16103                           
 16104                           ;arp.c: 434: break;
 16105  002E30  D041               	goto	l1054
 16106  002E32                     
 16107                           ;arp.c: 437: errAnnounce = arp_gratuitous(ipPreliminary, link);
 16108  002E32  C1C6  F134         	movff	arp_background@ipPreliminary,arp_gratuitous@ip
 16109  002E36  C1C7  F135         	movff	arp_background@ipPreliminary+1,arp_gratuitous@ip+1
 16110  002E3A  C1C8  F136         	movff	arp_background@ipPreliminary+2,arp_gratuitous@ip+2
 16111  002E3E  C1C9  F137         	movff	arp_background@ipPreliminary+3,arp_gratuitous@ip+3
 16112  002E42  C156  F138         	movff	arp_background@link,arp_gratuitous@link
 16113  002E46  ECBA  F011         	call	_arp_gratuitous	;wreg free
 16114  002E4A  C134  F157         	movff	?_arp_gratuitous,arp_background@errAnnounce
 16115  002E4E  C135  F158         	movff	?_arp_gratuitous+1,arp_background@errAnnounce+1
 16116  002E52  C136  F159         	movff	?_arp_gratuitous+2,arp_background@errAnnounce+2
 16117                           
 16118                           ;arp.c: 438: err.code = errAnnounce.code;
 16119  002E56  C158  F1F7         	movff	arp_background@errAnnounce+1,arp_background@err+1
 16120  002E5A  C159  F1F8         	movff	arp_background@errAnnounce+2,arp_background@err+2
 16121                           
 16122                           ;arp.c: 439: if (err.code == ERROR_ARP_IPv4_ADDRESS_CONFLICT) {
 16123  002E5E  0E96               	movlw	150
 16124  002E60  0101               	movlb	1	; () banked
 16125  002E62  19F7               	xorwf	(arp_background@err+1)& (0+255),w,b
 16126  002E64  E10D               	bnz	l10467
 16127  002E66  05F8               	decf	(arp_background@err+2)& (0+255),w,b
 16128  002E68  A4D8               	btfss	status,2,c
 16129  002E6A  D00A               	goto	l1056
 16130                           
 16131                           ; BSR set to: 1
 16132                           ;arp.c: 441: UARTTransmitText("[ARP]: Conflict during announcement.\n\r");
 16133  002E6C  0E65               	movlw	low STR_90
 16134  002E6E  0100               	movlb	0	; () banked
 16135  002E70  6F98               	movwf	UARTTransmitText@str& (0+255),b
 16136  002E72  0E7B               	movlw	high STR_90
 16137  002E74  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16138  002E76  EC27  F027         	call	_UARTTransmitText	;wreg free
 16139                           
 16140                           ;arp.c: 443: state = 0;
 16141  002E7A  0E00               	movlw	0
 16142  002E7C  0101               	movlb	1	; () banked
 16143  002E7E  6FCF               	movwf	arp_background@state& (0+255),b
 16144  002E80                     l1056:
 16145  002E80                     l10467:
 16146                           
 16147                           ; BSR set to: 1
 16148                           ;arp.c: 444: }
 16149                           ;arp.c: 445: if (errAnnounce.module == ERROR_MODULE_ARP &&
 16150                           ;arp.c: 446: errAnnounce.code == (uint16_t)0) {
 16151  002E80  0E03               	movlw	3
 16152  002E82  1957               	xorwf	arp_background@errAnnounce& (0+255),w,b
 16153  002E84  A4D8               	btfss	status,2,c
 16154  002E86  D016               	goto	l1054
 16155                           
 16156                           ; BSR set to: 1
 16157  002E88  5158               	movf	(arp_background@errAnnounce+1)& (0+255),w,b
 16158  002E8A  1159               	iorwf	(arp_background@errAnnounce+2)& (0+255),w,b
 16159  002E8C  A4D8               	btfss	status,2,c
 16160  002E8E  D012               	goto	l1054
 16161                           
 16162                           ; BSR set to: 1
 16163                           ;arp.c: 448: UARTTransmitText("[ARP]: All announcements sent.\n\r");
 16164  002E90  0ECE               	movlw	low STR_91
 16165  002E92  0100               	movlb	0	; () banked
 16166  002E94  6F98               	movwf	UARTTransmitText@str& (0+255),b
 16167  002E96  0E7C               	movlw	high STR_91
 16168  002E98  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16169  002E9A  EC27  F027         	call	_UARTTransmitText	;wreg free
 16170                           
 16171                           ;arp.c: 450: state = 0;
 16172  002E9E  0E00               	movlw	0
 16173  002EA0  0101               	movlb	1	; () banked
 16174  002EA2  6FCF               	movwf	arp_background@state& (0+255),b
 16175                           
 16176                           ; BSR set to: 1
 16177                           ;arp.c: 453: }
 16178                           
 16179                           ; BSR set to: 1
 16180                           ;arp.c: 451: }
 16181                           ;arp.c: 452: break;
 16182  002EA4  D007               	goto	l1054
 16183  002EA6                     l1044:
 16184                           
 16185                           ; BSR set to: 1
 16186                           
 16187                           ; BSR set to: 1
 16188  002EA6  51CF               	movf	arp_background@state& (0+255),w,b
 16189                           
 16190                           ; Switch size 1, requested type "space"
 16191                           ; Number of cases is 2, Range of values is 0 to 1
 16192                           ; switch strategies available:
 16193                           ; Name         Instructions Cycles
 16194                           ; simple_byte            7     4 (average)
 16195                           ;	Chosen strategy is simple_byte
 16196  002EA8  0A00               	xorlw	0	; case 0
 16197  002EAA  B4D8               	btfsc	status,2,c
 16198  002EAC  D754               	goto	l1045
 16199  002EAE  0A01               	xorlw	1	; case 1
 16200  002EB0  B4D8               	btfsc	status,2,c
 16201  002EB2  D7BF               	goto	l1055
 16202  002EB4                     l1054:
 16203                           
 16204                           ;arp.c: 455: return err;
 16205  002EB4  C1F6  F151         	movff	arp_background@err,?_arp_background
 16206  002EB8  C1F7  F152         	movff	arp_background@err+1,?_arp_background+1
 16207  002EBC  C1F8  F153         	movff	arp_background@err+2,?_arp_background+2
 16208  002EC0  0012               	return		;funcret
 16209  002EC2                     __end_of_arp_background:
 16210                           	opt stack 0
 16211                           tblptru	equ	0xFF8
 16212                           tblptrh	equ	0xFF7
 16213                           tblptrl	equ	0xFF6
 16214                           tablat	equ	0xFF5
 16215                           prodh	equ	0xFF4
 16216                           prodl	equ	0xFF3
 16217                           intcon	equ	0xFF2
 16218                           intcon3	equ	0xFF0
 16219                           indf0	equ	0xFEF
 16220                           postinc0	equ	0xFEE
 16221                           plusw0	equ	0xFEB
 16222                           fsr0h	equ	0xFEA
 16223                           fsr0l	equ	0xFE9
 16224                           wreg	equ	0xFE8
 16225                           indf1	equ	0xFE7
 16226                           postinc1	equ	0xFE6
 16227                           postdec1	equ	0xFE5
 16228                           plusw1	equ	0xFE3
 16229                           fsr1h	equ	0xFE2
 16230                           fsr1l	equ	0xFE1
 16231                           indf2	equ	0xFDF
 16232                           postinc2	equ	0xFDE
 16233                           postdec2	equ	0xFDD
 16234                           plusw2	equ	0xFDB
 16235                           fsr2h	equ	0xFDA
 16236                           fsr2l	equ	0xFD9
 16237                           status	equ	0xFD8
 16238                           
 16239 ;; *************** function _ipv4_getPreliminaryIPSourceAddress *****************
 16240 ;; Defined at:
 16241 ;;		line 246 in file "src/stack/protocols/ipv4.c"
 16242 ;; Parameters:    Size  Location     Type
 16243 ;;		None
 16244 ;; Auto vars:     Size  Location     Type
 16245 ;;		None
 16246 ;; Return value:  Size  Location     Type
 16247 ;;                  4    0[BANK0 ] struct ipv4_address
 16248 ;; Registers used:
 16249 ;;		None
 16250 ;; Tracked objects:
 16251 ;;		On entry : 0/0
 16252 ;;		On exit  : 0/0
 16253 ;;		Unchanged: 0/0
 16254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16255 ;;      Params:         0       4       0       0       0       0       0       0       0
 16256 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16257 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16258 ;;      Totals:         0       4       0       0       0       0       0       0       0
 16259 ;;Total ram usage:        4 bytes
 16260 ;; Hardware stack levels used:    1
 16261 ;; Hardware stack levels required when called:    4
 16262 ;; This function calls:
 16263 ;;		Nothing
 16264 ;; This function is called by:
 16265 ;;		_arp_background
 16266 ;; This function uses a non-reentrant model
 16267 ;;
 16268                           
 16269                           	psect	text60
 16270  0057B8                     __ptext60:
 16271                           	opt stack 0
 16272  0057B8                     _ipv4_getPreliminaryIPSourceAddress:
 16273                           	opt stack 24
 16274                           
 16275                           ;ipv4.c: 247: return ipPreliminarySource;
 16276                           
 16277                           ;incstack = 0
 16278  0057B8  C1EE  F060         	movff	_ipPreliminarySource,?_ipv4_getPreliminaryIPSourceAddress
 16279  0057BC  C1EF  F061         	movff	_ipPreliminarySource+1,?_ipv4_getPreliminaryIPSourceAddress+1
 16280  0057C0  C1F0  F062         	movff	_ipPreliminarySource+2,?_ipv4_getPreliminaryIPSourceAddress+2
 16281  0057C4  C1F1  F063         	movff	_ipPreliminarySource+3,?_ipv4_getPreliminaryIPSourceAddress+3
 16282  0057C8  0012               	return		;funcret
 16283  0057CA                     __end_of_ipv4_getPreliminaryIPSourceAddress:
 16284                           	opt stack 0
 16285                           tblptru	equ	0xFF8
 16286                           tblptrh	equ	0xFF7
 16287                           tblptrl	equ	0xFF6
 16288                           tablat	equ	0xFF5
 16289                           prodh	equ	0xFF4
 16290                           prodl	equ	0xFF3
 16291                           intcon	equ	0xFF2
 16292                           intcon3	equ	0xFF0
 16293                           indf0	equ	0xFEF
 16294                           postinc0	equ	0xFEE
 16295                           plusw0	equ	0xFEB
 16296                           fsr0h	equ	0xFEA
 16297                           fsr0l	equ	0xFE9
 16298                           wreg	equ	0xFE8
 16299                           indf1	equ	0xFE7
 16300                           postinc1	equ	0xFE6
 16301                           postdec1	equ	0xFE5
 16302                           plusw1	equ	0xFE3
 16303                           fsr1h	equ	0xFE2
 16304                           fsr1l	equ	0xFE1
 16305                           indf2	equ	0xFDF
 16306                           postinc2	equ	0xFDE
 16307                           postdec2	equ	0xFDD
 16308                           plusw2	equ	0xFDB
 16309                           fsr2h	equ	0xFDA
 16310                           fsr2l	equ	0xFD9
 16311                           status	equ	0xFD8
 16312                           
 16313 ;; *************** function _ipv4_SrcAddrChanged *****************
 16314 ;; Defined at:
 16315 ;;		line 297 in file "src/stack/protocols/ipv4.c"
 16316 ;; Parameters:    Size  Location     Type
 16317 ;;  err             2    0[BANK0 ] PTR struct error
 16318 ;;		 -> arp_background@err(3), 
 16319 ;; Auto vars:     Size  Location     Type
 16320 ;;		None
 16321 ;; Return value:  Size  Location     Type
 16322 ;;		None               void
 16323 ;; Registers used:
 16324 ;;		wreg, status,2, status,0
 16325 ;; Tracked objects:
 16326 ;;		On entry : 0/0
 16327 ;;		On exit  : 0/0
 16328 ;;		Unchanged: 0/0
 16329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16330 ;;      Params:         0       2       0       0       0       0       0       0       0
 16331 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16332 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16333 ;;      Totals:         0       2       0       0       0       0       0       0       0
 16334 ;;Total ram usage:        2 bytes
 16335 ;; Hardware stack levels used:    1
 16336 ;; Hardware stack levels required when called:    4
 16337 ;; This function calls:
 16338 ;;		Nothing
 16339 ;; This function is called by:
 16340 ;;		_arp_background
 16341 ;; This function uses a non-reentrant model
 16342 ;;
 16343                           
 16344                           	psect	text61
 16345  005780                     __ptext61:
 16346                           	opt stack 0
 16347  005780                     _ipv4_SrcAddrChanged:
 16348                           	opt stack 24
 16349                           
 16350                           ;ipv4.c: 298: arpStatus = err;
 16351                           
 16352                           ;incstack = 0
 16353  005780  C060  F03C         	movff	ipv4_SrcAddrChanged@err,_arpStatus
 16354  005784  C061  F03D         	movff	ipv4_SrcAddrChanged@err+1,_arpStatus+1
 16355                           
 16356                           ;ipv4.c: 299: return fSrcAddrChanged;
 16357  005788  B04E               	btfsc	_fSrcAddrChanged/(0+8),_fSrcAddrChanged& (0+7),c
 16358  00578A  D002               	goto	l8303
 16359  00578C  90D8               	bcf	status,0,c
 16360  00578E  0012               	return	
 16361  005790                     l8303:
 16362  005790  80D8               	bsf	status,0,c
 16363  005792  0012               	return	
 16364  005794                     __end_of_ipv4_SrcAddrChanged:
 16365                           	opt stack 0
 16366                           tblptru	equ	0xFF8
 16367                           tblptrh	equ	0xFF7
 16368                           tblptrl	equ	0xFF6
 16369                           tablat	equ	0xFF5
 16370                           prodh	equ	0xFF4
 16371                           prodl	equ	0xFF3
 16372                           intcon	equ	0xFF2
 16373                           intcon3	equ	0xFF0
 16374                           indf0	equ	0xFEF
 16375                           postinc0	equ	0xFEE
 16376                           plusw0	equ	0xFEB
 16377                           fsr0h	equ	0xFEA
 16378                           fsr0l	equ	0xFE9
 16379                           wreg	equ	0xFE8
 16380                           indf1	equ	0xFE7
 16381                           postinc1	equ	0xFE6
 16382                           postdec1	equ	0xFE5
 16383                           plusw1	equ	0xFE3
 16384                           fsr1h	equ	0xFE2
 16385                           fsr1l	equ	0xFE1
 16386                           indf2	equ	0xFDF
 16387                           postinc2	equ	0xFDE
 16388                           postdec2	equ	0xFDD
 16389                           plusw2	equ	0xFDB
 16390                           fsr2h	equ	0xFDA
 16391                           fsr2l	equ	0xFD9
 16392                           status	equ	0xFD8
 16393                           
 16394 ;; *************** function _arp_probe *****************
 16395 ;; Defined at:
 16396 ;;		line 248 in file "src/stack/protocols/arp.c"
 16397 ;; Parameters:    Size  Location     Type
 16398 ;;  ipTarget        4   52[BANK1 ] struct ipv4_address
 16399 ;;  link            1   56[BANK1 ] enum E233
 16400 ;; Auto vars:     Size  Location     Type
 16401 ;;  ipSender        4   74[BANK1 ] struct ipv4_address
 16402 ;;  waitingTime     4   70[BANK1 ] unsigned long 
 16403 ;;  timeStart       4   66[BANK1 ] unsigned long 
 16404 ;;  err             3   78[BANK1 ] struct error
 16405 ;;  index           1   65[BANK1 ] unsigned char 
 16406 ;; Return value:  Size  Location     Type
 16407 ;;                  3   52[BANK1 ] struct error
 16408 ;; Registers used:
 16409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16410 ;; Tracked objects:
 16411 ;;		On entry : 0/0
 16412 ;;		On exit  : 0/0
 16413 ;;		Unchanged: 0/0
 16414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16415 ;;      Params:         0       0       5       0       0       0       0       0       0
 16416 ;;      Locals:         0       0      16       0       0       0       0       0       0
 16417 ;;      Temps:          0       0       8       0       0       0       0       0       0
 16418 ;;      Totals:         0       0      29       0       0       0       0       0       0
 16419 ;;Total ram usage:       29 bytes
 16420 ;; Hardware stack levels used:    1
 16421 ;; Hardware stack levels required when called:   11
 16422 ;; This function calls:
 16423 ;;		_UARTTransmitText
 16424 ;;		___lwmod
 16425 ;;		_arp_checkForEntry
 16426 ;;		_arp_sendRequest
 16427 ;;		_getMillis
 16428 ;;		_ipAdressToString
 16429 ;;		_ipv4_setToAllZero
 16430 ;;		_rand
 16431 ;; This function is called by:
 16432 ;;		_arp_background
 16433 ;; This function uses a non-reentrant model
 16434 ;;
 16435                           
 16436                           	psect	text62
 16437  001950                     __ptext62:
 16438                           	opt stack 0
 16439  001950                     _arp_probe:
 16440                           	opt stack 17
 16441                           
 16442                           ;arp.c: 249: time_t timeStart;
 16443                           ;arp.c: 250: time_t waitingTime;
 16444                           ;arp.c: 251: ipv4_address_t ipSender;
 16445                           ;arp.c: 252: uint8_t static probeCounter = 0;
 16446                           ;arp.c: 253: error_t err;
 16447                           ;arp.c: 255: enum states {
 16448                           ;arp.c: 256: PREPARING_PROBE, WAITING_TO_SEND, SENDING_PROBE, ARP_ENTRY_FOUND
 16449                           ;arp.c: 257: };
 16450                           ;arp.c: 258: uint8_t static state = PREPARING_PROBE;
 16451                           ;arp.c: 259: uint8_t index;
 16452                           ;arp.c: 260: err.module = ERROR_MODULE_ARP;
 16453                           
 16454                           ;incstack = 0
 16455  001950  0E03               	movlw	3
 16456  001952  0101               	movlb	1	; () banked
 16457  001954  6F4E               	movwf	arp_probe@err& (0+255),b
 16458                           
 16459                           ;arp.c: 262: if (link == NO_LINK) {
 16460  001956  5138               	movf	arp_probe@link& (0+255),w,b
 16461  001958  A4D8               	btfss	status,2,c
 16462  00195A  D00F               	goto	l996
 16463                           
 16464                           ; BSR set to: 1
 16465                           ;arp.c: 263: state = PREPARING_PROBE;
 16466  00195C  0E00               	movlw	0
 16467  00195E  6FD2               	movwf	arp_probe@state& (0+255),b
 16468                           
 16469                           ;arp.c: 264: probeCounter = 0;
 16470  001960  0E00               	movlw	0
 16471  001962  6FD3               	movwf	arp_probe@probeCounter& (0+255),b
 16472                           
 16473                           ;arp.c: 265: err.code = ERROR_ARP_CONNECTION_FAILED;
 16474  001964  0E01               	movlw	1
 16475  001966  6F50               	movwf	(arp_probe@err+2)& (0+255),b
 16476  001968  0E97               	movlw	151
 16477  00196A  6F4F               	movwf	(arp_probe@err+1)& (0+255),b
 16478                           
 16479                           ; BSR set to: 1
 16480                           ;arp.c: 266: return err;
 16481  00196C  C14E  F134         	movff	arp_probe@err,?_arp_probe
 16482  001970  C14F  F135         	movff	arp_probe@err+1,?_arp_probe+1
 16483  001974  C150  F136         	movff	arp_probe@err+2,?_arp_probe+2
 16484                           
 16485                           ; BSR set to: 1
 16486  001978  0012               	return	
 16487  00197A                     l996:
 16488                           
 16489                           ; BSR set to: 1
 16490                           ;arp.c: 267: }
 16491                           ;arp.c: 269: if (arp_checkForEntry(ipTarget, &index)) {
 16492                           
 16493                           ; BSR set to: 1
 16494  00197A  C134  F067         	movff	arp_probe@ipTarget,arp_checkForEntry@ip
 16495  00197E  C135  F068         	movff	arp_probe@ipTarget+1,arp_checkForEntry@ip+1
 16496  001982  C136  F069         	movff	arp_probe@ipTarget+2,arp_checkForEntry@ip+2
 16497  001986  C137  F06A         	movff	arp_probe@ipTarget+3,arp_checkForEntry@ip+3
 16498  00198A  0E41               	movlw	low arp_probe@index
 16499  00198C  0100               	movlb	0	; () banked
 16500  00198E  6F6B               	movwf	arp_checkForEntry@index& (0+255),b
 16501  001990  0E01               	movlw	high arp_probe@index
 16502  001992  6F6C               	movwf	(arp_checkForEntry@index+1)& (0+255),b
 16503  001994  ECC5  F020         	call	_arp_checkForEntry	;wreg free
 16504  001998  0900               	iorlw	0
 16505  00199A  B4D8               	btfsc	status,2,c
 16506  00199C  D12A               	goto	l999
 16507                           
 16508                           ;arp.c: 270: state = ARP_ENTRY_FOUND;
 16509  00199E  0E03               	movlw	3
 16510  0019A0  0101               	movlb	1	; () banked
 16511  0019A2  6FD2               	movwf	arp_probe@state& (0+255),b
 16512                           
 16513                           ; BSR set to: 1
 16514                           ;arp.c: 271: }
 16515                           ;arp.c: 273: switch (state) {
 16516  0019A4  D126               	goto	l999
 16517  0019A6                     
 16518                           ; BSR set to: 1
 16519                           ;arp.c: 275: ipv4_setToAllZero(&ipSender);
 16520                           
 16521                           ; BSR set to: 1
 16522  0019A6  0E4A               	movlw	low arp_probe@ipSender
 16523  0019A8  0100               	movlb	0	; () banked
 16524  0019AA  6F60               	movwf	ipv4_setToAllZero@ip& (0+255),b
 16525  0019AC  0E01               	movlw	high arp_probe@ipSender
 16526  0019AE  6F61               	movwf	(ipv4_setToAllZero@ip+1)& (0+255),b
 16527  0019B0  ECF3  F02A         	call	_ipv4_setToAllZero	;wreg free
 16528                           
 16529                           ;arp.c: 276: timeStart = getMillis();
 16530  0019B4  ECE5  F02B         	call	_getMillis	;wreg free
 16531  0019B8  C060  F142         	movff	?_getMillis,arp_probe@timeStart
 16532  0019BC  C061  F143         	movff	?_getMillis+1,arp_probe@timeStart+1
 16533  0019C0  C062  F144         	movff	?_getMillis+2,arp_probe@timeStart+2
 16534  0019C4  C063  F145         	movff	?_getMillis+3,arp_probe@timeStart+3
 16535                           
 16536                           ;arp.c: 277: waitingTime = rand() % 1000u;
 16537  0019C8  ECFC  F026         	call	_rand	;wreg free
 16538  0019CC  C06C  F06E         	movff	?_rand,___lwmod@dividend
 16539  0019D0  C06D  F06F         	movff	?_rand+1,___lwmod@dividend+1
 16540  0019D4  0E03               	movlw	3
 16541  0019D6  0100               	movlb	0	; () banked
 16542  0019D8  6F71               	movwf	(___lwmod@divisor+1)& (0+255),b
 16543  0019DA  0EE8               	movlw	232
 16544  0019DC  6F70               	movwf	___lwmod@divisor& (0+255),b
 16545  0019DE  ECAC  F028         	call	___lwmod	;wreg free
 16546  0019E2  0100               	movlb	0	; () banked
 16547  0019E4  C06E  F146         	movff	?___lwmod,arp_probe@waitingTime
 16548  0019E8  C06F  F147         	movff	?___lwmod+1,arp_probe@waitingTime+1
 16549  0019EC  0101               	movlb	1	; () banked
 16550  0019EE  6B48               	clrf	(arp_probe@waitingTime+2)& (0+255),b
 16551  0019F0  6B49               	clrf	(arp_probe@waitingTime+3)& (0+255),b
 16552                           
 16553                           ; BSR set to: 1
 16554                           ;arp.c: 278: state = WAITING_TO_SEND;
 16555  0019F2  0E01               	movlw	1
 16556  0019F4  6FD2               	movwf	arp_probe@state& (0+255),b
 16557  0019F6  D054               	goto	l1003
 16558  0019F8                     
 16559                           ; BSR set to: 1
 16560                           ;arp.c: 282: if (getMillis() - timeStart >= waitingTime) {
 16561                           
 16562                           ; BSR set to: 1
 16563  0019F8  C142  F139         	movff	arp_probe@timeStart,??_arp_probe
 16564  0019FC  C143  F13A         	movff	arp_probe@timeStart+1,??_arp_probe+1
 16565  001A00  C144  F13B         	movff	arp_probe@timeStart+2,??_arp_probe+2
 16566  001A04  C145  F13C         	movff	arp_probe@timeStart+3,??_arp_probe+3
 16567  001A08  1F39               	comf	??_arp_probe& (0+255),f,b
 16568  001A0A  1F3A               	comf	(??_arp_probe+1)& (0+255),f,b
 16569  001A0C  1F3B               	comf	(??_arp_probe+2)& (0+255),f,b
 16570  001A0E  1F3C               	comf	(??_arp_probe+3)& (0+255),f,b
 16571  001A10  2B39               	incf	??_arp_probe& (0+255),f,b
 16572  001A12  0E00               	movlw	0
 16573  001A14  233A               	addwfc	(??_arp_probe+1)& (0+255),f,b
 16574  001A16  233B               	addwfc	(??_arp_probe+2)& (0+255),f,b
 16575  001A18  233C               	addwfc	(??_arp_probe+3)& (0+255),f,b
 16576  001A1A  ECE5  F02B         	call	_getMillis	;wreg free
 16577  001A1E  0101               	movlb	1	; () banked
 16578  001A20  5139               	movf	??_arp_probe& (0+255),w,b
 16579  001A22  0100               	movlb	0	; () banked
 16580  001A24  2560               	addwf	?_getMillis& (0+255),w,b
 16581  001A26  0101               	movlb	1	; () banked
 16582  001A28  6F3D               	movwf	(??_arp_probe+4)& (0+255),b
 16583  001A2A  513A               	movf	(??_arp_probe+1)& (0+255),w,b
 16584  001A2C  0100               	movlb	0	; () banked
 16585  001A2E  2161               	addwfc	(?_getMillis+1)& (0+255),w,b
 16586  001A30  0101               	movlb	1	; () banked
 16587  001A32  6F3E               	movwf	(??_arp_probe+5)& (0+255),b
 16588  001A34  513B               	movf	(??_arp_probe+2)& (0+255),w,b
 16589  001A36  0100               	movlb	0	; () banked
 16590  001A38  2162               	addwfc	(?_getMillis+2)& (0+255),w,b
 16591  001A3A  0101               	movlb	1	; () banked
 16592  001A3C  6F3F               	movwf	(??_arp_probe+6)& (0+255),b
 16593  001A3E  513C               	movf	(??_arp_probe+3)& (0+255),w,b
 16594  001A40  0100               	movlb	0	; () banked
 16595  001A42  2163               	addwfc	(?_getMillis+3)& (0+255),w,b
 16596  001A44  0101               	movlb	1	; () banked
 16597  001A46  6F40               	movwf	(??_arp_probe+7)& (0+255),b
 16598  001A48  5146               	movf	arp_probe@waitingTime& (0+255),w,b
 16599  001A4A  5D3D               	subwf	(??_arp_probe+4)& (0+255),w,b
 16600  001A4C  5147               	movf	(arp_probe@waitingTime+1)& (0+255),w,b
 16601  001A4E  593E               	subwfb	(??_arp_probe+5)& (0+255),w,b
 16602  001A50  5148               	movf	(arp_probe@waitingTime+2)& (0+255),w,b
 16603  001A52  593F               	subwfb	(??_arp_probe+6)& (0+255),w,b
 16604  001A54  5149               	movf	(arp_probe@waitingTime+3)& (0+255),w,b
 16605  001A56  5940               	subwfb	(??_arp_probe+7)& (0+255),w,b
 16606  001A58  A0D8               	btfss	status,0,c
 16607  001A5A  D022               	goto	l1003
 16608                           
 16609                           ; BSR set to: 1
 16610                           ;arp.c: 283: state = SENDING_PROBE;
 16611  001A5C  0E02               	movlw	2
 16612  001A5E  6FD2               	movwf	arp_probe@state& (0+255),b
 16613                           
 16614                           ; BSR set to: 1
 16615                           ;arp.c: 285: waitingTime = (rand() % (2000u - 1000u)) + 1000u;
 16616  001A60  0EE8               	movlw	232
 16617  001A62  6F39               	movwf	??_arp_probe& (0+255),b
 16618  001A64  0E03               	movlw	3
 16619  001A66  6F3A               	movwf	(??_arp_probe+1)& (0+255),b
 16620  001A68  ECFC  F026         	call	_rand	;wreg free
 16621  001A6C  C06C  F06E         	movff	?_rand,___lwmod@dividend
 16622  001A70  C06D  F06F         	movff	?_rand+1,___lwmod@dividend+1
 16623  001A74  0E03               	movlw	3
 16624  001A76  0100               	movlb	0	; () banked
 16625  001A78  6F71               	movwf	(___lwmod@divisor+1)& (0+255),b
 16626  001A7A  0EE8               	movlw	232
 16627  001A7C  6F70               	movwf	___lwmod@divisor& (0+255),b
 16628  001A7E  ECAC  F028         	call	___lwmod	;wreg free
 16629  001A82  0101               	movlb	1	; () banked
 16630  001A84  5139               	movf	??_arp_probe& (0+255),w,b
 16631  001A86  0100               	movlb	0	; () banked
 16632  001A88  276E               	addwf	?___lwmod& (0+255),f,b
 16633  001A8A  0101               	movlb	1	; () banked
 16634  001A8C  513A               	movf	(??_arp_probe+1)& (0+255),w,b
 16635  001A8E  0100               	movlb	0	; () banked
 16636  001A90  236F               	addwfc	(?___lwmod+1)& (0+255),f,b
 16637  001A92  C06E  F146         	movff	?___lwmod,arp_probe@waitingTime
 16638  001A96  C06F  F147         	movff	?___lwmod+1,arp_probe@waitingTime+1
 16639  001A9A  0101               	movlb	1	; () banked
 16640  001A9C  6B48               	clrf	(arp_probe@waitingTime+2)& (0+255),b
 16641  001A9E  6B49               	clrf	(arp_probe@waitingTime+3)& (0+255),b
 16642  001AA0                     l1003:
 16643                           
 16644                           ; BSR set to: 1
 16645                           ;arp.c: 286: }
 16646                           ;arp.c: 287: err.code = ERROR_ARP_WAITING;
 16647                           
 16648                           ; BSR set to: 1
 16649  001AA0  0E01               	movlw	1
 16650  001AA2  6F50               	movwf	(arp_probe@err+2)& (0+255),b
 16651  001AA4  0E91               	movlw	145
 16652  001AA6  D0A3               	goto	L8
 16653  001AA8                     
 16654                           ; BSR set to: 1
 16655                           ;arp.c: 290: if (probeCounter == 0 || (getMillis() - timeStart) > waitingTime) {
 16656                           
 16657                           ; BSR set to: 1
 16658  001AA8  51D3               	movf	arp_probe@probeCounter& (0+255),w,b
 16659  001AAA  B4D8               	btfsc	status,2,c
 16660  001AAC  D032               	goto	u11630
 16661                           
 16662                           ; BSR set to: 1
 16663  001AAE  C142  F139         	movff	arp_probe@timeStart,??_arp_probe
 16664  001AB2  C143  F13A         	movff	arp_probe@timeStart+1,??_arp_probe+1
 16665  001AB6  C144  F13B         	movff	arp_probe@timeStart+2,??_arp_probe+2
 16666  001ABA  C145  F13C         	movff	arp_probe@timeStart+3,??_arp_probe+3
 16667  001ABE  1F39               	comf	??_arp_probe& (0+255),f,b
 16668  001AC0  1F3A               	comf	(??_arp_probe+1)& (0+255),f,b
 16669  001AC2  1F3B               	comf	(??_arp_probe+2)& (0+255),f,b
 16670  001AC4  1F3C               	comf	(??_arp_probe+3)& (0+255),f,b
 16671  001AC6  2B39               	incf	??_arp_probe& (0+255),f,b
 16672  001AC8  0E00               	movlw	0
 16673  001ACA  233A               	addwfc	(??_arp_probe+1)& (0+255),f,b
 16674  001ACC  233B               	addwfc	(??_arp_probe+2)& (0+255),f,b
 16675  001ACE  233C               	addwfc	(??_arp_probe+3)& (0+255),f,b
 16676  001AD0  ECE5  F02B         	call	_getMillis	;wreg free
 16677  001AD4  0101               	movlb	1	; () banked
 16678  001AD6  5139               	movf	??_arp_probe& (0+255),w,b
 16679  001AD8  0100               	movlb	0	; () banked
 16680  001ADA  2560               	addwf	?_getMillis& (0+255),w,b
 16681  001ADC  0101               	movlb	1	; () banked
 16682  001ADE  6F3D               	movwf	(??_arp_probe+4)& (0+255),b
 16683  001AE0  513A               	movf	(??_arp_probe+1)& (0+255),w,b
 16684  001AE2  0100               	movlb	0	; () banked
 16685  001AE4  2161               	addwfc	(?_getMillis+1)& (0+255),w,b
 16686  001AE6  0101               	movlb	1	; () banked
 16687  001AE8  6F3E               	movwf	(??_arp_probe+5)& (0+255),b
 16688  001AEA  513B               	movf	(??_arp_probe+2)& (0+255),w,b
 16689  001AEC  0100               	movlb	0	; () banked
 16690  001AEE  2162               	addwfc	(?_getMillis+2)& (0+255),w,b
 16691  001AF0  0101               	movlb	1	; () banked
 16692  001AF2  6F3F               	movwf	(??_arp_probe+6)& (0+255),b
 16693  001AF4  513C               	movf	(??_arp_probe+3)& (0+255),w,b
 16694  001AF6  0100               	movlb	0	; () banked
 16695  001AF8  2163               	addwfc	(?_getMillis+3)& (0+255),w,b
 16696  001AFA  0101               	movlb	1	; () banked
 16697  001AFC  6F40               	movwf	(??_arp_probe+7)& (0+255),b
 16698  001AFE  513D               	movf	(??_arp_probe+4)& (0+255),w,b
 16699  001B00  5D46               	subwf	arp_probe@waitingTime& (0+255),w,b
 16700  001B02  513E               	movf	(??_arp_probe+5)& (0+255),w,b
 16701  001B04  5947               	subwfb	(arp_probe@waitingTime+1)& (0+255),w,b
 16702  001B06  513F               	movf	(??_arp_probe+6)& (0+255),w,b
 16703  001B08  5948               	subwfb	(arp_probe@waitingTime+2)& (0+255),w,b
 16704  001B0A  5140               	movf	(??_arp_probe+7)& (0+255),w,b
 16705  001B0C  5949               	subwfb	(arp_probe@waitingTime+3)& (0+255),w,b
 16706  001B0E  B0D8               	btfsc	status,0,c
 16707  001B10  D07E               	goto	l1001
 16708  001B12                     u11630:
 16709                           
 16710                           ; BSR set to: 1
 16711                           ;arp.c: 291: timeStart = getMillis();
 16712                           
 16713                           ; BSR set to: 1
 16714  001B12  ECE5  F02B         	call	_getMillis	;wreg free
 16715  001B16  C060  F142         	movff	?_getMillis,arp_probe@timeStart
 16716  001B1A  C061  F143         	movff	?_getMillis+1,arp_probe@timeStart+1
 16717  001B1E  C062  F144         	movff	?_getMillis+2,arp_probe@timeStart+2
 16718  001B22  C063  F145         	movff	?_getMillis+3,arp_probe@timeStart+3
 16719                           
 16720                           ;arp.c: 293: if (probeCounter < 3u) {
 16721  001B26  0E03               	movlw	3
 16722  001B28  0101               	movlb	1	; () banked
 16723  001B2A  61D3               	cpfslt	arp_probe@probeCounter& (0+255),b
 16724  001B2C  D047               	goto	l1008
 16725                           
 16726                           ; BSR set to: 1
 16727                           ;arp.c: 295: UARTTransmitText("[ARP]: Sending Probe for ");
 16728  001B2E  0ED9               	movlw	low STR_81
 16729  001B30  0100               	movlb	0	; () banked
 16730  001B32  6F98               	movwf	UARTTransmitText@str& (0+255),b
 16731  001B34  0E7D               	movlw	high STR_81
 16732  001B36  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16733  001B38  EC27  F027         	call	_UARTTransmitText	;wreg free
 16734                           
 16735                           ;arp.c: 296: UARTTransmitText(ipAdressToString(ipTarget));
 16736  001B3C  C134  F073         	movff	arp_probe@ipTarget,ipAdressToString@ip
 16737  001B40  C135  F074         	movff	arp_probe@ipTarget+1,ipAdressToString@ip+1
 16738  001B44  C136  F075         	movff	arp_probe@ipTarget+2,ipAdressToString@ip+2
 16739  001B48  C137  F076         	movff	arp_probe@ipTarget+3,ipAdressToString@ip+3
 16740  001B4C  ECF3  F013         	call	_ipAdressToString	;wreg free
 16741  001B50  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
 16742  001B54  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
 16743  001B58  EC27  F027         	call	_UARTTransmitText	;wreg free
 16744                           
 16745                           ;arp.c: 297: UARTTransmitText(" (reply to ");
 16746  001B5C  0E32               	movlw	low STR_82
 16747  001B5E  0100               	movlb	0	; () banked
 16748  001B60  6F98               	movwf	UARTTransmitText@str& (0+255),b
 16749  001B62  0E7F               	movlw	high STR_82
 16750  001B64  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16751  001B66  EC27  F027         	call	_UARTTransmitText	;wreg free
 16752                           
 16753                           ;arp.c: 298: UARTTransmitText(ipAdressToString(ipSender));
 16754  001B6A  C14A  F073         	movff	arp_probe@ipSender,ipAdressToString@ip
 16755  001B6E  C14B  F074         	movff	arp_probe@ipSender+1,ipAdressToString@ip+1
 16756  001B72  C14C  F075         	movff	arp_probe@ipSender+2,ipAdressToString@ip+2
 16757  001B76  C14D  F076         	movff	arp_probe@ipSender+3,ipAdressToString@ip+3
 16758  001B7A  ECF3  F013         	call	_ipAdressToString	;wreg free
 16759  001B7E  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
 16760  001B82  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
 16761  001B86  EC27  F027         	call	_UARTTransmitText	;wreg free
 16762                           
 16763                           ;arp.c: 299: UARTTransmitText(")\n\r");
 16764  001B8A  0EEA               	movlw	low STR_44
 16765  001B8C  0100               	movlb	0	; () banked
 16766  001B8E  6F98               	movwf	UARTTransmitText@str& (0+255),b
 16767  001B90  0E7F               	movlw	high STR_44
 16768  001B92  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 16769  001B94  EC27  F027         	call	_UARTTransmitText	;wreg free
 16770                           
 16771                           ;arp.c: 301: arp_sendRequest(ipSender, ipTarget);
 16772  001B98  C14A  F100         	movff	arp_probe@ipSender,arp_sendRequest@ipSender
 16773  001B9C  C14B  F101         	movff	arp_probe@ipSender+1,arp_sendRequest@ipSender+1
 16774  001BA0  C14C  F102         	movff	arp_probe@ipSender+2,arp_sendRequest@ipSender+2
 16775  001BA4  C14D  F103         	movff	arp_probe@ipSender+3,arp_sendRequest@ipSender+3
 16776  001BA8  C134  F104         	movff	arp_probe@ipTarget,arp_sendRequest@ipTarget
 16777  001BAC  C135  F105         	movff	arp_probe@ipTarget+1,arp_sendRequest@ipTarget+1
 16778  001BB0  C136  F106         	movff	arp_probe@ipTarget+2,arp_sendRequest@ipTarget+2
 16779  001BB4  C137  F107         	movff	arp_probe@ipTarget+3,arp_sendRequest@ipTarget+3
 16780  001BB8  EC15  F022         	call	_arp_sendRequest	;wreg free
 16781  001BBC                     l1008:
 16782                           
 16783                           ;arp.c: 302: }
 16784                           ;arp.c: 303: if (probeCounter >= 3u) {
 16785  001BBC  0E02               	movlw	2
 16786  001BBE  0101               	movlb	1	; () banked
 16787  001BC0  65D3               	cpfsgt	arp_probe@probeCounter& (0+255),b
 16788  001BC2  D008               	goto	l1009
 16789                           
 16790                           ; BSR set to: 1
 16791                           ;arp.c: 304: probeCounter = 0;
 16792  001BC4  0E00               	movlw	0
 16793  001BC6  6FD3               	movwf	arp_probe@probeCounter& (0+255),b
 16794                           
 16795                           ;arp.c: 305: state = PREPARING_PROBE;
 16796  001BC8  0E00               	movlw	0
 16797  001BCA  6FD2               	movwf	arp_probe@state& (0+255),b
 16798                           
 16799                           ;arp.c: 306: err.code = ERROR_ARP_MAXIMUM_NUMBER_OF_PROBES_REACHED;
 16800  001BCC  0E01               	movlw	1
 16801  001BCE  6F50               	movwf	(arp_probe@err+2)& (0+255),b
 16802  001BD0  0E93               	movlw	147
 16803  001BD2  D00D               	goto	L8
 16804  001BD4                     l1009:
 16805                           
 16806                           ; BSR set to: 1
 16807                           ;arp.c: 308: err.code = ERROR_ARP_WAITING;
 16808                           
 16809                           ; BSR set to: 1
 16810  001BD4  0E01               	movlw	1
 16811  001BD6  6F50               	movwf	(arp_probe@err+2)& (0+255),b
 16812  001BD8  0E91               	movlw	145
 16813  001BDA  6F4F               	movwf	(arp_probe@err+1)& (0+255),b
 16814                           
 16815                           ; BSR set to: 1
 16816                           ;arp.c: 309: probeCounter++;
 16817  001BDC  2BD3               	incf	arp_probe@probeCounter& (0+255),f,b
 16818                           
 16819                           ; BSR set to: 1
 16820                           ;arp.c: 310: }
 16821                           ;arp.c: 311: }
 16822                           ;arp.c: 312: break;
 16823                           
 16824                           ; BSR set to: 1
 16825  001BDE  D017               	goto	l1001
 16826  001BE0                     
 16827                           ; BSR set to: 1
 16828                           ;arp.c: 314: probeCounter = 0;
 16829                           
 16830                           ; BSR set to: 1
 16831  001BE0  0E00               	movlw	0
 16832  001BE2  6FD3               	movwf	arp_probe@probeCounter& (0+255),b
 16833                           
 16834                           ;arp.c: 315: state = PREPARING_PROBE;
 16835  001BE4  0E00               	movlw	0
 16836  001BE6  6FD2               	movwf	arp_probe@state& (0+255),b
 16837                           
 16838                           ;arp.c: 316: err.code = ERROR_ARP_IPv4_ADDRESS_CONFLICT;
 16839  001BE8  0E01               	movlw	1
 16840  001BEA  6F50               	movwf	(arp_probe@err+2)& (0+255),b
 16841  001BEC  0E96               	movlw	150
 16842  001BEE                     L8:
 16843  001BEE  6F4F               	movwf	(arp_probe@err+1)& (0+255),b
 16844                           
 16845                           ;arp.c: 317: }
 16846  001BF0  D00E               	goto	l1001
 16847  001BF2                     l999:
 16848                           
 16849                           ; BSR set to: 1
 16850  001BF2  0101               	movlb	1	; () banked
 16851  001BF4  51D2               	movf	arp_probe@state& (0+255),w,b
 16852                           
 16853                           ; Switch size 1, requested type "space"
 16854                           ; Number of cases is 4, Range of values is 0 to 3
 16855                           ; switch strategies available:
 16856                           ; Name         Instructions Cycles
 16857                           ; simple_byte           13     7 (average)
 16858                           ;	Chosen strategy is simple_byte
 16859  001BF6  0A00               	xorlw	0	; case 0
 16860  001BF8  B4D8               	btfsc	status,2,c
 16861  001BFA  D6D5               	goto	l1000
 16862  001BFC  0A01               	xorlw	1	; case 1
 16863  001BFE  B4D8               	btfsc	status,2,c
 16864  001C00  D6FB               	goto	l1002
 16865  001C02  0A03               	xorlw	3	; case 2
 16866  001C04  B4D8               	btfsc	status,2,c
 16867  001C06  D750               	goto	l1004
 16868  001C08  0A01               	xorlw	1	; case 3
 16869  001C0A  B4D8               	btfsc	status,2,c
 16870  001C0C  D7E9               	goto	l1011
 16871  001C0E                     l1001:
 16872                           
 16873                           ; BSR set to: 1
 16874                           ;arp.c: 318: return err;
 16875  001C0E  C14E  F134         	movff	arp_probe@err,?_arp_probe
 16876  001C12  C14F  F135         	movff	arp_probe@err+1,?_arp_probe+1
 16877  001C16  C150  F136         	movff	arp_probe@err+2,?_arp_probe+2
 16878                           
 16879                           ; BSR set to: 1
 16880  001C1A  0012               	return		;funcret
 16881  001C1C                     __end_of_arp_probe:
 16882                           	opt stack 0
 16883                           tblptru	equ	0xFF8
 16884                           tblptrh	equ	0xFF7
 16885                           tblptrl	equ	0xFF6
 16886                           tablat	equ	0xFF5
 16887                           prodh	equ	0xFF4
 16888                           prodl	equ	0xFF3
 16889                           intcon	equ	0xFF2
 16890                           intcon3	equ	0xFF0
 16891                           indf0	equ	0xFEF
 16892                           postinc0	equ	0xFEE
 16893                           plusw0	equ	0xFEB
 16894                           fsr0h	equ	0xFEA
 16895                           fsr0l	equ	0xFE9
 16896                           wreg	equ	0xFE8
 16897                           indf1	equ	0xFE7
 16898                           postinc1	equ	0xFE6
 16899                           postdec1	equ	0xFE5
 16900                           plusw1	equ	0xFE3
 16901                           fsr1h	equ	0xFE2
 16902                           fsr1l	equ	0xFE1
 16903                           indf2	equ	0xFDF
 16904                           postinc2	equ	0xFDE
 16905                           postdec2	equ	0xFDD
 16906                           plusw2	equ	0xFDB
 16907                           fsr2h	equ	0xFDA
 16908                           fsr2l	equ	0xFD9
 16909                           status	equ	0xFD8
 16910                           
 16911 ;; *************** function _rand *****************
 16912 ;; Defined at:
 16913 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
 16914 ;; Parameters:    Size  Location     Type
 16915 ;;		None
 16916 ;; Auto vars:     Size  Location     Type
 16917 ;;		None
 16918 ;; Return value:  Size  Location     Type
 16919 ;;                  2   12[BANK0 ] int 
 16920 ;; Registers used:
 16921 ;;		wreg, status,2, status,0, cstack
 16922 ;; Tracked objects:
 16923 ;;		On entry : 0/0
 16924 ;;		On exit  : 0/0
 16925 ;;		Unchanged: 0/0
 16926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16927 ;;      Params:         0       2       0       0       0       0       0       0       0
 16928 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16929 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16930 ;;      Totals:         0       2       0       0       0       0       0       0       0
 16931 ;;Total ram usage:        2 bytes
 16932 ;; Hardware stack levels used:    1
 16933 ;; Hardware stack levels required when called:    5
 16934 ;; This function calls:
 16935 ;;		___lmul
 16936 ;; This function is called by:
 16937 ;;		_arp_probe
 16938 ;;		_ipv4_generateAutoIP
 16939 ;; This function uses a non-reentrant model
 16940 ;;
 16941                           
 16942                           	psect	text63
 16943  004DF8                     __ptext63:
 16944                           	opt stack 0
 16945  004DF8                     _rand:
 16946                           	opt stack 24
 16947                           
 16948                           ; BSR set to: 1
 16949                           ;incstack = 0
 16950  004DF8  C048  F060         	movff	_randx,___lmul@multiplier
 16951  004DFC  C049  F061         	movff	_randx+1,___lmul@multiplier+1
 16952  004E00  C04A  F062         	movff	_randx+2,___lmul@multiplier+2
 16953  004E04  C04B  F063         	movff	_randx+3,___lmul@multiplier+3
 16954  004E08  0E6D               	movlw	109
 16955  004E0A  0100               	movlb	0	; () banked
 16956  004E0C  6F64               	movwf	___lmul@multiplicand& (0+255),b
 16957  004E0E  0E4E               	movlw	78
 16958  004E10  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 16959  004E12  0EC6               	movlw	198
 16960  004E14  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16961  004E16  0E41               	movlw	65
 16962  004E18  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16963  004E1A  ECD0  F026         	call	___lmul	;wreg free
 16964  004E1E  C060  F048         	movff	?___lmul,_randx
 16965  004E22  C061  F049         	movff	?___lmul+1,_randx+1
 16966  004E26  C062  F04A         	movff	?___lmul+2,_randx+2
 16967  004E2A  C063  F04B         	movff	?___lmul+3,_randx+3
 16968  004E2E  0E39               	movlw	57
 16969  004E30  2648               	addwf	_randx,f,c
 16970  004E32  0E30               	movlw	48
 16971  004E34  2249               	addwfc	_randx+1,f,c
 16972  004E36  0E00               	movlw	0
 16973  004E38  224A               	addwfc	_randx+2,f,c
 16974  004E3A  0E00               	movlw	0
 16975  004E3C  224B               	addwfc	_randx+3,f,c
 16976  004E3E  0EFF               	movlw	255
 16977  004E40  144A               	andwf	_randx+2,w,c
 16978  004E42  0100               	movlb	0	; () banked
 16979  004E44  6F6C               	movwf	?_rand& (0+255),b
 16980  004E46  0E7F               	movlw	127
 16981  004E48  144B               	andwf	_randx+3,w,c
 16982  004E4A  6F6D               	movwf	(?_rand+1)& (0+255),b
 16983  004E4C  0012               	return	
 16984  004E4E                     __end_of_rand:
 16985                           	opt stack 0
 16986                           tblptru	equ	0xFF8
 16987                           tblptrh	equ	0xFF7
 16988                           tblptrl	equ	0xFF6
 16989                           tablat	equ	0xFF5
 16990                           prodh	equ	0xFF4
 16991                           prodl	equ	0xFF3
 16992                           intcon	equ	0xFF2
 16993                           intcon3	equ	0xFF0
 16994                           indf0	equ	0xFEF
 16995                           postinc0	equ	0xFEE
 16996                           plusw0	equ	0xFEB
 16997                           fsr0h	equ	0xFEA
 16998                           fsr0l	equ	0xFE9
 16999                           wreg	equ	0xFE8
 17000                           indf1	equ	0xFE7
 17001                           postinc1	equ	0xFE6
 17002                           postdec1	equ	0xFE5
 17003                           plusw1	equ	0xFE3
 17004                           fsr1h	equ	0xFE2
 17005                           fsr1l	equ	0xFE1
 17006                           indf2	equ	0xFDF
 17007                           postinc2	equ	0xFDE
 17008                           postdec2	equ	0xFDD
 17009                           plusw2	equ	0xFDB
 17010                           fsr2h	equ	0xFDA
 17011                           fsr2l	equ	0xFD9
 17012                           status	equ	0xFD8
 17013                           
 17014 ;; *************** function ___lmul *****************
 17015 ;; Defined at:
 17016 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 17017 ;; Parameters:    Size  Location     Type
 17018 ;;  multiplier      4    0[BANK0 ] unsigned long 
 17019 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 17020 ;; Auto vars:     Size  Location     Type
 17021 ;;  product         4    8[BANK0 ] unsigned long 
 17022 ;; Return value:  Size  Location     Type
 17023 ;;                  4    0[BANK0 ] unsigned long 
 17024 ;; Registers used:
 17025 ;;		wreg, status,2, status,0
 17026 ;; Tracked objects:
 17027 ;;		On entry : 0/0
 17028 ;;		On exit  : 0/0
 17029 ;;		Unchanged: 0/0
 17030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17031 ;;      Params:         0       8       0       0       0       0       0       0       0
 17032 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17033 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17034 ;;      Totals:         0      12       0       0       0       0       0       0       0
 17035 ;;Total ram usage:       12 bytes
 17036 ;; Hardware stack levels used:    1
 17037 ;; Hardware stack levels required when called:    4
 17038 ;; This function calls:
 17039 ;;		Nothing
 17040 ;; This function is called by:
 17041 ;;		_rand
 17042 ;; This function uses a non-reentrant model
 17043 ;;
 17044                           
 17045                           	psect	text64
 17046  004DA0                     __ptext64:
 17047                           	opt stack 0
 17048  004DA0                     ___lmul:
 17049                           	opt stack 24
 17050                           
 17051                           ; BSR set to: 0
 17052                           ;incstack = 0
 17053  004DA0  0E00               	movlw	0
 17054  004DA2  0100               	movlb	0	; () banked
 17055  004DA4  6F68               	movwf	___lmul@product& (0+255),b
 17056  004DA6  0E00               	movlw	0
 17057  004DA8  6F69               	movwf	(___lmul@product+1)& (0+255),b
 17058  004DAA  0E00               	movlw	0
 17059  004DAC  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 17060  004DAE  0E00               	movlw	0
 17061  004DB0  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 17062  004DB2                     
 17063                           ; BSR set to: 0
 17064                           
 17065                           ; BSR set to: 0
 17066  004DB2  A160               	btfss	___lmul@multiplier& (0+255),0,b
 17067  004DB4  D008               	goto	l1242
 17068                           
 17069                           ; BSR set to: 0
 17070  004DB6  5164               	movf	___lmul@multiplicand& (0+255),w,b
 17071  004DB8  2768               	addwf	___lmul@product& (0+255),f,b
 17072  004DBA  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 17073  004DBC  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 17074  004DBE  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 17075  004DC0  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 17076  004DC2  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 17077  004DC4  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 17078  004DC6                     l1242:
 17079                           
 17080                           ; BSR set to: 0
 17081                           
 17082                           ; BSR set to: 0
 17083  004DC6  90D8               	bcf	status,0,c
 17084  004DC8  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 17085  004DCA  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 17086  004DCC  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 17087  004DCE  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 17088                           
 17089                           ; BSR set to: 0
 17090  004DD0  90D8               	bcf	status,0,c
 17091  004DD2  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 17092  004DD4  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 17093  004DD6  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 17094  004DD8  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 17095  004DDA  5160               	movf	___lmul@multiplier& (0+255),w,b
 17096  004DDC  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 17097  004DDE  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 17098  004DE0  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 17099  004DE2  A4D8               	btfss	status,2,c
 17100  004DE4  D7E6               	goto	l1241
 17101                           
 17102                           ; BSR set to: 0
 17103  004DE6  C068  F060         	movff	___lmul@product,?___lmul
 17104  004DEA  C069  F061         	movff	___lmul@product+1,?___lmul+1
 17105  004DEE  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 17106  004DF2  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 17107                           
 17108                           ; BSR set to: 0
 17109  004DF6  0012               	return		;funcret
 17110  004DF8                     __end_of___lmul:
 17111                           	opt stack 0
 17112                           tblptru	equ	0xFF8
 17113                           tblptrh	equ	0xFF7
 17114                           tblptrl	equ	0xFF6
 17115                           tablat	equ	0xFF5
 17116                           prodh	equ	0xFF4
 17117                           prodl	equ	0xFF3
 17118                           intcon	equ	0xFF2
 17119                           intcon3	equ	0xFF0
 17120                           indf0	equ	0xFEF
 17121                           postinc0	equ	0xFEE
 17122                           plusw0	equ	0xFEB
 17123                           fsr0h	equ	0xFEA
 17124                           fsr0l	equ	0xFE9
 17125                           wreg	equ	0xFE8
 17126                           indf1	equ	0xFE7
 17127                           postinc1	equ	0xFE6
 17128                           postdec1	equ	0xFE5
 17129                           plusw1	equ	0xFE3
 17130                           fsr1h	equ	0xFE2
 17131                           fsr1l	equ	0xFE1
 17132                           indf2	equ	0xFDF
 17133                           postinc2	equ	0xFDE
 17134                           postdec2	equ	0xFDD
 17135                           plusw2	equ	0xFDB
 17136                           fsr2h	equ	0xFDA
 17137                           fsr2l	equ	0xFD9
 17138                           status	equ	0xFD8
 17139                           
 17140 ;; *************** function _ipv4_setToAllZero *****************
 17141 ;; Defined at:
 17142 ;;		line 320 in file "src/stack/protocols/ipv4.c"
 17143 ;; Parameters:    Size  Location     Type
 17144 ;;  ip              2    0[BANK0 ] PTR struct ipv4_address
 17145 ;;		 -> ipPreliminarySource(4), ipSource(4), arp_init@ip(4), arp_probe@ipSender(4), 
 17146 ;; Auto vars:     Size  Location     Type
 17147 ;;  i               1    2[BANK0 ] unsigned char 
 17148 ;; Return value:  Size  Location     Type
 17149 ;;                  1    wreg      void 
 17150 ;; Registers used:
 17151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17152 ;; Tracked objects:
 17153 ;;		On entry : 0/0
 17154 ;;		On exit  : 0/0
 17155 ;;		Unchanged: 0/0
 17156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17157 ;;      Params:         0       2       0       0       0       0       0       0       0
 17158 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17159 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17160 ;;      Totals:         0       3       0       0       0       0       0       0       0
 17161 ;;Total ram usage:        3 bytes
 17162 ;; Hardware stack levels used:    1
 17163 ;; Hardware stack levels required when called:    4
 17164 ;; This function calls:
 17165 ;;		Nothing
 17166 ;; This function is called by:
 17167 ;;		_arp_probe
 17168 ;;		_arp_init
 17169 ;;		_ipv4_init
 17170 ;; This function uses a non-reentrant model
 17171 ;;
 17172                           
 17173                           	psect	text65
 17174  0055E6                     __ptext65:
 17175                           	opt stack 0
 17176  0055E6                     _ipv4_setToAllZero:
 17177                           	opt stack 24
 17178                           
 17179                           ;ipv4.c: 321: for (uint8_t i = 0; i < 4; i++) {
 17180                           
 17181                           ; BSR set to: 0
 17182                           ;incstack = 0
 17183  0055E6  0E00               	movlw	0
 17184  0055E8  0100               	movlb	0	; () banked
 17185  0055EA  6F62               	movwf	ipv4_setToAllZero@i& (0+255),b
 17186  0055EC                     l9619:
 17187                           
 17188                           ; BSR set to: 0
 17189  0055EC  0E03               	movlw	3
 17190  0055EE  6562               	cpfsgt	ipv4_setToAllZero@i& (0+255),b
 17191  0055F0  D001               	goto	l1213
 17192  0055F2  0012               	return	
 17193  0055F4                     l1213:
 17194                           
 17195                           ; BSR set to: 0
 17196                           ;ipv4.c: 322: ip->address[i] = 0x00;
 17197                           
 17198                           ; BSR set to: 0
 17199  0055F4  5162               	movf	ipv4_setToAllZero@i& (0+255),w,b
 17200  0055F6  0D01               	mullw	1
 17201  0055F8  50F3               	movf	prodl,w,c
 17202  0055FA  2560               	addwf	ipv4_setToAllZero@ip& (0+255),w,b
 17203  0055FC  6ED9               	movwf	fsr2l,c
 17204  0055FE  50F4               	movf	prodh,w,c
 17205  005600  2161               	addwfc	(ipv4_setToAllZero@ip+1)& (0+255),w,b
 17206  005602  6EDA               	movwf	fsr2h,c
 17207  005604  0E00               	movlw	0
 17208  005606  6EDF               	movwf	indf2,c
 17209                           
 17210                           ; BSR set to: 0
 17211  005608  2B62               	incf	ipv4_setToAllZero@i& (0+255),f,b
 17212  00560A  D7F0               	goto	l9619
 17213  00560C                     __end_of_ipv4_setToAllZero:
 17214                           	opt stack 0
 17215                           tblptru	equ	0xFF8
 17216                           tblptrh	equ	0xFF7
 17217                           tblptrl	equ	0xFF6
 17218                           tablat	equ	0xFF5
 17219                           prodh	equ	0xFF4
 17220                           prodl	equ	0xFF3
 17221                           intcon	equ	0xFF2
 17222                           intcon3	equ	0xFF0
 17223                           indf0	equ	0xFEF
 17224                           postinc0	equ	0xFEE
 17225                           plusw0	equ	0xFEB
 17226                           fsr0h	equ	0xFEA
 17227                           fsr0l	equ	0xFE9
 17228                           wreg	equ	0xFE8
 17229                           indf1	equ	0xFE7
 17230                           postinc1	equ	0xFE6
 17231                           postdec1	equ	0xFE5
 17232                           plusw1	equ	0xFE3
 17233                           fsr1h	equ	0xFE2
 17234                           fsr1l	equ	0xFE1
 17235                           indf2	equ	0xFDF
 17236                           postinc2	equ	0xFDE
 17237                           postdec2	equ	0xFDD
 17238                           plusw2	equ	0xFDB
 17239                           fsr2h	equ	0xFDA
 17240                           fsr2l	equ	0xFD9
 17241                           status	equ	0xFD8
 17242                           
 17243 ;; *************** function _arp_gratuitous *****************
 17244 ;; Defined at:
 17245 ;;		line 321 in file "src/stack/protocols/arp.c"
 17246 ;; Parameters:    Size  Location     Type
 17247 ;;  ip              4   52[BANK1 ] struct ipv4_address
 17248 ;;  link            1   56[BANK1 ] enum E233
 17249 ;; Auto vars:     Size  Location     Type
 17250 ;;  err             3  157[BANK0 ] struct error
 17251 ;;  index           1  156[BANK0 ] unsigned char 
 17252 ;; Return value:  Size  Location     Type
 17253 ;;                  3   52[BANK1 ] struct error
 17254 ;; Registers used:
 17255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17256 ;; Tracked objects:
 17257 ;;		On entry : 0/0
 17258 ;;		On exit  : 0/0
 17259 ;;		Unchanged: 0/0
 17260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17261 ;;      Params:         0       0       5       0       0       0       0       0       0
 17262 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17263 ;;      Temps:          0       0       8       0       0       0       0       0       0
 17264 ;;      Totals:         0       4      13       0       0       0       0       0       0
 17265 ;;Total ram usage:       17 bytes
 17266 ;; Hardware stack levels used:    1
 17267 ;; Hardware stack levels required when called:   11
 17268 ;; This function calls:
 17269 ;;		_UARTTransmitText
 17270 ;;		_arp_checkForEntry
 17271 ;;		_arp_sendRequest
 17272 ;;		_getMillis
 17273 ;;		_ipAdressToString
 17274 ;; This function is called by:
 17275 ;;		_arp_background
 17276 ;; This function uses a non-reentrant model
 17277 ;;
 17278                           
 17279                           	psect	text66
 17280  002374                     __ptext66:
 17281                           	opt stack 0
 17282  002374                     _arp_gratuitous:
 17283                           	opt stack 17
 17284                           
 17285                           ;arp.c: 322: uint8_t static announceCounter = 0;
 17286                           ;arp.c: 323: uint8_t static state = 0;
 17287                           ;arp.c: 324: time_t static timeStart = 0;
 17288                           ;arp.c: 325: uint8_t index;
 17289                           ;arp.c: 326: error_t err;
 17290                           ;arp.c: 328: enum states {
 17291                           ;arp.c: 329: INIT, WAIT_FOR_ANNOUNCE, ANNOUNCING, ENTRY_FOUND
 17292                           ;arp.c: 330: };
 17293                           ;arp.c: 331: err.module = ERROR_MODULE_ARP;
 17294                           
 17295                           ; BSR set to: 0
 17296                           ;incstack = 0
 17297  002374  0E03               	movlw	3
 17298  002376  0100               	movlb	0	; () banked
 17299  002378  6FFD               	movwf	arp_gratuitous@err& (0+255),b
 17300                           
 17301                           ;arp.c: 332: err.code = ERROR_ARP_WAITING;
 17302  00237A  0E01               	movlw	1
 17303  00237C  6FFF               	movwf	(arp_gratuitous@err+2)& (0+255),b
 17304  00237E  0E91               	movlw	145
 17305  002380  6FFE               	movwf	(arp_gratuitous@err+1)& (0+255),b
 17306                           
 17307                           ;arp.c: 334: if (link == NO_LINK) {
 17308  002382  0101               	movlb	1	; () banked
 17309  002384  5138               	movf	arp_gratuitous@link& (0+255),w,b
 17310  002386  A4D8               	btfss	status,2,c
 17311  002388  D010               	goto	l1020
 17312                           
 17313                           ; BSR set to: 1
 17314                           ;arp.c: 335: announceCounter = 0;
 17315  00238A  0E00               	movlw	0
 17316  00238C  6FD1               	movwf	arp_gratuitous@announceCounter& (0+255),b
 17317                           
 17318                           ;arp.c: 336: state = INIT;
 17319  00238E  0E00               	movlw	0
 17320  002390  6FD0               	movwf	arp_gratuitous@state& (0+255),b
 17321                           
 17322                           ;arp.c: 337: err.code = ERROR_ARP_CONNECTION_FAILED;
 17323  002392  0E01               	movlw	1
 17324  002394  0100               	movlb	0	; () banked
 17325  002396  6FFF               	movwf	(arp_gratuitous@err+2)& (0+255),b
 17326  002398  0E97               	movlw	151
 17327  00239A  6FFE               	movwf	(arp_gratuitous@err+1)& (0+255),b
 17328                           
 17329                           ; BSR set to: 0
 17330                           ;arp.c: 338: return err;
 17331  00239C  C0FD  F134         	movff	arp_gratuitous@err,?_arp_gratuitous
 17332  0023A0  C0FE  F135         	movff	arp_gratuitous@err+1,?_arp_gratuitous+1
 17333  0023A4  C0FF  F136         	movff	arp_gratuitous@err+2,?_arp_gratuitous+2
 17334                           
 17335                           ; BSR set to: 0
 17336  0023A8  0012               	return	
 17337  0023AA                     l1020:
 17338                           
 17339                           ;arp.c: 339: }
 17340                           ;arp.c: 341: if (arp_checkForEntry(ip, &index)) {
 17341                           
 17342                           ; BSR set to: 0
 17343  0023AA  C134  F067         	movff	arp_gratuitous@ip,arp_checkForEntry@ip
 17344  0023AE  C135  F068         	movff	arp_gratuitous@ip+1,arp_checkForEntry@ip+1
 17345  0023B2  C136  F069         	movff	arp_gratuitous@ip+2,arp_checkForEntry@ip+2
 17346  0023B6  C137  F06A         	movff	arp_gratuitous@ip+3,arp_checkForEntry@ip+3
 17347  0023BA  0EFC               	movlw	low arp_gratuitous@index
 17348  0023BC  0100               	movlb	0	; () banked
 17349  0023BE  6F6B               	movwf	arp_checkForEntry@index& (0+255),b
 17350  0023C0  0E00               	movlw	high arp_gratuitous@index
 17351  0023C2  6F6C               	movwf	(arp_checkForEntry@index+1)& (0+255),b
 17352  0023C4  ECC5  F020         	call	_arp_checkForEntry	;wreg free
 17353  0023C8  0900               	iorlw	0
 17354  0023CA  B4D8               	btfsc	status,2,c
 17355  0023CC  D0E0               	goto	l1023
 17356                           
 17357                           ;arp.c: 342: state = ENTRY_FOUND;
 17358  0023CE  0E03               	movlw	3
 17359  0023D0  0101               	movlb	1	; () banked
 17360  0023D2  6FD0               	movwf	arp_gratuitous@state& (0+255),b
 17361                           
 17362                           ; BSR set to: 1
 17363                           ;arp.c: 343: }
 17364                           ;arp.c: 345: switch (state) {
 17365  0023D4  D0DC               	goto	l1023
 17366  0023D6                     
 17367                           ; BSR set to: 1
 17368                           ;arp.c: 347: err.code = ERROR_ARP_WAITING;
 17369                           
 17370                           ; BSR set to: 1
 17371  0023D6  0E01               	movlw	1
 17372  0023D8  0100               	movlb	0	; () banked
 17373  0023DA  6FFF               	movwf	(arp_gratuitous@err+2)& (0+255),b
 17374  0023DC  0E91               	movlw	145
 17375  0023DE  6FFE               	movwf	(arp_gratuitous@err+1)& (0+255),b
 17376                           
 17377                           ; BSR set to: 0
 17378                           ;arp.c: 348: timeStart = getMillis();
 17379  0023E0  ECE5  F02B         	call	_getMillis	;wreg free
 17380  0023E4  C060  F1CA         	movff	?_getMillis,arp_gratuitous@timeStart
 17381  0023E8  C061  F1CB         	movff	?_getMillis+1,arp_gratuitous@timeStart+1
 17382  0023EC  C062  F1CC         	movff	?_getMillis+2,arp_gratuitous@timeStart+2
 17383  0023F0  C063  F1CD         	movff	?_getMillis+3,arp_gratuitous@timeStart+3
 17384                           
 17385                           ;arp.c: 349: state = WAIT_FOR_ANNOUNCE;
 17386  0023F4  0E01               	movlw	1
 17387  0023F6  0101               	movlb	1	; () banked
 17388  0023F8  6FD0               	movwf	arp_gratuitous@state& (0+255),b
 17389                           
 17390                           ;arp.c: 350: break;
 17391  0023FA  D0D7               	goto	l1025
 17392  0023FC                     
 17393                           ; BSR set to: 1
 17394                           ;arp.c: 352: err.code = ERROR_ARP_WAITING;
 17395                           
 17396                           ; BSR set to: 1
 17397  0023FC  0E01               	movlw	1
 17398  0023FE  0100               	movlb	0	; () banked
 17399  002400  6FFF               	movwf	(arp_gratuitous@err+2)& (0+255),b
 17400  002402  0E91               	movlw	145
 17401  002404  6FFE               	movwf	(arp_gratuitous@err+1)& (0+255),b
 17402                           
 17403                           ; BSR set to: 0
 17404                           ;arp.c: 353: if ((getMillis() - timeStart) > 2000u) {
 17405  002406  C1CA  F139         	movff	arp_gratuitous@timeStart,??_arp_gratuitous
 17406  00240A  C1CB  F13A         	movff	arp_gratuitous@timeStart+1,??_arp_gratuitous+1
 17407  00240E  C1CC  F13B         	movff	arp_gratuitous@timeStart+2,??_arp_gratuitous+2
 17408  002412  C1CD  F13C         	movff	arp_gratuitous@timeStart+3,??_arp_gratuitous+3
 17409  002416  0101               	movlb	1	; () banked
 17410  002418  1F39               	comf	??_arp_gratuitous& (0+255),f,b
 17411  00241A  1F3A               	comf	(??_arp_gratuitous+1)& (0+255),f,b
 17412  00241C  1F3B               	comf	(??_arp_gratuitous+2)& (0+255),f,b
 17413  00241E  1F3C               	comf	(??_arp_gratuitous+3)& (0+255),f,b
 17414  002420  2B39               	incf	??_arp_gratuitous& (0+255),f,b
 17415  002422  0E00               	movlw	0
 17416  002424  233A               	addwfc	(??_arp_gratuitous+1)& (0+255),f,b
 17417  002426  233B               	addwfc	(??_arp_gratuitous+2)& (0+255),f,b
 17418  002428  233C               	addwfc	(??_arp_gratuitous+3)& (0+255),f,b
 17419  00242A  ECE5  F02B         	call	_getMillis	;wreg free
 17420  00242E  0101               	movlb	1	; () banked
 17421  002430  5139               	movf	??_arp_gratuitous& (0+255),w,b
 17422  002432  0100               	movlb	0	; () banked
 17423  002434  2560               	addwf	?_getMillis& (0+255),w,b
 17424  002436  0101               	movlb	1	; () banked
 17425  002438  6F3D               	movwf	(??_arp_gratuitous+4)& (0+255),b
 17426  00243A  513A               	movf	(??_arp_gratuitous+1)& (0+255),w,b
 17427  00243C  0100               	movlb	0	; () banked
 17428  00243E  2161               	addwfc	(?_getMillis+1)& (0+255),w,b
 17429  002440  0101               	movlb	1	; () banked
 17430  002442  6F3E               	movwf	(??_arp_gratuitous+5)& (0+255),b
 17431  002444  513B               	movf	(??_arp_gratuitous+2)& (0+255),w,b
 17432  002446  0100               	movlb	0	; () banked
 17433  002448  2162               	addwfc	(?_getMillis+2)& (0+255),w,b
 17434  00244A  0101               	movlb	1	; () banked
 17435  00244C  6F3F               	movwf	(??_arp_gratuitous+6)& (0+255),b
 17436  00244E  513C               	movf	(??_arp_gratuitous+3)& (0+255),w,b
 17437  002450  0100               	movlb	0	; () banked
 17438  002452  2163               	addwfc	(?_getMillis+3)& (0+255),w,b
 17439  002454  0101               	movlb	1	; () banked
 17440  002456  6F40               	movwf	(??_arp_gratuitous+7)& (0+255),b
 17441  002458  5140               	movf	(??_arp_gratuitous+7)& (0+255),w,b
 17442  00245A  113F               	iorwf	(??_arp_gratuitous+6)& (0+255),w,b
 17443  00245C  E106               	bnz	u11680
 17444  00245E  0ED1               	movlw	209
 17445  002460  5D3D               	subwf	(??_arp_gratuitous+4)& (0+255),w,b
 17446  002462  0E07               	movlw	7
 17447  002464  593E               	subwfb	(??_arp_gratuitous+5)& (0+255),w,b
 17448  002466  A0D8               	btfss	status,0,c
 17449  002468  D0A0               	goto	l1025
 17450  00246A                     u11680:
 17451                           
 17452                           ; BSR set to: 1
 17453                           ;arp.c: 354: state = ANNOUNCING;
 17454  00246A  0E02               	movlw	2
 17455  00246C  6FD0               	movwf	arp_gratuitous@state& (0+255),b
 17456                           
 17457                           ;arp.c: 355: announceCounter = 0;
 17458  00246E  0E00               	movlw	0
 17459  002470  6FD1               	movwf	arp_gratuitous@announceCounter& (0+255),b
 17460                           
 17461                           ; BSR set to: 1
 17462                           ;arp.c: 356: }
 17463                           ;arp.c: 357: break;
 17464  002472  D09B               	goto	l1025
 17465  002474                     
 17466                           ; BSR set to: 1
 17467                           ;arp.c: 359: err.code = ERROR_ARP_WAITING;
 17468                           
 17469                           ; BSR set to: 1
 17470  002474  0E01               	movlw	1
 17471  002476  0100               	movlb	0	; () banked
 17472  002478  6FFF               	movwf	(arp_gratuitous@err+2)& (0+255),b
 17473  00247A  0E91               	movlw	145
 17474  00247C  6FFE               	movwf	(arp_gratuitous@err+1)& (0+255),b
 17475                           
 17476                           ;arp.c: 360: if ((announceCounter == 0) || (getMillis() - timeStart) > 2000u) {
 17477  00247E  0101               	movlb	1	; () banked
 17478  002480  51D1               	movf	arp_gratuitous@announceCounter& (0+255),w,b
 17479  002482  B4D8               	btfsc	status,2,c
 17480  002484  D031               	goto	u11700
 17481                           
 17482                           ; BSR set to: 1
 17483  002486  C1CA  F139         	movff	arp_gratuitous@timeStart,??_arp_gratuitous
 17484  00248A  C1CB  F13A         	movff	arp_gratuitous@timeStart+1,??_arp_gratuitous+1
 17485  00248E  C1CC  F13B         	movff	arp_gratuitous@timeStart+2,??_arp_gratuitous+2
 17486  002492  C1CD  F13C         	movff	arp_gratuitous@timeStart+3,??_arp_gratuitous+3
 17487  002496  1F39               	comf	??_arp_gratuitous& (0+255),f,b
 17488  002498  1F3A               	comf	(??_arp_gratuitous+1)& (0+255),f,b
 17489  00249A  1F3B               	comf	(??_arp_gratuitous+2)& (0+255),f,b
 17490  00249C  1F3C               	comf	(??_arp_gratuitous+3)& (0+255),f,b
 17491  00249E  2B39               	incf	??_arp_gratuitous& (0+255),f,b
 17492  0024A0  0E00               	movlw	0
 17493  0024A2  233A               	addwfc	(??_arp_gratuitous+1)& (0+255),f,b
 17494  0024A4  233B               	addwfc	(??_arp_gratuitous+2)& (0+255),f,b
 17495  0024A6  233C               	addwfc	(??_arp_gratuitous+3)& (0+255),f,b
 17496  0024A8  ECE5  F02B         	call	_getMillis	;wreg free
 17497  0024AC  0101               	movlb	1	; () banked
 17498  0024AE  5139               	movf	??_arp_gratuitous& (0+255),w,b
 17499  0024B0  0100               	movlb	0	; () banked
 17500  0024B2  2560               	addwf	?_getMillis& (0+255),w,b
 17501  0024B4  0101               	movlb	1	; () banked
 17502  0024B6  6F3D               	movwf	(??_arp_gratuitous+4)& (0+255),b
 17503  0024B8  513A               	movf	(??_arp_gratuitous+1)& (0+255),w,b
 17504  0024BA  0100               	movlb	0	; () banked
 17505  0024BC  2161               	addwfc	(?_getMillis+1)& (0+255),w,b
 17506  0024BE  0101               	movlb	1	; () banked
 17507  0024C0  6F3E               	movwf	(??_arp_gratuitous+5)& (0+255),b
 17508  0024C2  513B               	movf	(??_arp_gratuitous+2)& (0+255),w,b
 17509  0024C4  0100               	movlb	0	; () banked
 17510  0024C6  2162               	addwfc	(?_getMillis+2)& (0+255),w,b
 17511  0024C8  0101               	movlb	1	; () banked
 17512  0024CA  6F3F               	movwf	(??_arp_gratuitous+6)& (0+255),b
 17513  0024CC  513C               	movf	(??_arp_gratuitous+3)& (0+255),w,b
 17514  0024CE  0100               	movlb	0	; () banked
 17515  0024D0  2163               	addwfc	(?_getMillis+3)& (0+255),w,b
 17516  0024D2  0101               	movlb	1	; () banked
 17517  0024D4  6F40               	movwf	(??_arp_gratuitous+7)& (0+255),b
 17518  0024D6  5140               	movf	(??_arp_gratuitous+7)& (0+255),w,b
 17519  0024D8  113F               	iorwf	(??_arp_gratuitous+6)& (0+255),w,b
 17520  0024DA  E106               	bnz	l10027
 17521  0024DC  0ED1               	movlw	209
 17522  0024DE  5D3D               	subwf	(??_arp_gratuitous+4)& (0+255),w,b
 17523  0024E0  0E07               	movlw	7
 17524  0024E2  593E               	subwfb	(??_arp_gratuitous+5)& (0+255),w,b
 17525  0024E4  A0D8               	btfss	status,0,c
 17526  0024E6  D03C               	goto	l1029
 17527  0024E8                     u11700:
 17528  0024E8                     l10027:
 17529                           
 17530                           ; BSR set to: 1
 17531                           ;arp.c: 362: UARTTransmitText("[ARP]: Sending Gratuitous ARP request for ");
 17532  0024E8  0EEB               	movlw	low STR_84
 17533  0024EA  0100               	movlb	0	; () banked
 17534  0024EC  6F98               	movwf	UARTTransmitText@str& (0+255),b
 17535  0024EE  0E7A               	movlw	high STR_84
 17536  0024F0  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 17537  0024F2  EC27  F027         	call	_UARTTransmitText	;wreg free
 17538                           
 17539                           ;arp.c: 363: UARTTransmitText(ipAdressToString(ip));
 17540  0024F6  C134  F073         	movff	arp_gratuitous@ip,ipAdressToString@ip
 17541  0024FA  C135  F074         	movff	arp_gratuitous@ip+1,ipAdressToString@ip+1
 17542  0024FE  C136  F075         	movff	arp_gratuitous@ip+2,ipAdressToString@ip+2
 17543  002502  C137  F076         	movff	arp_gratuitous@ip+3,ipAdressToString@ip+3
 17544  002506  ECF3  F013         	call	_ipAdressToString	;wreg free
 17545  00250A  C073  F098         	movff	?_ipAdressToString,UARTTransmitText@str
 17546  00250E  C074  F099         	movff	?_ipAdressToString+1,UARTTransmitText@str+1
 17547  002512  EC27  F027         	call	_UARTTransmitText	;wreg free
 17548                           
 17549                           ;arp.c: 364: UARTTransmitText("\n\r");
 17550  002516  0EEB               	movlw	low (STR_44+1)
 17551  002518  0100               	movlb	0	; () banked
 17552  00251A  6F98               	movwf	UARTTransmitText@str& (0+255),b
 17553  00251C  0E7F               	movlw	high (STR_44+1)
 17554  00251E  6F99               	movwf	(UARTTransmitText@str+1)& (0+255),b
 17555  002520  EC27  F027         	call	_UARTTransmitText	;wreg free
 17556                           
 17557                           ;arp.c: 366: timeStart = getMillis();
 17558  002524  ECE5  F02B         	call	_getMillis	;wreg free
 17559  002528  C060  F1CA         	movff	?_getMillis,arp_gratuitous@timeStart
 17560  00252C  C061  F1CB         	movff	?_getMillis+1,arp_gratuitous@timeStart+1
 17561  002530  C062  F1CC         	movff	?_getMillis+2,arp_gratuitous@timeStart+2
 17562  002534  C063  F1CD         	movff	?_getMillis+3,arp_gratuitous@timeStart+3
 17563                           
 17564                           ;arp.c: 367: arp_sendRequest(ip, ip);
 17565  002538  C134  F100         	movff	arp_gratuitous@ip,arp_sendRequest@ipSender
 17566  00253C  C135  F101         	movff	arp_gratuitous@ip+1,arp_sendRequest@ipSender+1
 17567  002540  C136  F102         	movff	arp_gratuitous@ip+2,arp_sendRequest@ipSender+2
 17568  002544  C137  F103         	movff	arp_gratuitous@ip+3,arp_sendRequest@ipSender+3
 17569  002548  C134  F104         	movff	arp_gratuitous@ip,arp_sendRequest@ipTarget
 17570  00254C  C135  F105         	movff	arp_gratuitous@ip+1,arp_sendRequest@ipTarget+1
 17571  002550  C136  F106         	movff	arp_gratuitous@ip+2,arp_sendRequest@ipTarget+2
 17572  002554  C137  F107         	movff	arp_gratuitous@ip+3,arp_sendRequest@ipTarget+3
 17573  002558  EC15  F022         	call	_arp_sendRequest	;wreg free
 17574                           
 17575                           ;arp.c: 368: announceCounter++;
 17576  00255C  0101               	movlb	1	; () banked
 17577  00255E  2BD1               	incf	arp_gratuitous@announceCounter& (0+255),f,b
 17578  002560                     l1029:
 17579                           
 17580                           ; BSR set to: 1
 17581                           ;arp.c: 369: }
 17582                           ;arp.c: 370: if (announceCounter >= 2u) {
 17583                           
 17584                           ; BSR set to: 1
 17585  002560  0E01               	movlw	1
 17586  002562  65D1               	cpfsgt	arp_gratuitous@announceCounter& (0+255),b
 17587  002564  D022               	goto	l1025
 17588                           
 17589                           ; BSR set to: 1
 17590                           ;arp.c: 372: announceCounter = 0;
 17591  002566  0E00               	movlw	0
 17592  002568  6FD1               	movwf	arp_gratuitous@announceCounter& (0+255),b
 17593                           
 17594                           ;arp.c: 373: state = INIT;
 17595  00256A  0E00               	movlw	0
 17596  00256C  6FD0               	movwf	arp_gratuitous@state& (0+255),b
 17597                           
 17598                           ;arp.c: 374: err.code = (uint16_t)0;
 17599  00256E  0E00               	movlw	0
 17600  002570  0100               	movlb	0	; () banked
 17601  002572  6FFF               	movwf	(arp_gratuitous@err+2)& (0+255),b
 17602  002574  0E00               	movlw	0
 17603  002576  D009               	goto	L9
 17604  002578                     
 17605                           ;arp.c: 378: announceCounter = 0;
 17606                           
 17607                           ; BSR set to: 0
 17608  002578  0E00               	movlw	0
 17609  00257A  0101               	movlb	1	; () banked
 17610  00257C  6FD1               	movwf	arp_gratuitous@announceCounter& (0+255),b
 17611                           
 17612                           ;arp.c: 379: state = INIT;
 17613  00257E  0E00               	movlw	0
 17614  002580  6FD0               	movwf	arp_gratuitous@state& (0+255),b
 17615                           
 17616                           ;arp.c: 380: err.code = ERROR_ARP_IPv4_ADDRESS_CONFLICT;
 17617  002582  0E01               	movlw	1
 17618  002584  0100               	movlb	0	; () banked
 17619  002586  6FFF               	movwf	(arp_gratuitous@err+2)& (0+255),b
 17620  002588  0E96               	movlw	150
 17621  00258A                     L9:
 17622  00258A  6FFE               	movwf	(arp_gratuitous@err+1)& (0+255),b
 17623                           
 17624                           ; BSR set to: 0
 17625                           ;arp.c: 383: }
 17626                           
 17627                           ;arp.c: 381: break;
 17628  00258C  D00E               	goto	l1025
 17629  00258E                     l1023:
 17630                           
 17631                           ; BSR set to: 0
 17632  00258E  0101               	movlb	1	; () banked
 17633  002590  51D0               	movf	arp_gratuitous@state& (0+255),w,b
 17634                           
 17635                           ; Switch size 1, requested type "space"
 17636                           ; Number of cases is 4, Range of values is 0 to 3
 17637                           ; switch strategies available:
 17638                           ; Name         Instructions Cycles
 17639                           ; simple_byte           13     7 (average)
 17640                           ;	Chosen strategy is simple_byte
 17641  002592  0A00               	xorlw	0	; case 0
 17642  002594  B4D8               	btfsc	status,2,c
 17643  002596  D71F               	goto	l1024
 17644  002598  0A01               	xorlw	1	; case 1
 17645  00259A  B4D8               	btfsc	status,2,c
 17646  00259C  D72F               	goto	l1026
 17647  00259E  0A03               	xorlw	3	; case 2
 17648  0025A0  B4D8               	btfsc	status,2,c
 17649  0025A2  D768               	goto	l1028
 17650  0025A4  0A01               	xorlw	1	; case 3
 17651  0025A6  B4D8               	btfsc	status,2,c
 17652  0025A8  D7E7               	goto	l1033
 17653  0025AA                     l1025:
 17654                           
 17655                           ;arp.c: 384: return err;
 17656  0025AA  C0FD  F134         	movff	arp_gratuitous@err,?_arp_gratuitous
 17657  0025AE  C0FE  F135         	movff	arp_gratuitous@err+1,?_arp_gratuitous+1
 17658  0025B2  C0FF  F136         	movff	arp_gratuitous@err+2,?_arp_gratuitous+2
 17659  0025B6  0012               	return		;funcret
 17660  0025B8                     __end_of_arp_gratuitous:
 17661                           	opt stack 0
 17662                           tblptru	equ	0xFF8
 17663                           tblptrh	equ	0xFF7
 17664                           tblptrl	equ	0xFF6
 17665                           tablat	equ	0xFF5
 17666                           prodh	equ	0xFF4
 17667                           prodl	equ	0xFF3
 17668                           intcon	equ	0xFF2
 17669                           intcon3	equ	0xFF0
 17670                           indf0	equ	0xFEF
 17671                           postinc0	equ	0xFEE
 17672                           plusw0	equ	0xFEB
 17673                           fsr0h	equ	0xFEA
 17674                           fsr0l	equ	0xFE9
 17675                           wreg	equ	0xFE8
 17676                           indf1	equ	0xFE7
 17677                           postinc1	equ	0xFE6
 17678                           postdec1	equ	0xFE5
 17679                           plusw1	equ	0xFE3
 17680                           fsr1h	equ	0xFE2
 17681                           fsr1l	equ	0xFE1
 17682                           indf2	equ	0xFDF
 17683                           postinc2	equ	0xFDE
 17684                           postdec2	equ	0xFDD
 17685                           plusw2	equ	0xFDB
 17686                           fsr2h	equ	0xFDA
 17687                           fsr2l	equ	0xFD9
 17688                           status	equ	0xFD8
 17689                           
 17690 ;; *************** function _ipAdressToString *****************
 17691 ;; Defined at:
 17692 ;;		line 162 in file "src/system/uart.c"
 17693 ;; Parameters:    Size  Location     Type
 17694 ;;  ip              4   19[BANK0 ] struct ipv4_address
 17695 ;; Auto vars:     Size  Location     Type
 17696 ;;  i               1   40[BANK0 ] unsigned char 
 17697 ;;  hundreds        4   35[BANK0 ] unsigned char [4]
 17698 ;;  tens            4   31[BANK0 ] unsigned char [4]
 17699 ;;  ones            4   27[BANK0 ] unsigned char [4]
 17700 ;;  pointer         1   39[BANK0 ] unsigned char 
 17701 ;; Return value:  Size  Location     Type
 17702 ;;                  2   19[BANK0 ] PTR unsigned char 
 17703 ;; Registers used:
 17704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17705 ;; Tracked objects:
 17706 ;;		On entry : 0/0
 17707 ;;		On exit  : 0/0
 17708 ;;		Unchanged: 0/0
 17709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17710 ;;      Params:         0       4       0       0       0       0       0       0       0
 17711 ;;      Locals:         0      14       0       0       0       0       0       0       0
 17712 ;;      Temps:          0       4       0       0       0       0       0       0       0
 17713 ;;      Totals:         0      22       0       0       0       0       0       0       0
 17714 ;;Total ram usage:       22 bytes
 17715 ;; Hardware stack levels used:    1
 17716 ;; Hardware stack levels required when called:    5
 17717 ;; This function calls:
 17718 ;;		___lwdiv
 17719 ;;		___lwmod
 17720 ;; This function is called by:
 17721 ;;		_handleStackBackgroundTasks
 17722 ;;		_main
 17723 ;;		_arp_handleNewPacket
 17724 ;;		_arp_sendReply
 17725 ;;		_arp_probe
 17726 ;;		_arp_gratuitous
 17727 ;;		_arp_setNewEntry
 17728 ;;		_ipv4_sendFrame
 17729 ;;		_ipv4_handleNewPacket
 17730 ;;		_arpEntryToString
 17731 ;; This function uses a non-reentrant model
 17732 ;;
 17733                           
 17734                           	psect	text67
 17735  0027E6                     __ptext67:
 17736                           	opt stack 0
 17737  0027E6                     _ipAdressToString:
 17738                           	opt stack 22
 17739                           
 17740                           ;uart.c: 163: char static address [] = "???.???.???.???";
 17741                           ;uart.c: 164: uint8_t hundreds[4];
 17742                           ;uart.c: 165: uint8_t tens[4];
 17743                           ;uart.c: 166: uint8_t ones[4];
 17744                           ;uart.c: 167: uint8_t pointer = 0;
 17745                           
 17746                           ;incstack = 0
 17747  0027E6  0E00               	movlw	0
 17748  0027E8  0100               	movlb	0	; () banked
 17749  0027EA  6F87               	movwf	ipAdressToString@pointer& (0+255),b
 17750                           
 17751                           ;uart.c: 169: for (uint8_t i = 0; i < 4; i++) {
 17752  0027EC  0E00               	movlw	0
 17753  0027EE  6F88               	movwf	ipAdressToString@i& (0+255),b
 17754  0027F0                     l9129:
 17755                           
 17756                           ; BSR set to: 0
 17757  0027F0  0E03               	movlw	3
 17758  0027F2  6588               	cpfsgt	ipAdressToString@i& (0+255),b
 17759  0027F4  D001               	goto	l853
 17760  0027F6  D0DF               	goto	u10120
 17761  0027F8                     l853:
 17762                           
 17763                           ; BSR set to: 0
 17764                           ;uart.c: 171: hundreds[i] = ip.address[i] / 100u;
 17765                           
 17766                           ; BSR set to: 0
 17767  0027F8  5188               	movf	ipAdressToString@i& (0+255),w,b
 17768  0027FA  0D01               	mullw	1
 17769  0027FC  0E83               	movlw	low ipAdressToString@hundreds
 17770  0027FE  24F3               	addwf	prodl,w,c
 17771  002800  6ED9               	movwf	fsr2l,c
 17772  002802  0E00               	movlw	high ipAdressToString@hundreds
 17773  002804  20F4               	addwfc	prodh,w,c
 17774  002806  6EDA               	movwf	fsr2h,c
 17775  002808  5188               	movf	ipAdressToString@i& (0+255),w,b
 17776  00280A  0D01               	mullw	1
 17777  00280C  0E73               	movlw	low ipAdressToString@ip
 17778  00280E  24F3               	addwf	prodl,w,c
 17779  002810  6EE1               	movwf	fsr1l,c
 17780  002812  0E00               	movlw	high ipAdressToString@ip
 17781  002814  20F4               	addwfc	prodh,w,c
 17782  002816  6EE2               	movwf	fsr1h,c
 17783  002818  50E7               	movf	indf1,w,c
 17784  00281A  6F77               	movwf	??_ipAdressToString& (0+255),b
 17785  00281C  5177               	movf	??_ipAdressToString& (0+255),w,b
 17786  00281E  6F60               	movwf	___lwdiv@dividend& (0+255),b
 17787  002820  6B61               	clrf	(___lwdiv@dividend+1)& (0+255),b
 17788  002822  0E00               	movlw	0
 17789  002824  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 17790  002826  0E64               	movlw	100
 17791  002828  6F62               	movwf	___lwdiv@divisor& (0+255),b
 17792  00282A  EC7C  F027         	call	___lwdiv	;wreg free
 17793  00282E  0100               	movlb	0	; () banked
 17794  002830  5160               	movf	?___lwdiv& (0+255),w,b
 17795  002832  6EDF               	movwf	indf2,c
 17796                           
 17797                           ;uart.c: 172: tens[i] = (ip.address[i] - hundreds[i]*100u) / 10u;
 17798  002834  5188               	movf	ipAdressToString@i& (0+255),w,b
 17799  002836  0D01               	mullw	1
 17800  002838  0E7F               	movlw	low ipAdressToString@tens
 17801  00283A  24F3               	addwf	prodl,w,c
 17802  00283C  6ED9               	movwf	fsr2l,c
 17803  00283E  0E00               	movlw	high ipAdressToString@tens
 17804  002840  20F4               	addwfc	prodh,w,c
 17805  002842  6EDA               	movwf	fsr2h,c
 17806  002844  5188               	movf	ipAdressToString@i& (0+255),w,b
 17807  002846  0D01               	mullw	1
 17808  002848  0E83               	movlw	low ipAdressToString@hundreds
 17809  00284A  24F3               	addwf	prodl,w,c
 17810  00284C  6EE1               	movwf	fsr1l,c
 17811  00284E  0E00               	movlw	high ipAdressToString@hundreds
 17812  002850  20F4               	addwfc	prodh,w,c
 17813  002852  6EE2               	movwf	fsr1h,c
 17814  002854  50E7               	movf	indf1,w,c
 17815  002856  6F77               	movwf	??_ipAdressToString& (0+255),b
 17816  002858  5177               	movf	??_ipAdressToString& (0+255),w,b
 17817  00285A  0D64               	mullw	100
 17818  00285C  CFF3 F078          	movff	prodl,??_ipAdressToString+1
 17819  002860  CFF4 F079          	movff	prodh,??_ipAdressToString+2
 17820  002864  1F78               	comf	(??_ipAdressToString+1)& (0+255),f,b
 17821  002866  1F79               	comf	(??_ipAdressToString+2)& (0+255),f,b
 17822  002868  4B78               	infsnz	(??_ipAdressToString+1)& (0+255),f,b
 17823  00286A  2B79               	incf	(??_ipAdressToString+2)& (0+255),f,b
 17824  00286C  5188               	movf	ipAdressToString@i& (0+255),w,b
 17825  00286E  0D01               	mullw	1
 17826  002870  0E73               	movlw	low ipAdressToString@ip
 17827  002872  24F3               	addwf	prodl,w,c
 17828  002874  6EE1               	movwf	fsr1l,c
 17829  002876  0E00               	movlw	high ipAdressToString@ip
 17830  002878  20F4               	addwfc	prodh,w,c
 17831  00287A  6EE2               	movwf	fsr1h,c
 17832  00287C  50E7               	movf	indf1,w,c
 17833  00287E  6F7A               	movwf	(??_ipAdressToString+3)& (0+255),b
 17834  002880  517A               	movf	(??_ipAdressToString+3)& (0+255),w,b
 17835  002882  2578               	addwf	(??_ipAdressToString+1)& (0+255),w,b
 17836  002884  6F60               	movwf	___lwdiv@dividend& (0+255),b
 17837  002886  0E00               	movlw	0
 17838  002888  2179               	addwfc	(??_ipAdressToString+2)& (0+255),w,b
 17839  00288A  6F61               	movwf	(___lwdiv@dividend+1)& (0+255),b
 17840  00288C  0E00               	movlw	0
 17841  00288E  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 17842  002890  0E0A               	movlw	10
 17843  002892  6F62               	movwf	___lwdiv@divisor& (0+255),b
 17844  002894  EC7C  F027         	call	___lwdiv	;wreg free
 17845  002898  0100               	movlb	0	; () banked
 17846  00289A  5160               	movf	?___lwdiv& (0+255),w,b
 17847  00289C  6EDF               	movwf	indf2,c
 17848                           
 17849                           ;uart.c: 173: ones[i] = ip.address[i] % 10u;
 17850  00289E  5188               	movf	ipAdressToString@i& (0+255),w,b
 17851  0028A0  0D01               	mullw	1
 17852  0028A2  0E7B               	movlw	low ipAdressToString@ones
 17853  0028A4  24F3               	addwf	prodl,w,c
 17854  0028A6  6ED9               	movwf	fsr2l,c
 17855  0028A8  0E00               	movlw	high ipAdressToString@ones
 17856  0028AA  20F4               	addwfc	prodh,w,c
 17857  0028AC  6EDA               	movwf	fsr2h,c
 17858  0028AE  5188               	movf	ipAdressToString@i& (0+255),w,b
 17859  0028B0  0D01               	mullw	1
 17860  0028B2  0E73               	movlw	low ipAdressToString@ip
 17861  0028B4  24F3               	addwf	prodl,w,c
 17862  0028B6  6EE1               	movwf	fsr1l,c
 17863  0028B8  0E00               	movlw	high ipAdressToString@ip
 17864  0028BA  20F4               	addwfc	prodh,w,c
 17865  0028BC  6EE2               	movwf	fsr1h,c
 17866  0028BE  50E7               	movf	indf1,w,c
 17867  0028C0  6F77               	movwf	??_ipAdressToString& (0+255),b
 17868  0028C2  5177               	movf	??_ipAdressToString& (0+255),w,b
 17869  0028C4  6F6E               	movwf	___lwmod@dividend& (0+255),b
 17870  0028C6  6B6F               	clrf	(___lwmod@dividend+1)& (0+255),b
 17871  0028C8  0E00               	movlw	0
 17872  0028CA  6F71               	movwf	(___lwmod@divisor+1)& (0+255),b
 17873  0028CC  0E0A               	movlw	10
 17874  0028CE  6F70               	movwf	___lwmod@divisor& (0+255),b
 17875  0028D0  ECAC  F028         	call	___lwmod	;wreg free
 17876  0028D4  0100               	movlb	0	; () banked
 17877  0028D6  516E               	movf	?___lwmod& (0+255),w,b
 17878  0028D8  6EDF               	movwf	indf2,c
 17879                           
 17880                           ; BSR set to: 0
 17881                           ;uart.c: 175: if (hundreds[i] > 0)
 17882  0028DA  5188               	movf	ipAdressToString@i& (0+255),w,b
 17883  0028DC  0D01               	mullw	1
 17884  0028DE  0E83               	movlw	low ipAdressToString@hundreds
 17885  0028E0  24F3               	addwf	prodl,w,c
 17886  0028E2  6ED9               	movwf	fsr2l,c
 17887  0028E4  0E00               	movlw	high ipAdressToString@hundreds
 17888  0028E6  20F4               	addwfc	prodh,w,c
 17889  0028E8  6EDA               	movwf	fsr2h,c
 17890  0028EA  50DF               	movf	indf2,w,c
 17891  0028EC  B4D8               	btfsc	status,2,c
 17892  0028EE  D014               	goto	l855
 17893                           
 17894                           ; BSR set to: 0
 17895                           ;uart.c: 176: address[pointer++] = hundreds[i] + 0x30;
 17896  0028F0  5187               	movf	ipAdressToString@pointer& (0+255),w,b
 17897  0028F2  0D01               	mullw	1
 17898  0028F4  0EF0               	movlw	low ipAdressToString@address
 17899  0028F6  24F3               	addwf	prodl,w,c
 17900  0028F8  6ED9               	movwf	fsr2l,c
 17901  0028FA  0E02               	movlw	high ipAdressToString@address
 17902  0028FC  20F4               	addwfc	prodh,w,c
 17903  0028FE  6EDA               	movwf	fsr2h,c
 17904  002900  5188               	movf	ipAdressToString@i& (0+255),w,b
 17905  002902  0D01               	mullw	1
 17906  002904  0E83               	movlw	low ipAdressToString@hundreds
 17907  002906  24F3               	addwf	prodl,w,c
 17908  002908  6EE1               	movwf	fsr1l,c
 17909  00290A  0E00               	movlw	high ipAdressToString@hundreds
 17910  00290C  20F4               	addwfc	prodh,w,c
 17911  00290E  6EE2               	movwf	fsr1h,c
 17912  002910  50E7               	movf	indf1,w,c
 17913  002912  0F30               	addlw	48
 17914  002914  6EDF               	movwf	indf2,c
 17915                           
 17916                           ; BSR set to: 0
 17917  002916  2B87               	incf	ipAdressToString@pointer& (0+255),f,b
 17918  002918                     l855:
 17919                           
 17920                           ; BSR set to: 0
 17921                           ;uart.c: 177: if ((tens[i] > 0) || hundreds[i] > 0)
 17922                           
 17923                           ; BSR set to: 0
 17924  002918  5188               	movf	ipAdressToString@i& (0+255),w,b
 17925  00291A  0D01               	mullw	1
 17926  00291C  0E7F               	movlw	low ipAdressToString@tens
 17927  00291E  24F3               	addwf	prodl,w,c
 17928  002920  6ED9               	movwf	fsr2l,c
 17929  002922  0E00               	movlw	high ipAdressToString@tens
 17930  002924  20F4               	addwfc	prodh,w,c
 17931  002926  6EDA               	movwf	fsr2h,c
 17932  002928  50DF               	movf	indf2,w,c
 17933  00292A  A4D8               	btfss	status,2,c
 17934  00292C  D00B               	goto	u10100
 17935                           
 17936                           ; BSR set to: 0
 17937  00292E  5188               	movf	ipAdressToString@i& (0+255),w,b
 17938  002930  0D01               	mullw	1
 17939  002932  0E83               	movlw	low ipAdressToString@hundreds
 17940  002934  24F3               	addwf	prodl,w,c
 17941  002936  6ED9               	movwf	fsr2l,c
 17942  002938  0E00               	movlw	high ipAdressToString@hundreds
 17943  00293A  20F4               	addwfc	prodh,w,c
 17944  00293C  6EDA               	movwf	fsr2h,c
 17945  00293E  50DF               	movf	indf2,w,c
 17946  002940  B4D8               	btfsc	status,2,c
 17947  002942  D014               	goto	l856
 17948  002944                     u10100:
 17949                           
 17950                           ; BSR set to: 0
 17951                           ;uart.c: 178: address[pointer++] = tens[i] + 0x30;
 17952                           
 17953                           ; BSR set to: 0
 17954  002944  5187               	movf	ipAdressToString@pointer& (0+255),w,b
 17955  002946  0D01               	mullw	1
 17956  002948  0EF0               	movlw	low ipAdressToString@address
 17957  00294A  24F3               	addwf	prodl,w,c
 17958  00294C  6ED9               	movwf	fsr2l,c
 17959  00294E  0E02               	movlw	high ipAdressToString@address
 17960  002950  20F4               	addwfc	prodh,w,c
 17961  002952  6EDA               	movwf	fsr2h,c
 17962  002954  5188               	movf	ipAdressToString@i& (0+255),w,b
 17963  002956  0D01               	mullw	1
 17964  002958  0E7F               	movlw	low ipAdressToString@tens
 17965  00295A  24F3               	addwf	prodl,w,c
 17966  00295C  6EE1               	movwf	fsr1l,c
 17967  00295E  0E00               	movlw	high ipAdressToString@tens
 17968  002960  20F4               	addwfc	prodh,w,c
 17969  002962  6EE2               	movwf	fsr1h,c
 17970  002964  50E7               	movf	indf1,w,c
 17971  002966  0F30               	addlw	48
 17972  002968  6EDF               	movwf	indf2,c
 17973                           
 17974                           ; BSR set to: 0
 17975  00296A  2B87               	incf	ipAdressToString@pointer& (0+255),f,b
 17976  00296C                     l856:
 17977                           
 17978                           ; BSR set to: 0
 17979                           ;uart.c: 179: address[pointer++] = ones[i] + 0x30;
 17980                           
 17981                           ; BSR set to: 0
 17982  00296C  5187               	movf	ipAdressToString@pointer& (0+255),w,b
 17983  00296E  0D01               	mullw	1
 17984  002970  0EF0               	movlw	low ipAdressToString@address
 17985  002972  24F3               	addwf	prodl,w,c
 17986  002974  6ED9               	movwf	fsr2l,c
 17987  002976  0E02               	movlw	high ipAdressToString@address
 17988  002978  20F4               	addwfc	prodh,w,c
 17989  00297A  6EDA               	movwf	fsr2h,c
 17990  00297C  5188               	movf	ipAdressToString@i& (0+255),w,b
 17991  00297E  0D01               	mullw	1
 17992  002980  0E7B               	movlw	low ipAdressToString@ones
 17993  002982  24F3               	addwf	prodl,w,c
 17994  002984  6EE1               	movwf	fsr1l,c
 17995  002986  0E00               	movlw	high ipAdressToString@ones
 17996  002988  20F4               	addwfc	prodh,w,c
 17997  00298A  6EE2               	movwf	fsr1h,c
 17998  00298C  50E7               	movf	indf1,w,c
 17999  00298E  0F30               	addlw	48
 18000  002990  6EDF               	movwf	indf2,c
 18001  002992  2B87               	incf	ipAdressToString@pointer& (0+255),f,b
 18002                           
 18003                           ; BSR set to: 0
 18004                           ;uart.c: 180: if (i != 3)
 18005  002994  0E03               	movlw	3
 18006  002996  1988               	xorwf	ipAdressToString@i& (0+255),w,b
 18007  002998  B4D8               	btfsc	status,2,c
 18008  00299A  D00B               	goto	l859
 18009                           
 18010                           ; BSR set to: 0
 18011                           ;uart.c: 181: address[pointer++] = '.';
 18012  00299C  5187               	movf	ipAdressToString@pointer& (0+255),w,b
 18013  00299E  0D01               	mullw	1
 18014  0029A0  0EF0               	movlw	low ipAdressToString@address
 18015  0029A2  24F3               	addwf	prodl,w,c
 18016  0029A4  6ED9               	movwf	fsr2l,c
 18017  0029A6  0E02               	movlw	high ipAdressToString@address
 18018  0029A8  20F4               	addwfc	prodh,w,c
 18019  0029AA  6EDA               	movwf	fsr2h,c
 18020  0029AC  0E2E               	movlw	46
 18021  0029AE  6EDF               	movwf	indf2,c
 18022                           
 18023                           ; BSR set to: 0
 18024  0029B0  2B87               	incf	ipAdressToString@pointer& (0+255),f,b
 18025  0029B2                     l859:
 18026                           
 18027                           ; BSR set to: 0
 18028                           
 18029                           ; BSR set to: 0
 18030  0029B2  2B88               	incf	ipAdressToString@i& (0+255),f,b
 18031  0029B4  D71D               	goto	l9129
 18032  0029B6                     u10120:
 18033                           
 18034                           ; BSR set to: 0
 18035                           ;uart.c: 182: }
 18036                           ;uart.c: 183: address[pointer] = '\0';
 18037                           
 18038                           ; BSR set to: 0
 18039  0029B6  5187               	movf	ipAdressToString@pointer& (0+255),w,b
 18040  0029B8  0D01               	mullw	1
 18041  0029BA  0EF0               	movlw	low ipAdressToString@address
 18042  0029BC  24F3               	addwf	prodl,w,c
 18043  0029BE  6ED9               	movwf	fsr2l,c
 18044  0029C0  0E02               	movlw	high ipAdressToString@address
 18045  0029C2  20F4               	addwfc	prodh,w,c
 18046  0029C4  6EDA               	movwf	fsr2h,c
 18047  0029C6  0E00               	movlw	0
 18048  0029C8  6EDF               	movwf	indf2,c
 18049                           
 18050                           ; BSR set to: 0
 18051                           ;uart.c: 184: return address;
 18052  0029CA  0EF0               	movlw	low ipAdressToString@address
 18053  0029CC  6F73               	movwf	?_ipAdressToString& (0+255),b
 18054  0029CE  0E02               	movlw	high ipAdressToString@address
 18055  0029D0  6F74               	movwf	(?_ipAdressToString+1)& (0+255),b
 18056  0029D2  0012               	return	
 18057  0029D4                     __end_of_ipAdressToString:
 18058                           	opt stack 0
 18059                           tblptru	equ	0xFF8
 18060                           tblptrh	equ	0xFF7
 18061                           tblptrl	equ	0xFF6
 18062                           tablat	equ	0xFF5
 18063                           prodh	equ	0xFF4
 18064                           prodl	equ	0xFF3
 18065                           intcon	equ	0xFF2
 18066                           intcon3	equ	0xFF0
 18067                           indf0	equ	0xFEF
 18068                           postinc0	equ	0xFEE
 18069                           plusw0	equ	0xFEB
 18070                           fsr0h	equ	0xFEA
 18071                           fsr0l	equ	0xFE9
 18072                           wreg	equ	0xFE8
 18073                           indf1	equ	0xFE7
 18074                           postinc1	equ	0xFE6
 18075                           postdec1	equ	0xFE5
 18076                           plusw1	equ	0xFE3
 18077                           fsr1h	equ	0xFE2
 18078                           fsr1l	equ	0xFE1
 18079                           indf2	equ	0xFDF
 18080                           postinc2	equ	0xFDE
 18081                           postdec2	equ	0xFDD
 18082                           plusw2	equ	0xFDB
 18083                           fsr2h	equ	0xFDA
 18084                           fsr2l	equ	0xFD9
 18085                           status	equ	0xFD8
 18086                           
 18087 ;; *************** function ___lwmod *****************
 18088 ;; Defined at:
 18089 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 18090 ;; Parameters:    Size  Location     Type
 18091 ;;  dividend        2   14[BANK0 ] unsigned int 
 18092 ;;  divisor         2   16[BANK0 ] unsigned int 
 18093 ;; Auto vars:     Size  Location     Type
 18094 ;;  counter         1   18[BANK0 ] unsigned char 
 18095 ;; Return value:  Size  Location     Type
 18096 ;;                  2   14[BANK0 ] unsigned int 
 18097 ;; Registers used:
 18098 ;;		wreg, status,2, status,0
 18099 ;; Tracked objects:
 18100 ;;		On entry : 0/0
 18101 ;;		On exit  : 0/0
 18102 ;;		Unchanged: 0/0
 18103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18104 ;;      Params:         0       4       0       0       0       0       0       0       0
 18105 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18106 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18107 ;;      Totals:         0       5       0       0       0       0       0       0       0
 18108 ;;Total ram usage:        5 bytes
 18109 ;; Hardware stack levels used:    1
 18110 ;; Hardware stack levels required when called:    4
 18111 ;; This function calls:
 18112 ;;		Nothing
 18113 ;; This function is called by:
 18114 ;;		_ipAdressToString
 18115 ;;		_arp_probe
 18116 ;; This function uses a non-reentrant model
 18117 ;;
 18118                           
 18119                           	psect	text68
 18120  005158                     __ptext68:
 18121                           	opt stack 0
 18122  005158                     ___lwmod:
 18123                           	opt stack 22
 18124                           
 18125                           ; BSR set to: 0
 18126                           ;incstack = 0
 18127  005158  0100               	movlb	0	; () banked
 18128  00515A  5170               	movf	___lwmod@divisor& (0+255),w,b
 18129  00515C  1171               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18130  00515E  B4D8               	btfsc	status,2,c
 18131  005160  D018               	goto	l1662
 18132                           
 18133                           ; BSR set to: 0
 18134  005162  0E01               	movlw	1
 18135  005164  6F72               	movwf	___lwmod@counter& (0+255),b
 18136  005166  D004               	goto	l1657
 18137  005168                     
 18138                           ; BSR set to: 0
 18139                           
 18140                           ; BSR set to: 0
 18141  005168  90D8               	bcf	status,0,c
 18142  00516A  3770               	rlcf	___lwmod@divisor& (0+255),f,b
 18143  00516C  3771               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18144  00516E  2B72               	incf	___lwmod@counter& (0+255),f,b
 18145  005170                     l1657:
 18146                           
 18147                           ; BSR set to: 0
 18148                           
 18149                           ; BSR set to: 0
 18150  005170  AF71               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 18151  005172  D7FA               	goto	l1658
 18152  005174                     u9860:
 18153                           
 18154                           ; BSR set to: 0
 18155                           
 18156                           ; BSR set to: 0
 18157                           
 18158                           ; BSR set to: 0
 18159  005174  5170               	movf	___lwmod@divisor& (0+255),w,b
 18160  005176  5D6E               	subwf	___lwmod@dividend& (0+255),w,b
 18161  005178  5171               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18162  00517A  596F               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18163  00517C  A0D8               	btfss	status,0,c
 18164  00517E  D004               	goto	l1661
 18165                           
 18166                           ; BSR set to: 0
 18167  005180  5170               	movf	___lwmod@divisor& (0+255),w,b
 18168  005182  5F6E               	subwf	___lwmod@dividend& (0+255),f,b
 18169  005184  5171               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18170  005186  5B6F               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18171  005188                     l1661:
 18172                           
 18173                           ; BSR set to: 0
 18174                           
 18175                           ; BSR set to: 0
 18176  005188  90D8               	bcf	status,0,c
 18177  00518A  3371               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18178  00518C  3370               	rrcf	___lwmod@divisor& (0+255),f,b
 18179                           
 18180                           ; BSR set to: 0
 18181  00518E  2F72               	decfsz	___lwmod@counter& (0+255),f,b
 18182  005190  D7F1               	goto	u9860
 18183  005192                     l1662:
 18184                           
 18185                           ; BSR set to: 0
 18186                           
 18187                           ; BSR set to: 0
 18188  005192  C06E  F06E         	movff	___lwmod@dividend,?___lwmod
 18189  005196  C06F  F06F         	movff	___lwmod@dividend+1,?___lwmod+1
 18190                           
 18191                           ; BSR set to: 0
 18192  00519A  0012               	return		;funcret
 18193  00519C                     __end_of___lwmod:
 18194                           	opt stack 0
 18195                           tblptru	equ	0xFF8
 18196                           tblptrh	equ	0xFF7
 18197                           tblptrl	equ	0xFF6
 18198                           tablat	equ	0xFF5
 18199                           prodh	equ	0xFF4
 18200                           prodl	equ	0xFF3
 18201                           intcon	equ	0xFF2
 18202                           intcon3	equ	0xFF0
 18203                           indf0	equ	0xFEF
 18204                           postinc0	equ	0xFEE
 18205                           plusw0	equ	0xFEB
 18206                           fsr0h	equ	0xFEA
 18207                           fsr0l	equ	0xFE9
 18208                           wreg	equ	0xFE8
 18209                           indf1	equ	0xFE7
 18210                           postinc1	equ	0xFE6
 18211                           postdec1	equ	0xFE5
 18212                           plusw1	equ	0xFE3
 18213                           fsr1h	equ	0xFE2
 18214                           fsr1l	equ	0xFE1
 18215                           indf2	equ	0xFDF
 18216                           postinc2	equ	0xFDE
 18217                           postdec2	equ	0xFDD
 18218                           plusw2	equ	0xFDB
 18219                           fsr2h	equ	0xFDA
 18220                           fsr2l	equ	0xFD9
 18221                           status	equ	0xFD8
 18222                           
 18223 ;; *************** function ___lwdiv *****************
 18224 ;; Defined at:
 18225 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 18226 ;; Parameters:    Size  Location     Type
 18227 ;;  dividend        2    0[BANK0 ] unsigned int 
 18228 ;;  divisor         2    2[BANK0 ] unsigned int 
 18229 ;; Auto vars:     Size  Location     Type
 18230 ;;  quotient        2    5[BANK0 ] unsigned int 
 18231 ;;  counter         1    4[BANK0 ] unsigned char 
 18232 ;; Return value:  Size  Location     Type
 18233 ;;                  2    0[BANK0 ] unsigned int 
 18234 ;; Registers used:
 18235 ;;		wreg, status,2, status,0
 18236 ;; Tracked objects:
 18237 ;;		On entry : 0/0
 18238 ;;		On exit  : 0/0
 18239 ;;		Unchanged: 0/0
 18240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18241 ;;      Params:         0       4       0       0       0       0       0       0       0
 18242 ;;      Locals:         0       3       0       0       0       0       0       0       0
 18243 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18244 ;;      Totals:         0       7       0       0       0       0       0       0       0
 18245 ;;Total ram usage:        7 bytes
 18246 ;; Hardware stack levels used:    1
 18247 ;; Hardware stack levels required when called:    4
 18248 ;; This function calls:
 18249 ;;		Nothing
 18250 ;; This function is called by:
 18251 ;;		_ipAdressToString
 18252 ;; This function uses a non-reentrant model
 18253 ;;
 18254                           
 18255                           	psect	text69
 18256  004EF8                     __ptext69:
 18257                           	opt stack 0
 18258  004EF8                     ___lwdiv:
 18259                           	opt stack 22
 18260                           
 18261                           ; BSR set to: 0
 18262                           ;incstack = 0
 18263  004EF8  0E00               	movlw	0
 18264  004EFA  0100               	movlb	0	; () banked
 18265  004EFC  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 18266  004EFE  0E00               	movlw	0
 18267  004F00  6F65               	movwf	___lwdiv@quotient& (0+255),b
 18268                           
 18269                           ; BSR set to: 0
 18270  004F02  5162               	movf	___lwdiv@divisor& (0+255),w,b
 18271  004F04  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 18272  004F06  B4D8               	btfsc	status,2,c
 18273  004F08  D01C               	goto	l1652
 18274                           
 18275                           ; BSR set to: 0
 18276  004F0A  0E01               	movlw	1
 18277  004F0C  6F64               	movwf	___lwdiv@counter& (0+255),b
 18278  004F0E  D004               	goto	l1647
 18279  004F10                     
 18280                           ; BSR set to: 0
 18281                           
 18282                           ; BSR set to: 0
 18283  004F10  90D8               	bcf	status,0,c
 18284  004F12  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 18285  004F14  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 18286  004F16  2B64               	incf	___lwdiv@counter& (0+255),f,b
 18287  004F18                     l1647:
 18288                           
 18289                           ; BSR set to: 0
 18290                           
 18291                           ; BSR set to: 0
 18292  004F18  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 18293  004F1A  D7FA               	goto	l1648
 18294  004F1C                     u9830:
 18295                           
 18296                           ; BSR set to: 0
 18297                           
 18298                           ; BSR set to: 0
 18299                           
 18300                           ; BSR set to: 0
 18301  004F1C  90D8               	bcf	status,0,c
 18302  004F1E  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 18303  004F20  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 18304                           
 18305                           ; BSR set to: 0
 18306  004F22  5162               	movf	___lwdiv@divisor& (0+255),w,b
 18307  004F24  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 18308  004F26  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 18309  004F28  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 18310  004F2A  A0D8               	btfss	status,0,c
 18311  004F2C  D005               	goto	l1651
 18312                           
 18313                           ; BSR set to: 0
 18314  004F2E  5162               	movf	___lwdiv@divisor& (0+255),w,b
 18315  004F30  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 18316  004F32  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 18317  004F34  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 18318                           
 18319                           ; BSR set to: 0
 18320  004F36  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 18321  004F38                     l1651:
 18322                           
 18323                           ; BSR set to: 0
 18324                           
 18325                           ; BSR set to: 0
 18326  004F38  90D8               	bcf	status,0,c
 18327  004F3A  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 18328  004F3C  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 18329                           
 18330                           ; BSR set to: 0
 18331  004F3E  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 18332  004F40  D7ED               	goto	u9830
 18333  004F42                     l1652:
 18334                           
 18335                           ; BSR set to: 0
 18336                           
 18337                           ; BSR set to: 0
 18338  004F42  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 18339  004F46  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 18340                           
 18341                           ; BSR set to: 0
 18342  004F4A  0012               	return		;funcret
 18343  004F4C                     __end_of___lwdiv:
 18344                           	opt stack 0
 18345                           tblptru	equ	0xFF8
 18346                           tblptrh	equ	0xFF7
 18347                           tblptrl	equ	0xFF6
 18348                           tablat	equ	0xFF5
 18349                           prodh	equ	0xFF4
 18350                           prodl	equ	0xFF3
 18351                           intcon	equ	0xFF2
 18352                           intcon3	equ	0xFF0
 18353                           indf0	equ	0xFEF
 18354                           postinc0	equ	0xFEE
 18355                           plusw0	equ	0xFEB
 18356                           fsr0h	equ	0xFEA
 18357                           fsr0l	equ	0xFE9
 18358                           wreg	equ	0xFE8
 18359                           indf1	equ	0xFE7
 18360                           postinc1	equ	0xFE6
 18361                           postdec1	equ	0xFE5
 18362                           plusw1	equ	0xFE3
 18363                           fsr1h	equ	0xFE2
 18364                           fsr1l	equ	0xFE1
 18365                           indf2	equ	0xFDF
 18366                           postinc2	equ	0xFDE
 18367                           postdec2	equ	0xFDD
 18368                           plusw2	equ	0xFDB
 18369                           fsr2h	equ	0xFDA
 18370                           fsr2l	equ	0xFD9
 18371                           status	equ	0xFD8
 18372                           
 18373 ;; *************** function _arp_sendRequest *****************
 18374 ;; Defined at:
 18375 ;;		line 187 in file "src/stack/protocols/arp.c"
 18376 ;; Parameters:    Size  Location     Type
 18377 ;;  ipSender        4    0[BANK1 ] struct ipv4_address
 18378 ;;  ipTarget        4    4[BANK1 ] struct ipv4_address
 18379 ;; Auto vars:     Size  Location     Type
 18380 ;;  request        32   20[BANK1 ] struct arp_message
 18381 ;;  targetMAC       6   14[BANK1 ] struct macaddress
 18382 ;;  senderMAC       6    8[BANK1 ] struct macaddress
 18383 ;; Return value:  Size  Location     Type
 18384 ;;                  1    wreg      void 
 18385 ;; Registers used:
 18386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18387 ;; Tracked objects:
 18388 ;;		On entry : 0/0
 18389 ;;		On exit  : 0/0
 18390 ;;		Unchanged: 0/0
 18391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18392 ;;      Params:         0       0       8       0       0       0       0       0       0
 18393 ;;      Locals:         0       0      44       0       0       0       0       0       0
 18394 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18395 ;;      Totals:         0       0      52       0       0       0       0       0       0
 18396 ;;Total ram usage:       52 bytes
 18397 ;; Hardware stack levels used:    1
 18398 ;; Hardware stack levels required when called:   10
 18399 ;; This function calls:
 18400 ;;		_arp_send
 18401 ;;		_ethernetController_getMacAddress
 18402 ;;		_mac_setAllZero
 18403 ;; This function is called by:
 18404 ;;		_arp_probe
 18405 ;;		_arp_gratuitous
 18406 ;;		_ipv4_sendFrame
 18407 ;; This function uses a non-reentrant model
 18408 ;;
 18409                           
 18410                           	psect	text70
 18411  00442A                     __ptext70:
 18412                           	opt stack 0
 18413  00442A                     _arp_sendRequest:
 18414                           	opt stack 18
 18415                           
 18416                           ;arp.c: 188: arp_message_t request;
 18417                           ;arp.c: 189: macaddress_t senderMAC;
 18418                           ;arp.c: 190: macaddress_t targetMAC;
 18419                           ;arp.c: 192: senderMAC = ethernetController_getMacAddress();
 18420                           
 18421                           ; BSR set to: 0
 18422                           ;incstack = 0
 18423  00442A  EC23  F025         	call	_ethernetController_getMacAddress	;wreg free
 18424  00442E  EE21  F008         	lfsr	2,arp_sendRequest@senderMAC
 18425  004432  0E05               	movlw	5
 18426  004434                     u11191:
 18427  004434  CFEB FFDB          	movff	plusw0,plusw2
 18428  004438  06E8               	decf	wreg,f,c
 18429  00443A  E2FC               	bc	u11191
 18430                           
 18431                           ;arp.c: 193: mac_setAllZero(&targetMAC);
 18432  00443C  0E0E               	movlw	low arp_sendRequest@targetMAC
 18433  00443E  0100               	movlb	0	; () banked
 18434  004440  6F60               	movwf	mac_setAllZero@mac& (0+255),b
 18435  004442  0E01               	movlw	high arp_sendRequest@targetMAC
 18436  004444  6F61               	movwf	(mac_setAllZero@mac+1)& (0+255),b
 18437  004446  EC06  F02B         	call	_mac_setAllZero	;wreg free
 18438                           
 18439                           ;arp.c: 195: request.hlen = 6u;
 18440  00444A  0E06               	movlw	6
 18441  00444C  0101               	movlb	1	; () banked
 18442  00444E  6F18               	movwf	(arp_sendRequest@request+4)& (0+255),b
 18443                           
 18444                           ; BSR set to: 1
 18445                           ;arp.c: 196: request.plen = 4u;
 18446  004450  0E04               	movlw	4
 18447  004452  6F19               	movwf	(arp_sendRequest@request+5)& (0+255),b
 18448                           
 18449                           ; BSR set to: 1
 18450                           ;arp.c: 197: request.htype = ARP_HTYPE_ETHERNET;
 18451  004454  0E00               	movlw	0
 18452  004456  6F15               	movwf	(arp_sendRequest@request+1)& (0+255),b
 18453  004458  0E01               	movlw	1
 18454  00445A  6F14               	movwf	arp_sendRequest@request& (0+255),b
 18455                           
 18456                           ; BSR set to: 1
 18457                           ;arp.c: 198: request.ptype = ARP_PTYPE_IPv4;
 18458  00445C  0E08               	movlw	8
 18459  00445E  6F17               	movwf	(arp_sendRequest@request+3)& (0+255),b
 18460  004460  0E00               	movlw	0
 18461  004462  6F16               	movwf	(arp_sendRequest@request+2)& (0+255),b
 18462                           
 18463                           ; BSR set to: 1
 18464                           ;arp.c: 199: request.operation = ARP_REQUEST;
 18465  004464  0E00               	movlw	0
 18466  004466  6F1B               	movwf	(arp_sendRequest@request+7)& (0+255),b
 18467  004468  0E01               	movlw	1
 18468  00446A  6F1A               	movwf	(arp_sendRequest@request+6)& (0+255),b
 18469                           
 18470                           ; BSR set to: 1
 18471                           ;arp.c: 200: request.senderIPAddress = ipSender;
 18472  00446C  C100  F122         	movff	arp_sendRequest@ipSender,arp_sendRequest@request+14
 18473  004470  C101  F123         	movff	arp_sendRequest@ipSender+1,arp_sendRequest@request+15
 18474  004474  C102  F124         	movff	arp_sendRequest@ipSender+2,arp_sendRequest@request+16
 18475  004478  C103  F125         	movff	arp_sendRequest@ipSender+3,arp_sendRequest@request+17
 18476                           
 18477                           ; BSR set to: 1
 18478                           ;arp.c: 201: request.senderMACAddress = senderMAC;
 18479  00447C  EE21  F008         	lfsr	2,arp_sendRequest@senderMAC
 18480  004480  EE11  F01C         	lfsr	1,arp_sendRequest@request+8
 18481  004484  0E05               	movlw	5
 18482  004486                     u11201:
 18483  004486  CFDB FFE3          	movff	plusw2,plusw1
 18484  00448A  06E8               	decf	wreg,f,c
 18485  00448C  E2FC               	bc	u11201
 18486                           
 18487                           ; BSR set to: 1
 18488                           ;arp.c: 202: request.targetIPAddress = ipTarget;
 18489  00448E  C104  F12C         	movff	arp_sendRequest@ipTarget,arp_sendRequest@request+24
 18490  004492  C105  F12D         	movff	arp_sendRequest@ipTarget+1,arp_sendRequest@request+25
 18491  004496  C106  F12E         	movff	arp_sendRequest@ipTarget+2,arp_sendRequest@request+26
 18492  00449A  C107  F12F         	movff	arp_sendRequest@ipTarget+3,arp_sendRequest@request+27
 18493                           
 18494                           ; BSR set to: 1
 18495                           ;arp.c: 203: request.targetMACAddress = targetMAC;
 18496  00449E  EE21  F00E         	lfsr	2,arp_sendRequest@targetMAC
 18497  0044A2  EE11  F026         	lfsr	1,arp_sendRequest@request+18
 18498  0044A6  0E05               	movlw	5
 18499  0044A8                     u11211:
 18500  0044A8  CFDB FFE3          	movff	plusw2,plusw1
 18501  0044AC  06E8               	decf	wreg,f,c
 18502  0044AE  E2FC               	bc	u11211
 18503                           
 18504                           ; BSR set to: 1
 18505                           ;arp.c: 205: arp_send(request);
 18506  0044B0  EE21  F014         	lfsr	2,arp_sendRequest@request
 18507  0044B4  EE00  F0A7         	lfsr	0,arp_send@arp
 18508  0044B8  0E1F               	movlw	31
 18509  0044BA                     u11221:
 18510  0044BA  CFDB FFEB          	movff	plusw2,plusw0
 18511  0044BE  06E8               	decf	wreg,f,c
 18512  0044C0  E2FC               	bc	u11221
 18513  0044C2  EC59  F00F         	call	_arp_send	;wreg free
 18514  0044C6  0012               	return		;funcret
 18515  0044C8                     __end_of_arp_sendRequest:
 18516                           	opt stack 0
 18517                           tblptru	equ	0xFF8
 18518                           tblptrh	equ	0xFF7
 18519                           tblptrl	equ	0xFF6
 18520                           tablat	equ	0xFF5
 18521                           prodh	equ	0xFF4
 18522                           prodl	equ	0xFF3
 18523                           intcon	equ	0xFF2
 18524                           intcon3	equ	0xFF0
 18525                           indf0	equ	0xFEF
 18526                           postinc0	equ	0xFEE
 18527                           plusw0	equ	0xFEB
 18528                           fsr0h	equ	0xFEA
 18529                           fsr0l	equ	0xFE9
 18530                           wreg	equ	0xFE8
 18531                           indf1	equ	0xFE7
 18532                           postinc1	equ	0xFE6
 18533                           postdec1	equ	0xFE5
 18534                           plusw1	equ	0xFE3
 18535                           fsr1h	equ	0xFE2
 18536                           fsr1l	equ	0xFE1
 18537                           indf2	equ	0xFDF
 18538                           postinc2	equ	0xFDE
 18539                           postdec2	equ	0xFDD
 18540                           plusw2	equ	0xFDB
 18541                           fsr2h	equ	0xFDA
 18542                           fsr2l	equ	0xFD9
 18543                           status	equ	0xFD8
 18544                           
 18545 ;; *************** function _mac_setAllZero *****************
 18546 ;; Defined at:
 18547 ;;		line 47 in file "src/eth/mac.c"
 18548 ;; Parameters:    Size  Location     Type
 18549 ;;  mac             2    0[BANK0 ] PTR struct macaddress
 18550 ;;		 -> arp_init@mac(6), arp_sendRequest@targetMAC(6), 
 18551 ;; Auto vars:     Size  Location     Type
 18552 ;;  i               1    2[BANK0 ] unsigned char 
 18553 ;; Return value:  Size  Location     Type
 18554 ;;                  1    wreg      void 
 18555 ;; Registers used:
 18556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18557 ;; Tracked objects:
 18558 ;;		On entry : 0/0
 18559 ;;		On exit  : 0/0
 18560 ;;		Unchanged: 0/0
 18561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18562 ;;      Params:         0       2       0       0       0       0       0       0       0
 18563 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18564 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18565 ;;      Totals:         0       3       0       0       0       0       0       0       0
 18566 ;;Total ram usage:        3 bytes
 18567 ;; Hardware stack levels used:    1
 18568 ;; Hardware stack levels required when called:    4
 18569 ;; This function calls:
 18570 ;;		Nothing
 18571 ;; This function is called by:
 18572 ;;		_arp_sendRequest
 18573 ;;		_arp_init
 18574 ;; This function uses a non-reentrant model
 18575 ;;
 18576                           
 18577                           	psect	text71
 18578  00560C                     __ptext71:
 18579                           	opt stack 0
 18580  00560C                     _mac_setAllZero:
 18581                           	opt stack 24
 18582                           
 18583                           ;mac.c: 48: for (uint8_t i = 0; i < 6; i++)
 18584                           
 18585                           ;incstack = 0
 18586  00560C  0E00               	movlw	0
 18587  00560E  0100               	movlb	0	; () banked
 18588  005610  6F62               	movwf	mac_setAllZero@i& (0+255),b
 18589  005612                     l9117:
 18590                           
 18591                           ; BSR set to: 0
 18592  005612  0E05               	movlw	5
 18593  005614  6562               	cpfsgt	mac_setAllZero@i& (0+255),b
 18594  005616  D001               	goto	l396
 18595  005618  0012               	return	
 18596  00561A                     l396:
 18597                           
 18598                           ; BSR set to: 0
 18599                           ;mac.c: 49: mac->address[i] = 0x00;
 18600                           
 18601                           ; BSR set to: 0
 18602  00561A  5162               	movf	mac_setAllZero@i& (0+255),w,b
 18603  00561C  0D01               	mullw	1
 18604  00561E  50F3               	movf	prodl,w,c
 18605  005620  2560               	addwf	mac_setAllZero@mac& (0+255),w,b
 18606  005622  6ED9               	movwf	fsr2l,c
 18607  005624  50F4               	movf	prodh,w,c
 18608  005626  2161               	addwfc	(mac_setAllZero@mac+1)& (0+255),w,b
 18609  005628  6EDA               	movwf	fsr2h,c
 18610  00562A  0E00               	movlw	0
 18611  00562C  6EDF               	movwf	indf2,c
 18612                           
 18613                           ; BSR set to: 0
 18614  00562E  2B62               	incf	mac_setAllZero@i& (0+255),f,b
 18615  005630  D7F0               	goto	l9117
 18616  005632                     __end_of_mac_setAllZero:
 18617                           	opt stack 0
 18618                           tblptru	equ	0xFF8
 18619                           tblptrh	equ	0xFF7
 18620                           tblptrl	equ	0xFF6
 18621                           tablat	equ	0xFF5
 18622                           prodh	equ	0xFF4
 18623                           prodl	equ	0xFF3
 18624                           intcon	equ	0xFF2
 18625                           intcon3	equ	0xFF0
 18626                           indf0	equ	0xFEF
 18627                           postinc0	equ	0xFEE
 18628                           plusw0	equ	0xFEB
 18629                           fsr0h	equ	0xFEA
 18630                           fsr0l	equ	0xFE9
 18631                           wreg	equ	0xFE8
 18632                           indf1	equ	0xFE7
 18633                           postinc1	equ	0xFE6
 18634                           postdec1	equ	0xFE5
 18635                           plusw1	equ	0xFE3
 18636                           fsr1h	equ	0xFE2
 18637                           fsr1l	equ	0xFE1
 18638                           indf2	equ	0xFDF
 18639                           postinc2	equ	0xFDE
 18640                           postdec2	equ	0xFDD
 18641                           plusw2	equ	0xFDB
 18642                           fsr2h	equ	0xFDA
 18643                           fsr2l	equ	0xFD9
 18644                           status	equ	0xFD8
 18645                           
 18646 ;; *************** function _ethernetController_getMacAddress *****************
 18647 ;; Defined at:
 18648 ;;		line 157 in file "src/enc424j600/ENC424J600.c"
 18649 ;; Parameters:    Size  Location     Type
 18650 ;;		None
 18651 ;; Auto vars:     Size  Location     Type
 18652 ;;  mac             6   20[BANK0 ] struct macaddress
 18653 ;; Return value:  Size  Location     Type
 18654 ;;                  6   14[BANK0 ] struct macaddress
 18655 ;; Registers used:
 18656 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 18657 ;; Tracked objects:
 18658 ;;		On entry : 0/0
 18659 ;;		On exit  : 0/0
 18660 ;;		Unchanged: 0/0
 18661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18662 ;;      Params:         0       6       0       0       0       0       0       0       0
 18663 ;;      Locals:         0       6       0       0       0       0       0       0       0
 18664 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18665 ;;      Totals:         0      12       0       0       0       0       0       0       0
 18666 ;;Total ram usage:       12 bytes
 18667 ;; Hardware stack levels used:    1
 18668 ;; Hardware stack levels required when called:    7
 18669 ;; This function calls:
 18670 ;;		_enc424j600_readControlRegisterUnbanked
 18671 ;; This function is called by:
 18672 ;;		_main
 18673 ;;		_arp_sendRequest
 18674 ;;		_arp_sendReply
 18675 ;;		_ipv4_sendFrame
 18676 ;; This function uses a non-reentrant model
 18677 ;;
 18678                           
 18679                           	psect	text72
 18680  004A46                     __ptext72:
 18681                           	opt stack 0
 18682  004A46                     _ethernetController_getMacAddress:
 18683                           	opt stack 21
 18684                           
 18685                           ;ENC424J600.c: 158: macaddress_t mac;
 18686                           ;ENC424J600.c: 159: enc424j600_readControlRegisterUnbanked(0x04 + 0x60, &mac.address[0])
      +                          ;
 18687                           
 18688                           ; BSR set to: 0
 18689                           ;incstack = 0
 18690  004A46  0E74               	movlw	low ethernetController_getMacAddress@mac
 18691  004A48  0100               	movlb	0	; () banked
 18692  004A4A  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 18693  004A4C  0E00               	movlw	high ethernetController_getMacAddress@mac
 18694  004A4E  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 18695  004A50  0E64               	movlw	100
 18696  004A52  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 18697                           
 18698                           ;ENC424J600.c: 160: enc424j600_readControlRegisterUnbanked(0x05 + 0x60, &mac.address[1])
      +                          ;
 18699  004A56  0E75               	movlw	low (ethernetController_getMacAddress@mac+1)
 18700  004A58  0100               	movlb	0	; () banked
 18701  004A5A  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 18702  004A5C  0E00               	movlw	high (ethernetController_getMacAddress@mac+1)
 18703  004A5E  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 18704  004A60  0E65               	movlw	101
 18705  004A62  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 18706                           
 18707                           ;ENC424J600.c: 161: enc424j600_readControlRegisterUnbanked(0x02 + 0x60, &mac.address[2])
      +                          ;
 18708  004A66  0E76               	movlw	low (ethernetController_getMacAddress@mac+2)
 18709  004A68  0100               	movlb	0	; () banked
 18710  004A6A  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 18711  004A6C  0E00               	movlw	high (ethernetController_getMacAddress@mac+2)
 18712  004A6E  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 18713  004A70  0E62               	movlw	98
 18714  004A72  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 18715                           
 18716                           ;ENC424J600.c: 162: enc424j600_readControlRegisterUnbanked(0x03 + 0x60, &mac.address[3])
      +                          ;
 18717  004A76  0E77               	movlw	low (ethernetController_getMacAddress@mac+3)
 18718  004A78  0100               	movlb	0	; () banked
 18719  004A7A  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 18720  004A7C  0E00               	movlw	high (ethernetController_getMacAddress@mac+3)
 18721  004A7E  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 18722  004A80  0E63               	movlw	99
 18723  004A82  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 18724                           
 18725                           ;ENC424J600.c: 163: enc424j600_readControlRegisterUnbanked(0x00 + 0x60, &mac.address[4])
      +                          ;
 18726  004A86  0E78               	movlw	low (ethernetController_getMacAddress@mac+4)
 18727  004A88  0100               	movlb	0	; () banked
 18728  004A8A  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 18729  004A8C  0E00               	movlw	high (ethernetController_getMacAddress@mac+4)
 18730  004A8E  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 18731  004A90  0E60               	movlw	96
 18732  004A92  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 18733                           
 18734                           ;ENC424J600.c: 164: enc424j600_readControlRegisterUnbanked(0x01 + 0x60, &mac.address[5])
      +                          ;
 18735  004A96  0E79               	movlw	low (ethernetController_getMacAddress@mac+5)
 18736  004A98  0100               	movlb	0	; () banked
 18737  004A9A  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 18738  004A9C  0E00               	movlw	high (ethernetController_getMacAddress@mac+5)
 18739  004A9E  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 18740  004AA0  0E61               	movlw	97
 18741  004AA2  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 18742                           
 18743                           ;ENC424J600.c: 165: return mac;
 18744  004AA6  EE20  F074         	lfsr	2,ethernetController_getMacAddress@mac
 18745  004AAA  EE00  F06E         	lfsr	0,?_ethernetController_getMacAddress
 18746  004AAE  0E05               	movlw	5
 18747  004AB0                     u9881:
 18748  004AB0  CFDB FFEB          	movff	plusw2,plusw0
 18749  004AB4  06E8               	decf	wreg,f,c
 18750  004AB6  E2FC               	bc	u9881
 18751  004AB8  0012               	return	
 18752  004ABA                     __end_of_ethernetController_getMacAddress:
 18753                           	opt stack 0
 18754                           tblptru	equ	0xFF8
 18755                           tblptrh	equ	0xFF7
 18756                           tblptrl	equ	0xFF6
 18757                           tablat	equ	0xFF5
 18758                           prodh	equ	0xFF4
 18759                           prodl	equ	0xFF3
 18760                           intcon	equ	0xFF2
 18761                           intcon3	equ	0xFF0
 18762                           indf0	equ	0xFEF
 18763                           postinc0	equ	0xFEE
 18764                           plusw0	equ	0xFEB
 18765                           fsr0h	equ	0xFEA
 18766                           fsr0l	equ	0xFE9
 18767                           wreg	equ	0xFE8
 18768                           indf1	equ	0xFE7
 18769                           postinc1	equ	0xFE6
 18770                           postdec1	equ	0xFE5
 18771                           plusw1	equ	0xFE3
 18772                           fsr1h	equ	0xFE2
 18773                           fsr1l	equ	0xFE1
 18774                           indf2	equ	0xFDF
 18775                           postinc2	equ	0xFDE
 18776                           postdec2	equ	0xFDD
 18777                           plusw2	equ	0xFDB
 18778                           fsr2h	equ	0xFDA
 18779                           fsr2l	equ	0xFD9
 18780                           status	equ	0xFD8
 18781                           
 18782 ;; *************** function _arp_send *****************
 18783 ;; Defined at:
 18784 ;;		line 141 in file "src/stack/protocols/arp.c"
 18785 ;; Parameters:    Size  Location     Type
 18786 ;;  arp            32   71[BANK0 ] struct arp_message
 18787 ;; Auto vars:     Size  Location     Type
 18788 ;;  i               1  112[BANK0 ] unsigned char 
 18789 ;;  i               1  111[BANK0 ] unsigned char 
 18790 ;;  i               1  110[BANK0 ] unsigned char 
 18791 ;;  i               1  109[BANK0 ] unsigned char 
 18792 ;;  ethFrame       34  113[BANK0 ] struct ethernetFrame
 18793 ;;  field           9  147[BANK0 ] struct memoryField
 18794 ;;  destination     6  103[BANK0 ] struct macaddress
 18795 ;; Return value:  Size  Location     Type
 18796 ;;                  1    wreg      void 
 18797 ;; Registers used:
 18798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18799 ;; Tracked objects:
 18800 ;;		On entry : 0/0
 18801 ;;		On exit  : 0/0
 18802 ;;		Unchanged: 0/0
 18803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18804 ;;      Params:         0      32       0       0       0       0       0       0       0
 18805 ;;      Locals:         0      53       0       0       0       0       0       0       0
 18806 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18807 ;;      Totals:         0      85       0       0       0       0       0       0       0
 18808 ;;Total ram usage:       85 bytes
 18809 ;; Hardware stack levels used:    1
 18810 ;; Hardware stack levels required when called:    9
 18811 ;; This function calls:
 18812 ;;		_ethernetController_getSourceMACAddress
 18813 ;;		_ethernetController_sendPacket
 18814 ;;		_ethernetController_streamToTransmitBuffer
 18815 ;;		_ethernet_txFrameRequest
 18816 ;;		_mac_setToBroadcast
 18817 ;; This function is called by:
 18818 ;;		_arp_sendRequest
 18819 ;;		_arp_sendReply
 18820 ;; This function uses a non-reentrant model
 18821 ;;
 18822                           
 18823                           	psect	text73
 18824  001EB2                     __ptext73:
 18825                           	opt stack 0
 18826  001EB2                     _arp_send:
 18827                           	opt stack 18
 18828                           
 18829                           ;arp.c: 142: memoryField_t field;
 18830                           ;arp.c: 143: ethernetFrame_t ethFrame;
 18831                           ;arp.c: 146: macaddress_t destination;
 18832                           ;arp.c: 147: mac_setToBroadcast(&destination);
 18833                           
 18834                           ;incstack = 0
 18835  001EB2  0EC7               	movlw	low arp_send@destination
 18836  001EB4  0100               	movlb	0	; () banked
 18837  001EB6  6F60               	movwf	mac_setToBroadcast@mac& (0+255),b
 18838  001EB8  0E00               	movlw	high arp_send@destination
 18839  001EBA  6F61               	movwf	(mac_setToBroadcast@mac+1)& (0+255),b
 18840  001EBC  EC19  F02B         	call	_mac_setToBroadcast	;wreg free
 18841                           
 18842                           ;arp.c: 148: ethFrame.destination = destination;
 18843  001EC0  EE20  F0C7         	lfsr	2,arp_send@destination
 18844  001EC4  EE10  F0D9         	lfsr	1,arp_send@ethFrame+8
 18845  001EC8  0E05               	movlw	5
 18846  001ECA                     u10261:
 18847  001ECA  CFDB FFE3          	movff	plusw2,plusw1
 18848  001ECE  06E8               	decf	wreg,f,c
 18849  001ED0  E2FC               	bc	u10261
 18850                           
 18851                           ;arp.c: 152: ethFrame.length = 36;
 18852  001ED2  0E00               	movlw	0
 18853  001ED4  0100               	movlb	0	; () banked
 18854  001ED6  6FD2               	movwf	(arp_send@ethFrame+1)& (0+255),b
 18855  001ED8  0E24               	movlw	36
 18856  001EDA  6FD1               	movwf	arp_send@ethFrame& (0+255),b
 18857                           
 18858                           ; BSR set to: 0
 18859                           ;arp.c: 153: ethFrame.source = ethernetController_getSourceMACAddress(field);
 18860  001EDC  EE20  F0F3         	lfsr	2,arp_send@field
 18861  001EE0  EE00  F06F         	lfsr	0,ethernetController_getSourceMACAddress@field
 18862  001EE4  0E08               	movlw	8
 18863  001EE6                     u10271:
 18864  001EE6  CFDB FFEB          	movff	plusw2,plusw0
 18865  001EEA  06E8               	decf	wreg,f,c
 18866  001EEC  E2FC               	bc	u10271
 18867  001EEE  ECCE  F025         	call	_ethernetController_getSourceMACAddress	;wreg free
 18868  001EF2  EE20  F0D3         	lfsr	2,arp_send@ethFrame+2
 18869  001EF6  0E05               	movlw	5
 18870  001EF8                     u10281:
 18871  001EF8  CFEB FFDB          	movff	plusw0,plusw2
 18872  001EFC  06E8               	decf	wreg,f,c
 18873  001EFE  E2FC               	bc	u10281
 18874                           
 18875                           ;arp.c: 154: ethFrame.ethertype = ETHERTYPE_ARP;
 18876  001F00  0E08               	movlw	8
 18877  001F02  0100               	movlb	0	; () banked
 18878  001F04  6FE0               	movwf	(arp_send@ethFrame+15)& (0+255),b
 18879  001F06  0E06               	movlw	6
 18880  001F08  6FDF               	movwf	(arp_send@ethFrame+14)& (0+255),b
 18881                           
 18882                           ; BSR set to: 0
 18883                           ;arp.c: 156: ethernet_txFrameRequest(&ethFrame);
 18884  001F0A  0ED1               	movlw	low arp_send@ethFrame
 18885  001F0C  6FA2               	movwf	ethernet_txFrameRequest@frame& (0+255),b
 18886  001F0E  0E00               	movlw	high arp_send@ethFrame
 18887  001F10  6FA3               	movwf	(ethernet_txFrameRequest@frame+1)& (0+255),b
 18888  001F12  EC35  F01F         	call	_ethernet_txFrameRequest	;wreg free
 18889                           
 18890                           ;arp.c: 158: if (ethFrame.memory.fOutOfMemory) {
 18891  001F16  0100               	movlb	0	; () banked
 18892  001F18  51E8               	movf	(arp_send@ethFrame+23)& (0+255),w,b
 18893  001F1A  A4D8               	btfss	status,2,c
 18894  001F1C  0012               	return	
 18895                           
 18896                           ; BSR set to: 0
 18897                           ;arp.c: 160: }
 18898                           ;arp.c: 162: field.start = ethFrame.memory.start + 8;
 18899                           
 18900                           ; BSR set to: 0
 18901                           
 18902                           ; BSR set to: 0
 18903                           ;arp.c: 159: return;
 18904  001F1E  0E08               	movlw	8
 18905  001F20  25E1               	addwf	(arp_send@ethFrame+16)& (0+255),w,b
 18906  001F22  6FF3               	movwf	arp_send@field& (0+255),b
 18907  001F24  0E00               	movlw	0
 18908  001F26  21E2               	addwfc	(arp_send@ethFrame+17)& (0+255),w,b
 18909  001F28  6FF4               	movwf	(arp_send@field+1)& (0+255),b
 18910                           
 18911                           ; BSR set to: 0
 18912                           ;arp.c: 163: field.end = ethFrame.memory.end;
 18913  001F2A  C0E3  F0F5         	movff	arp_send@ethFrame+18,arp_send@field+2
 18914  001F2E  C0E4  F0F6         	movff	arp_send@ethFrame+19,arp_send@field+3
 18915                           
 18916                           ; BSR set to: 0
 18917                           ;arp.c: 164: field.length = 28;
 18918  001F32  0E00               	movlw	0
 18919  001F34  6FF8               	movwf	(arp_send@field+5)& (0+255),b
 18920  001F36  0E1C               	movlw	28
 18921  001F38  6FF7               	movwf	(arp_send@field+4)& (0+255),b
 18922                           
 18923                           ; BSR set to: 0
 18924                           ;arp.c: 166: ethernetController_streamToTransmitBuffer((arp.htype & 0xff00) >> 8, field)
      +                          ;
 18925  001F3A  EE20  F0F3         	lfsr	2,arp_send@field
 18926  001F3E  EE00  F06F         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 18927  001F42  0E08               	movlw	8
 18928  001F44                     u10301:
 18929  001F44  CFDB FFEB          	movff	plusw2,plusw0
 18930  001F48  06E8               	decf	wreg,f,c
 18931  001F4A  E2FC               	bc	u10301
 18932  001F4C  51A8               	movf	(arp_send@arp+1)& (0+255),w,b
 18933  001F4E  EC73  F024         	call	_ethernetController_streamToTransmitBuffer
 18934                           
 18935                           ;arp.c: 167: ethernetController_streamToTransmitBuffer(arp.htype & 0x00ff, field);
 18936  001F52  EE20  F0F3         	lfsr	2,arp_send@field
 18937  001F56  EE00  F06F         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 18938  001F5A  0E08               	movlw	8
 18939  001F5C                     u10311:
 18940  001F5C  CFDB FFEB          	movff	plusw2,plusw0
 18941  001F60  06E8               	decf	wreg,f,c
 18942  001F62  E2FC               	bc	u10311
 18943  001F64  0100               	movlb	0	; () banked
 18944  001F66  51A7               	movf	arp_send@arp& (0+255),w,b
 18945  001F68  EC73  F024         	call	_ethernetController_streamToTransmitBuffer
 18946                           
 18947                           ;arp.c: 168: ethernetController_streamToTransmitBuffer((arp.ptype & 0xff00) >> 8, field)
      +                          ;
 18948  001F6C  EE20  F0F3         	lfsr	2,arp_send@field
 18949  001F70  EE00  F06F         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 18950  001F74  0E08               	movlw	8
 18951  001F76                     u10321:
 18952  001F76  CFDB FFEB          	movff	plusw2,plusw0
 18953  001F7A  06E8               	decf	wreg,f,c
 18954  001F7C  E2FC               	bc	u10321
 18955  001F7E  0100               	movlb	0	; () banked
 18956  001F80  51AA               	movf	(arp_send@arp+3)& (0+255),w,b
 18957  001F82  EC73  F024         	call	_ethernetController_streamToTransmitBuffer
 18958                           
 18959                           ;arp.c: 169: ethernetController_streamToTransmitBuffer(arp.ptype & 0x00ff, field);
 18960  001F86  EE20  F0F3         	lfsr	2,arp_send@field
 18961  001F8A  EE00  F06F         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 18962  001F8E  0E08               	movlw	8
 18963  001F90                     u10331:
 18964  001F90  CFDB FFEB          	movff	plusw2,plusw0
 18965  001F94  06E8               	decf	wreg,f,c
 18966  001F96  E2FC               	bc	u10331
 18967  001F98  0100               	movlb	0	; () banked
 18968  001F9A  51A9               	movf	(arp_send@arp+2)& (0+255),w,b
 18969  001F9C  EC73  F024         	call	_ethernetController_streamToTransmitBuffer
 18970                           
 18971                           ;arp.c: 170: ethernetController_streamToTransmitBuffer(arp.hlen, field);
 18972  001FA0  EE20  F0F3         	lfsr	2,arp_send@field
 18973  001FA4  EE00  F06F         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 18974  001FA8  0E08               	movlw	8
 18975  001FAA                     u10341:
 18976  001FAA  CFDB FFEB          	movff	plusw2,plusw0
 18977  001FAE  06E8               	decf	wreg,f,c
 18978  001FB0  E2FC               	bc	u10341
 18979  001FB2  0100               	movlb	0	; () banked
 18980  001FB4  51AB               	movf	(arp_send@arp+4)& (0+255),w,b
 18981  001FB6  EC73  F024         	call	_ethernetController_streamToTransmitBuffer
 18982                           
 18983                           ;arp.c: 171: ethernetController_streamToTransmitBuffer(arp.plen, field);
 18984  001FBA  EE20  F0F3         	lfsr	2,arp_send@field
 18985  001FBE  EE00  F06F         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 18986  001FC2  0E08               	movlw	8
 18987  001FC4                     u10351:
 18988  001FC4  CFDB FFEB          	movff	plusw2,plusw0
 18989  001FC8  06E8               	decf	wreg,f,c
 18990  001FCA  E2FC               	bc	u10351
 18991  001FCC  0100               	movlb	0	; () banked
 18992  001FCE  51AC               	movf	(arp_send@arp+5)& (0+255),w,b
 18993  001FD0  EC73  F024         	call	_ethernetController_streamToTransmitBuffer
 18994                           
 18995                           ;arp.c: 172: ethernetController_streamToTransmitBuffer((arp.operation & 0xff00) >> 8, fi
      +                          eld);
 18996  001FD4  EE20  F0F3         	lfsr	2,arp_send@field
 18997  001FD8  EE00  F06F         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 18998  001FDC  0E08               	movlw	8
 18999  001FDE                     u10361:
 19000  001FDE  CFDB FFEB          	movff	plusw2,plusw0
 19001  001FE2  06E8               	decf	wreg,f,c
 19002  001FE4  E2FC               	bc	u10361
 19003  001FE6  0100               	movlb	0	; () banked
 19004  001FE8  51AE               	movf	(arp_send@arp+7)& (0+255),w,b
 19005  001FEA  EC73  F024         	call	_ethernetController_streamToTransmitBuffer
 19006                           
 19007                           ;arp.c: 173: ethernetController_streamToTransmitBuffer(arp.operation & 0x00ff, field);
 19008  001FEE  EE20  F0F3         	lfsr	2,arp_send@field
 19009  001FF2  EE00  F06F         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 19010  001FF6  0E08               	movlw	8
 19011  001FF8                     u10371:
 19012  001FF8  CFDB FFEB          	movff	plusw2,plusw0
 19013  001FFC  06E8               	decf	wreg,f,c
 19014  001FFE  E2FC               	bc	u10371
 19015  002000  0100               	movlb	0	; () banked
 19016  002002  51AD               	movf	(arp_send@arp+6)& (0+255),w,b
 19017  002004  EC73  F024         	call	_ethernetController_streamToTransmitBuffer
 19018                           
 19019                           ;arp.c: 174: for (uint8_t i = 0; i < arp.hlen; i++)
 19020  002008  0E00               	movlw	0
 19021  00200A  0100               	movlb	0	; () banked
 19022  00200C  6FCD               	movwf	arp_send@i& (0+255),b
 19023  00200E  D01A               	goto	l970
 19024  002010                     
 19025                           ; BSR set to: 0
 19026                           ;arp.c: 175: ethernetController_streamToTransmitBuffer(arp.senderMACAddress.address[i], 
      +                          field);
 19027                           
 19028                           ; BSR set to: 0
 19029  002010  EE20  F0F3         	lfsr	2,arp_send@field
 19030  002014  EE00  F06F         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 19031  002018  0E08               	movlw	8
 19032  00201A                     u10381:
 19033  00201A  CFDB FFEB          	movff	plusw2,plusw0
 19034  00201E  06E8               	decf	wreg,f,c
 19035  002020  E2FC               	bc	u10381
 19036  002022  51CD               	movf	arp_send@i& (0+255),w,b
 19037  002024  0D01               	mullw	1
 19038  002026  0E08               	movlw	8
 19039  002028  26F3               	addwf	prodl,f,c
 19040  00202A  0E00               	movlw	0
 19041  00202C  22F4               	addwfc	prodh,f,c
 19042  00202E  0EA7               	movlw	low arp_send@arp
 19043  002030  24F3               	addwf	prodl,w,c
 19044  002032  6ED9               	movwf	fsr2l,c
 19045  002034  0E00               	movlw	high arp_send@arp
 19046  002036  20F4               	addwfc	prodh,w,c
 19047  002038  6EDA               	movwf	fsr2h,c
 19048  00203A  50DF               	movf	indf2,w,c
 19049  00203C  EC73  F024         	call	_ethernetController_streamToTransmitBuffer
 19050  002040  0100               	movlb	0	; () banked
 19051  002042  2BCD               	incf	arp_send@i& (0+255),f,b
 19052  002044                     l970:
 19053                           
 19054                           ; BSR set to: 0
 19055                           
 19056                           ; BSR set to: 0
 19057  002044  51AB               	movf	(arp_send@arp+4)& (0+255),w,b
 19058  002046  5DCD               	subwf	arp_send@i& (0+255),w,b
 19059  002048  A0D8               	btfss	status,0,c
 19060  00204A  D7E2               	goto	l971
 19061                           
 19062                           ; BSR set to: 0
 19063                           ;arp.c: 176: for (uint8_t i = 0; i < arp.plen; i++)
 19064                           
 19065                           ; BSR set to: 0
 19066  00204C  0E00               	movlw	0
 19067  00204E  6FCE               	movwf	arp_send@i_3113& (0+255),b
 19068  002050  D01A               	goto	l973
 19069  002052                     
 19070                           ; BSR set to: 0
 19071                           ;arp.c: 177: ethernetController_streamToTransmitBuffer(arp.senderIPAddress.address[i], f
      +                          ield);
 19072                           
 19073                           ; BSR set to: 0
 19074  002052  EE20  F0F3         	lfsr	2,arp_send@field
 19075  002056  EE00  F06F         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 19076  00205A  0E08               	movlw	8
 19077  00205C                     u10401:
 19078  00205C  CFDB FFEB          	movff	plusw2,plusw0
 19079  002060  06E8               	decf	wreg,f,c
 19080  002062  E2FC               	bc	u10401
 19081  002064  51CE               	movf	arp_send@i_3113& (0+255),w,b
 19082  002066  0D01               	mullw	1
 19083  002068  0E0E               	movlw	14
 19084  00206A  26F3               	addwf	prodl,f,c
 19085  00206C  0E00               	movlw	0
 19086  00206E  22F4               	addwfc	prodh,f,c
 19087  002070  0EA7               	movlw	low arp_send@arp
 19088  002072  24F3               	addwf	prodl,w,c
 19089  002074  6ED9               	movwf	fsr2l,c
 19090  002076  0E00               	movlw	high arp_send@arp
 19091  002078  20F4               	addwfc	prodh,w,c
 19092  00207A  6EDA               	movwf	fsr2h,c
 19093  00207C  50DF               	movf	indf2,w,c
 19094  00207E  EC73  F024         	call	_ethernetController_streamToTransmitBuffer
 19095  002082  0100               	movlb	0	; () banked
 19096  002084  2BCE               	incf	arp_send@i_3113& (0+255),f,b
 19097  002086                     l973:
 19098                           
 19099                           ; BSR set to: 0
 19100                           
 19101                           ; BSR set to: 0
 19102  002086  51AC               	movf	(arp_send@arp+5)& (0+255),w,b
 19103  002088  5DCE               	subwf	arp_send@i_3113& (0+255),w,b
 19104  00208A  A0D8               	btfss	status,0,c
 19105  00208C  D7E2               	goto	l974
 19106                           
 19107                           ; BSR set to: 0
 19108                           ;arp.c: 178: for (uint8_t i = 0; i < arp.hlen; i++)
 19109                           
 19110                           ; BSR set to: 0
 19111  00208E  0E00               	movlw	0
 19112  002090  6FCF               	movwf	arp_send@i_3114& (0+255),b
 19113  002092  D01A               	goto	l976
 19114  002094                     
 19115                           ; BSR set to: 0
 19116                           ;arp.c: 179: ethernetController_streamToTransmitBuffer(arp.targetMACAddress.address[i], 
      +                          field);
 19117                           
 19118                           ; BSR set to: 0
 19119  002094  EE20  F0F3         	lfsr	2,arp_send@field
 19120  002098  EE00  F06F         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 19121  00209C  0E08               	movlw	8
 19122  00209E                     u10421:
 19123  00209E  CFDB FFEB          	movff	plusw2,plusw0
 19124  0020A2  06E8               	decf	wreg,f,c
 19125  0020A4  E2FC               	bc	u10421
 19126  0020A6  51CF               	movf	arp_send@i_3114& (0+255),w,b
 19127  0020A8  0D01               	mullw	1
 19128  0020AA  0E12               	movlw	18
 19129  0020AC  26F3               	addwf	prodl,f,c
 19130  0020AE  0E00               	movlw	0
 19131  0020B0  22F4               	addwfc	prodh,f,c
 19132  0020B2  0EA7               	movlw	low arp_send@arp
 19133  0020B4  24F3               	addwf	prodl,w,c
 19134  0020B6  6ED9               	movwf	fsr2l,c
 19135  0020B8  0E00               	movlw	high arp_send@arp
 19136  0020BA  20F4               	addwfc	prodh,w,c
 19137  0020BC  6EDA               	movwf	fsr2h,c
 19138  0020BE  50DF               	movf	indf2,w,c
 19139  0020C0  EC73  F024         	call	_ethernetController_streamToTransmitBuffer
 19140  0020C4  0100               	movlb	0	; () banked
 19141  0020C6  2BCF               	incf	arp_send@i_3114& (0+255),f,b
 19142  0020C8                     l976:
 19143                           
 19144                           ; BSR set to: 0
 19145                           
 19146                           ; BSR set to: 0
 19147  0020C8  51AB               	movf	(arp_send@arp+4)& (0+255),w,b
 19148  0020CA  5DCF               	subwf	arp_send@i_3114& (0+255),w,b
 19149  0020CC  A0D8               	btfss	status,0,c
 19150  0020CE  D7E2               	goto	l977
 19151                           
 19152                           ; BSR set to: 0
 19153                           ;arp.c: 180: for (uint8_t i = 0; i < arp.plen; i++)
 19154                           
 19155                           ; BSR set to: 0
 19156  0020D0  0E00               	movlw	0
 19157  0020D2  6FD0               	movwf	arp_send@i_3115& (0+255),b
 19158  0020D4  D01A               	goto	l979
 19159  0020D6                     
 19160                           ; BSR set to: 0
 19161                           ;arp.c: 181: ethernetController_streamToTransmitBuffer(arp.targetIPAddress.address[i], f
      +                          ield);
 19162                           
 19163                           ; BSR set to: 0
 19164  0020D6  EE20  F0F3         	lfsr	2,arp_send@field
 19165  0020DA  EE00  F06F         	lfsr	0,ethernetController_streamToTransmitBuffer@field
 19166  0020DE  0E08               	movlw	8
 19167  0020E0                     u10441:
 19168  0020E0  CFDB FFEB          	movff	plusw2,plusw0
 19169  0020E4  06E8               	decf	wreg,f,c
 19170  0020E6  E2FC               	bc	u10441
 19171  0020E8  51D0               	movf	arp_send@i_3115& (0+255),w,b
 19172  0020EA  0D01               	mullw	1
 19173  0020EC  0E18               	movlw	24
 19174  0020EE  26F3               	addwf	prodl,f,c
 19175  0020F0  0E00               	movlw	0
 19176  0020F2  22F4               	addwfc	prodh,f,c
 19177  0020F4  0EA7               	movlw	low arp_send@arp
 19178  0020F6  24F3               	addwf	prodl,w,c
 19179  0020F8  6ED9               	movwf	fsr2l,c
 19180  0020FA  0E00               	movlw	high arp_send@arp
 19181  0020FC  20F4               	addwfc	prodh,w,c
 19182  0020FE  6EDA               	movwf	fsr2h,c
 19183  002100  50DF               	movf	indf2,w,c
 19184  002102  EC73  F024         	call	_ethernetController_streamToTransmitBuffer
 19185  002106  0100               	movlb	0	; () banked
 19186  002108  2BD0               	incf	arp_send@i_3115& (0+255),f,b
 19187  00210A                     l979:
 19188                           
 19189                           ; BSR set to: 0
 19190                           
 19191                           ; BSR set to: 0
 19192  00210A  51AC               	movf	(arp_send@arp+5)& (0+255),w,b
 19193  00210C  5DD0               	subwf	arp_send@i_3115& (0+255),w,b
 19194  00210E  A0D8               	btfss	status,0,c
 19195  002110  D7E2               	goto	l980
 19196                           
 19197                           ; BSR set to: 0
 19198                           ;arp.c: 183: ethernetController_sendPacket(ethFrame.memory);
 19199                           
 19200                           ; BSR set to: 0
 19201  002112  EE20  F0E1         	lfsr	2,arp_send@ethFrame+16
 19202  002116  EE00  F072         	lfsr	0,ethernetController_sendPacket@field
 19203  00211A  0E08               	movlw	8
 19204  00211C                     u10461:
 19205  00211C  CFDB FFEB          	movff	plusw2,plusw0
 19206  002120  06E8               	decf	wreg,f,c
 19207  002122  E2FC               	bc	u10461
 19208  002124  ECCB  F02A         	call	_ethernetController_sendPacket	;wreg free
 19209  002128  0012               	return		;funcret
 19210  00212A                     __end_of_arp_send:
 19211                           	opt stack 0
 19212                           tblptru	equ	0xFF8
 19213                           tblptrh	equ	0xFF7
 19214                           tblptrl	equ	0xFF6
 19215                           tablat	equ	0xFF5
 19216                           prodh	equ	0xFF4
 19217                           prodl	equ	0xFF3
 19218                           intcon	equ	0xFF2
 19219                           intcon3	equ	0xFF0
 19220                           indf0	equ	0xFEF
 19221                           postinc0	equ	0xFEE
 19222                           plusw0	equ	0xFEB
 19223                           fsr0h	equ	0xFEA
 19224                           fsr0l	equ	0xFE9
 19225                           wreg	equ	0xFE8
 19226                           indf1	equ	0xFE7
 19227                           postinc1	equ	0xFE6
 19228                           postdec1	equ	0xFE5
 19229                           plusw1	equ	0xFE3
 19230                           fsr1h	equ	0xFE2
 19231                           fsr1l	equ	0xFE1
 19232                           indf2	equ	0xFDF
 19233                           postinc2	equ	0xFDE
 19234                           postdec2	equ	0xFDD
 19235                           plusw2	equ	0xFDB
 19236                           fsr2h	equ	0xFDA
 19237                           fsr2l	equ	0xFD9
 19238                           status	equ	0xFD8
 19239                           
 19240 ;; *************** function _mac_setToBroadcast *****************
 19241 ;; Defined at:
 19242 ;;		line 26 in file "src/eth/mac.c"
 19243 ;; Parameters:    Size  Location     Type
 19244 ;;  mac             2    0[BANK0 ] PTR struct macaddress
 19245 ;;		 -> arp_send@destination(6), 
 19246 ;; Auto vars:     Size  Location     Type
 19247 ;;  i               1    2[BANK0 ] unsigned char 
 19248 ;; Return value:  Size  Location     Type
 19249 ;;                  1    wreg      void 
 19250 ;; Registers used:
 19251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19252 ;; Tracked objects:
 19253 ;;		On entry : 0/0
 19254 ;;		On exit  : 0/0
 19255 ;;		Unchanged: 0/0
 19256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19257 ;;      Params:         0       2       0       0       0       0       0       0       0
 19258 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19259 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19260 ;;      Totals:         0       3       0       0       0       0       0       0       0
 19261 ;;Total ram usage:        3 bytes
 19262 ;; Hardware stack levels used:    1
 19263 ;; Hardware stack levels required when called:    4
 19264 ;; This function calls:
 19265 ;;		Nothing
 19266 ;; This function is called by:
 19267 ;;		_arp_send
 19268 ;; This function uses a non-reentrant model
 19269 ;;
 19270                           
 19271                           	psect	text74
 19272  005632                     __ptext74:
 19273                           	opt stack 0
 19274  005632                     _mac_setToBroadcast:
 19275                           	opt stack 22
 19276                           
 19277                           ;mac.c: 27: for (uint8_t i = 0; i < 6; i++)
 19278                           
 19279                           ;incstack = 0
 19280  005632  0E00               	movlw	0
 19281  005634  0100               	movlb	0	; () banked
 19282  005636  6F62               	movwf	mac_setToBroadcast@i& (0+255),b
 19283  005638                     l8873:
 19284                           
 19285                           ; BSR set to: 0
 19286  005638  0E05               	movlw	5
 19287  00563A  6562               	cpfsgt	mac_setToBroadcast@i& (0+255),b
 19288  00563C  D001               	goto	l379
 19289  00563E  0012               	return	
 19290  005640                     l379:
 19291                           
 19292                           ; BSR set to: 0
 19293                           ;mac.c: 28: mac->address[i] = 0xff;
 19294                           
 19295                           ; BSR set to: 0
 19296  005640  5162               	movf	mac_setToBroadcast@i& (0+255),w,b
 19297  005642  0D01               	mullw	1
 19298  005644  50F3               	movf	prodl,w,c
 19299  005646  2560               	addwf	mac_setToBroadcast@mac& (0+255),w,b
 19300  005648  6ED9               	movwf	fsr2l,c
 19301  00564A  50F4               	movf	prodh,w,c
 19302  00564C  2161               	addwfc	(mac_setToBroadcast@mac+1)& (0+255),w,b
 19303  00564E  6EDA               	movwf	fsr2h,c
 19304  005650  0EFF               	movlw	255
 19305  005652  6EDF               	movwf	indf2,c
 19306                           
 19307                           ; BSR set to: 0
 19308  005654  2B62               	incf	mac_setToBroadcast@i& (0+255),f,b
 19309  005656  D7F0               	goto	l8873
 19310  005658                     __end_of_mac_setToBroadcast:
 19311                           	opt stack 0
 19312                           tblptru	equ	0xFF8
 19313                           tblptrh	equ	0xFF7
 19314                           tblptrl	equ	0xFF6
 19315                           tablat	equ	0xFF5
 19316                           prodh	equ	0xFF4
 19317                           prodl	equ	0xFF3
 19318                           intcon	equ	0xFF2
 19319                           intcon3	equ	0xFF0
 19320                           indf0	equ	0xFEF
 19321                           postinc0	equ	0xFEE
 19322                           plusw0	equ	0xFEB
 19323                           fsr0h	equ	0xFEA
 19324                           fsr0l	equ	0xFE9
 19325                           wreg	equ	0xFE8
 19326                           indf1	equ	0xFE7
 19327                           postinc1	equ	0xFE6
 19328                           postdec1	equ	0xFE5
 19329                           plusw1	equ	0xFE3
 19330                           fsr1h	equ	0xFE2
 19331                           fsr1l	equ	0xFE1
 19332                           indf2	equ	0xFDF
 19333                           postinc2	equ	0xFDE
 19334                           postdec2	equ	0xFDD
 19335                           plusw2	equ	0xFDB
 19336                           fsr2h	equ	0xFDA
 19337                           fsr2l	equ	0xFD9
 19338                           status	equ	0xFD8
 19339                           
 19340 ;; *************** function _ethernet_txFrameRequest *****************
 19341 ;; Defined at:
 19342 ;;		line 30 in file "src/eth/ethernet.c"
 19343 ;; Parameters:    Size  Location     Type
 19344 ;;  frame           2   66[BANK0 ] PTR struct ethernetFrame
 19345 ;;		 -> arp_send@ethFrame(34), stack(123), 
 19346 ;; Auto vars:     Size  Location     Type
 19347 ;;  err             3   68[BANK0 ] struct error
 19348 ;; Return value:  Size  Location     Type
 19349 ;;                  3   66[BANK0 ] struct error
 19350 ;; Registers used:
 19351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19352 ;; Tracked objects:
 19353 ;;		On entry : 0/0
 19354 ;;		On exit  : 0/0
 19355 ;;		Unchanged: 0/0
 19356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19357 ;;      Params:         0       2       0       0       0       0       0       0       0
 19358 ;;      Locals:         0       3       0       0       0       0       0       0       0
 19359 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19360 ;;      Totals:         0       5       0       0       0       0       0       0       0
 19361 ;;Total ram usage:        5 bytes
 19362 ;; Hardware stack levels used:    1
 19363 ;; Hardware stack levels required when called:    8
 19364 ;; This function calls:
 19365 ;;		_ethernetController_writeDestinationMACAddress
 19366 ;;		_ethernetController_writeEtherTypeFieldToBuffer
 19367 ;;		_memory_txFrameRequest
 19368 ;; This function is called by:
 19369 ;;		_arp_send
 19370 ;;		_ipv4_txFrameRequest
 19371 ;; This function uses a non-reentrant model
 19372 ;;
 19373                           
 19374                           	psect	text75
 19375  003E6A                     __ptext75:
 19376                           	opt stack 0
 19377  003E6A                     _ethernet_txFrameRequest:
 19378                           	opt stack 21
 19379                           
 19380                           ;ethernet.c: 32: error_t err;
 19381                           ;ethernet.c: 33: err.module = ERROR_MODULE_ETHERNET;
 19382                           
 19383                           ; BSR set to: 0
 19384                           ;incstack = 0
 19385  003E6A  0E02               	movlw	2
 19386  003E6C  0100               	movlb	0	; () banked
 19387  003E6E  6FA4               	movwf	ethernet_txFrameRequest@err& (0+255),b
 19388                           
 19389                           ;ethernet.c: 34: err.code = (uint16_t)0;
 19390  003E70  0E00               	movlw	0
 19391  003E72  6FA6               	movwf	(ethernet_txFrameRequest@err+2)& (0+255),b
 19392  003E74  0E00               	movlw	0
 19393  003E76  6FA5               	movwf	(ethernet_txFrameRequest@err+1)& (0+255),b
 19394                           
 19395                           ; BSR set to: 0
 19396                           ;ethernet.c: 35: frame->memory = memory_txFrameRequest(frame->length);
 19397  003E78  C0A2  FFD9         	movff	ethernet_txFrameRequest@frame,fsr2l
 19398  003E7C  C0A3  FFDA         	movff	ethernet_txFrameRequest@frame+1,fsr2h
 19399  003E80  CFDE F084          	movff	postinc2,memory_txFrameRequest@length
 19400  003E84  CFDD F085          	movff	postdec2,memory_txFrameRequest@length+1
 19401  003E88  ECFF  F002         	call	_memory_txFrameRequest	;wreg free
 19402  003E8C  0100               	movlb	0	; () banked
 19403  003E8E  EE20 F010          	lfsr	2,16
 19404  003E92  51A2               	movf	ethernet_txFrameRequest@frame& (0+255),w,b
 19405  003E94  26D9               	addwf	fsr2l,f,c
 19406  003E96  51A3               	movf	(ethernet_txFrameRequest@frame+1)& (0+255),w,b
 19407  003E98  22DA               	addwfc	fsr2h,f,c
 19408  003E9A  0E08               	movlw	8
 19409  003E9C                     u9691:
 19410  003E9C  CFEB FFDB          	movff	plusw0,plusw2
 19411  003EA0  06E8               	decf	wreg,f,c
 19412  003EA2  E2FC               	bc	u9691
 19413                           
 19414                           ; BSR set to: 0
 19415                           ;ethernet.c: 37: if (frame->memory.fOutOfMemory) {
 19416  003EA4  EE20 F017          	lfsr	2,23
 19417  003EA8  51A2               	movf	ethernet_txFrameRequest@frame& (0+255),w,b
 19418  003EAA  26D9               	addwf	fsr2l,f,c
 19419  003EAC  51A3               	movf	(ethernet_txFrameRequest@frame+1)& (0+255),w,b
 19420  003EAE  22DA               	addwfc	fsr2h,f,c
 19421  003EB0  50DF               	movf	indf2,w,c
 19422  003EB2  B4D8               	btfsc	status,2,c
 19423  003EB4  D007               	goto	l359
 19424                           
 19425                           ; BSR set to: 0
 19426                           ;ethernet.c: 39: err.module = ERROR_MODULE_MEMORY;
 19427  003EB6  0E00               	movlw	0
 19428  003EB8  6FA4               	movwf	ethernet_txFrameRequest@err& (0+255),b
 19429                           
 19430                           ;ethernet.c: 40: err.code = ERROR_MEMORY_OUT_OF_MEMORY;
 19431  003EBA  0E00               	movlw	0
 19432  003EBC  6FA6               	movwf	(ethernet_txFrameRequest@err+2)& (0+255),b
 19433  003EBE  0E65               	movlw	101
 19434  003EC0  6FA5               	movwf	(ethernet_txFrameRequest@err+1)& (0+255),b
 19435                           
 19436                           ; BSR set to: 0
 19437                           ;ethernet.c: 41: return err;
 19438                           ;	Return value of _ethernet_txFrameRequest is never used
 19439  003EC2  0012               	return	
 19440  003EC4                     l359:
 19441                           
 19442                           ; BSR set to: 0
 19443                           ;ethernet.c: 42: }
 19444                           ;ethernet.c: 43: if (!frame->memory.fIsAssigned) {
 19445                           
 19446                           ; BSR set to: 0
 19447  003EC4  EE20 F016          	lfsr	2,22
 19448  003EC8  51A2               	movf	ethernet_txFrameRequest@frame& (0+255),w,b
 19449  003ECA  26D9               	addwf	fsr2l,f,c
 19450  003ECC  51A3               	movf	(ethernet_txFrameRequest@frame+1)& (0+255),w,b
 19451  003ECE  22DA               	addwfc	fsr2h,f,c
 19452  003ED0  50DF               	movf	indf2,w,c
 19453  003ED2  A4D8               	btfss	status,2,c
 19454  003ED4  D007               	goto	l361
 19455                           
 19456                           ; BSR set to: 0
 19457                           ;ethernet.c: 45: err.module = ERROR_MODULE_MEMORY;
 19458  003ED6  0E00               	movlw	0
 19459  003ED8  6FA4               	movwf	ethernet_txFrameRequest@err& (0+255),b
 19460                           
 19461                           ;ethernet.c: 46: err.code = ERROR_MEMORY_UNKNOWN;
 19462  003EDA  0E00               	movlw	0
 19463  003EDC  6FA6               	movwf	(ethernet_txFrameRequest@err+2)& (0+255),b
 19464  003EDE  0EC7               	movlw	199
 19465  003EE0  6FA5               	movwf	(ethernet_txFrameRequest@err+1)& (0+255),b
 19466                           
 19467                           ; BSR set to: 0
 19468                           ;ethernet.c: 47: return err;
 19469                           ;	Return value of _ethernet_txFrameRequest is never used
 19470  003EE2  0012               	return	
 19471  003EE4                     l361:
 19472                           
 19473                           ; BSR set to: 0
 19474                           ;ethernet.c: 48: }
 19475                           ;ethernet.c: 50: ethernetController_writeDestinationMACAddress(frame->destination, frame
      +                          ->memory);
 19476                           
 19477                           ; BSR set to: 0
 19478  003EE4  EE20 F008          	lfsr	2,8
 19479  003EE8  51A2               	movf	ethernet_txFrameRequest@frame& (0+255),w,b
 19480  003EEA  26D9               	addwf	fsr2l,f,c
 19481  003EEC  51A3               	movf	(ethernet_txFrameRequest@frame+1)& (0+255),w,b
 19482  003EEE  22DA               	addwfc	fsr2h,f,c
 19483  003EF0  EE00  F06F         	lfsr	0,ethernetController_writeDestinationMACAddress@addr
 19484  003EF4  0E05               	movlw	5
 19485  003EF6                     u9721:
 19486  003EF6  CFDB FFEB          	movff	plusw2,plusw0
 19487  003EFA  06E8               	decf	wreg,f,c
 19488  003EFC  E2FC               	bc	u9721
 19489  003EFE  EE20 F010          	lfsr	2,16
 19490  003F02  51A2               	movf	ethernet_txFrameRequest@frame& (0+255),w,b
 19491  003F04  26D9               	addwf	fsr2l,f,c
 19492  003F06  51A3               	movf	(ethernet_txFrameRequest@frame+1)& (0+255),w,b
 19493  003F08  22DA               	addwfc	fsr2h,f,c
 19494  003F0A  EE00  F075         	lfsr	0,ethernetController_writeDestinationMACAddress@field
 19495  003F0E  0E08               	movlw	8
 19496  003F10                     u9731:
 19497  003F10  CFDB FFEB          	movff	plusw2,plusw0
 19498  003F14  06E8               	decf	wreg,f,c
 19499  003F16  E2FC               	bc	u9731
 19500  003F18  ECB7  F023         	call	_ethernetController_writeDestinationMACAddress	;wreg free
 19501                           
 19502                           ;ethernet.c: 51: ethernetController_writeEtherTypeFieldToBuffer(frame->ethertype, frame-
      +                          >memory);
 19503  003F1C  0100               	movlb	0	; () banked
 19504  003F1E  EE20 F00E          	lfsr	2,14
 19505  003F22  51A2               	movf	ethernet_txFrameRequest@frame& (0+255),w,b
 19506  003F24  26D9               	addwf	fsr2l,f,c
 19507  003F26  51A3               	movf	(ethernet_txFrameRequest@frame+1)& (0+255),w,b
 19508  003F28  22DA               	addwfc	fsr2h,f,c
 19509  003F2A  CFDE F06F          	movff	postinc2,ethernetController_writeEtherTypeFieldToBuffer@ethtype
 19510  003F2E  CFDD F070          	movff	postdec2,ethernetController_writeEtherTypeFieldToBuffer@ethtype+1
 19511  003F32  EE20 F010          	lfsr	2,16
 19512  003F36  51A2               	movf	ethernet_txFrameRequest@frame& (0+255),w,b
 19513  003F38  26D9               	addwf	fsr2l,f,c
 19514  003F3A  51A3               	movf	(ethernet_txFrameRequest@frame+1)& (0+255),w,b
 19515  003F3C  22DA               	addwfc	fsr2h,f,c
 19516  003F3E  EE00  F071         	lfsr	0,ethernetController_writeEtherTypeFieldToBuffer@field
 19517  003F42  0E08               	movlw	8
 19518  003F44                     u9741:
 19519  003F44  CFDB FFEB          	movff	plusw2,plusw0
 19520  003F48  06E8               	decf	wreg,f,c
 19521  003F4A  E2FC               	bc	u9741
 19522  003F4C  ECCF  F027         	call	_ethernetController_writeEtherTypeFieldToBuffer	;wreg free
 19523  003F50  0012               	return	
 19524  003F52                     __end_of_ethernet_txFrameRequest:
 19525                           	opt stack 0
 19526                           tblptru	equ	0xFF8
 19527                           tblptrh	equ	0xFF7
 19528                           tblptrl	equ	0xFF6
 19529                           tablat	equ	0xFF5
 19530                           prodh	equ	0xFF4
 19531                           prodl	equ	0xFF3
 19532                           intcon	equ	0xFF2
 19533                           intcon3	equ	0xFF0
 19534                           indf0	equ	0xFEF
 19535                           postinc0	equ	0xFEE
 19536                           plusw0	equ	0xFEB
 19537                           fsr0h	equ	0xFEA
 19538                           fsr0l	equ	0xFE9
 19539                           wreg	equ	0xFE8
 19540                           indf1	equ	0xFE7
 19541                           postinc1	equ	0xFE6
 19542                           postdec1	equ	0xFE5
 19543                           plusw1	equ	0xFE3
 19544                           fsr1h	equ	0xFE2
 19545                           fsr1l	equ	0xFE1
 19546                           indf2	equ	0xFDF
 19547                           postinc2	equ	0xFDE
 19548                           postdec2	equ	0xFDD
 19549                           plusw2	equ	0xFDB
 19550                           fsr2h	equ	0xFDA
 19551                           fsr2l	equ	0xFD9
 19552                           status	equ	0xFD8
 19553                           
 19554 ;; *************** function _memory_txFrameRequest *****************
 19555 ;; Defined at:
 19556 ;;		line 133 in file "src/mem/memoryController.c"
 19557 ;; Parameters:    Size  Location     Type
 19558 ;;  length          2   36[BANK0 ] unsigned int 
 19559 ;; Auto vars:     Size  Location     Type
 19560 ;;  i               1   54[BANK0 ] unsigned char 
 19561 ;;  i               1   55[BANK0 ] unsigned char 
 19562 ;;  fNoOverlapMa    1   53[BANK0 ] unsigned char 
 19563 ;;  field           9   56[BANK0 ] struct memoryField
 19564 ;;  freeIndex       1   65[BANK0 ] unsigned char 
 19565 ;; Return value:  Size  Location     Type
 19566 ;;                  9   36[BANK0 ] struct memoryField
 19567 ;; Registers used:
 19568 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19569 ;; Tracked objects:
 19570 ;;		On entry : 0/0
 19571 ;;		On exit  : 0/0
 19572 ;;		Unchanged: 0/0
 19573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19574 ;;      Params:         0       9       0       0       0       0       0       0       0
 19575 ;;      Locals:         0      15       0       0       0       0       0       0       0
 19576 ;;      Temps:          0       6       0       0       0       0       0       0       0
 19577 ;;      Totals:         0      30       0       0       0       0       0       0       0
 19578 ;;Total ram usage:       30 bytes
 19579 ;; Hardware stack levels used:    1
 19580 ;; Hardware stack levels required when called:    6
 19581 ;; This function calls:
 19582 ;;		___wmul
 19583 ;;		_checkForOverlap
 19584 ;;		_entireMemoryEmpty
 19585 ;;		_entireMemoryFull
 19586 ;; This function is called by:
 19587 ;;		_ethernet_txFrameRequest
 19588 ;; This function uses a non-reentrant model
 19589 ;;
 19590                           
 19591                           	psect	text76
 19592  0005FE                     __ptext76:
 19593                           	opt stack 0
 19594  0005FE                     _memory_txFrameRequest:
 19595                           	opt stack 22
 19596                           
 19597                           ;memoryController.c: 134: memoryField_t field;
 19598                           ;memoryController.c: 135: uint8_t freeIndex = 0;
 19599                           
 19600                           ;incstack = 0
 19601  0005FE  0E00               	movlw	0
 19602  000600  0100               	movlb	0	; () banked
 19603  000602  6FA1               	movwf	memory_txFrameRequest@freeIndex& (0+255),b
 19604                           
 19605                           ; BSR set to: 0
 19606                           ;memoryController.c: 137: if (length == 0) {
 19607  000604  5184               	movf	memory_txFrameRequest@length& (0+255),w,b
 19608  000606  1185               	iorwf	(memory_txFrameRequest@length+1)& (0+255),w,b
 19609  000608  A4D8               	btfss	status,2,c
 19610  00060A  D00C               	goto	l462
 19611                           
 19612                           ; BSR set to: 0
 19613                           ;memoryController.c: 138: field.fOutOfMemory = 1;
 19614  00060C  0E01               	movlw	1
 19615  00060E  6F9F               	movwf	(memory_txFrameRequest@field+7)& (0+255),b
 19616                           
 19617                           ; BSR set to: 0
 19618                           ;memoryController.c: 139: return field;
 19619  000610  EE20  F098         	lfsr	2,memory_txFrameRequest@field
 19620  000614  EE00  F084         	lfsr	0,?_memory_txFrameRequest
 19621  000618  0E08               	movlw	8
 19622  00061A                     u9241:
 19623  00061A  CFDB FFEB          	movff	plusw2,plusw0
 19624  00061E  06E8               	decf	wreg,f,c
 19625  000620  E2FC               	bc	u9241
 19626                           
 19627                           ; BSR set to: 0
 19628  000622  0012               	return	
 19629  000624                     l462:
 19630                           
 19631                           ; BSR set to: 0
 19632                           ;memoryController.c: 140: }
 19633                           ;memoryController.c: 142: if (entireMemoryFull()) {
 19634                           
 19635                           ; BSR set to: 0
 19636  000624  EC6A  F029         	call	_entireMemoryFull	;wreg free
 19637  000628  A0D8               	btfss	status,0,c
 19638  00062A  D00D               	goto	l464
 19639                           
 19640                           ;memoryController.c: 143: field.fOutOfMemory = 1;
 19641  00062C  0E01               	movlw	1
 19642  00062E  0100               	movlb	0	; () banked
 19643  000630  6F9F               	movwf	(memory_txFrameRequest@field+7)& (0+255),b
 19644                           
 19645                           ; BSR set to: 0
 19646                           ;memoryController.c: 144: return field;
 19647  000632  EE20  F098         	lfsr	2,memory_txFrameRequest@field
 19648  000636  EE00  F084         	lfsr	0,?_memory_txFrameRequest
 19649  00063A  0E08               	movlw	8
 19650  00063C                     u9261:
 19651  00063C  CFDB FFEB          	movff	plusw2,plusw0
 19652  000640  06E8               	decf	wreg,f,c
 19653  000642  E2FC               	bc	u9261
 19654                           
 19655                           ; BSR set to: 0
 19656  000644  0012               	return	
 19657  000646                     l464:
 19658                           
 19659                           ;memoryController.c: 145: }
 19660                           ;memoryController.c: 146: if (entireMemoryEmpty()) {
 19661                           
 19662                           ; BSR set to: 0
 19663  000646  EC86  F029         	call	_entireMemoryEmpty	;wreg free
 19664  00064A  A0D8               	btfss	status,0,c
 19665  00064C  D238               	goto	l489
 19666                           
 19667                           ;memoryController.c: 148: if ((0x0000 + length) > 0x3000 - 1) {
 19668  00064E  0E30               	movlw	48
 19669  000650  0100               	movlb	0	; () banked
 19670  000652  5D85               	subwf	(memory_txFrameRequest@length+1)& (0+255),w,b
 19671  000654  A0D8               	btfss	status,0,c
 19672  000656  D00C               	goto	l466
 19673                           
 19674                           ; BSR set to: 0
 19675                           ;memoryController.c: 149: field.fOutOfMemory = 1;
 19676  000658  0E01               	movlw	1
 19677  00065A  6F9F               	movwf	(memory_txFrameRequest@field+7)& (0+255),b
 19678                           
 19679                           ; BSR set to: 0
 19680                           ;memoryController.c: 150: return field;
 19681  00065C  EE20  F098         	lfsr	2,memory_txFrameRequest@field
 19682  000660  EE00  F084         	lfsr	0,?_memory_txFrameRequest
 19683  000664  0E08               	movlw	8
 19684  000666                     u9291:
 19685  000666  CFDB FFEB          	movff	plusw2,plusw0
 19686  00066A  06E8               	decf	wreg,f,c
 19687  00066C  E2FC               	bc	u9291
 19688                           
 19689                           ; BSR set to: 0
 19690  00066E  0012               	return	
 19691  000670                     l466:
 19692                           
 19693                           ; BSR set to: 0
 19694                           ;memoryController.c: 152: occupiedMemory[0].start = 0x0000;
 19695                           
 19696                           ; BSR set to: 0
 19697  000670  0E00               	movlw	0
 19698  000672  0102               	movlb	2	; () banked
 19699  000674  6F01               	movwf	(_occupiedMemory+1)& (0+255),b
 19700  000676  0E00               	movlw	0
 19701  000678  6F00               	movwf	_occupiedMemory& (0+255),b
 19702                           
 19703                           ; BSR set to: 2
 19704                           ;memoryController.c: 153: occupiedMemory[0].end = 0x0000 + length;
 19705  00067A  C084  F202         	movff	memory_txFrameRequest@length,_occupiedMemory+2
 19706  00067E  C085  F203         	movff	memory_txFrameRequest@length+1,_occupiedMemory+3
 19707                           
 19708                           ; BSR set to: 2
 19709                           ;memoryController.c: 154: occupiedMemory[0].length = length;
 19710  000682  C084  F204         	movff	memory_txFrameRequest@length,_occupiedMemory+4
 19711  000686  C085  F205         	movff	memory_txFrameRequest@length+1,_occupiedMemory+5
 19712                           
 19713                           ;memoryController.c: 155: occupiedMemory[0].fIsAssigned = 1;
 19714  00068A  0E01               	movlw	1
 19715  00068C  6F06               	movwf	(_occupiedMemory+6)& (0+255),b
 19716                           
 19717                           ;memoryController.c: 156: occupiedMemory[0].index = 0;
 19718  00068E  0E00               	movlw	0
 19719  000690  6F08               	movwf	(_occupiedMemory+8)& (0+255),b
 19720                           
 19721                           ; BSR set to: 2
 19722                           ;memoryController.c: 157: return occupiedMemory[0];
 19723  000692  EE22  F000         	lfsr	2,_occupiedMemory
 19724  000696  EE00  F084         	lfsr	0,?_memory_txFrameRequest
 19725  00069A  0E08               	movlw	8
 19726  00069C                     u9301:
 19727  00069C  CFDB FFEB          	movff	plusw2,plusw0
 19728  0006A0  06E8               	decf	wreg,f,c
 19729  0006A2  E2FC               	bc	u9301
 19730                           
 19731                           ; BSR set to: 2
 19732  0006A4  0012               	return	
 19733  0006A6                     
 19734                           ;memoryController.c: 163: if (!occupiedMemory[freeIndex].fIsAssigned) {
 19735                           
 19736                           ; BSR set to: 2
 19737  0006A6  0100               	movlb	0	; () banked
 19738  0006A8  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 19739  0006AA  0D09               	mullw	9
 19740  0006AC  0E06               	movlw	6
 19741  0006AE  26F3               	addwf	prodl,f,c
 19742  0006B0  0E00               	movlw	0
 19743  0006B2  22F4               	addwfc	prodh,f,c
 19744  0006B4  0E00               	movlw	low _occupiedMemory
 19745  0006B6  24F3               	addwf	prodl,w,c
 19746  0006B8  6ED9               	movwf	fsr2l,c
 19747  0006BA  0E02               	movlw	high _occupiedMemory
 19748  0006BC  20F4               	addwfc	prodh,w,c
 19749  0006BE  6EDA               	movwf	fsr2h,c
 19750  0006C0  50DF               	movf	indf2,w,c
 19751  0006C2  A4D8               	btfss	status,2,c
 19752  0006C4  D1EB               	goto	l488
 19753                           
 19754                           ; BSR set to: 0
 19755                           ;memoryController.c: 167: occupiedMemory[freeIndex].start = occupiedMemory[(freeIndex ==
      +                           0) ? 8 - 1 : freeIndex - 1].end + 1;
 19756  0006C6  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 19757  0006C8  B4D8               	btfsc	status,2,c
 19758  0006CA  D007               	goto	l472
 19759                           
 19760                           ; BSR set to: 0
 19761  0006CC  0EFF               	movlw	255
 19762  0006CE  25A1               	addwf	memory_txFrameRequest@freeIndex& (0+255),w,b
 19763  0006D0  6F93               	movwf	_memory_txFrameRequest$1174& (0+255),b
 19764  0006D2  6B94               	clrf	(_memory_txFrameRequest$1174+1)& (0+255),b
 19765  0006D4  0EFF               	movlw	255
 19766  0006D6  2394               	addwfc	(_memory_txFrameRequest$1174+1)& (0+255),f,b
 19767  0006D8  D004               	goto	l474
 19768  0006DA                     l472:
 19769                           
 19770                           ; BSR set to: 0
 19771                           
 19772                           ; BSR set to: 0
 19773  0006DA  0E00               	movlw	0
 19774  0006DC  6F94               	movwf	(_memory_txFrameRequest$1174+1)& (0+255),b
 19775  0006DE  0E07               	movlw	7
 19776  0006E0  6F93               	movwf	_memory_txFrameRequest$1174& (0+255),b
 19777  0006E2                     l474:
 19778                           
 19779                           ; BSR set to: 0
 19780                           
 19781                           ; BSR set to: 0
 19782  0006E2  C093  F060         	movff	_memory_txFrameRequest$1174,___wmul@multiplier
 19783  0006E6  C094  F061         	movff	_memory_txFrameRequest$1174+1,___wmul@multiplier+1
 19784  0006EA  0E00               	movlw	0
 19785  0006EC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19786  0006EE  0E09               	movlw	9
 19787  0006F0  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19788  0006F2  ECB7  F02A         	call	___wmul	;wreg free
 19789  0006F6  0E02               	movlw	2
 19790  0006F8  0100               	movlb	0	; () banked
 19791  0006FA  2760               	addwf	?___wmul& (0+255),f,b
 19792  0006FC  0E00               	movlw	0
 19793  0006FE  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 19794  000700  0E00               	movlw	low _occupiedMemory
 19795  000702  2560               	addwf	?___wmul& (0+255),w,b
 19796  000704  6ED9               	movwf	fsr2l,c
 19797  000706  0E02               	movlw	high _occupiedMemory
 19798  000708  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 19799  00070A  6EDA               	movwf	fsr2h,c
 19800  00070C  CFDE F08D          	movff	postinc2,??_memory_txFrameRequest
 19801  000710  CFDD F08E          	movff	postdec2,??_memory_txFrameRequest+1
 19802  000714  0E01               	movlw	1
 19803  000716  278D               	addwf	??_memory_txFrameRequest& (0+255),f,b
 19804  000718  0E00               	movlw	0
 19805  00071A  238E               	addwfc	(??_memory_txFrameRequest+1)& (0+255),f,b
 19806  00071C  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 19807  00071E  0D09               	mullw	9
 19808  000720  0E00               	movlw	low _occupiedMemory
 19809  000722  24F3               	addwf	prodl,w,c
 19810  000724  6ED9               	movwf	fsr2l,c
 19811  000726  0E02               	movlw	high _occupiedMemory
 19812  000728  20F4               	addwfc	prodh,w,c
 19813  00072A  6EDA               	movwf	fsr2h,c
 19814  00072C  C08D  FFDE         	movff	??_memory_txFrameRequest,postinc2
 19815  000730  C08E  FFDD         	movff	??_memory_txFrameRequest+1,postdec2
 19816                           
 19817                           ; BSR set to: 0
 19818                           ;memoryController.c: 168: if (occupiedMemory[freeIndex].start + length > 0x3000) {
 19819  000734  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 19820  000736  0D09               	mullw	9
 19821  000738  0E00               	movlw	low _occupiedMemory
 19822  00073A  24F3               	addwf	prodl,w,c
 19823  00073C  6ED9               	movwf	fsr2l,c
 19824  00073E  0E02               	movlw	high _occupiedMemory
 19825  000740  20F4               	addwfc	prodh,w,c
 19826  000742  6EDA               	movwf	fsr2h,c
 19827  000744  CFDE F08D          	movff	postinc2,??_memory_txFrameRequest
 19828  000748  CFDD F08E          	movff	postdec2,??_memory_txFrameRequest+1
 19829  00074C  5184               	movf	memory_txFrameRequest@length& (0+255),w,b
 19830  00074E  278D               	addwf	??_memory_txFrameRequest& (0+255),f,b
 19831  000750  5185               	movf	(memory_txFrameRequest@length+1)& (0+255),w,b
 19832  000752  238E               	addwfc	(??_memory_txFrameRequest+1)& (0+255),f,b
 19833  000754  058D               	decf	??_memory_txFrameRequest& (0+255),w,b
 19834  000756  0E30               	movlw	48
 19835  000758  598E               	subwfb	(??_memory_txFrameRequest+1)& (0+255),w,b
 19836  00075A  A0D8               	btfss	status,0,c
 19837  00075C  D0CF               	goto	l476
 19838                           
 19839                           ; BSR set to: 0
 19840                           ;memoryController.c: 169: if (freeIndex == 8 - 1 && !occupiedMemory[0].fIsAssigned) {
 19841  00075E  0E07               	movlw	7
 19842  000760  19A1               	xorwf	memory_txFrameRequest@freeIndex& (0+255),w,b
 19843  000762  A4D8               	btfss	status,2,c
 19844  000764  D0CB               	goto	l476
 19845                           
 19846                           ; BSR set to: 0
 19847  000766  0102               	movlb	2	; () banked
 19848  000768  5106               	movf	(_occupiedMemory+6)& (0+255),w,b
 19849  00076A  A4D8               	btfss	status,2,c
 19850  00076C  D0C7               	goto	l476
 19851                           
 19852                           ; BSR set to: 2
 19853                           ;memoryController.c: 170: occupiedMemory[freeIndex].length = length;
 19854  00076E  0100               	movlb	0	; () banked
 19855  000770  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 19856  000772  0D09               	mullw	9
 19857  000774  0E04               	movlw	4
 19858  000776  26F3               	addwf	prodl,f,c
 19859  000778  0E00               	movlw	0
 19860  00077A  22F4               	addwfc	prodh,f,c
 19861  00077C  0E00               	movlw	low _occupiedMemory
 19862  00077E  24F3               	addwf	prodl,w,c
 19863  000780  6ED9               	movwf	fsr2l,c
 19864  000782  0E02               	movlw	high _occupiedMemory
 19865  000784  20F4               	addwfc	prodh,w,c
 19866  000786  6EDA               	movwf	fsr2h,c
 19867  000788  C084  FFDE         	movff	memory_txFrameRequest@length,postinc2
 19868  00078C  C085  FFDD         	movff	memory_txFrameRequest@length+1,postdec2
 19869                           
 19870                           ;memoryController.c: 171: occupiedMemory[freeIndex].end = occupiedMemory[freeIndex].leng
      +                          th - ((0x3000 - 1) - occupiedMemory[freeIndex].start);
 19871  000790  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 19872  000792  0D09               	mullw	9
 19873  000794  0E04               	movlw	4
 19874  000796  26F3               	addwf	prodl,f,c
 19875  000798  0E00               	movlw	0
 19876  00079A  22F4               	addwfc	prodh,f,c
 19877  00079C  0E00               	movlw	low _occupiedMemory
 19878  00079E  24F3               	addwf	prodl,w,c
 19879  0007A0  6ED9               	movwf	fsr2l,c
 19880  0007A2  0E02               	movlw	high _occupiedMemory
 19881  0007A4  20F4               	addwfc	prodh,w,c
 19882  0007A6  6EDA               	movwf	fsr2h,c
 19883  0007A8  CFDE F08D          	movff	postinc2,??_memory_txFrameRequest
 19884  0007AC  CFDD F08E          	movff	postdec2,??_memory_txFrameRequest+1
 19885  0007B0  0EFF               	movlw	255
 19886  0007B2  6F8F               	movwf	(??_memory_txFrameRequest+2)& (0+255),b
 19887  0007B4  0E2F               	movlw	47
 19888  0007B6  6F90               	movwf	(??_memory_txFrameRequest+3)& (0+255),b
 19889  0007B8  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 19890  0007BA  0D09               	mullw	9
 19891  0007BC  0E00               	movlw	low _occupiedMemory
 19892  0007BE  24F3               	addwf	prodl,w,c
 19893  0007C0  6ED9               	movwf	fsr2l,c
 19894  0007C2  0E02               	movlw	high _occupiedMemory
 19895  0007C4  20F4               	addwfc	prodh,w,c
 19896  0007C6  6EDA               	movwf	fsr2h,c
 19897  0007C8  CFDE F091          	movff	postinc2,??_memory_txFrameRequest+4
 19898  0007CC  CFDD F092          	movff	postdec2,??_memory_txFrameRequest+5
 19899  0007D0  1F91               	comf	(??_memory_txFrameRequest+4)& (0+255),f,b
 19900  0007D2  1F92               	comf	(??_memory_txFrameRequest+5)& (0+255),f,b
 19901  0007D4  4B91               	infsnz	(??_memory_txFrameRequest+4)& (0+255),f,b
 19902  0007D6  2B92               	incf	(??_memory_txFrameRequest+5)& (0+255),f,b
 19903  0007D8  518F               	movf	(??_memory_txFrameRequest+2)& (0+255),w,b
 19904  0007DA  2791               	addwf	(??_memory_txFrameRequest+4)& (0+255),f,b
 19905  0007DC  5190               	movf	(??_memory_txFrameRequest+3)& (0+255),w,b
 19906  0007DE  2392               	addwfc	(??_memory_txFrameRequest+5)& (0+255),f,b
 19907  0007E0  1F91               	comf	(??_memory_txFrameRequest+4)& (0+255),f,b
 19908  0007E2  1F92               	comf	(??_memory_txFrameRequest+5)& (0+255),f,b
 19909  0007E4  4B91               	infsnz	(??_memory_txFrameRequest+4)& (0+255),f,b
 19910  0007E6  2B92               	incf	(??_memory_txFrameRequest+5)& (0+255),f,b
 19911  0007E8  518D               	movf	??_memory_txFrameRequest& (0+255),w,b
 19912  0007EA  2791               	addwf	(??_memory_txFrameRequest+4)& (0+255),f,b
 19913  0007EC  518E               	movf	(??_memory_txFrameRequest+1)& (0+255),w,b
 19914  0007EE  2392               	addwfc	(??_memory_txFrameRequest+5)& (0+255),f,b
 19915  0007F0  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 19916  0007F2  0D09               	mullw	9
 19917  0007F4  0E02               	movlw	2
 19918  0007F6  26F3               	addwf	prodl,f,c
 19919  0007F8  0E00               	movlw	0
 19920  0007FA  22F4               	addwfc	prodh,f,c
 19921  0007FC  0E00               	movlw	low _occupiedMemory
 19922  0007FE  24F3               	addwf	prodl,w,c
 19923  000800  6ED9               	movwf	fsr2l,c
 19924  000802  0E02               	movlw	high _occupiedMemory
 19925  000804  20F4               	addwfc	prodh,w,c
 19926  000806  6EDA               	movwf	fsr2h,c
 19927  000808  C091  FFDE         	movff	??_memory_txFrameRequest+4,postinc2
 19928  00080C  C092  FFDD         	movff	??_memory_txFrameRequest+5,postdec2
 19929                           
 19930                           ; BSR set to: 0
 19931                           ;memoryController.c: 172: for (uint8_t i = 0; i < 8; i++) {
 19932  000810  0E00               	movlw	0
 19933  000812  6F96               	movwf	memory_txFrameRequest@i& (0+255),b
 19934  000814                     l8671:
 19935                           
 19936                           ; BSR set to: 0
 19937  000814  0E07               	movlw	7
 19938  000816  6596               	cpfsgt	memory_txFrameRequest@i& (0+255),b
 19939  000818  D001               	goto	l477
 19940  00081A  D044               	goto	u9430
 19941  00081C                     l477:
 19942                           
 19943                           ; BSR set to: 0
 19944                           ;memoryController.c: 173: if (i == freeIndex)
 19945                           
 19946                           ; BSR set to: 0
 19947  00081C  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 19948  00081E  1996               	xorwf	memory_txFrameRequest@i& (0+255),w,b
 19949  000820  B4D8               	btfsc	status,2,c
 19950  000822  D03E               	goto	l481
 19951                           
 19952                           ; BSR set to: 0
 19953                           ;memoryController.c: 175: if (checkForOverlap(occupiedMemory[freeIndex], occupiedMemory[
      +                          i]) && occupiedMemory[i].fIsAssigned) {
 19954                           
 19955                           ; BSR set to: 0
 19956                           
 19957                           ; BSR set to: 0
 19958                           ;memoryController.c: 174: continue;
 19959  000824  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 19960  000826  0D09               	mullw	9
 19961  000828  0E00               	movlw	low _occupiedMemory
 19962  00082A  24F3               	addwf	prodl,w,c
 19963  00082C  6ED9               	movwf	fsr2l,c
 19964  00082E  0E02               	movlw	high _occupiedMemory
 19965  000830  20F4               	addwfc	prodh,w,c
 19966  000832  6EDA               	movwf	fsr2h,c
 19967  000834  EE00  F072         	lfsr	0,checkForOverlap@a
 19968  000838  0E08               	movlw	8
 19969  00083A                     u9381:
 19970  00083A  CFDB FFEB          	movff	plusw2,plusw0
 19971  00083E  06E8               	decf	wreg,f,c
 19972  000840  E2FC               	bc	u9381
 19973  000842  5196               	movf	memory_txFrameRequest@i& (0+255),w,b
 19974  000844  0D09               	mullw	9
 19975  000846  0E00               	movlw	low _occupiedMemory
 19976  000848  24F3               	addwf	prodl,w,c
 19977  00084A  6ED9               	movwf	fsr2l,c
 19978  00084C  0E02               	movlw	high _occupiedMemory
 19979  00084E  20F4               	addwfc	prodh,w,c
 19980  000850  6EDA               	movwf	fsr2h,c
 19981  000852  EE00  F07B         	lfsr	0,checkForOverlap@b
 19982  000856  0E08               	movlw	8
 19983  000858                     u9391:
 19984  000858  CFDB FFEB          	movff	plusw2,plusw0
 19985  00085C  06E8               	decf	wreg,f,c
 19986  00085E  E2FC               	bc	u9391
 19987  000860  ECA7  F01C         	call	_checkForOverlap	;wreg free
 19988  000864  0100               	movlb	0	; () banked
 19989  000866  A0D8               	btfss	status,0,c
 19990  000868  D01B               	goto	l481
 19991                           
 19992                           ; BSR set to: 0
 19993  00086A  5196               	movf	memory_txFrameRequest@i& (0+255),w,b
 19994  00086C  0D09               	mullw	9
 19995  00086E  0E06               	movlw	6
 19996  000870  26F3               	addwf	prodl,f,c
 19997  000872  0E00               	movlw	0
 19998  000874  22F4               	addwfc	prodh,f,c
 19999  000876  0E00               	movlw	low _occupiedMemory
 20000  000878  24F3               	addwf	prodl,w,c
 20001  00087A  6ED9               	movwf	fsr2l,c
 20002  00087C  0E02               	movlw	high _occupiedMemory
 20003  00087E  20F4               	addwfc	prodh,w,c
 20004  000880  6EDA               	movwf	fsr2h,c
 20005  000882  50DF               	movf	indf2,w,c
 20006  000884  B4D8               	btfsc	status,2,c
 20007  000886  D00C               	goto	l481
 20008                           
 20009                           ; BSR set to: 0
 20010                           ;memoryController.c: 177: field.fOutOfMemory = 1;
 20011  000888  0E01               	movlw	1
 20012  00088A  6F9F               	movwf	(memory_txFrameRequest@field+7)& (0+255),b
 20013                           
 20014                           ; BSR set to: 0
 20015                           ;memoryController.c: 178: return field;
 20016  00088C  EE20  F098         	lfsr	2,memory_txFrameRequest@field
 20017  000890  EE00  F084         	lfsr	0,?_memory_txFrameRequest
 20018  000894  0E08               	movlw	8
 20019  000896                     u9421:
 20020  000896  CFDB FFEB          	movff	plusw2,plusw0
 20021  00089A  06E8               	decf	wreg,f,c
 20022  00089C  E2FC               	bc	u9421
 20023                           
 20024                           ; BSR set to: 0
 20025  00089E  0012               	return	
 20026  0008A0                     l481:
 20027                           
 20028                           ; BSR set to: 0
 20029                           
 20030                           ; BSR set to: 0
 20031                           
 20032                           ; BSR set to: 0
 20033  0008A0  2B96               	incf	memory_txFrameRequest@i& (0+255),f,b
 20034  0008A2  D7B8               	goto	l8671
 20035  0008A4                     u9430:
 20036                           
 20037                           ; BSR set to: 0
 20038                           ;memoryController.c: 179: }
 20039                           ;memoryController.c: 180: }
 20040                           ;memoryController.c: 181: occupiedMemory[freeIndex].fIsAssigned = 1;
 20041                           
 20042                           ; BSR set to: 0
 20043  0008A4  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 20044  0008A6  0D09               	mullw	9
 20045  0008A8  0E06               	movlw	6
 20046  0008AA  26F3               	addwf	prodl,f,c
 20047  0008AC  0E00               	movlw	0
 20048  0008AE  22F4               	addwfc	prodh,f,c
 20049  0008B0  0E00               	movlw	low _occupiedMemory
 20050  0008B2  24F3               	addwf	prodl,w,c
 20051  0008B4  6ED9               	movwf	fsr2l,c
 20052  0008B6  0E02               	movlw	high _occupiedMemory
 20053  0008B8  20F4               	addwfc	prodh,w,c
 20054  0008BA  6EDA               	movwf	fsr2h,c
 20055  0008BC  0E01               	movlw	1
 20056  0008BE  6EDF               	movwf	indf2,c
 20057                           
 20058                           ;memoryController.c: 182: occupiedMemory[freeIndex].index = freeIndex;
 20059  0008C0  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 20060  0008C2  0D09               	mullw	9
 20061  0008C4  0E08               	movlw	8
 20062  0008C6  26F3               	addwf	prodl,f,c
 20063  0008C8  0E00               	movlw	0
 20064  0008CA  22F4               	addwfc	prodh,f,c
 20065  0008CC  0E00               	movlw	low _occupiedMemory
 20066  0008CE  24F3               	addwf	prodl,w,c
 20067  0008D0  6ED9               	movwf	fsr2l,c
 20068  0008D2  0E02               	movlw	high _occupiedMemory
 20069  0008D4  20F4               	addwfc	prodh,w,c
 20070  0008D6  6EDA               	movwf	fsr2h,c
 20071  0008D8  C0A1  FFDF         	movff	memory_txFrameRequest@freeIndex,indf2
 20072                           
 20073                           ; BSR set to: 0
 20074                           ;memoryController.c: 183: return occupiedMemory[freeIndex];
 20075  0008DC  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 20076  0008DE  0D09               	mullw	9
 20077  0008E0  0E00               	movlw	low _occupiedMemory
 20078  0008E2  24F3               	addwf	prodl,w,c
 20079  0008E4  6ED9               	movwf	fsr2l,c
 20080  0008E6  0E02               	movlw	high _occupiedMemory
 20081  0008E8  20F4               	addwfc	prodh,w,c
 20082  0008EA  6EDA               	movwf	fsr2h,c
 20083  0008EC  EE00  F084         	lfsr	0,?_memory_txFrameRequest
 20084  0008F0  0E08               	movlw	8
 20085  0008F2                     u9441:
 20086  0008F2  CFDB FFEB          	movff	plusw2,plusw0
 20087  0008F6  06E8               	decf	wreg,f,c
 20088  0008F8  E2FC               	bc	u9441
 20089                           
 20090                           ; BSR set to: 0
 20091  0008FA  0012               	return	
 20092  0008FC                     l476:
 20093                           
 20094                           ;memoryController.c: 184: }
 20095                           ;memoryController.c: 185: }
 20096                           ;memoryController.c: 187: uint8_t fNoOverlapMarker = 1;
 20097                           
 20098                           ; BSR set to: 0
 20099                           
 20100                           ; BSR set to: 0
 20101  0008FC  0E01               	movlw	1
 20102  0008FE  0100               	movlb	0	; () banked
 20103  000900  6F95               	movwf	memory_txFrameRequest@fNoOverlapMarker& (0+255),b
 20104                           
 20105                           ; BSR set to: 0
 20106                           ;memoryController.c: 188: uint8_t i;
 20107                           ;memoryController.c: 189: occupiedMemory[freeIndex].end = occupiedMemory[freeIndex].star
      +                          t + length;
 20108  000902  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 20109  000904  0D09               	mullw	9
 20110  000906  0E00               	movlw	low _occupiedMemory
 20111  000908  24F3               	addwf	prodl,w,c
 20112  00090A  6ED9               	movwf	fsr2l,c
 20113  00090C  0E02               	movlw	high _occupiedMemory
 20114  00090E  20F4               	addwfc	prodh,w,c
 20115  000910  6EDA               	movwf	fsr2h,c
 20116  000912  CFDE F08D          	movff	postinc2,??_memory_txFrameRequest
 20117  000916  CFDD F08E          	movff	postdec2,??_memory_txFrameRequest+1
 20118  00091A  5184               	movf	memory_txFrameRequest@length& (0+255),w,b
 20119  00091C  278D               	addwf	??_memory_txFrameRequest& (0+255),f,b
 20120  00091E  5185               	movf	(memory_txFrameRequest@length+1)& (0+255),w,b
 20121  000920  238E               	addwfc	(??_memory_txFrameRequest+1)& (0+255),f,b
 20122  000922  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 20123  000924  0D09               	mullw	9
 20124  000926  0E02               	movlw	2
 20125  000928  26F3               	addwf	prodl,f,c
 20126  00092A  0E00               	movlw	0
 20127  00092C  22F4               	addwfc	prodh,f,c
 20128  00092E  0E00               	movlw	low _occupiedMemory
 20129  000930  24F3               	addwf	prodl,w,c
 20130  000932  6ED9               	movwf	fsr2l,c
 20131  000934  0E02               	movlw	high _occupiedMemory
 20132  000936  20F4               	addwfc	prodh,w,c
 20133  000938  6EDA               	movwf	fsr2h,c
 20134  00093A  C08D  FFDE         	movff	??_memory_txFrameRequest,postinc2
 20135  00093E  C08E  FFDD         	movff	??_memory_txFrameRequest+1,postdec2
 20136                           
 20137                           ; BSR set to: 0
 20138                           ;memoryController.c: 190: for (i = 0; i < 8; i++) {
 20139  000942  0E00               	movlw	0
 20140  000944  6F97               	movwf	memory_txFrameRequest@i_1178& (0+255),b
 20141  000946                     l8705:
 20142                           
 20143                           ; BSR set to: 0
 20144  000946  0E07               	movlw	7
 20145  000948  6597               	cpfsgt	memory_txFrameRequest@i_1178& (0+255),b
 20146  00094A  D001               	goto	l482
 20147  00094C  D03A               	goto	u9510
 20148  00094E                     l482:
 20149                           
 20150                           ; BSR set to: 0
 20151                           ;memoryController.c: 191: if (i == freeIndex)
 20152                           
 20153                           ; BSR set to: 0
 20154  00094E  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 20155  000950  1997               	xorwf	memory_txFrameRequest@i_1178& (0+255),w,b
 20156  000952  B4D8               	btfsc	status,2,c
 20157  000954  D034               	goto	l487
 20158                           
 20159                           ; BSR set to: 0
 20160                           ;memoryController.c: 193: if (!occupiedMemory[i].fIsAssigned) {
 20161                           
 20162                           ; BSR set to: 0
 20163                           
 20164                           ; BSR set to: 0
 20165                           ;memoryController.c: 192: continue;
 20166  000956  5197               	movf	memory_txFrameRequest@i_1178& (0+255),w,b
 20167  000958  0D09               	mullw	9
 20168  00095A  0E06               	movlw	6
 20169  00095C  26F3               	addwf	prodl,f,c
 20170  00095E  0E00               	movlw	0
 20171  000960  22F4               	addwfc	prodh,f,c
 20172  000962  0E00               	movlw	low _occupiedMemory
 20173  000964  24F3               	addwf	prodl,w,c
 20174  000966  6ED9               	movwf	fsr2l,c
 20175  000968  0E02               	movlw	high _occupiedMemory
 20176  00096A  20F4               	addwfc	prodh,w,c
 20177  00096C  6EDA               	movwf	fsr2h,c
 20178  00096E  50DF               	movf	indf2,w,c
 20179  000970  B4D8               	btfsc	status,2,c
 20180  000972  D025               	goto	l487
 20181                           
 20182                           ; BSR set to: 0
 20183                           ;memoryController.c: 196: }
 20184                           ;memoryController.c: 198: if (checkForOverlap(occupiedMemory[freeIndex], occupiedMemory[
      +                          i]))
 20185                           
 20186                           ; BSR set to: 0
 20187                           
 20188                           ; BSR set to: 0
 20189                           ;memoryController.c: 194: continue;
 20190  000974  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 20191  000976  0D09               	mullw	9
 20192  000978  0E00               	movlw	low _occupiedMemory
 20193  00097A  24F3               	addwf	prodl,w,c
 20194  00097C  6ED9               	movwf	fsr2l,c
 20195  00097E  0E02               	movlw	high _occupiedMemory
 20196  000980  20F4               	addwfc	prodh,w,c
 20197  000982  6EDA               	movwf	fsr2h,c
 20198  000984  EE00  F072         	lfsr	0,checkForOverlap@a
 20199  000988  0E08               	movlw	8
 20200  00098A                     u9481:
 20201  00098A  CFDB FFEB          	movff	plusw2,plusw0
 20202  00098E  06E8               	decf	wreg,f,c
 20203  000990  E2FC               	bc	u9481
 20204  000992  5197               	movf	memory_txFrameRequest@i_1178& (0+255),w,b
 20205  000994  0D09               	mullw	9
 20206  000996  0E00               	movlw	low _occupiedMemory
 20207  000998  24F3               	addwf	prodl,w,c
 20208  00099A  6ED9               	movwf	fsr2l,c
 20209  00099C  0E02               	movlw	high _occupiedMemory
 20210  00099E  20F4               	addwfc	prodh,w,c
 20211  0009A0  6EDA               	movwf	fsr2h,c
 20212  0009A2  EE00  F07B         	lfsr	0,checkForOverlap@b
 20213  0009A6  0E08               	movlw	8
 20214  0009A8                     u9491:
 20215  0009A8  CFDB FFEB          	movff	plusw2,plusw0
 20216  0009AC  06E8               	decf	wreg,f,c
 20217  0009AE  E2FC               	bc	u9491
 20218  0009B0  ECA7  F01C         	call	_checkForOverlap	;wreg free
 20219  0009B4  0100               	movlb	0	; () banked
 20220  0009B6  A0D8               	btfss	status,0,c
 20221  0009B8  D002               	goto	l487
 20222                           
 20223                           ; BSR set to: 0
 20224                           ;memoryController.c: 199: fNoOverlapMarker = 0;
 20225  0009BA  0E00               	movlw	0
 20226  0009BC  6F95               	movwf	memory_txFrameRequest@fNoOverlapMarker& (0+255),b
 20227  0009BE                     l487:
 20228                           
 20229                           ; BSR set to: 0
 20230                           
 20231                           ; BSR set to: 0
 20232                           
 20233                           ; BSR set to: 0
 20234  0009BE  2B97               	incf	memory_txFrameRequest@i_1178& (0+255),f,b
 20235  0009C0  D7C2               	goto	l8705
 20236  0009C2                     u9510:
 20237                           
 20238                           ; BSR set to: 0
 20239                           ;memoryController.c: 201: }
 20240                           ;memoryController.c: 202: if (fNoOverlapMarker) {
 20241                           
 20242                           ; BSR set to: 0
 20243  0009C2  5195               	movf	memory_txFrameRequest@fNoOverlapMarker& (0+255),w,b
 20244  0009C4  B4D8               	btfsc	status,2,c
 20245  0009C6  D06A               	goto	l488
 20246                           
 20247                           ; BSR set to: 0
 20248                           ;memoryController.c: 203: occupiedMemory[freeIndex].fIsAssigned = 1;
 20249  0009C8  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 20250  0009CA  0D09               	mullw	9
 20251  0009CC  0E06               	movlw	6
 20252  0009CE  26F3               	addwf	prodl,f,c
 20253  0009D0  0E00               	movlw	0
 20254  0009D2  22F4               	addwfc	prodh,f,c
 20255  0009D4  0E00               	movlw	low _occupiedMemory
 20256  0009D6  24F3               	addwf	prodl,w,c
 20257  0009D8  6ED9               	movwf	fsr2l,c
 20258  0009DA  0E02               	movlw	high _occupiedMemory
 20259  0009DC  20F4               	addwfc	prodh,w,c
 20260  0009DE  6EDA               	movwf	fsr2h,c
 20261  0009E0  0E01               	movlw	1
 20262  0009E2  6EDF               	movwf	indf2,c
 20263                           
 20264                           ;memoryController.c: 204: occupiedMemory[freeIndex].end = occupiedMemory[freeIndex].star
      +                          t + length;
 20265  0009E4  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 20266  0009E6  0D09               	mullw	9
 20267  0009E8  0E00               	movlw	low _occupiedMemory
 20268  0009EA  24F3               	addwf	prodl,w,c
 20269  0009EC  6ED9               	movwf	fsr2l,c
 20270  0009EE  0E02               	movlw	high _occupiedMemory
 20271  0009F0  20F4               	addwfc	prodh,w,c
 20272  0009F2  6EDA               	movwf	fsr2h,c
 20273  0009F4  CFDE F08D          	movff	postinc2,??_memory_txFrameRequest
 20274  0009F8  CFDD F08E          	movff	postdec2,??_memory_txFrameRequest+1
 20275  0009FC  5184               	movf	memory_txFrameRequest@length& (0+255),w,b
 20276  0009FE  278D               	addwf	??_memory_txFrameRequest& (0+255),f,b
 20277  000A00  5185               	movf	(memory_txFrameRequest@length+1)& (0+255),w,b
 20278  000A02  238E               	addwfc	(??_memory_txFrameRequest+1)& (0+255),f,b
 20279  000A04  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 20280  000A06  0D09               	mullw	9
 20281  000A08  0E02               	movlw	2
 20282  000A0A  26F3               	addwf	prodl,f,c
 20283  000A0C  0E00               	movlw	0
 20284  000A0E  22F4               	addwfc	prodh,f,c
 20285  000A10  0E00               	movlw	low _occupiedMemory
 20286  000A12  24F3               	addwf	prodl,w,c
 20287  000A14  6ED9               	movwf	fsr2l,c
 20288  000A16  0E02               	movlw	high _occupiedMemory
 20289  000A18  20F4               	addwfc	prodh,w,c
 20290  000A1A  6EDA               	movwf	fsr2h,c
 20291  000A1C  C08D  FFDE         	movff	??_memory_txFrameRequest,postinc2
 20292  000A20  C08E  FFDD         	movff	??_memory_txFrameRequest+1,postdec2
 20293                           
 20294                           ;memoryController.c: 205: occupiedMemory[freeIndex].fOutOfMemory = 0;
 20295  000A24  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 20296  000A26  0D09               	mullw	9
 20297  000A28  0E07               	movlw	7
 20298  000A2A  26F3               	addwf	prodl,f,c
 20299  000A2C  0E00               	movlw	0
 20300  000A2E  22F4               	addwfc	prodh,f,c
 20301  000A30  0E00               	movlw	low _occupiedMemory
 20302  000A32  24F3               	addwf	prodl,w,c
 20303  000A34  6ED9               	movwf	fsr2l,c
 20304  000A36  0E02               	movlw	high _occupiedMemory
 20305  000A38  20F4               	addwfc	prodh,w,c
 20306  000A3A  6EDA               	movwf	fsr2h,c
 20307  000A3C  0E00               	movlw	0
 20308  000A3E  6EDF               	movwf	indf2,c
 20309                           
 20310                           ;memoryController.c: 206: occupiedMemory[freeIndex].length = length;
 20311  000A40  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 20312  000A42  0D09               	mullw	9
 20313  000A44  0E04               	movlw	4
 20314  000A46  26F3               	addwf	prodl,f,c
 20315  000A48  0E00               	movlw	0
 20316  000A4A  22F4               	addwfc	prodh,f,c
 20317  000A4C  0E00               	movlw	low _occupiedMemory
 20318  000A4E  24F3               	addwf	prodl,w,c
 20319  000A50  6ED9               	movwf	fsr2l,c
 20320  000A52  0E02               	movlw	high _occupiedMemory
 20321  000A54  20F4               	addwfc	prodh,w,c
 20322  000A56  6EDA               	movwf	fsr2h,c
 20323  000A58  C084  FFDE         	movff	memory_txFrameRequest@length,postinc2
 20324  000A5C  C085  FFDD         	movff	memory_txFrameRequest@length+1,postdec2
 20325                           
 20326                           ;memoryController.c: 207: occupiedMemory[freeIndex].index = freeIndex;
 20327  000A60  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 20328  000A62  0D09               	mullw	9
 20329  000A64  0E08               	movlw	8
 20330  000A66  26F3               	addwf	prodl,f,c
 20331  000A68  0E00               	movlw	0
 20332  000A6A  22F4               	addwfc	prodh,f,c
 20333  000A6C  0E00               	movlw	low _occupiedMemory
 20334  000A6E  24F3               	addwf	prodl,w,c
 20335  000A70  6ED9               	movwf	fsr2l,c
 20336  000A72  0E02               	movlw	high _occupiedMemory
 20337  000A74  20F4               	addwfc	prodh,w,c
 20338  000A76  6EDA               	movwf	fsr2h,c
 20339  000A78  C0A1  FFDF         	movff	memory_txFrameRequest@freeIndex,indf2
 20340                           
 20341                           ; BSR set to: 0
 20342                           ;memoryController.c: 208: return occupiedMemory[freeIndex];
 20343  000A7C  51A1               	movf	memory_txFrameRequest@freeIndex& (0+255),w,b
 20344  000A7E  0D09               	mullw	9
 20345  000A80  0E00               	movlw	low _occupiedMemory
 20346  000A82  24F3               	addwf	prodl,w,c
 20347  000A84  6ED9               	movwf	fsr2l,c
 20348  000A86  0E02               	movlw	high _occupiedMemory
 20349  000A88  20F4               	addwfc	prodh,w,c
 20350  000A8A  6EDA               	movwf	fsr2h,c
 20351  000A8C  EE00  F084         	lfsr	0,?_memory_txFrameRequest
 20352  000A90  0E08               	movlw	8
 20353  000A92                     u9531:
 20354  000A92  CFDB FFEB          	movff	plusw2,plusw0
 20355  000A96  06E8               	decf	wreg,f,c
 20356  000A98  E2FC               	bc	u9531
 20357                           
 20358                           ; BSR set to: 0
 20359  000A9A  0012               	return	
 20360  000A9C                     l488:
 20361                           
 20362                           ; BSR set to: 0
 20363                           ;memoryController.c: 209: }
 20364                           ;memoryController.c: 210: }
 20365                           ;memoryController.c: 211: freeIndex++;
 20366                           
 20367                           ; BSR set to: 0
 20368                           
 20369                           ; BSR set to: 0
 20370  000A9C  2BA1               	incf	memory_txFrameRequest@freeIndex& (0+255),f,b
 20371                           
 20372                           ; BSR set to: 0
 20373                           ;memoryController.c: 212: if (freeIndex == 8) {
 20374  000A9E  0E08               	movlw	8
 20375  000AA0  19A1               	xorwf	memory_txFrameRequest@freeIndex& (0+255),w,b
 20376  000AA2  A4D8               	btfss	status,2,c
 20377  000AA4  D00C               	goto	l489
 20378                           
 20379                           ; BSR set to: 0
 20380                           ;memoryController.c: 214: field.fOutOfMemory = 1;
 20381  000AA6  0E01               	movlw	1
 20382  000AA8  6F9F               	movwf	(memory_txFrameRequest@field+7)& (0+255),b
 20383                           
 20384                           ; BSR set to: 0
 20385                           ;memoryController.c: 215: return field;
 20386  000AAA  EE20  F098         	lfsr	2,memory_txFrameRequest@field
 20387  000AAE  EE00  F084         	lfsr	0,?_memory_txFrameRequest
 20388  000AB2  0E08               	movlw	8
 20389  000AB4                     u9551:
 20390  000AB4  CFDB FFEB          	movff	plusw2,plusw0
 20391  000AB8  06E8               	decf	wreg,f,c
 20392  000ABA  E2FC               	bc	u9551
 20393                           
 20394                           ; BSR set to: 0
 20395  000ABC  0012               	return	
 20396  000ABE                     l489:
 20397                           
 20398                           ; BSR set to: 0
 20399                           
 20400                           ; BSR set to: 0
 20401  000ABE  0E08               	movlw	8
 20402  000AC0  0100               	movlb	0	; () banked
 20403  000AC2  65A1               	cpfsgt	memory_txFrameRequest@freeIndex& (0+255),b
 20404  000AC4  D5F0               	goto	l469
 20405                           
 20406                           ; BSR set to: 0
 20407                           ;memoryController.c: 216: }
 20408                           ;memoryController.c: 217: }
 20409                           ;memoryController.c: 218: return field;
 20410                           
 20411                           ; BSR set to: 0
 20412  000AC6  EE20  F098         	lfsr	2,memory_txFrameRequest@field
 20413  000ACA  EE00  F084         	lfsr	0,?_memory_txFrameRequest
 20414  000ACE  0E08               	movlw	8
 20415  000AD0                     u9571:
 20416  000AD0  CFDB FFEB          	movff	plusw2,plusw0
 20417  000AD4  06E8               	decf	wreg,f,c
 20418  000AD6  E2FC               	bc	u9571
 20419  000AD8  0012               	return	
 20420  000ADA                     __end_of_memory_txFrameRequest:
 20421                           	opt stack 0
 20422                           tblptru	equ	0xFF8
 20423                           tblptrh	equ	0xFF7
 20424                           tblptrl	equ	0xFF6
 20425                           tablat	equ	0xFF5
 20426                           prodh	equ	0xFF4
 20427                           prodl	equ	0xFF3
 20428                           intcon	equ	0xFF2
 20429                           intcon3	equ	0xFF0
 20430                           indf0	equ	0xFEF
 20431                           postinc0	equ	0xFEE
 20432                           plusw0	equ	0xFEB
 20433                           fsr0h	equ	0xFEA
 20434                           fsr0l	equ	0xFE9
 20435                           wreg	equ	0xFE8
 20436                           indf1	equ	0xFE7
 20437                           postinc1	equ	0xFE6
 20438                           postdec1	equ	0xFE5
 20439                           plusw1	equ	0xFE3
 20440                           fsr1h	equ	0xFE2
 20441                           fsr1l	equ	0xFE1
 20442                           indf2	equ	0xFDF
 20443                           postinc2	equ	0xFDE
 20444                           postdec2	equ	0xFDD
 20445                           plusw2	equ	0xFDB
 20446                           fsr2h	equ	0xFDA
 20447                           fsr2l	equ	0xFD9
 20448                           status	equ	0xFD8
 20449                           
 20450 ;; *************** function _entireMemoryFull *****************
 20451 ;; Defined at:
 20452 ;;		line 45 in file "src/mem/memoryController.c"
 20453 ;; Parameters:    Size  Location     Type
 20454 ;;		None
 20455 ;; Auto vars:     Size  Location     Type
 20456 ;;  i               1    0[BANK0 ] unsigned char 
 20457 ;; Return value:  Size  Location     Type
 20458 ;;		None               void
 20459 ;; Registers used:
 20460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20461 ;; Tracked objects:
 20462 ;;		On entry : 0/0
 20463 ;;		On exit  : 0/0
 20464 ;;		Unchanged: 0/0
 20465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20466 ;;      Params:         0       0       0       0       0       0       0       0       0
 20467 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20468 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20469 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20470 ;;Total ram usage:        1 bytes
 20471 ;; Hardware stack levels used:    1
 20472 ;; Hardware stack levels required when called:    4
 20473 ;; This function calls:
 20474 ;;		Nothing
 20475 ;; This function is called by:
 20476 ;;		_memory_txFrameRequest
 20477 ;; This function uses a non-reentrant model
 20478 ;;
 20479                           
 20480                           	psect	text77
 20481  0052D4                     __ptext77:
 20482                           	opt stack 0
 20483  0052D4                     _entireMemoryFull:
 20484                           	opt stack 23
 20485                           
 20486                           ;memoryController.c: 46: for (uint8_t i = 0; i < 8; i++) {
 20487                           
 20488                           ;incstack = 0
 20489  0052D4  0E00               	movlw	0
 20490  0052D6  0100               	movlb	0	; () banked
 20491  0052D8  6F60               	movwf	entireMemoryFull@i& (0+255),b
 20492  0052DA                     l8425:
 20493                           
 20494                           ; BSR set to: 0
 20495  0052DA  0E07               	movlw	7
 20496  0052DC  6560               	cpfsgt	entireMemoryFull@i& (0+255),b
 20497  0052DE  D001               	goto	l418
 20498  0052E0  D013               	goto	u8960
 20499  0052E2                     l418:
 20500                           
 20501                           ; BSR set to: 0
 20502                           ;memoryController.c: 47: if (!occupiedMemory[i].fIsAssigned)
 20503                           
 20504                           ; BSR set to: 0
 20505  0052E2  5160               	movf	entireMemoryFull@i& (0+255),w,b
 20506  0052E4  0D09               	mullw	9
 20507  0052E6  0E06               	movlw	6
 20508  0052E8  26F3               	addwf	prodl,f,c
 20509  0052EA  0E00               	movlw	0
 20510  0052EC  22F4               	addwfc	prodh,f,c
 20511  0052EE  0E00               	movlw	low _occupiedMemory
 20512  0052F0  24F3               	addwf	prodl,w,c
 20513  0052F2  6ED9               	movwf	fsr2l,c
 20514  0052F4  0E02               	movlw	high _occupiedMemory
 20515  0052F6  20F4               	addwfc	prodh,w,c
 20516  0052F8  6EDA               	movwf	fsr2h,c
 20517  0052FA  50DF               	movf	indf2,w,c
 20518  0052FC  A4D8               	btfss	status,2,c
 20519  0052FE  D002               	goto	l420
 20520                           
 20521                           ; BSR set to: 0
 20522                           ;memoryController.c: 48: return 0;
 20523  005300  90D8               	bcf	status,0,c
 20524                           
 20525                           ; BSR set to: 0
 20526  005302  0012               	return	
 20527  005304                     l420:
 20528                           
 20529                           ; BSR set to: 0
 20530                           
 20531                           ; BSR set to: 0
 20532  005304  2B60               	incf	entireMemoryFull@i& (0+255),f,b
 20533  005306  D7E9               	goto	l8425
 20534  005308                     u8960:
 20535                           
 20536                           ; BSR set to: 0
 20537                           ;memoryController.c: 49: }
 20538                           ;memoryController.c: 50: return 1;
 20539                           
 20540                           ; BSR set to: 0
 20541  005308  80D8               	bsf	status,0,c
 20542  00530A  0012               	return	
 20543  00530C                     __end_of_entireMemoryFull:
 20544                           	opt stack 0
 20545                           tblptru	equ	0xFF8
 20546                           tblptrh	equ	0xFF7
 20547                           tblptrl	equ	0xFF6
 20548                           tablat	equ	0xFF5
 20549                           prodh	equ	0xFF4
 20550                           prodl	equ	0xFF3
 20551                           intcon	equ	0xFF2
 20552                           intcon3	equ	0xFF0
 20553                           indf0	equ	0xFEF
 20554                           postinc0	equ	0xFEE
 20555                           plusw0	equ	0xFEB
 20556                           fsr0h	equ	0xFEA
 20557                           fsr0l	equ	0xFE9
 20558                           wreg	equ	0xFE8
 20559                           indf1	equ	0xFE7
 20560                           postinc1	equ	0xFE6
 20561                           postdec1	equ	0xFE5
 20562                           plusw1	equ	0xFE3
 20563                           fsr1h	equ	0xFE2
 20564                           fsr1l	equ	0xFE1
 20565                           indf2	equ	0xFDF
 20566                           postinc2	equ	0xFDE
 20567                           postdec2	equ	0xFDD
 20568                           plusw2	equ	0xFDB
 20569                           fsr2h	equ	0xFDA
 20570                           fsr2l	equ	0xFD9
 20571                           status	equ	0xFD8
 20572                           
 20573 ;; *************** function _entireMemoryEmpty *****************
 20574 ;; Defined at:
 20575 ;;		line 37 in file "src/mem/memoryController.c"
 20576 ;; Parameters:    Size  Location     Type
 20577 ;;		None
 20578 ;; Auto vars:     Size  Location     Type
 20579 ;;  i               1    0[BANK0 ] unsigned char 
 20580 ;; Return value:  Size  Location     Type
 20581 ;;		None               void
 20582 ;; Registers used:
 20583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20584 ;; Tracked objects:
 20585 ;;		On entry : 0/0
 20586 ;;		On exit  : 0/0
 20587 ;;		Unchanged: 0/0
 20588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20589 ;;      Params:         0       0       0       0       0       0       0       0       0
 20590 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20591 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20592 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20593 ;;Total ram usage:        1 bytes
 20594 ;; Hardware stack levels used:    1
 20595 ;; Hardware stack levels required when called:    4
 20596 ;; This function calls:
 20597 ;;		Nothing
 20598 ;; This function is called by:
 20599 ;;		_memory_txFrameRequest
 20600 ;; This function uses a non-reentrant model
 20601 ;;
 20602                           
 20603                           	psect	text78
 20604  00530C                     __ptext78:
 20605                           	opt stack 0
 20606  00530C                     _entireMemoryEmpty:
 20607                           	opt stack 23
 20608                           
 20609                           ;memoryController.c: 38: for (uint8_t i = 0; i < 8; i++) {
 20610                           
 20611                           ; BSR set to: 0
 20612                           ;incstack = 0
 20613  00530C  0E00               	movlw	0
 20614  00530E  0100               	movlb	0	; () banked
 20615  005310  6F60               	movwf	entireMemoryEmpty@i& (0+255),b
 20616  005312                     l8405:
 20617                           
 20618                           ; BSR set to: 0
 20619  005312  0E07               	movlw	7
 20620  005314  6560               	cpfsgt	entireMemoryEmpty@i& (0+255),b
 20621  005316  D001               	goto	l412
 20622  005318  D013               	goto	u8930
 20623  00531A                     l412:
 20624                           
 20625                           ; BSR set to: 0
 20626                           ;memoryController.c: 39: if (occupiedMemory[i].fIsAssigned)
 20627                           
 20628                           ; BSR set to: 0
 20629  00531A  5160               	movf	entireMemoryEmpty@i& (0+255),w,b
 20630  00531C  0D09               	mullw	9
 20631  00531E  0E06               	movlw	6
 20632  005320  26F3               	addwf	prodl,f,c
 20633  005322  0E00               	movlw	0
 20634  005324  22F4               	addwfc	prodh,f,c
 20635  005326  0E00               	movlw	low _occupiedMemory
 20636  005328  24F3               	addwf	prodl,w,c
 20637  00532A  6ED9               	movwf	fsr2l,c
 20638  00532C  0E02               	movlw	high _occupiedMemory
 20639  00532E  20F4               	addwfc	prodh,w,c
 20640  005330  6EDA               	movwf	fsr2h,c
 20641  005332  50DF               	movf	indf2,w,c
 20642  005334  B4D8               	btfsc	status,2,c
 20643  005336  D002               	goto	l414
 20644                           
 20645                           ; BSR set to: 0
 20646                           ;memoryController.c: 40: return 0;
 20647  005338  90D8               	bcf	status,0,c
 20648                           
 20649                           ; BSR set to: 0
 20650  00533A  0012               	return	
 20651  00533C                     l414:
 20652                           
 20653                           ; BSR set to: 0
 20654                           
 20655                           ; BSR set to: 0
 20656  00533C  2B60               	incf	entireMemoryEmpty@i& (0+255),f,b
 20657  00533E  D7E9               	goto	l8405
 20658  005340                     u8930:
 20659                           
 20660                           ; BSR set to: 0
 20661                           ;memoryController.c: 41: }
 20662                           ;memoryController.c: 42: return 1;
 20663                           
 20664                           ; BSR set to: 0
 20665  005340  80D8               	bsf	status,0,c
 20666  005342  0012               	return	
 20667  005344                     __end_of_entireMemoryEmpty:
 20668                           	opt stack 0
 20669                           tblptru	equ	0xFF8
 20670                           tblptrh	equ	0xFF7
 20671                           tblptrl	equ	0xFF6
 20672                           tablat	equ	0xFF5
 20673                           prodh	equ	0xFF4
 20674                           prodl	equ	0xFF3
 20675                           intcon	equ	0xFF2
 20676                           intcon3	equ	0xFF0
 20677                           indf0	equ	0xFEF
 20678                           postinc0	equ	0xFEE
 20679                           plusw0	equ	0xFEB
 20680                           fsr0h	equ	0xFEA
 20681                           fsr0l	equ	0xFE9
 20682                           wreg	equ	0xFE8
 20683                           indf1	equ	0xFE7
 20684                           postinc1	equ	0xFE6
 20685                           postdec1	equ	0xFE5
 20686                           plusw1	equ	0xFE3
 20687                           fsr1h	equ	0xFE2
 20688                           fsr1l	equ	0xFE1
 20689                           indf2	equ	0xFDF
 20690                           postinc2	equ	0xFDE
 20691                           postdec2	equ	0xFDD
 20692                           plusw2	equ	0xFDB
 20693                           fsr2h	equ	0xFDA
 20694                           fsr2l	equ	0xFD9
 20695                           status	equ	0xFD8
 20696                           
 20697 ;; *************** function _checkForOverlap *****************
 20698 ;; Defined at:
 20699 ;;		line 63 in file "src/mem/memoryController.c"
 20700 ;; Parameters:    Size  Location     Type
 20701 ;;  a               9   18[BANK0 ] struct memoryField
 20702 ;;  b               9   27[BANK0 ] struct memoryField
 20703 ;; Auto vars:     Size  Location     Type
 20704 ;;		None
 20705 ;; Return value:  Size  Location     Type
 20706 ;;		None               void
 20707 ;; Registers used:
 20708 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 20709 ;; Tracked objects:
 20710 ;;		On entry : 0/0
 20711 ;;		On exit  : 0/0
 20712 ;;		Unchanged: 0/0
 20713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20714 ;;      Params:         0      18       0       0       0       0       0       0       0
 20715 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20716 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20717 ;;      Totals:         0      18       0       0       0       0       0       0       0
 20718 ;;Total ram usage:       18 bytes
 20719 ;; Hardware stack levels used:    1
 20720 ;; Hardware stack levels required when called:    5
 20721 ;; This function calls:
 20722 ;;		_checkForOverlapSwitched
 20723 ;; This function is called by:
 20724 ;;		_memory_txFrameRequest
 20725 ;; This function uses a non-reentrant model
 20726 ;;
 20727                           
 20728                           	psect	text79
 20729  00394E                     __ptext79:
 20730                           	opt stack 0
 20731  00394E                     _checkForOverlap:
 20732                           	opt stack 22
 20733                           
 20734                           ;memoryController.c: 64: if ((a.start == b.start) ||
 20735                           ;memoryController.c: 65: (a.end == b.end) ||
 20736                           ;memoryController.c: 66: (a.start == b.end) ||
 20737                           ;memoryController.c: 67: (a.end == b.start) ||
 20738                           ;memoryController.c: 68: (a.end > 0x3000) ||
 20739                           ;memoryController.c: 69: (a.start > 0x3000) ||
 20740                           ;memoryController.c: 70: (b.end > 0x3000) ||
 20741                           ;memoryController.c: 71: (b.start > 0x3000))
 20742                           
 20743                           ; BSR set to: 0
 20744                           ;incstack = 0
 20745  00394E  0100               	movlb	0	; () banked
 20746  003950  517B               	movf	checkForOverlap@b& (0+255),w,b
 20747  003952  1972               	xorwf	checkForOverlap@a& (0+255),w,b
 20748  003954  E104               	bnz	u8970
 20749  003956  517C               	movf	(checkForOverlap@b+1)& (0+255),w,b
 20750  003958  1973               	xorwf	(checkForOverlap@a+1)& (0+255),w,b
 20751  00395A  B4D8               	btfsc	status,2,c
 20752  00395C  D029               	goto	u9040
 20753  00395E                     u8970:
 20754                           
 20755                           ; BSR set to: 0
 20756  00395E  517D               	movf	(checkForOverlap@b+2)& (0+255),w,b
 20757  003960  1974               	xorwf	(checkForOverlap@a+2)& (0+255),w,b
 20758  003962  E104               	bnz	u8980
 20759  003964  517E               	movf	(checkForOverlap@b+3)& (0+255),w,b
 20760  003966  1975               	xorwf	(checkForOverlap@a+3)& (0+255),w,b
 20761  003968  B4D8               	btfsc	status,2,c
 20762  00396A  D022               	goto	u9040
 20763  00396C                     u8980:
 20764                           
 20765                           ; BSR set to: 0
 20766  00396C  5172               	movf	checkForOverlap@a& (0+255),w,b
 20767  00396E  197D               	xorwf	(checkForOverlap@b+2)& (0+255),w,b
 20768  003970  E104               	bnz	u8990
 20769  003972  5173               	movf	(checkForOverlap@a+1)& (0+255),w,b
 20770  003974  197E               	xorwf	(checkForOverlap@b+3)& (0+255),w,b
 20771  003976  B4D8               	btfsc	status,2,c
 20772  003978  D01B               	goto	u9040
 20773  00397A                     u8990:
 20774                           
 20775                           ; BSR set to: 0
 20776  00397A  517B               	movf	checkForOverlap@b& (0+255),w,b
 20777  00397C  1974               	xorwf	(checkForOverlap@a+2)& (0+255),w,b
 20778  00397E  E104               	bnz	u9000
 20779  003980  517C               	movf	(checkForOverlap@b+1)& (0+255),w,b
 20780  003982  1975               	xorwf	(checkForOverlap@a+3)& (0+255),w,b
 20781  003984  B4D8               	btfsc	status,2,c
 20782  003986  D014               	goto	u9040
 20783  003988                     u9000:
 20784                           
 20785                           ; BSR set to: 0
 20786  003988  0574               	decf	(checkForOverlap@a+2)& (0+255),w,b
 20787  00398A  0E30               	movlw	48
 20788  00398C  5975               	subwfb	(checkForOverlap@a+3)& (0+255),w,b
 20789  00398E  B0D8               	btfsc	status,0,c
 20790  003990  D00F               	goto	u9040
 20791                           
 20792                           ; BSR set to: 0
 20793  003992  0572               	decf	checkForOverlap@a& (0+255),w,b
 20794  003994  0E30               	movlw	48
 20795  003996  5973               	subwfb	(checkForOverlap@a+1)& (0+255),w,b
 20796  003998  B0D8               	btfsc	status,0,c
 20797  00399A  D00A               	goto	u9040
 20798                           
 20799                           ; BSR set to: 0
 20800  00399C  057D               	decf	(checkForOverlap@b+2)& (0+255),w,b
 20801  00399E  0E30               	movlw	48
 20802  0039A0  597E               	subwfb	(checkForOverlap@b+3)& (0+255),w,b
 20803  0039A2  B0D8               	btfsc	status,0,c
 20804  0039A4  D005               	goto	u9040
 20805                           
 20806                           ; BSR set to: 0
 20807  0039A6  057B               	decf	checkForOverlap@b& (0+255),w,b
 20808  0039A8  0E30               	movlw	48
 20809  0039AA  597C               	subwfb	(checkForOverlap@b+1)& (0+255),w,b
 20810  0039AC  A0D8               	btfss	status,0,c
 20811  0039AE  D002               	goto	l432
 20812  0039B0                     u9040:
 20813                           
 20814                           ; BSR set to: 0
 20815                           ;memoryController.c: 72: return 1;
 20816                           
 20817                           ; BSR set to: 0
 20818  0039B0  80D8               	bsf	status,0,c
 20819                           
 20820                           ; BSR set to: 0
 20821  0039B2  0012               	return	
 20822  0039B4                     l432:
 20823                           
 20824                           ; BSR set to: 0
 20825                           ;memoryController.c: 75: if (a.start < a.end) {
 20826                           
 20827                           ; BSR set to: 0
 20828  0039B4  5174               	movf	(checkForOverlap@a+2)& (0+255),w,b
 20829  0039B6  5D72               	subwf	checkForOverlap@a& (0+255),w,b
 20830  0039B8  5175               	movf	(checkForOverlap@a+3)& (0+255),w,b
 20831  0039BA  5973               	subwfb	(checkForOverlap@a+1)& (0+255),w,b
 20832  0039BC  B0D8               	btfsc	status,0,c
 20833  0039BE  D03B               	goto	l436
 20834                           
 20835                           ; BSR set to: 0
 20836                           ;memoryController.c: 76: if (b.start < b.end) {
 20837  0039C0  517D               	movf	(checkForOverlap@b+2)& (0+255),w,b
 20838  0039C2  5D7B               	subwf	checkForOverlap@b& (0+255),w,b
 20839  0039C4  517E               	movf	(checkForOverlap@b+3)& (0+255),w,b
 20840  0039C6  597C               	subwfb	(checkForOverlap@b+1)& (0+255),w,b
 20841  0039C8  B0D8               	btfsc	status,0,c
 20842  0039CA  D02B               	goto	l437
 20843                           
 20844                           ; BSR set to: 0
 20845                           ;memoryController.c: 78: if (a.start < b.start) {
 20846  0039CC  517B               	movf	checkForOverlap@b& (0+255),w,b
 20847  0039CE  5D72               	subwf	checkForOverlap@a& (0+255),w,b
 20848  0039D0  517C               	movf	(checkForOverlap@b+1)& (0+255),w,b
 20849  0039D2  5973               	subwfb	(checkForOverlap@a+1)& (0+255),w,b
 20850  0039D4  B0D8               	btfsc	status,0,c
 20851  0039D6  D00A               	goto	l438
 20852                           
 20853                           ; BSR set to: 0
 20854                           ;memoryController.c: 79: if (a.end > b.start) {
 20855  0039D8  5174               	movf	(checkForOverlap@a+2)& (0+255),w,b
 20856  0039DA  5D7B               	subwf	checkForOverlap@b& (0+255),w,b
 20857  0039DC  5175               	movf	(checkForOverlap@a+3)& (0+255),w,b
 20858  0039DE  597C               	subwfb	(checkForOverlap@b+1)& (0+255),w,b
 20859  0039E0  B0D8               	btfsc	status,0,c
 20860  0039E2  D002               	goto	l439
 20861                           
 20862                           ; BSR set to: 0
 20863                           ;memoryController.c: 80: return 1;
 20864  0039E4  80D8               	bsf	status,0,c
 20865                           
 20866                           ; BSR set to: 0
 20867                           ;memoryController.c: 81: } else {
 20868                           
 20869                           ; BSR set to: 0
 20870  0039E6  0012               	return	
 20871  0039E8                     l439:
 20872                           
 20873                           ; BSR set to: 0
 20874                           ;memoryController.c: 82: return 0;
 20875                           
 20876                           ; BSR set to: 0
 20877  0039E8  90D8               	bcf	status,0,c
 20878                           
 20879                           ; BSR set to: 0
 20880                           ;memoryController.c: 83: }
 20881                           ;memoryController.c: 84: } else {
 20882                           
 20883                           ; BSR set to: 0
 20884  0039EA  0012               	return	
 20885  0039EC                     l438:
 20886                           
 20887                           ; BSR set to: 0
 20888                           ;memoryController.c: 85: return checkForOverlapSwitched(b, a);
 20889                           
 20890                           ; BSR set to: 0
 20891  0039EC  EE20  F07B         	lfsr	2,checkForOverlap@b
 20892  0039F0  EE00  F060         	lfsr	0,checkForOverlapSwitched@a
 20893  0039F4  0E08               	movlw	8
 20894  0039F6                     u9091:
 20895  0039F6  CFDB FFEB          	movff	plusw2,plusw0
 20896  0039FA  06E8               	decf	wreg,f,c
 20897  0039FC  E2FC               	bc	u9091
 20898  0039FE  EE20  F072         	lfsr	2,checkForOverlap@a
 20899  003A02  EE00  F069         	lfsr	0,checkForOverlapSwitched@b
 20900  003A06  0E08               	movlw	8
 20901  003A08                     u9101:
 20902  003A08  CFDB FFEB          	movff	plusw2,plusw0
 20903  003A0C  06E8               	decf	wreg,f,c
 20904  003A0E  E2FC               	bc	u9101
 20905  003A10  EC6C  F020         	call	_checkForOverlapSwitched	;wreg free
 20906  003A14  0100               	movlb	0	; () banked
 20907  003A16  B0D8               	btfsc	status,0,c
 20908  003A18  D002               	goto	l8295
 20909                           
 20910                           ; BSR set to: 0
 20911  003A1A  90D8               	bcf	status,0,c
 20912  003A1C  0012               	return	
 20913  003A1E                     l8295:
 20914                           
 20915                           ; BSR set to: 0
 20916                           
 20917                           ; BSR set to: 0
 20918  003A1E  80D8               	bsf	status,0,c
 20919                           
 20920                           ; BSR set to: 0
 20921                           ;memoryController.c: 86: }
 20922                           ;memoryController.c: 87: } else {
 20923                           
 20924                           ; BSR set to: 0
 20925                           
 20926                           ; BSR set to: 0
 20927  003A20  0012               	return	
 20928  003A22                     l437:
 20929                           
 20930                           ; BSR set to: 0
 20931                           ;memoryController.c: 88: if (b.end < a.start)
 20932                           
 20933                           ; BSR set to: 0
 20934  003A22  5172               	movf	checkForOverlap@a& (0+255),w,b
 20935  003A24  5D7D               	subwf	(checkForOverlap@b+2)& (0+255),w,b
 20936  003A26  5173               	movf	(checkForOverlap@a+1)& (0+255),w,b
 20937  003A28  597E               	subwfb	(checkForOverlap@b+3)& (0+255),w,b
 20938  003A2A  B0D8               	btfsc	status,0,c
 20939  003A2C  D002               	goto	l443
 20940                           
 20941                           ; BSR set to: 0
 20942                           ;memoryController.c: 89: return 0;
 20943  003A2E  90D8               	bcf	status,0,c
 20944                           
 20945                           ; BSR set to: 0
 20946                           
 20947                           ; BSR set to: 0
 20948  003A30  0012               	return	
 20949  003A32                     l443:
 20950                           
 20951                           ; BSR set to: 0
 20952                           ;memoryController.c: 90: else
 20953                           ;memoryController.c: 91: return 1;
 20954                           
 20955                           ; BSR set to: 0
 20956  003A32  80D8               	bsf	status,0,c
 20957                           
 20958                           ; BSR set to: 0
 20959                           ;memoryController.c: 92: }
 20960                           ;memoryController.c: 93: } else {
 20961                           
 20962                           ; BSR set to: 0
 20963                           
 20964                           ; BSR set to: 0
 20965  003A34  0012               	return	
 20966  003A36                     l436:
 20967                           
 20968                           ; BSR set to: 0
 20969                           ;memoryController.c: 94: return checkForOverlapSwitched(b, a);
 20970                           
 20971                           ; BSR set to: 0
 20972  003A36  EE20  F07B         	lfsr	2,checkForOverlap@b
 20973  003A3A  EE00  F060         	lfsr	0,checkForOverlapSwitched@a
 20974  003A3E  0E08               	movlw	8
 20975  003A40                     u9131:
 20976  003A40  CFDB FFEB          	movff	plusw2,plusw0
 20977  003A44  06E8               	decf	wreg,f,c
 20978  003A46  E2FC               	bc	u9131
 20979  003A48  EE20  F072         	lfsr	2,checkForOverlap@a
 20980  003A4C  EE00  F069         	lfsr	0,checkForOverlapSwitched@b
 20981  003A50  0E08               	movlw	8
 20982  003A52                     u9141:
 20983  003A52  CFDB FFEB          	movff	plusw2,plusw0
 20984  003A56  06E8               	decf	wreg,f,c
 20985  003A58  E2FC               	bc	u9141
 20986  003A5A  EC6C  F020         	call	_checkForOverlapSwitched	;wreg free
 20987  003A5E  0100               	movlb	0	; () banked
 20988  003A60  B0D8               	btfsc	status,0,c
 20989  003A62  D002               	goto	l8299
 20990                           
 20991                           ; BSR set to: 0
 20992  003A64  90D8               	bcf	status,0,c
 20993  003A66  0012               	return	
 20994  003A68                     l8299:
 20995                           
 20996                           ; BSR set to: 0
 20997                           
 20998                           ; BSR set to: 0
 20999  003A68  80D8               	bsf	status,0,c
 21000                           
 21001                           ; BSR set to: 0
 21002                           
 21003                           ; BSR set to: 0
 21004  003A6A  0012               	return	
 21005  003A6C                     __end_of_checkForOverlap:
 21006                           	opt stack 0
 21007                           tblptru	equ	0xFF8
 21008                           tblptrh	equ	0xFF7
 21009                           tblptrl	equ	0xFF6
 21010                           tablat	equ	0xFF5
 21011                           prodh	equ	0xFF4
 21012                           prodl	equ	0xFF3
 21013                           intcon	equ	0xFF2
 21014                           intcon3	equ	0xFF0
 21015                           indf0	equ	0xFEF
 21016                           postinc0	equ	0xFEE
 21017                           plusw0	equ	0xFEB
 21018                           fsr0h	equ	0xFEA
 21019                           fsr0l	equ	0xFE9
 21020                           wreg	equ	0xFE8
 21021                           indf1	equ	0xFE7
 21022                           postinc1	equ	0xFE6
 21023                           postdec1	equ	0xFE5
 21024                           plusw1	equ	0xFE3
 21025                           fsr1h	equ	0xFE2
 21026                           fsr1l	equ	0xFE1
 21027                           indf2	equ	0xFDF
 21028                           postinc2	equ	0xFDE
 21029                           postdec2	equ	0xFDD
 21030                           plusw2	equ	0xFDB
 21031                           fsr2h	equ	0xFDA
 21032                           fsr2l	equ	0xFD9
 21033                           status	equ	0xFD8
 21034                           
 21035 ;; *************** function _checkForOverlapSwitched *****************
 21036 ;; Defined at:
 21037 ;;		line 98 in file "src/mem/memoryController.c"
 21038 ;; Parameters:    Size  Location     Type
 21039 ;;  a               9    0[BANK0 ] struct memoryField
 21040 ;;  b               9    9[BANK0 ] struct memoryField
 21041 ;; Auto vars:     Size  Location     Type
 21042 ;;		None
 21043 ;; Return value:  Size  Location     Type
 21044 ;;		None               void
 21045 ;; Registers used:
 21046 ;;		wreg, status,2, status,0
 21047 ;; Tracked objects:
 21048 ;;		On entry : 0/0
 21049 ;;		On exit  : 0/0
 21050 ;;		Unchanged: 0/0
 21051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21052 ;;      Params:         0      18       0       0       0       0       0       0       0
 21053 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21054 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21055 ;;      Totals:         0      18       0       0       0       0       0       0       0
 21056 ;;Total ram usage:       18 bytes
 21057 ;; Hardware stack levels used:    1
 21058 ;; Hardware stack levels required when called:    4
 21059 ;; This function calls:
 21060 ;;		Nothing
 21061 ;; This function is called by:
 21062 ;;		_checkForOverlap
 21063 ;; This function uses a non-reentrant model
 21064 ;;
 21065                           
 21066                           	psect	text80
 21067  0040D8                     __ptext80:
 21068                           	opt stack 0
 21069  0040D8                     _checkForOverlapSwitched:
 21070                           	opt stack 22
 21071                           
 21072                           ;memoryController.c: 101: if ((a.start == b.start) ||
 21073                           ;memoryController.c: 102: (a.end == b.end) ||
 21074                           ;memoryController.c: 103: (a.start == b.end) ||
 21075                           ;memoryController.c: 104: (a.end == b.start) ||
 21076                           ;memoryController.c: 105: (a.end > 0x3000) ||
 21077                           ;memoryController.c: 106: (a.start > 0x3000) ||
 21078                           ;memoryController.c: 107: (b.end > 0x3000) ||
 21079                           ;memoryController.c: 108: (b.start > 0x3000))
 21080                           
 21081                           ; BSR set to: 0
 21082                           ;incstack = 0
 21083  0040D8  0100               	movlb	0	; () banked
 21084  0040DA  5169               	movf	checkForOverlapSwitched@b& (0+255),w,b
 21085  0040DC  1960               	xorwf	checkForOverlapSwitched@a& (0+255),w,b
 21086  0040DE  E104               	bnz	u8780
 21087  0040E0  516A               	movf	(checkForOverlapSwitched@b+1)& (0+255),w,b
 21088  0040E2  1961               	xorwf	(checkForOverlapSwitched@a+1)& (0+255),w,b
 21089  0040E4  B4D8               	btfsc	status,2,c
 21090  0040E6  D029               	goto	u8850
 21091  0040E8                     u8780:
 21092                           
 21093                           ; BSR set to: 0
 21094  0040E8  516B               	movf	(checkForOverlapSwitched@b+2)& (0+255),w,b
 21095  0040EA  1962               	xorwf	(checkForOverlapSwitched@a+2)& (0+255),w,b
 21096  0040EC  E104               	bnz	u8790
 21097  0040EE  516C               	movf	(checkForOverlapSwitched@b+3)& (0+255),w,b
 21098  0040F0  1963               	xorwf	(checkForOverlapSwitched@a+3)& (0+255),w,b
 21099  0040F2  B4D8               	btfsc	status,2,c
 21100  0040F4  D022               	goto	u8850
 21101  0040F6                     u8790:
 21102                           
 21103                           ; BSR set to: 0
 21104  0040F6  5160               	movf	checkForOverlapSwitched@a& (0+255),w,b
 21105  0040F8  196B               	xorwf	(checkForOverlapSwitched@b+2)& (0+255),w,b
 21106  0040FA  E104               	bnz	u8800
 21107  0040FC  5161               	movf	(checkForOverlapSwitched@a+1)& (0+255),w,b
 21108  0040FE  196C               	xorwf	(checkForOverlapSwitched@b+3)& (0+255),w,b
 21109  004100  B4D8               	btfsc	status,2,c
 21110  004102  D01B               	goto	u8850
 21111  004104                     u8800:
 21112                           
 21113                           ; BSR set to: 0
 21114  004104  5169               	movf	checkForOverlapSwitched@b& (0+255),w,b
 21115  004106  1962               	xorwf	(checkForOverlapSwitched@a+2)& (0+255),w,b
 21116  004108  E104               	bnz	u8810
 21117  00410A  516A               	movf	(checkForOverlapSwitched@b+1)& (0+255),w,b
 21118  00410C  1963               	xorwf	(checkForOverlapSwitched@a+3)& (0+255),w,b
 21119  00410E  B4D8               	btfsc	status,2,c
 21120  004110  D014               	goto	u8850
 21121  004112                     u8810:
 21122                           
 21123                           ; BSR set to: 0
 21124  004112  0562               	decf	(checkForOverlapSwitched@a+2)& (0+255),w,b
 21125  004114  0E30               	movlw	48
 21126  004116  5963               	subwfb	(checkForOverlapSwitched@a+3)& (0+255),w,b
 21127  004118  B0D8               	btfsc	status,0,c
 21128  00411A  D00F               	goto	u8850
 21129                           
 21130                           ; BSR set to: 0
 21131  00411C  0560               	decf	checkForOverlapSwitched@a& (0+255),w,b
 21132  00411E  0E30               	movlw	48
 21133  004120  5961               	subwfb	(checkForOverlapSwitched@a+1)& (0+255),w,b
 21134  004122  B0D8               	btfsc	status,0,c
 21135  004124  D00A               	goto	u8850
 21136                           
 21137                           ; BSR set to: 0
 21138  004126  056B               	decf	(checkForOverlapSwitched@b+2)& (0+255),w,b
 21139  004128  0E30               	movlw	48
 21140  00412A  596C               	subwfb	(checkForOverlapSwitched@b+3)& (0+255),w,b
 21141  00412C  B0D8               	btfsc	status,0,c
 21142  00412E  D005               	goto	u8850
 21143                           
 21144                           ; BSR set to: 0
 21145  004130  0569               	decf	checkForOverlapSwitched@b& (0+255),w,b
 21146  004132  0E30               	movlw	48
 21147  004134  596A               	subwfb	(checkForOverlapSwitched@b+1)& (0+255),w,b
 21148  004136  A0D8               	btfss	status,0,c
 21149  004138  D002               	goto	l448
 21150  00413A                     u8850:
 21151                           
 21152                           ; BSR set to: 0
 21153                           ;memoryController.c: 109: return 1;
 21154                           
 21155                           ; BSR set to: 0
 21156  00413A  80D8               	bsf	status,0,c
 21157                           
 21158                           ; BSR set to: 0
 21159  00413C  0012               	return	
 21160  00413E                     l448:
 21161                           
 21162                           ; BSR set to: 0
 21163                           ;memoryController.c: 112: if (a.start < a.end) {
 21164                           
 21165                           ; BSR set to: 0
 21166  00413E  5162               	movf	(checkForOverlapSwitched@a+2)& (0+255),w,b
 21167  004140  5D60               	subwf	checkForOverlapSwitched@a& (0+255),w,b
 21168  004142  5163               	movf	(checkForOverlapSwitched@a+3)& (0+255),w,b
 21169  004144  5961               	subwfb	(checkForOverlapSwitched@a+1)& (0+255),w,b
 21170  004146  B0D8               	btfsc	status,0,c
 21171  004148  D01E               	goto	l459
 21172                           
 21173                           ; BSR set to: 0
 21174                           ;memoryController.c: 113: if (b.start < b.end) {
 21175  00414A  516B               	movf	(checkForOverlapSwitched@b+2)& (0+255),w,b
 21176  00414C  5D69               	subwf	checkForOverlapSwitched@b& (0+255),w,b
 21177  00414E  516C               	movf	(checkForOverlapSwitched@b+3)& (0+255),w,b
 21178  004150  596A               	subwfb	(checkForOverlapSwitched@b+1)& (0+255),w,b
 21179  004152  B0D8               	btfsc	status,0,c
 21180  004154  D010               	goto	l453
 21181                           
 21182                           ; BSR set to: 0
 21183                           ;memoryController.c: 115: if (a.start < b.start) {
 21184  004156  5169               	movf	checkForOverlapSwitched@b& (0+255),w,b
 21185  004158  5D60               	subwf	checkForOverlapSwitched@a& (0+255),w,b
 21186  00415A  516A               	movf	(checkForOverlapSwitched@b+1)& (0+255),w,b
 21187  00415C  5961               	subwfb	(checkForOverlapSwitched@a+1)& (0+255),w,b
 21188  00415E  B0D8               	btfsc	status,0,c
 21189  004160  D012               	goto	l459
 21190                           
 21191                           ; BSR set to: 0
 21192                           ;memoryController.c: 116: if (a.end > b.start) {
 21193  004162  5162               	movf	(checkForOverlapSwitched@a+2)& (0+255),w,b
 21194  004164  5D69               	subwf	checkForOverlapSwitched@b& (0+255),w,b
 21195  004166  5163               	movf	(checkForOverlapSwitched@a+3)& (0+255),w,b
 21196  004168  596A               	subwfb	(checkForOverlapSwitched@b+1)& (0+255),w,b
 21197  00416A  B0D8               	btfsc	status,0,c
 21198  00416C  D002               	goto	l455
 21199                           
 21200                           ; BSR set to: 0
 21201                           ;memoryController.c: 117: return 1;
 21202  00416E  80D8               	bsf	status,0,c
 21203                           
 21204                           ; BSR set to: 0
 21205  004170  0012               	return	
 21206  004172                     l455:
 21207                           
 21208                           ; BSR set to: 0
 21209                           ;memoryController.c: 119: return 0;
 21210                           
 21211                           ; BSR set to: 0
 21212  004172  90D8               	bcf	status,0,c
 21213                           
 21214                           ; BSR set to: 0
 21215  004174  0012               	return	
 21216  004176                     l453:
 21217                           
 21218                           ; BSR set to: 0
 21219                           ;memoryController.c: 123: if (b.end < a.start)
 21220                           
 21221                           ; BSR set to: 0
 21222  004176  5160               	movf	checkForOverlapSwitched@a& (0+255),w,b
 21223  004178  5D6B               	subwf	(checkForOverlapSwitched@b+2)& (0+255),w,b
 21224  00417A  5161               	movf	(checkForOverlapSwitched@a+1)& (0+255),w,b
 21225  00417C  596C               	subwfb	(checkForOverlapSwitched@b+3)& (0+255),w,b
 21226  00417E  A0D8               	btfss	status,0,c
 21227  004180  D7F8               	goto	l455
 21228                           
 21229                           ; BSR set to: 0
 21230                           ;memoryController.c: 125: else
 21231                           ;memoryController.c: 126: return 1;
 21232                           
 21233                           ; BSR set to: 0
 21234                           
 21235                           ; BSR set to: 0
 21236                           
 21237                           ; BSR set to: 0
 21238                           
 21239                           ; BSR set to: 0
 21240                           ;memoryController.c: 124: return 0;
 21241  004182  80D8               	bsf	status,0,c
 21242                           
 21243                           ; BSR set to: 0
 21244  004184  0012               	return	
 21245  004186                     l459:
 21246                           
 21247                           ; BSR set to: 0
 21248                           ;memoryController.c: 127: }
 21249                           ;memoryController.c: 128: }
 21250                           ;memoryController.c: 130: return 1;
 21251                           
 21252                           ; BSR set to: 0
 21253                           
 21254                           ; BSR set to: 0
 21255                           
 21256                           ; BSR set to: 0
 21257  004186  80D8               	bsf	status,0,c
 21258  004188  0012               	return	
 21259  00418A                     __end_of_checkForOverlapSwitched:
 21260                           	opt stack 0
 21261                           tblptru	equ	0xFF8
 21262                           tblptrh	equ	0xFF7
 21263                           tblptrl	equ	0xFF6
 21264                           tablat	equ	0xFF5
 21265                           prodh	equ	0xFF4
 21266                           prodl	equ	0xFF3
 21267                           intcon	equ	0xFF2
 21268                           intcon3	equ	0xFF0
 21269                           indf0	equ	0xFEF
 21270                           postinc0	equ	0xFEE
 21271                           plusw0	equ	0xFEB
 21272                           fsr0h	equ	0xFEA
 21273                           fsr0l	equ	0xFE9
 21274                           wreg	equ	0xFE8
 21275                           indf1	equ	0xFE7
 21276                           postinc1	equ	0xFE6
 21277                           postdec1	equ	0xFE5
 21278                           plusw1	equ	0xFE3
 21279                           fsr1h	equ	0xFE2
 21280                           fsr1l	equ	0xFE1
 21281                           indf2	equ	0xFDF
 21282                           postinc2	equ	0xFDE
 21283                           postdec2	equ	0xFDD
 21284                           plusw2	equ	0xFDB
 21285                           fsr2h	equ	0xFDA
 21286                           fsr2l	equ	0xFD9
 21287                           status	equ	0xFD8
 21288                           
 21289 ;; *************** function ___wmul *****************
 21290 ;; Defined at:
 21291 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 21292 ;; Parameters:    Size  Location     Type
 21293 ;;  multiplier      2    0[BANK0 ] unsigned int 
 21294 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 21295 ;; Auto vars:     Size  Location     Type
 21296 ;;  product         2    4[BANK0 ] unsigned int 
 21297 ;; Return value:  Size  Location     Type
 21298 ;;                  2    0[BANK0 ] unsigned int 
 21299 ;; Registers used:
 21300 ;;		wreg, status,2, status,0, prodl, prodh
 21301 ;; Tracked objects:
 21302 ;;		On entry : 0/0
 21303 ;;		On exit  : 0/0
 21304 ;;		Unchanged: 0/0
 21305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21306 ;;      Params:         0       4       0       0       0       0       0       0       0
 21307 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21308 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21309 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21310 ;;Total ram usage:        6 bytes
 21311 ;; Hardware stack levels used:    1
 21312 ;; Hardware stack levels required when called:    4
 21313 ;; This function calls:
 21314 ;;		Nothing
 21315 ;; This function is called by:
 21316 ;;		_memory_txFrameRequest
 21317 ;; This function uses a non-reentrant model
 21318 ;;
 21319                           
 21320                           	psect	text81
 21321  00556E                     __ptext81:
 21322                           	opt stack 0
 21323  00556E                     ___wmul:
 21324                           	opt stack 23
 21325                           
 21326                           ; BSR set to: 0
 21327                           ;incstack = 0
 21328  00556E  0100               	movlb	0	; () banked
 21329  005570  5160               	movf	___wmul@multiplier& (0+255),w,b
 21330  005572  0362               	mulwf	___wmul@multiplicand& (0+255),b
 21331  005574  CFF3 F064          	movff	prodl,___wmul@product
 21332  005578  CFF4 F065          	movff	prodh,___wmul@product+1
 21333  00557C  5160               	movf	___wmul@multiplier& (0+255),w,b
 21334  00557E  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 21335  005580  50F3               	movf	prodl,w,c
 21336  005582  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 21337  005584  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 21338  005586  0362               	mulwf	___wmul@multiplicand& (0+255),b
 21339  005588  50F3               	movf	prodl,w,c
 21340  00558A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 21341                           
 21342                           ; BSR set to: 0
 21343  00558C  C064  F060         	movff	___wmul@product,?___wmul
 21344  005590  C065  F061         	movff	___wmul@product+1,?___wmul+1
 21345  005594  0012               	return	
 21346  005596                     __end_of___wmul:
 21347                           	opt stack 0
 21348                           tblptru	equ	0xFF8
 21349                           tblptrh	equ	0xFF7
 21350                           tblptrl	equ	0xFF6
 21351                           tablat	equ	0xFF5
 21352                           prodh	equ	0xFF4
 21353                           prodl	equ	0xFF3
 21354                           intcon	equ	0xFF2
 21355                           intcon3	equ	0xFF0
 21356                           indf0	equ	0xFEF
 21357                           postinc0	equ	0xFEE
 21358                           plusw0	equ	0xFEB
 21359                           fsr0h	equ	0xFEA
 21360                           fsr0l	equ	0xFE9
 21361                           wreg	equ	0xFE8
 21362                           indf1	equ	0xFE7
 21363                           postinc1	equ	0xFE6
 21364                           postdec1	equ	0xFE5
 21365                           plusw1	equ	0xFE3
 21366                           fsr1h	equ	0xFE2
 21367                           fsr1l	equ	0xFE1
 21368                           indf2	equ	0xFDF
 21369                           postinc2	equ	0xFDE
 21370                           postdec2	equ	0xFDD
 21371                           plusw2	equ	0xFDB
 21372                           fsr2h	equ	0xFDA
 21373                           fsr2l	equ	0xFD9
 21374                           status	equ	0xFD8
 21375                           
 21376 ;; *************** function _ethernetController_writeEtherTypeFieldToBuffer *****************
 21377 ;; Defined at:
 21378 ;;		line 241 in file "src/enc424j600/ENC424J600.c"
 21379 ;; Parameters:    Size  Location     Type
 21380 ;;  ethtype         2   15[BANK0 ] enum E5509
 21381 ;;  field           9   17[BANK0 ] struct memoryField
 21382 ;; Auto vars:     Size  Location     Type
 21383 ;;  opcode          1   28[BANK0 ] unsigned char 
 21384 ;;  highByte        1   27[BANK0 ] unsigned char 
 21385 ;;  lowByte         1   26[BANK0 ] unsigned char 
 21386 ;; Return value:  Size  Location     Type
 21387 ;;                  1    wreg      void 
 21388 ;; Registers used:
 21389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21390 ;; Tracked objects:
 21391 ;;		On entry : 0/0
 21392 ;;		On exit  : 0/0
 21393 ;;		Unchanged: 0/0
 21394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21395 ;;      Params:         0      11       0       0       0       0       0       0       0
 21396 ;;      Locals:         0       3       0       0       0       0       0       0       0
 21397 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21398 ;;      Totals:         0      14       0       0       0       0       0       0       0
 21399 ;;Total ram usage:       14 bytes
 21400 ;; Hardware stack levels used:    1
 21401 ;; Hardware stack levels required when called:    7
 21402 ;; This function calls:
 21403 ;;		_enc424j600_setGPDATAWritePointer
 21404 ;;		_enc424j600_writeSPI
 21405 ;; This function is called by:
 21406 ;;		_ethernet_txFrameRequest
 21407 ;; This function uses a non-reentrant model
 21408 ;;
 21409                           
 21410                           	psect	text82
 21411  004F9E                     __ptext82:
 21412                           	opt stack 0
 21413  004F9E                     _ethernetController_writeEtherTypeFieldToBuffer:
 21414                           	opt stack 21
 21415                           
 21416                           ;ENC424J600.c: 242: enc424j600_setGPDATAWritePointer(field.start + 0x0006);
 21417                           
 21418                           ; BSR set to: 0
 21419                           ;incstack = 0
 21420  004F9E  0E06               	movlw	6
 21421  004FA0  0100               	movlb	0	; () banked
 21422  004FA2  2571               	addwf	ethernetController_writeEtherTypeFieldToBuffer@field& (0+255),w,b
 21423  004FA4  6F6A               	movwf	enc424j600_setGPDATAWritePointer@addr& (0+255),b
 21424  004FA6  0E00               	movlw	0
 21425  004FA8  2172               	addwfc	(ethernetController_writeEtherTypeFieldToBuffer@field+1)& (0+255),w,b
 21426  004FAA  6F6B               	movwf	(enc424j600_setGPDATAWritePointer@addr+1)& (0+255),b
 21427  004FAC  EC2E  F029         	call	_enc424j600_setGPDATAWritePointer	;wreg free
 21428                           
 21429                           ;ENC424J600.c: 243: uint8_t lowByte = ethtype & 0x00ff;
 21430  004FB0  C06F  F07A         	movff	ethernetController_writeEtherTypeFieldToBuffer@ethtype,ethernetController_writeEt
      +                          herTypeFieldToBuffer@lowByte
 21431                           
 21432                           ;ENC424J600.c: 244: uint8_t highByte = (ethtype & 0xff00) >> 8;
 21433  004FB4  0100               	movlb	0	; () banked
 21434  004FB6  5170               	movf	(ethernetController_writeEtherTypeFieldToBuffer@ethtype+1)& (0+255),w,b
 21435  004FB8  6F7B               	movwf	ethernetController_writeEtherTypeFieldToBuffer@highByte& (0+255),b
 21436                           
 21437                           ; BSR set to: 0
 21438                           ;ENC424J600.c: 245: uint8_t opcode = 0x2A;
 21439  004FBA  0E2A               	movlw	42
 21440  004FBC  6F7C               	movwf	ethernetController_writeEtherTypeFieldToBuffer@opcode& (0+255),b
 21441                           
 21442                           ; BSR set to: 0
 21443                           ;ENC424J600.c: 246: PORTBbits.RB4=0;
 21444  004FBE  9881               	bcf	3969,4,c	;volatile
 21445                           
 21446                           ;ENC424J600.c: 247: enc424j600_writeSPI(&opcode);
 21447  004FC0  0E7C               	movlw	low ethernetController_writeEtherTypeFieldToBuffer@opcode
 21448  004FC2  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 21449  004FC4  0E00               	movlw	high ethernetController_writeEtherTypeFieldToBuffer@opcode
 21450  004FC6  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 21451  004FC8  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 21452                           
 21453                           ;ENC424J600.c: 248: enc424j600_writeSPI(&highByte);
 21454  004FCC  0E7B               	movlw	low ethernetController_writeEtherTypeFieldToBuffer@highByte
 21455  004FCE  0100               	movlb	0	; () banked
 21456  004FD0  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 21457  004FD2  0E00               	movlw	high ethernetController_writeEtherTypeFieldToBuffer@highByte
 21458  004FD4  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 21459  004FD6  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 21460                           
 21461                           ;ENC424J600.c: 249: enc424j600_writeSPI(&lowByte);
 21462  004FDA  0E7A               	movlw	low ethernetController_writeEtherTypeFieldToBuffer@lowByte
 21463  004FDC  0100               	movlb	0	; () banked
 21464  004FDE  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 21465  004FE0  0E00               	movlw	high ethernetController_writeEtherTypeFieldToBuffer@lowByte
 21466  004FE2  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 21467  004FE4  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 21468                           
 21469                           ;ENC424J600.c: 250: PORTBbits.RB4=1;
 21470  004FE8  8881               	bsf	3969,4,c	;volatile
 21471  004FEA  0012               	return		;funcret
 21472  004FEC                     __end_of_ethernetController_writeEtherTypeFieldToBuffer:
 21473                           	opt stack 0
 21474                           tblptru	equ	0xFF8
 21475                           tblptrh	equ	0xFF7
 21476                           tblptrl	equ	0xFF6
 21477                           tablat	equ	0xFF5
 21478                           prodh	equ	0xFF4
 21479                           prodl	equ	0xFF3
 21480                           intcon	equ	0xFF2
 21481                           intcon3	equ	0xFF0
 21482                           indf0	equ	0xFEF
 21483                           postinc0	equ	0xFEE
 21484                           plusw0	equ	0xFEB
 21485                           fsr0h	equ	0xFEA
 21486                           fsr0l	equ	0xFE9
 21487                           wreg	equ	0xFE8
 21488                           indf1	equ	0xFE7
 21489                           postinc1	equ	0xFE6
 21490                           postdec1	equ	0xFE5
 21491                           plusw1	equ	0xFE3
 21492                           fsr1h	equ	0xFE2
 21493                           fsr1l	equ	0xFE1
 21494                           indf2	equ	0xFDF
 21495                           postinc2	equ	0xFDE
 21496                           postdec2	equ	0xFDD
 21497                           plusw2	equ	0xFDB
 21498                           fsr2h	equ	0xFDA
 21499                           fsr2l	equ	0xFD9
 21500                           status	equ	0xFD8
 21501                           
 21502 ;; *************** function _ethernetController_writeDestinationMACAddress *****************
 21503 ;; Defined at:
 21504 ;;		line 228 in file "src/enc424j600/ENC424J600.c"
 21505 ;; Parameters:    Size  Location     Type
 21506 ;;  addr            6   15[BANK0 ] struct macaddress
 21507 ;;  field           9   21[BANK0 ] struct memoryField
 21508 ;; Auto vars:     Size  Location     Type
 21509 ;;  i               1   37[BANK0 ] unsigned char 
 21510 ;;  i               1   38[BANK0 ] unsigned char 
 21511 ;;  data            6   30[BANK0 ] unsigned char [6]
 21512 ;;  opcode          1   36[BANK0 ] unsigned char 
 21513 ;; Return value:  Size  Location     Type
 21514 ;;                  1    wreg      void 
 21515 ;; Registers used:
 21516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21517 ;; Tracked objects:
 21518 ;;		On entry : 0/0
 21519 ;;		On exit  : 0/0
 21520 ;;		Unchanged: 0/0
 21521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21522 ;;      Params:         0      15       0       0       0       0       0       0       0
 21523 ;;      Locals:         0       9       0       0       0       0       0       0       0
 21524 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21525 ;;      Totals:         0      24       0       0       0       0       0       0       0
 21526 ;;Total ram usage:       24 bytes
 21527 ;; Hardware stack levels used:    1
 21528 ;; Hardware stack levels required when called:    7
 21529 ;; This function calls:
 21530 ;;		_enc424j600_setGPDATAWritePointer
 21531 ;;		_enc424j600_writeSPI
 21532 ;; This function is called by:
 21533 ;;		_ethernet_txFrameRequest
 21534 ;;		_ipv4_sendFrame
 21535 ;; This function uses a non-reentrant model
 21536 ;;
 21537                           
 21538                           	psect	text83
 21539  00476E                     __ptext83:
 21540                           	opt stack 0
 21541  00476E                     _ethernetController_writeDestinationMACAddress:
 21542                           	opt stack 21
 21543                           
 21544                           ;ENC424J600.c: 229: enc424j600_setGPDATAWritePointer(field.start);
 21545                           
 21546                           ;incstack = 0
 21547  00476E  C075  F06A         	movff	ethernetController_writeDestinationMACAddress@field,enc424j600_setGPDATAWritePoin
      +                          ter@addr
 21548  004772  C076  F06B         	movff	ethernetController_writeDestinationMACAddress@field+1,enc424j600_setGPDATAWritePo
      +                          inter@addr+1
 21549  004776  EC2E  F029         	call	_enc424j600_setGPDATAWritePointer	;wreg free
 21550                           
 21551                           ;ENC424J600.c: 230: uint8_t data[6];
 21552                           ;ENC424J600.c: 231: for (uint8_t i = 0; i < 6; i++)
 21553  00477A  0E00               	movlw	0
 21554  00477C  0100               	movlb	0	; () banked
 21555  00477E  6F86               	movwf	ethernetController_writeDestinationMACAddress@i& (0+255),b
 21556  004780                     l8543:
 21557                           
 21558                           ; BSR set to: 0
 21559  004780  0E05               	movlw	5
 21560  004782  6586               	cpfsgt	ethernetController_writeDestinationMACAddress@i& (0+255),b
 21561  004784  D001               	goto	l140
 21562  004786  D014               	goto	u9170
 21563  004788                     l140:
 21564                           
 21565                           ; BSR set to: 0
 21566                           ;ENC424J600.c: 232: data[i] = addr.address[i];
 21567                           
 21568                           ; BSR set to: 0
 21569  004788  5186               	movf	ethernetController_writeDestinationMACAddress@i& (0+255),w,b
 21570  00478A  0D01               	mullw	1
 21571  00478C  0E6F               	movlw	low ethernetController_writeDestinationMACAddress@addr
 21572  00478E  24F3               	addwf	prodl,w,c
 21573  004790  6ED9               	movwf	fsr2l,c
 21574  004792  0E00               	movlw	high ethernetController_writeDestinationMACAddress@addr
 21575  004794  20F4               	addwfc	prodh,w,c
 21576  004796  6EDA               	movwf	fsr2h,c
 21577  004798  5186               	movf	ethernetController_writeDestinationMACAddress@i& (0+255),w,b
 21578  00479A  0D01               	mullw	1
 21579  00479C  0E7E               	movlw	low ethernetController_writeDestinationMACAddress@data
 21580  00479E  24F3               	addwf	prodl,w,c
 21581  0047A0  6EE1               	movwf	fsr1l,c
 21582  0047A2  0E00               	movlw	high ethernetController_writeDestinationMACAddress@data
 21583  0047A4  20F4               	addwfc	prodh,w,c
 21584  0047A6  6EE2               	movwf	fsr1h,c
 21585  0047A8  CFDF FFE7          	movff	indf2,indf1
 21586                           
 21587                           ; BSR set to: 0
 21588  0047AC  2B86               	incf	ethernetController_writeDestinationMACAddress@i& (0+255),f,b
 21589  0047AE  D7E8               	goto	l8543
 21590  0047B0                     u9170:
 21591                           
 21592                           ; BSR set to: 0
 21593                           ;ENC424J600.c: 233: uint8_t opcode = 0x2A;
 21594                           
 21595                           ; BSR set to: 0
 21596  0047B0  0E2A               	movlw	42
 21597  0047B2  6F84               	movwf	ethernetController_writeDestinationMACAddress@opcode& (0+255),b
 21598                           
 21599                           ; BSR set to: 0
 21600                           ;ENC424J600.c: 234: PORTBbits.RB4=0;
 21601  0047B4  9881               	bcf	3969,4,c	;volatile
 21602                           
 21603                           ; BSR set to: 0
 21604                           ;ENC424J600.c: 235: enc424j600_writeSPI(&opcode);
 21605  0047B6  0E84               	movlw	low ethernetController_writeDestinationMACAddress@opcode
 21606  0047B8  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 21607  0047BA  0E00               	movlw	high ethernetController_writeDestinationMACAddress@opcode
 21608  0047BC  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 21609  0047BE  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 21610                           
 21611                           ;ENC424J600.c: 236: for (uint8_t i = 0; i < 6; i++)
 21612  0047C2  0E00               	movlw	0
 21613  0047C4  0100               	movlb	0	; () banked
 21614  0047C6  6F85               	movwf	ethernetController_writeDestinationMACAddress@i_638& (0+255),b
 21615  0047C8                     l8561:
 21616                           
 21617                           ; BSR set to: 0
 21618  0047C8  0E05               	movlw	5
 21619  0047CA  6585               	cpfsgt	ethernetController_writeDestinationMACAddress@i_638& (0+255),b
 21620  0047CC  D001               	goto	l142
 21621  0047CE  D00D               	goto	u9190
 21622  0047D0                     l142:
 21623                           
 21624                           ; BSR set to: 0
 21625                           ;ENC424J600.c: 237: enc424j600_writeSPI(&data[i]);
 21626                           
 21627                           ; BSR set to: 0
 21628  0047D0  5185               	movf	ethernetController_writeDestinationMACAddress@i_638& (0+255),w,b
 21629  0047D2  0D01               	mullw	1
 21630  0047D4  0E7E               	movlw	low ethernetController_writeDestinationMACAddress@data
 21631  0047D6  24F3               	addwf	prodl,w,c
 21632  0047D8  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 21633  0047DA  0E00               	movlw	high ethernetController_writeDestinationMACAddress@data
 21634  0047DC  20F4               	addwfc	prodh,w,c
 21635  0047DE  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 21636  0047E0  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 21637  0047E4  0100               	movlb	0	; () banked
 21638  0047E6  2B85               	incf	ethernetController_writeDestinationMACAddress@i_638& (0+255),f,b
 21639  0047E8  D7EF               	goto	l8561
 21640  0047EA                     u9190:
 21641                           
 21642                           ; BSR set to: 0
 21643                           ;ENC424J600.c: 238: PORTBbits.RB4=1;
 21644  0047EA  8881               	bsf	3969,4,c	;volatile
 21645                           
 21646                           ; BSR set to: 0
 21647  0047EC  0012               	return		;funcret
 21648  0047EE                     __end_of_ethernetController_writeDestinationMACAddress:
 21649                           	opt stack 0
 21650                           tblptru	equ	0xFF8
 21651                           tblptrh	equ	0xFF7
 21652                           tblptrl	equ	0xFF6
 21653                           tablat	equ	0xFF5
 21654                           prodh	equ	0xFF4
 21655                           prodl	equ	0xFF3
 21656                           intcon	equ	0xFF2
 21657                           intcon3	equ	0xFF0
 21658                           indf0	equ	0xFEF
 21659                           postinc0	equ	0xFEE
 21660                           plusw0	equ	0xFEB
 21661                           fsr0h	equ	0xFEA
 21662                           fsr0l	equ	0xFE9
 21663                           wreg	equ	0xFE8
 21664                           indf1	equ	0xFE7
 21665                           postinc1	equ	0xFE6
 21666                           postdec1	equ	0xFE5
 21667                           plusw1	equ	0xFE3
 21668                           fsr1h	equ	0xFE2
 21669                           fsr1l	equ	0xFE1
 21670                           indf2	equ	0xFDF
 21671                           postinc2	equ	0xFDE
 21672                           postdec2	equ	0xFDD
 21673                           plusw2	equ	0xFDB
 21674                           fsr2h	equ	0xFDA
 21675                           fsr2l	equ	0xFD9
 21676                           status	equ	0xFD8
 21677                           
 21678 ;; *************** function _ethernetController_streamToTransmitBuffer *****************
 21679 ;; Defined at:
 21680 ;;		line 208 in file "src/enc424j600/ENC424J600.c"
 21681 ;; Parameters:    Size  Location     Type
 21682 ;;  data            1    wreg     unsigned char 
 21683 ;;  field           9   15[BANK0 ] struct memoryField
 21684 ;; Auto vars:     Size  Location     Type
 21685 ;;  data            1   28[BANK0 ] unsigned char 
 21686 ;;  opcode          1   29[BANK0 ] unsigned char 
 21687 ;; Return value:  Size  Location     Type
 21688 ;;                  1    wreg      void 
 21689 ;; Registers used:
 21690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21691 ;; Tracked objects:
 21692 ;;		On entry : 0/0
 21693 ;;		On exit  : 0/0
 21694 ;;		Unchanged: 0/0
 21695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21696 ;;      Params:         0       9       0       0       0       0       0       0       0
 21697 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21698 ;;      Temps:          0       4       0       0       0       0       0       0       0
 21699 ;;      Totals:         0      15       0       0       0       0       0       0       0
 21700 ;;Total ram usage:       15 bytes
 21701 ;; Hardware stack levels used:    1
 21702 ;; Hardware stack levels required when called:    7
 21703 ;; This function calls:
 21704 ;;		_enc424j600_setGPDATAWritePointer
 21705 ;;		_enc424j600_writeSPI
 21706 ;; This function is called by:
 21707 ;;		_arp_send
 21708 ;;		_ipv4_streamToTransmissionBuffer
 21709 ;; This function uses a non-reentrant model
 21710 ;;
 21711                           
 21712                           	psect	text84
 21713  0048E6                     __ptext84:
 21714                           	opt stack 0
 21715  0048E6                     _ethernetController_streamToTransmitBuffer:
 21716                           	opt stack 22
 21717                           
 21718                           ; BSR set to: 0
 21719                           ;incstack = 0
 21720                           ;ethernetController_streamToTransmitBuffer@data stored from wreg
 21721  0048E6  0100               	movlb	0	; () banked
 21722  0048E8  6F7C               	movwf	ethernetController_streamToTransmitBuffer@data& (0+255),b
 21723                           
 21724                           ;ENC424J600.c: 209: uint8_t opcode;
 21725                           ;ENC424J600.c: 210: uint16_t static pointer = 0;
 21726                           ;ENC424J600.c: 211: if (pointer == 0) {
 21727  0048EA  503E               	movf	ethernetController_streamToTransmitBuffer@pointer,w,c
 21728  0048EC  103F               	iorwf	ethernetController_streamToTransmitBuffer@pointer+1,w,c
 21729  0048EE  A4D8               	btfss	status,2,c
 21730  0048F0  D010               	goto	l134
 21731                           
 21732                           ;ENC424J600.c: 212: enc424j600_setGPDATAWritePointer(field.start);
 21733  0048F2  C06F  F06A         	movff	ethernetController_streamToTransmitBuffer@field,enc424j600_setGPDATAWritePointer@
      +                          addr
 21734  0048F6  C070  F06B         	movff	ethernetController_streamToTransmitBuffer@field+1,enc424j600_setGPDATAWritePointe
      +                          r@addr+1
 21735  0048FA  EC2E  F029         	call	_enc424j600_setGPDATAWritePointer	;wreg free
 21736                           
 21737                           ;ENC424J600.c: 213: opcode = 0x2A;
 21738  0048FE  0E2A               	movlw	42
 21739  004900  0100               	movlb	0	; () banked
 21740  004902  6F7D               	movwf	ethernetController_streamToTransmitBuffer@opcode& (0+255),b
 21741                           
 21742                           ; BSR set to: 0
 21743                           ;ENC424J600.c: 214: PORTBbits.RB4=0;
 21744  004904  9881               	bcf	3969,4,c	;volatile
 21745                           
 21746                           ; BSR set to: 0
 21747                           ;ENC424J600.c: 215: enc424j600_writeSPI(&opcode);
 21748  004906  0E7D               	movlw	low ethernetController_streamToTransmitBuffer@opcode
 21749  004908  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 21750  00490A  0E00               	movlw	high ethernetController_streamToTransmitBuffer@opcode
 21751  00490C  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 21752  00490E  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 21753  004912                     l134:
 21754                           
 21755                           ;ENC424J600.c: 216: }
 21756                           ;ENC424J600.c: 218: enc424j600_writeSPI(&data);
 21757  004912  0E7C               	movlw	low ethernetController_streamToTransmitBuffer@data
 21758  004914  0100               	movlb	0	; () banked
 21759  004916  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 21760  004918  0E00               	movlw	high ethernetController_streamToTransmitBuffer@data
 21761  00491A  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 21762  00491C  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 21763                           
 21764                           ;ENC424J600.c: 220: if (pointer == field.length - 1) {
 21765  004920  0EFF               	movlw	255
 21766  004922  0100               	movlb	0	; () banked
 21767  004924  6F78               	movwf	??_ethernetController_streamToTransmitBuffer& (0+255),b
 21768  004926  0EFF               	movlw	255
 21769  004928  6F79               	movwf	(??_ethernetController_streamToTransmitBuffer+1)& (0+255),b
 21770  00492A  EE20  F073         	lfsr	2,ethernetController_streamToTransmitBuffer@field+4
 21771  00492E  CFDE F07A          	movff	postinc2,??_ethernetController_streamToTransmitBuffer+2
 21772  004932  CFDD F07B          	movff	postdec2,??_ethernetController_streamToTransmitBuffer+3
 21773  004936  5178               	movf	??_ethernetController_streamToTransmitBuffer& (0+255),w,b
 21774  004938  277A               	addwf	(??_ethernetController_streamToTransmitBuffer+2)& (0+255),f,b
 21775  00493A  5179               	movf	(??_ethernetController_streamToTransmitBuffer+1)& (0+255),w,b
 21776  00493C  237B               	addwfc	(??_ethernetController_streamToTransmitBuffer+3)& (0+255),f,b
 21777  00493E  503E               	movf	ethernetController_streamToTransmitBuffer@pointer,w,c
 21778  004940  197A               	xorwf	(??_ethernetController_streamToTransmitBuffer+2)& (0+255),w,b
 21779  004942  E10A               	bnz	l8821
 21780  004944  503F               	movf	ethernetController_streamToTransmitBuffer@pointer+1,w,c
 21781  004946  197B               	xorwf	(??_ethernetController_streamToTransmitBuffer+3)& (0+255),w,b
 21782  004948  A4D8               	btfss	status,2,c
 21783  00494A  D006               	goto	l135
 21784                           
 21785                           ; BSR set to: 0
 21786                           ;ENC424J600.c: 221: PORTBbits.RB4=1;
 21787  00494C  8881               	bsf	3969,4,c	;volatile
 21788                           
 21789                           ; BSR set to: 0
 21790                           ;ENC424J600.c: 222: pointer = 0;
 21791  00494E  0E00               	movlw	0
 21792  004950  6E3F               	movwf	ethernetController_streamToTransmitBuffer@pointer+1,c
 21793  004952  0E00               	movlw	0
 21794  004954  6E3E               	movwf	ethernetController_streamToTransmitBuffer@pointer,c
 21795                           
 21796                           ;ENC424J600.c: 223: } else {
 21797  004956  0012               	return	
 21798  004958                     l135:
 21799  004958                     l8821:
 21800                           
 21801                           ; BSR set to: 0
 21802                           ;ENC424J600.c: 224: pointer++;
 21803  004958  4A3E               	infsnz	ethernetController_streamToTransmitBuffer@pointer,f,c
 21804  00495A  2A3F               	incf	ethernetController_streamToTransmitBuffer@pointer+1,f,c
 21805  00495C  0012               	return	
 21806  00495E                     __end_of_ethernetController_streamToTransmitBuffer:
 21807                           	opt stack 0
 21808                           tblptru	equ	0xFF8
 21809                           tblptrh	equ	0xFF7
 21810                           tblptrl	equ	0xFF6
 21811                           tablat	equ	0xFF5
 21812                           prodh	equ	0xFF4
 21813                           prodl	equ	0xFF3
 21814                           intcon	equ	0xFF2
 21815                           intcon3	equ	0xFF0
 21816                           indf0	equ	0xFEF
 21817                           postinc0	equ	0xFEE
 21818                           plusw0	equ	0xFEB
 21819                           fsr0h	equ	0xFEA
 21820                           fsr0l	equ	0xFE9
 21821                           wreg	equ	0xFE8
 21822                           indf1	equ	0xFE7
 21823                           postinc1	equ	0xFE6
 21824                           postdec1	equ	0xFE5
 21825                           plusw1	equ	0xFE3
 21826                           fsr1h	equ	0xFE2
 21827                           fsr1l	equ	0xFE1
 21828                           indf2	equ	0xFDF
 21829                           postinc2	equ	0xFDE
 21830                           postdec2	equ	0xFDD
 21831                           plusw2	equ	0xFDB
 21832                           fsr2h	equ	0xFDA
 21833                           fsr2l	equ	0xFD9
 21834                           status	equ	0xFD8
 21835                           
 21836 ;; *************** function _enc424j600_setGPDATAWritePointer *****************
 21837 ;; Defined at:
 21838 ;;		line 609 in file "src/enc424j600/ENC424J600.c"
 21839 ;; Parameters:    Size  Location     Type
 21840 ;;  addr            2   10[BANK0 ] unsigned int 
 21841 ;; Auto vars:     Size  Location     Type
 21842 ;;  highByte        1   14[BANK0 ] unsigned char 
 21843 ;;  lowByte         1   13[BANK0 ] unsigned char 
 21844 ;;  opcode          1   12[BANK0 ] unsigned char 
 21845 ;; Return value:  Size  Location     Type
 21846 ;;                  1    wreg      void 
 21847 ;; Registers used:
 21848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21849 ;; Tracked objects:
 21850 ;;		On entry : 0/0
 21851 ;;		On exit  : 0/0
 21852 ;;		Unchanged: 0/0
 21853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21854 ;;      Params:         0       2       0       0       0       0       0       0       0
 21855 ;;      Locals:         0       3       0       0       0       0       0       0       0
 21856 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21857 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21858 ;;Total ram usage:        5 bytes
 21859 ;; Hardware stack levels used:    1
 21860 ;; Hardware stack levels required when called:    6
 21861 ;; This function calls:
 21862 ;;		_enc424j600_writeSPI
 21863 ;; This function is called by:
 21864 ;;		_ethernetController_streamToTransmitBuffer
 21865 ;;		_ethernetController_writeDestinationMACAddress
 21866 ;;		_ethernetController_writeEtherTypeFieldToBuffer
 21867 ;; This function uses a non-reentrant model
 21868 ;;
 21869                           
 21870                           	psect	text85
 21871  00525C                     __ptext85:
 21872                           	opt stack 0
 21873  00525C                     _enc424j600_setGPDATAWritePointer:
 21874                           	opt stack 21
 21875                           
 21876                           ;ENC424J600.c: 610: uint8_t opcode = 0x6C;
 21877                           
 21878                           ; BSR set to: 0
 21879                           ;incstack = 0
 21880  00525C  0E6C               	movlw	108
 21881  00525E  0100               	movlb	0	; () banked
 21882  005260  6F6C               	movwf	enc424j600_setGPDATAWritePointer@opcode& (0+255),b
 21883                           
 21884                           ; BSR set to: 0
 21885                           ;ENC424J600.c: 611: uint8_t lowByte = addr & 0x00ff;
 21886  005262  C06A  F06D         	movff	enc424j600_setGPDATAWritePointer@addr,enc424j600_setGPDATAWritePointer@lowByte
 21887                           
 21888                           ;ENC424J600.c: 612: uint8_t highByte = (addr & 0xff00) >> 8;
 21889  005266  516B               	movf	(enc424j600_setGPDATAWritePointer@addr+1)& (0+255),w,b
 21890  005268  6F6E               	movwf	enc424j600_setGPDATAWritePointer@highByte& (0+255),b
 21891                           
 21892                           ; BSR set to: 0
 21893                           ;ENC424J600.c: 613: PORTBbits.RB4=0;
 21894  00526A  9881               	bcf	3969,4,c	;volatile
 21895                           
 21896                           ; BSR set to: 0
 21897                           ;ENC424J600.c: 614: enc424j600_writeSPI(&opcode);
 21898  00526C  0E6C               	movlw	low enc424j600_setGPDATAWritePointer@opcode
 21899  00526E  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 21900  005270  0E00               	movlw	high enc424j600_setGPDATAWritePointer@opcode
 21901  005272  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 21902  005274  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 21903                           
 21904                           ;ENC424J600.c: 615: enc424j600_writeSPI(&lowByte);
 21905  005278  0E6D               	movlw	low enc424j600_setGPDATAWritePointer@lowByte
 21906  00527A  0100               	movlb	0	; () banked
 21907  00527C  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 21908  00527E  0E00               	movlw	high enc424j600_setGPDATAWritePointer@lowByte
 21909  005280  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 21910  005282  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 21911                           
 21912                           ;ENC424J600.c: 616: enc424j600_writeSPI(&highByte);
 21913  005286  0E6E               	movlw	low enc424j600_setGPDATAWritePointer@highByte
 21914  005288  0100               	movlb	0	; () banked
 21915  00528A  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 21916  00528C  0E00               	movlw	high enc424j600_setGPDATAWritePointer@highByte
 21917  00528E  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 21918  005290  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 21919                           
 21920                           ;ENC424J600.c: 617: PORTBbits.RB4=1;
 21921  005294  8881               	bsf	3969,4,c	;volatile
 21922  005296  0012               	return		;funcret
 21923  005298                     __end_of_enc424j600_setGPDATAWritePointer:
 21924                           	opt stack 0
 21925                           tblptru	equ	0xFF8
 21926                           tblptrh	equ	0xFF7
 21927                           tblptrl	equ	0xFF6
 21928                           tablat	equ	0xFF5
 21929                           prodh	equ	0xFF4
 21930                           prodl	equ	0xFF3
 21931                           intcon	equ	0xFF2
 21932                           intcon3	equ	0xFF0
 21933                           indf0	equ	0xFEF
 21934                           postinc0	equ	0xFEE
 21935                           plusw0	equ	0xFEB
 21936                           fsr0h	equ	0xFEA
 21937                           fsr0l	equ	0xFE9
 21938                           wreg	equ	0xFE8
 21939                           indf1	equ	0xFE7
 21940                           postinc1	equ	0xFE6
 21941                           postdec1	equ	0xFE5
 21942                           plusw1	equ	0xFE3
 21943                           fsr1h	equ	0xFE2
 21944                           fsr1l	equ	0xFE1
 21945                           indf2	equ	0xFDF
 21946                           postinc2	equ	0xFDE
 21947                           postdec2	equ	0xFDD
 21948                           plusw2	equ	0xFDB
 21949                           fsr2h	equ	0xFDA
 21950                           fsr2l	equ	0xFD9
 21951                           status	equ	0xFD8
 21952                           
 21953 ;; *************** function _ethernetController_sendPacket *****************
 21954 ;; Defined at:
 21955 ;;		line 201 in file "src/enc424j600/ENC424J600.c"
 21956 ;; Parameters:    Size  Location     Type
 21957 ;;  field           9   18[BANK0 ] struct memoryField
 21958 ;; Auto vars:     Size  Location     Type
 21959 ;;		None
 21960 ;; Return value:  Size  Location     Type
 21961 ;;                  1    wreg      void 
 21962 ;; Registers used:
 21963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21964 ;; Tracked objects:
 21965 ;;		On entry : 0/0
 21966 ;;		On exit  : 0/0
 21967 ;;		Unchanged: 0/0
 21968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21969 ;;      Params:         0       9       0       0       0       0       0       0       0
 21970 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21971 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21972 ;;      Totals:         0       9       0       0       0       0       0       0       0
 21973 ;;Total ram usage:        9 bytes
 21974 ;; Hardware stack levels used:    1
 21975 ;; Hardware stack levels required when called:    8
 21976 ;; This function calls:
 21977 ;;		_enc424j600_setTXLength
 21978 ;;		_enc424j600_setTXStartAddress
 21979 ;;		_enc424j600_writeSingleByte
 21980 ;;		_memory_txFrameClear
 21981 ;; This function is called by:
 21982 ;;		_arp_send
 21983 ;;		_ipv4_sendFrame
 21984 ;; This function uses a non-reentrant model
 21985 ;;
 21986                           
 21987                           	psect	text86
 21988  005596                     __ptext86:
 21989                           	opt stack 0
 21990  005596                     _ethernetController_sendPacket:
 21991                           	opt stack 20
 21992                           
 21993                           ;ENC424J600.c: 202: enc424j600_setTXStartAddress(field.start);
 21994                           
 21995                           ;incstack = 0
 21996  005596  C072  F06E         	movff	ethernetController_sendPacket@field,enc424j600_setTXStartAddress@addr
 21997  00559A  C073  F06F         	movff	ethernetController_sendPacket@field+1,enc424j600_setTXStartAddress@addr+1
 21998  00559E  EC4F  F02A         	call	_enc424j600_setTXStartAddress	;wreg free
 21999                           
 22000                           ;ENC424J600.c: 203: enc424j600_setTXLength(field.length);
 22001  0055A2  C076  F06E         	movff	ethernetController_sendPacket@field+4,enc424j600_setTXLength@len
 22002  0055A6  C077  F06F         	movff	ethernetController_sendPacket@field+5,enc424j600_setTXLength@len+1
 22003  0055AA  EC64  F02A         	call	_enc424j600_setTXLength	;wreg free
 22004                           
 22005                           ;ENC424J600.c: 204: enc424j600_writeSingleByte(0b11010100);
 22006  0055AE  0ED4               	movlw	212
 22007  0055B0  ECAA  F02B         	call	_enc424j600_writeSingleByte
 22008                           
 22009                           ;ENC424J600.c: 205: memory_txFrameClear(field.index);
 22010  0055B4  0100               	movlb	0	; () banked
 22011  0055B6  517A               	movf	(ethernetController_sendPacket@field+8)& (0+255),w,b
 22012  0055B8  EC2C  F02B         	call	_memory_txFrameClear
 22013  0055BC  0012               	return		;funcret
 22014  0055BE                     __end_of_ethernetController_sendPacket:
 22015                           	opt stack 0
 22016                           tblptru	equ	0xFF8
 22017                           tblptrh	equ	0xFF7
 22018                           tblptrl	equ	0xFF6
 22019                           tablat	equ	0xFF5
 22020                           prodh	equ	0xFF4
 22021                           prodl	equ	0xFF3
 22022                           intcon	equ	0xFF2
 22023                           intcon3	equ	0xFF0
 22024                           indf0	equ	0xFEF
 22025                           postinc0	equ	0xFEE
 22026                           plusw0	equ	0xFEB
 22027                           fsr0h	equ	0xFEA
 22028                           fsr0l	equ	0xFE9
 22029                           wreg	equ	0xFE8
 22030                           indf1	equ	0xFE7
 22031                           postinc1	equ	0xFE6
 22032                           postdec1	equ	0xFE5
 22033                           plusw1	equ	0xFE3
 22034                           fsr1h	equ	0xFE2
 22035                           fsr1l	equ	0xFE1
 22036                           indf2	equ	0xFDF
 22037                           postinc2	equ	0xFDE
 22038                           postdec2	equ	0xFDD
 22039                           plusw2	equ	0xFDB
 22040                           fsr2h	equ	0xFDA
 22041                           fsr2l	equ	0xFD9
 22042                           status	equ	0xFD8
 22043                           
 22044 ;; *************** function _memory_txFrameClear *****************
 22045 ;; Defined at:
 22046 ;;		line 221 in file "src/mem/memoryController.c"
 22047 ;; Parameters:    Size  Location     Type
 22048 ;;  index           1    wreg     unsigned char 
 22049 ;; Auto vars:     Size  Location     Type
 22050 ;;  index           1    0[BANK0 ] unsigned char 
 22051 ;; Return value:  Size  Location     Type
 22052 ;;                  1    wreg      void 
 22053 ;; Registers used:
 22054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22055 ;; Tracked objects:
 22056 ;;		On entry : 0/0
 22057 ;;		On exit  : 0/0
 22058 ;;		Unchanged: 0/0
 22059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22060 ;;      Params:         0       0       0       0       0       0       0       0       0
 22061 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22062 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22063 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22064 ;;Total ram usage:        1 bytes
 22065 ;; Hardware stack levels used:    1
 22066 ;; Hardware stack levels required when called:    4
 22067 ;; This function calls:
 22068 ;;		Nothing
 22069 ;; This function is called by:
 22070 ;;		_ethernetController_sendPacket
 22071 ;; This function uses a non-reentrant model
 22072 ;;
 22073                           
 22074                           	psect	text87
 22075  005658                     __ptext87:
 22076                           	opt stack 0
 22077  005658                     _memory_txFrameClear:
 22078                           	opt stack 23
 22079                           
 22080                           ;incstack = 0
 22081                           ;memory_txFrameClear@index stored from wreg
 22082  005658  0100               	movlb	0	; () banked
 22083  00565A  6F60               	movwf	memory_txFrameClear@index& (0+255),b
 22084                           
 22085                           ;memoryController.c: 222: occupiedMemory[index].fIsAssigned = 0;
 22086  00565C  0100               	movlb	0	; () banked
 22087  00565E  5160               	movf	memory_txFrameClear@index& (0+255),w,b
 22088  005660  0D09               	mullw	9
 22089  005662  0E06               	movlw	6
 22090  005664  26F3               	addwf	prodl,f,c
 22091  005666  0E00               	movlw	0
 22092  005668  22F4               	addwfc	prodh,f,c
 22093  00566A  0E00               	movlw	low _occupiedMemory
 22094  00566C  24F3               	addwf	prodl,w,c
 22095  00566E  6ED9               	movwf	fsr2l,c
 22096  005670  0E02               	movlw	high _occupiedMemory
 22097  005672  20F4               	addwfc	prodh,w,c
 22098  005674  6EDA               	movwf	fsr2h,c
 22099  005676  0E00               	movlw	0
 22100  005678  6EDF               	movwf	indf2,c
 22101                           
 22102                           ; BSR set to: 0
 22103  00567A  0012               	return		;funcret
 22104  00567C                     __end_of_memory_txFrameClear:
 22105                           	opt stack 0
 22106                           tblptru	equ	0xFF8
 22107                           tblptrh	equ	0xFF7
 22108                           tblptrl	equ	0xFF6
 22109                           tablat	equ	0xFF5
 22110                           prodh	equ	0xFF4
 22111                           prodl	equ	0xFF3
 22112                           intcon	equ	0xFF2
 22113                           intcon3	equ	0xFF0
 22114                           indf0	equ	0xFEF
 22115                           postinc0	equ	0xFEE
 22116                           plusw0	equ	0xFEB
 22117                           fsr0h	equ	0xFEA
 22118                           fsr0l	equ	0xFE9
 22119                           wreg	equ	0xFE8
 22120                           indf1	equ	0xFE7
 22121                           postinc1	equ	0xFE6
 22122                           postdec1	equ	0xFE5
 22123                           plusw1	equ	0xFE3
 22124                           fsr1h	equ	0xFE2
 22125                           fsr1l	equ	0xFE1
 22126                           indf2	equ	0xFDF
 22127                           postinc2	equ	0xFDE
 22128                           postdec2	equ	0xFDD
 22129                           plusw2	equ	0xFDB
 22130                           fsr2h	equ	0xFDA
 22131                           fsr2l	equ	0xFD9
 22132                           status	equ	0xFD8
 22133                           
 22134 ;; *************** function _enc424j600_setTXStartAddress *****************
 22135 ;; Defined at:
 22136 ;;		line 602 in file "src/enc424j600/ENC424J600.c"
 22137 ;; Parameters:    Size  Location     Type
 22138 ;;  addr            2   14[BANK0 ] unsigned int 
 22139 ;; Auto vars:     Size  Location     Type
 22140 ;;  highByte        1   17[BANK0 ] unsigned char 
 22141 ;;  lowByte         1   16[BANK0 ] unsigned char 
 22142 ;; Return value:  Size  Location     Type
 22143 ;;                  1    wreg      void 
 22144 ;; Registers used:
 22145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22146 ;; Tracked objects:
 22147 ;;		On entry : 0/0
 22148 ;;		On exit  : 0/0
 22149 ;;		Unchanged: 0/0
 22150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22151 ;;      Params:         0       2       0       0       0       0       0       0       0
 22152 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22153 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22154 ;;      Totals:         0       4       0       0       0       0       0       0       0
 22155 ;;Total ram usage:        4 bytes
 22156 ;; Hardware stack levels used:    1
 22157 ;; Hardware stack levels required when called:    7
 22158 ;; This function calls:
 22159 ;;		_enc424j600_writeControlRegisterUnbanked
 22160 ;; This function is called by:
 22161 ;;		_ethernetController_sendPacket
 22162 ;; This function uses a non-reentrant model
 22163 ;;
 22164                           
 22165                           	psect	text88
 22166  00549E                     __ptext88:
 22167                           	opt stack 0
 22168  00549E                     _enc424j600_setTXStartAddress:
 22169                           	opt stack 20
 22170                           
 22171                           ;ENC424J600.c: 603: uint8_t lowByte = addr & 0xff;
 22172                           
 22173                           ; BSR set to: 0
 22174                           ;incstack = 0
 22175  00549E  C06E  F070         	movff	enc424j600_setTXStartAddress@addr,enc424j600_setTXStartAddress@lowByte
 22176                           
 22177                           ;ENC424J600.c: 604: uint8_t highByte = (addr & 0xff00) >> 8;
 22178  0054A2  0100               	movlb	0	; () banked
 22179  0054A4  516F               	movf	(enc424j600_setTXStartAddress@addr+1)& (0+255),w,b
 22180  0054A6  6F71               	movwf	enc424j600_setTXStartAddress@highByte& (0+255),b
 22181                           
 22182                           ; BSR set to: 0
 22183                           ;ENC424J600.c: 605: enc424j600_writeControlRegisterUnbanked(0x00 + 0x00, &lowByte);
 22184  0054A8  0E70               	movlw	low enc424j600_setTXStartAddress@lowByte
 22185  0054AA  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 22186  0054AC  0E00               	movlw	high enc424j600_setTXStartAddress@lowByte
 22187  0054AE  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 22188  0054B0  0E00               	movlw	0
 22189  0054B2  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 22190                           
 22191                           ;ENC424J600.c: 606: enc424j600_writeControlRegisterUnbanked(0x01 + 0x00, &highByte);
 22192  0054B6  0E71               	movlw	low enc424j600_setTXStartAddress@highByte
 22193  0054B8  0100               	movlb	0	; () banked
 22194  0054BA  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 22195  0054BC  0E00               	movlw	high enc424j600_setTXStartAddress@highByte
 22196  0054BE  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 22197  0054C0  0E01               	movlw	1
 22198  0054C2  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 22199  0054C6  0012               	return		;funcret
 22200  0054C8                     __end_of_enc424j600_setTXStartAddress:
 22201                           	opt stack 0
 22202                           tblptru	equ	0xFF8
 22203                           tblptrh	equ	0xFF7
 22204                           tblptrl	equ	0xFF6
 22205                           tablat	equ	0xFF5
 22206                           prodh	equ	0xFF4
 22207                           prodl	equ	0xFF3
 22208                           intcon	equ	0xFF2
 22209                           intcon3	equ	0xFF0
 22210                           indf0	equ	0xFEF
 22211                           postinc0	equ	0xFEE
 22212                           plusw0	equ	0xFEB
 22213                           fsr0h	equ	0xFEA
 22214                           fsr0l	equ	0xFE9
 22215                           wreg	equ	0xFE8
 22216                           indf1	equ	0xFE7
 22217                           postinc1	equ	0xFE6
 22218                           postdec1	equ	0xFE5
 22219                           plusw1	equ	0xFE3
 22220                           fsr1h	equ	0xFE2
 22221                           fsr1l	equ	0xFE1
 22222                           indf2	equ	0xFDF
 22223                           postinc2	equ	0xFDE
 22224                           postdec2	equ	0xFDD
 22225                           plusw2	equ	0xFDB
 22226                           fsr2h	equ	0xFDA
 22227                           fsr2l	equ	0xFD9
 22228                           status	equ	0xFD8
 22229                           
 22230 ;; *************** function _enc424j600_setTXLength *****************
 22231 ;; Defined at:
 22232 ;;		line 577 in file "src/enc424j600/ENC424J600.c"
 22233 ;; Parameters:    Size  Location     Type
 22234 ;;  len             2   14[BANK0 ] unsigned int 
 22235 ;; Auto vars:     Size  Location     Type
 22236 ;;  highByte        1   17[BANK0 ] unsigned char 
 22237 ;;  lowByte         1   16[BANK0 ] unsigned char 
 22238 ;; Return value:  Size  Location     Type
 22239 ;;                  1    wreg      void 
 22240 ;; Registers used:
 22241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22242 ;; Tracked objects:
 22243 ;;		On entry : 0/0
 22244 ;;		On exit  : 0/0
 22245 ;;		Unchanged: 0/0
 22246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22247 ;;      Params:         0       2       0       0       0       0       0       0       0
 22248 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22249 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22250 ;;      Totals:         0       4       0       0       0       0       0       0       0
 22251 ;;Total ram usage:        4 bytes
 22252 ;; Hardware stack levels used:    1
 22253 ;; Hardware stack levels required when called:    7
 22254 ;; This function calls:
 22255 ;;		_enc424j600_writeControlRegisterUnbanked
 22256 ;; This function is called by:
 22257 ;;		_ethernetController_sendPacket
 22258 ;; This function uses a non-reentrant model
 22259 ;;
 22260                           
 22261                           	psect	text89
 22262  0054C8                     __ptext89:
 22263                           	opt stack 0
 22264  0054C8                     _enc424j600_setTXLength:
 22265                           	opt stack 20
 22266                           
 22267                           ;ENC424J600.c: 578: uint8_t lowByte = len & 0x00ff;
 22268                           
 22269                           ;incstack = 0
 22270  0054C8  C06E  F070         	movff	enc424j600_setTXLength@len,enc424j600_setTXLength@lowByte
 22271                           
 22272                           ;ENC424J600.c: 579: uint8_t highByte = len >> 8;
 22273  0054CC  0100               	movlb	0	; () banked
 22274  0054CE  516F               	movf	(enc424j600_setTXLength@len+1)& (0+255),w,b
 22275  0054D0  6F71               	movwf	enc424j600_setTXLength@highByte& (0+255),b
 22276                           
 22277                           ; BSR set to: 0
 22278                           ;ENC424J600.c: 580: enc424j600_writeControlRegisterUnbanked(0x02 + 0x00, &lowByte);
 22279  0054D2  0E70               	movlw	low enc424j600_setTXLength@lowByte
 22280  0054D4  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 22281  0054D6  0E00               	movlw	high enc424j600_setTXLength@lowByte
 22282  0054D8  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 22283  0054DA  0E02               	movlw	2
 22284  0054DC  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 22285                           
 22286                           ;ENC424J600.c: 581: enc424j600_writeControlRegisterUnbanked(0x03 + 0x00, &highByte);
 22287  0054E0  0E71               	movlw	low enc424j600_setTXLength@highByte
 22288  0054E2  0100               	movlb	0	; () banked
 22289  0054E4  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 22290  0054E6  0E00               	movlw	high enc424j600_setTXLength@highByte
 22291  0054E8  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 22292  0054EA  0E03               	movlw	3
 22293  0054EC  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 22294  0054F0  0012               	return		;funcret
 22295  0054F2                     __end_of_enc424j600_setTXLength:
 22296                           	opt stack 0
 22297                           tblptru	equ	0xFF8
 22298                           tblptrh	equ	0xFF7
 22299                           tblptrl	equ	0xFF6
 22300                           tablat	equ	0xFF5
 22301                           prodh	equ	0xFF4
 22302                           prodl	equ	0xFF3
 22303                           intcon	equ	0xFF2
 22304                           intcon3	equ	0xFF0
 22305                           indf0	equ	0xFEF
 22306                           postinc0	equ	0xFEE
 22307                           plusw0	equ	0xFEB
 22308                           fsr0h	equ	0xFEA
 22309                           fsr0l	equ	0xFE9
 22310                           wreg	equ	0xFE8
 22311                           indf1	equ	0xFE7
 22312                           postinc1	equ	0xFE6
 22313                           postdec1	equ	0xFE5
 22314                           plusw1	equ	0xFE3
 22315                           fsr1h	equ	0xFE2
 22316                           fsr1l	equ	0xFE1
 22317                           indf2	equ	0xFDF
 22318                           postinc2	equ	0xFDE
 22319                           postdec2	equ	0xFDD
 22320                           plusw2	equ	0xFDB
 22321                           fsr2h	equ	0xFDA
 22322                           fsr2l	equ	0xFD9
 22323                           status	equ	0xFD8
 22324                           
 22325 ;; *************** function _ethernetController_getSourceMACAddress *****************
 22326 ;; Defined at:
 22327 ;;		line 268 in file "src/enc424j600/ENC424J600.c"
 22328 ;; Parameters:    Size  Location     Type
 22329 ;;  field           9   15[BANK0 ] struct memoryField
 22330 ;; Auto vars:     Size  Location     Type
 22331 ;;  temp            1   31[BANK0 ] unsigned char 
 22332 ;;  i               1   32[BANK0 ] unsigned char 
 22333 ;;  sourceAddres    6   25[BANK0 ] struct macaddress
 22334 ;;  opcode          1   24[BANK0 ] unsigned char 
 22335 ;; Return value:  Size  Location     Type
 22336 ;;                  6   15[BANK0 ] struct macaddress
 22337 ;; Registers used:
 22338 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22339 ;; Tracked objects:
 22340 ;;		On entry : 0/0
 22341 ;;		On exit  : 0/0
 22342 ;;		Unchanged: 0/0
 22343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22344 ;;      Params:         0       9       0       0       0       0       0       0       0
 22345 ;;      Locals:         0       9       0       0       0       0       0       0       0
 22346 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22347 ;;      Totals:         0      18       0       0       0       0       0       0       0
 22348 ;;Total ram usage:       18 bytes
 22349 ;; Hardware stack levels used:    1
 22350 ;; Hardware stack levels required when called:    7
 22351 ;; This function calls:
 22352 ;;		_enc424j600_readSPI
 22353 ;;		_enc424j600_setERXDATAReadPointer
 22354 ;;		_enc424j600_writeSPI
 22355 ;; This function is called by:
 22356 ;;		_arp_send
 22357 ;; This function uses a non-reentrant model
 22358 ;;
 22359                           
 22360                           	psect	text90
 22361  004B9C                     __ptext90:
 22362                           	opt stack 0
 22363  004B9C                     _ethernetController_getSourceMACAddress:
 22364                           	opt stack 19
 22365                           
 22366                           ;ENC424J600.c: 269: macaddress_t sourceAddress;
 22367                           ;ENC424J600.c: 270: enc424j600_setERXDATAReadPointer(field.start + 14);
 22368                           
 22369                           ;incstack = 0
 22370  004B9C  0E0E               	movlw	14
 22371  004B9E  0100               	movlb	0	; () banked
 22372  004BA0  256F               	addwf	ethernetController_getSourceMACAddress@field& (0+255),w,b
 22373  004BA2  6F6A               	movwf	enc424j600_setERXDATAReadPointer@addr& (0+255),b
 22374  004BA4  0E00               	movlw	0
 22375  004BA6  2170               	addwfc	(ethernetController_getSourceMACAddress@field+1)& (0+255),w,b
 22376  004BA8  6F6B               	movwf	(enc424j600_setERXDATAReadPointer@addr+1)& (0+255),b
 22377  004BAA  EC4C  F029         	call	_enc424j600_setERXDATAReadPointer	;wreg free
 22378                           
 22379                           ;ENC424J600.c: 271: uint8_t opcode = 0x2C;
 22380  004BAE  0E2C               	movlw	44
 22381  004BB0  0100               	movlb	0	; () banked
 22382  004BB2  6F78               	movwf	ethernetController_getSourceMACAddress@opcode& (0+255),b
 22383                           
 22384                           ; BSR set to: 0
 22385                           ;ENC424J600.c: 272: PORTBbits.RB4=0;
 22386  004BB4  9881               	bcf	3969,4,c	;volatile
 22387                           
 22388                           ; BSR set to: 0
 22389                           ;ENC424J600.c: 273: enc424j600_writeSPI(&opcode);
 22390  004BB6  0E78               	movlw	low ethernetController_getSourceMACAddress@opcode
 22391  004BB8  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 22392  004BBA  0E00               	movlw	high ethernetController_getSourceMACAddress@opcode
 22393  004BBC  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 22394  004BBE  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 22395                           
 22396                           ;ENC424J600.c: 274: for (uint8_t i = 0; i < 6; i++) {
 22397  004BC2  0E00               	movlw	0
 22398  004BC4  0100               	movlb	0	; () banked
 22399  004BC6  6F80               	movwf	ethernetController_getSourceMACAddress@i& (0+255),b
 22400  004BC8                     l8831:
 22401                           
 22402                           ; BSR set to: 0
 22403  004BC8  0E05               	movlw	5
 22404  004BCA  6580               	cpfsgt	ethernetController_getSourceMACAddress@i& (0+255),b
 22405  004BCC  D001               	goto	l155
 22406  004BCE  D013               	goto	u9670
 22407  004BD0                     l155:
 22408                           
 22409                           ; BSR set to: 0
 22410                           ;ENC424J600.c: 275: uint8_t temp;
 22411                           ;ENC424J600.c: 276: enc424j600_readSPI(&temp);
 22412                           
 22413                           ; BSR set to: 0
 22414  004BD0  0E7F               	movlw	low ethernetController_getSourceMACAddress@temp
 22415  004BD2  6F60               	movwf	enc424j600_readSPI@data& (0+255),b
 22416  004BD4  0E00               	movlw	high ethernetController_getSourceMACAddress@temp
 22417  004BD6  6F61               	movwf	(enc424j600_readSPI@data+1)& (0+255),b
 22418  004BD8  EC06  F026         	call	_enc424j600_readSPI	;wreg free
 22419                           
 22420                           ;ENC424J600.c: 277: sourceAddress.address[i] = temp;
 22421  004BDC  0100               	movlb	0	; () banked
 22422  004BDE  5180               	movf	ethernetController_getSourceMACAddress@i& (0+255),w,b
 22423  004BE0  0D01               	mullw	1
 22424  004BE2  0E79               	movlw	low ethernetController_getSourceMACAddress@sourceAddress
 22425  004BE4  24F3               	addwf	prodl,w,c
 22426  004BE6  6ED9               	movwf	fsr2l,c
 22427  004BE8  0E00               	movlw	high ethernetController_getSourceMACAddress@sourceAddress
 22428  004BEA  20F4               	addwfc	prodh,w,c
 22429  004BEC  6EDA               	movwf	fsr2h,c
 22430  004BEE  C07F  FFDF         	movff	ethernetController_getSourceMACAddress@temp,indf2
 22431                           
 22432                           ; BSR set to: 0
 22433  004BF2  2B80               	incf	ethernetController_getSourceMACAddress@i& (0+255),f,b
 22434  004BF4  D7E9               	goto	l8831
 22435  004BF6                     u9670:
 22436                           
 22437                           ; BSR set to: 0
 22438                           ;ENC424J600.c: 278: }
 22439                           ;ENC424J600.c: 279: PORTBbits.RB4=1;
 22440  004BF6  8881               	bsf	3969,4,c	;volatile
 22441                           
 22442                           ; BSR set to: 0
 22443                           ;ENC424J600.c: 280: return sourceAddress;
 22444  004BF8  EE20  F079         	lfsr	2,ethernetController_getSourceMACAddress@sourceAddress
 22445  004BFC  EE00  F06F         	lfsr	0,?_ethernetController_getSourceMACAddress
 22446  004C00  0E05               	movlw	5
 22447  004C02                     u9681:
 22448  004C02  CFDB FFEB          	movff	plusw2,plusw0
 22449  004C06  06E8               	decf	wreg,f,c
 22450  004C08  E2FC               	bc	u9681
 22451  004C0A  0012               	return	
 22452  004C0C                     __end_of_ethernetController_getSourceMACAddress:
 22453                           	opt stack 0
 22454                           tblptru	equ	0xFF8
 22455                           tblptrh	equ	0xFF7
 22456                           tblptrl	equ	0xFF6
 22457                           tablat	equ	0xFF5
 22458                           prodh	equ	0xFF4
 22459                           prodl	equ	0xFF3
 22460                           intcon	equ	0xFF2
 22461                           intcon3	equ	0xFF0
 22462                           indf0	equ	0xFEF
 22463                           postinc0	equ	0xFEE
 22464                           plusw0	equ	0xFEB
 22465                           fsr0h	equ	0xFEA
 22466                           fsr0l	equ	0xFE9
 22467                           wreg	equ	0xFE8
 22468                           indf1	equ	0xFE7
 22469                           postinc1	equ	0xFE6
 22470                           postdec1	equ	0xFE5
 22471                           plusw1	equ	0xFE3
 22472                           fsr1h	equ	0xFE2
 22473                           fsr1l	equ	0xFE1
 22474                           indf2	equ	0xFDF
 22475                           postinc2	equ	0xFDE
 22476                           postdec2	equ	0xFDD
 22477                           plusw2	equ	0xFDB
 22478                           fsr2h	equ	0xFDA
 22479                           fsr2l	equ	0xFD9
 22480                           status	equ	0xFD8
 22481                           
 22482 ;; *************** function _enc424j600_setERXDATAReadPointer *****************
 22483 ;; Defined at:
 22484 ;;		line 631 in file "src/enc424j600/ENC424J600.c"
 22485 ;; Parameters:    Size  Location     Type
 22486 ;;  addr            2   10[BANK0 ] unsigned int 
 22487 ;; Auto vars:     Size  Location     Type
 22488 ;;  highByte        1   14[BANK0 ] unsigned char 
 22489 ;;  lowByte         1   13[BANK0 ] unsigned char 
 22490 ;;  opcode          1   12[BANK0 ] unsigned char 
 22491 ;; Return value:  Size  Location     Type
 22492 ;;                  1    wreg      void 
 22493 ;; Registers used:
 22494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22495 ;; Tracked objects:
 22496 ;;		On entry : 0/0
 22497 ;;		On exit  : 0/0
 22498 ;;		Unchanged: 0/0
 22499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22500 ;;      Params:         0       2       0       0       0       0       0       0       0
 22501 ;;      Locals:         0       3       0       0       0       0       0       0       0
 22502 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22503 ;;      Totals:         0       5       0       0       0       0       0       0       0
 22504 ;;Total ram usage:        5 bytes
 22505 ;; Hardware stack levels used:    1
 22506 ;; Hardware stack levels required when called:    6
 22507 ;; This function calls:
 22508 ;;		_enc424j600_writeSPI
 22509 ;; This function is called by:
 22510 ;;		_ethernetController_getSourceMACAddress
 22511 ;;		_ethernetController_getEtherTypeField
 22512 ;;		_ethernetController_getRSV
 22513 ;;		_ethernetController_updateNextPacketPointer
 22514 ;;		_ethernetController_streamFromRXBuffer
 22515 ;;		_ethernetController_getDestinationMACAddress
 22516 ;; This function uses a non-reentrant model
 22517 ;;
 22518                           
 22519                           	psect	text91
 22520  005298                     __ptext91:
 22521                           	opt stack 0
 22522  005298                     _enc424j600_setERXDATAReadPointer:
 22523                           	opt stack 19
 22524                           
 22525                           ;ENC424J600.c: 632: uint8_t opcode = 0x64;
 22526                           
 22527                           ; BSR set to: 0
 22528                           ;incstack = 0
 22529  005298  0E64               	movlw	100
 22530  00529A  0100               	movlb	0	; () banked
 22531  00529C  6F6C               	movwf	enc424j600_setERXDATAReadPointer@opcode& (0+255),b
 22532                           
 22533                           ; BSR set to: 0
 22534                           ;ENC424J600.c: 633: uint8_t lowByte = addr & 0x00ff;
 22535  00529E  C06A  F06D         	movff	enc424j600_setERXDATAReadPointer@addr,enc424j600_setERXDATAReadPointer@lowByte
 22536                           
 22537                           ;ENC424J600.c: 634: uint8_t highByte = (addr >> 8) & 0xff;
 22538  0052A2  516B               	movf	(enc424j600_setERXDATAReadPointer@addr+1)& (0+255),w,b
 22539  0052A4  6F6E               	movwf	enc424j600_setERXDATAReadPointer@highByte& (0+255),b
 22540                           
 22541                           ; BSR set to: 0
 22542                           ;ENC424J600.c: 635: PORTBbits.RB4=0;
 22543  0052A6  9881               	bcf	3969,4,c	;volatile
 22544                           
 22545                           ; BSR set to: 0
 22546                           ;ENC424J600.c: 636: enc424j600_writeSPI(&opcode);
 22547  0052A8  0E6C               	movlw	low enc424j600_setERXDATAReadPointer@opcode
 22548  0052AA  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 22549  0052AC  0E00               	movlw	high enc424j600_setERXDATAReadPointer@opcode
 22550  0052AE  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 22551  0052B0  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 22552                           
 22553                           ;ENC424J600.c: 637: enc424j600_writeSPI(&lowByte);
 22554  0052B4  0E6D               	movlw	low enc424j600_setERXDATAReadPointer@lowByte
 22555  0052B6  0100               	movlb	0	; () banked
 22556  0052B8  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 22557  0052BA  0E00               	movlw	high enc424j600_setERXDATAReadPointer@lowByte
 22558  0052BC  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 22559  0052BE  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 22560                           
 22561                           ;ENC424J600.c: 638: enc424j600_writeSPI(&highByte);
 22562  0052C2  0E6E               	movlw	low enc424j600_setERXDATAReadPointer@highByte
 22563  0052C4  0100               	movlb	0	; () banked
 22564  0052C6  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 22565  0052C8  0E00               	movlw	high enc424j600_setERXDATAReadPointer@highByte
 22566  0052CA  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 22567  0052CC  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 22568                           
 22569                           ;ENC424J600.c: 639: PORTBbits.RB4=1;
 22570  0052D0  8881               	bsf	3969,4,c	;volatile
 22571  0052D2  0012               	return		;funcret
 22572  0052D4                     __end_of_enc424j600_setERXDATAReadPointer:
 22573                           	opt stack 0
 22574                           tblptru	equ	0xFF8
 22575                           tblptrh	equ	0xFF7
 22576                           tblptrl	equ	0xFF6
 22577                           tablat	equ	0xFF5
 22578                           prodh	equ	0xFF4
 22579                           prodl	equ	0xFF3
 22580                           intcon	equ	0xFF2
 22581                           intcon3	equ	0xFF0
 22582                           indf0	equ	0xFEF
 22583                           postinc0	equ	0xFEE
 22584                           plusw0	equ	0xFEB
 22585                           fsr0h	equ	0xFEA
 22586                           fsr0l	equ	0xFE9
 22587                           wreg	equ	0xFE8
 22588                           indf1	equ	0xFE7
 22589                           postinc1	equ	0xFE6
 22590                           postdec1	equ	0xFE5
 22591                           plusw1	equ	0xFE3
 22592                           fsr1h	equ	0xFE2
 22593                           fsr1l	equ	0xFE1
 22594                           indf2	equ	0xFDF
 22595                           postinc2	equ	0xFDE
 22596                           postdec2	equ	0xFDD
 22597                           plusw2	equ	0xFDB
 22598                           fsr2h	equ	0xFDA
 22599                           fsr2l	equ	0xFD9
 22600                           status	equ	0xFD8
 22601                           
 22602 ;; *************** function _arp_checkForEntry *****************
 22603 ;; Defined at:
 22604 ;;		line 460 in file "src/stack/protocols/arp.c"
 22605 ;; Parameters:    Size  Location     Type
 22606 ;;  ip              4    7[BANK0 ] struct ipv4_address
 22607 ;;  index           2   11[BANK0 ] PTR unsigned char 
 22608 ;;		 -> ipv4_sendFrame@index(1), arp_gratuitous@index(1), arp_probe@index(1), 
 22609 ;; Auto vars:     Size  Location     Type
 22610 ;;  i               1   21[BANK0 ] unsigned char 
 22611 ;; Return value:  Size  Location     Type
 22612 ;;                  1    wreg      unsigned char 
 22613 ;; Registers used:
 22614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22615 ;; Tracked objects:
 22616 ;;		On entry : 0/0
 22617 ;;		On exit  : 0/0
 22618 ;;		Unchanged: 0/0
 22619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22620 ;;      Params:         0       6       0       0       0       0       0       0       0
 22621 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22622 ;;      Temps:          0       8       0       0       0       0       0       0       0
 22623 ;;      Totals:         0      15       0       0       0       0       0       0       0
 22624 ;;Total ram usage:       15 bytes
 22625 ;; Hardware stack levels used:    1
 22626 ;; Hardware stack levels required when called:    5
 22627 ;; This function calls:
 22628 ;;		_getMillis
 22629 ;;		_ipv4_cmp
 22630 ;; This function is called by:
 22631 ;;		_arp_probe
 22632 ;;		_arp_gratuitous
 22633 ;;		_ipv4_sendFrame
 22634 ;; This function uses a non-reentrant model
 22635 ;;
 22636                           
 22637                           	psect	text92
 22638  00418A                     __ptext92:
 22639                           	opt stack 0
 22640  00418A                     _arp_checkForEntry:
 22641                           	opt stack 23
 22642                           
 22643                           ;arp.c: 461: for (uint8_t i = 0; i < 8u; i++) {
 22644                           
 22645                           ;incstack = 0
 22646  00418A  0E00               	movlw	0
 22647  00418C  0100               	movlb	0	; () banked
 22648  00418E  6F75               	movwf	arp_checkForEntry@i& (0+255),b
 22649  004190                     l9595:
 22650                           
 22651                           ; BSR set to: 0
 22652  004190  0E07               	movlw	7
 22653  004192  6575               	cpfsgt	arp_checkForEntry@i& (0+255),b
 22654  004194  D001               	goto	l1061
 22655  004196  D050               	goto	u11260
 22656  004198                     l1061:
 22657                           
 22658                           ; BSR set to: 0
 22659                           ;arp.c: 462: if (ipv4_cmp(&arp_table[i].ip, &ip)) {
 22660                           
 22661                           ; BSR set to: 0
 22662  004198  5175               	movf	arp_checkForEntry@i& (0+255),w,b
 22663  00419A  0D0E               	mullw	14
 22664  00419C  0E00               	movlw	low _arp_table
 22665  00419E  24F3               	addwf	prodl,w,c
 22666  0041A0  6F60               	movwf	ipv4_cmp@a& (0+255),b
 22667  0041A2  0E03               	movlw	high _arp_table
 22668  0041A4  20F4               	addwfc	prodh,w,c
 22669  0041A6  6F61               	movwf	(ipv4_cmp@a+1)& (0+255),b
 22670  0041A8  0E67               	movlw	low arp_checkForEntry@ip
 22671  0041AA  6F62               	movwf	ipv4_cmp@b& (0+255),b
 22672  0041AC  0E00               	movlw	high arp_checkForEntry@ip
 22673  0041AE  6F63               	movwf	(ipv4_cmp@b+1)& (0+255),b
 22674  0041B0  ECEF  F028         	call	_ipv4_cmp	;wreg free
 22675  0041B4  0100               	movlb	0	; () banked
 22676  0041B6  A0D8               	btfss	status,0,c
 22677  0041B8  D03D               	goto	l1064
 22678                           
 22679                           ; BSR set to: 0
 22680                           ;arp.c: 463: if (getMillis() - arp_table[i].timeCreated < 30000u) {
 22681  0041BA  5175               	movf	arp_checkForEntry@i& (0+255),w,b
 22682  0041BC  0D0E               	mullw	14
 22683  0041BE  0E0A               	movlw	10
 22684  0041C0  26F3               	addwf	prodl,f,c
 22685  0041C2  0E00               	movlw	0
 22686  0041C4  22F4               	addwfc	prodh,f,c
 22687  0041C6  0E00               	movlw	low _arp_table
 22688  0041C8  24F3               	addwf	prodl,w,c
 22689  0041CA  6ED9               	movwf	fsr2l,c
 22690  0041CC  0E03               	movlw	high _arp_table
 22691  0041CE  20F4               	addwfc	prodh,w,c
 22692  0041D0  6EDA               	movwf	fsr2h,c
 22693  0041D2  CFDE F06D          	movff	postinc2,??_arp_checkForEntry
 22694  0041D6  CFDE F06E          	movff	postinc2,??_arp_checkForEntry+1
 22695  0041DA  CFDE F06F          	movff	postinc2,??_arp_checkForEntry+2
 22696  0041DE  CFDE F070          	movff	postinc2,??_arp_checkForEntry+3
 22697  0041E2  1F6D               	comf	??_arp_checkForEntry& (0+255),f,b
 22698  0041E4  1F6E               	comf	(??_arp_checkForEntry+1)& (0+255),f,b
 22699  0041E6  1F6F               	comf	(??_arp_checkForEntry+2)& (0+255),f,b
 22700  0041E8  1F70               	comf	(??_arp_checkForEntry+3)& (0+255),f,b
 22701  0041EA  2B6D               	incf	??_arp_checkForEntry& (0+255),f,b
 22702  0041EC  0E00               	movlw	0
 22703  0041EE  236E               	addwfc	(??_arp_checkForEntry+1)& (0+255),f,b
 22704  0041F0  236F               	addwfc	(??_arp_checkForEntry+2)& (0+255),f,b
 22705  0041F2  2370               	addwfc	(??_arp_checkForEntry+3)& (0+255),f,b
 22706  0041F4  ECE5  F02B         	call	_getMillis	;wreg free
 22707  0041F8  0100               	movlb	0	; () banked
 22708  0041FA  516D               	movf	??_arp_checkForEntry& (0+255),w,b
 22709  0041FC  2560               	addwf	?_getMillis& (0+255),w,b
 22710  0041FE  6F71               	movwf	(??_arp_checkForEntry+4)& (0+255),b
 22711  004200  516E               	movf	(??_arp_checkForEntry+1)& (0+255),w,b
 22712  004202  2161               	addwfc	(?_getMillis+1)& (0+255),w,b
 22713  004204  6F72               	movwf	(??_arp_checkForEntry+5)& (0+255),b
 22714  004206  516F               	movf	(??_arp_checkForEntry+2)& (0+255),w,b
 22715  004208  2162               	addwfc	(?_getMillis+2)& (0+255),w,b
 22716  00420A  6F73               	movwf	(??_arp_checkForEntry+6)& (0+255),b
 22717  00420C  5170               	movf	(??_arp_checkForEntry+3)& (0+255),w,b
 22718  00420E  2163               	addwfc	(?_getMillis+3)& (0+255),w,b
 22719  004210  6F74               	movwf	(??_arp_checkForEntry+7)& (0+255),b
 22720  004212  5174               	movf	(??_arp_checkForEntry+7)& (0+255),w,b
 22721  004214  1173               	iorwf	(??_arp_checkForEntry+6)& (0+255),w,b
 22722  004216  E10E               	bnz	l9609
 22723  004218  0E30               	movlw	48
 22724  00421A  5D71               	subwf	(??_arp_checkForEntry+4)& (0+255),w,b
 22725  00421C  0E75               	movlw	117
 22726  00421E  5972               	subwfb	(??_arp_checkForEntry+5)& (0+255),w,b
 22727  004220  B0D8               	btfsc	status,0,c
 22728  004222  D008               	goto	l1064
 22729                           
 22730                           ; BSR set to: 0
 22731                           ;arp.c: 465: *index = i;
 22732  004224  C06B  FFD9         	movff	arp_checkForEntry@index,fsr2l
 22733  004228  C06C  FFDA         	movff	arp_checkForEntry@index+1,fsr2h
 22734  00422C  C075  FFDF         	movff	arp_checkForEntry@i,indf2
 22735                           
 22736                           ; BSR set to: 0
 22737                           ;arp.c: 466: return 1;
 22738  004230  0E01               	movlw	1
 22739                           
 22740                           ; BSR set to: 0
 22741  004232  0012               	return	
 22742  004234                     l1064:
 22743  004234                     l9609:
 22744                           
 22745                           ; BSR set to: 0
 22746  004234  2B75               	incf	arp_checkForEntry@i& (0+255),f,b
 22747  004236  D7AC               	goto	l9595
 22748  004238                     u11260:
 22749                           
 22750                           ; BSR set to: 0
 22751                           ;arp.c: 467: }
 22752                           ;arp.c: 468: }
 22753                           ;arp.c: 469: }
 22754                           ;arp.c: 470: return 0;
 22755                           
 22756                           ; BSR set to: 0
 22757  004238  0E00               	movlw	0
 22758  00423A  0012               	return	
 22759  00423C                     __end_of_arp_checkForEntry:
 22760                           	opt stack 0
 22761                           tblptru	equ	0xFF8
 22762                           tblptrh	equ	0xFF7
 22763                           tblptrl	equ	0xFF6
 22764                           tablat	equ	0xFF5
 22765                           prodh	equ	0xFF4
 22766                           prodl	equ	0xFF3
 22767                           intcon	equ	0xFF2
 22768                           intcon3	equ	0xFF0
 22769                           indf0	equ	0xFEF
 22770                           postinc0	equ	0xFEE
 22771                           plusw0	equ	0xFEB
 22772                           fsr0h	equ	0xFEA
 22773                           fsr0l	equ	0xFE9
 22774                           wreg	equ	0xFE8
 22775                           indf1	equ	0xFE7
 22776                           postinc1	equ	0xFE6
 22777                           postdec1	equ	0xFE5
 22778                           plusw1	equ	0xFE3
 22779                           fsr1h	equ	0xFE2
 22780                           fsr1l	equ	0xFE1
 22781                           indf2	equ	0xFDF
 22782                           postinc2	equ	0xFDE
 22783                           postdec2	equ	0xFDD
 22784                           plusw2	equ	0xFDB
 22785                           fsr2h	equ	0xFDA
 22786                           fsr2l	equ	0xFD9
 22787                           status	equ	0xFD8
 22788                           
 22789 ;; *************** function _ipv4_cmp *****************
 22790 ;; Defined at:
 22791 ;;		line 304 in file "src/stack/protocols/ipv4.c"
 22792 ;; Parameters:    Size  Location     Type
 22793 ;;  a               2    0[BANK0 ] PTR struct ipv4_address
 22794 ;;		 -> arp_table(112), arp_sendReply@request(32), arp_parseFromRXBuffer@arp(32), 
 22795 ;;  b               2    2[BANK0 ] PTR struct ipv4_address
 22796 ;;		 -> arp_checkForEntry@ip(4), arp_sendReply@myIP(4), arp_parseFromRXBuffer@arp(32), 
 22797 ;; Auto vars:     Size  Location     Type
 22798 ;;  i               1    6[BANK0 ] unsigned char 
 22799 ;; Return value:  Size  Location     Type
 22800 ;;		None               void
 22801 ;; Registers used:
 22802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22803 ;; Tracked objects:
 22804 ;;		On entry : 0/0
 22805 ;;		On exit  : 0/0
 22806 ;;		Unchanged: 0/0
 22807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22808 ;;      Params:         0       4       0       0       0       0       0       0       0
 22809 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22810 ;;      Temps:          0       2       0       0       0       0       0       0       0
 22811 ;;      Totals:         0       7       0       0       0       0       0       0       0
 22812 ;;Total ram usage:        7 bytes
 22813 ;; Hardware stack levels used:    1
 22814 ;; Hardware stack levels required when called:    4
 22815 ;; This function calls:
 22816 ;;		Nothing
 22817 ;; This function is called by:
 22818 ;;		_arp_parseFromRXBuffer
 22819 ;;		_arp_sendReply
 22820 ;;		_arp_checkForEntry
 22821 ;; This function uses a non-reentrant model
 22822 ;;
 22823                           
 22824                           	psect	text93
 22825  0051DE                     __ptext93:
 22826                           	opt stack 0
 22827  0051DE                     _ipv4_cmp:
 22828                           	opt stack 23
 22829                           
 22830                           ;ipv4.c: 305: for (uint8_t i = 0; i < 4; i++) {
 22831                           
 22832                           ; BSR set to: 0
 22833                           ;incstack = 0
 22834  0051DE  0E00               	movlw	0
 22835  0051E0  0100               	movlb	0	; () banked
 22836  0051E2  6F66               	movwf	ipv4_cmp@i& (0+255),b
 22837  0051E4                     l9253:
 22838                           
 22839                           ; BSR set to: 0
 22840  0051E4  0E03               	movlw	3
 22841  0051E6  6566               	cpfsgt	ipv4_cmp@i& (0+255),b
 22842  0051E8  D001               	goto	l1201
 22843  0051EA  D018               	goto	u10250
 22844  0051EC                     l1201:
 22845                           
 22846                           ; BSR set to: 0
 22847                           ;ipv4.c: 306: if (a->address[i] != b->address[i])
 22848                           
 22849                           ; BSR set to: 0
 22850  0051EC  5166               	movf	ipv4_cmp@i& (0+255),w,b
 22851  0051EE  0D01               	mullw	1
 22852  0051F0  50F3               	movf	prodl,w,c
 22853  0051F2  2562               	addwf	ipv4_cmp@b& (0+255),w,b
 22854  0051F4  6ED9               	movwf	fsr2l,c
 22855  0051F6  50F4               	movf	prodh,w,c
 22856  0051F8  2163               	addwfc	(ipv4_cmp@b+1)& (0+255),w,b
 22857  0051FA  6EDA               	movwf	fsr2h,c
 22858  0051FC  5166               	movf	ipv4_cmp@i& (0+255),w,b
 22859  0051FE  0D01               	mullw	1
 22860  005200  50F3               	movf	prodl,w,c
 22861  005202  2560               	addwf	ipv4_cmp@a& (0+255),w,b
 22862  005204  6EE1               	movwf	fsr1l,c
 22863  005206  50F4               	movf	prodh,w,c
 22864  005208  2161               	addwfc	(ipv4_cmp@a+1)& (0+255),w,b
 22865  00520A  6EE2               	movwf	fsr1h,c
 22866  00520C  50DE               	movf	postinc2,w,c
 22867  00520E  18E6               	xorwf	postinc1,w,c
 22868  005210  B4D8               	btfsc	status,2,c
 22869  005212  D002               	goto	l1203
 22870                           
 22871                           ; BSR set to: 0
 22872                           ;ipv4.c: 307: return 0;
 22873  005214  90D8               	bcf	status,0,c
 22874                           
 22875                           ; BSR set to: 0
 22876  005216  0012               	return	
 22877  005218                     l1203:
 22878                           
 22879                           ; BSR set to: 0
 22880                           
 22881                           ; BSR set to: 0
 22882  005218  2B66               	incf	ipv4_cmp@i& (0+255),f,b
 22883  00521A  D7E4               	goto	l9253
 22884  00521C                     u10250:
 22885                           
 22886                           ; BSR set to: 0
 22887                           ;ipv4.c: 308: }
 22888                           ;ipv4.c: 309: return 1;
 22889                           
 22890                           ; BSR set to: 0
 22891  00521C  80D8               	bsf	status,0,c
 22892  00521E  0012               	return	
 22893  005220                     __end_of_ipv4_cmp:
 22894                           	opt stack 0
 22895                           tblptru	equ	0xFF8
 22896                           tblptrh	equ	0xFF7
 22897                           tblptrl	equ	0xFF6
 22898                           tablat	equ	0xFF5
 22899                           prodh	equ	0xFF4
 22900                           prodl	equ	0xFF3
 22901                           intcon	equ	0xFF2
 22902                           intcon3	equ	0xFF0
 22903                           indf0	equ	0xFEF
 22904                           postinc0	equ	0xFEE
 22905                           plusw0	equ	0xFEB
 22906                           fsr0h	equ	0xFEA
 22907                           fsr0l	equ	0xFE9
 22908                           wreg	equ	0xFE8
 22909                           indf1	equ	0xFE7
 22910                           postinc1	equ	0xFE6
 22911                           postdec1	equ	0xFE5
 22912                           plusw1	equ	0xFE3
 22913                           fsr1h	equ	0xFE2
 22914                           fsr1l	equ	0xFE1
 22915                           indf2	equ	0xFDF
 22916                           postinc2	equ	0xFDE
 22917                           postdec2	equ	0xFDD
 22918                           plusw2	equ	0xFDB
 22919                           fsr2h	equ	0xFDA
 22920                           fsr2l	equ	0xFD9
 22921                           status	equ	0xFD8
 22922                           
 22923 ;; *************** function _getMillis *****************
 22924 ;; Defined at:
 22925 ;;		line 34 in file "src/stack/time.c"
 22926 ;; Parameters:    Size  Location     Type
 22927 ;;		None
 22928 ;; Auto vars:     Size  Location     Type
 22929 ;;		None
 22930 ;; Return value:  Size  Location     Type
 22931 ;;                  4    0[BANK0 ] unsigned long 
 22932 ;; Registers used:
 22933 ;;		None
 22934 ;; Tracked objects:
 22935 ;;		On entry : 0/0
 22936 ;;		On exit  : 0/0
 22937 ;;		Unchanged: 0/0
 22938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22939 ;;      Params:         0       4       0       0       0       0       0       0       0
 22940 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22941 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22942 ;;      Totals:         0       4       0       0       0       0       0       0       0
 22943 ;;Total ram usage:        4 bytes
 22944 ;; Hardware stack levels used:    1
 22945 ;; Hardware stack levels required when called:    4
 22946 ;; This function calls:
 22947 ;;		Nothing
 22948 ;; This function is called by:
 22949 ;;		_ethernet_rxGetNewFrame
 22950 ;;		_arp_handleNewPacket
 22951 ;;		_arp_probe
 22952 ;;		_arp_gratuitous
 22953 ;;		_arp_checkForEntry
 22954 ;;		_ipv4_sendFrame
 22955 ;; This function uses a non-reentrant model
 22956 ;;
 22957                           
 22958                           	psect	text94
 22959  0057CA                     __ptext94:
 22960                           	opt stack 0
 22961  0057CA                     _getMillis:
 22962                           	opt stack 24
 22963                           
 22964                           ;time.c: 35: return time;
 22965                           
 22966                           ; BSR set to: 0
 22967                           ;incstack = 0
 22968  0057CA  C029  F060         	movff	_time,?_getMillis	;volatile
 22969  0057CE  C02A  F061         	movff	_time+1,?_getMillis+1	;volatile
 22970  0057D2  C02B  F062         	movff	_time+2,?_getMillis+2	;volatile
 22971  0057D6  C02C  F063         	movff	_time+3,?_getMillis+3	;volatile
 22972  0057DA  0012               	return		;funcret
 22973  0057DC                     __end_of_getMillis:
 22974                           	opt stack 0
 22975                           tblptru	equ	0xFF8
 22976                           tblptrh	equ	0xFF7
 22977                           tblptrl	equ	0xFF6
 22978                           tablat	equ	0xFF5
 22979                           prodh	equ	0xFF4
 22980                           prodl	equ	0xFF3
 22981                           intcon	equ	0xFF2
 22982                           intcon3	equ	0xFF0
 22983                           indf0	equ	0xFEF
 22984                           postinc0	equ	0xFEE
 22985                           plusw0	equ	0xFEB
 22986                           fsr0h	equ	0xFEA
 22987                           fsr0l	equ	0xFE9
 22988                           wreg	equ	0xFE8
 22989                           indf1	equ	0xFE7
 22990                           postinc1	equ	0xFE6
 22991                           postdec1	equ	0xFE5
 22992                           plusw1	equ	0xFE3
 22993                           fsr1h	equ	0xFE2
 22994                           fsr1l	equ	0xFE1
 22995                           indf2	equ	0xFDF
 22996                           postinc2	equ	0xFDE
 22997                           postdec2	equ	0xFDD
 22998                           plusw2	equ	0xFDB
 22999                           fsr2h	equ	0xFDA
 23000                           fsr2l	equ	0xFD9
 23001                           status	equ	0xFD8
 23002                           
 23003 ;; *************** function _UARTTransmitText *****************
 23004 ;; Defined at:
 23005 ;;		line 36 in file "src/system/uart.c"
 23006 ;; Parameters:    Size  Location     Type
 23007 ;;  str             2   56[BANK0 ] PTR const unsigned char 
 23008 ;;		 -> STR_113(33), STR_112(19), STR_111(2), STR_110(3), 
 23009 ;;		 -> STR_109(3), STR_108(3), STR_107(3), STR_106(5), 
 23010 ;;		 -> STR_105(2), STR_104(2), STR_103(7), STR_102(11), 
 23011 ;;		 -> STR_101(3), STR_100(27), STR_99(3), STR_98(8), 
 23012 ;;		 -> STR_97(9), STR_96(3), STR_95(39), STR_94(3), 
 23013 ;;		 -> STR_93(3), STR_92(30), STR_91(33), STR_90(39), 
 23014 ;;		 -> STR_89(35), STR_88(58), STR_87(36), STR_86(34), 
 23015 ;;		 -> STR_85(3), STR_84(43), STR_83(4), STR_82(12), 
 23016 ;;		 -> STR_81(26), STR_80(2), STR_79(3), STR_78(16), 
 23017 ;;		 -> STR_77(15), STR_76(10), STR_75(2), STR_74(3), 
 23018 ;;		 -> STR_73(5), STR_72(3), STR_71(2), STR_70(39), 
 23019 ;;		 -> arpEntryToString@string(50), ipAdressToString@address(16), STR_69(17), STR_68(4), 
 23020 ;;		 -> STR_67(4), STR_66(5), STR_65(18), STR_64(4), 
 23021 ;;		 -> STR_63(5), macToString@address(18), hexToString@number(10), intToString@number(10), 
 23022 ;;		 -> STR_62(5), STR_61(9), STR_60(30), STR_59(34), 
 23023 ;;		 -> STR_58(55), STR_57(37), STR_56(15), STR_55(14), 
 23024 ;;		 -> STR_54(19), STR_53(30), STR_52(17), STR_51(8), 
 23025 ;;		 -> STR_50(29), STR_49(29), STR_48(20), STR_47(19), 
 23026 ;;		 -> STR_46(19), STR_45(13), STR_44(4), STR_43(5), 
 23027 ;;		 -> STR_42(32), STR_41(3), STR_40(15), STR_39(51), 
 23028 ;;		 -> STR_38(4), STR_37(23), STR_36(12), STR_35(4), 
 23029 ;;		 -> STR_34(9), STR_33(2), STR_32(12), STR_31(24), 
 23030 ;;		 -> STR_30(51), STR_29(49), STR_28(51), STR_27(2), 
 23031 ;;		 -> STR_26(3), STR_25(37), STR_24(37), STR_23(3), 
 23032 ;;		 -> STR_22(27), STR_21(40), STR_20(3), STR_19(3), 
 23033 ;;		 -> STR_18(3), STR_17(5), STR_16(2), STR_15(3), 
 23034 ;;		 -> STR_14(5), STR_13(3), STR_12(3), STR_11(2), 
 23035 ;;		 -> STR_10(20), STR_9(7), STR_8(6), STR_7(2), 
 23036 ;;		 -> STR_6(2), STR_5(16), STR_4(10), STR_3(12), 
 23037 ;;		 -> STR_2(2), STR_1(2), ethernetController_getDeviceName@string(11), 
 23038 ;; Auto vars:     Size  Location     Type
 23039 ;;		None
 23040 ;; Return value:  Size  Location     Type
 23041 ;;                  1    wreg      void 
 23042 ;; Registers used:
 23043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 23044 ;; Tracked objects:
 23045 ;;		On entry : 0/0
 23046 ;;		On exit  : 0/0
 23047 ;;		Unchanged: 0/0
 23048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23049 ;;      Params:         0       2       0       0       0       0       0       0       0
 23050 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23051 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23052 ;;      Totals:         0       2       0       0       0       0       0       0       0
 23053 ;;Total ram usage:        2 bytes
 23054 ;; Hardware stack levels used:    1
 23055 ;; Hardware stack levels required when called:    4
 23056 ;; This function calls:
 23057 ;;		Nothing
 23058 ;; This function is called by:
 23059 ;;		_ethernet_rxGetNewFrame
 23060 ;;		_handleStackBackgroundTasks
 23061 ;;		_main
 23062 ;;		_printEthernetState
 23063 ;;		_printErrorMessage
 23064 ;;		_UARTTransmitInt
 23065 ;;		_arp_handleNewPacket
 23066 ;;		_arp_sendReply
 23067 ;;		_arp_probe
 23068 ;;		_arp_gratuitous
 23069 ;;		_arp_background
 23070 ;;		_arp_setNewEntry
 23071 ;;		_arp_init
 23072 ;;		_ipv4_sendFrame
 23073 ;;		_ipv4_checkHeaderChecksum
 23074 ;;		_ipv4_handleNewPacket
 23075 ;;		_ipv4_background
 23076 ;;		_printArpTable
 23077 ;; This function uses a non-reentrant model
 23078 ;;
 23079                           
 23080                           	psect	text95
 23081  004E4E                     __ptext95:
 23082                           	opt stack 0
 23083  004E4E                     _UARTTransmitText:
 23084                           	opt stack 23
 23085                           
 23086                           ;uart.c: 37: while (*str) {
 23087                           
 23088                           ;incstack = 0
 23089  004E4E  D016               	goto	u9900
 23090  004E50                     
 23091                           ;uart.c: 38: TXREG1 = *str++;
 23092  004E50  C098  FFF6         	movff	UARTTransmitText@str,tblptrl
 23093  004E54  C099  FFF7         	movff	UARTTransmitText@str+1,tblptrh
 23094  004E58  6AF8               	clrf	tblptru,c
 23095  004E5A  0E07               	movlw	(high __ramtop+-1)
 23096  004E5C  64F7               	cpfsgt	tblptrh,c
 23097  004E5E  D003               	bra	u9897
 23098  004E60  0008               	tblrd		*
 23099  004E62  50F5               	movf	tablat,w,c
 23100  004E64  D005               	bra	u9890
 23101  004E66                     u9897:
 23102  004E66  CFF6 FFE9          	movff	tblptrl,fsr0l
 23103  004E6A  CFF7 FFEA          	movff	tblptrh,fsr0h
 23104  004E6E  50EF               	movf	indf0,w,c
 23105  004E70                     u9890:
 23106  004E70  6EAD               	movwf	4013,c	;volatile
 23107  004E72  0100               	movlb	0	; () banked
 23108  004E74  4B98               	infsnz	UARTTransmitText@str& (0+255),f,b
 23109  004E76  2B99               	incf	(UARTTransmitText@str+1)& (0+255),f,b
 23110  004E78                     
 23111                           ; BSR set to: 0
 23112  004E78  A2AC               	btfss	4012,1,c	;volatile
 23113  004E7A  D7FE               	goto	l796
 23114  004E7C                     u9900:
 23115  004E7C  C098  FFF6         	movff	UARTTransmitText@str,tblptrl
 23116  004E80  C099  FFF7         	movff	UARTTransmitText@str+1,tblptrh
 23117  004E84  6AF8               	clrf	tblptru,c
 23118  004E86  0E07               	movlw	(high __ramtop+-1)
 23119  004E88  64F7               	cpfsgt	tblptrh,c
 23120  004E8A  D003               	bra	u9917
 23121  004E8C  0008               	tblrd		*
 23122  004E8E  50F5               	movf	tablat,w,c
 23123  004E90  D005               	bra	u9910
 23124  004E92                     u9917:
 23125  004E92  CFF6 FFE9          	movff	tblptrl,fsr0l
 23126  004E96  CFF7 FFEA          	movff	tblptrh,fsr0h
 23127  004E9A  50EF               	movf	indf0,w,c
 23128  004E9C                     u9910:
 23129  004E9C  0900               	iorlw	0
 23130  004E9E  B4D8               	btfsc	status,2,c
 23131  004EA0  0012               	return	
 23132  004EA2  D7D6               	goto	l794
 23133  004EA4                     __end_of_UARTTransmitText:
 23134                           	opt stack 0
 23135                           tblptru	equ	0xFF8
 23136                           tblptrh	equ	0xFF7
 23137                           tblptrl	equ	0xFF6
 23138                           tablat	equ	0xFF5
 23139                           prodh	equ	0xFF4
 23140                           prodl	equ	0xFF3
 23141                           intcon	equ	0xFF2
 23142                           intcon3	equ	0xFF0
 23143                           indf0	equ	0xFEF
 23144                           postinc0	equ	0xFEE
 23145                           plusw0	equ	0xFEB
 23146                           fsr0h	equ	0xFEA
 23147                           fsr0l	equ	0xFE9
 23148                           wreg	equ	0xFE8
 23149                           indf1	equ	0xFE7
 23150                           postinc1	equ	0xFE6
 23151                           postdec1	equ	0xFE5
 23152                           plusw1	equ	0xFE3
 23153                           fsr1h	equ	0xFE2
 23154                           fsr1l	equ	0xFE1
 23155                           indf2	equ	0xFDF
 23156                           postinc2	equ	0xFDE
 23157                           postdec2	equ	0xFDD
 23158                           plusw2	equ	0xFDB
 23159                           fsr2h	equ	0xFDA
 23160                           fsr2l	equ	0xFD9
 23161                           status	equ	0xFD8
 23162                           
 23163 ;; *************** function _ethernetController_init *****************
 23164 ;; Defined at:
 23165 ;;		line 34 in file "src/enc424j600/ENC424J600.c"
 23166 ;; Parameters:    Size  Location     Type
 23167 ;;		None
 23168 ;; Auto vars:     Size  Location     Type
 23169 ;;  err             3   29[BANK0 ] struct error
 23170 ;; Return value:  Size  Location     Type
 23171 ;;                  3   26[BANK0 ] struct error
 23172 ;; Registers used:
 23173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23174 ;; Tracked objects:
 23175 ;;		On entry : 0/0
 23176 ;;		On exit  : 0/0
 23177 ;;		Unchanged: 0/0
 23178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23179 ;;      Params:         0       3       0       0       0       0       0       0       0
 23180 ;;      Locals:         0       3       0       0       0       0       0       0       0
 23181 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23182 ;;      Totals:         0       6       0       0       0       0       0       0       0
 23183 ;;Total ram usage:        6 bytes
 23184 ;; Hardware stack levels used:    1
 23185 ;; Hardware stack levels required when called:    8
 23186 ;; This function calls:
 23187 ;;		_enc424j600_enableAutoMACInsertion
 23188 ;;		_enc424j600_enableReception
 23189 ;;		_enc424j600_initSPI
 23190 ;;		_enc424j600_setNextPacketPointer
 23191 ;;		_enc424j600_setRXBufferStartAddress
 23192 ;;		_enc424j600_setRXTailPointer
 23193 ;;		_ethernetController_checkDeviceId
 23194 ;;		_ethernetController_softReset
 23195 ;; This function is called by:
 23196 ;;		_main
 23197 ;; This function uses a non-reentrant model
 23198 ;;
 23199                           
 23200                           	psect	text96
 23201  00438A                     __ptext96:
 23202                           	opt stack 0
 23203  00438A                     _ethernetController_init:
 23204                           	opt stack 22
 23205                           
 23206                           ;ENC424J600.c: 35: error_t err;
 23207                           ;ENC424J600.c: 36: enc424j600_initSPI();
 23208                           
 23209                           ;incstack = 0
 23210  00438A  EC82  F02B         	call	_enc424j600_initSPI	;wreg free
 23211                           
 23212                           ;ENC424J600.c: 37: err = ethernetController_softReset();
 23213  00438E  EC36  F01D         	call	_ethernetController_softReset	;wreg free
 23214  004392  C06E  F07D         	movff	?_ethernetController_softReset,ethernetController_init@err
 23215  004396  C06F  F07E         	movff	?_ethernetController_softReset+1,ethernetController_init@err+1
 23216  00439A  C070  F07F         	movff	?_ethernetController_softReset+2,ethernetController_init@err+2
 23217                           
 23218                           ;ENC424J600.c: 38: if (err.code != (uint16_t)0) {
 23219  00439E  0100               	movlb	0	; () banked
 23220  0043A0  517E               	movf	(ethernetController_init@err+1)& (0+255),w,b
 23221  0043A2  117F               	iorwf	(ethernetController_init@err+2)& (0+255),w,b
 23222  0043A4  B4D8               	btfsc	status,2,c
 23223  0043A6  D007               	goto	l75
 23224                           
 23225                           ; BSR set to: 0
 23226                           ;ENC424J600.c: 39: return err;
 23227  0043A8  C07D  F07A         	movff	ethernetController_init@err,?_ethernetController_init
 23228  0043AC  C07E  F07B         	movff	ethernetController_init@err+1,?_ethernetController_init+1
 23229  0043B0  C07F  F07C         	movff	ethernetController_init@err+2,?_ethernetController_init+2
 23230  0043B4  0012               	return	
 23231  0043B6                     l75:
 23232                           
 23233                           ; BSR set to: 0
 23234                           ;ENC424J600.c: 40: }
 23235                           ;ENC424J600.c: 41: err = ethernetController_checkDeviceId();
 23236                           
 23237                           ; BSR set to: 0
 23238  0043B6  ECF6  F027         	call	_ethernetController_checkDeviceId	;wreg free
 23239  0043BA  C06E  F07D         	movff	?_ethernetController_checkDeviceId,ethernetController_init@err
 23240  0043BE  C06F  F07E         	movff	?_ethernetController_checkDeviceId+1,ethernetController_init@err+1
 23241  0043C2  C070  F07F         	movff	?_ethernetController_checkDeviceId+2,ethernetController_init@err+2
 23242                           
 23243                           ;ENC424J600.c: 42: if (err.code != (uint16_t)0) {
 23244  0043C6  0100               	movlb	0	; () banked
 23245  0043C8  517E               	movf	(ethernetController_init@err+1)& (0+255),w,b
 23246  0043CA  117F               	iorwf	(ethernetController_init@err+2)& (0+255),w,b
 23247  0043CC  B4D8               	btfsc	status,2,c
 23248  0043CE  D007               	goto	l77
 23249                           
 23250                           ; BSR set to: 0
 23251                           ;ENC424J600.c: 43: return err;
 23252  0043D0  C07D  F07A         	movff	ethernetController_init@err,?_ethernetController_init
 23253  0043D4  C07E  F07B         	movff	ethernetController_init@err+1,?_ethernetController_init+1
 23254  0043D8  C07F  F07C         	movff	ethernetController_init@err+2,?_ethernetController_init+2
 23255  0043DC  0012               	return	
 23256  0043DE                     l77:
 23257                           
 23258                           ; BSR set to: 0
 23259                           ;ENC424J600.c: 44: }
 23260                           ;ENC424J600.c: 63: enc424j600_setRXBufferStartAddress(0x3000);
 23261                           
 23262                           ; BSR set to: 0
 23263  0043DE  0E30               	movlw	48
 23264  0043E0  6F6F               	movwf	(enc424j600_setRXBufferStartAddress@addr+1)& (0+255),b
 23265  0043E2  0E00               	movlw	0
 23266  0043E4  6F6E               	movwf	enc424j600_setRXBufferStartAddress@addr& (0+255),b
 23267  0043E6  EC8E  F02A         	call	_enc424j600_setRXBufferStartAddress	;wreg free
 23268                           
 23269                           ;ENC424J600.c: 64: enc424j600_setNextPacketPointer(0x3000);
 23270  0043EA  0E30               	movlw	48
 23271  0043EC  0100               	movlb	0	; () banked
 23272  0043EE  6F61               	movwf	(enc424j600_setNextPacketPointer@ptr+1)& (0+255),b
 23273  0043F0  0E00               	movlw	0
 23274  0043F2  6F60               	movwf	enc424j600_setNextPacketPointer@ptr& (0+255),b
 23275  0043F4  EC1C  F02C         	call	_enc424j600_setNextPacketPointer	;wreg free
 23276                           
 23277                           ;ENC424J600.c: 65: enc424j600_setRXTailPointer(0x5FFE);
 23278  0043F8  0E5F               	movlw	95
 23279  0043FA  0100               	movlb	0	; () banked
 23280  0043FC  6F6F               	movwf	(enc424j600_setRXTailPointer@addr+1)& (0+255),b
 23281  0043FE  0EFE               	movlw	254
 23282  004400  6F6E               	movwf	enc424j600_setRXTailPointer@addr& (0+255),b
 23283  004402  EC79  F02A         	call	_enc424j600_setRXTailPointer	;wreg free
 23284                           
 23285                           ;ENC424J600.c: 67: enc424j600_enableReception();
 23286  004406  EC21  F02C         	call	_enc424j600_enableReception	;wreg free
 23287                           
 23288                           ;ENC424J600.c: 68: enc424j600_enableAutoMACInsertion();
 23289  00440A  ECDF  F02A         	call	_enc424j600_enableAutoMACInsertion	;wreg free
 23290                           
 23291                           ;ENC424J600.c: 70: err.module = ERROR_MODULE_ETHERNET_CONTROLLER;
 23292  00440E  0E01               	movlw	1
 23293  004410  0100               	movlb	0	; () banked
 23294  004412  6F7D               	movwf	ethernetController_init@err& (0+255),b
 23295                           
 23296                           ; BSR set to: 0
 23297                           ;ENC424J600.c: 71: err.code = (uint16_t)0;
 23298  004414  0E00               	movlw	0
 23299  004416  6F7F               	movwf	(ethernetController_init@err+2)& (0+255),b
 23300  004418  0E00               	movlw	0
 23301  00441A  6F7E               	movwf	(ethernetController_init@err+1)& (0+255),b
 23302                           
 23303                           ; BSR set to: 0
 23304                           ;ENC424J600.c: 72: return err;
 23305  00441C  C07D  F07A         	movff	ethernetController_init@err,?_ethernetController_init
 23306  004420  C07E  F07B         	movff	ethernetController_init@err+1,?_ethernetController_init+1
 23307  004424  C07F  F07C         	movff	ethernetController_init@err+2,?_ethernetController_init+2
 23308  004428  0012               	return	
 23309  00442A                     __end_of_ethernetController_init:
 23310                           	opt stack 0
 23311                           tblptru	equ	0xFF8
 23312                           tblptrh	equ	0xFF7
 23313                           tblptrl	equ	0xFF6
 23314                           tablat	equ	0xFF5
 23315                           prodh	equ	0xFF4
 23316                           prodl	equ	0xFF3
 23317                           intcon	equ	0xFF2
 23318                           intcon3	equ	0xFF0
 23319                           indf0	equ	0xFEF
 23320                           postinc0	equ	0xFEE
 23321                           plusw0	equ	0xFEB
 23322                           fsr0h	equ	0xFEA
 23323                           fsr0l	equ	0xFE9
 23324                           wreg	equ	0xFE8
 23325                           indf1	equ	0xFE7
 23326                           postinc1	equ	0xFE6
 23327                           postdec1	equ	0xFE5
 23328                           plusw1	equ	0xFE3
 23329                           fsr1h	equ	0xFE2
 23330                           fsr1l	equ	0xFE1
 23331                           indf2	equ	0xFDF
 23332                           postinc2	equ	0xFDE
 23333                           postdec2	equ	0xFDD
 23334                           plusw2	equ	0xFDB
 23335                           fsr2h	equ	0xFDA
 23336                           fsr2l	equ	0xFD9
 23337                           status	equ	0xFD8
 23338                           
 23339 ;; *************** function _ethernetController_softReset *****************
 23340 ;; Defined at:
 23341 ;;		line 75 in file "src/enc424j600/ENC424J600.c"
 23342 ;; Parameters:    Size  Location     Type
 23343 ;;		None
 23344 ;; Auto vars:     Size  Location     Type
 23345 ;;  err             3   23[BANK0 ] struct error
 23346 ;;  receivedData    2   21[BANK0 ] unsigned char [2]
 23347 ;;  dataToSend      2   19[BANK0 ] unsigned char [2]
 23348 ;;  comFailCount    1   18[BANK0 ] unsigned char 
 23349 ;; Return value:  Size  Location     Type
 23350 ;;                  3   14[BANK0 ] struct error
 23351 ;; Registers used:
 23352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23353 ;; Tracked objects:
 23354 ;;		On entry : 0/0
 23355 ;;		On exit  : 0/0
 23356 ;;		Unchanged: 0/0
 23357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23358 ;;      Params:         0       3       0       0       0       0       0       0       0
 23359 ;;      Locals:         0       8       0       0       0       0       0       0       0
 23360 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23361 ;;      Totals:         0      12       0       0       0       0       0       0       0
 23362 ;;Total ram usage:       12 bytes
 23363 ;; Hardware stack levels used:    1
 23364 ;; Hardware stack levels required when called:    7
 23365 ;; This function calls:
 23366 ;;		_enc424j600_readControlRegisterUnbanked
 23367 ;;		_enc424j600_writeControlRegisterUnbanked
 23368 ;;		_enc424j600_writeSingleByte
 23369 ;; This function is called by:
 23370 ;;		_ethernetController_init
 23371 ;; This function uses a non-reentrant model
 23372 ;;
 23373                           
 23374                           	psect	text97
 23375  003A6C                     __ptext97:
 23376                           	opt stack 0
 23377  003A6C                     _ethernetController_softReset:
 23378                           	opt stack 22
 23379                           
 23380                           ;ENC424J600.c: 93: uint8_t comFailCount = 0;
 23381                           
 23382                           ; BSR set to: 0
 23383                           ;incstack = 0
 23384  003A6C  0E00               	movlw	0
 23385  003A6E  0100               	movlb	0	; () banked
 23386  003A70  6F72               	movwf	ethernetController_softReset@comFailCount& (0+255),b
 23387                           
 23388                           ; BSR set to: 0
 23389                           ;ENC424J600.c: 94: uint8_t dataToSend[2] = {0x12, 0x34};
 23390  003A72  C04C  F073         	movff	ethernetController_softReset@F5988,ethernetController_softReset@dataToSend
 23391  003A76  C04D  F074         	movff	ethernetController_softReset@F5988+1,ethernetController_softReset@dataToSend+1
 23392                           
 23393                           ; BSR set to: 0
 23394                           ;ENC424J600.c: 95: uint8_t receivedData[2] = {0, 0};
 23395  003A7A  C040  F075         	movff	ethernetController_softReset@F5990,ethernetController_softReset@receivedData
 23396  003A7E  C041  F076         	movff	ethernetController_softReset@F5990+1,ethernetController_softReset@receivedData+1
 23397                           
 23398                           ;ENC424J600.c: 96: error_t err;
 23399                           ;ENC424J600.c: 97: err.module = ERROR_MODULE_ETHERNET_CONTROLLER;
 23400  003A82  0E01               	movlw	1
 23401  003A84  6F77               	movwf	ethernetController_softReset@err& (0+255),b
 23402                           
 23403                           ;ENC424J600.c: 98: err.code = (uint16_t)0;
 23404  003A86  0E00               	movlw	0
 23405  003A88  6F79               	movwf	(ethernetController_softReset@err+2)& (0+255),b
 23406  003A8A  0E00               	movlw	0
 23407  003A8C  6F78               	movwf	(ethernetController_softReset@err+1)& (0+255),b
 23408                           
 23409                           ; BSR set to: 0
 23410                           ;ENC424J600.c: 99: if (comFailCount < 5) {
 23411  003A8E  0E05               	movlw	5
 23412  003A90  6172               	cpfslt	ethernetController_softReset@comFailCount& (0+255),b
 23413  003A92  D05F               	goto	l84
 23414                           
 23415                           ; BSR set to: 0
 23416                           ;ENC424J600.c: 101: enc424j600_writeControlRegisterUnbanked(0x16 + 0x00, &dataToSend[0])
      +                          ;
 23417  003A94  0E73               	movlw	low ethernetController_softReset@dataToSend
 23418  003A96  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 23419  003A98  0E00               	movlw	high ethernetController_softReset@dataToSend
 23420  003A9A  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 23421  003A9C  0E16               	movlw	22
 23422  003A9E  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 23423                           
 23424                           ;ENC424J600.c: 102: enc424j600_writeControlRegisterUnbanked(0x17 + 0x00, &dataToSend[1])
      +                          ;
 23425  003AA2  0E74               	movlw	low (ethernetController_softReset@dataToSend+1)
 23426  003AA4  0100               	movlb	0	; () banked
 23427  003AA6  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 23428  003AA8  0E00               	movlw	high (ethernetController_softReset@dataToSend+1)
 23429  003AAA  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 23430  003AAC  0E17               	movlw	23
 23431  003AAE  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 23432                           
 23433                           ;ENC424J600.c: 104: enc424j600_readControlRegisterUnbanked(0x16 + 0x00, &receivedData[0]
      +                          );
 23434  003AB2  0E75               	movlw	low ethernetController_softReset@receivedData
 23435  003AB4  0100               	movlb	0	; () banked
 23436  003AB6  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 23437  003AB8  0E00               	movlw	high ethernetController_softReset@receivedData
 23438  003ABA  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 23439  003ABC  0E16               	movlw	22
 23440  003ABE  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 23441                           
 23442                           ;ENC424J600.c: 105: enc424j600_readControlRegisterUnbanked(0x17 + 0x00, &receivedData[1]
      +                          );
 23443  003AC2  0E76               	movlw	low (ethernetController_softReset@receivedData+1)
 23444  003AC4  0100               	movlb	0	; () banked
 23445  003AC6  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 23446  003AC8  0E00               	movlw	high (ethernetController_softReset@receivedData+1)
 23447  003ACA  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 23448  003ACC  0E17               	movlw	23
 23449  003ACE  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 23450                           
 23451                           ;ENC424J600.c: 107: if ((receivedData[0] == dataToSend[0]) && (receivedData[1] == dataTo
      +                          Send[1])) {
 23452  003AD2  0100               	movlb	0	; () banked
 23453  003AD4  5173               	movf	ethernetController_softReset@dataToSend& (0+255),w,b
 23454  003AD6  1975               	xorwf	ethernetController_softReset@receivedData& (0+255),w,b
 23455  003AD8  A4D8               	btfss	status,2,c
 23456  003ADA  D038               	goto	l88
 23457                           
 23458                           ; BSR set to: 0
 23459  003ADC  5174               	movf	(ethernetController_softReset@dataToSend+1)& (0+255),w,b
 23460  003ADE  1976               	xorwf	(ethernetController_softReset@receivedData+1)& (0+255),w,b
 23461  003AE0  A4D8               	btfss	status,2,c
 23462  003AE2  D034               	goto	l88
 23463                           
 23464                           ; BSR set to: 0
 23465                           ;ENC424J600.c: 109: enc424j600_writeSingleByte(0b11001010);
 23466  003AE4  0ECA               	movlw	202
 23467  003AE6  ECAA  F02B         	call	_enc424j600_writeSingleByte
 23468                           
 23469                           ;ENC424J600.c: 110: _delay((unsigned long)((25)*(32000000UL/4000000.0)));
 23470  003AEA  0E42               	movlw	66
 23471  003AEC                     u12907:
 23472  003AEC  2EE8               	decfsz	wreg,f,c
 23473  003AEE  D7FE               	bra	u12907
 23474  003AF0  D000               	nop2	
 23475                           
 23476                           ;ENC424J600.c: 112: enc424j600_readControlRegisterUnbanked(0x16 + 0x00, &receivedData[0]
      +                          );
 23477  003AF2  0E75               	movlw	low ethernetController_softReset@receivedData
 23478  003AF4  0100               	movlb	0	; () banked
 23479  003AF6  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 23480  003AF8  0E00               	movlw	high ethernetController_softReset@receivedData
 23481  003AFA  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 23482  003AFC  0E16               	movlw	22
 23483  003AFE  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 23484                           
 23485                           ;ENC424J600.c: 113: enc424j600_readControlRegisterUnbanked(0x17 + 0x00, &receivedData[1]
      +                          );
 23486  003B02  0E76               	movlw	low (ethernetController_softReset@receivedData+1)
 23487  003B04  0100               	movlb	0	; () banked
 23488  003B06  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 23489  003B08  0E00               	movlw	high (ethernetController_softReset@receivedData+1)
 23490  003B0A  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 23491  003B0C  0E17               	movlw	23
 23492  003B0E  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 23493                           
 23494                           ;ENC424J600.c: 115: if (!receivedData[0] && !receivedData[1]) {
 23495  003B12  0100               	movlb	0	; () banked
 23496  003B14  5175               	movf	ethernetController_softReset@receivedData& (0+255),w,b
 23497  003B16  A4D8               	btfss	status,2,c
 23498  003B18  D00D               	goto	l86
 23499                           
 23500                           ; BSR set to: 0
 23501  003B1A  5176               	movf	(ethernetController_softReset@receivedData+1)& (0+255),w,b
 23502  003B1C  A4D8               	btfss	status,2,c
 23503  003B1E  D00A               	goto	l86
 23504                           
 23505                           ; BSR set to: 0
 23506                           ;ENC424J600.c: 117: _delay((unsigned long)((256)*(32000000UL/4000000.0)));
 23507  003B20  0E03               	movlw	3
 23508  003B22  0100               	movlb	0	; () banked
 23509  003B24  6F71               	movwf	??_ethernetController_softReset& (0+255),b
 23510  003B26  0EA7               	movlw	167
 23511  003B28                     u12917:
 23512  003B28  2EE8               	decfsz	wreg,f,c
 23513  003B2A  D7FE               	bra	u12917
 23514  003B2C  2F71               	decfsz	??_ethernetController_softReset& (0+255),f,b
 23515  003B2E  D7FC               	bra	u12917
 23516  003B30  D000               	nop2	
 23517  003B32  D005               	goto	l10137
 23518  003B34                     l86:
 23519                           
 23520                           ;ENC424J600.c: 120: err.code = ERROR_ETHERNET_CONTROLLER_UNRESPONSIVE;
 23521  003B34  0E01               	movlw	1
 23522  003B36  0100               	movlb	0	; () banked
 23523  003B38  6F79               	movwf	(ethernetController_softReset@err+2)& (0+255),b
 23524  003B3A  0E2E               	movlw	46
 23525  003B3C  6F78               	movwf	(ethernetController_softReset@err+1)& (0+255),b
 23526  003B3E                     l10137:
 23527                           
 23528                           ; BSR set to: 0
 23529                           ;ENC424J600.c: 121: return err;
 23530  003B3E  C077  F06E         	movff	ethernetController_softReset@err,?_ethernetController_softReset
 23531  003B42  C078  F06F         	movff	ethernetController_softReset@err+1,?_ethernetController_softReset+1
 23532  003B46  C079  F070         	movff	ethernetController_softReset@err+2,?_ethernetController_softReset+2
 23533                           
 23534                           ; BSR set to: 0
 23535  003B4A  0012               	return	
 23536  003B4C                     l88:
 23537                           
 23538                           ;ENC424J600.c: 122: }
 23539                           ;ENC424J600.c: 123: }
 23540                           ;ENC424J600.c: 124: comFailCount++;
 23541                           
 23542                           ; BSR set to: 0
 23543                           
 23544                           ; BSR set to: 0
 23545  003B4C  0100               	movlb	0	; () banked
 23546  003B4E  2B72               	incf	ethernetController_softReset@comFailCount& (0+255),f,b
 23547                           
 23548                           ;ENC424J600.c: 125: } else {
 23549  003B50  D00B               	goto	l89
 23550  003B52                     l84:
 23551                           
 23552                           ; BSR set to: 0
 23553                           ;ENC424J600.c: 126: err.code = ERROR_ETHERNET_CONTROLLER_UNRESPONSIVE;
 23554                           
 23555                           ; BSR set to: 0
 23556  003B52  0E01               	movlw	1
 23557  003B54  6F79               	movwf	(ethernetController_softReset@err+2)& (0+255),b
 23558  003B56  0E2E               	movlw	46
 23559  003B58  6F78               	movwf	(ethernetController_softReset@err+1)& (0+255),b
 23560                           
 23561                           ; BSR set to: 0
 23562                           ;ENC424J600.c: 127: return err;
 23563  003B5A  C077  F06E         	movff	ethernetController_softReset@err,?_ethernetController_softReset
 23564  003B5E  C078  F06F         	movff	ethernetController_softReset@err+1,?_ethernetController_softReset+1
 23565  003B62  C079  F070         	movff	ethernetController_softReset@err+2,?_ethernetController_softReset+2
 23566                           
 23567                           ; BSR set to: 0
 23568  003B66  0012               	return	
 23569  003B68                     l89:
 23570                           
 23571                           ; BSR set to: 0
 23572                           ;ENC424J600.c: 128: }
 23573                           ;ENC424J600.c: 129: return err;
 23574  003B68  C077  F06E         	movff	ethernetController_softReset@err,?_ethernetController_softReset
 23575  003B6C  C078  F06F         	movff	ethernetController_softReset@err+1,?_ethernetController_softReset+1
 23576  003B70  C079  F070         	movff	ethernetController_softReset@err+2,?_ethernetController_softReset+2
 23577  003B74  0012               	return		;funcret
 23578  003B76                     __end_of_ethernetController_softReset:
 23579                           	opt stack 0
 23580                           tblptru	equ	0xFF8
 23581                           tblptrh	equ	0xFF7
 23582                           tblptrl	equ	0xFF6
 23583                           tablat	equ	0xFF5
 23584                           prodh	equ	0xFF4
 23585                           prodl	equ	0xFF3
 23586                           intcon	equ	0xFF2
 23587                           intcon3	equ	0xFF0
 23588                           indf0	equ	0xFEF
 23589                           postinc0	equ	0xFEE
 23590                           plusw0	equ	0xFEB
 23591                           fsr0h	equ	0xFEA
 23592                           fsr0l	equ	0xFE9
 23593                           wreg	equ	0xFE8
 23594                           indf1	equ	0xFE7
 23595                           postinc1	equ	0xFE6
 23596                           postdec1	equ	0xFE5
 23597                           plusw1	equ	0xFE3
 23598                           fsr1h	equ	0xFE2
 23599                           fsr1l	equ	0xFE1
 23600                           indf2	equ	0xFDF
 23601                           postinc2	equ	0xFDE
 23602                           postdec2	equ	0xFDD
 23603                           plusw2	equ	0xFDB
 23604                           fsr2h	equ	0xFDA
 23605                           fsr2l	equ	0xFD9
 23606                           status	equ	0xFD8
 23607                           
 23608 ;; *************** function _ethernetController_checkDeviceId *****************
 23609 ;; Defined at:
 23610 ;;		line 132 in file "src/enc424j600/ENC424J600.c"
 23611 ;; Parameters:    Size  Location     Type
 23612 ;;		None
 23613 ;; Auto vars:     Size  Location     Type
 23614 ;;  err             3   18[BANK0 ] struct error
 23615 ;;  data            1   17[BANK0 ] unsigned char 
 23616 ;; Return value:  Size  Location     Type
 23617 ;;                  3   14[BANK0 ] struct error
 23618 ;; Registers used:
 23619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23620 ;; Tracked objects:
 23621 ;;		On entry : 0/0
 23622 ;;		On exit  : 0/0
 23623 ;;		Unchanged: 0/0
 23624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23625 ;;      Params:         0       3       0       0       0       0       0       0       0
 23626 ;;      Locals:         0       4       0       0       0       0       0       0       0
 23627 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23628 ;;      Totals:         0       7       0       0       0       0       0       0       0
 23629 ;;Total ram usage:        7 bytes
 23630 ;; Hardware stack levels used:    1
 23631 ;; Hardware stack levels required when called:    7
 23632 ;; This function calls:
 23633 ;;		_enc424j600_readControlRegisterUnbanked
 23634 ;; This function is called by:
 23635 ;;		_ethernetController_init
 23636 ;;		_main
 23637 ;; This function uses a non-reentrant model
 23638 ;;
 23639                           
 23640                           	psect	text98
 23641  004FEC                     __ptext98:
 23642                           	opt stack 0
 23643  004FEC                     _ethernetController_checkDeviceId:
 23644                           	opt stack 22
 23645                           
 23646                           ;ENC424J600.c: 133: error_t err;
 23647                           ;ENC424J600.c: 134: err.module = ERROR_MODULE_ETHERNET_CONTROLLER;
 23648                           
 23649                           ;incstack = 0
 23650  004FEC  0E01               	movlw	1
 23651  004FEE  0100               	movlb	0	; () banked
 23652  004FF0  6F72               	movwf	ethernetController_checkDeviceId@err& (0+255),b
 23653                           
 23654                           ;ENC424J600.c: 135: err.code = (uint16_t)0;
 23655  004FF2  0E00               	movlw	0
 23656  004FF4  6F74               	movwf	(ethernetController_checkDeviceId@err+2)& (0+255),b
 23657  004FF6  0E00               	movlw	0
 23658  004FF8  6F73               	movwf	(ethernetController_checkDeviceId@err+1)& (0+255),b
 23659                           
 23660                           ;ENC424J600.c: 136: uint8_t data = 0;
 23661  004FFA  0E00               	movlw	0
 23662  004FFC  6F71               	movwf	ethernetController_checkDeviceId@data& (0+255),b
 23663                           
 23664                           ; BSR set to: 0
 23665                           ;ENC424J600.c: 137: enc424j600_readControlRegisterUnbanked(0x14 + 0x60, &data);
 23666  004FFE  0E71               	movlw	low ethernetController_checkDeviceId@data
 23667  005000  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 23668  005002  0E00               	movlw	high ethernetController_checkDeviceId@data
 23669  005004  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 23670  005006  0E74               	movlw	116
 23671  005008  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 23672                           
 23673                           ;ENC424J600.c: 138: if (((data >> 5)&0x07) == 0b001)
 23674  00500C  0100               	movlb	0	; () banked
 23675  00500E  3971               	swapf	ethernetController_checkDeviceId@data& (0+255),w,b
 23676  005010  42E8               	rrncf	wreg,f,c
 23677  005012  0B07               	andlw	7
 23678  005014  0B07               	andlw	7
 23679  005016  06E8               	decf	wreg,f,c
 23680  005018  A4D8               	btfss	status,2,c
 23681  00501A  D004               	goto	l92
 23682                           
 23683                           ; BSR set to: 0
 23684                           ;ENC424J600.c: 139: err.code = (uint16_t)0;
 23685  00501C  0E00               	movlw	0
 23686  00501E  6F74               	movwf	(ethernetController_checkDeviceId@err+2)& (0+255),b
 23687  005020  0E00               	movlw	0
 23688  005022  D003               	goto	L10
 23689  005024                     l92:
 23690                           
 23691                           ; BSR set to: 0
 23692                           ;ENC424J600.c: 140: else
 23693                           ;ENC424J600.c: 141: err.code = ERROR_ETHERNET_CONTROLLER_UNKNOWN_DEVICE_ID;
 23694                           
 23695                           ; BSR set to: 0
 23696  005024  0E01               	movlw	1
 23697  005026  6F74               	movwf	(ethernetController_checkDeviceId@err+2)& (0+255),b
 23698  005028  0E2D               	movlw	45
 23699  00502A                     L10:
 23700  00502A  6F73               	movwf	(ethernetController_checkDeviceId@err+1)& (0+255),b
 23701                           
 23702                           ; BSR set to: 0
 23703                           ;ENC424J600.c: 142: return err;
 23704                           
 23705                           ; BSR set to: 0
 23706  00502C  C072  F06E         	movff	ethernetController_checkDeviceId@err,?_ethernetController_checkDeviceId
 23707  005030  C073  F06F         	movff	ethernetController_checkDeviceId@err+1,?_ethernetController_checkDeviceId+1
 23708  005034  C074  F070         	movff	ethernetController_checkDeviceId@err+2,?_ethernetController_checkDeviceId+2
 23709  005038  0012               	return	
 23710  00503A                     __end_of_ethernetController_checkDeviceId:
 23711                           	opt stack 0
 23712                           tblptru	equ	0xFF8
 23713                           tblptrh	equ	0xFF7
 23714                           tblptrl	equ	0xFF6
 23715                           tablat	equ	0xFF5
 23716                           prodh	equ	0xFF4
 23717                           prodl	equ	0xFF3
 23718                           intcon	equ	0xFF2
 23719                           intcon3	equ	0xFF0
 23720                           indf0	equ	0xFEF
 23721                           postinc0	equ	0xFEE
 23722                           plusw0	equ	0xFEB
 23723                           fsr0h	equ	0xFEA
 23724                           fsr0l	equ	0xFE9
 23725                           wreg	equ	0xFE8
 23726                           indf1	equ	0xFE7
 23727                           postinc1	equ	0xFE6
 23728                           postdec1	equ	0xFE5
 23729                           plusw1	equ	0xFE3
 23730                           fsr1h	equ	0xFE2
 23731                           fsr1l	equ	0xFE1
 23732                           indf2	equ	0xFDF
 23733                           postinc2	equ	0xFDE
 23734                           postdec2	equ	0xFDD
 23735                           plusw2	equ	0xFDB
 23736                           fsr2h	equ	0xFDA
 23737                           fsr2l	equ	0xFD9
 23738                           status	equ	0xFD8
 23739                           
 23740 ;; *************** function _enc424j600_setRXTailPointer *****************
 23741 ;; Defined at:
 23742 ;;		line 649 in file "src/enc424j600/ENC424J600.c"
 23743 ;; Parameters:    Size  Location     Type
 23744 ;;  addr            2   14[BANK0 ] unsigned int 
 23745 ;; Auto vars:     Size  Location     Type
 23746 ;;  highByte        1   17[BANK0 ] unsigned char 
 23747 ;;  lowByte         1   16[BANK0 ] unsigned char 
 23748 ;; Return value:  Size  Location     Type
 23749 ;;                  1    wreg      void 
 23750 ;; Registers used:
 23751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23752 ;; Tracked objects:
 23753 ;;		On entry : 0/0
 23754 ;;		On exit  : 0/0
 23755 ;;		Unchanged: 0/0
 23756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23757 ;;      Params:         0       2       0       0       0       0       0       0       0
 23758 ;;      Locals:         0       2       0       0       0       0       0       0       0
 23759 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23760 ;;      Totals:         0       4       0       0       0       0       0       0       0
 23761 ;;Total ram usage:        4 bytes
 23762 ;; Hardware stack levels used:    1
 23763 ;; Hardware stack levels required when called:    7
 23764 ;; This function calls:
 23765 ;;		_enc424j600_writeControlRegisterUnbanked
 23766 ;; This function is called by:
 23767 ;;		_ethernetController_init
 23768 ;;		_ethernetController_dropPacket
 23769 ;; This function uses a non-reentrant model
 23770 ;;
 23771                           
 23772                           	psect	text99
 23773  0054F2                     __ptext99:
 23774                           	opt stack 0
 23775  0054F2                     _enc424j600_setRXTailPointer:
 23776                           	opt stack 19
 23777                           
 23778                           ;ENC424J600.c: 650: uint8_t lowByte = addr & 0x00ff;
 23779                           
 23780                           ; BSR set to: 0
 23781                           ;incstack = 0
 23782  0054F2  C06E  F070         	movff	enc424j600_setRXTailPointer@addr,enc424j600_setRXTailPointer@lowByte
 23783                           
 23784                           ;ENC424J600.c: 651: uint8_t highByte = (addr >> 8) & 0xff;
 23785  0054F6  0100               	movlb	0	; () banked
 23786  0054F8  516F               	movf	(enc424j600_setRXTailPointer@addr+1)& (0+255),w,b
 23787  0054FA  6F71               	movwf	enc424j600_setRXTailPointer@highByte& (0+255),b
 23788                           
 23789                           ; BSR set to: 0
 23790                           ;ENC424J600.c: 652: enc424j600_writeControlRegisterUnbanked(0x06 + 0x00, &lowByte);
 23791  0054FC  0E70               	movlw	low enc424j600_setRXTailPointer@lowByte
 23792  0054FE  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 23793  005500  0E00               	movlw	high enc424j600_setRXTailPointer@lowByte
 23794  005502  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 23795  005504  0E06               	movlw	6
 23796  005506  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 23797                           
 23798                           ;ENC424J600.c: 653: enc424j600_writeControlRegisterUnbanked(0x07 + 0x00, &highByte);
 23799  00550A  0E71               	movlw	low enc424j600_setRXTailPointer@highByte
 23800  00550C  0100               	movlb	0	; () banked
 23801  00550E  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 23802  005510  0E00               	movlw	high enc424j600_setRXTailPointer@highByte
 23803  005512  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 23804  005514  0E07               	movlw	7
 23805  005516  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 23806  00551A  0012               	return		;funcret
 23807  00551C                     __end_of_enc424j600_setRXTailPointer:
 23808                           	opt stack 0
 23809                           tblptru	equ	0xFF8
 23810                           tblptrh	equ	0xFF7
 23811                           tblptrl	equ	0xFF6
 23812                           tablat	equ	0xFF5
 23813                           prodh	equ	0xFF4
 23814                           prodl	equ	0xFF3
 23815                           intcon	equ	0xFF2
 23816                           intcon3	equ	0xFF0
 23817                           indf0	equ	0xFEF
 23818                           postinc0	equ	0xFEE
 23819                           plusw0	equ	0xFEB
 23820                           fsr0h	equ	0xFEA
 23821                           fsr0l	equ	0xFE9
 23822                           wreg	equ	0xFE8
 23823                           indf1	equ	0xFE7
 23824                           postinc1	equ	0xFE6
 23825                           postdec1	equ	0xFE5
 23826                           plusw1	equ	0xFE3
 23827                           fsr1h	equ	0xFE2
 23828                           fsr1l	equ	0xFE1
 23829                           indf2	equ	0xFDF
 23830                           postinc2	equ	0xFDE
 23831                           postdec2	equ	0xFDD
 23832                           plusw2	equ	0xFDB
 23833                           fsr2h	equ	0xFDA
 23834                           fsr2l	equ	0xFD9
 23835                           status	equ	0xFD8
 23836                           
 23837 ;; *************** function _enc424j600_setRXBufferStartAddress *****************
 23838 ;; Defined at:
 23839 ;;		line 642 in file "src/enc424j600/ENC424J600.c"
 23840 ;; Parameters:    Size  Location     Type
 23841 ;;  addr            2   14[BANK0 ] unsigned int 
 23842 ;; Auto vars:     Size  Location     Type
 23843 ;;  highByte        1   17[BANK0 ] unsigned char 
 23844 ;;  lowByte         1   16[BANK0 ] unsigned char 
 23845 ;; Return value:  Size  Location     Type
 23846 ;;                  1    wreg      void 
 23847 ;; Registers used:
 23848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23849 ;; Tracked objects:
 23850 ;;		On entry : 0/0
 23851 ;;		On exit  : 0/0
 23852 ;;		Unchanged: 0/0
 23853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23854 ;;      Params:         0       2       0       0       0       0       0       0       0
 23855 ;;      Locals:         0       2       0       0       0       0       0       0       0
 23856 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23857 ;;      Totals:         0       4       0       0       0       0       0       0       0
 23858 ;;Total ram usage:        4 bytes
 23859 ;; Hardware stack levels used:    1
 23860 ;; Hardware stack levels required when called:    7
 23861 ;; This function calls:
 23862 ;;		_enc424j600_writeControlRegisterUnbanked
 23863 ;; This function is called by:
 23864 ;;		_ethernetController_init
 23865 ;; This function uses a non-reentrant model
 23866 ;;
 23867                           
 23868                           	psect	text100
 23869  00551C                     __ptext100:
 23870                           	opt stack 0
 23871  00551C                     _enc424j600_setRXBufferStartAddress:
 23872                           	opt stack 22
 23873                           
 23874                           ;ENC424J600.c: 643: uint8_t lowByte = addr & 0x00ff;
 23875                           
 23876                           ;incstack = 0
 23877  00551C  C06E  F070         	movff	enc424j600_setRXBufferStartAddress@addr,enc424j600_setRXBufferStartAddress@lowByt
      +                          e
 23878                           
 23879                           ;ENC424J600.c: 644: uint8_t highByte = (addr >> 8) & 0xff;
 23880  005520  0100               	movlb	0	; () banked
 23881  005522  516F               	movf	(enc424j600_setRXBufferStartAddress@addr+1)& (0+255),w,b
 23882  005524  6F71               	movwf	enc424j600_setRXBufferStartAddress@highByte& (0+255),b
 23883                           
 23884                           ; BSR set to: 0
 23885                           ;ENC424J600.c: 645: enc424j600_writeControlRegisterUnbanked(0x04 + 0x00, &lowByte);
 23886  005526  0E70               	movlw	low enc424j600_setRXBufferStartAddress@lowByte
 23887  005528  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 23888  00552A  0E00               	movlw	high enc424j600_setRXBufferStartAddress@lowByte
 23889  00552C  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 23890  00552E  0E04               	movlw	4
 23891  005530  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 23892                           
 23893                           ;ENC424J600.c: 646: enc424j600_writeControlRegisterUnbanked(0x05 + 0x00, &highByte);
 23894  005534  0E71               	movlw	low enc424j600_setRXBufferStartAddress@highByte
 23895  005536  0100               	movlb	0	; () banked
 23896  005538  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 23897  00553A  0E00               	movlw	high enc424j600_setRXBufferStartAddress@highByte
 23898  00553C  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 23899  00553E  0E05               	movlw	5
 23900  005540  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 23901  005544  0012               	return		;funcret
 23902  005546                     __end_of_enc424j600_setRXBufferStartAddress:
 23903                           	opt stack 0
 23904                           tblptru	equ	0xFF8
 23905                           tblptrh	equ	0xFF7
 23906                           tblptrl	equ	0xFF6
 23907                           tablat	equ	0xFF5
 23908                           prodh	equ	0xFF4
 23909                           prodl	equ	0xFF3
 23910                           intcon	equ	0xFF2
 23911                           intcon3	equ	0xFF0
 23912                           indf0	equ	0xFEF
 23913                           postinc0	equ	0xFEE
 23914                           plusw0	equ	0xFEB
 23915                           fsr0h	equ	0xFEA
 23916                           fsr0l	equ	0xFE9
 23917                           wreg	equ	0xFE8
 23918                           indf1	equ	0xFE7
 23919                           postinc1	equ	0xFE6
 23920                           postdec1	equ	0xFE5
 23921                           plusw1	equ	0xFE3
 23922                           fsr1h	equ	0xFE2
 23923                           fsr1l	equ	0xFE1
 23924                           indf2	equ	0xFDF
 23925                           postinc2	equ	0xFDE
 23926                           postdec2	equ	0xFDD
 23927                           plusw2	equ	0xFDB
 23928                           fsr2h	equ	0xFDA
 23929                           fsr2l	equ	0xFD9
 23930                           status	equ	0xFD8
 23931                           
 23932 ;; *************** function _enc424j600_setNextPacketPointer *****************
 23933 ;; Defined at:
 23934 ;;		line 586 in file "src/enc424j600/ENC424J600.c"
 23935 ;; Parameters:    Size  Location     Type
 23936 ;;  ptr             2    0[BANK0 ] unsigned int 
 23937 ;; Auto vars:     Size  Location     Type
 23938 ;;		None
 23939 ;; Return value:  Size  Location     Type
 23940 ;;                  1    wreg      void 
 23941 ;; Registers used:
 23942 ;;		None
 23943 ;; Tracked objects:
 23944 ;;		On entry : 0/0
 23945 ;;		On exit  : 0/0
 23946 ;;		Unchanged: 0/0
 23947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23948 ;;      Params:         0       2       0       0       0       0       0       0       0
 23949 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23950 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23951 ;;      Totals:         0       2       0       0       0       0       0       0       0
 23952 ;;Total ram usage:        2 bytes
 23953 ;; Hardware stack levels used:    1
 23954 ;; Hardware stack levels required when called:    4
 23955 ;; This function calls:
 23956 ;;		Nothing
 23957 ;; This function is called by:
 23958 ;;		_ethernetController_init
 23959 ;;		_ethernetController_updateNextPacketPointer
 23960 ;; This function uses a non-reentrant model
 23961 ;;
 23962                           
 23963                           	psect	text101
 23964  005838                     __ptext101:
 23965                           	opt stack 0
 23966  005838                     _enc424j600_setNextPacketPointer:
 23967                           	opt stack 23
 23968                           
 23969                           ;ENC424J600.c: 587: nextPacketPointer = ptr;
 23970                           
 23971                           ;incstack = 0
 23972  005838  C060  F042         	movff	enc424j600_setNextPacketPointer@ptr,_nextPacketPointer
 23973  00583C  C061  F043         	movff	enc424j600_setNextPacketPointer@ptr+1,_nextPacketPointer+1
 23974  005840  0012               	return		;funcret
 23975  005842                     __end_of_enc424j600_setNextPacketPointer:
 23976                           	opt stack 0
 23977                           tblptru	equ	0xFF8
 23978                           tblptrh	equ	0xFF7
 23979                           tblptrl	equ	0xFF6
 23980                           tablat	equ	0xFF5
 23981                           prodh	equ	0xFF4
 23982                           prodl	equ	0xFF3
 23983                           intcon	equ	0xFF2
 23984                           intcon3	equ	0xFF0
 23985                           indf0	equ	0xFEF
 23986                           postinc0	equ	0xFEE
 23987                           plusw0	equ	0xFEB
 23988                           fsr0h	equ	0xFEA
 23989                           fsr0l	equ	0xFE9
 23990                           wreg	equ	0xFE8
 23991                           indf1	equ	0xFE7
 23992                           postinc1	equ	0xFE6
 23993                           postdec1	equ	0xFE5
 23994                           plusw1	equ	0xFE3
 23995                           fsr1h	equ	0xFE2
 23996                           fsr1l	equ	0xFE1
 23997                           indf2	equ	0xFDF
 23998                           postinc2	equ	0xFDE
 23999                           postdec2	equ	0xFDD
 24000                           plusw2	equ	0xFDB
 24001                           fsr2h	equ	0xFDA
 24002                           fsr2l	equ	0xFD9
 24003                           status	equ	0xFD8
 24004                           
 24005 ;; *************** function _enc424j600_enableReception *****************
 24006 ;; Defined at:
 24007 ;;		line 672 in file "src/enc424j600/ENC424J600.c"
 24008 ;; Parameters:    Size  Location     Type
 24009 ;;		None
 24010 ;; Auto vars:     Size  Location     Type
 24011 ;;		None
 24012 ;; Return value:  Size  Location     Type
 24013 ;;                  1    wreg      void 
 24014 ;; Registers used:
 24015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24016 ;; Tracked objects:
 24017 ;;		On entry : 0/0
 24018 ;;		On exit  : 0/0
 24019 ;;		Unchanged: 0/0
 24020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24021 ;;      Params:         0       0       0       0       0       0       0       0       0
 24022 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24023 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24024 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24025 ;;Total ram usage:        0 bytes
 24026 ;; Hardware stack levels used:    1
 24027 ;; Hardware stack levels required when called:    7
 24028 ;; This function calls:
 24029 ;;		_enc424j600_writeSingleByte
 24030 ;; This function is called by:
 24031 ;;		_ethernetController_init
 24032 ;;		_ethernetController_enableReception
 24033 ;; This function uses a non-reentrant model
 24034 ;;
 24035                           
 24036                           	psect	text102
 24037  005842                     __ptext102:
 24038                           	opt stack 0
 24039  005842                     _enc424j600_enableReception:
 24040                           	opt stack 22
 24041                           
 24042                           ;ENC424J600.c: 673: enc424j600_writeSingleByte(0b11101000);
 24043                           
 24044                           ;incstack = 0
 24045  005842  0EE8               	movlw	232
 24046  005844  ECAA  F02B         	call	_enc424j600_writeSingleByte
 24047  005848  0012               	return		;funcret
 24048  00584A                     __end_of_enc424j600_enableReception:
 24049                           	opt stack 0
 24050                           tblptru	equ	0xFF8
 24051                           tblptrh	equ	0xFF7
 24052                           tblptrl	equ	0xFF6
 24053                           tablat	equ	0xFF5
 24054                           prodh	equ	0xFF4
 24055                           prodl	equ	0xFF3
 24056                           intcon	equ	0xFF2
 24057                           intcon3	equ	0xFF0
 24058                           indf0	equ	0xFEF
 24059                           postinc0	equ	0xFEE
 24060                           plusw0	equ	0xFEB
 24061                           fsr0h	equ	0xFEA
 24062                           fsr0l	equ	0xFE9
 24063                           wreg	equ	0xFE8
 24064                           indf1	equ	0xFE7
 24065                           postinc1	equ	0xFE6
 24066                           postdec1	equ	0xFE5
 24067                           plusw1	equ	0xFE3
 24068                           fsr1h	equ	0xFE2
 24069                           fsr1l	equ	0xFE1
 24070                           indf2	equ	0xFDF
 24071                           postinc2	equ	0xFDE
 24072                           postdec2	equ	0xFDD
 24073                           plusw2	equ	0xFDB
 24074                           fsr2h	equ	0xFDA
 24075                           fsr2l	equ	0xFD9
 24076                           status	equ	0xFD8
 24077                           
 24078 ;; *************** function _enc424j600_writeSingleByte *****************
 24079 ;; Defined at:
 24080 ;;		line 512 in file "src/enc424j600/ENC424J600.c"
 24081 ;; Parameters:    Size  Location     Type
 24082 ;;  opcode          1    wreg     unsigned char 
 24083 ;; Auto vars:     Size  Location     Type
 24084 ;;  opcode          1   10[BANK0 ] unsigned char 
 24085 ;; Return value:  Size  Location     Type
 24086 ;;                  1    wreg      void 
 24087 ;; Registers used:
 24088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24089 ;; Tracked objects:
 24090 ;;		On entry : 0/0
 24091 ;;		On exit  : 0/0
 24092 ;;		Unchanged: 0/0
 24093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24094 ;;      Params:         0       0       0       0       0       0       0       0       0
 24095 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24096 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24097 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24098 ;;Total ram usage:        1 bytes
 24099 ;; Hardware stack levels used:    1
 24100 ;; Hardware stack levels required when called:    6
 24101 ;; This function calls:
 24102 ;;		_enc424j600_writeSPI
 24103 ;; This function is called by:
 24104 ;;		_ethernetController_softReset
 24105 ;;		_ethernetController_sendPacket
 24106 ;;		_ethernetController_dropPacket
 24107 ;;		_enc424j600_enableReception
 24108 ;;		_enc424j600_disableReception
 24109 ;; This function uses a non-reentrant model
 24110 ;;
 24111                           
 24112                           	psect	text103
 24113  005754                     __ptext103:
 24114                           	opt stack 0
 24115  005754                     _enc424j600_writeSingleByte:
 24116                           	opt stack 21
 24117                           
 24118                           ;incstack = 0
 24119                           ;enc424j600_writeSingleByte@opcode stored from wreg
 24120  005754  0100               	movlb	0	; () banked
 24121  005756  6F6A               	movwf	enc424j600_writeSingleByte@opcode& (0+255),b
 24122                           
 24123                           ;ENC424J600.c: 513: PORTBbits.RB4=0;
 24124  005758  9881               	bcf	3969,4,c	;volatile
 24125                           
 24126                           ;ENC424J600.c: 514: enc424j600_writeSPI(&opcode);
 24127  00575A  0E6A               	movlw	low enc424j600_writeSingleByte@opcode
 24128  00575C  0100               	movlb	0	; () banked
 24129  00575E  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 24130  005760  0E00               	movlw	high enc424j600_writeSingleByte@opcode
 24131  005762  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 24132  005764  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 24133                           
 24134                           ;ENC424J600.c: 515: PORTBbits.RB4=1;
 24135  005768  8881               	bsf	3969,4,c	;volatile
 24136  00576A  0012               	return		;funcret
 24137  00576C                     __end_of_enc424j600_writeSingleByte:
 24138                           	opt stack 0
 24139                           tblptru	equ	0xFF8
 24140                           tblptrh	equ	0xFF7
 24141                           tblptrl	equ	0xFF6
 24142                           tablat	equ	0xFF5
 24143                           prodh	equ	0xFF4
 24144                           prodl	equ	0xFF3
 24145                           intcon	equ	0xFF2
 24146                           intcon3	equ	0xFF0
 24147                           indf0	equ	0xFEF
 24148                           postinc0	equ	0xFEE
 24149                           plusw0	equ	0xFEB
 24150                           fsr0h	equ	0xFEA
 24151                           fsr0l	equ	0xFE9
 24152                           wreg	equ	0xFE8
 24153                           indf1	equ	0xFE7
 24154                           postinc1	equ	0xFE6
 24155                           postdec1	equ	0xFE5
 24156                           plusw1	equ	0xFE3
 24157                           fsr1h	equ	0xFE2
 24158                           fsr1l	equ	0xFE1
 24159                           indf2	equ	0xFDF
 24160                           postinc2	equ	0xFDE
 24161                           postdec2	equ	0xFDD
 24162                           plusw2	equ	0xFDB
 24163                           fsr2h	equ	0xFDA
 24164                           fsr2l	equ	0xFD9
 24165                           status	equ	0xFD8
 24166                           
 24167 ;; *************** function _enc424j600_enableAutoMACInsertion *****************
 24168 ;; Defined at:
 24169 ;;		line 658 in file "src/enc424j600/ENC424J600.c"
 24170 ;; Parameters:    Size  Location     Type
 24171 ;;		None
 24172 ;; Auto vars:     Size  Location     Type
 24173 ;;  temp            1   14[BANK0 ] unsigned char 
 24174 ;; Return value:  Size  Location     Type
 24175 ;;                  1    wreg      void 
 24176 ;; Registers used:
 24177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24178 ;; Tracked objects:
 24179 ;;		On entry : 0/0
 24180 ;;		On exit  : 0/0
 24181 ;;		Unchanged: 0/0
 24182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24183 ;;      Params:         0       0       0       0       0       0       0       0       0
 24184 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24185 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24186 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24187 ;;Total ram usage:        1 bytes
 24188 ;; Hardware stack levels used:    1
 24189 ;; Hardware stack levels required when called:    7
 24190 ;; This function calls:
 24191 ;;		_enc424j600_readControlRegisterUnbanked
 24192 ;;		_enc424j600_writeControlRegisterUnbanked
 24193 ;; This function is called by:
 24194 ;;		_ethernetController_init
 24195 ;; This function uses a non-reentrant model
 24196 ;;
 24197                           
 24198                           	psect	text104
 24199  0055BE                     __ptext104:
 24200                           	opt stack 0
 24201  0055BE                     _enc424j600_enableAutoMACInsertion:
 24202                           	opt stack 22
 24203                           
 24204                           ;ENC424J600.c: 659: uint8_t temp = 0;
 24205                           
 24206                           ;incstack = 0
 24207  0055BE  0E00               	movlw	0
 24208  0055C0  0100               	movlb	0	; () banked
 24209  0055C2  6F6E               	movwf	enc424j600_enableAutoMACInsertion@temp& (0+255),b
 24210                           
 24211                           ; BSR set to: 0
 24212                           ;ENC424J600.c: 660: enc424j600_readControlRegisterUnbanked(0x0F + 0x60, &temp);
 24213  0055C4  0E6E               	movlw	low enc424j600_enableAutoMACInsertion@temp
 24214  0055C6  6F6A               	movwf	enc424j600_readControlRegisterUnbanked@data& (0+255),b
 24215  0055C8  0E00               	movlw	high enc424j600_enableAutoMACInsertion@temp
 24216  0055CA  6F6B               	movwf	(enc424j600_readControlRegisterUnbanked@data+1)& (0+255),b
 24217  0055CC  0E6F               	movlw	111
 24218  0055CE  ECBD  F029         	call	_enc424j600_readControlRegisterUnbanked
 24219                           
 24220                           ;ENC424J600.c: 661: temp |= (1 << 5);
 24221  0055D2  0100               	movlb	0	; () banked
 24222  0055D4  8B6E               	bsf	enc424j600_enableAutoMACInsertion@temp& (0+255),5,b
 24223                           
 24224                           ; BSR set to: 0
 24225                           ;ENC424J600.c: 662: enc424j600_writeControlRegisterUnbanked(0x0F + 0x60, &temp);
 24226  0055D6  0E6E               	movlw	low enc424j600_enableAutoMACInsertion@temp
 24227  0055D8  6F6A               	movwf	enc424j600_writeControlRegisterUnbanked@data& (0+255),b
 24228  0055DA  0E00               	movlw	high enc424j600_enableAutoMACInsertion@temp
 24229  0055DC  6F6B               	movwf	(enc424j600_writeControlRegisterUnbanked@data+1)& (0+255),b
 24230  0055DE  0E6F               	movlw	111
 24231  0055E0  ECA2  F029         	call	_enc424j600_writeControlRegisterUnbanked
 24232  0055E4  0012               	return		;funcret
 24233  0055E6                     __end_of_enc424j600_enableAutoMACInsertion:
 24234                           	opt stack 0
 24235                           tblptru	equ	0xFF8
 24236                           tblptrh	equ	0xFF7
 24237                           tblptrl	equ	0xFF6
 24238                           tablat	equ	0xFF5
 24239                           prodh	equ	0xFF4
 24240                           prodl	equ	0xFF3
 24241                           intcon	equ	0xFF2
 24242                           intcon3	equ	0xFF0
 24243                           indf0	equ	0xFEF
 24244                           postinc0	equ	0xFEE
 24245                           plusw0	equ	0xFEB
 24246                           fsr0h	equ	0xFEA
 24247                           fsr0l	equ	0xFE9
 24248                           wreg	equ	0xFE8
 24249                           indf1	equ	0xFE7
 24250                           postinc1	equ	0xFE6
 24251                           postdec1	equ	0xFE5
 24252                           plusw1	equ	0xFE3
 24253                           fsr1h	equ	0xFE2
 24254                           fsr1l	equ	0xFE1
 24255                           indf2	equ	0xFDF
 24256                           postinc2	equ	0xFDE
 24257                           postdec2	equ	0xFDD
 24258                           plusw2	equ	0xFDB
 24259                           fsr2h	equ	0xFDA
 24260                           fsr2l	equ	0xFD9
 24261                           status	equ	0xFD8
 24262                           
 24263 ;; *************** function _enc424j600_writeControlRegisterUnbanked *****************
 24264 ;; Defined at:
 24265 ;;		line 518 in file "src/enc424j600/ENC424J600.c"
 24266 ;; Parameters:    Size  Location     Type
 24267 ;;  addr            1    wreg     unsigned char 
 24268 ;;  data            2   10[BANK0 ] PTR unsigned char 
 24269 ;;		 -> enc424j600_clearInterruptFlag@temp(1), enc424j600_disable@temp(1), enc424j600_enable@temp(1), enc424j600_disable
      +AutoMACInsertion@temp(1), 
 24270 ;;		 -> enc424j600_enableAutoMACInsertion@temp(1), enc424j600_setRXTailPointer@highByte(1), enc424j600_setRXTailPointer@
      +lowByte(1), enc424j600_setRXBufferStartAddress@highByte(1), 
 24271 ;;		 -> enc424j600_setRXBufferStartAddress@lowByte(1), enc424j600_setTXStartAddress@highByte(1), enc424j600_setTXStartAd
      +dress@lowByte(1), enc424j600_setTXLength@highByte(1), 
 24272 ;;		 -> enc424j600_setTXLength@lowByte(1), enc424j600_readPHYRegister@temp(1), enc424j600_readPHYRegister@unusedBits(1),
      + enc424j600_readPHYRegister@PHYaddress(1), 
 24273 ;;		 -> ethernetController_setLEDConfig@data(1), mac.address(6), ethernetController_setMacAddress@mac(6), ethernetContro
      +ller_softReset@dataToSend(2), 
 24274 ;; Auto vars:     Size  Location     Type
 24275 ;;  addr            1   12[BANK0 ] unsigned char 
 24276 ;;  opcode          1   13[BANK0 ] unsigned char 
 24277 ;; Return value:  Size  Location     Type
 24278 ;;                  1    wreg      void 
 24279 ;; Registers used:
 24280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24281 ;; Tracked objects:
 24282 ;;		On entry : 0/0
 24283 ;;		On exit  : 0/0
 24284 ;;		Unchanged: 0/0
 24285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24286 ;;      Params:         0       2       0       0       0       0       0       0       0
 24287 ;;      Locals:         0       2       0       0       0       0       0       0       0
 24288 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24289 ;;      Totals:         0       4       0       0       0       0       0       0       0
 24290 ;;Total ram usage:        4 bytes
 24291 ;; Hardware stack levels used:    1
 24292 ;; Hardware stack levels required when called:    6
 24293 ;; This function calls:
 24294 ;;		_enc424j600_writeSPI
 24295 ;; This function is called by:
 24296 ;;		_ethernetController_softReset
 24297 ;;		_ethernetController_setLEDConfig
 24298 ;;		_enc424j600_readPHYRegister
 24299 ;;		_enc424j600_setTXLength
 24300 ;;		_enc424j600_setTXStartAddress
 24301 ;;		_enc424j600_setRXBufferStartAddress
 24302 ;;		_enc424j600_setRXTailPointer
 24303 ;;		_enc424j600_enableAutoMACInsertion
 24304 ;;		_enc424j600_clearInterruptFlag
 24305 ;;		_ethernetController_setMacAddress
 24306 ;;		_enc424j600_disableAutoMACInsertion
 24307 ;;		_enc424j600_enable
 24308 ;;		_enc424j600_disable
 24309 ;; This function uses a non-reentrant model
 24310 ;;
 24311                           
 24312                           	psect	text105
 24313  005344                     __ptext105:
 24314                           	opt stack 0
 24315  005344                     _enc424j600_writeControlRegisterUnbanked:
 24316                           	opt stack 20
 24317                           
 24318                           ;incstack = 0
 24319                           ;enc424j600_writeControlRegisterUnbanked@addr stored from wreg
 24320  005344  0100               	movlb	0	; () banked
 24321  005346  6F6C               	movwf	enc424j600_writeControlRegisterUnbanked@addr& (0+255),b
 24322                           
 24323                           ;ENC424J600.c: 519: uint8_t opcode = 0x22;
 24324  005348  0E22               	movlw	34
 24325  00534A  0100               	movlb	0	; () banked
 24326  00534C  6F6D               	movwf	enc424j600_writeControlRegisterUnbanked@opcode& (0+255),b
 24327                           
 24328                           ; BSR set to: 0
 24329                           ;ENC424J600.c: 520: PORTBbits.RB4=0;
 24330  00534E  9881               	bcf	3969,4,c	;volatile
 24331                           
 24332                           ; BSR set to: 0
 24333                           ;ENC424J600.c: 521: enc424j600_writeSPI(&opcode);
 24334  005350  0E6D               	movlw	low enc424j600_writeControlRegisterUnbanked@opcode
 24335  005352  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 24336  005354  0E00               	movlw	high enc424j600_writeControlRegisterUnbanked@opcode
 24337  005356  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 24338  005358  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 24339                           
 24340                           ;ENC424J600.c: 522: enc424j600_writeSPI(&addr);
 24341  00535C  0E6C               	movlw	low enc424j600_writeControlRegisterUnbanked@addr
 24342  00535E  0100               	movlb	0	; () banked
 24343  005360  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 24344  005362  0E00               	movlw	high enc424j600_writeControlRegisterUnbanked@addr
 24345  005364  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 24346  005366  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 24347                           
 24348                           ;ENC424J600.c: 523: enc424j600_writeSPI(data);
 24349  00536A  C06A  F060         	movff	enc424j600_writeControlRegisterUnbanked@data,enc424j600_writeSPI@data
 24350  00536E  C06B  F061         	movff	enc424j600_writeControlRegisterUnbanked@data+1,enc424j600_writeSPI@data+1
 24351  005372  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 24352                           
 24353                           ;ENC424J600.c: 524: PORTBbits.RB4=1;
 24354  005376  8881               	bsf	3969,4,c	;volatile
 24355  005378  0012               	return		;funcret
 24356  00537A                     __end_of_enc424j600_writeControlRegisterUnbanked:
 24357                           	opt stack 0
 24358                           tblptru	equ	0xFF8
 24359                           tblptrh	equ	0xFF7
 24360                           tblptrl	equ	0xFF6
 24361                           tablat	equ	0xFF5
 24362                           prodh	equ	0xFF4
 24363                           prodl	equ	0xFF3
 24364                           intcon	equ	0xFF2
 24365                           intcon3	equ	0xFF0
 24366                           indf0	equ	0xFEF
 24367                           postinc0	equ	0xFEE
 24368                           plusw0	equ	0xFEB
 24369                           fsr0h	equ	0xFEA
 24370                           fsr0l	equ	0xFE9
 24371                           wreg	equ	0xFE8
 24372                           indf1	equ	0xFE7
 24373                           postinc1	equ	0xFE6
 24374                           postdec1	equ	0xFE5
 24375                           plusw1	equ	0xFE3
 24376                           fsr1h	equ	0xFE2
 24377                           fsr1l	equ	0xFE1
 24378                           indf2	equ	0xFDF
 24379                           postinc2	equ	0xFDE
 24380                           postdec2	equ	0xFDD
 24381                           plusw2	equ	0xFDB
 24382                           fsr2h	equ	0xFDA
 24383                           fsr2l	equ	0xFD9
 24384                           status	equ	0xFD8
 24385                           
 24386 ;; *************** function _enc424j600_readControlRegisterUnbanked *****************
 24387 ;; Defined at:
 24388 ;;		line 527 in file "src/enc424j600/ENC424J600.c"
 24389 ;; Parameters:    Size  Location     Type
 24390 ;;  addr            1    wreg     unsigned char 
 24391 ;;  data            2   10[BANK0 ] PTR unsigned char 
 24392 ;;		 -> enc424j600_clearInterruptFlag@temp(1), enc424j600_getInterruptFlags@high(1), enc424j600_getInterruptFlags@low(1)
      +, enc424j600_disable@temp(1), 
 24393 ;;		 -> enc424j600_enable@temp(1), enc424j600_disableAutoMACInsertion@temp(1), enc424j600_enableAutoMACInsertion@temp(1)
      +, enc424j600_getPacketCount@lowByte(1), 
 24394 ;;		 -> enc424j600_readPHYRegister@highByte(1), enc424j600_readPHYRegister@lowByte(1), enc424j600_readPHYRegister@temp(1
      +), ethernetController_setLEDConfig@data(1), 
 24395 ;;		 -> ethernetController_updateLinkStatus@temp(1), mac.address(6), ethernetController_getMacAddress@mac(6), ethernetCo
      +ntroller_getSiliconRevision@data(1), 
 24396 ;;		 -> ethernetController_checkDeviceId@data(1), ethernetController_softReset@receivedData(2), 
 24397 ;; Auto vars:     Size  Location     Type
 24398 ;;  addr            1   12[BANK0 ] unsigned char 
 24399 ;;  opcode          1   13[BANK0 ] unsigned char 
 24400 ;; Return value:  Size  Location     Type
 24401 ;;                  1    wreg      void 
 24402 ;; Registers used:
 24403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24404 ;; Tracked objects:
 24405 ;;		On entry : 0/0
 24406 ;;		On exit  : 0/0
 24407 ;;		Unchanged: 0/0
 24408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24409 ;;      Params:         0       2       0       0       0       0       0       0       0
 24410 ;;      Locals:         0       2       0       0       0       0       0       0       0
 24411 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24412 ;;      Totals:         0       4       0       0       0       0       0       0       0
 24413 ;;Total ram usage:        4 bytes
 24414 ;; Hardware stack levels used:    1
 24415 ;; Hardware stack levels required when called:    6
 24416 ;; This function calls:
 24417 ;;		_enc424j600_readSPI
 24418 ;;		_enc424j600_writeSPI
 24419 ;; This function is called by:
 24420 ;;		_ethernetController_softReset
 24421 ;;		_ethernetController_checkDeviceId
 24422 ;;		_ethernetController_getMacAddress
 24423 ;;		_ethernetController_updateLinkStatus
 24424 ;;		_ethernetController_setLEDConfig
 24425 ;;		_enc424j600_readPHYRegister
 24426 ;;		_enc424j600_getPacketCount
 24427 ;;		_enc424j600_enableAutoMACInsertion
 24428 ;;		_enc424j600_getInterruptFlags
 24429 ;;		_enc424j600_clearInterruptFlag
 24430 ;;		_ethernetController_getSiliconRevision
 24431 ;;		_enc424j600_disableAutoMACInsertion
 24432 ;;		_enc424j600_enable
 24433 ;;		_enc424j600_disable
 24434 ;; This function uses a non-reentrant model
 24435 ;;
 24436                           
 24437                           	psect	text106
 24438  00537A                     __ptext106:
 24439                           	opt stack 0
 24440  00537A                     _enc424j600_readControlRegisterUnbanked:
 24441                           	opt stack 21
 24442                           
 24443                           ;incstack = 0
 24444                           ;enc424j600_readControlRegisterUnbanked@addr stored from wreg
 24445  00537A  0100               	movlb	0	; () banked
 24446  00537C  6F6C               	movwf	enc424j600_readControlRegisterUnbanked@addr& (0+255),b
 24447                           
 24448                           ;ENC424J600.c: 528: uint8_t opcode = 0x20;
 24449  00537E  0E20               	movlw	32
 24450  005380  0100               	movlb	0	; () banked
 24451  005382  6F6D               	movwf	enc424j600_readControlRegisterUnbanked@opcode& (0+255),b
 24452                           
 24453                           ; BSR set to: 0
 24454                           ;ENC424J600.c: 529: PORTBbits.RB4=0;
 24455  005384  9881               	bcf	3969,4,c	;volatile
 24456                           
 24457                           ; BSR set to: 0
 24458                           ;ENC424J600.c: 530: enc424j600_writeSPI(&opcode);
 24459  005386  0E6D               	movlw	low enc424j600_readControlRegisterUnbanked@opcode
 24460  005388  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 24461  00538A  0E00               	movlw	high enc424j600_readControlRegisterUnbanked@opcode
 24462  00538C  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 24463  00538E  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 24464                           
 24465                           ;ENC424J600.c: 531: enc424j600_writeSPI(&addr);
 24466  005392  0E6C               	movlw	low enc424j600_readControlRegisterUnbanked@addr
 24467  005394  0100               	movlb	0	; () banked
 24468  005396  6F60               	movwf	enc424j600_writeSPI@data& (0+255),b
 24469  005398  0E00               	movlw	high enc424j600_readControlRegisterUnbanked@addr
 24470  00539A  6F61               	movwf	(enc424j600_writeSPI@data+1)& (0+255),b
 24471  00539C  EC6F  F026         	call	_enc424j600_writeSPI	;wreg free
 24472                           
 24473                           ;ENC424J600.c: 532: enc424j600_readSPI(data);
 24474  0053A0  C06A  F060         	movff	enc424j600_readControlRegisterUnbanked@data,enc424j600_readSPI@data
 24475  0053A4  C06B  F061         	movff	enc424j600_readControlRegisterUnbanked@data+1,enc424j600_readSPI@data+1
 24476  0053A8  EC06  F026         	call	_enc424j600_readSPI	;wreg free
 24477                           
 24478                           ;ENC424J600.c: 533: PORTBbits.RB4=1;
 24479  0053AC  8881               	bsf	3969,4,c	;volatile
 24480  0053AE  0012               	return		;funcret
 24481  0053B0                     __end_of_enc424j600_readControlRegisterUnbanked:
 24482                           	opt stack 0
 24483                           tblptru	equ	0xFF8
 24484                           tblptrh	equ	0xFF7
 24485                           tblptrl	equ	0xFF6
 24486                           tablat	equ	0xFF5
 24487                           prodh	equ	0xFF4
 24488                           prodl	equ	0xFF3
 24489                           intcon	equ	0xFF2
 24490                           intcon3	equ	0xFF0
 24491                           indf0	equ	0xFEF
 24492                           postinc0	equ	0xFEE
 24493                           plusw0	equ	0xFEB
 24494                           fsr0h	equ	0xFEA
 24495                           fsr0l	equ	0xFE9
 24496                           wreg	equ	0xFE8
 24497                           indf1	equ	0xFE7
 24498                           postinc1	equ	0xFE6
 24499                           postdec1	equ	0xFE5
 24500                           plusw1	equ	0xFE3
 24501                           fsr1h	equ	0xFE2
 24502                           fsr1l	equ	0xFE1
 24503                           indf2	equ	0xFDF
 24504                           postinc2	equ	0xFDE
 24505                           postdec2	equ	0xFDD
 24506                           plusw2	equ	0xFDB
 24507                           fsr2h	equ	0xFDA
 24508                           fsr2l	equ	0xFD9
 24509                           status	equ	0xFD8
 24510                           
 24511 ;; *************** function _enc424j600_writeSPI *****************
 24512 ;; Defined at:
 24513 ;;		line 487 in file "src/enc424j600/ENC424J600.c"
 24514 ;; Parameters:    Size  Location     Type
 24515 ;;  data            2    0[BANK0 ] PTR unsigned char 
 24516 ;;		 -> enc424j600_clearInterruptFlag@temp(1), enc424j600_disable@temp(1), enc424j600_enable@temp(1), enc424j600_disable
      +AutoMACInsertion@temp(1), 
 24517 ;;		 -> enc424j600_enableAutoMACInsertion@temp(1), enc424j600_setRXTailPointer@highByte(1), enc424j600_setRXTailPointer@
      +lowByte(1), enc424j600_setRXBufferStartAddress@highByte(1), 
 24518 ;;		 -> enc424j600_setRXBufferStartAddress@lowByte(1), enc424j600_setERXDATAReadPointer@highByte(1), enc424j600_setERXDA
      +TAReadPointer@lowByte(1), enc424j600_setERXDATAReadPointer@opcode(1), 
 24519 ;;		 -> enc424j600_setGPDATAReadPointer@highByte(1), enc424j600_setGPDATAReadPointer@lowByte(1), enc424j600_setGPDATARea
      +dPointer@opcode(1), enc424j600_setGPDATAWritePointer@highByte(1), 
 24520 ;;		 -> enc424j600_setGPDATAWritePointer@lowByte(1), enc424j600_setGPDATAWritePointer@opcode(1), enc424j600_setTXStartAd
      +dress@highByte(1), enc424j600_setTXStartAddress@lowByte(1), 
 24521 ;;		 -> enc424j600_setTXLength@highByte(1), enc424j600_setTXLength@lowByte(1), enc424j600_readPHYRegister@temp(1), enc42
      +4j600_readPHYRegister@unusedBits(1), 
 24522 ;;		 -> enc424j600_readPHYRegister@PHYaddress(1), enc424j600_readControlRegisterUnbanked@addr(1), enc424j600_readControl
      +RegisterUnbanked@opcode(1), enc424j600_writeControlRegisterUnbanked@addr(1), 
 24523 ;;		 -> enc424j600_writeControlRegisterUnbanked@opcode(1), enc424j600_writeSingleByte@opcode(1), ethernetController_setL
      +EDConfig@data(1), ethernetController_streamFromRXBuffer@opcode(1), 
 24524 ;;		 -> ethernetController_updateNextPacketPointer@opcode(1), ethernetController_getRSV@opcode(1), ethernetController_ge
      +tEtherTypeField@opcode(1), ethernetController_getSourceMACAddress@opcode(1), 
 24525 ;;		 -> ethernetController_getDestinationMACAddress@opcode(1), ethernetController_writeEtherTypeFieldToBuffer@opcode(1),
      + ethernetController_writeEtherTypeFieldToBuffer@highByte(1), ethernetController_writeEtherTypeFieldToBuffer@lowByte(1), 
 24526 ;;		 -> ethernetController_writeDestinationMACAddress@opcode(1), ethernetController_writeDestinationMACAddress@data(6), 
      +ethernetController_streamToTransmitBuffer@data(1), ethernetController_streamToTransmitBuffer@opcode(1), 
 24527 ;;		 -> mac.address(6), ethernetController_setMacAddress@mac(6), ethernetController_softReset@dataToSend(2), 
 24528 ;; Auto vars:     Size  Location     Type
 24529 ;;  timeoutCount    4    6[BANK0 ] unsigned long 
 24530 ;; Return value:  Size  Location     Type
 24531 ;;                  1    wreg      void 
 24532 ;; Registers used:
 24533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24534 ;; Tracked objects:
 24535 ;;		On entry : 0/0
 24536 ;;		On exit  : 0/0
 24537 ;;		Unchanged: 0/0
 24538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24539 ;;      Params:         0       2       0       0       0       0       0       0       0
 24540 ;;      Locals:         0       4       0       0       0       0       0       0       0
 24541 ;;      Temps:          0       4       0       0       0       0       0       0       0
 24542 ;;      Totals:         0      10       0       0       0       0       0       0       0
 24543 ;;Total ram usage:       10 bytes
 24544 ;; Hardware stack levels used:    1
 24545 ;; Hardware stack levels required when called:    5
 24546 ;; This function calls:
 24547 ;;		_enc424j600_initSPI
 24548 ;; This function is called by:
 24549 ;;		_ethernetController_streamToTransmitBuffer
 24550 ;;		_ethernetController_writeDestinationMACAddress
 24551 ;;		_ethernetController_writeEtherTypeFieldToBuffer
 24552 ;;		_ethernetController_getSourceMACAddress
 24553 ;;		_ethernetController_getEtherTypeField
 24554 ;;		_ethernetController_getRSV
 24555 ;;		_ethernetController_updateNextPacketPointer
 24556 ;;		_ethernetController_streamFromRXBuffer
 24557 ;;		_enc424j600_writeSingleByte
 24558 ;;		_enc424j600_writeControlRegisterUnbanked
 24559 ;;		_enc424j600_readControlRegisterUnbanked
 24560 ;;		_enc424j600_setGPDATAWritePointer
 24561 ;;		_enc424j600_setERXDATAReadPointer
 24562 ;;		_ethernetController_getDestinationMACAddress
 24563 ;;		_enc424j600_setGPDATAReadPointer
 24564 ;; This function uses a non-reentrant model
 24565 ;;
 24566                           
 24567                           	psect	text107
 24568  004CDE                     __ptext107:
 24569                           	opt stack 0
 24570  004CDE                     _enc424j600_writeSPI:
 24571                           	opt stack 22
 24572                           
 24573                           ;ENC424J600.c: 489: uint32_t timeoutCounter = 0;
 24574                           
 24575                           ;incstack = 0
 24576  004CDE  0E00               	movlw	0
 24577  004CE0  0100               	movlb	0	; () banked
 24578  004CE2  6F66               	movwf	enc424j600_writeSPI@timeoutCounter& (0+255),b
 24579  004CE4  0E00               	movlw	0
 24580  004CE6  6F67               	movwf	(enc424j600_writeSPI@timeoutCounter+1)& (0+255),b
 24581  004CE8  0E00               	movlw	0
 24582  004CEA  6F68               	movwf	(enc424j600_writeSPI@timeoutCounter+2)& (0+255),b
 24583  004CEC  0E00               	movlw	0
 24584  004CEE  6F69               	movwf	(enc424j600_writeSPI@timeoutCounter+3)& (0+255),b
 24585                           
 24586                           ; BSR set to: 0
 24587                           ;ENC424J600.c: 490: SSP1BUF = *data;
 24588  004CF0  C060  FFD9         	movff	enc424j600_writeSPI@data,fsr2l
 24589  004CF4  C061  FFDA         	movff	enc424j600_writeSPI@data+1,fsr2h
 24590  004CF8  50DF               	movf	indf2,w,c
 24591  004CFA  6EC9               	movwf	4041,c	;volatile
 24592  004CFC                     
 24593                           ; BSR set to: 0
 24594                           
 24595                           ; BSR set to: 0
 24596  004CFC  B0C7               	btfsc	4039,0,c	;volatile
 24597  004CFE  D015               	goto	u8760
 24598                           
 24599                           ; BSR set to: 0
 24600  004D00  C066  F062         	movff	enc424j600_writeSPI@timeoutCounter,??_enc424j600_writeSPI
 24601  004D04  C067  F063         	movff	enc424j600_writeSPI@timeoutCounter+1,??_enc424j600_writeSPI+1
 24602  004D08  C068  F064         	movff	enc424j600_writeSPI@timeoutCounter+2,??_enc424j600_writeSPI+2
 24603  004D0C  C069  F065         	movff	enc424j600_writeSPI@timeoutCounter+3,??_enc424j600_writeSPI+3
 24604  004D10  2B66               	incf	enc424j600_writeSPI@timeoutCounter& (0+255),f,b
 24605  004D12  0E00               	movlw	0
 24606  004D14  2367               	addwfc	(enc424j600_writeSPI@timeoutCounter+1)& (0+255),f,b
 24607  004D16  2368               	addwfc	(enc424j600_writeSPI@timeoutCounter+2)& (0+255),f,b
 24608  004D18  2369               	addwfc	(enc424j600_writeSPI@timeoutCounter+3)& (0+255),f,b
 24609  004D1A  5165               	movf	(??_enc424j600_writeSPI+3)& (0+255),w,b
 24610  004D1C  1164               	iorwf	(??_enc424j600_writeSPI+2)& (0+255),w,b
 24611  004D1E  E105               	bnz	l8315
 24612  004D20  2962               	incf	??_enc424j600_writeSPI& (0+255),w,b
 24613  004D22  0E0F               	movlw	15
 24614  004D24  5963               	subwfb	(??_enc424j600_writeSPI+1)& (0+255),w,b
 24615  004D26  A0D8               	btfss	status,0,c
 24616  004D28  D7E9               	goto	l232
 24617  004D2A                     u8760:
 24618  004D2A                     l8315:
 24619                           
 24620                           ; BSR set to: 0
 24621                           ;ENC424J600.c: 492: if (timeoutCounter >= 0xfff) {
 24622  004D2A  5169               	movf	(enc424j600_writeSPI@timeoutCounter+3)& (0+255),w,b
 24623  004D2C  1168               	iorwf	(enc424j600_writeSPI@timeoutCounter+2)& (0+255),w,b
 24624  004D2E  E105               	bnz	u8770
 24625  004D30  2966               	incf	enc424j600_writeSPI@timeoutCounter& (0+255),w,b
 24626  004D32  0E0F               	movlw	15
 24627  004D34  5967               	subwfb	(enc424j600_writeSPI@timeoutCounter+1)& (0+255),w,b
 24628  004D36  A0D8               	btfss	status,0,c
 24629  004D38  0012               	return	
 24630  004D3A                     u8770:
 24631                           
 24632                           ; BSR set to: 0
 24633                           ;ENC424J600.c: 493: PORTBbits.RB4=1;
 24634  004D3A  8881               	bsf	3969,4,c	;volatile
 24635                           
 24636                           ; BSR set to: 0
 24637                           ;ENC424J600.c: 494: enc424j600_initSPI();
 24638  004D3C  EC82  F02B         	call	_enc424j600_initSPI	;wreg free
 24639                           
 24640                           ;ENC424J600.c: 495: return;
 24641  004D40  0012               	return	
 24642  004D42                     __end_of_enc424j600_writeSPI:
 24643                           	opt stack 0
 24644                           tblptru	equ	0xFF8
 24645                           tblptrh	equ	0xFF7
 24646                           tblptrl	equ	0xFF6
 24647                           tablat	equ	0xFF5
 24648                           prodh	equ	0xFF4
 24649                           prodl	equ	0xFF3
 24650                           intcon	equ	0xFF2
 24651                           intcon3	equ	0xFF0
 24652                           indf0	equ	0xFEF
 24653                           postinc0	equ	0xFEE
 24654                           plusw0	equ	0xFEB
 24655                           fsr0h	equ	0xFEA
 24656                           fsr0l	equ	0xFE9
 24657                           wreg	equ	0xFE8
 24658                           indf1	equ	0xFE7
 24659                           postinc1	equ	0xFE6
 24660                           postdec1	equ	0xFE5
 24661                           plusw1	equ	0xFE3
 24662                           fsr1h	equ	0xFE2
 24663                           fsr1l	equ	0xFE1
 24664                           indf2	equ	0xFDF
 24665                           postinc2	equ	0xFDE
 24666                           postdec2	equ	0xFDD
 24667                           plusw2	equ	0xFDB
 24668                           fsr2h	equ	0xFDA
 24669                           fsr2l	equ	0xFD9
 24670                           status	equ	0xFD8
 24671                           
 24672 ;; *************** function _enc424j600_readSPI *****************
 24673 ;; Defined at:
 24674 ;;		line 499 in file "src/enc424j600/ENC424J600.c"
 24675 ;; Parameters:    Size  Location     Type
 24676 ;;  data            2    0[BANK0 ] PTR unsigned char 
 24677 ;;		 -> enc424j600_clearInterruptFlag@temp(1), enc424j600_getInterruptFlags@high(1), enc424j600_getInterruptFlags@low(1)
      +, enc424j600_disable@temp(1), 
 24678 ;;		 -> enc424j600_enable@temp(1), enc424j600_disableAutoMACInsertion@temp(1), enc424j600_enableAutoMACInsertion@temp(1)
      +, enc424j600_getPacketCount@lowByte(1), 
 24679 ;;		 -> enc424j600_readPHYRegister@highByte(1), enc424j600_readPHYRegister@lowByte(1), enc424j600_readPHYRegister@temp(1
      +), ethernetController_setLEDConfig@data(1), 
 24680 ;;		 -> ethernetController_updateLinkStatus@temp(1), ethernetController_streamFromRXBuffer@temp(1), ethernetController_u
      +pdateNextPacketPointer@newPointerH(1), ethernetController_updateNextPacketPointer@newPointerL(1), 
 24681 ;;		 -> ethernetController_getRSV@temp(6), ethernetController_getEtherTypeField@lowByte(1), ethernetController_getEtherT
      +ypeField@highByte(1), ethernetController_getSourceMACAddress@temp(1), 
 24682 ;;		 -> ethernetController_getDestinationMACAddress@temp(1), mac.address(6), ethernetController_getMacAddress@mac(6), et
      +hernetController_getSiliconRevision@data(1), 
 24683 ;;		 -> ethernetController_checkDeviceId@data(1), ethernetController_softReset@receivedData(2), 
 24684 ;; Auto vars:     Size  Location     Type
 24685 ;;  timeoutCount    4    6[BANK0 ] unsigned long 
 24686 ;; Return value:  Size  Location     Type
 24687 ;;                  1    wreg      void 
 24688 ;; Registers used:
 24689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24690 ;; Tracked objects:
 24691 ;;		On entry : 0/0
 24692 ;;		On exit  : 0/0
 24693 ;;		Unchanged: 0/0
 24694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24695 ;;      Params:         0       2       0       0       0       0       0       0       0
 24696 ;;      Locals:         0       4       0       0       0       0       0       0       0
 24697 ;;      Temps:          0       4       0       0       0       0       0       0       0
 24698 ;;      Totals:         0      10       0       0       0       0       0       0       0
 24699 ;;Total ram usage:       10 bytes
 24700 ;; Hardware stack levels used:    1
 24701 ;; Hardware stack levels required when called:    5
 24702 ;; This function calls:
 24703 ;;		_enc424j600_initSPI
 24704 ;; This function is called by:
 24705 ;;		_ethernetController_getSourceMACAddress
 24706 ;;		_ethernetController_getEtherTypeField
 24707 ;;		_ethernetController_getRSV
 24708 ;;		_ethernetController_updateNextPacketPointer
 24709 ;;		_ethernetController_streamFromRXBuffer
 24710 ;;		_enc424j600_readControlRegisterUnbanked
 24711 ;;		_ethernetController_getDestinationMACAddress
 24712 ;; This function uses a non-reentrant model
 24713 ;;
 24714                           
 24715                           	psect	text108
 24716  004C0C                     __ptext108:
 24717                           	opt stack 0
 24718  004C0C                     _enc424j600_readSPI:
 24719                           	opt stack 21
 24720                           
 24721                           ;ENC424J600.c: 501: uint32_t timeoutCounter = 0;
 24722                           
 24723                           ;incstack = 0
 24724  004C0C  0E00               	movlw	0
 24725  004C0E  0100               	movlb	0	; () banked
 24726  004C10  6F66               	movwf	enc424j600_readSPI@timeoutCounter& (0+255),b
 24727  004C12  0E00               	movlw	0
 24728  004C14  6F67               	movwf	(enc424j600_readSPI@timeoutCounter+1)& (0+255),b
 24729  004C16  0E00               	movlw	0
 24730  004C18  6F68               	movwf	(enc424j600_readSPI@timeoutCounter+2)& (0+255),b
 24731  004C1A  0E00               	movlw	0
 24732  004C1C  6F69               	movwf	(enc424j600_readSPI@timeoutCounter+3)& (0+255),b
 24733                           
 24734                           ;ENC424J600.c: 502: SSP1BUF = 0x00;
 24735  004C1E  0E00               	movlw	0
 24736  004C20  6EC9               	movwf	4041,c	;volatile
 24737  004C22                     
 24738                           ; BSR set to: 0
 24739                           
 24740                           ; BSR set to: 0
 24741  004C22  B0C7               	btfsc	4039,0,c	;volatile
 24742  004C24  D015               	goto	u9210
 24743                           
 24744                           ; BSR set to: 0
 24745  004C26  C066  F062         	movff	enc424j600_readSPI@timeoutCounter,??_enc424j600_readSPI
 24746  004C2A  C067  F063         	movff	enc424j600_readSPI@timeoutCounter+1,??_enc424j600_readSPI+1
 24747  004C2E  C068  F064         	movff	enc424j600_readSPI@timeoutCounter+2,??_enc424j600_readSPI+2
 24748  004C32  C069  F065         	movff	enc424j600_readSPI@timeoutCounter+3,??_enc424j600_readSPI+3
 24749  004C36  2B66               	incf	enc424j600_readSPI@timeoutCounter& (0+255),f,b
 24750  004C38  0E00               	movlw	0
 24751  004C3A  2367               	addwfc	(enc424j600_readSPI@timeoutCounter+1)& (0+255),f,b
 24752  004C3C  2368               	addwfc	(enc424j600_readSPI@timeoutCounter+2)& (0+255),f,b
 24753  004C3E  2369               	addwfc	(enc424j600_readSPI@timeoutCounter+3)& (0+255),f,b
 24754  004C40  5165               	movf	(??_enc424j600_readSPI+3)& (0+255),w,b
 24755  004C42  1164               	iorwf	(??_enc424j600_readSPI+2)& (0+255),w,b
 24756  004C44  E105               	bnz	l8601
 24757  004C46  2962               	incf	??_enc424j600_readSPI& (0+255),w,b
 24758  004C48  0E0F               	movlw	15
 24759  004C4A  5963               	subwfb	(??_enc424j600_readSPI+1)& (0+255),w,b
 24760  004C4C  A0D8               	btfss	status,0,c
 24761  004C4E  D7E9               	goto	l241
 24762  004C50                     u9210:
 24763  004C50                     l8601:
 24764                           
 24765                           ; BSR set to: 0
 24766                           ;ENC424J600.c: 504: if (timeoutCounter >= 0xfff) {
 24767  004C50  5169               	movf	(enc424j600_readSPI@timeoutCounter+3)& (0+255),w,b
 24768  004C52  1168               	iorwf	(enc424j600_readSPI@timeoutCounter+2)& (0+255),w,b
 24769  004C54  E105               	bnz	u9220
 24770  004C56  2966               	incf	enc424j600_readSPI@timeoutCounter& (0+255),w,b
 24771  004C58  0E0F               	movlw	15
 24772  004C5A  5967               	subwfb	(enc424j600_readSPI@timeoutCounter+1)& (0+255),w,b
 24773  004C5C  A0D8               	btfss	status,0,c
 24774  004C5E  D004               	goto	l245
 24775  004C60                     u9220:
 24776                           
 24777                           ; BSR set to: 0
 24778                           ;ENC424J600.c: 505: PORTBbits.RB4=1;
 24779  004C60  8881               	bsf	3969,4,c	;volatile
 24780                           
 24781                           ; BSR set to: 0
 24782                           ;ENC424J600.c: 506: enc424j600_initSPI();
 24783  004C62  EC82  F02B         	call	_enc424j600_initSPI	;wreg free
 24784                           
 24785                           ;ENC424J600.c: 507: return;
 24786  004C66  0012               	return	
 24787  004C68                     l245:
 24788                           
 24789                           ;ENC424J600.c: 508: }
 24790                           ;ENC424J600.c: 509: *data = SSP1BUF;
 24791  004C68  C060  FFD9         	movff	enc424j600_readSPI@data,fsr2l
 24792  004C6C  C061  FFDA         	movff	enc424j600_readSPI@data+1,fsr2h
 24793  004C70  CFC9 FFDF          	movff	4041,indf2	;volatile
 24794  004C74  0012               	return		;funcret
 24795  004C76                     __end_of_enc424j600_readSPI:
 24796                           	opt stack 0
 24797                           tblptru	equ	0xFF8
 24798                           tblptrh	equ	0xFF7
 24799                           tblptrl	equ	0xFF6
 24800                           tablat	equ	0xFF5
 24801                           prodh	equ	0xFF4
 24802                           prodl	equ	0xFF3
 24803                           intcon	equ	0xFF2
 24804                           intcon3	equ	0xFF0
 24805                           indf0	equ	0xFEF
 24806                           postinc0	equ	0xFEE
 24807                           plusw0	equ	0xFEB
 24808                           fsr0h	equ	0xFEA
 24809                           fsr0l	equ	0xFE9
 24810                           wreg	equ	0xFE8
 24811                           indf1	equ	0xFE7
 24812                           postinc1	equ	0xFE6
 24813                           postdec1	equ	0xFE5
 24814                           plusw1	equ	0xFE3
 24815                           fsr1h	equ	0xFE2
 24816                           fsr1l	equ	0xFE1
 24817                           indf2	equ	0xFDF
 24818                           postinc2	equ	0xFDE
 24819                           postdec2	equ	0xFDD
 24820                           plusw2	equ	0xFDB
 24821                           fsr2h	equ	0xFDA
 24822                           fsr2l	equ	0xFD9
 24823                           status	equ	0xFD8
 24824                           
 24825 ;; *************** function _enc424j600_initSPI *****************
 24826 ;; Defined at:
 24827 ;;		line 469 in file "src/enc424j600/ENC424J600.c"
 24828 ;; Parameters:    Size  Location     Type
 24829 ;;		None
 24830 ;; Auto vars:     Size  Location     Type
 24831 ;;		None
 24832 ;; Return value:  Size  Location     Type
 24833 ;;                  1    wreg      void 
 24834 ;; Registers used:
 24835 ;;		None
 24836 ;; Tracked objects:
 24837 ;;		On entry : 0/0
 24838 ;;		On exit  : 0/0
 24839 ;;		Unchanged: 0/0
 24840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24841 ;;      Params:         0       0       0       0       0       0       0       0       0
 24842 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24843 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24844 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24845 ;;Total ram usage:        0 bytes
 24846 ;; Hardware stack levels used:    1
 24847 ;; Hardware stack levels required when called:    4
 24848 ;; This function calls:
 24849 ;;		Nothing
 24850 ;; This function is called by:
 24851 ;;		_ethernetController_init
 24852 ;;		_enc424j600_writeSPI
 24853 ;;		_enc424j600_readSPI
 24854 ;; This function uses a non-reentrant model
 24855 ;;
 24856                           
 24857                           	psect	text109
 24858  005704                     __ptext109:
 24859                           	opt stack 0
 24860  005704                     _enc424j600_initSPI:
 24861                           	opt stack 22
 24862                           
 24863                           ;ENC424J600.c: 470: SSP1CON1bits.SSPEN = 0;
 24864                           
 24865                           ;incstack = 0
 24866  005704  9AC6               	bcf	4038,5,c	;volatile
 24867                           
 24868                           ;ENC424J600.c: 471: SSP1STATbits.CKE = 1;
 24869  005706  8CC7               	bsf	4039,6,c	;volatile
 24870                           
 24871                           ;ENC424J600.c: 473: TRISBbits.TRISB0 = 1;
 24872  005708  8093               	bsf	3987,0,c	;volatile
 24873                           
 24874                           ;ENC424J600.c: 474: ANSELBbits.ANSB0 = 0;
 24875  00570A  010F               	movlb	15	; () banked
 24876  00570C  915C               	bcf	92,0,b	;volatile
 24877                           
 24878                           ;ENC424J600.c: 475: TRISBbits.TRISB1 = 0;
 24879  00570E  9293               	bcf	3987,1,c	;volatile
 24880                           
 24881                           ;ENC424J600.c: 476: ANSELBbits.ANSB1 = 0;
 24882  005710  935C               	bcf	92,1,b	;volatile
 24883                           
 24884                           ;ENC424J600.c: 477: TRISBbits.TRISB3 = 0;
 24885  005712  9693               	bcf	3987,3,c	;volatile
 24886                           
 24887                           ;ENC424J600.c: 478: ANSELBbits.ANSB3 = 0;
 24888  005714  975C               	bcf	92,3,b	;volatile
 24889                           
 24890                           ;ENC424J600.c: 479: TRISBbits.TRISB4 = 0;
 24891  005716  9893               	bcf	3987,4,c	;volatile
 24892                           
 24893                           ;ENC424J600.c: 480: ANSELBbits.ANSB4 = 0;
 24894  005718  995C               	bcf	92,4,b	;volatile
 24895                           
 24896                           ;ENC424J600.c: 481: PORTBbits.RB4=1;
 24897  00571A  8881               	bsf	3969,4,c	;volatile
 24898                           
 24899                           ;ENC424J600.c: 482: SSP1CON1bits.SSPEN = 1;
 24900  00571C  8AC6               	bsf	4038,5,c	;volatile
 24901                           
 24902                           ; BSR set to: 15
 24903  00571E  0012               	return		;funcret
 24904  005720                     __end_of_enc424j600_initSPI:
 24905                           	opt stack 0
 24906                           tblptru	equ	0xFF8
 24907                           tblptrh	equ	0xFF7
 24908                           tblptrl	equ	0xFF6
 24909                           tablat	equ	0xFF5
 24910                           prodh	equ	0xFF4
 24911                           prodl	equ	0xFF3
 24912                           intcon	equ	0xFF2
 24913                           intcon3	equ	0xFF0
 24914                           indf0	equ	0xFEF
 24915                           postinc0	equ	0xFEE
 24916                           plusw0	equ	0xFEB
 24917                           fsr0h	equ	0xFEA
 24918                           fsr0l	equ	0xFE9
 24919                           wreg	equ	0xFE8
 24920                           indf1	equ	0xFE7
 24921                           postinc1	equ	0xFE6
 24922                           postdec1	equ	0xFE5
 24923                           plusw1	equ	0xFE3
 24924                           fsr1h	equ	0xFE2
 24925                           fsr1l	equ	0xFE1
 24926                           indf2	equ	0xFDF
 24927                           postinc2	equ	0xFDE
 24928                           postdec2	equ	0xFDD
 24929                           plusw2	equ	0xFDB
 24930                           fsr2h	equ	0xFDA
 24931                           fsr2l	equ	0xFD9
 24932                           status	equ	0xFD8
 24933                           
 24934 ;; *************** function _ethernetController_getDeviceName *****************
 24935 ;; Defined at:
 24936 ;;		line 145 in file "src/enc424j600/ENC424J600.c"
 24937 ;; Parameters:    Size  Location     Type
 24938 ;;		None
 24939 ;; Auto vars:     Size  Location     Type
 24940 ;;  string         11    2[BANK0 ] const unsigned char [11]
 24941 ;; Return value:  Size  Location     Type
 24942 ;;                  2    0[BANK0 ] PTR unsigned char 
 24943 ;; Registers used:
 24944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 24945 ;; Tracked objects:
 24946 ;;		On entry : 0/0
 24947 ;;		On exit  : 0/0
 24948 ;;		Unchanged: 0/0
 24949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24950 ;;      Params:         0       2       0       0       0       0       0       0       0
 24951 ;;      Locals:         0      11       0       0       0       0       0       0       0
 24952 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24953 ;;      Totals:         0      13       0       0       0       0       0       0       0
 24954 ;;Total ram usage:       13 bytes
 24955 ;; Hardware stack levels used:    1
 24956 ;; Hardware stack levels required when called:    4
 24957 ;; This function calls:
 24958 ;;		Nothing
 24959 ;; This function is called by:
 24960 ;;		_main
 24961 ;; This function uses a non-reentrant model
 24962 ;;
 24963                           
 24964                           	psect	text110
 24965  00567C                     __ptext110:
 24966                           	opt stack 0
 24967  00567C                     _ethernetController_getDeviceName:
 24968                           	opt stack 26
 24969                           
 24970                           ;ENC424J600.c: 146: const char string [] = "ENC424J600";
 24971                           
 24972                           ; BSR set to: 15
 24973                           ;incstack = 0
 24974  00567C  0E0B               	movlw	low ethernetController_getDeviceName@F6000
 24975  00567E  6EF6               	movwf	tblptrl,c
 24976  005680                     	if	1	;There is more than 1 active tblptr byte
 24977  005680  0E7A               	movlw	high ethernetController_getDeviceName@F6000
 24978  005682  6EF7               	movwf	tblptrh,c
 24979  005684                     	endif
 24980  005684                     	if	0	;There are less than 3 active tblptr bytes
 24981  005684                     	endif
 24982  005684  EE20  F062         	lfsr	2,ethernetController_getDeviceName@string
 24983  005688  0E0A               	movlw	10
 24984  00568A                     u12450:
 24985  00568A  0009               	tblrd		*+
 24986  00568C  CFF5 FFDE          	movff	tablat,postinc2
 24987  005690  06E8               	decf	wreg,f,c
 24988  005692  E2FB               	bc	u12450
 24989                           
 24990                           ;ENC424J600.c: 147: return (char*) string;
 24991  005694  0E62               	movlw	low ethernetController_getDeviceName@string
 24992  005696  0100               	movlb	0	; () banked
 24993  005698  6F60               	movwf	?_ethernetController_getDeviceName& (0+255),b
 24994  00569A  0E00               	movlw	high ethernetController_getDeviceName@string
 24995  00569C  6F61               	movwf	(?_ethernetController_getDeviceName+1)& (0+255),b
 24996  00569E  0012               	return	
 24997  0056A0                     __end_of_ethernetController_getDeviceName:
 24998                           	opt stack 0
 24999                           tblptru	equ	0xFF8
 25000                           tblptrh	equ	0xFF7
 25001                           tblptrl	equ	0xFF6
 25002                           tablat	equ	0xFF5
 25003                           prodh	equ	0xFF4
 25004                           prodl	equ	0xFF3
 25005                           intcon	equ	0xFF2
 25006                           intcon3	equ	0xFF0
 25007                           indf0	equ	0xFEF
 25008                           postinc0	equ	0xFEE
 25009                           plusw0	equ	0xFEB
 25010                           fsr0h	equ	0xFEA
 25011                           fsr0l	equ	0xFE9
 25012                           wreg	equ	0xFE8
 25013                           indf1	equ	0xFE7
 25014                           postinc1	equ	0xFE6
 25015                           postdec1	equ	0xFE5
 25016                           plusw1	equ	0xFE3
 25017                           fsr1h	equ	0xFE2
 25018                           fsr1l	equ	0xFE1
 25019                           indf2	equ	0xFDF
 25020                           postinc2	equ	0xFDE
 25021                           postdec2	equ	0xFDD
 25022                           plusw2	equ	0xFDB
 25023                           fsr2h	equ	0xFDA
 25024                           fsr2l	equ	0xFD9
 25025                           status	equ	0xFD8
 25026                           
 25027 ;; *************** function _UARTInit *****************
 25028 ;; Defined at:
 25029 ;;		line 26 in file "src/system/uart.c"
 25030 ;; Parameters:    Size  Location     Type
 25031 ;;		None
 25032 ;; Auto vars:     Size  Location     Type
 25033 ;;		None
 25034 ;; Return value:  Size  Location     Type
 25035 ;;                  1    wreg      void 
 25036 ;; Registers used:
 25037 ;;		wreg, status,2
 25038 ;; Tracked objects:
 25039 ;;		On entry : 0/0
 25040 ;;		On exit  : 0/0
 25041 ;;		Unchanged: 0/0
 25042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25043 ;;      Params:         0       0       0       0       0       0       0       0       0
 25044 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25045 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25046 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25047 ;;Total ram usage:        0 bytes
 25048 ;; Hardware stack levels used:    1
 25049 ;; Hardware stack levels required when called:    4
 25050 ;; This function calls:
 25051 ;;		Nothing
 25052 ;; This function is called by:
 25053 ;;		_main
 25054 ;; This function uses a non-reentrant model
 25055 ;;
 25056                           
 25057                           	psect	text111
 25058  0057DC                     __ptext111:
 25059                           	opt stack 0
 25060  0057DC                     _UARTInit:
 25061                           	opt stack 26
 25062                           
 25063                           ;uart.c: 27: TXSTA1bits.TXEN = 1;
 25064                           
 25065                           ; BSR set to: 0
 25066                           ;incstack = 0
 25067  0057DC  8AAC               	bsf	4012,5,c	;volatile
 25068                           
 25069                           ;uart.c: 28: TXSTA1bits.SYNC = 0;
 25070  0057DE  98AC               	bcf	4012,4,c	;volatile
 25071                           
 25072                           ;uart.c: 29: RCSTA1bits.SPEN = 1;
 25073  0057E0  8EAB               	bsf	4011,7,c	;volatile
 25074                           
 25075                           ;uart.c: 30: TXSTA1bits.TX9 = 1;
 25076  0057E2  8CAC               	bsf	4012,6,c	;volatile
 25077                           
 25078                           ;uart.c: 31: TXSTA1bits.TX9D = 1;
 25079  0057E4  80AC               	bsf	4012,0,c	;volatile
 25080                           
 25081                           ;uart.c: 32: SPBRG = 3;
 25082  0057E6  0E03               	movlw	3
 25083  0057E8  6EAF               	movwf	4015,c	;volatile
 25084  0057EA  0012               	return		;funcret
 25085  0057EC                     __end_of_UARTInit:
 25086                           	opt stack 0
 25087                           tblptru	equ	0xFF8
 25088                           tblptrh	equ	0xFF7
 25089                           tblptrl	equ	0xFF6
 25090                           tablat	equ	0xFF5
 25091                           prodh	equ	0xFF4
 25092                           prodl	equ	0xFF3
 25093                           intcon	equ	0xFF2
 25094                           intcon3	equ	0xFF0
 25095                           indf0	equ	0xFEF
 25096                           postinc0	equ	0xFEE
 25097                           plusw0	equ	0xFEB
 25098                           fsr0h	equ	0xFEA
 25099                           fsr0l	equ	0xFE9
 25100                           wreg	equ	0xFE8
 25101                           indf1	equ	0xFE7
 25102                           postinc1	equ	0xFE6
 25103                           postdec1	equ	0xFE5
 25104                           plusw1	equ	0xFE3
 25105                           fsr1h	equ	0xFE2
 25106                           fsr1l	equ	0xFE1
 25107                           indf2	equ	0xFDF
 25108                           postinc2	equ	0xFDE
 25109                           postdec2	equ	0xFDD
 25110                           plusw2	equ	0xFDB
 25111                           fsr2h	equ	0xFDA
 25112                           fsr2l	equ	0xFD9
 25113                           status	equ	0xFD8
 25114                           
 25115 ;; *************** function _ISR *****************
 25116 ;; Defined at:
 25117 ;;		line 264 in file "src/system/main.c"
 25118 ;; Parameters:    Size  Location     Type
 25119 ;;		None
 25120 ;; Auto vars:     Size  Location     Type
 25121 ;;		None
 25122 ;; Return value:  Size  Location     Type
 25123 ;;                  1    wreg      void 
 25124 ;; Registers used:
 25125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25126 ;; Tracked objects:
 25127 ;;		On entry : 0/0
 25128 ;;		On exit  : 0/0
 25129 ;;		Unchanged: 0/0
 25130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25131 ;;      Params:         0       0       0       0       0       0       0       0       0
 25132 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25133 ;;      Temps:         19       0       0       0       0       0       0       0       0
 25134 ;;      Totals:        19       0       0       0       0       0       0       0       0
 25135 ;;Total ram usage:       19 bytes
 25136 ;; Hardware stack levels used:    1
 25137 ;; Hardware stack levels required when called:    3
 25138 ;; This function calls:
 25139 ;;		_buttonHandler
 25140 ;;		_sevenSegmentUpdate
 25141 ;;		_updateTime
 25142 ;; This function is called by:
 25143 ;;		Interrupt level 2
 25144 ;; This function uses a non-reentrant model
 25145 ;;
 25146                           
 25147                           	psect	intcode
 25148  000008                     __pintcode:
 25149                           	opt stack 0
 25150  000008                     _ISR:
 25151                           	opt stack 17
 25152                           
 25153                           ;incstack = 0
 25154  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 25155  00000A  CFFA F017          	movff	pclath,??_ISR+1
 25156  00000E  CFFB F018          	movff	pclatu,??_ISR+2
 25157  000012  CFE9 F019          	movff	fsr0l,??_ISR+3
 25158  000016  CFEA F01A          	movff	fsr0h,??_ISR+4
 25159  00001A  CFE1 F01B          	movff	fsr1l,??_ISR+5
 25160  00001E  CFE2 F01C          	movff	fsr1h,??_ISR+6
 25161  000022  CFD9 F01D          	movff	fsr2l,??_ISR+7
 25162  000026  CFDA F01E          	movff	fsr2h,??_ISR+8
 25163  00002A  CFF3 F01F          	movff	prodl,??_ISR+9
 25164  00002E  CFF4 F020          	movff	prodh,??_ISR+10
 25165  000032  CFF6 F021          	movff	tblptrl,??_ISR+11
 25166  000036  CFF7 F022          	movff	tblptrh,??_ISR+12
 25167  00003A  CFF8 F023          	movff	tblptru,??_ISR+13
 25168  00003E  CFF5 F024          	movff	tablat,??_ISR+14
 25169  000042  C04F  F025         	movff	btemp,??_ISR+15
 25170  000046  C050  F026         	movff	btemp+1,??_ISR+16
 25171  00004A  C051  F027         	movff	btemp+2,??_ISR+17
 25172  00004E  C052  F028         	movff	btemp+3,??_ISR+18
 25173                           
 25174                           ;main.c: 266: if (PIR1bits.CCP1IF) {
 25175  000052  A49E               	btfss	3998,2,c	;volatile
 25176  000054  D012               	goto	i2l723
 25177                           
 25178                           ;main.c: 267: PIR1bits.CCP1IF = 0;
 25179  000056  949E               	bcf	3998,2,c	;volatile
 25180                           
 25181                           ;main.c: 268: PORTBbits.RB6 = ~PORTBbits.RB6;
 25182  000058  AC81               	btfss	3969,6,c	;volatile
 25183  00005A  D002               	goto	i2u869_40
 25184  00005C  0E01               	movlw	1
 25185  00005E  D001               	goto	i2u869_46
 25186  000060                     i2u869_40:
 25187  000060  0E00               	movlw	0
 25188  000062                     i2u869_46:
 25189  000062  0AFF               	xorlw	255
 25190  000064  6E16               	movwf	??_ISR& (0+255),c
 25191  000066  3A16               	swapf	??_ISR,f,c
 25192  000068  4616               	rlncf	??_ISR,f,c
 25193  00006A  4616               	rlncf	??_ISR,f,c
 25194  00006C  5081               	movf	3969,w,c	;volatile
 25195  00006E  1816               	xorwf	??_ISR,w,c
 25196  000070  0BBF               	andlw	-65
 25197  000072  1816               	xorwf	??_ISR,w,c
 25198  000074  6E81               	movwf	3969,c	;volatile
 25199                           
 25200                           ;main.c: 269: updateTime();
 25201  000076  EC0B  F02C         	call	_updateTime	;wreg free
 25202  00007A                     i2l723:
 25203                           
 25204                           ;main.c: 270: }
 25205                           ;main.c: 272: if (INTCONbits.TMR0IF) {
 25206  00007A  A4F2               	btfss	intcon,2,c	;volatile
 25207  00007C  D00D               	goto	i2l724
 25208                           
 25209                           ;main.c: 273: INTCONbits.TMR0IF = 0;
 25210  00007E  94F2               	bcf	intcon,2,c	;volatile
 25211                           
 25212                           ;main.c: 274: sevenSegmentUpdate(numberToDisplay);
 25213  000080  C031  F00F         	movff	_numberToDisplay,sevenSegmentUpdate@numberToDisplay	;volatile
 25214  000084  C032  F010         	movff	_numberToDisplay+1,sevenSegmentUpdate@numberToDisplay+1	;volatile
 25215  000088  EC0D  F020         	call	_sevenSegmentUpdate	;wreg free
 25216                           
 25217                           ;main.c: 275: buttonHandler(&buttonState);
 25218  00008C  0EF9               	movlw	low _buttonState
 25219  00008E  6E01               	movwf	buttonHandler@state,c
 25220  000090  0E01               	movlw	high _buttonState
 25221  000092  6E02               	movwf	buttonHandler@state+1,c
 25222  000094  EC1E  F021         	call	_buttonHandler	;wreg free
 25223  000098                     i2l724:
 25224                           
 25225                           ;main.c: 278: }
 25226                           ;main.c: 280: if (INTCON3bits.INT2IF) {
 25227  000098  B2F0               	btfsc	intcon3,1,c	;volatile
 25228                           
 25229                           ;main.c: 281: INTCON3bits.INT2IF = 0;
 25230  00009A  92F0               	bcf	intcon3,1,c	;volatile
 25231                           
 25232                           ;main.c: 288: }
 25233                           ;main.c: 289: if (RCIF) {
 25234  00009C  C028  F052         	movff	??_ISR+18,btemp+3
 25235  0000A0  C027  F051         	movff	??_ISR+17,btemp+2
 25236  0000A4  C026  F050         	movff	??_ISR+16,btemp+1
 25237  0000A8  C025  F04F         	movff	??_ISR+15,btemp
 25238  0000AC  C024  FFF5         	movff	??_ISR+14,tablat
 25239  0000B0  C023  FFF8         	movff	??_ISR+13,tblptru
 25240  0000B4  C022  FFF7         	movff	??_ISR+12,tblptrh
 25241  0000B8  C021  FFF6         	movff	??_ISR+11,tblptrl
 25242  0000BC  C020  FFF4         	movff	??_ISR+10,prodh
 25243  0000C0  C01F  FFF3         	movff	??_ISR+9,prodl
 25244  0000C4  C01E  FFDA         	movff	??_ISR+8,fsr2h
 25245  0000C8  C01D  FFD9         	movff	??_ISR+7,fsr2l
 25246  0000CC  C01C  FFE2         	movff	??_ISR+6,fsr1h
 25247  0000D0  C01B  FFE1         	movff	??_ISR+5,fsr1l
 25248  0000D4  C01A  FFEA         	movff	??_ISR+4,fsr0h
 25249  0000D8  C019  FFE9         	movff	??_ISR+3,fsr0l
 25250  0000DC  C018  FFFB         	movff	??_ISR+2,pclatu
 25251  0000E0  C017  FFFA         	movff	??_ISR+1,pclath
 25252  0000E4  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 25253  0000E6  0011               	retfie		f
 25254  0000E8                     __end_of_ISR:
 25255                           	opt stack 0
 25256                           pclatu	equ	0xFFB
 25257                           pclath	equ	0xFFA
 25258                           tblptru	equ	0xFF8
 25259                           tblptrh	equ	0xFF7
 25260                           tblptrl	equ	0xFF6
 25261                           tablat	equ	0xFF5
 25262                           prodh	equ	0xFF4
 25263                           prodl	equ	0xFF3
 25264                           intcon	equ	0xFF2
 25265                           intcon3	equ	0xFF0
 25266                           indf0	equ	0xFEF
 25267                           postinc0	equ	0xFEE
 25268                           plusw0	equ	0xFEB
 25269                           fsr0h	equ	0xFEA
 25270                           fsr0l	equ	0xFE9
 25271                           wreg	equ	0xFE8
 25272                           indf1	equ	0xFE7
 25273                           postinc1	equ	0xFE6
 25274                           postdec1	equ	0xFE5
 25275                           plusw1	equ	0xFE3
 25276                           fsr1h	equ	0xFE2
 25277                           fsr1l	equ	0xFE1
 25278                           indf2	equ	0xFDF
 25279                           postinc2	equ	0xFDE
 25280                           postdec2	equ	0xFDD
 25281                           plusw2	equ	0xFDB
 25282                           fsr2h	equ	0xFDA
 25283                           fsr2l	equ	0xFD9
 25284                           status	equ	0xFD8
 25285                           
 25286 ;; *************** function _updateTime *****************
 25287 ;; Defined at:
 25288 ;;		line 30 in file "src/stack/time.c"
 25289 ;; Parameters:    Size  Location     Type
 25290 ;;		None
 25291 ;; Auto vars:     Size  Location     Type
 25292 ;;		None
 25293 ;; Return value:  Size  Location     Type
 25294 ;;                  1    wreg      void 
 25295 ;; Registers used:
 25296 ;;		wreg, status,2, status,0
 25297 ;; Tracked objects:
 25298 ;;		On entry : 0/0
 25299 ;;		On exit  : 0/0
 25300 ;;		Unchanged: 0/0
 25301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25302 ;;      Params:         0       0       0       0       0       0       0       0       0
 25303 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25304 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25305 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25306 ;;Total ram usage:        0 bytes
 25307 ;; Hardware stack levels used:    1
 25308 ;; This function calls:
 25309 ;;		Nothing
 25310 ;; This function is called by:
 25311 ;;		_ISR
 25312 ;; This function uses a non-reentrant model
 25313 ;;
 25314                           
 25315                           	psect	text113
 25316  005816                     __ptext113:
 25317                           	opt stack 0
 25318  005816                     _updateTime:
 25319                           	opt stack 19
 25320                           
 25321                           ;time.c: 31: time++;
 25322                           
 25323                           ;incstack = 0
 25324  005816  0E01               	movlw	1
 25325  005818  2629               	addwf	_time,f,c	;volatile
 25326  00581A  0E00               	movlw	0
 25327  00581C  222A               	addwfc	_time+1,f,c	;volatile
 25328  00581E  222B               	addwfc	_time+2,f,c	;volatile
 25329  005820  222C               	addwfc	_time+3,f,c	;volatile
 25330  005822  0012               	return		;funcret
 25331  005824                     __end_of_updateTime:
 25332                           	opt stack 0
 25333                           pclatu	equ	0xFFB
 25334                           pclath	equ	0xFFA
 25335                           tblptru	equ	0xFF8
 25336                           tblptrh	equ	0xFF7
 25337                           tblptrl	equ	0xFF6
 25338                           tablat	equ	0xFF5
 25339                           prodh	equ	0xFF4
 25340                           prodl	equ	0xFF3
 25341                           intcon	equ	0xFF2
 25342                           intcon3	equ	0xFF0
 25343                           indf0	equ	0xFEF
 25344                           postinc0	equ	0xFEE
 25345                           plusw0	equ	0xFEB
 25346                           fsr0h	equ	0xFEA
 25347                           fsr0l	equ	0xFE9
 25348                           wreg	equ	0xFE8
 25349                           indf1	equ	0xFE7
 25350                           postinc1	equ	0xFE6
 25351                           postdec1	equ	0xFE5
 25352                           plusw1	equ	0xFE3
 25353                           fsr1h	equ	0xFE2
 25354                           fsr1l	equ	0xFE1
 25355                           indf2	equ	0xFDF
 25356                           postinc2	equ	0xFDE
 25357                           postdec2	equ	0xFDD
 25358                           plusw2	equ	0xFDB
 25359                           fsr2h	equ	0xFDA
 25360                           fsr2l	equ	0xFD9
 25361                           status	equ	0xFD8
 25362                           
 25363 ;; *************** function _sevenSegmentUpdate *****************
 25364 ;; Defined at:
 25365 ;;		line 41 in file "src/system/sevenseg.c"
 25366 ;; Parameters:    Size  Location     Type
 25367 ;;  numberToDisp    2   14[COMRAM] unsigned int 
 25368 ;; Auto vars:     Size  Location     Type
 25369 ;;  i               1   20[COMRAM] unsigned char 
 25370 ;; Return value:  Size  Location     Type
 25371 ;;                  1    wreg      void 
 25372 ;; Registers used:
 25373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25374 ;; Tracked objects:
 25375 ;;		On entry : 0/0
 25376 ;;		On exit  : 0/0
 25377 ;;		Unchanged: 0/0
 25378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25379 ;;      Params:         2       0       0       0       0       0       0       0       0
 25380 ;;      Locals:         3       0       0       0       0       0       0       0       0
 25381 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25382 ;;      Totals:         7       0       0       0       0       0       0       0       0
 25383 ;;Total ram usage:        7 bytes
 25384 ;; Hardware stack levels used:    1
 25385 ;; Hardware stack levels required when called:    2
 25386 ;; This function calls:
 25387 ;;		_parseNumber
 25388 ;; This function is called by:
 25389 ;;		_ISR
 25390 ;; This function uses a non-reentrant model
 25391 ;;
 25392                           
 25393                           	psect	text114
 25394  00401A                     __ptext114:
 25395                           	opt stack 0
 25396  00401A                     _sevenSegmentUpdate:
 25397                           	opt stack 17
 25398                           
 25399                           ;sevenseg.c: 43: uint8_t static digitPointer = 0;
 25400                           ;sevenseg.c: 44: uint8_t static digitsToDisplay[3] = {0, 0, 0};
 25401                           ;sevenseg.c: 45: PORTC &= ~(unsigned)(1 << digitPointer);
 25402                           
 25403                           ;incstack = 0
 25404  00401A  C044  F011         	movff	sevenSegmentUpdate@digitPointer,??_sevenSegmentUpdate
 25405  00401E  0E01               	movlw	1
 25406  004020  6E12               	movwf	(??_sevenSegmentUpdate+1)& (0+255),c
 25407  004022  2A11               	incf	??_sevenSegmentUpdate,f,c
 25408  004024  D002               	goto	i2u837_44
 25409  004026                     i2u837_45:
 25410  004026  90D8               	bcf	status,0,c
 25411  004028  3612               	rlcf	??_sevenSegmentUpdate+1,f,c
 25412  00402A                     i2u837_44:
 25413  00402A  2E11               	decfsz	??_sevenSegmentUpdate,f,c
 25414  00402C  D7FC               	goto	i2u837_45
 25415  00402E  5012               	movf	??_sevenSegmentUpdate+1,w,c
 25416  004030  0AFF               	xorlw	255
 25417  004032  1682               	andwf	3970,f,c	;volatile
 25418                           
 25419                           ;sevenseg.c: 46: PORTA = 0x00;
 25420  004034  0E00               	movlw	0
 25421  004036  6E80               	movwf	3968,c	;volatile
 25422                           
 25423                           ;sevenseg.c: 47: digitPointer = (unsigned)((digitPointer >= 2) ? 0 : digitPointer + 1);
 25424  004038  0E02               	movlw	2
 25425  00403A  6044               	cpfslt	sevenSegmentUpdate@digitPointer,c
 25426  00403C  D007               	goto	i2l756
 25427  00403E  0E01               	movlw	1
 25428  004040  2444               	addwf	sevenSegmentUpdate@digitPointer,w,c
 25429  004042  6E13               	movwf	_sevenSegmentUpdate$2500,c
 25430  004044  6A14               	clrf	_sevenSegmentUpdate$2500+1,c
 25431  004046  0E00               	movlw	0
 25432  004048  2214               	addwfc	_sevenSegmentUpdate$2500+1,f,c
 25433  00404A  D004               	goto	i2l758
 25434  00404C                     i2l756:
 25435  00404C  0E00               	movlw	0
 25436  00404E  6E14               	movwf	_sevenSegmentUpdate$2500+1,c
 25437  004050  0E00               	movlw	0
 25438  004052  6E13               	movwf	_sevenSegmentUpdate$2500,c
 25439  004054                     i2l758:
 25440  004054  C013  F044         	movff	_sevenSegmentUpdate$2500,sevenSegmentUpdate@digitPointer
 25441                           
 25442                           ;sevenseg.c: 49: if (numberToDisplay > 999) {
 25443  004058  0EE8               	movlw	232
 25444  00405A  5C0F               	subwf	sevenSegmentUpdate@numberToDisplay,w,c
 25445  00405C  0E03               	movlw	3
 25446  00405E  5810               	subwfb	sevenSegmentUpdate@numberToDisplay+1,w,c
 25447  004060  B0D8               	btfsc	status,0,c
 25448  004062  0012               	return	
 25449                           
 25450                           ;sevenseg.c: 51: }
 25451                           ;sevenseg.c: 52: for (uint8_t i = 0; i < 3; i++) {
 25452                           
 25453                           ;sevenseg.c: 50: return;
 25454  004064  0E00               	movlw	0
 25455  004066  6E15               	movwf	sevenSegmentUpdate@i,c
 25456  004068                     i2l7753:
 25457  004068  0E02               	movlw	2
 25458  00406A  6415               	cpfsgt	sevenSegmentUpdate@i,c
 25459  00406C  D001               	goto	i2l761
 25460  00406E  D013               	goto	i2u841_40
 25461  004070                     i2l761:
 25462                           
 25463                           ;sevenseg.c: 53: digitsToDisplay[i] = parseNumber(numberToDisplay, i);
 25464  004070  5015               	movf	sevenSegmentUpdate@i,w,c
 25465  004072  0D01               	mullw	1
 25466  004074  0E39               	movlw	low sevenSegmentUpdate@digitsToDisplay
 25467  004076  24F3               	addwf	prodl,w,c
 25468  004078  6ED9               	movwf	fsr2l,c
 25469  00407A  0E00               	movlw	high sevenSegmentUpdate@digitsToDisplay
 25470  00407C  20F4               	addwfc	prodh,w,c
 25471  00407E  6EDA               	movwf	fsr2h,c
 25472  004080  C00F  F008         	movff	sevenSegmentUpdate@numberToDisplay,parseNumber@numberToDisplay
 25473  004084  C010  F009         	movff	sevenSegmentUpdate@numberToDisplay+1,parseNumber@numberToDisplay+1
 25474  004088  C015  F00A         	movff	sevenSegmentUpdate@i,parseNumber@digit
 25475  00408C  ECF7  F023         	call	_parseNumber	;wreg free
 25476  004090  6EDF               	movwf	indf2,c
 25477  004092  2A15               	incf	sevenSegmentUpdate@i,f,c
 25478  004094  D7E9               	goto	i2l7753
 25479  004096                     i2u841_40:
 25480                           
 25481                           ;sevenseg.c: 54: }
 25482                           ;sevenseg.c: 55: PORTC |= (unsigned)(1 << digitPointer);
 25483  004096  C044  F011         	movff	sevenSegmentUpdate@digitPointer,??_sevenSegmentUpdate
 25484  00409A  0E01               	movlw	1
 25485  00409C  6E12               	movwf	(??_sevenSegmentUpdate+1)& (0+255),c
 25486  00409E  2A11               	incf	??_sevenSegmentUpdate,f,c
 25487  0040A0  D002               	goto	i2u842_44
 25488  0040A2                     i2u842_45:
 25489  0040A2  90D8               	bcf	status,0,c
 25490  0040A4  3612               	rlcf	??_sevenSegmentUpdate+1,f,c
 25491  0040A6                     i2u842_44:
 25492  0040A6  2E11               	decfsz	??_sevenSegmentUpdate,f,c
 25493  0040A8  D7FC               	goto	i2u842_45
 25494  0040AA  5012               	movf	??_sevenSegmentUpdate+1,w,c
 25495  0040AC  1282               	iorwf	3970,f,c	;volatile
 25496                           
 25497                           ;sevenseg.c: 56: PORTA = (sevenSegCharacters[digitsToDisplay[digitPointer]]);
 25498  0040AE  5044               	movf	sevenSegmentUpdate@digitPointer,w,c
 25499  0040B0  0D01               	mullw	1
 25500  0040B2  0E39               	movlw	low sevenSegmentUpdate@digitsToDisplay
 25501  0040B4  24F3               	addwf	prodl,w,c
 25502  0040B6  6ED9               	movwf	fsr2l,c
 25503  0040B8  0E00               	movlw	high sevenSegmentUpdate@digitsToDisplay
 25504  0040BA  20F4               	addwfc	prodh,w,c
 25505  0040BC  6EDA               	movwf	fsr2h,c
 25506  0040BE  50DF               	movf	indf2,w,c
 25507  0040C0  6E11               	movwf	??_sevenSegmentUpdate& (0+255),c
 25508  0040C2  5011               	movf	??_sevenSegmentUpdate,w,c
 25509  0040C4  0D01               	mullw	1
 25510  0040C6  0EE4               	movlw	low _sevenSegCharacters
 25511  0040C8  24F3               	addwf	prodl,w,c
 25512  0040CA  6ED9               	movwf	fsr2l,c
 25513  0040CC  0E02               	movlw	high _sevenSegCharacters
 25514  0040CE  20F4               	addwfc	prodh,w,c
 25515  0040D0  6EDA               	movwf	fsr2h,c
 25516  0040D2  50DF               	movf	indf2,w,c
 25517  0040D4  6E80               	movwf	3968,c	;volatile
 25518  0040D6  0012               	return		;funcret
 25519  0040D8                     __end_of_sevenSegmentUpdate:
 25520                           	opt stack 0
 25521                           pclatu	equ	0xFFB
 25522                           pclath	equ	0xFFA
 25523                           tblptru	equ	0xFF8
 25524                           tblptrh	equ	0xFF7
 25525                           tblptrl	equ	0xFF6
 25526                           tablat	equ	0xFF5
 25527                           prodh	equ	0xFF4
 25528                           prodl	equ	0xFF3
 25529                           intcon	equ	0xFF2
 25530                           intcon3	equ	0xFF0
 25531                           indf0	equ	0xFEF
 25532                           postinc0	equ	0xFEE
 25533                           plusw0	equ	0xFEB
 25534                           fsr0h	equ	0xFEA
 25535                           fsr0l	equ	0xFE9
 25536                           wreg	equ	0xFE8
 25537                           indf1	equ	0xFE7
 25538                           postinc1	equ	0xFE6
 25539                           postdec1	equ	0xFE5
 25540                           plusw1	equ	0xFE3
 25541                           fsr1h	equ	0xFE2
 25542                           fsr1l	equ	0xFE1
 25543                           indf2	equ	0xFDF
 25544                           postinc2	equ	0xFDE
 25545                           postdec2	equ	0xFDD
 25546                           plusw2	equ	0xFDB
 25547                           fsr2h	equ	0xFDA
 25548                           fsr2l	equ	0xFD9
 25549                           status	equ	0xFD8
 25550                           
 25551 ;; *************** function _parseNumber *****************
 25552 ;; Defined at:
 25553 ;;		line 59 in file "src/system/sevenseg.c"
 25554 ;; Parameters:    Size  Location     Type
 25555 ;;  numberToDisp    2    7[COMRAM] unsigned int 
 25556 ;;  digit           1    9[COMRAM] unsigned char 
 25557 ;; Auto vars:     Size  Location     Type
 25558 ;;  hundreds        1   13[COMRAM] unsigned char 
 25559 ;;  tens            1   12[COMRAM] unsigned char 
 25560 ;;  ones            1   11[COMRAM] unsigned char 
 25561 ;; Return value:  Size  Location     Type
 25562 ;;                  1    wreg      unsigned char 
 25563 ;; Registers used:
 25564 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 25565 ;; Tracked objects:
 25566 ;;		On entry : 0/0
 25567 ;;		On exit  : 0/0
 25568 ;;		Unchanged: 0/0
 25569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25570 ;;      Params:         3       0       0       0       0       0       0       0       0
 25571 ;;      Locals:         3       0       0       0       0       0       0       0       0
 25572 ;;      Temps:          1       0       0       0       0       0       0       0       0
 25573 ;;      Totals:         7       0       0       0       0       0       0       0       0
 25574 ;;Total ram usage:        7 bytes
 25575 ;; Hardware stack levels used:    1
 25576 ;; Hardware stack levels required when called:    1
 25577 ;; This function calls:
 25578 ;;		i2___lwdiv
 25579 ;; This function is called by:
 25580 ;;		_sevenSegmentUpdate
 25581 ;; This function uses a non-reentrant model
 25582 ;;
 25583                           
 25584                           	psect	text115
 25585  0047EE                     __ptext115:
 25586                           	opt stack 0
 25587  0047EE                     _parseNumber:
 25588                           	opt stack 17
 25589                           
 25590                           ;sevenseg.c: 61: uint8_t hundreds = numberToDisplay / 100u;
 25591                           
 25592                           ;incstack = 0
 25593  0047EE  C008  F001         	movff	parseNumber@numberToDisplay,i2___lwdiv@dividend
 25594  0047F2  C009  F002         	movff	parseNumber@numberToDisplay+1,i2___lwdiv@dividend+1
 25595  0047F6  0E00               	movlw	0
 25596  0047F8  6E04               	movwf	i2___lwdiv@divisor+1,c
 25597  0047FA  0E64               	movlw	100
 25598  0047FC  6E03               	movwf	i2___lwdiv@divisor,c
 25599  0047FE  ECA6  F027         	call	i2___lwdiv	;wreg free
 25600  004802  5001               	movf	?i2___lwdiv,w,c
 25601  004804  6E0E               	movwf	parseNumber@hundreds,c
 25602                           
 25603                           ;sevenseg.c: 62: uint8_t tens = (numberToDisplay - hundreds * 100u) / 10u;
 25604  004806  500E               	movf	parseNumber@hundreds,w,c
 25605  004808  0D64               	mullw	100
 25606  00480A  1EF3               	comf	prodl,f,c
 25607  00480C  1EF4               	comf	prodh,f,c
 25608  00480E  4AF3               	infsnz	prodl,f,c
 25609  004810  2AF4               	incf	prodh,f,c
 25610  004812  5008               	movf	parseNumber@numberToDisplay,w,c
 25611  004814  24F3               	addwf	prodl,w,c
 25612  004816  6E01               	movwf	i2___lwdiv@dividend,c
 25613  004818  5009               	movf	parseNumber@numberToDisplay+1,w,c
 25614  00481A  20F4               	addwfc	prodh,w,c
 25615  00481C  6E02               	movwf	i2___lwdiv@dividend+1,c
 25616  00481E  0E00               	movlw	0
 25617  004820  6E04               	movwf	i2___lwdiv@divisor+1,c
 25618  004822  0E0A               	movlw	10
 25619  004824  6E03               	movwf	i2___lwdiv@divisor,c
 25620  004826  ECA6  F027         	call	i2___lwdiv	;wreg free
 25621  00482A  5001               	movf	?i2___lwdiv,w,c
 25622  00482C  6E0D               	movwf	parseNumber@tens,c
 25623                           
 25624                           ;sevenseg.c: 63: uint8_t ones = (numberToDisplay - hundreds * 100u - tens * 10u);
 25625  00482E  500D               	movf	parseNumber@tens,w,c
 25626  004830  0D0A               	mullw	10
 25627  004832  CFF3 F00B          	movff	prodl,??_parseNumber
 25628  004836  500E               	movf	parseNumber@hundreds,w,c
 25629  004838  0D64               	mullw	100
 25630  00483A  50F3               	movf	prodl,w,c
 25631  00483C  240B               	addwf	??_parseNumber,w,c
 25632  00483E  0800               	sublw	0
 25633  004840  2408               	addwf	parseNumber@numberToDisplay,w,c
 25634  004842  6E0C               	movwf	parseNumber@ones,c
 25635                           
 25636                           ;sevenseg.c: 64: switch (digit) {
 25637  004844  D008               	goto	i2l765
 25638  004846                     
 25639                           ;sevenseg.c: 66: return ones;
 25640  004846  500C               	movf	parseNumber@ones,w,c
 25641  004848  0012               	return	
 25642  00484A                     
 25643                           ;sevenseg.c: 68: return tens;
 25644  00484A  500D               	movf	parseNumber@tens,w,c
 25645  00484C  0012               	return	
 25646  00484E                     
 25647                           ;sevenseg.c: 70: return hundreds;
 25648  00484E  500E               	movf	parseNumber@hundreds,w,c
 25649  004850  0012               	return	
 25650  004852  0E00               	movlw	0
 25651                           
 25652                           ;sevenseg.c: 72: }
 25653  004854  0012               	return	
 25654  004856                     i2l765:
 25655  004856  500A               	movf	parseNumber@digit,w,c
 25656                           
 25657                           ; Switch size 1, requested type "space"
 25658                           ; Number of cases is 3, Range of values is 0 to 2
 25659                           ; switch strategies available:
 25660                           ; Name         Instructions Cycles
 25661                           ; simple_byte           10     6 (average)
 25662                           ;	Chosen strategy is simple_byte
 25663  004858  0A00               	xorlw	0	; case 0
 25664  00485A  B4D8               	btfsc	status,2,c
 25665  00485C  D7F8               	goto	i2l769
 25666  00485E  0A01               	xorlw	1	; case 1
 25667  004860  B4D8               	btfsc	status,2,c
 25668  004862  D7F3               	goto	i2l768
 25669  004864  0A03               	xorlw	3	; case 2
 25670  004866  B4D8               	btfsc	status,2,c
 25671  004868  D7EE               	goto	i2l766
 25672  00486A  D7F3               	goto	i2l770
 25673  00486C                     __end_of_parseNumber:
 25674                           	opt stack 0
 25675                           pclatu	equ	0xFFB
 25676                           pclath	equ	0xFFA
 25677                           tblptru	equ	0xFF8
 25678                           tblptrh	equ	0xFF7
 25679                           tblptrl	equ	0xFF6
 25680                           tablat	equ	0xFF5
 25681                           prodh	equ	0xFF4
 25682                           prodl	equ	0xFF3
 25683                           intcon	equ	0xFF2
 25684                           intcon3	equ	0xFF0
 25685                           indf0	equ	0xFEF
 25686                           postinc0	equ	0xFEE
 25687                           plusw0	equ	0xFEB
 25688                           fsr0h	equ	0xFEA
 25689                           fsr0l	equ	0xFE9
 25690                           wreg	equ	0xFE8
 25691                           indf1	equ	0xFE7
 25692                           postinc1	equ	0xFE6
 25693                           postdec1	equ	0xFE5
 25694                           plusw1	equ	0xFE3
 25695                           fsr1h	equ	0xFE2
 25696                           fsr1l	equ	0xFE1
 25697                           indf2	equ	0xFDF
 25698                           postinc2	equ	0xFDE
 25699                           postdec2	equ	0xFDD
 25700                           plusw2	equ	0xFDB
 25701                           fsr2h	equ	0xFDA
 25702                           fsr2l	equ	0xFD9
 25703                           status	equ	0xFD8
 25704                           
 25705 ;; *************** function i2___lwdiv *****************
 25706 ;; Defined at:
 25707 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 25708 ;; Parameters:    Size  Location     Type
 25709 ;;  dividend        2    0[COMRAM] unsigned int 
 25710 ;;  divisor         2    2[COMRAM] unsigned int 
 25711 ;; Auto vars:     Size  Location     Type
 25712 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 25713 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 25714 ;; Return value:  Size  Location     Type
 25715 ;;                  2    0[COMRAM] unsigned int 
 25716 ;; Registers used:
 25717 ;;		wreg, status,2, status,0
 25718 ;; Tracked objects:
 25719 ;;		On entry : 0/0
 25720 ;;		On exit  : 0/0
 25721 ;;		Unchanged: 0/0
 25722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25723 ;;      Params:         4       0       0       0       0       0       0       0       0
 25724 ;;      Locals:         3       0       0       0       0       0       0       0       0
 25725 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25726 ;;      Totals:         7       0       0       0       0       0       0       0       0
 25727 ;;Total ram usage:        7 bytes
 25728 ;; Hardware stack levels used:    1
 25729 ;; This function calls:
 25730 ;;		Nothing
 25731 ;; This function is called by:
 25732 ;;		_parseNumber
 25733 ;; This function uses a non-reentrant model
 25734 ;;
 25735                           
 25736                           	psect	text116
 25737  004F4C                     __ptext116:
 25738                           	opt stack 0
 25739  004F4C                     i2___lwdiv:
 25740                           	opt stack 17
 25741                           
 25742                           ;incstack = 0
 25743  004F4C  0E00               	movlw	0
 25744  004F4E  6E06               	movwf	i2___lwdiv@quotient+1,c
 25745  004F50  0E00               	movlw	0
 25746  004F52  6E05               	movwf	i2___lwdiv@quotient,c
 25747  004F54  5003               	movf	i2___lwdiv@divisor,w,c
 25748  004F56  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 25749  004F58  B4D8               	btfsc	status,2,c
 25750  004F5A  D01C               	goto	i2l1652
 25751  004F5C  0E01               	movlw	1
 25752  004F5E  6E07               	movwf	i2___lwdiv@counter,c
 25753  004F60  D004               	goto	i2l1647
 25754  004F62  90D8               	bcf	status,0,c
 25755  004F64  3603               	rlcf	i2___lwdiv@divisor,f,c
 25756  004F66  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 25757  004F68  2A07               	incf	i2___lwdiv@counter,f,c
 25758  004F6A                     i2l1647:
 25759  004F6A  AE04               	btfss	i2___lwdiv@divisor+1,7,c
 25760  004F6C  D7FA               	goto	i2l1648
 25761  004F6E                     i2u744_40:
 25762  004F6E  90D8               	bcf	status,0,c
 25763  004F70  3605               	rlcf	i2___lwdiv@quotient,f,c
 25764  004F72  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 25765  004F74  5003               	movf	i2___lwdiv@divisor,w,c
 25766  004F76  5C01               	subwf	i2___lwdiv@dividend,w,c
 25767  004F78  5004               	movf	i2___lwdiv@divisor+1,w,c
 25768  004F7A  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 25769  004F7C  A0D8               	btfss	status,0,c
 25770  004F7E  D005               	goto	i2l1651
 25771  004F80  5003               	movf	i2___lwdiv@divisor,w,c
 25772  004F82  5E01               	subwf	i2___lwdiv@dividend,f,c
 25773  004F84  5004               	movf	i2___lwdiv@divisor+1,w,c
 25774  004F86  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 25775  004F88  8005               	bsf	i2___lwdiv@quotient,0,c
 25776  004F8A                     i2l1651:
 25777  004F8A  90D8               	bcf	status,0,c
 25778  004F8C  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 25779  004F8E  3203               	rrcf	i2___lwdiv@divisor,f,c
 25780  004F90  2E07               	decfsz	i2___lwdiv@counter,f,c
 25781  004F92  D7ED               	goto	i2u744_40
 25782  004F94                     i2l1652:
 25783  004F94  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 25784  004F98  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 25785  004F9C  0012               	return		;funcret
 25786  004F9E                     __end_ofi2___lwdiv:
 25787                           	opt stack 0
 25788                           pclatu	equ	0xFFB
 25789                           pclath	equ	0xFFA
 25790                           tblptru	equ	0xFF8
 25791                           tblptrh	equ	0xFF7
 25792                           tblptrl	equ	0xFF6
 25793                           tablat	equ	0xFF5
 25794                           prodh	equ	0xFF4
 25795                           prodl	equ	0xFF3
 25796                           intcon	equ	0xFF2
 25797                           intcon3	equ	0xFF0
 25798                           indf0	equ	0xFEF
 25799                           postinc0	equ	0xFEE
 25800                           plusw0	equ	0xFEB
 25801                           fsr0h	equ	0xFEA
 25802                           fsr0l	equ	0xFE9
 25803                           wreg	equ	0xFE8
 25804                           indf1	equ	0xFE7
 25805                           postinc1	equ	0xFE6
 25806                           postdec1	equ	0xFE5
 25807                           plusw1	equ	0xFE3
 25808                           fsr1h	equ	0xFE2
 25809                           fsr1l	equ	0xFE1
 25810                           indf2	equ	0xFDF
 25811                           postinc2	equ	0xFDE
 25812                           postdec2	equ	0xFDD
 25813                           plusw2	equ	0xFDB
 25814                           fsr2h	equ	0xFDA
 25815                           fsr2l	equ	0xFD9
 25816                           status	equ	0xFD8
 25817                           
 25818 ;; *************** function _buttonHandler *****************
 25819 ;; Defined at:
 25820 ;;		line 240 in file "src/system/main.c"
 25821 ;; Parameters:    Size  Location     Type
 25822 ;;  state           2    0[COMRAM] PTR volatile unsigned ch
 25823 ;;		 -> buttonState(1), 
 25824 ;; Auto vars:     Size  Location     Type
 25825 ;;  debounceValu    4    6[COMRAM] const unsigned long 
 25826 ;;  resetValue      4    2[COMRAM] const unsigned long 
 25827 ;; Return value:  Size  Location     Type
 25828 ;;                  1    wreg      void 
 25829 ;; Registers used:
 25830 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25831 ;; Tracked objects:
 25832 ;;		On entry : 0/0
 25833 ;;		On exit  : 0/0
 25834 ;;		Unchanged: 0/0
 25835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25836 ;;      Params:         2       0       0       0       0       0       0       0       0
 25837 ;;      Locals:         8       0       0       0       0       0       0       0       0
 25838 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25839 ;;      Totals:        10       0       0       0       0       0       0       0       0
 25840 ;;Total ram usage:       10 bytes
 25841 ;; Hardware stack levels used:    1
 25842 ;; This function calls:
 25843 ;;		Nothing
 25844 ;; This function is called by:
 25845 ;;		_ISR
 25846 ;; This function uses a non-reentrant model
 25847 ;;
 25848                           
 25849                           	psect	text117
 25850  00423C                     __ptext117:
 25851                           	opt stack 0
 25852  00423C                     _buttonHandler:
 25853                           	opt stack 19
 25854                           
 25855                           ;main.c: 241: uint8_t static oldState = 0;
 25856                           ;main.c: 242: uint8_t static newState = 0;
 25857                           ;main.c: 243: uint32_t static debounceCounter = 0;
 25858                           ;main.c: 244: const uint32_t debounceValue = 0x1f;
 25859                           
 25860                           ;incstack = 0
 25861  00423C  0E1F               	movlw	31
 25862  00423E  6E07               	movwf	buttonHandler@debounceValue,c
 25863  004240  0E00               	movlw	0
 25864  004242  6E08               	movwf	buttonHandler@debounceValue+1,c
 25865  004244  0E00               	movlw	0
 25866  004246  6E09               	movwf	buttonHandler@debounceValue+2,c
 25867  004248  0E00               	movlw	0
 25868  00424A  6E0A               	movwf	buttonHandler@debounceValue+3,c
 25869                           
 25870                           ;main.c: 245: const uint32_t resetValue = 0x3ff;
 25871  00424C  0EFF               	movlw	255
 25872  00424E  6E03               	movwf	buttonHandler@resetValue,c
 25873  004250  0E03               	movlw	3
 25874  004252  6E04               	movwf	buttonHandler@resetValue+1,c
 25875  004254  0E00               	movlw	0
 25876  004256  6E05               	movwf	buttonHandler@resetValue+2,c
 25877  004258  0E00               	movlw	0
 25878  00425A  6E06               	movwf	buttonHandler@resetValue+3,c
 25879                           
 25880                           ;main.c: 246: if ((unsigned)(!(PORTB & (1<<5)))) {
 25881  00425C  BA81               	btfsc	3969,5,c	;volatile
 25882  00425E  D007               	goto	i2l713
 25883                           
 25884                           ;main.c: 247: debounceCounter++;
 25885  004260  0E01               	movlw	1
 25886  004262  262D               	addwf	buttonHandler@debounceCounter,f,c
 25887  004264  0E00               	movlw	0
 25888  004266  222E               	addwfc	buttonHandler@debounceCounter+1,f,c
 25889  004268  222F               	addwfc	buttonHandler@debounceCounter+2,f,c
 25890  00426A  2230               	addwfc	buttonHandler@debounceCounter+3,f,c
 25891                           
 25892                           ;main.c: 248: } else {
 25893  00426C  D008               	goto	i2l714
 25894  00426E                     i2l713:
 25895                           
 25896                           ;main.c: 249: debounceCounter = 0;
 25897  00426E  0E00               	movlw	0
 25898  004270  6E2D               	movwf	buttonHandler@debounceCounter,c
 25899  004272  0E00               	movlw	0
 25900  004274  6E2E               	movwf	buttonHandler@debounceCounter+1,c
 25901  004276  0E00               	movlw	0
 25902  004278  6E2F               	movwf	buttonHandler@debounceCounter+2,c
 25903  00427A  0E00               	movlw	0
 25904  00427C  6E30               	movwf	buttonHandler@debounceCounter+3,c
 25905  00427E                     i2l714:
 25906                           
 25907                           ;main.c: 250: }
 25908                           ;main.c: 251: newState = (unsigned) ((debounceCounter >= debounceValue) ? 1 : 0);
 25909  00427E  5007               	movf	buttonHandler@debounceValue,w,c
 25910  004280  5C2D               	subwf	buttonHandler@debounceCounter,w,c
 25911  004282  5008               	movf	buttonHandler@debounceValue+1,w,c
 25912  004284  582E               	subwfb	buttonHandler@debounceCounter+1,w,c
 25913  004286  5009               	movf	buttonHandler@debounceValue+2,w,c
 25914  004288  582F               	subwfb	buttonHandler@debounceCounter+2,w,c
 25915  00428A  500A               	movf	buttonHandler@debounceValue+3,w,c
 25916  00428C  5830               	subwfb	buttonHandler@debounceCounter+3,w,c
 25917  00428E  A0D8               	btfss	status,0,c
 25918  004290  D002               	goto	i2u832_40
 25919  004292  0E01               	movlw	1
 25920  004294  D001               	goto	i2u833_40
 25921  004296                     i2u832_40:
 25922  004296  0E00               	movlw	0
 25923  004298                     i2u833_40:
 25924  004298  6E45               	movwf	buttonHandler@newState,c
 25925                           
 25926                           ;main.c: 252: if (newState && !oldState) {
 25927  00429A  5045               	movf	buttonHandler@newState,w,c
 25928  00429C  B4D8               	btfsc	status,2,c
 25929  00429E  D011               	goto	i2l715
 25930  0042A0  5046               	movf	buttonHandler@oldState,w,c
 25931  0042A2  A4D8               	btfss	status,2,c
 25932  0042A4  D00E               	goto	i2l715
 25933                           
 25934                           ;main.c: 253: debounceCounter = debounceValue;
 25935  0042A6  C007  F02D         	movff	buttonHandler@debounceValue,buttonHandler@debounceCounter
 25936  0042AA  C008  F02E         	movff	buttonHandler@debounceValue+1,buttonHandler@debounceCounter+1
 25937  0042AE  C009  F02F         	movff	buttonHandler@debounceValue+2,buttonHandler@debounceCounter+2
 25938  0042B2  C00A  F030         	movff	buttonHandler@debounceValue+3,buttonHandler@debounceCounter+3
 25939                           
 25940                           ;main.c: 254: *state = 1;
 25941  0042B6  C001  FFD9         	movff	buttonHandler@state,fsr2l
 25942  0042BA  C002  FFDA         	movff	buttonHandler@state+1,fsr2h
 25943  0042BE  0E01               	movlw	1
 25944  0042C0  D005               	goto	L11
 25945  0042C2                     i2l715:
 25946                           
 25947                           ;main.c: 256: *state = 0;
 25948  0042C2  C001  FFD9         	movff	buttonHandler@state,fsr2l
 25949  0042C6  C002  FFDA         	movff	buttonHandler@state+1,fsr2h
 25950  0042CA  0E00               	movlw	0
 25951  0042CC                     L11:
 25952  0042CC  6EDF               	movwf	indf2,c
 25953                           
 25954                           ;main.c: 257: }
 25955                           ;main.c: 258: if (debounceCounter > resetValue)
 25956  0042CE  502D               	movf	buttonHandler@debounceCounter,w,c
 25957  0042D0  5C03               	subwf	buttonHandler@resetValue,w,c
 25958  0042D2  502E               	movf	buttonHandler@debounceCounter+1,w,c
 25959  0042D4  5804               	subwfb	buttonHandler@resetValue+1,w,c
 25960  0042D6  502F               	movf	buttonHandler@debounceCounter+2,w,c
 25961  0042D8  5805               	subwfb	buttonHandler@resetValue+2,w,c
 25962  0042DA  5030               	movf	buttonHandler@debounceCounter+3,w,c
 25963  0042DC  5806               	subwfb	buttonHandler@resetValue+3,w,c
 25964  0042DE  A0D8               	btfss	status,0,c
 25965  0042E0  00FF               	reset		;# 
 25966                           
 25967                           ;main.c: 261: oldState = newState;
 25968  0042E2  C045  F046         	movff	buttonHandler@newState,buttonHandler@oldState
 25969  0042E6  0012               	return		;funcret
 25970  0042E8                     __end_of_buttonHandler:
 25971                           	opt stack 0
 25972                           pclatu	equ	0xFFB
 25973                           pclath	equ	0xFFA
 25974                           tblptru	equ	0xFF8
 25975                           tblptrh	equ	0xFF7
 25976                           tblptrl	equ	0xFF6
 25977                           tablat	equ	0xFF5
 25978                           prodh	equ	0xFF4
 25979                           prodl	equ	0xFF3
 25980                           intcon	equ	0xFF2
 25981                           intcon3	equ	0xFF0
 25982                           indf0	equ	0xFEF
 25983                           postinc0	equ	0xFEE
 25984                           plusw0	equ	0xFEB
 25985                           fsr0h	equ	0xFEA
 25986                           fsr0l	equ	0xFE9
 25987                           wreg	equ	0xFE8
 25988                           indf1	equ	0xFE7
 25989                           postinc1	equ	0xFE6
 25990                           postdec1	equ	0xFE5
 25991                           plusw1	equ	0xFE3
 25992                           fsr1h	equ	0xFE2
 25993                           fsr1l	equ	0xFE1
 25994                           indf2	equ	0xFDF
 25995                           postinc2	equ	0xFDE
 25996                           postdec2	equ	0xFDD
 25997                           plusw2	equ	0xFDB
 25998                           fsr2h	equ	0xFDA
 25999                           fsr2l	equ	0xFD9
 26000                           status	equ	0xFD8
 26001                           pclatu	equ	0xFFB
 26002                           pclath	equ	0xFFA
 26003                           tblptru	equ	0xFF8
 26004                           tblptrh	equ	0xFF7
 26005                           tblptrl	equ	0xFF6
 26006                           tablat	equ	0xFF5
 26007                           prodh	equ	0xFF4
 26008                           prodl	equ	0xFF3
 26009                           intcon	equ	0xFF2
 26010                           intcon3	equ	0xFF0
 26011                           indf0	equ	0xFEF
 26012                           postinc0	equ	0xFEE
 26013                           plusw0	equ	0xFEB
 26014                           fsr0h	equ	0xFEA
 26015                           fsr0l	equ	0xFE9
 26016                           wreg	equ	0xFE8
 26017                           indf1	equ	0xFE7
 26018                           postinc1	equ	0xFE6
 26019                           postdec1	equ	0xFE5
 26020                           plusw1	equ	0xFE3
 26021                           fsr1h	equ	0xFE2
 26022                           fsr1l	equ	0xFE1
 26023                           indf2	equ	0xFDF
 26024                           postinc2	equ	0xFDE
 26025                           postdec2	equ	0xFDD
 26026                           plusw2	equ	0xFDB
 26027                           fsr2h	equ	0xFDA
 26028                           fsr2l	equ	0xFD9
 26029                           status	equ	0xFD8
 26030                           
 26031                           	psect	rparam
 26032  0000                     pclatu	equ	0xFFB
 26033                           pclath	equ	0xFFA
 26034                           tblptru	equ	0xFF8
 26035                           tblptrh	equ	0xFF7
 26036                           tblptrl	equ	0xFF6
 26037                           tablat	equ	0xFF5
 26038                           prodh	equ	0xFF4
 26039                           prodl	equ	0xFF3
 26040                           intcon	equ	0xFF2
 26041                           intcon3	equ	0xFF0
 26042                           indf0	equ	0xFEF
 26043                           postinc0	equ	0xFEE
 26044                           plusw0	equ	0xFEB
 26045                           fsr0h	equ	0xFEA
 26046                           fsr0l	equ	0xFE9
 26047                           wreg	equ	0xFE8
 26048                           indf1	equ	0xFE7
 26049                           postinc1	equ	0xFE6
 26050                           postdec1	equ	0xFE5
 26051                           plusw1	equ	0xFE3
 26052                           fsr1h	equ	0xFE2
 26053                           fsr1l	equ	0xFE1
 26054                           indf2	equ	0xFDF
 26055                           postinc2	equ	0xFDE
 26056                           postdec2	equ	0xFDD
 26057                           plusw2	equ	0xFDB
 26058                           fsr2h	equ	0xFDA
 26059                           fsr2l	equ	0xFD9
 26060                           status	equ	0xFD8
 26061                           
 26062                           	psect	temp
 26063  00004F                     btemp:
 26064                           	opt stack 0
 26065  00004F                     	ds	1
 26066  0000                     int$flags	set	btemp
 26067  0000                     wtemp6	set	btemp+1
 26068                           pclatu	equ	0xFFB
 26069                           pclath	equ	0xFFA
 26070                           tblptru	equ	0xFF8
 26071                           tblptrh	equ	0xFF7
 26072                           tblptrl	equ	0xFF6
 26073                           tablat	equ	0xFF5
 26074                           prodh	equ	0xFF4
 26075                           prodl	equ	0xFF3
 26076                           intcon	equ	0xFF2
 26077                           intcon3	equ	0xFF0
 26078                           indf0	equ	0xFEF
 26079                           postinc0	equ	0xFEE
 26080                           plusw0	equ	0xFEB
 26081                           fsr0h	equ	0xFEA
 26082                           fsr0l	equ	0xFE9
 26083                           wreg	equ	0xFE8
 26084                           indf1	equ	0xFE7
 26085                           postinc1	equ	0xFE6
 26086                           postdec1	equ	0xFE5
 26087                           plusw1	equ	0xFE3
 26088                           fsr1h	equ	0xFE2
 26089                           fsr1l	equ	0xFE1
 26090                           indf2	equ	0xFDF
 26091                           postinc2	equ	0xFDE
 26092                           postdec2	equ	0xFDD
 26093                           plusw2	equ	0xFDB
 26094                           fsr2h	equ	0xFDA
 26095                           fsr2l	equ	0xFD9
 26096                           status	equ	0xFD8


Data Sizes:
    Strings     1513
    Constant    11
    Data        52
    BSS         459
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      78
    BANK0           160    160     160
    BANK1           256    194     250
    BANK2           256      0     256
    BANK3           256      0     162
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> intToString@number(BANK1[10]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> intToString@number(BANK1[10]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> intToString@number(BANK1[10]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> intToString@number(BANK1[10]), 

    ipv4_setToAllZero@ip	PTR struct ipv4_address size(2) Largest target is 4
		 -> ipPreliminarySource(BANK1[4]), ipSource(BANK1[4]), arp_init@ip(BANK0[4]), arp_probe@ipSender(BANK1[4]), 

    ipv4_isAllZero@ip	PTR struct ipv4_address size(2) Largest target is 32
		 -> arp_setNewEntry@ip(BANK0[4]), arp_parseFromRXBuffer@arp(BANK0[32]), arp_handleNewPacket@arp(BANK1[32]), 

    ipv4_cmp@b	PTR struct ipv4_address size(2) Largest target is 32
		 -> arp_checkForEntry@ip(BANK0[4]), arp_sendReply@myIP(BANK1[4]), arp_parseFromRXBuffer@arp(BANK0[32]), 

    ipv4_cmp@a	PTR struct ipv4_address size(2) Largest target is 112
		 -> arp_table(BANK3[112]), arp_sendReply@request(BANK1[32]), arp_parseFromRXBuffer@arp(BANK0[32]), 

    ipv4_SrcAddrChanged@err	PTR struct error size(2) Largest target is 3
		 -> arp_background@err(BANK1[3]), 

    arpStatus	PTR struct error size(2) Largest target is 3
		 -> NULL(NULL[0]), arp_background@err(BANK1[3]), 

    ipv4_handleNewPacket@frame	PTR struct ethernetFrame size(2) Largest target is 123
		 -> stack(BANK2[123]), 

    ipv4_checkHeaderChecksum@header	PTR struct ipv4_header size(2) Largest target is 23
		 -> ipv4_handleNewPacket@ip(BANK0[23]), 

    ipv4_parseHeader@field	PTR struct memoryField size(2) Largest target is 9
		 -> ipv4_handleNewPacket@headerField(BANK0[9]), 

    ipv4_calculateHeaderChecksum@header	PTR struct ipv4_header size(2) Largest target is 123
		 -> ipv4_checkHeaderChecksum@testHeader(BANK0[23]), stack.pendingPacketToSend(BANK2[66]), stack(BANK2[123]), 

    ipv4_writeHeaderIntoBuffer@ptr	PTR unsigned char  size(2) Largest target is 32
		 -> main@headerBuf(BANK1[32]), 

    ipv4_txFrameRequest@packet	PTR struct ipv4_packet size(2) Largest target is 123
		 -> stack(BANK2[123]), 

    arp_checkForEntry@index	PTR unsigned char  size(2) Largest target is 1
		 -> ipv4_sendFrame@index(BANK0[1]), arp_gratuitous@index(BANK0[1]), arp_probe@index(BANK1[1]), 

    arp_parseFromRXBuffer@frame	PTR struct ethernetFrame size(2) Largest target is 123
		 -> stack(BANK2[123]), 

    arp_handleNewPacket@frame	PTR struct ethernetFrame size(2) Largest target is 123
		 -> stack(BANK2[123]), 

    sp__arpEntryToString	PTR unsigned char  size(2) Largest target is 50
		 -> arpEntryToString@string(BANK3[50]), 

    sp__ipProtocolToString	PTR unsigned char  size(2) Largest target is 17
		 -> STR_69(CODE[17]), STR_68(CODE[4]), STR_67(CODE[4]), STR_66(CODE[5]), 

    sp__hexToString	PTR unsigned char  size(2) Largest target is 10
		 -> hexToString@number(BANK1[10]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 10
		 -> intToString@number(BANK1[10]), 

    UARTTransmitText@str	PTR const unsigned char  size(2) Largest target is 58
		 -> STR_113(CODE[33]), STR_112(CODE[19]), STR_111(CODE[2]), STR_110(CODE[3]), 
		 -> STR_109(CODE[3]), STR_108(CODE[3]), STR_107(CODE[3]), STR_106(CODE[5]), 
		 -> STR_105(CODE[2]), STR_104(CODE[2]), STR_103(CODE[7]), STR_102(CODE[11]), 
		 -> STR_101(CODE[3]), STR_100(CODE[27]), STR_99(CODE[3]), STR_98(CODE[8]), 
		 -> STR_97(CODE[9]), STR_96(CODE[3]), STR_95(CODE[39]), STR_94(CODE[3]), 
		 -> STR_93(CODE[3]), STR_92(CODE[30]), STR_91(CODE[33]), STR_90(CODE[39]), 
		 -> STR_89(CODE[35]), STR_88(CODE[58]), STR_87(CODE[36]), STR_86(CODE[34]), 
		 -> STR_85(CODE[3]), STR_84(CODE[43]), STR_83(CODE[4]), STR_82(CODE[12]), 
		 -> STR_81(CODE[26]), STR_80(CODE[2]), STR_79(CODE[3]), STR_78(CODE[16]), 
		 -> STR_77(CODE[15]), STR_76(CODE[10]), STR_75(CODE[2]), STR_74(CODE[3]), 
		 -> STR_73(CODE[5]), STR_72(CODE[3]), STR_71(CODE[2]), STR_70(CODE[39]), 
		 -> arpEntryToString@string(BANK3[50]), ipAdressToString@address(BANK2[16]), STR_69(CODE[17]), STR_68(CODE[4]), 
		 -> STR_67(CODE[4]), STR_66(CODE[5]), STR_65(CODE[18]), STR_64(CODE[4]), 
		 -> STR_63(CODE[5]), macToString@address(BANK0[18]), hexToString@number(BANK1[10]), intToString@number(BANK1[10]), 
		 -> STR_62(CODE[5]), STR_61(CODE[9]), STR_60(CODE[30]), STR_59(CODE[34]), 
		 -> STR_58(CODE[55]), STR_57(CODE[37]), STR_56(CODE[15]), STR_55(CODE[14]), 
		 -> STR_54(CODE[19]), STR_53(CODE[30]), STR_52(CODE[17]), STR_51(CODE[8]), 
		 -> STR_50(CODE[29]), STR_49(CODE[29]), STR_48(CODE[20]), STR_47(CODE[19]), 
		 -> STR_46(CODE[19]), STR_45(CODE[13]), STR_44(CODE[4]), STR_43(CODE[5]), 
		 -> STR_42(CODE[32]), STR_41(CODE[3]), STR_40(CODE[15]), STR_39(CODE[51]), 
		 -> STR_38(CODE[4]), STR_37(CODE[23]), STR_36(CODE[12]), STR_35(CODE[4]), 
		 -> STR_34(CODE[9]), STR_33(CODE[2]), STR_32(CODE[12]), STR_31(CODE[24]), 
		 -> STR_30(CODE[51]), STR_29(CODE[49]), STR_28(CODE[51]), STR_27(CODE[2]), 
		 -> STR_26(CODE[3]), STR_25(CODE[37]), STR_24(CODE[37]), STR_23(CODE[3]), 
		 -> STR_22(CODE[27]), STR_21(CODE[40]), STR_20(CODE[3]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[2]), STR_15(CODE[3]), 
		 -> STR_14(CODE[5]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[2]), 
		 -> STR_10(CODE[20]), STR_9(CODE[7]), STR_8(CODE[6]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[16]), STR_4(CODE[10]), STR_3(CODE[12]), 
		 -> STR_2(CODE[2]), STR_1(CODE[2]), ethernetController_getDeviceName@string(BANK0[11]), 

    buttonHandler@state	PTR volatile unsigned char  size(2) Largest target is 1
		 -> buttonState(BANK1[1]), 

    sp__ipAdressToString	PTR unsigned char  size(2) Largest target is 16
		 -> ipAdressToString@address(BANK2[16]), 

    handleStackBackgroundTasks@stack	PTR struct stack size(2) Largest target is 123
		 -> stack(BANK2[123]), 

    mac_setAllZero@mac	PTR struct macaddress size(2) Largest target is 6
		 -> arp_init@mac(BANK0[6]), arp_sendRequest@targetMAC(BANK1[6]), 

    mac_cmp@b	PTR struct macaddress size(2) Largest target is 32
		 -> arp_parseFromRXBuffer@arp(BANK0[32]), 

    mac_cmp@a	PTR struct macaddress size(2) Largest target is 32
		 -> arp_parseFromRXBuffer@arp(BANK0[32]), 

    mac_isAllZero@mac	PTR struct macaddress size(2) Largest target is 32
		 -> arp_setNewEntry@mac(BANK0[6]), arp_parseFromRXBuffer@arp(BANK0[32]), 

    mac_setToBroadcast@mac	PTR struct macaddress size(2) Largest target is 6
		 -> arp_send@destination(BANK0[6]), 

    sp__etherTypeToString	PTR unsigned char  size(2) Largest target is 18
		 -> STR_65(CODE[18]), STR_64(CODE[4]), STR_63(CODE[5]), 

    sp__macToString	PTR unsigned char  size(2) Largest target is 18
		 -> macToString@address(BANK0[18]), 

    sp__intToString	PTR unsigned char  size(2) Largest target is 10
		 -> intToString@number(BANK1[10]), 

    ethernet_rxGetNewFrame@frame	PTR struct ethernetFrame size(2) Largest target is 123
		 -> stack(BANK2[123]), 

    ethernet_txFrameRequest@frame	PTR struct ethernetFrame size(2) Largest target is 123
		 -> arp_send@ethFrame(BANK0[34]), stack(BANK2[123]), 

    enc424j600_updateReceiveStatusVector@rsv	PTR unsigned char  size(2) Largest target is 6
		 -> ethernetController_getRSV@temp(BANK1[6]), 

    enc424j600_readPHYRegister@data	PTR unsigned int  size(2) Largest target is 2
		 -> ethernetController_updateLinkStatus@temp16(BANK0[2]), 

    enc424j600_readControlRegisterUnbanked@data	PTR unsigned char  size(2) Largest target is 6
		 -> enc424j600_clearInterruptFlag@temp(BANK0[1]), enc424j600_getInterruptFlags@high(BANK0[1]), enc424j600_getInterruptFlags@low(BANK0[1]), enc424j600_disable@temp(COMRAM[1]), 
		 -> enc424j600_enable@temp(COMRAM[1]), enc424j600_disableAutoMACInsertion@temp(COMRAM[1]), enc424j600_enableAutoMACInsertion@temp(BANK0[1]), enc424j600_getPacketCount@lowByte(BANK0[1]), 
		 -> enc424j600_readPHYRegister@highByte(BANK0[1]), enc424j600_readPHYRegister@lowByte(BANK0[1]), enc424j600_readPHYRegister@temp(BANK0[1]), ethernetController_setLEDConfig@data(BANK0[1]), 
		 -> ethernetController_updateLinkStatus@temp(BANK0[1]), mac.address(COMRAM[6]), ethernetController_getMacAddress@mac(BANK0[6]), ethernetController_getSiliconRevision@data(COMRAM[1]), 
		 -> ethernetController_checkDeviceId@data(BANK0[1]), ethernetController_softReset@receivedData(BANK0[2]), 

    enc424j600_writeControlRegisterUnbanked@data	PTR unsigned char  size(2) Largest target is 6
		 -> enc424j600_clearInterruptFlag@temp(BANK0[1]), enc424j600_disable@temp(COMRAM[1]), enc424j600_enable@temp(COMRAM[1]), enc424j600_disableAutoMACInsertion@temp(COMRAM[1]), 
		 -> enc424j600_enableAutoMACInsertion@temp(BANK0[1]), enc424j600_setRXTailPointer@highByte(BANK0[1]), enc424j600_setRXTailPointer@lowByte(BANK0[1]), enc424j600_setRXBufferStartAddress@highByte(BANK0[1]), 
		 -> enc424j600_setRXBufferStartAddress@lowByte(BANK0[1]), enc424j600_setTXStartAddress@highByte(BANK0[1]), enc424j600_setTXStartAddress@lowByte(BANK0[1]), enc424j600_setTXLength@highByte(BANK0[1]), 
		 -> enc424j600_setTXLength@lowByte(BANK0[1]), enc424j600_readPHYRegister@temp(BANK0[1]), enc424j600_readPHYRegister@unusedBits(BANK0[1]), enc424j600_readPHYRegister@PHYaddress(BANK0[1]), 
		 -> ethernetController_setLEDConfig@data(BANK0[1]), mac.address(COMRAM[6]), ethernetController_setMacAddress@mac(COMRAM[6]), ethernetController_softReset@dataToSend(BANK0[2]), 

    enc424j600_readSPI@data	PTR unsigned char  size(2) Largest target is 6
		 -> enc424j600_clearInterruptFlag@temp(BANK0[1]), enc424j600_getInterruptFlags@high(BANK0[1]), enc424j600_getInterruptFlags@low(BANK0[1]), enc424j600_disable@temp(COMRAM[1]), 
		 -> enc424j600_enable@temp(COMRAM[1]), enc424j600_disableAutoMACInsertion@temp(COMRAM[1]), enc424j600_enableAutoMACInsertion@temp(BANK0[1]), enc424j600_getPacketCount@lowByte(BANK0[1]), 
		 -> enc424j600_readPHYRegister@highByte(BANK0[1]), enc424j600_readPHYRegister@lowByte(BANK0[1]), enc424j600_readPHYRegister@temp(BANK0[1]), ethernetController_setLEDConfig@data(BANK0[1]), 
		 -> ethernetController_updateLinkStatus@temp(BANK0[1]), ethernetController_streamFromRXBuffer@temp(BANK0[1]), ethernetController_updateNextPacketPointer@newPointerH(BANK0[1]), ethernetController_updateNextPacketPointer@newPointerL(BANK0[1]), 
		 -> ethernetController_getRSV@temp(BANK1[6]), ethernetController_getEtherTypeField@lowByte(BANK0[1]), ethernetController_getEtherTypeField@highByte(BANK0[1]), ethernetController_getSourceMACAddress@temp(BANK0[1]), 
		 -> ethernetController_getDestinationMACAddress@temp(COMRAM[1]), mac.address(COMRAM[6]), ethernetController_getMacAddress@mac(BANK0[6]), ethernetController_getSiliconRevision@data(COMRAM[1]), 
		 -> ethernetController_checkDeviceId@data(BANK0[1]), ethernetController_softReset@receivedData(BANK0[2]), 

    enc424j600_writeSPI@data	PTR unsigned char  size(2) Largest target is 6
		 -> enc424j600_clearInterruptFlag@temp(BANK0[1]), enc424j600_disable@temp(COMRAM[1]), enc424j600_enable@temp(COMRAM[1]), enc424j600_disableAutoMACInsertion@temp(COMRAM[1]), 
		 -> enc424j600_enableAutoMACInsertion@temp(BANK0[1]), enc424j600_setRXTailPointer@highByte(BANK0[1]), enc424j600_setRXTailPointer@lowByte(BANK0[1]), enc424j600_setRXBufferStartAddress@highByte(BANK0[1]), 
		 -> enc424j600_setRXBufferStartAddress@lowByte(BANK0[1]), enc424j600_setERXDATAReadPointer@highByte(BANK0[1]), enc424j600_setERXDATAReadPointer@lowByte(BANK0[1]), enc424j600_setERXDATAReadPointer@opcode(BANK0[1]), 
		 -> enc424j600_setGPDATAReadPointer@highByte(COMRAM[1]), enc424j600_setGPDATAReadPointer@lowByte(COMRAM[1]), enc424j600_setGPDATAReadPointer@opcode(COMRAM[1]), enc424j600_setGPDATAWritePointer@highByte(BANK0[1]), 
		 -> enc424j600_setGPDATAWritePointer@lowByte(BANK0[1]), enc424j600_setGPDATAWritePointer@opcode(BANK0[1]), enc424j600_setTXStartAddress@highByte(BANK0[1]), enc424j600_setTXStartAddress@lowByte(BANK0[1]), 
		 -> enc424j600_setTXLength@highByte(BANK0[1]), enc424j600_setTXLength@lowByte(BANK0[1]), enc424j600_readPHYRegister@temp(BANK0[1]), enc424j600_readPHYRegister@unusedBits(BANK0[1]), 
		 -> enc424j600_readPHYRegister@PHYaddress(BANK0[1]), enc424j600_readControlRegisterUnbanked@addr(BANK0[1]), enc424j600_readControlRegisterUnbanked@opcode(BANK0[1]), enc424j600_writeControlRegisterUnbanked@addr(BANK0[1]), 
		 -> enc424j600_writeControlRegisterUnbanked@opcode(BANK0[1]), enc424j600_writeSingleByte@opcode(BANK0[1]), ethernetController_setLEDConfig@data(BANK0[1]), ethernetController_streamFromRXBuffer@opcode(BANK0[1]), 
		 -> ethernetController_updateNextPacketPointer@opcode(BANK0[1]), ethernetController_getRSV@opcode(BANK0[1]), ethernetController_getEtherTypeField@opcode(BANK0[1]), ethernetController_getSourceMACAddress@opcode(BANK0[1]), 
		 -> ethernetController_getDestinationMACAddress@opcode(COMRAM[1]), ethernetController_writeEtherTypeFieldToBuffer@opcode(BANK0[1]), ethernetController_writeEtherTypeFieldToBuffer@highByte(BANK0[1]), ethernetController_writeEtherTypeFieldToBuffer@lowByte(BANK0[1]), 
		 -> ethernetController_writeDestinationMACAddress@opcode(BANK0[1]), ethernetController_writeDestinationMACAddress@data(BANK0[6]), ethernetController_streamToTransmitBuffer@data(BANK0[1]), ethernetController_streamToTransmitBuffer@opcode(BANK0[1]), 
		 -> mac.address(COMRAM[6]), ethernetController_setMacAddress@mac(COMRAM[6]), ethernetController_softReset@dataToSend(BANK0[2]), 

    ethernetController_updateLinkStatus@state	PTR struct ethernetConnection size(2) Largest target is 123
		 -> stack(BANK2[123]), 

    sp__ethernetController_getDeviceName	PTR unsigned char  size(2) Largest target is 11
		 -> ethernetController_getDeviceName@string(BANK0[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_sevenSegmentUpdate
    _sevenSegmentUpdate->_parseNumber
    _parseNumber->i2___lwdiv

Critical Paths under _main in BANK0

    _stack_init->_arp_init
    _ipv4_init->_ipv4_setToAllZero
    _srand->_ethernetController_getMacAddress
    _printEthernetState->_UARTTransmitText
    _printErrorMessage->_UARTTransmitText
    _ipv4_txFrameRequest->_ethernet_txFrameRequest
    _ipv4_streamToTransmissionBuffer->_ethernetController_streamToTransmitBuffer
    _handleStackBackgroundTasks->_ipv4_sendFrame
    _ipv4_generateAutoIP->___awmod
    ___awmod->_rand
    _ipv4_background->_UARTTransmitText
    _ethernet_rxGetNewFrame->_arp_handleNewPacket
    _ipv4_handleNewPacket->_ipv4_checkHeaderChecksum
    _ipv4_parseHeader->_ethernetController_streamFromRXBuffer
    _ipv4_checkHeaderChecksum->_UARTTransmitText
    _hexToString->_hexToChar
    _ethernetController_updateNextPacketPointer->_enc424j600_setERXDATAReadPointer
    _ethernetController_getRSV->_enc424j600_updateReceiveStatusVector
    _ethernetController_getEtherTypeField->_enc424j600_setERXDATAReadPointer
    _ethernetController_dropPacket->_enc424j600_setRXTailPointer
    _ethernetController_getNextPacketPointer->_enc424j600_getNextPacketPointer
    _arp_sendReply->_arp_send
    _arp_parseFromRXBuffer->_ethernetController_streamFromRXBuffer
    _ethernetController_streamFromRXBuffer->_enc424j600_setERXDATAReadPointer
    _UARTTransmitInt->_UARTTransmitText
    _intToString->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _ethernetController_updateLinkStatus->_enc424j600_readPHYRegister
    _enc424j600_readPHYRegister->_enc424j600_readControlRegisterUnbanked
    _enc424j600_readPHYRegister->_enc424j600_writeControlRegisterUnbanked
    _ethernetController_setLEDConfig->_enc424j600_readControlRegisterUnbanked
    _ethernetController_setLEDConfig->_enc424j600_writeControlRegisterUnbanked
    _ethernetController_pollInterruptFlags->_enc424j600_getInterruptFlags
    _enc424j600_getInterruptFlags->_enc424j600_readControlRegisterUnbanked
    _ethernetController_newPacketAvailable->_enc424j600_getPacketCount
    _enc424j600_getPacketCount->_enc424j600_readControlRegisterUnbanked
    _ethernetController_clearInterruptFlag->_enc424j600_clearInterruptFlag
    _enc424j600_clearInterruptFlag->_enc424j600_readControlRegisterUnbanked
    _enc424j600_clearInterruptFlag->_enc424j600_writeControlRegisterUnbanked
    _arp_init->_arp_setNewEntry
    _arp_setNewEntry->_UARTTransmitText
    _macToString->_ethernetController_getMacAddress
    _arp_background->_arp_gratuitous
    _rand->___lmul
    _ipAdressToString->___lwmod
    ___lwmod->_rand
    _arp_sendRequest->_arp_send
    _ethernetController_getMacAddress->_enc424j600_readControlRegisterUnbanked
    _arp_send->_ethernet_txFrameRequest
    _ethernet_txFrameRequest->_memory_txFrameRequest
    _memory_txFrameRequest->_checkForOverlap
    _checkForOverlap->_checkForOverlapSwitched
    _ethernetController_writeEtherTypeFieldToBuffer->_enc424j600_setGPDATAWritePointer
    _ethernetController_writeDestinationMACAddress->_enc424j600_setGPDATAWritePointer
    _ethernetController_streamToTransmitBuffer->_enc424j600_setGPDATAWritePointer
    _enc424j600_setGPDATAWritePointer->_enc424j600_writeSPI
    _ethernetController_sendPacket->_enc424j600_setTXLength
    _ethernetController_sendPacket->_enc424j600_setTXStartAddress
    _enc424j600_setTXStartAddress->_enc424j600_writeControlRegisterUnbanked
    _enc424j600_setTXLength->_enc424j600_writeControlRegisterUnbanked
    _ethernetController_getSourceMACAddress->_enc424j600_setERXDATAReadPointer
    _enc424j600_setERXDATAReadPointer->_enc424j600_writeSPI
    _arp_checkForEntry->_ipv4_cmp
    _UARTTransmitText->_macToString
    _ethernetController_init->_ethernetController_softReset
    _ethernetController_softReset->_enc424j600_readControlRegisterUnbanked
    _ethernetController_softReset->_enc424j600_writeControlRegisterUnbanked
    _ethernetController_checkDeviceId->_enc424j600_readControlRegisterUnbanked
    _enc424j600_setRXTailPointer->_enc424j600_writeControlRegisterUnbanked
    _enc424j600_setRXBufferStartAddress->_enc424j600_writeControlRegisterUnbanked
    _enc424j600_enableReception->_enc424j600_writeSingleByte
    _enc424j600_writeSingleByte->_enc424j600_writeSPI
    _enc424j600_enableAutoMACInsertion->_enc424j600_readControlRegisterUnbanked
    _enc424j600_enableAutoMACInsertion->_enc424j600_writeControlRegisterUnbanked
    _enc424j600_writeControlRegisterUnbanked->_enc424j600_writeSPI
    _enc424j600_readControlRegisterUnbanked->_enc424j600_readSPI
    _enc424j600_readControlRegisterUnbanked->_enc424j600_writeSPI

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_handleStackBackgroundTasks
    _handleStackBackgroundTasks->_ethernet_rxGetNewFrame
    _ipv4_sendFrame->_arp_sendRequest
    _ethernet_rxGetNewFrame->_arp_handleNewPacket
    _arp_handleNewPacket->_arp_sendReply
    _arp_background->_arp_probe
    _arp_probe->_arp_sendRequest
    _arp_gratuitous->_arp_sendRequest

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                50    50      0  955402
                                            145 BANK1     49    49      0
                           _UARTInit
                   _UARTTransmitText
   _ethernetController_checkDeviceId
   _ethernetController_getDeviceName
   _ethernetController_getMacAddress
            _ethernetController_init
    _ethernetController_setLEDConfig
         _handleStackBackgroundTasks
                   _ipAdressToString
       _ipv4_calculateHeaderChecksum
                _ipv4_generateAutoIP
            _ipv4_getIPSourceAddress
    _ipv4_streamToTransmissionBuffer
                _ipv4_txFrameRequest
         _ipv4_writeHeaderIntoBuffer
                        _macToString
                  _printErrorMessage
                 _printEthernetState
                   _sevenSegmentInit
                              _srand
                         _stack_init
 ---------------------------------------------------------------------------------
 (1) _stack_init                                           0     0      0   40509
                           _arp_init
                          _ipv4_init
 ---------------------------------------------------------------------------------
 (2) _ipv4_init                                            0     0      0     546
                  _ipv4_setToAllZero
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2     135
                                             26 BANK0      2     0      2
   _ethernetController_getMacAddress (ARG)
 ---------------------------------------------------------------------------------
 (1) _sevenSegmentInit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printEthernetState                                  15     0     15   15644
                                             58 BANK0     15     0     15
                   _UARTTransmitText
 ---------------------------------------------------------------------------------
 (1) _printErrorMessage                                    5     2      3   19229
                                             58 BANK0      5     2      3
                   _UARTTransmitText
                        _intToString
 ---------------------------------------------------------------------------------
 (1) _ipv4_writeHeaderIntoBuffer                          27     2     25    1607
                                              0 BANK0     27     2     25
 ---------------------------------------------------------------------------------
 (1) _ipv4_txFrameRequest                                  6     4      2   20533
                                             71 BANK0      6     4      2
            _ethernet_txFrameRequest
 ---------------------------------------------------------------------------------
 (1) _ipv4_streamToTransmissionBuffer                     71     5     66    8299
                                             30 BANK0     69     3     66
_ethernetController_streamToTransmit
 ---------------------------------------------------------------------------------
 (1) _handleStackBackgroundTasks                          22    20      2  743277
                                            133 BANK1     12    10      2
                   _UARTTransmitText
                     _arp_background
                           _arp_init
_ethernetController_clearInterruptFl
_ethernetController_newPacketAvailab
_ethernetController_pollInterruptFla
    _ethernetController_setLEDConfig
_ethernetController_updateLinkStatus
             _ethernet_rxGetNewFrame
                   _ipAdressToString
                    _ipv4_background
                _ipv4_generateAutoIP
                     _ipv4_sendFrame
            _ipv4_setIPSourceAddress
 ---------------------------------------------------------------------------------
 (2) _ipv4_setIPSourceAddress                              4     0      4     239
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _ipv4_sendFrame                                      78    12     66  117307
                                            156 BANK0      4     4      0
                                             52 BANK1     74     8     66
                   _UARTTransmitText
                  _arp_checkForEntry
              _arp_getEntryFromTable
                    _arp_sendRequest
   _ethernetController_getMacAddress
      _ethernetController_sendPacket
_ethernetController_writeDestination
                          _getMillis
                   _ipAdressToString
                        _macToString
 ---------------------------------------------------------------------------------
 (3) _arp_getEntryFromTable                                8     1      7      31
                                              0 BANK0      8     1      7
 ---------------------------------------------------------------------------------
 (1) _ipv4_generateAutoIP                                  8     4      4    1298
                                             20 BANK0      8     4      4
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     641
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _ipv4_background                                      9     6      3   15592
                                             58 BANK0      8     5      3
                   _UARTTransmitText
 ---------------------------------------------------------------------------------
 (2) _ethernet_rxGetNewFrame                              13    11      2  296860
                                            120 BANK1     13    11      2
                    _UARTTransmitInt
                   _UARTTransmitText
                _arp_handleNewPacket
                  _etherTypeToString
      _ethernetController_dropPacket
_ethernetController_getEtherTypeFiel
_ethernetController_getNextPacketPoi
          _ethernetController_getRSV
_ethernetController_updateNextPacket
                          _getMillis
                        _intToString
               _ipv4_handleNewPacket
                        _macToString
 ---------------------------------------------------------------------------------
 (3) _ipv4_handleNewPacket                                36    34      2   63712
                                             85 BANK0     36    34      2
                   _UARTTransmitText
      _ethernetController_dropPacket
                        _intToString
                   _ipAdressToString
                 _ipProtocolToString
           _ipv4_checkHeaderChecksum
                   _ipv4_parseHeader
 ---------------------------------------------------------------------------------
 (4) _ipv4_parseHeader                                    50    27     23   12751
                                             20 BANK0     50    27     23
_ethernetController_streamFromRXBuff
 ---------------------------------------------------------------------------------
 (4) _ipv4_checkHeaderChecksum                            27    25      2   17262
                                             58 BANK0     27    25      2
                   _UARTTransmitText
                        _hexToString
       _ipv4_calculateHeaderChecksum
 ---------------------------------------------------------------------------------
 (1) _ipv4_calculateHeaderChecksum                        18    16      2     957
                                              0 BANK0     18    16      2
 ---------------------------------------------------------------------------------
 (5) _hexToString                                          9     5      4     660
                                              1 BANK0      9     5      4
                          _hexToChar
 ---------------------------------------------------------------------------------
 (6) _hexToChar                                            1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ipProtocolToString                                   3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _ethernetController_updateNextPacketPointer          11    11      0    8291
                                             15 BANK0     11    11      0
    _enc424j600_getNextPacketPointer
                 _enc424j600_readSPI
   _enc424j600_setERXDATAReadPointer
    _enc424j600_setNextPacketPointer
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (3) _ethernetController_getRSV                            7     2      5    9486
                                             17 BANK0      7     2      5
                 _enc424j600_readSPI
   _enc424j600_setERXDATAReadPointer
_enc424j600_updateReceiveStatusVecto
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (4) _enc424j600_updateReceiveStatusVector                17    12      5    1370
                                              0 BANK0     17    12      5
 ---------------------------------------------------------------------------------
 (3) _ethernetController_getEtherTypeField                18     9      9    8190
                                             15 BANK0     18     9      9
                 _enc424j600_readSPI
   _enc424j600_setERXDATAReadPointer
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (3) _etherTypeToString                                    4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _arp_handleNewPacket                                 36    34      2  156566
                                            156 BANK0      4     2      2
                                             88 BANK1     32    32      0
                   _UARTTransmitText
              _arp_parseFromRXBuffer
                      _arp_sendReply
                    _arp_setNewEntry
      _ethernetController_dropPacket
                          _getMillis
                   _ipAdressToString
                     _ipv4_isAllZero
                        _macToString
 ---------------------------------------------------------------------------------
 (4) _ethernetController_dropPacket                        2     0      2    9408
                                             18 BANK0      2     0      2
        _enc424j600_setRXTailPointer
         _enc424j600_writeSingleByte
_ethernetController_getNextPacketPoi
 ---------------------------------------------------------------------------------
 (5) _ethernetController_getNextPacketPointer              2     0      2       0
                                              2 BANK0      2     0      2
    _enc424j600_getNextPacketPointer
 ---------------------------------------------------------------------------------
 (6) _enc424j600_getNextPacketPointer                      2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _arp_sendReply                                       88    56     32   84795
                                              0 BANK1     88    56     32
                   _UARTTransmitText
                           _arp_send
   _ethernetController_getMacAddress
                   _ipAdressToString
                           _ipv4_cmp
            _ipv4_getIPSourceAddress
                        _macToString
 ---------------------------------------------------------------------------------
 (1) _ipv4_getIPSourceAddress                              4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _arp_parseFromRXBuffer                               73    41     32   15979
                                             20 BANK0     73    41     32
_ethernetController_streamFromRXBuff
                           _ipv4_cmp
                     _ipv4_isAllZero
                            _mac_cmp
                      _mac_isAllZero
 ---------------------------------------------------------------------------------
 (5) _mac_cmp                                              7     3      4     400
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _ethernetController_streamFromRXBuffer                5     3      2   11132
                                             15 BANK0      5     3      2
                 _enc424j600_readSPI
   _enc424j600_setERXDATAReadPointer
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (3) _UARTTransmitInt                                      4     0      4   19158
                                             58 BANK0      4     0      4
                   _UARTTransmitText
                        _intToString
 ---------------------------------------------------------------------------------
 (2) _intToString                                          4     0      4    3774
                                             36 BANK0      4     0      4
                               _ltoa
 ---------------------------------------------------------------------------------
 (3) _ltoa                                                10     2      8    2599
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     5      8    2054
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     648
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     657
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _ethernetController_updateLinkStatus                  5     3      2   21128
                                             32 BANK0      5     3      2
_enc424j600_readControlRegisterUnban
         _enc424j600_readPHYRegister
 ---------------------------------------------------------------------------------
 (3) _enc424j600_readPHYRegister                          18    16      2   13617
                                             14 BANK0     18    16      2
_enc424j600_readControlRegisterUnban
_enc424j600_writeControlRegisterUnba
 ---------------------------------------------------------------------------------
 (2) _ethernetController_setLEDConfig                      3     2      1   14029
                                             14 BANK0      3     2      1
_enc424j600_readControlRegisterUnban
_enc424j600_writeControlRegisterUnba
 ---------------------------------------------------------------------------------
 (2) _ethernetController_pollInterruptFlags               10     8      2    7626
                                             24 BANK0     10     8      2
       _enc424j600_getInterruptFlags
 ---------------------------------------------------------------------------------
 (3) _enc424j600_getInterruptFlags                        10     8      2    7190
                                             14 BANK0     10     8      2
_enc424j600_readControlRegisterUnban
 ---------------------------------------------------------------------------------
 (2) _ethernetController_newPacketAvailable                0     0      0    7125
          _enc424j600_getPacketCount
 ---------------------------------------------------------------------------------
 (3) _enc424j600_getPacketCount                            1     1      0    7125
                                             14 BANK0      1     1      0
_enc424j600_readControlRegisterUnban
 ---------------------------------------------------------------------------------
 (2) _ethernetController_clearInterruptFlag                1     1      0   13238
                                             18 BANK0      1     1      0
      _enc424j600_clearInterruptFlag
 ---------------------------------------------------------------------------------
 (3) _enc424j600_clearInterruptFlag                        4     4      0   13207
                                             14 BANK0      4     4      0
_enc424j600_readControlRegisterUnban
_enc424j600_writeControlRegisterUnba
 ---------------------------------------------------------------------------------
 (2) _arp_init                                            11    11      0   39963
                                             82 BANK0     11    11      0
                   _UARTTransmitText
                    _arp_setNewEntry
                  _ipv4_setToAllZero
                     _mac_setAllZero
 ---------------------------------------------------------------------------------
 (3) _arp_setNewEntry                                     24    10     14   23632
                                             58 BANK0     24    10     14
                   _UARTTransmitText
                          _getMillis (ARG)
                   _ipAdressToString
                     _ipv4_isAllZero
                        _macToString
                      _mac_isAllZero
 ---------------------------------------------------------------------------------
 (4) _mac_isAllZero                                        3     1      2     338
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _macToString                                         30    24      6    1779
                                             26 BANK0     30    24      6
   _ethernetController_getMacAddress (ARG)
 ---------------------------------------------------------------------------------
 (4) _ipv4_isAllZero                                       3     1      2     442
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _arp_background                                      12     9      3  188198
                                             81 BANK1     12     9      3
                   _UARTTransmitText
                     _arp_gratuitous
                          _arp_probe
                _ipv4_SrcAddrChanged
 _ipv4_getPreliminaryIPSourceAddress
 ---------------------------------------------------------------------------------
 (3) _ipv4_getPreliminaryIPSourceAddress                   4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _ipv4_SrcAddrChanged                                  2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _arp_probe                                           29    24      5   87310
                                             52 BANK1     29    24      5
                   _UARTTransmitText
                            ___lwmod
                  _arp_checkForEntry
                    _arp_sendRequest
                          _getMillis
                   _ipAdressToString
                  _ipv4_setToAllZero
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     512
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     512
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _ipv4_setToAllZero                                    3     1      2     546
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _arp_gratuitous                                      17    12      5   85232
                                            156 BANK0      4     4      0
                                             52 BANK1     13     8      5
                   _UARTTransmitText
                  _arp_checkForEntry
                    _arp_sendRequest
                          _getMillis
                   _ipAdressToString
 ---------------------------------------------------------------------------------
 (4) _ipAdressToString                                    22    18      4    4680
                                             19 BANK0     22    18      4
                            ___lwdiv
                            ___lwmod
            _ipv4_getIPSourceAddress (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     856
                                             14 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     933
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _arp_sendRequest                                     52    44      8   62705
                                              0 BANK1     52    44      8
                           _arp_send
   _ethernetController_getMacAddress
                     _mac_setAllZero
 ---------------------------------------------------------------------------------
 (3) _mac_setAllZero                                       3     1      2     338
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _ethernetController_getMacAddress                    12     6      6    7277
                                             14 BANK0     12     6      6
_enc424j600_readControlRegisterUnban
 ---------------------------------------------------------------------------------
 (4) _arp_send                                            85    53     32   53975
                                             71 BANK0     85    53     32
_ethernetController_getSourceMACAddr
      _ethernetController_sendPacket
_ethernetController_streamToTransmit
            _ethernet_txFrameRequest
                 _mac_setToBroadcast
 ---------------------------------------------------------------------------------
 (5) _mac_setToBroadcast                                   3     1      2     234
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _ethernet_txFrameRequest                              5     3      2   19933
                                             66 BANK0      5     3      2
_ethernetController_writeDestination
_ethernetController_writeEtherTypeFi
              _memory_txFrameRequest
 ---------------------------------------------------------------------------------
 (3) _memory_txFrameRequest                               30    21      9    5104
                                             36 BANK0     30    21      9
                             ___wmul
                    _checkForOverlap
                  _entireMemoryEmpty
                   _entireMemoryFull
 ---------------------------------------------------------------------------------
 (4) _entireMemoryFull                                     1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _entireMemoryEmpty                                    1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _checkForOverlap                                     18     0     18    2380
                                             18 BANK0     18     0     18
            _checkForOverlapSwitched
 ---------------------------------------------------------------------------------
 (5) _checkForOverlapSwitched                             18     0     18    1128
                                              0 BANK0     18     0     18
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     440
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _ethernetController_writeEtherTypeFieldToBuffer      14     3     11    6913
                                             15 BANK0     14     3     11
   _enc424j600_setGPDATAWritePointer
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (3) _ethernetController_writeDestinationMACAddress       24     9     15    7319
                                             15 BANK0     24     9     15
   _enc424j600_setGPDATAWritePointer
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (2) _ethernetController_streamToTransmitBuffer           15     6      9    7989
                                             15 BANK0     15     6      9
   _enc424j600_setGPDATAWritePointer
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (4) _enc424j600_setGPDATAWritePointer                     5     3      2    3493
                                             10 BANK0      5     3      2
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (3) _ethernetController_sendPacket                        9     0      9   15696
                                             18 BANK0      9     0      9
             _enc424j600_setTXLength
       _enc424j600_setTXStartAddress
         _enc424j600_writeSingleByte
                _memory_txFrameClear
 ---------------------------------------------------------------------------------
 (4) _memory_txFrameClear                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _enc424j600_setTXStartAddress                         4     2      2    6158
                                             14 BANK0      4     2      2
_enc424j600_writeControlRegisterUnba
 ---------------------------------------------------------------------------------
 (4) _enc424j600_setTXLength                               4     2      2    6158
                                             14 BANK0      4     2      2
_enc424j600_writeControlRegisterUnba
 ---------------------------------------------------------------------------------
 (5) _ethernetController_getSourceMACAddress              18     9      9    8252
                                             15 BANK0     18     9      9
                 _enc424j600_readSPI
   _enc424j600_setERXDATAReadPointer
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (6) _enc424j600_setERXDATAReadPointer                     5     3      2    3805
                                             10 BANK0      5     3      2
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (3) _arp_checkForEntry                                   15     9      6    1874
                                              7 BANK0     15     9      6
                          _getMillis
                           _ipv4_cmp
 ---------------------------------------------------------------------------------
 (4) _ipv4_cmp                                             7     3      4    1024
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _getMillis                                            4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _UARTTransmitText                                     2     0      2   15249
                                             56 BANK0      2     0      2
                  _etherTypeToString (ARG)
   _ethernetController_getDeviceName (ARG)
   _ethernetController_getMacAddress (ARG)
                        _hexToString (ARG)
                        _intToString (ARG)
                   _ipAdressToString (ARG)
                 _ipProtocolToString (ARG)
            _ipv4_getIPSourceAddress (ARG)
                        _macToString (ARG)
 ---------------------------------------------------------------------------------
 (1) _ethernetController_init                              6     3      3   53016
                                             26 BANK0      6     3      3
  _enc424j600_enableAutoMACInsertion
         _enc424j600_enableReception
                 _enc424j600_initSPI
    _enc424j600_setNextPacketPointer
 _enc424j600_setRXBufferStartAddress
        _enc424j600_setRXTailPointer
   _ethernetController_checkDeviceId
       _ethernetController_softReset
 ---------------------------------------------------------------------------------
 (2) _ethernetController_softReset                        12     9      3   16685
                                             14 BANK0     12     9      3
_enc424j600_readControlRegisterUnban
_enc424j600_writeControlRegisterUnba
         _enc424j600_writeSingleByte
 ---------------------------------------------------------------------------------
 (2) _ethernetController_checkDeviceId                     7     4      3    7270
                                             14 BANK0      7     4      3
_enc424j600_readControlRegisterUnban
 ---------------------------------------------------------------------------------
 (5) _enc424j600_setRXTailPointer                          4     2      2    6366
                                             14 BANK0      4     2      2
_enc424j600_writeControlRegisterUnba
_ethernetController_getNextPacketPoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _enc424j600_setRXBufferStartAddress                   4     2      2    6158
                                             14 BANK0      4     2      2
_enc424j600_writeControlRegisterUnba
 ---------------------------------------------------------------------------------
 (4) _enc424j600_setNextPacketPointer                      2     0      2     239
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _enc424j600_enableReception                           0     0      0    3042
         _enc424j600_writeSingleByte
 ---------------------------------------------------------------------------------
 (4) _enc424j600_writeSingleByte                           1     1      0    3042
                                             10 BANK0      1     1      0
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (2) _enc424j600_enableAutoMACInsertion                    1     1      0   13049
                                             14 BANK0      1     1      0
_enc424j600_readControlRegisterUnban
_enc424j600_writeControlRegisterUnba
 ---------------------------------------------------------------------------------
 (5) _enc424j600_writeControlRegisterUnbanked              4     2      2    5918
                                             10 BANK0      4     2      2
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (4) _enc424j600_readControlRegisterUnbanked               4     2      2    7054
                                             10 BANK0      4     2      2
                 _enc424j600_readSPI
                _enc424j600_writeSPI
 ---------------------------------------------------------------------------------
 (4) _enc424j600_writeSPI                                 10     8      2    3008
                                              0 BANK0     10     8      2
                 _enc424j600_initSPI
 ---------------------------------------------------------------------------------
 (5) _enc424j600_readSPI                                  10     8      2    1032
                                              0 BANK0     10     8      2
                 _enc424j600_initSPI
 ---------------------------------------------------------------------------------
 (5) _enc424j600_initSPI                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ethernetController_getDeviceName                    13    11      2      40
                                              0 BANK0     13    11      2
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                19    19      0    1115
                                             21 COMRAM    19    19      0
                      _buttonHandler
                 _sevenSegmentUpdate
                         _updateTime
 ---------------------------------------------------------------------------------
 (12) _updateTime                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _sevenSegmentUpdate                                  7     5      2     914
                                             14 COMRAM     7     5      2
                        _parseNumber
 ---------------------------------------------------------------------------------
 (13) _parseNumber                                         7     4      3     667
                                              7 COMRAM     7     4      3
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (14) i2___lwdiv                                           7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) _buttonHandler                                      10     8      2     201
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTInit
   _UARTTransmitText
     _etherTypeToString (ARG)
     _ethernetController_getDeviceName (ARG)
     _ethernetController_getMacAddress (ARG)
       _enc424j600_readControlRegisterUnbanked
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
     _hexToString (ARG)
       _hexToChar
     _intToString (ARG)
       _ltoa
         _ultoa
           ___lldiv
           ___llmod
     _ipAdressToString (ARG)
       ___lwdiv
       ___lwmod
         _rand (ARG)
           ___lmul
       _ipv4_getIPSourceAddress (ARG)
     _ipProtocolToString (ARG)
     _ipv4_getIPSourceAddress (ARG)
     _macToString (ARG)
       _ethernetController_getMacAddress (ARG)
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
   _ethernetController_checkDeviceId
     _enc424j600_readControlRegisterUnbanked
       _enc424j600_readSPI
         _enc424j600_initSPI
       _enc424j600_writeSPI
         _enc424j600_initSPI
   _ethernetController_getDeviceName
   _ethernetController_getMacAddress
     _enc424j600_readControlRegisterUnbanked
       _enc424j600_readSPI
         _enc424j600_initSPI
       _enc424j600_writeSPI
         _enc424j600_initSPI
   _ethernetController_init
     _enc424j600_enableAutoMACInsertion
       _enc424j600_readControlRegisterUnbanked
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _enc424j600_writeControlRegisterUnbanked
         _enc424j600_writeSPI
           _enc424j600_initSPI
     _enc424j600_enableReception
       _enc424j600_writeSingleByte
         _enc424j600_writeSPI
           _enc424j600_initSPI
     _enc424j600_initSPI
     _enc424j600_setNextPacketPointer
     _enc424j600_setRXBufferStartAddress
       _enc424j600_writeControlRegisterUnbanked
         _enc424j600_writeSPI
           _enc424j600_initSPI
     _enc424j600_setRXTailPointer
       _enc424j600_writeControlRegisterUnbanked
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _ethernetController_getNextPacketPointer (ARG)
         _enc424j600_getNextPacketPointer
     _ethernetController_checkDeviceId
       _enc424j600_readControlRegisterUnbanked
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
     _ethernetController_softReset
       _enc424j600_readControlRegisterUnbanked
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _enc424j600_writeControlRegisterUnbanked
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _enc424j600_writeSingleByte
         _enc424j600_writeSPI
           _enc424j600_initSPI
   _ethernetController_setLEDConfig
     _enc424j600_readControlRegisterUnbanked
       _enc424j600_readSPI
         _enc424j600_initSPI
       _enc424j600_writeSPI
         _enc424j600_initSPI
     _enc424j600_writeControlRegisterUnbanked
       _enc424j600_writeSPI
         _enc424j600_initSPI
   _handleStackBackgroundTasks
     _UARTTransmitText
       _etherTypeToString (ARG)
       _ethernetController_getDeviceName (ARG)
       _ethernetController_getMacAddress (ARG)
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
       _hexToString (ARG)
         _hexToChar
       _intToString (ARG)
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _ipAdressToString (ARG)
         ___lwdiv
         ___lwmod
           _rand (ARG)
             ___lmul
         _ipv4_getIPSourceAddress (ARG)
       _ipProtocolToString (ARG)
       _ipv4_getIPSourceAddress (ARG)
       _macToString (ARG)
         _ethernetController_getMacAddress (ARG)
           _enc424j600_readControlRegisterUnbanked
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
     _arp_background
       _UARTTransmitText
         _etherTypeToString (ARG)
         _ethernetController_getDeviceName (ARG)
         _ethernetController_getMacAddress (ARG)
           _enc424j600_readControlRegisterUnbanked
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
         _hexToString (ARG)
           _hexToChar
         _intToString (ARG)
           _ltoa
             _ultoa
               ___lldiv
               ___llmod
         _ipAdressToString (ARG)
           ___lwdiv
           ___lwmod
             _rand (ARG)
               ___lmul
           _ipv4_getIPSourceAddress (ARG)
         _ipProtocolToString (ARG)
         _ipv4_getIPSourceAddress (ARG)
         _macToString (ARG)
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
       _arp_gratuitous
         _UARTTransmitText
           _etherTypeToString (ARG)
           _ethernetController_getDeviceName (ARG)
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
           _hexToString (ARG)
             _hexToChar
           _intToString (ARG)
             _ltoa
               _ultoa
                 ___lldiv
                 ___llmod
           _ipAdressToString (ARG)
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
             _ipv4_getIPSourceAddress (ARG)
           _ipProtocolToString (ARG)
           _ipv4_getIPSourceAddress (ARG)
           _macToString (ARG)
             _ethernetController_getMacAddress (ARG)
               _enc424j600_readControlRegisterUnbanked
                 _enc424j600_readSPI
                   _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
         _arp_checkForEntry
           _getMillis
           _ipv4_cmp
         _arp_sendRequest
           _arp_send
             _ethernetController_getSourceMACAddress
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_setERXDATAReadPointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernetController_sendPacket
               _enc424j600_setTXLength
                 _enc424j600_writeControlRegisterUnbanked
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
               _enc424j600_setTXStartAddress
                 _enc424j600_writeControlRegisterUnbanked
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
               _enc424j600_writeSingleByte
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _memory_txFrameClear
             _ethernetController_streamToTransmitBuffer
               _enc424j600_setGPDATAWritePointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernet_txFrameRequest
               _ethernetController_writeDestinationMACAddress
                 _enc424j600_setGPDATAWritePointer
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _ethernetController_writeEtherTypeFieldToBuffer
                 _enc424j600_setGPDATAWritePointer
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _memory_txFrameRequest
                 ___wmul
                 _checkForOverlap
                   _checkForOverlapSwitched
                 _entireMemoryEmpty
                 _entireMemoryFull
             _mac_setToBroadcast
           _ethernetController_getMacAddress
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
           _mac_setAllZero
         _getMillis
         _ipAdressToString
           ___lwdiv
           ___lwmod
             _rand (ARG)
               ___lmul
           _ipv4_getIPSourceAddress (ARG)
       _arp_probe
         _UARTTransmitText
           _etherTypeToString (ARG)
           _ethernetController_getDeviceName (ARG)
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
           _hexToString (ARG)
             _hexToChar
           _intToString (ARG)
             _ltoa
               _ultoa
                 ___lldiv
                 ___llmod
           _ipAdressToString (ARG)
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
             _ipv4_getIPSourceAddress (ARG)
           _ipProtocolToString (ARG)
           _ipv4_getIPSourceAddress (ARG)
           _macToString (ARG)
             _ethernetController_getMacAddress (ARG)
               _enc424j600_readControlRegisterUnbanked
                 _enc424j600_readSPI
                   _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
         ___lwmod
           _rand (ARG)
             ___lmul
         _arp_checkForEntry
           _getMillis
           _ipv4_cmp
         _arp_sendRequest
           _arp_send
             _ethernetController_getSourceMACAddress
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_setERXDATAReadPointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernetController_sendPacket
               _enc424j600_setTXLength
                 _enc424j600_writeControlRegisterUnbanked
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
               _enc424j600_setTXStartAddress
                 _enc424j600_writeControlRegisterUnbanked
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
               _enc424j600_writeSingleByte
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _memory_txFrameClear
             _ethernetController_streamToTransmitBuffer
               _enc424j600_setGPDATAWritePointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernet_txFrameRequest
               _ethernetController_writeDestinationMACAddress
                 _enc424j600_setGPDATAWritePointer
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _ethernetController_writeEtherTypeFieldToBuffer
                 _enc424j600_setGPDATAWritePointer
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _memory_txFrameRequest
                 ___wmul
                 _checkForOverlap
                   _checkForOverlapSwitched
                 _entireMemoryEmpty
                 _entireMemoryFull
             _mac_setToBroadcast
           _ethernetController_getMacAddress
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
           _mac_setAllZero
         _getMillis
         _ipAdressToString
           ___lwdiv
           ___lwmod
             _rand (ARG)
               ___lmul
           _ipv4_getIPSourceAddress (ARG)
         _ipv4_setToAllZero
         _rand
           ___lmul
       _ipv4_SrcAddrChanged
       _ipv4_getPreliminaryIPSourceAddress
     _arp_init
       _UARTTransmitText
         _etherTypeToString (ARG)
         _ethernetController_getDeviceName (ARG)
         _ethernetController_getMacAddress (ARG)
           _enc424j600_readControlRegisterUnbanked
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
         _hexToString (ARG)
           _hexToChar
         _intToString (ARG)
           _ltoa
             _ultoa
               ___lldiv
               ___llmod
         _ipAdressToString (ARG)
           ___lwdiv
           ___lwmod
             _rand (ARG)
               ___lmul
           _ipv4_getIPSourceAddress (ARG)
         _ipProtocolToString (ARG)
         _ipv4_getIPSourceAddress (ARG)
         _macToString (ARG)
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
       _arp_setNewEntry
         _UARTTransmitText
           _etherTypeToString (ARG)
           _ethernetController_getDeviceName (ARG)
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
           _hexToString (ARG)
             _hexToChar
           _intToString (ARG)
             _ltoa
               _ultoa
                 ___lldiv
                 ___llmod
           _ipAdressToString (ARG)
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
             _ipv4_getIPSourceAddress (ARG)
           _ipProtocolToString (ARG)
           _ipv4_getIPSourceAddress (ARG)
           _macToString (ARG)
             _ethernetController_getMacAddress (ARG)
               _enc424j600_readControlRegisterUnbanked
                 _enc424j600_readSPI
                   _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
         _getMillis (ARG)
         _ipAdressToString (ARG)
           ___lwdiv
           ___lwmod
             _rand (ARG)
               ___lmul
           _ipv4_getIPSourceAddress (ARG)
         _ipv4_isAllZero (ARG)
         _macToString (ARG)
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
         _mac_isAllZero (ARG)
       _ipv4_setToAllZero
       _mac_setAllZero
     _ethernetController_clearInterruptFlag
       _enc424j600_clearInterruptFlag
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_writeControlRegisterUnbanked
           _enc424j600_writeSPI
             _enc424j600_initSPI
     _ethernetController_newPacketAvailable
       _enc424j600_getPacketCount
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
     _ethernetController_pollInterruptFlags
       _enc424j600_getInterruptFlags
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
     _ethernetController_setLEDConfig
       _enc424j600_readControlRegisterUnbanked
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _enc424j600_writeControlRegisterUnbanked
         _enc424j600_writeSPI
           _enc424j600_initSPI
     _ethernetController_updateLinkStatus
       _enc424j600_readControlRegisterUnbanked
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _enc424j600_readPHYRegister
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_writeControlRegisterUnbanked
           _enc424j600_writeSPI
             _enc424j600_initSPI
     _ethernet_rxGetNewFrame
       _UARTTransmitInt
         _UARTTransmitText
           _etherTypeToString (ARG)
           _ethernetController_getDeviceName (ARG)
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
           _hexToString (ARG)
             _hexToChar
           _intToString (ARG)
             _ltoa
               _ultoa
                 ___lldiv
                 ___llmod
           _ipAdressToString (ARG)
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
             _ipv4_getIPSourceAddress (ARG)
           _ipProtocolToString (ARG)
           _ipv4_getIPSourceAddress (ARG)
           _macToString (ARG)
             _ethernetController_getMacAddress (ARG)
               _enc424j600_readControlRegisterUnbanked
                 _enc424j600_readSPI
                   _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
         _intToString
           _ltoa
             _ultoa
               ___lldiv
               ___llmod
       _UARTTransmitText
         _etherTypeToString (ARG)
         _ethernetController_getDeviceName (ARG)
         _ethernetController_getMacAddress (ARG)
           _enc424j600_readControlRegisterUnbanked
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
         _hexToString (ARG)
           _hexToChar
         _intToString (ARG)
           _ltoa
             _ultoa
               ___lldiv
               ___llmod
         _ipAdressToString (ARG)
           ___lwdiv
           ___lwmod
             _rand (ARG)
               ___lmul
           _ipv4_getIPSourceAddress (ARG)
         _ipProtocolToString (ARG)
         _ipv4_getIPSourceAddress (ARG)
         _macToString (ARG)
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
       _arp_handleNewPacket
         _UARTTransmitText
           _etherTypeToString (ARG)
           _ethernetController_getDeviceName (ARG)
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
           _hexToString (ARG)
             _hexToChar
           _intToString (ARG)
             _ltoa
               _ultoa
                 ___lldiv
                 ___llmod
           _ipAdressToString (ARG)
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
             _ipv4_getIPSourceAddress (ARG)
           _ipProtocolToString (ARG)
           _ipv4_getIPSourceAddress (ARG)
           _macToString (ARG)
             _ethernetController_getMacAddress (ARG)
               _enc424j600_readControlRegisterUnbanked
                 _enc424j600_readSPI
                   _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
         _arp_parseFromRXBuffer
           _ethernetController_streamFromRXBuffer
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_setERXDATAReadPointer
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
           _ipv4_cmp
           _ipv4_isAllZero
           _mac_cmp
           _mac_isAllZero
         _arp_sendReply
           _UARTTransmitText
             _etherTypeToString (ARG)
             _ethernetController_getDeviceName (ARG)
             _ethernetController_getMacAddress (ARG)
               _enc424j600_readControlRegisterUnbanked
                 _enc424j600_readSPI
                   _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
             _hexToString (ARG)
               _hexToChar
             _intToString (ARG)
               _ltoa
                 _ultoa
                   ___lldiv
                   ___llmod
             _ipAdressToString (ARG)
               ___lwdiv
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _ipv4_getIPSourceAddress (ARG)
             _ipProtocolToString (ARG)
             _ipv4_getIPSourceAddress (ARG)
             _macToString (ARG)
               _ethernetController_getMacAddress (ARG)
                 _enc424j600_readControlRegisterUnbanked
                   _enc424j600_readSPI
                     _enc424j600_initSPI
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
           _arp_send
             _ethernetController_getSourceMACAddress
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_setERXDATAReadPointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernetController_sendPacket
               _enc424j600_setTXLength
                 _enc424j600_writeControlRegisterUnbanked
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
               _enc424j600_setTXStartAddress
                 _enc424j600_writeControlRegisterUnbanked
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
               _enc424j600_writeSingleByte
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _memory_txFrameClear
             _ethernetController_streamToTransmitBuffer
               _enc424j600_setGPDATAWritePointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernet_txFrameRequest
               _ethernetController_writeDestinationMACAddress
                 _enc424j600_setGPDATAWritePointer
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _ethernetController_writeEtherTypeFieldToBuffer
                 _enc424j600_setGPDATAWritePointer
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _memory_txFrameRequest
                 ___wmul
                 _checkForOverlap
                   _checkForOverlapSwitched
                 _entireMemoryEmpty
                 _entireMemoryFull
             _mac_setToBroadcast
           _ethernetController_getMacAddress
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
           _ipAdressToString
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
             _ipv4_getIPSourceAddress (ARG)
           _ipv4_cmp
           _ipv4_getIPSourceAddress
           _macToString
             _ethernetController_getMacAddress (ARG)
               _enc424j600_readControlRegisterUnbanked
                 _enc424j600_readSPI
                   _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
         _arp_setNewEntry
           _UARTTransmitText
             _etherTypeToString (ARG)
             _ethernetController_getDeviceName (ARG)
             _ethernetController_getMacAddress (ARG)
               _enc424j600_readControlRegisterUnbanked
                 _enc424j600_readSPI
                   _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
             _hexToString (ARG)
               _hexToChar
             _intToString (ARG)
               _ltoa
                 _ultoa
                   ___lldiv
                   ___llmod
             _ipAdressToString (ARG)
               ___lwdiv
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _ipv4_getIPSourceAddress (ARG)
             _ipProtocolToString (ARG)
             _ipv4_getIPSourceAddress (ARG)
             _macToString (ARG)
               _ethernetController_getMacAddress (ARG)
                 _enc424j600_readControlRegisterUnbanked
                   _enc424j600_readSPI
                     _enc424j600_initSPI
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
           _getMillis (ARG)
           _ipAdressToString (ARG)
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
             _ipv4_getIPSourceAddress (ARG)
           _ipv4_isAllZero (ARG)
           _macToString (ARG)
             _ethernetController_getMacAddress (ARG)
               _enc424j600_readControlRegisterUnbanked
                 _enc424j600_readSPI
                   _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
           _mac_isAllZero (ARG)
         _ethernetController_dropPacket
           _enc424j600_setRXTailPointer
             _enc424j600_writeControlRegisterUnbanked
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernetController_getNextPacketPointer (ARG)
               _enc424j600_getNextPacketPointer
           _enc424j600_writeSingleByte
             _enc424j600_writeSPI
               _enc424j600_initSPI
           _ethernetController_getNextPacketPointer
             _enc424j600_getNextPacketPointer
         _getMillis
         _ipAdressToString
           ___lwdiv
           ___lwmod
             _rand (ARG)
               ___lmul
           _ipv4_getIPSourceAddress (ARG)
         _ipv4_isAllZero
         _macToString
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
       _etherTypeToString
       _ethernetController_dropPacket
         _enc424j600_setRXTailPointer
           _enc424j600_writeControlRegisterUnbanked
             _enc424j600_writeSPI
               _enc424j600_initSPI
           _ethernetController_getNextPacketPointer (ARG)
             _enc424j600_getNextPacketPointer
         _enc424j600_writeSingleByte
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _ethernetController_getNextPacketPointer
           _enc424j600_getNextPacketPointer
       _ethernetController_getEtherTypeField
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_setERXDATAReadPointer
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _ethernetController_getNextPacketPointer
         _enc424j600_getNextPacketPointer
       _ethernetController_getRSV
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_setERXDATAReadPointer
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_updateReceiveStatusVector
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _ethernetController_updateNextPacketPointer
         _enc424j600_getNextPacketPointer
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_setERXDATAReadPointer
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_setNextPacketPointer
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _getMillis
       _intToString
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _ipv4_handleNewPacket
         _UARTTransmitText
           _etherTypeToString (ARG)
           _ethernetController_getDeviceName (ARG)
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
           _hexToString (ARG)
             _hexToChar
           _intToString (ARG)
             _ltoa
               _ultoa
                 ___lldiv
                 ___llmod
           _ipAdressToString (ARG)
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
             _ipv4_getIPSourceAddress (ARG)
           _ipProtocolToString (ARG)
           _ipv4_getIPSourceAddress (ARG)
           _macToString (ARG)
             _ethernetController_getMacAddress (ARG)
               _enc424j600_readControlRegisterUnbanked
                 _enc424j600_readSPI
                   _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
         _ethernetController_dropPacket
           _enc424j600_setRXTailPointer
             _enc424j600_writeControlRegisterUnbanked
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernetController_getNextPacketPointer (ARG)
               _enc424j600_getNextPacketPointer
           _enc424j600_writeSingleByte
             _enc424j600_writeSPI
               _enc424j600_initSPI
           _ethernetController_getNextPacketPointer
             _enc424j600_getNextPacketPointer
         _intToString
           _ltoa
             _ultoa
               ___lldiv
               ___llmod
         _ipAdressToString
           ___lwdiv
           ___lwmod
             _rand (ARG)
               ___lmul
           _ipv4_getIPSourceAddress (ARG)
         _ipProtocolToString
         _ipv4_checkHeaderChecksum
           _UARTTransmitText
             _etherTypeToString (ARG)
             _ethernetController_getDeviceName (ARG)
             _ethernetController_getMacAddress (ARG)
               _enc424j600_readControlRegisterUnbanked
                 _enc424j600_readSPI
                   _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
             _hexToString (ARG)
               _hexToChar
             _intToString (ARG)
               _ltoa
                 _ultoa
                   ___lldiv
                   ___llmod
             _ipAdressToString (ARG)
               ___lwdiv
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _ipv4_getIPSourceAddress (ARG)
             _ipProtocolToString (ARG)
             _ipv4_getIPSourceAddress (ARG)
             _macToString (ARG)
               _ethernetController_getMacAddress (ARG)
                 _enc424j600_readControlRegisterUnbanked
                   _enc424j600_readSPI
                     _enc424j600_initSPI
                   _enc424j600_writeSPI
                     _enc424j600_initSPI
           _hexToString
             _hexToChar
           _ipv4_calculateHeaderChecksum
         _ipv4_parseHeader
           _ethernetController_streamFromRXBuffer
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_setERXDATAReadPointer
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
       _macToString
         _ethernetController_getMacAddress (ARG)
           _enc424j600_readControlRegisterUnbanked
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
     _ipAdressToString
       ___lwdiv
       ___lwmod
         _rand (ARG)
           ___lmul
       _ipv4_getIPSourceAddress (ARG)
     _ipv4_background
       _UARTTransmitText
         _etherTypeToString (ARG)
         _ethernetController_getDeviceName (ARG)
         _ethernetController_getMacAddress (ARG)
           _enc424j600_readControlRegisterUnbanked
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
         _hexToString (ARG)
           _hexToChar
         _intToString (ARG)
           _ltoa
             _ultoa
               ___lldiv
               ___llmod
         _ipAdressToString (ARG)
           ___lwdiv
           ___lwmod
             _rand (ARG)
               ___lmul
           _ipv4_getIPSourceAddress (ARG)
         _ipProtocolToString (ARG)
         _ipv4_getIPSourceAddress (ARG)
         _macToString (ARG)
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
     _ipv4_generateAutoIP
       ___awmod
         _rand (ARG)
           ___lmul
       _rand
         ___lmul
     _ipv4_sendFrame
       _UARTTransmitText
         _etherTypeToString (ARG)
         _ethernetController_getDeviceName (ARG)
         _ethernetController_getMacAddress (ARG)
           _enc424j600_readControlRegisterUnbanked
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
         _hexToString (ARG)
           _hexToChar
         _intToString (ARG)
           _ltoa
             _ultoa
               ___lldiv
               ___llmod
         _ipAdressToString (ARG)
           ___lwdiv
           ___lwmod
             _rand (ARG)
               ___lmul
           _ipv4_getIPSourceAddress (ARG)
         _ipProtocolToString (ARG)
         _ipv4_getIPSourceAddress (ARG)
         _macToString (ARG)
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
       _arp_checkForEntry
         _getMillis
         _ipv4_cmp
       _arp_getEntryFromTable
       _arp_sendRequest
         _arp_send
           _ethernetController_getSourceMACAddress
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_setERXDATAReadPointer
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
           _ethernetController_sendPacket
             _enc424j600_setTXLength
               _enc424j600_writeControlRegisterUnbanked
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
             _enc424j600_setTXStartAddress
               _enc424j600_writeControlRegisterUnbanked
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
             _enc424j600_writeSingleByte
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _memory_txFrameClear
           _ethernetController_streamToTransmitBuffer
             _enc424j600_setGPDATAWritePointer
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
           _ethernet_txFrameRequest
             _ethernetController_writeDestinationMACAddress
               _enc424j600_setGPDATAWritePointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _ethernetController_writeEtherTypeFieldToBuffer
               _enc424j600_setGPDATAWritePointer
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
             _memory_txFrameRequest
               ___wmul
               _checkForOverlap
                 _checkForOverlapSwitched
               _entireMemoryEmpty
               _entireMemoryFull
           _mac_setToBroadcast
         _ethernetController_getMacAddress
           _enc424j600_readControlRegisterUnbanked
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
         _mac_setAllZero
       _ethernetController_getMacAddress
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
       _ethernetController_sendPacket
         _enc424j600_setTXLength
           _enc424j600_writeControlRegisterUnbanked
             _enc424j600_writeSPI
               _enc424j600_initSPI
         _enc424j600_setTXStartAddress
           _enc424j600_writeControlRegisterUnbanked
             _enc424j600_writeSPI
               _enc424j600_initSPI
         _enc424j600_writeSingleByte
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _memory_txFrameClear
       _ethernetController_writeDestinationMACAddress
         _enc424j600_setGPDATAWritePointer
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _getMillis
       _ipAdressToString
         ___lwdiv
         ___lwmod
           _rand (ARG)
             ___lmul
         _ipv4_getIPSourceAddress (ARG)
       _macToString
         _ethernetController_getMacAddress (ARG)
           _enc424j600_readControlRegisterUnbanked
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
     _ipv4_setIPSourceAddress
   _ipAdressToString
     ___lwdiv
     ___lwmod
       _rand (ARG)
         ___lmul
     _ipv4_getIPSourceAddress (ARG)
   _ipv4_calculateHeaderChecksum
   _ipv4_generateAutoIP
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul
   _ipv4_getIPSourceAddress
   _ipv4_streamToTransmissionBuffer
     _ethernetController_streamToTransmitBuffer
       _enc424j600_setGPDATAWritePointer
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _enc424j600_writeSPI
         _enc424j600_initSPI
   _ipv4_txFrameRequest
     _ethernet_txFrameRequest
       _ethernetController_writeDestinationMACAddress
         _enc424j600_setGPDATAWritePointer
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _ethernetController_writeEtherTypeFieldToBuffer
         _enc424j600_setGPDATAWritePointer
           _enc424j600_writeSPI
             _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
       _memory_txFrameRequest
         ___wmul
         _checkForOverlap
           _checkForOverlapSwitched
         _entireMemoryEmpty
         _entireMemoryFull
   _ipv4_writeHeaderIntoBuffer
   _macToString
     _ethernetController_getMacAddress (ARG)
       _enc424j600_readControlRegisterUnbanked
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
   _printErrorMessage
     _UARTTransmitText
       _etherTypeToString (ARG)
       _ethernetController_getDeviceName (ARG)
       _ethernetController_getMacAddress (ARG)
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
       _hexToString (ARG)
         _hexToChar
       _intToString (ARG)
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _ipAdressToString (ARG)
         ___lwdiv
         ___lwmod
           _rand (ARG)
             ___lmul
         _ipv4_getIPSourceAddress (ARG)
       _ipProtocolToString (ARG)
       _ipv4_getIPSourceAddress (ARG)
       _macToString (ARG)
         _ethernetController_getMacAddress (ARG)
           _enc424j600_readControlRegisterUnbanked
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
     _intToString
       _ltoa
         _ultoa
           ___lldiv
           ___llmod
   _printEthernetState
     _UARTTransmitText
       _etherTypeToString (ARG)
       _ethernetController_getDeviceName (ARG)
       _ethernetController_getMacAddress (ARG)
         _enc424j600_readControlRegisterUnbanked
           _enc424j600_readSPI
             _enc424j600_initSPI
           _enc424j600_writeSPI
             _enc424j600_initSPI
       _hexToString (ARG)
         _hexToChar
       _intToString (ARG)
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _ipAdressToString (ARG)
         ___lwdiv
         ___lwmod
           _rand (ARG)
             ___lmul
         _ipv4_getIPSourceAddress (ARG)
       _ipProtocolToString (ARG)
       _ipv4_getIPSourceAddress (ARG)
       _macToString (ARG)
         _ethernetController_getMacAddress (ARG)
           _enc424j600_readControlRegisterUnbanked
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
   _sevenSegmentInit
   _srand
     _ethernetController_getMacAddress (ARG)
       _enc424j600_readControlRegisterUnbanked
         _enc424j600_readSPI
           _enc424j600_initSPI
         _enc424j600_writeSPI
           _enc424j600_initSPI
   _stack_init
     _arp_init
       _UARTTransmitText
         _etherTypeToString (ARG)
         _ethernetController_getDeviceName (ARG)
         _ethernetController_getMacAddress (ARG)
           _enc424j600_readControlRegisterUnbanked
             _enc424j600_readSPI
               _enc424j600_initSPI
             _enc424j600_writeSPI
               _enc424j600_initSPI
         _hexToString (ARG)
           _hexToChar
         _intToString (ARG)
           _ltoa
             _ultoa
               ___lldiv
               ___llmod
         _ipAdressToString (ARG)
           ___lwdiv
           ___lwmod
             _rand (ARG)
               ___lmul
           _ipv4_getIPSourceAddress (ARG)
         _ipProtocolToString (ARG)
         _ipv4_getIPSourceAddress (ARG)
         _macToString (ARG)
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
       _arp_setNewEntry
         _UARTTransmitText
           _etherTypeToString (ARG)
           _ethernetController_getDeviceName (ARG)
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
           _hexToString (ARG)
             _hexToChar
           _intToString (ARG)
             _ltoa
               _ultoa
                 ___lldiv
                 ___llmod
           _ipAdressToString (ARG)
             ___lwdiv
             ___lwmod
               _rand (ARG)
                 ___lmul
             _ipv4_getIPSourceAddress (ARG)
           _ipProtocolToString (ARG)
           _ipv4_getIPSourceAddress (ARG)
           _macToString (ARG)
             _ethernetController_getMacAddress (ARG)
               _enc424j600_readControlRegisterUnbanked
                 _enc424j600_readSPI
                   _enc424j600_initSPI
                 _enc424j600_writeSPI
                   _enc424j600_initSPI
         _getMillis (ARG)
         _ipAdressToString (ARG)
           ___lwdiv
           ___lwmod
             _rand (ARG)
               ___lmul
           _ipv4_getIPSourceAddress (ARG)
         _ipv4_isAllZero (ARG)
         _macToString (ARG)
           _ethernetController_getMacAddress (ARG)
             _enc424j600_readControlRegisterUnbanked
               _enc424j600_readSPI
                 _enc424j600_initSPI
               _enc424j600_writeSPI
                 _enc424j600_initSPI
         _mac_isAllZero (ARG)
       _ipv4_setToAllZero
       _mac_setAllZero
     _ipv4_init
       _ipv4_setToAllZero

 _ISR (ROOT)
   _buttonHandler
   _sevenSegmentUpdate
     _parseNumber
       i2___lwdiv
   _updateTime

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      A2      12       63.3%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0     100      10      100.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     C2      FA       8       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     28      4E       1       83.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     38A       6        0.0%
DATA                 0      0     38A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 31 22:51:53 2019

                                            ?_hexToString 0061  
                __end_of_ethernetController_getMacAddress 4ABA  
               __size_of_ethernetController_getMacAddress 0074  
                      ??_ethernetController_getMacAddress 0074  
                       ?_ethernetController_getMacAddress 006E  
                        _ethernetController_getMacAddress 4A46  
                                             arp_init@mac 00B2  
                                                      l75 43B6  
                                                      l92 5024  
                                                      l84 3B52  
                                                      l77 43DE  
                                                      l86 3B34  
                                                      l88 3B4C  
                                                      l89 3B68  
                     __size_of_ipv4_writeHeaderIntoBuffer 016E  
                        __end_of_ipv4_checkHeaderChecksum 401A  
                 ethernetController_getSourceMACAddress@i 0080  
                                     ___wmul@multiplicand 0062  
                                      i2___lwdiv@dividend 0001  
                      ipv4_calculateHeaderChecksum@header 0060  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                             arp_send@arp 00A7  
                                 ??_memory_txFrameRequest 008D  
                                                     l210 44F2  
                                                     l140 4788  
                                                     l204 4510  
                                                     l213 4530  
                                                     l205 44FA  
                                                     l134 4912  
                                                     l142 47D0  
                                                     l214 4518  
                                                     l206 44E6  
                                                     l135 4958  
                                                     l232 4CFC  
                                                     l216 4546  
                                                     l241 4C22  
                                                     l217 4520  
                                                     l209 44EE  
                                                     l218 4526  
                                                     l155 4BD0  
                                                     l412 531A  
                                                     l420 5304  
                                                     l180 4D48  
                                                     l245 4C68  
                                                     l317 4628  
                                                     l165 4992  
                                                     l414 533C  
                                                     l182 4D6C  
                                                     l263 394C  
                                                     l183 4D80  
                                                     l432 39B4  
                                                     l361 3EE4  
                                                     l418 52E2  
                                                     l258 3894  
                                                     l370 036E  
                                                     l530 1CD2  
                                                     l443 3A32  
                                                     l195 4578  
                                                     l179 4D86  
                                                     l187 523E  
                                                     l371 04E8  
                                                     l436 3A36  
                                                     l188 5254  
                                                     l372 03BA  
                                                     l700 3790  
                                                     l453 4176  
                                                     l437 3A22  
                                                     l197 45A8  
                                                     l373 0516  
                                                     l541 1EB0  
                                                     l533 1D8A  
                                                     l701 37A0  
                                                     l438 39EC  
                                                     l462 0624  
                                                     l390 51AA  
                                                     l374 03D6  
                                                     l366 024E  
                                                     l526 1CB6  
                                                     l702 37AE  
                                                     l455 4172  
                                                     l439 39E8  
                                                     l359 3EC4  
                                                     l199 45CE  
                                                     l375 03F2  
                                                     l367 0292  
                                                     l535 1DBE  
                                                     l527 1C94  
                                                     l448 413E  
                                                     l472 06DA  
                                                     l464 0646  
                                                     l384 53F0  
                                                     l392 51D6  
                                                     l368 032E  
                                                     l536 1D1C  
                                                     l528 1CB0  
                                                     l481 08A0  
                                                     l369 034E  
                                                     l537 1D2C  
                                                     l482 094E  
                                                     l474 06E2  
                                                     l466 0670  
                                                     l386 540A  
                                                     l810 56B2  
                                                     l459 4186  
                                                     l379 5640  
                                                     l476 08FC  
                                                     l396 561A  
                                                     l660 0D5E  
                                                     l477 081C  
                                                     l469 06A6  
                                                     l813 56BE  
                                                     l653 0B72  
                                                     l830 3C66  
                                                     l654 0BE2  
                                                     l487 09BE  
                                                     l663 0EA2  
                                                     l655 0C1A  
                                                     l488 0A9C  
                                                     l824 3BA6  
                                                     l680 4338  
                                                     l664 0E3A  
                                                     l656 0D1C  
                                                     l489 0ABE  
                                                     l825 3C74  
                                                     l665 0E86  
                                                     l826 3BF6  
                                                     l834 5136  
                                                     l842 50B6  
                                                     l818 3DEC  
                                                     l690 370E  
                                                     l682 434C  
                                                     l666 0E9E  
                                                     l658 0D54  
                                                     l835 5116  
                                                     l843 508C  
                                                     l683 4362  
                                                     l828 3C2A  
                                                     l692 371E  
                                                     l676 4308  
                                                     l853 27F8  
                                                     l837 5122  
                                                     l845 5098  
                                                     l693 372E  
                                                     l685 4376  
                                                     l950 1174  
                                                     l838 512C  
                                                     l846 50A2  
                                                     l694 373E  
                                                     l678 431C  
                                                     l855 2918  
                                                     l943 1110  
                                                     l935 29FE  
                                                     l847 50AC  
                                                     l695 374E  
                                                     l856 296C  
                                                     l960 12D2  
                                                     l952 1212  
                                                     l944 10C8  
                                                     l961 1308  
                                                     l953 11CA  
                                                     l937 2A3E  
                                                     l697 37BE  
                                                     l689 375E  
                                                     l794 4E50  
                                                     l970 2044  
                                                     l946 1166  
                                                     l938 2B1C  
                                                     l698 3782  
                                                     l971 2010  
                                                     l859 29B2  
                                                     l955 1258  
                                                     l947 111E  
                                                     l939 2B30  
                                                     l699 37F0  
                                                     l796 4E78  
                                                     l980 20D6  
                                                     l973 2086  
                                                     l957 128E  
                                                     l949 11BC  
                                                     l974 2052  
                                                     l959 12D0  
                                                     l976 20C8  
                                                     l977 2094  
                                                     l979 210A  
                                                     l996 197A  
                                                     l999 1BF2  
                                            __CFG_CPB$OFF 000000  
                             __end_of_ipv4_txFrameRequest 36FE  
                                            __CFG_CPD$OFF 000000  
                                                     _ISR 0008  
           enc424j600_writeControlRegisterUnbanked@opcode 006D  
                            ??_enc424j600_writeSingleByte 006A  
                __end_of_ethernetController_getDeviceName 56A0  
               __size_of_ethernetController_getDeviceName 0024  
                      ??_ethernetController_getDeviceName 0062  
                       ?_ethernetController_getDeviceName 0060  
                        _ethernetController_getDeviceName 567C  
                                memory_txFrameClear@index 0060  
                    enc424j600_readPHYRegister@unusedBits 0078  
                     ethernetController_getMacAddress@mac 0074  
                          memory_txFrameRequest@freeIndex 00A1  
                                            ___awmod@sign 0073  
                                                     prod 000FF3  
                                            hexToChar@val 0060  
           ethernetController_streamFromRXBuffer@startEnd 0071  
                                                     wreg 000FE8  
                                              _TXSTA1bits 000FAC  
                                      _sevenSegmentUpdate 401A  
               ethernetController_getEtherTypeField@field 006F  
                                  _numberOfOccupiedFields 0047  
                      ethernetController_setLEDConfig@LED 006F  
                      __size_of_ethernetController_getRSV 0074  
                      __end_of_enc424j600_readPHYRegister 394E  
                              _enc424j600_readPHYRegister 382C  
                          __end_of_enc424j600_setTXLength 54F2  
                                        ??_arp_background 0154  
                                                    ?_ISR 0001  
                          ?_ethernetController_sendPacket 0072  
                                                    l1000 19A6  
                                                    l1001 1C0E  
                                                    l1002 19F8  
                                                    l1011 1BE0  
                                                    l1003 1AA0  
                                                    l1020 23AA  
                                                    l1004 1AA8  
                                                    l1023 258E  
                                                    l1024 23D6  
                                                    l1008 1BBC  
                                                    l1201 51EC  
                                                    l1033 2578  
                                                    l1025 25AA  
                                                    l1009 1BD4  
                                                    l1026 23FC  
                                                    l1050 2DC0  
                                                    l1203 5218  
                                                    l1028 2474  
                                                    l1044 2EA6  
                                                    l1052 2DD6  
                                                    l1061 4198  
                                                    l1029 2560  
                                                    l1213 55F4  
                                                    l1053 2DE6  
                                                    l1045 2D56  
                                                    l1141 26DC  
                                                    l1054 2EB4  
                                                    l1055 2E32  
                                                    l1047 2DF6  
                                                    l1207 5420  
                                                    l1071 2EE4  
                                                    l1064 4234  
                                                    l1056 2E80  
                                                    l1048 2DB0  
                                                    l1080 49FC  
                                                    l1241 4DB2  
                                                    l1049 2E28  
                                                    l1209 543A  
                                                    l1073 2F3C  
                                                    l1161 2310  
                                                    l1242 4DC6  
                                                    l1170 2BBE  
                                                    l1410 4AD0  
                                                    l1146 27D8  
                                                    l1411 4ADC  
                                                    l1413 4AF2  
                                                    l1166 3F9E  
                                                    l1190 33B8  
                                                    l1414 4AEA  
                                                    l1159 22CA  
                                                    l1191 33C6  
                                                    l1184 345A  
                                                    l1192 33EA  
                                                    l1185 340E  
                                                    l1417 4B0A  
                                                    l1186 333C  
                                                    l1418 4B14  
                                                    l1419 4B22  
                                                    l1188 337C  
                                                    l1189 339E  
                                                    l1633 3C8E  
                                                    l1651 4F38  
                                                    l1635 3CEA  
                                                    l1652 4F42  
                                                    l1580 469A  
                                                    l1636 3D58  
                                                    l1661 5188  
                                                    l1581 468E  
                                                    l1629 4ED2  
                                                    l1662 5192  
                                                    l1590 4C96  
                                                    l1647 4F18  
                                                    l1591 4C8A  
                                                    l1648 4F10  
                                                    l1584 46CE  
                                                    l1657 5170  
                                                    l1585 46DC  
                                                    l1658 5168  
                                                    l1594 4CBE  
                                                    l1595 4CCC  
                                                    l8303 5790  
                                                    l8315 4D2A  
                                                    l8405 5312  
                                                    l9117 5612  
                                                    l9071 3C74  
                                                    l8601 4C50  
                                                    l8425 52DA  
                                                    l9129 27F0  
                                                    l9233 5418  
                                                    l9049 3C0A  
                                                    l9067 3C66  
                                                    l9059 3C3E  
                                                    l9253 51E4  
                                                    l9077 53E8  
                                                    l8543 4780  
                                                    l8295 3A1E  
                                                    l8561 47C8  
                                                    l8705 0946  
                                                    l9097 51A2  
                                                    l8299 3A68  
         ethernetController_streamToTransmitBuffer@opcode 007D  
                                                    l8821 4958  
                                                    l8831 4BC8  
                                                    l8671 0814  
                                                    l9609 4234  
                                                    l9537 2EDC  
                                                    l9619 55EC  
                                                    l9813 38C6  
                                                    l9653 22C2  
                                                    l9479 1300  
                                                    l8873 5638  
                                                    l9729 498A  
                                                    l9665 2308  
                                                    l9595 4190  
                                                    l9693 3F9E  
                                                    STR_1 7FC3  
                                                    STR_2 7FFB  
                                                    STR_3 7F56  
                                                    STR_4 7F77  
                                                    STR_5 7EDA  
                           ?_ethernetController_softReset 006E  
                                                    STR_6 7FC3  
                                                    STR_7 7FFB  
                                                    STR_8 7FBA  
                                                    STR_9 7FB3  
               ethernetController_clearInterruptFlag@flag 0072  
               enc424j600_setRXBufferStartAddress@lowByte 0070  
                                                    _RCIE 007CED  
                                                    _RCIF 007CF5  
                                                    u9000 3988  
                                                    u9101 3A08  
                                                    _RCIP 007CFD  
                                                    u9040 39B0  
                                                    u9210 4C50  
                                                    u9131 3A40  
                                                    u9220 4C60  
                                                    u9141 3A52  
                                                    u9301 069C  
                                                    u9241 061A  
                                                    u9170 47B0  
                                                    u9091 39F6  
                                                    u9421 0896  
                                                    u9261 063C  
                                                    u9190 47EA  
                                                    u9510 09C2  
                                                    u9430 08A4  
                                                    u8800 4104  
                                                    u9441 08F2  
                                                    u8810 4112  
                                                    u9531 0A92  
                                                    u9291 0666  
                                                    u9620 4C9A  
                                                    u9381 083A  
                                                    u9551 0AB4  
                                                    u9391 0858  
                                                    u8760 4D2A  
                                                    u9481 098A  
                                                    u9721 3EF6  
                                                    u8770 4D3A  
                                                    u8850 413A  
                                                    u8930 5340  
                                                    u9571 0AD0  
                                                    u9491 09A8  
                                                    u9731 3F10  
                                                    u9900 4E7C  
                                                    u8780 40E8  
                                                    u9741 3F44  
                                                    u9910 4E9C  
                                                    u9670 4BF6  
                                                    u8790 40F6  
                                                    u9830 4F1C  
                                                    u9590 469E  
                                                    u8960 5308  
                                                    u9681 4C02  
                                                    u8970 395E  
                                                    u9691 3E9C  
                                                    u9931 3B80  
                                                    u8980 396C  
                                                    u9860 5174  
                                                    u9917 4E92  
                                                    u8990 397A  
                                                    u9881 4AB0  
                                                    u9890 4E70  
                                                    u9970 3C50  
                                                    u9980 3C74  
                                                    u9897 4E66  
                                                    _TRMT 007D61  
                                                    _TXIF 007CF4  
                                          mac_isAllZero@i 0062  
                                     ?_sevenSegmentUpdate 000F  
                                       _ipv4_setToAllZero 55E6  
                                                    _main 0ADA  
                                                    _rand 4DF8  
                                 printEthernetState@state 009A  
                                                    _ltoa 4EA4  
                                                    _time 0029  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                      i2___lwdiv@quotient 0005  
                                                    indf0 000FEF  
                                                    fsr2h 000FDA  
                                                    fsr0l 000FE9  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 004F  
                                           __CFG_BORV$190 000000  
                               __size_of_sevenSegmentInit 001A  
                                 _ethernetController_init 438A  
                                      ?_ipv4_setToAllZero 0060  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                     __size_of_handleStackBackgroundTasks 0296  
                                                    start 00E8  
          __end_of_ethernetController_getSourceMACAddress 4C0C  
         __size_of_ethernetController_getSourceMACAddress 0070  
                ??_ethernetController_getSourceMACAddress 0078  
                 ?_ethernetController_getSourceMACAddress 006F  
                  _ethernetController_getSourceMACAddress 4B9C  
                                            arp_probe@err 014E  
                                           __CFG_IESO$OFF 000000  
                                 __end_of_UARTTransmitInt 56E4  
                                         ??_mac_isAllZero 0062  
                                           __CFG_MCLRE$ON 000000  
                              memory_txFrameRequest@field 0098  
                                            ___param_bank 000000  
                           ethernet_rxGetNewFrame@counter 0035  
                                 _checkForOverlapSwitched 40D8  
              enc424j600_setRXBufferStartAddress@highByte 0071  
            __end_of_ethernetController_getEtherTypeField 4B9C  
           __size_of_ethernetController_getEtherTypeField 0070  
                  ??_ethernetController_getEtherTypeField 0078  
                   ?_ethernetController_getEtherTypeField 006F  
                    _ethernetController_getEtherTypeField 4B2C  
                                                   ??_ISR 0016  
                                     ??_ipv4_setToAllZero 0062  
                             ?_enc424j600_enableReception 0001  
                      __size_of_enc424j600_getPacketCount 001A  
                                          _ipv4_isAllZero 5412  
                     ethernetController_setLEDConfig@data 0070  
                                    ??_sevenSegmentUpdate 0011  
                                            ?_intToString 0084  
                          handleStackBackgroundTasks@intf 018C  
                     ethernetController_setLEDConfig@conf 006E  
                                           arp_send@field 00F3  
                                                   l10027 24E8  
                                                   l10137 3B3E  
                                                   l10415 274C  
                                                   l10371 49F4  
                                                   l10467 2E80  
                                                   l11293 1DA6  
                                                   l10645 1D76  
                                                   l11295 1DB0  
                                                   l11297 3432  
                                                   l11299 343C  
                                     arp_checkForEntry@ip 0067  
                                       _nextPacketPointer 0042  
                                                   ?_main 0001  
                                                   ?_rand 006C  
                                                   _CCPR1 000FBE  
                                                   STR_10 7E36  
                                                   ?_ltoa 007A  
                                                   STR_11 7FC3  
                                                   STR_20 7FEB  
                                                   STR_12 7FF4  
                                                   STR_13 7FF7  
                                                   STR_21 7B16  
                                                   STR_30 7A87  
                                                   STR_14 7FD9  
                                                   STR_22 7DBE  
                                                   STR_23 7FEB  
                                                   STR_15 7FF1  
                                                   STR_31 7DF3  
                                                   STR_16 7FC3  
                                                   STR_32 7F4A  
                                                   STR_40 7F08  
                                                   STR_24 7BD8  
                                                   STR_41 7FEB  
                                                   STR_33 7FEF  
                                                   STR_17 7C1D  
                                                   STR_25 7BFD  
                                                   STR_26 7FEB  
                                                   STR_18 7D0C  
                                                   STR_34 7F93  
                                                   STR_50 7D86  
                                                   STR_42 7CEF  
                                                   STR_35 7FD0  
                                                   STR_27 7FFD  
                                                   STR_19 7FFA  
                                                   STR_43 7FD4  
                                                   STR_51 7FA4  
                                                   STR_44 7FEA  
                                                   STR_36 7F3E  
                                                   STR_52 7EB9  
                                                   STR_60 7D4B  
                                                   STR_28 7A87  
                                         __end_of___awmod 4B2C  
                                                   STR_61 7F8A  
                                                   STR_45 7F25  
                                                   STR_37 7E0B  
                                                   STR_53 7D2D  
                                                   STR_29 7ABA  
                                                   STR_38 7FD0  
                                                   STR_62 7FCF  
                                                   STR_54 7E83  
                                                   STR_46 7E70  
                                                   STR_70 7B3E  
                                                   STR_39 7A87  
                                                   STR_71 7FC3  
                                                   STR_63 7FC5  
                                                   STR_55 7F17  
                                                   STR_47 7E5D  
                                                   STR_72 7E33  
                                                   STR_80 7FFB  
                                                   STR_64 7FE6  
                                                   STR_56 7EF9  
                                                   STR_48 7E22  
                                                   STR_73 7FC0  
                                                   STR_65 7E96  
                                                   STR_81 7DD9  
                                                   STR_49 7D69  
                                                   STR_57 7BB3  
                                                   STR_74 7E33  
                                                   STR_66 7FCA  
                                                   STR_82 7F32  
                                                   STR_90 7B65  
                                                   STR_58 7A50  
                                                   STR_83 7FEA  
                                                   STR_75 7FFB  
                                                   STR_67 7FDE  
                                                   STR_91 7CCE  
                                                   STR_59 7C8B  
                                                   STR_68 7FE2  
                                                   STR_76 7F6D  
                                                   STR_92 7D0F  
                                                   STR_84 7AEB  
                                                   STR_85 7FEB  
                                                   STR_93 7D0C  
                                                   STR_77 7EEA  
                                                   STR_69 7EA8  
                                                   STR_94 7FEE  
                                                   STR_78 7ECA  
                                                   STR_86 7C69  
                                                   STR_79 7E33  
                                                   STR_87 7C22  
                                                   STR_95 7B8C  
                                                   STR_88 7A16  
                                                   STR_97 7F81  
                                                   STR_89 7C46  
                                                   STR_98 7F9C  
                                                   STR_99 7FEB  
                                                   u10010 540E  
                                         __end_of___lldiv 46EE  
                                                   u10100 2944  
                                                   u10120 29B6  
                                                   u10040 51DA  
                                                   u10220 543E  
                                                   u11020 1300  
                                                   u10301 1F44  
                                                   u11101 329E  
                                                   u10150 18C6  
                                                   u10311 1F5C  
                                                   u11031 131E  
                                                   u11111 32C2  
                                                   u10135 169A  
                                                   u10401 205C  
                                                   u10321 1F76  
                                                   u11201 4486  
                                                   u10145 1748  
                                                   u10250 521C  
                                                   u12010 355C  
                                                   u10170 3D8E  
                                                   u10331 1F90  
                                                   u11211 44A8  
                                                   u10155 18BC  
                                                   u11140 2F40  
                                                   u12004 3540  
                                                   u10180 3DBC  
                                                   u11300 2304  
                                                   u10421 209E  
                                                   u10341 1FAA  
                                                   u10261 1ECA  
                                                   u11221 44BA  
                                                   u12005 353A  
                                                   u11061 31F0  
                                                   u12030 357A  
                                                   u10510 13A4  
                                                   u10190 3E1A  
                                                   u10351 1FC4  
                                                   u10271 1EE6  
                                                   u11151 2F7E  
                                                   u11071 3202  
                                                   u11320 234A  
                                                   u10441 20E0  
                                                   u10361 1FDE  
                                                   u10281 1EF8  
                                                   u11081 326A  
                                                   u10185 3DB2  
                                                   u11170 2FD2  
                                                   u12050 3596  
                                                   u10610 146A  
                                                   u10530 13CA  
                                                   u10371 1FF8  
                                                   u11091 328C  
                                                   u10195 3E10  
                                                   u11331 236A  
                                                   u11260 4238  
                                                   u11404 460C  
                                                   u12028 3560  
                                                   u10508 1384  
                                                   u10461 211C  
                                                   u10381 201A  
                                                   u11181 3016  
                                                   u11405 4608  
                                                   u11341 3F60  
                                                   u12221 0422  
                                                   u12301 2674  
                                                   u11414 464E  
                                                   u12070 35AE  
                                                   u11430 38C6  
                                                   u10710 1534  
                                                   u10630 1494  
                                                   u10550 13F2  
                                                   u11191 4434  
                                                   u11415 464A  
                                                   u12231 045C  
                                                   u12311 2686  
                                                   u12048 357E  
                                                   u10608 1446  
                                                   u10528 13A8  
                                         __end_of___llmod 4CDE  
                                                   u11521 2B3A  
                                                   u12161 0178  
                                                   u12321 2698  
                                                   u12090 57B4  
                                                   u11450 29F0  
                                                   u10810 15F8  
                                                   u10730 155A  
                                                   u10650 14BC  
                                                   u10570 141C  
                                                   u10490 1380  
                                                   u11370 49AC  
                                                   u12251 4A06  
                                                   u12331 26AE  
                                                   u11700 24E8  
                                                   u12260 4A38  
                                                   u12068 359A  
                                                   u10708 150E  
                                                   u10628 146E  
                                                   u10548 13CE  
                                                   u11541 2B64  
                                                   u11461 2A10  
                                                   u11381 49C8  
                                                   u12181 02A4  
                                                   u11630 1B12  
                                                   u10830 161E  
                                                   u10750 1582  
                                                   u10670 14E2  
                                                   u10590 1442  
                                                   u11550 2BB0  
                                                   u12350 274C  
                                                   u12511 1CF8  
                                                   u12088 35B2  
                                                   u10808 15D8  
                                                   u10728 1538  
                                                   u10648 1498  
                                                   u10568 13F6  
                                                   u11481 2A56  
                                                   u11561 2BD2  
                                                   u12281 25F6  
                                                   u12450 568A  
                                                   u10770 15AC  
                                                   u10690 150A  
                                                   u11491 2AB4  
                                                   u10851 163A  
                                                   u11571 2C0C  
                                                   u11731 5494  
                                                   u12291 2644  
                                                   u11900 34BA  
                                                   u10828 15FC  
                                                   u10748 155E  
                                                   u10668 14C0  
                                                   u10588 1420  
                                                   u10790 15D4  
                                                   u12631 4380  
                                                   u11680 246A  
                                                   u11920 34D6  
                                                   u10848 1622  
                                                   u10768 1586  
                                                   u10688 14E6  
                                                   u12641 555C  
                                                   u10970 12CC  
                                                   u11770 4AF6  
                                                   u12811 0E66  
                                                   u11940 34F4  
                                                   u11860 3488  
                                                   u10788 15B0  
                                                   u12821 0E90  
                                                   u12741 0C3A  
                                                   u11918 34BE  
                                                   u12751 0D36  
                                                   u11960 350E  
                                                   u11880 34A0  
                                                   u11938 34DA  
                                                   u12907 3AEC  
                                                   u11980 352A  
                                                   u12917 3B28  
                                                   u11958 34F8  
                                                   u11878 348C  
                                                   u12791 0E0E  
                                                   u11978 3512  
                                                   u11898 34A4  
                                                   u12877 0B2C  
                                                   u11998 352E  
                                                   u12887 0C96  
                                                   u12897 388E  
                                         __end_of___lwdiv 4F4C  
                              __end_of_printEthernetState 438A  
                                         __end_of___lwmod 519C  
                                           __CFG_WDTEN$ON 000000  
                                                   i2l713 426E  
                                                   i2l714 427E  
        ethernetController_streamToTransmitBuffer@pointer 003E  
                                                   i2l715 42C2  
                                                   i2l723 007A  
                                                   i2l724 0098  
                                                   i2l761 4070  
                                                   i2l770 4852  
                                                   i2l756 404C  
                                                   i2l765 4856  
                                                   i2l766 4846  
                                                   i2l758 4054  
                                                   i2l768 484A  
                                                   i2l769 484E  
                                     _arp_handleNewPacket 29D4  
                                                   _SPBRG 000FAF  
                                                   _PORTA 000F80  
                                                   _PORTB 000F81  
                                                   _PORTC 000F82  
                        __size_of_ethernet_txFrameRequest 00E8  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
         __end_of_enc424j600_writeControlRegisterUnbanked 537A  
        __size_of_enc424j600_writeControlRegisterUnbanked 0036  
               ??_enc424j600_writeControlRegisterUnbanked 006C  
                ?_enc424j600_writeControlRegisterUnbanked 006A  
                 _enc424j600_writeControlRegisterUnbanked 5344  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 0064  
                                           __CFG_WRT3$OFF 000000  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                         __end_of_mac_cmp 51DE  
                                         _ipv4_background 3318  
                                        __end_of_UARTInit 57EC  
                                         ??_arp_sendReply 00FC  
                                           __CFG_WRTB$OFF 000000  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          __CFG_EBTRB$OFF 000000  
                                                   _randx 0048  
                               __end_of_ipv4_setToAllZero 560C  
                                                   _srand 57EC  
                                                   _stack 0257  
                               arp_background@errAnnounce 0157  
                                                   main@i 01BA  
                                                   _ultoa 3C7E  
           ethernetController_streamToTransmitBuffer@data 007C  
                       __end_of_ethernetController_getRSV 49D2  
                                          __pbitbssCOMRAM 0270  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                            ethernet_txFrameRequest@frame 00A2  
                                        ?_checkForOverlap 0072  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                             memory_txFrameRequest@i_1178 0097  
                                                   status 000FD8  
                                          __CFG_T3CMX$RC0 000000  
                                                   wtemp6 0050  
                       enc424j600_clearInterruptFlag@flag 0070  
                             __size_of_mac_setToBroadcast 0026  
                                           arp_probe@link 0138  
                                          __CFG_ICPRT$OFF 000000  
                       enc424j600_clearInterruptFlag@temp 0071  
                                    ?_arp_handleNewPacket 00FC  
                                __end_of_UARTTransmitText 4EA4  
                                          __CFG_PBADEN$ON 000000  
                                          _ipv4_sendFrame 25B8  
                                      __size_ofi2___lwdiv 0052  
                                            ?_parseNumber 0008  
                                        _ipAdressToString 27E6  
                                         __initialization 46EE  
                       ethernetController_softReset@F5990 0040  
                       ethernetController_softReset@F5988 004C  
                             memory_txFrameRequest@length 0084  
                                            __end_of_main 0F2E  
                                  __end_of_ipv4_isAllZero 5442  
                                            __end_of_rand 4E4E  
                                            __end_of_ltoa 4EF8  
                                ?_ipv4_getIPSourceAddress 0060  
                                  arpEntryToString@string 0370  
                                ?_ipv4_setIPSourceAddress 0060  
                                    _ipv4_handleNewPacket 2B96  
                                          __CFG_PCLKEN$ON 000000  
                              _memory_txFrameRequest$1174 0093  
                       __end_of_enc424j600_getPacketCount 5754  
                                           main@headerBuf 0198  
                                          arp_send@i_3113 00CE  
                                          arp_send@i_3114 00CF  
                                          arp_send@i_3115 00D0  
                                                  ??_main 0191  
                                                  ??_rand 006E  
                               __size_of_entireMemoryFull 0038  
                                                  ??_ltoa 0082  
                                           __activetblptr 000002  
                      __end_of_ipv4_writeHeaderIntoBuffer 31AC  
                              _ipv4_writeHeaderIntoBuffer 303E  
                         handleStackBackgroundTasks@stack 0185  
                                        ??_arp_gratuitous 0139  
                                          __CFG_SDOMX$RB3 000000  
                                         __CFG_CCP2MX$RC1 000000  
       ethernetController_writeDestinationMACAddress@addr 006F  
       ethernetController_writeDestinationMACAddress@data 007E  
                ethernetController_pollInterruptFlags@reg 0080  
                                        ___llmod@dividend 0060  
                                                  STR_100 7DA3  
                                                  STR_101 7FEB  
                                                  STR_110 7E33  
                                                  STR_102 7F62  
                                                  STR_111 7FFB  
                                                  STR_103 7FAC  
                                                  STR_104 7FFB  
                                                  STR_112 7E4A  
                                                  STR_105 7FC3  
                                                  STR_113 7CAD  
                                                  STR_106 7FD4  
                                                  STR_107 7FF7  
                                                  STR_108 7FF7  
                                                  STR_109 7FF7  
                                    __size_of_macToString 0108  
                                                  ?_srand 007A  
                                   _arp_getEntryFromTable 5470  
                                                  _ANSELA 000F5B  
                                                  _ANSELB 000F5C  
                                                  _ANSELC 000F5D  
                              ethernetController_getRSV@i 0077  
                                                  ?_ultoa 006D  
                                    ipv4_parseHeader@temp 008E  
                       __size_of_ipv4_checkHeaderChecksum 00C8  
                              printEthernetState@oldState 0248  
                                                  i2l1651 4F8A  
                                                  i2l1652 4F94  
                                                  i2l1647 4F6A  
                                                  i2l1648 4F62  
                               ??_ethernetController_init 007D  
                                                  i2l7753 4068  
                               ?_ipv4_checkHeaderChecksum 009A  
                      ipv4_sendFrame@failedResolveCounter 01CE  
       __end_of_ethernetController_streamToTransmitBuffer 495E  
      __size_of_ethernetController_streamToTransmitBuffer 0078  
             ??_ethernetController_streamToTransmitBuffer 0078  
              ?_ethernetController_streamToTransmitBuffer 006F  
               _ethernetController_streamToTransmitBuffer 48E6  
                                         _fSrcAddrChanged 0270  
                                  __end_of_ipv4_sendFrame 27E6  
                                   ??_arp_handleNewPacket 00FE  
                                                  _TXREG1 000FAD  
                                        mac_isAllZero@mac 0060  
                          ??_ethernetController_softReset 0071  
                               ??_checkForOverlapSwitched 0072  
                              ethernetController_init@err 007D  
                                  __size_of_buttonHandler 00AC  
                                 ?_ethernet_rxGetNewFrame 0178  
                                        ?_UARTTransmitInt 009A  
                                          __CFG_XINST$OFF 000000  
                                        __end_of_arp_init 4A46  
                                        __end_of_arp_send 212A  
                                                  ___lmul 4DA0  
                                        __end_of_ipv4_cmp 5220  
                                         ?_ipv4_isAllZero 0060  
                                                  ___wmul 556E  
                                   ?_ipv4_handleNewPacket 00B5  
                      __end_of_handleStackBackgroundTasks 1EB2  
                              _handleStackBackgroundTasks 1C1C  
                                          __CFG_STVREN$ON 000000  
                                               ??___awmod 0072  
                                   buttonHandler@oldState 0046  
                                               ??___lldiv 0068  
             enc424j600_writeControlRegisterUnbanked@addr 006C  
                                   buttonHandler@newState 0045  
             enc424j600_writeControlRegisterUnbanked@data 006A  
                                               ??___llmod 0068  
                                               ??___lwdiv 0064  
                                               ??___lwmod 0072  
                                    __size_of_hexToString 00EE  
                           enc424j600_setTXLength@lowByte 0070  
                            buttonHandler@debounceCounter 002D  
                                                  clear_0 4734  
                                                  clear_1 4740  
                                                  clear_2 474C  
                                                  clear_3 475A  
                                         ___awmod@divisor 0070  
                              parseNumber@numberToDisplay 0008  
                                arp_parseFromRXBuffer@arp 009D  
                                 __end_of_ipv4_background 3470  
                                         ___awmod@counter 0072  
  __end_of_ethernetController_writeEtherTypeFieldToBuffer 4FEC  
 __size_of_ethernetController_writeEtherTypeFieldToBuffer 004E  
        ??_ethernetController_writeEtherTypeFieldToBuffer 007A  
         ?_ethernetController_writeEtherTypeFieldToBuffer 006F  
          _ethernetController_writeEtherTypeFieldToBuffer 4F9E  
                                               ??_mac_cmp 0064  
                                        ??_mac_setAllZero 0062  
                                           main@prescaler 0194  
          ethernetController_streamToTransmitBuffer@field 006F  
          __end_of_enc424j600_readControlRegisterUnbanked 53B0  
         __size_of_enc424j600_readControlRegisterUnbanked 0036  
                ??_enc424j600_readControlRegisterUnbanked 006C  
                 ?_enc424j600_readControlRegisterUnbanked 006A  
                  _enc424j600_readControlRegisterUnbanked 537A  
                                            __pdataCOMRAM 0048  
                                      _enc424j600_initSPI 5704  
                           ?_enc424j600_setTXStartAddress 006E  
                                      _enc424j600_readSPI 4C0C  
                ethernetController_softReset@comFailCount 0072  
                                                  ltoa@cp 0082  
                                       __end_ofi2___lwdiv 4F9E  
                                            __mediumconst 7A0A  
                             __size_of_ipProtocolToString 0048  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 007A  
           __end_of_ethernetController_clearInterruptFlag 5816  
          __size_of_ethernetController_clearInterruptFlag 000E  
                  ?_ethernetController_clearInterruptFlag 0001  
                 ??_ethernetController_clearInterruptFlag 0072  
                   _ethernetController_clearInterruptFlag 5808  
                             __end_of_ipv4_generateAutoIP 5114  
                                     mac_setToBroadcast@i 0062  
                                                  ultoa@c 0079  
                                                  ultoa@v 0075  
                              __size_of_ipv4_setToAllZero 0026  
                                     ?_enc424j600_initSPI 0001  
                                      ipv4_background@err 009F  
                                          arp_probe@index 0141  
                                     ?_enc424j600_readSPI 0060  
                         ethernetController_softReset@err 0077  
                                         _numberToDisplay 0031  
                                    __CFG_LS48MHZ$SYS24X4 000000  
                                          arp_probe@state 01D2  
                                 ipAdressToString@address 02F0  
      __end_of_ethernetController_updateNextPacketPointer 48E6  
     __size_of_ethernetController_updateNextPacketPointer 007A  
             ?_ethernetController_updateNextPacketPointer 0001  
            ??_ethernetController_updateNextPacketPointer 006F  
              _ethernetController_updateNextPacketPointer 486C  
                     __size_of_enc424j600_enableReception 0008  
                                __size_of_arp_setNewEntry 017C  
                       sevenSegmentUpdate@digitsToDisplay 0039  
                                              __accesstop 0060  
                                 __end_of__initialization 4760  
                                       _printErrorMessage 36FE  
                                __size_of_arp_sendRequest 009E  
                            ??_enc424j600_readPHYRegister 0070  
           ethernetController_getEtherTypeField@ethertype 007C  
                                         ?_ipv4_sendFrame 0134  
                                   _arp_parseFromRXBuffer 0F2E  
                          __end_of_ethernet_rxGetNewFrame 05FE  
                                        _sevenSegmentInit 5720  
                            __size_of_enc424j600_writeSPI 0064  
               ethernetController_updateLinkStatus@temp16 0083  
                                           ___rparam_used 000001  
                                      ?_printErrorMessage 009A  
                             arp_parseFromRXBuffer@i_3040 009A  
                             arp_parseFromRXBuffer@i_3038 0098  
                             arp_parseFromRXBuffer@i_3039 0099  
              ethernetController_pollInterruptFlags@flags 007E  
                                 enc424j600_writeSPI@data 0060  
                                          __pcstackCOMRAM 0001  
                                        __CFG_nPWRTEN$OFF 000000  
                                 ipAdressToString@pointer 0087  
 enc424j600_updateReceiveStatusVector@receiveStatusVector 006C  
                                            __pidataBANK2 5442  
                                       ipv4_parseHeader@i 008C  
                                               ?_UARTInit 0001  
                                    ??_enc424j600_initSPI 0060  
                                    ??_enc424j600_readSPI 0062  
                                     ??_printErrorMessage 009D  
                         enc424j600_setRXTailPointer@addr 006E  
                         __end_of_ethernetController_init 442A  
                                           __end_of_srand 57FA  
                         ??_ethernetController_dropPacket 0074  
                                           __end_of_ultoa 3D7C  
                             arp_parseFromRXBuffer@offset 009B  
     ethernetController_getSourceMACAddress@sourceAddress 0079  
                           ?_enc424j600_getInterruptFlags 006E  
                                     arp_send@destination 00C7  
                                 _ethernet_txFrameRequest 3E6A  
                               __size_of_ipv4_parseHeader 024A  
                              ipProtocolToString@protocol 0062  
                                    __size_of_intToString 0032  
                         __end_of_checkForOverlapSwitched 418A  
                                      __size_of_getMillis 0012  
                                           _buttonHandler 423C  
                          __size_of_memory_txFrameRequest 04DC  
                             __end_of_ipv4_SrcAddrChanged 5794  
                           __end_of_memory_txFrameRequest 0ADA  
                                      __size_of_hexToChar 0022  
                                 arp_background@fAnnounce 0271  
                                      __size_of_arp_probe 02CC  
                                  ?_arp_getEntryFromTable 0060  
                                  arp_parseFromRXBuffer@i 0097  
                    __size_of_enc424j600_setRXTailPointer 002A  
                                                 ??_srand 007C  
                                      __size_of_ipv4_init 0020  
                                                 ??_ultoa 0075  
                               __end_of_printErrorMessage 382C  
                        enc424j600_getPacketCount@lowByte 006E  
                                              __pbssBANK1 01C2  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                             __end_of_memory_txFrameClear 567C  
                          ?_enc424j600_clearInterruptFlag 0001  
                                       _etherTypeToString 5114  
                                      ?_etherTypeToString 0060  
                                       __CFG_PLLSEL$PLL4X 000000  
                                  ??_ipv4_handleNewPacket 00B7  
                         ??_ethernetController_sendPacket 007B  
                                                 ?___lmul 0060  
                                                 ?___wmul 0060  
                                              ??_UARTInit 0060  
                                    __size_of_parseNumber 007E  
                                          hexToString@val 0061  
                                          ___lmul@product 0068  
                                   macToString@firstDigit 0093  
                                     ??_etherTypeToString 0062  
          ethernetController_writeDestinationMACAddress@i 0086  
                                        ?_ipv4_background 009A  
                                        _entireMemoryFull 52D4  
                                   ipv4_parseHeader@field 0074  
                                          ?_buttonHandler 0001  
                              etherTypeToString@ethertype 0060  
                                  ipv4_SrcAddrChanged@err 0060  
                 enc424j600_updateReceiveStatusVector@rsv 0060  
                       enc424j600_readPHYRegister@lowByte 007D  
                                __end_of_ipAdressToString 29D4  
                                         __CFG_WDTPS$1024 000000  
                enc424j600_setERXDATAReadPointer@highByte 006E  
                                                 _SSP1BUF 000FC9  
                                       ipv4_sendFrame@err 00FD  
  ethernetController_writeEtherTypeFieldToBuffer@highByte 007B  
                                               ?_arp_init 0001  
                                               ?_arp_send 00A7  
                            __size_of_ipv4_txFrameRequest 0136  
                          ??_enc424j600_setTXStartAddress 0070  
                                               ?_ipv4_cmp 0060  
                                        __CFG_CFGPLLEN$ON 000000  
                                      _printEthernetState 42E8  
                               __end_of_etherTypeToString 5158  
                                  ?_arp_parseFromRXBuffer 0074  
                  enc424j600_setRXBufferStartAddress@addr 006E  
           __end_of_ethernetController_streamFromRXBuffer 4DA0  
          __size_of_ethernetController_streamFromRXBuffer 005E  
                 ??_ethernetController_streamFromRXBuffer 0071  
                  ?_ethernetController_streamFromRXBuffer 006F  
                   _ethernetController_streamFromRXBuffer 4D42  
                          sevenSegmentUpdate@digitPointer 0044  
                                       ?_UARTTransmitText 0098  
                                       __end_of_getMillis 57DC  
                                                 __Hparam 0000  
                      __end_of_enc424j600_enableReception 584A  
                              _enc424j600_enableReception 5842  
ethernetController_updateNextPacketPointer@nextPktPointer 0075  
                                                 __Lparam 0000  
                                         ipv4_isAllZero@i 0062  
                                     ?_printEthernetState 009A  
                                       ??_arp_setNewEntry 00A8  
               __end_of_enc424j600_enableAutoMACInsertion 55E6  
              __size_of_enc424j600_enableAutoMACInsertion 0028  
                      ?_enc424j600_enableAutoMACInsertion 0001  
                     ??_enc424j600_enableAutoMACInsertion 006E  
                       _enc424j600_enableAutoMACInsertion 55BE  
                                       __end_of_hexToChar 56C2  
                                      ??_UARTTransmitText 009A  
                                checkForOverlapSwitched@a 0060  
                                checkForOverlapSwitched@b 0069  
                                       ??_arp_sendRequest 00FC  
                                       __end_of_arp_probe 1C1C  
                                      buttonHandler@state 0001  
                               enc424j600_setTXLength@len 006E  
                                   __end_of_mac_isAllZero 5412  
                                         __size_of___lmul 0058  
                                                 ___awmod 4ABA  
                          enc424j600_setTXLength@highByte 0071  
                                                 ___lldiv 466A  
                                         __size_of___wmul 0028  
                                                 ___llmod 4C76  
                                                 ___lwdiv 4EF8  
                                                 ___lwmod 5158  
                    enc424j600_setGPDATAWritePointer@addr 006A  
                               ??_ethernet_txFrameRequest 00A4  
                                       __end_of_ipv4_init 5704  
                                     sevenSegmentUpdate@i 0015  
                                                 __pcinit 46EE  
                             __size_of_sevenSegmentUpdate 00BE  
                                     parseNumber@hundreds 000E  
                                                 __ramtop 0800  
                                                 __ptext0 0ADA  
                                                 __ptext1 5824  
                                                 __ptext2 56E4  
                                                 __ptext3 57EC  
                                                 __ptext4 5720  
                                                 __ptext5 42E8  
                                                 __ptext6 36FE  
                                                 __ptext7 303E  
                                                 __ptext8 35C8  
                                                 __ptext9 5546  
                                                 _mac_cmp 519C  
                                  ipv4_handleNewPacket@ip 00C2  
                                               _T0CONbits 000FD5  
                            ??_handleStackBackgroundTasks 0187  
                                            __size_of_ISR 00E0  
                                               _T1CONbits 000FCD  
                  enc424j600_setGPDATAWritePointer@opcode 006C  
                      enc424j600_setRXTailPointer@lowByte 0070  
              __end_of_enc424j600_setRXBufferStartAddress 5546  
             __size_of_enc424j600_setRXBufferStartAddress 002A  
                    ??_enc424j600_setRXBufferStartAddress 0070  
                     ?_enc424j600_setRXBufferStartAddress 006E  
                      _enc424j600_setRXBufferStartAddress 551C  
                   __end_of_ethernetController_dropPacket 525C  
                  __size_of_ethernetController_dropPacket 003C  
                           _ethernetController_dropPacket 5220  
                             ?_ipv4_writeHeaderIntoBuffer 0060  
                                        ___awmod@dividend 006E  
                                    ??_printEthernetState 00A9  
           __end_of_ethernetController_pollInterruptFlags 35C8  
          __size_of_ethernetController_pollInterruptFlags 0158  
                 ??_ethernetController_pollInterruptFlags 007A  
                  ?_ethernetController_pollInterruptFlags 0078  
                   _ethernetController_pollInterruptFlags 3470  
                          ??_enc424j600_getInterruptFlags 0070  
                        __size_of_ipv4_getIPSourceAddress 0012  
                 enc424j600_setGPDATAWritePointer@lowByte 006D  
                        __size_of_ipv4_setIPSourceAddress 0014  
                                              ??_arp_init 00B2  
                                                 main@err 01BB  
                                              ??_arp_send 00C7  
                                   __end_of_arp_sendReply 3318  
                                    end_of_initialization 4760  
                              __size_of_printErrorMessage 012E  
                                              ??_ipv4_cmp 0064  
                              __end_of_mac_setToBroadcast 5658  
                              ?_ethernetController_getRSV 0071  
                                        arp_gratuitous@ip 0134  
                                           __Lmediumconst 7A0A  
                                                 ltoa@buf 007A  
                                        ??_ipv4_isAllZero 0062  
                         ipv4_calculateHeaderChecksum@sum 006E  
                                                 ltoa@val 007C  
                                         mac_setAllZero@i 0062  
             ethernetController_streamFromRXBuffer@opcode 0072  
                                         ___lldiv@divisor 0064  
                                         ___lldiv@counter 006C  
                                 __size_of_arp_background 0180  
                                      entireMemoryEmpty@i 0060  
                                __size_of_checkForOverlap 011E  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                         macToString@addr 007A  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                       arp_setNewEntry@ip 00A0  
                             ?_handleStackBackgroundTasks 0185  
                                       _arp_checkForEntry 418A  
                   memory_txFrameRequest@fNoOverlapMarker 0095  
                    enc424j600_readPHYRegister@PHYaddress 0077  
                                         ??_buttonHandler 0003  
                                      ?_arp_checkForEntry 0067  
                   __end_of_ethernetController_sendPacket 55BE  
                  __size_of_ethernetController_sendPacket 0028  
                           _ethernetController_sendPacket 5596  
                                       arp_sendReply@myIP 0134  
                                               _PORTBbits 000F81  
                                     ipv4_background@link 0001  
                                        _ipv4_parseHeader 212A  
                             ?_enc424j600_writeSingleByte 0001  
                                     ipv4_sendFrame@index 00FC  
                              ?_enc424j600_getPacketCount 0001  
                                ??_enc424j600_setTXLength 0070  
                       sevenSegmentUpdate@numberToDisplay 000F  
                                __end_of_sevenSegmentInit 573A  
                                     _enc424j600_writeSPI 4CDE  
                 __end_of_ipv4_streamToTransmissionBuffer 556E  
                __size_of_ipv4_streamToTransmissionBuffer 0028  
                       ??_ipv4_streamToTransmissionBuffer 00C0  
                        ?_ipv4_streamToTransmissionBuffer 007E  
                         _ipv4_streamToTransmissionBuffer 5546  
                                              _stack_init 5824  
                                           ??_macToString 0080  
                  ethernetController_softReset@dataToSend 0073  
                                               _TRISBbits 000F93  
                                     ??_arp_checkForEntry 006D  
                                              _updateTime 5816  
         __end_of_ethernetController_getNextPacketPointer 5808  
        __size_of_ethernetController_getNextPacketPointer 000E  
               ??_ethernetController_getNextPacketPointer 0064  
                ?_ethernetController_getNextPacketPointer 0062  
                 _ethernetController_getNextPacketPointer 57FA  
                                              arp_init@ip 00B8  
                             __end_of_arp_handleNewPacket 2B96  
                                        ??_ipv4_sendFrame 0176  
                                       i2___lwdiv@divisor 0003  
                         __end_of_ethernet_txFrameRequest 3F52  
                        ethernetController_getRSV@address 0071  
                                               i2___lwdiv 4F4C  
                                       i2___lwdiv@counter 0007  
                              __size_of_etherTypeToString 0044  
                                     UARTTransmitText@str 0098  
                                             _CCP1CONbits 000FBD  
                    __end_of_ipv4_calculateHeaderChecksum 1950  
                   __size_of_ipv4_calculateHeaderChecksum 030C  
                            _ipv4_calculateHeaderChecksum 1644  
                    enc424j600_setTXStartAddress@highByte 0071  
                                    ?_enc424j600_writeSPI 0060  
                                       intToString@number 01DE  
                                ipAdressToString@hundreds 0083  
                                   arp_probe@probeCounter 01D3  
                               __end_of_arp_checkForEntry 423C  
                                           ??_hexToString 0065  
                              arp_getEntryFromTable@index 0067  
                              arp_setNewEntry@oldestIndex 00B0  
                                      arp_checkForEntry@i 0075  
                                      ipv4_parseHeader@ip 008F  
                                          __end_of___lmul 4DF8  
        ethernetController_updateNextPacketPointer@opcode 0077  
                                          __end_of___wmul 5596  
                                           __pidataCOMRAM 584A  
                                        parseNumber@digit 000A  
                            ?_enc424j600_setRXTailPointer 006E  
                                __size_of_UARTTransmitInt 0022  
                                       __size_of_UARTInit 0010  
                  enc424j600_setERXDATAReadPointer@opcode 006C  
                              __end_of_ipProtocolToString 50CE  
                                      hexToString@pointer 0069  
                      ipv4_checkHeaderChecksum@testHeader 009E  
                                  arp_sendReply@senderMAC 0120  
                                  arp_sendReply@targetMAC 0126  
                                 ??_arp_getEntryFromTable 0067  
             __end_of_ethernetController_updateLinkStatus 45E0  
            __size_of_ethernetController_updateLinkStatus 008A  
                   ??_ethernetController_updateLinkStatus 0082  
                    ?_ethernetController_updateLinkStatus 0080  
                     _ethernetController_updateLinkStatus 4556  
                                     start_initialization 46EE  
                                             __end_of_ISR 00E8  
                                  enc424j600_readSPI@data 0060  
                                          intToString@val 0084  
                          ipv4_checkHeaderChecksum@header 009A  
                                ?_ethernetController_init 007A  
                                _ipv4_checkHeaderChecksum 3F52  
                         ipv4_handleNewPacket@headerField 00B9  
                                              ?i2___lwdiv 0001  
                           ipv4_writeHeaderIntoBuffer@ptr 0077  
                                ?_checkForOverlapSwitched 0060  
                                     __end_of_macToString 3C7E  
                                         __CFG_nLPBOR$OFF 000000  
                                   ??_enc424j600_writeSPI 0062  
                                __end_of_entireMemoryFull 530C  
                            __size_of_ipv4_generateAutoIP 0046  
   __end_of_ethernetController_writeDestinationMACAddress 47EE  
  __size_of_ethernetController_writeDestinationMACAddress 0080  
         ??_ethernetController_writeDestinationMACAddress 007E  
          ?_ethernetController_writeDestinationMACAddress 006F  
           _ethernetController_writeDestinationMACAddress 476E  
                                         ___llmod@divisor 0064  
                     ethernetController_checkDeviceId@err 0072  
                                 __size_of_arp_gratuitous 0244  
                                     arp_background@state 01CF  
                                         ___llmod@counter 0068  
                           ?_ipv4_calculateHeaderChecksum 0060  
                           ethernetController_getRSV@temp 01E8  
                     __end_of_enc424j600_setRXTailPointer 551C  
                             _enc424j600_setRXTailPointer 54F2  
                                    printErrorMessage@err 009A  
                                                ??___lmul 0068  
                                          _occupiedMemory 0200  
                                                ??___wmul 0064  
                                     arp_gratuitous@index 00FC  
                                     _ipv4_txFrameRequest 35C8  
                             arp_background@ipPreliminary 01C6  
                  ethernetController_getDeviceName@string 0062  
                             __size_of_enc424j600_initSPI 001C  
                                             __pdataBANK2 02D2  
                                     arp_gratuitous@state 01D0  
                             __size_of_enc424j600_readSPI 006A  
                                           ??_intToString 0088  
                            ??_enc424j600_enableReception 006B  
                                        checkForOverlap@a 0072  
                                        checkForOverlap@b 007B  
                        enc424j600_readSPI@timeoutCounter 0066  
                         ??_enc424j600_clearInterruptFlag 006E  
                                       ??_checkForOverlap 0084  
                                     __end_of_hexToString 3E6A  
                           ??_enc424j600_setRXTailPointer 0070  
                                             ?_stack_init 0001  
                         __size_of_enc424j600_setTXLength 002A  
                                             __pbssCOMRAM 0029  
                        enc424j600_writeSingleByte@opcode 006A  
                                 _ipv4_getIPSourceAddress 5794  
                                 _ipv4_setIPSourceAddress 576C  
                ethernetController_updateLinkStatus@state 0080  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                             ?_updateTime 0001  
                                       ?_ipAdressToString 0073  
                                   _memory_txFrameRequest 05FE  
           __end_of_ethernetController_newPacketAvailable 57B8  
          __size_of_ethernetController_newPacketAvailable 0012  
                  ?_ethernetController_newPacketAvailable 0001  
                 ??_ethernetController_newPacketAvailable 006F  
                   _ethernetController_newPacketAvailable 57A6  
                              arp_parseFromRXBuffer@frame 0074  
                                 ??_arp_parseFromRXBuffer 0094  
                                    ?_ipv4_txFrameRequest 00A7  
                ethernetController_softReset@receivedData 0075  
                                      ??_ipAdressToString 0077  
                                         _arp_setNewEntry 2EC2  
                            __size_of_ipv4_SrcAddrChanged 0014  
                        enc424j600_getInterruptFlags@high 0077  
                                         _arp_sendRequest 442A  
                                 __size_of_mac_setAllZero 0026  
                                       __size_of_arp_init 0074  
                                       __size_of_arp_send 0278  
                                       __size_of_ipv4_cmp 0042  
                               ipv4_txFrameRequest@packet 00A7  
                              buttonHandler@debounceValue 0007  
                                        arp_send@ethFrame 00D1  
                                          _arp_background 2D42  
                     __size_of_enc424j600_writeSingleByte 0018  
                                           ??_parseNumber 000B  
                                               _main$2409 01B8  
                                        ___lwdiv@dividend 0060  
                                      _sevenSegCharacters 02E4  
              ethernetController_getEtherTypeField@opcode 007E  
                              __size_of_arp_checkForEntry 00B2  
                                               __pintcode 0008  
                            __size_of_memory_txFrameClear 0024  
                                           __pmediumconst 7A0A  
                                               _getMillis 57CA  
                                               __ptext100 551C  
                                               __ptext101 5838  
                                               __ptext110 567C  
                                               __ptext102 5842  
                                               __ptext111 57DC  
                                               __ptext103 5754  
                                               __ptext104 55BE  
                                               __ptext113 5816  
                                               __ptext105 5344  
                                               __ptext114 401A  
                                               __ptext106 537A  
                                               __ptext115 47EE  
                                               __ptext107 4CDE  
                                               __ptext116 4F4C  
                                               __ptext108 4C0C  
                                               __ptext117 423C  
                                               __ptext109 5704  
                                                ?___awmod 006E  
                                                ?___lldiv 0060  
                                                ?___llmod 0060  
                           __size_of_ipv4_handleNewPacket 01AC  
                                  arp_checkForEntry@index 006B  
                                                ?___lwdiv 0060  
                                               _arpStatus 003C  
                                                ?___lwmod 006E  
     ethernetController_writeEtherTypeFieldToBuffer@field 0071  
                                               _hexToChar 56A0  
                                               _arp_table 0300  
                                               _arp_probe 1950  
                                     ipv4_setToAllZero@ip 0060  
                                                ?_mac_cmp 0060  
                               __size_of_UARTTransmitText 0056  
                                               _ipv4_init 56E4  
              ethernetController_getSourceMACAddress@temp 007F  
                    enc424j600_setERXDATAReadPointer@addr 006A  
                                  arp_background@errProbe 015A  
                 enc424j600_setERXDATAReadPointer@lowByte 006D  
                                  ipv4_parseHeader@i_3672 008D  
                                      ipAdressToString@ip 0073  
                                     __end_of_intToString 53E2  
                                             _macToString 3B76  
                                       ??_UARTTransmitInt 009E  
                                   ??_ipv4_txFrameRequest 00A9  
                                        ___lwdiv@quotient 0065  
                                   ipv4_generateAutoIP@ip 0078  
                                __size_of_ipv4_background 0158  
                                       _entireMemoryEmpty 530C  
                                ??_ethernet_rxGetNewFrame 017A  
                                             ??i2___lwdiv 0005  
                                          __size_of_srand 000E  
                                          __size_of_ultoa 00FE  
                      enc424j600_readPHYRegister@highByte 007E  
                                      ?_entireMemoryEmpty 0001  
                             ?_enc424j600_readPHYRegister 006E  
                     ipv4_streamToTransmissionBuffer@data 00C2  
                                arp_setNewEntry@timestamp 00A4  
                             ??_ethernetController_getRSV 0076  
                           arp_gratuitous@announceCounter 01D1  
                                  __end_of_arp_background 2EC2  
                                          ___wmul@product 0064  
                             ethernet_rxGetNewFrame@frame 0178  
                                __end_of_ipv4_parseHeader 2374  
                                  _enc424j600_setTXLength 54C8  
                                                _PIE1bits 000F9D  
                       enc424j600_writeSPI@timeoutCounter 0066  
                                     __size_of_stack_init 000A  
                                     ??_entireMemoryEmpty 0060  
                                                _PIR1bits 000F9E  
                                       entireMemoryFull@i 0060  
                                                i2u832_40 4296  
                                                i2u744_40 4F6E  
                                                i2u833_40 4298  
                                                i2u841_40 4096  
                                                i2u842_44 40A6  
                                                i2u842_45 40A2  
                                                i2u837_44 402A  
                                                i2u837_45 4026  
                                                i2u869_40 0060  
                                                i2u869_46 0062  
                                                _RCONbits 000FD0  
                                        arp_setNewEntry@i 00B1  
                                     __size_of_updateTime 000E  
                                             _hexToString 3D7C  
                                      _mac_setToBroadcast 5632  
                              __end_of_sevenSegmentUpdate 40D8  
                                              ?_getMillis 0060  
                                                _UARTInit 57DC  
                          ??_ipv4_calculateHeaderChecksum 0062  
                    __end_of_enc424j600_setTXStartAddress 54C8  
                   __size_of_enc424j600_setTXStartAddress 002A  
                            _enc424j600_setTXStartAddress 549E  
                                  arp_handleNewPacket@arp 0158  
                                      UARTTransmitInt@val 009A  
                                              ?_hexToChar 0001  
                                     __end_of_parseNumber 486C  
                __end_of_enc424j600_setERXDATAReadPointer 52D4  
               __size_of_enc424j600_setERXDATAReadPointer 003C  
                      ??_enc424j600_setERXDATAReadPointer 006C  
                       ?_enc424j600_setERXDATAReadPointer 006A  
                        _enc424j600_setERXDATAReadPointer 5298  
                                              ?_arp_probe 0134  
                                               arp_init@i 00BC  
                               ??_ipv4_getIPSourceAddress 0064  
                                       ___wmul@multiplier 0060  
                               ??_ipv4_setIPSourceAddress 0064  
                                     ?_mac_setToBroadcast 0060  
                                               arp_send@i 00CD  
                             ??_enc424j600_getPacketCount 006E  
                                              ?_ipv4_init 0001  
                                 arp_gratuitous@timeStart 01CA  
   ethernetController_updateNextPacketPointer@newPointerH 0079  
   ethernetController_updateNextPacketPointer@newPointerL 0078  
                                               main@ipDst 01BE  
                                       ?_sevenSegmentInit 0001  
                                 __end_of_arp_setNewEntry 303E  
                                 __end_of_arp_sendRequest 44C8  
                               __end_of_entireMemoryEmpty 5344  
                                  ?_memory_txFrameRequest 0084  
                    ethernetController_checkDeviceId@data 0071  
                             __size_of_printEthernetState 00A2  
                   __end_of_enc424j600_clearInterruptFlag 466A  
                  __size_of_enc424j600_clearInterruptFlag 008A  
                           _enc424j600_clearInterruptFlag 45E0  
                                      ??_sevenSegmentInit 0060  
                     enc424j600_setTXStartAddress@lowByte 0070  
                                               ipv4_cmp@a 0060  
                                               ipv4_cmp@b 0062  
                                               ipv4_cmp@i 0066  
                                    arp_probe@waitingTime 0146  
                                       ___lmul@multiplier 0060  
                                             _INTCON3bits 000FF0  
                                               copy_data0 4702  
                                               copy_data1 4722  
                                         parseNumber@ones 000C  
                                         parseNumber@tens 000D  
                                       hexToString@number 01D4  
                                  __size_of_mac_isAllZero 0030  
                                   arp_sendReply@senderIP 012C  
                                   arp_sendReply@targetIP 0130  
                                      macToString@address 0081  
                                    ipAdressToString@ones 007B  
                                    ipAdressToString@tens 007F  
                                    ??_mac_setToBroadcast 0062  
                                          _arp_gratuitous 2374  
                                         ?_arp_background 0151  
                __end_of_ethernetController_checkDeviceId 503A  
               __size_of_ethernetController_checkDeviceId 004E  
                      ??_ethernetController_checkDeviceId 0071  
                       ?_ethernetController_checkDeviceId 006E  
                        _ethernetController_checkDeviceId 4FEC  
                                      arp_background@link 0156  
                                                __Hrparam 0000  
                                        ipv4_isAllZero@ip 0060  
                        enc424j600_setTXStartAddress@addr 006E  
                                ?_ethernet_txFrameRequest 00A2  
                                                __Lrparam 0000  
                    __end_of_enc424j600_getInterruptFlags 5086  
                   __size_of_enc424j600_getInterruptFlags 004C  
                            _enc424j600_getInterruptFlags 503A  
                                      __CFG_BOREN$SBORDIS 000000  
                        ipv4_writeHeaderIntoBuffer@header 0060  
                                      arp_gratuitous@link 0138  
                      __end_of_enc424j600_writeSingleByte 576C  
                              _enc424j600_writeSingleByte 5754  
                                  macToString@secondDigit 0094  
                                        __size_of___awmod 0072  
                                  __size_of_arp_sendReply 016C  
                                        __size_of___lldiv 0084  
                                        __size_of___llmod 0068  
                                             _intToString 53B0  
                       handleStackBackgroundTasks@errIPv4 018E  
                                        __size_of___lwdiv 0054  
                                        __size_of___lwmod 0044  
                 ethernetController_updateLinkStatus@temp 0082  
                              ??_ipv4_checkHeaderChecksum 009C  
                               _ethernetController_getRSV 495E  
                 __end_of_ethernetController_setLEDConfig 4556  
                __size_of_ethernetController_setLEDConfig 008E  
                       ??_ethernetController_setLEDConfig 006F  
                        ?_ethernetController_setLEDConfig 006E  
                         _ethernetController_setLEDConfig 44C8  
            ethernetController_getEtherTypeField@highByte 0080  
                                     _ipv4_generateAutoIP 50CE  
                                              _ANSELBbits 000F5C  
                                   __end_of_buttonHandler 42E8  
                         enc424j600_getInterruptFlags@low 0076  
                                        __size_of_mac_cmp 0042  
       ethernetController_streamFromRXBuffer@startAddress 006F  
                                             _buttonState 01F9  
                     enc424j600_setRXTailPointer@highByte 0071  
                                arp_sendRequest@senderMAC 0108  
                                  memory_txFrameRequest@i 0096  
                          __size_of_arp_getEntryFromTable 002E  
                                arp_sendRequest@targetMAC 010E  
                                         ___lwdiv@divisor 0062  
                           __end_of_arp_getEntryFromTable 549E  
                                         ___lwdiv@counter 0064  
                                       mac_setAllZero@mac 0060  
                                     _ipPreliminarySource 01EE  
                                                __ptext10 1C1C  
                                                __ptext11 576C  
                                                __ptext20 3F52  
                                                __ptext12 25B8  
                                                __ptext21 1644  
                                                __ptext13 5470  
                                                __ptext30 29D4  
                                                __ptext22 3D7C  
                                                __ptext14 50CE  
                                                __ptext31 5220  
                                                __ptext23 56A0  
                                                __ptext15 4ABA  
                                                __ptext40 53B0  
                                                __ptext32 57FA  
                                                __ptext24 5086  
                                                __ptext16 3318  
                                                __ptext41 4EA4  
                                                __ptext33 582E  
                                                __ptext25 486C  
                                                __ptext17 00EC  
                                                __ptext50 57A6  
                                                __ptext42 3C7E  
                                                __ptext34 31AC  
                                                __ptext26 495E  
                                                __ptext18 2B96  
                                                __ptext51 573A  
                                                __ptext43 4C76  
                                                __ptext35 5794  
                                                __ptext27 1328  
                                                __ptext19 212A  
                                                __ptext60 57B8  
                                                __ptext52 5808  
                                                __ptext44 466A  
                                                __ptext36 0F2E  
                                                __ptext28 4B2C  
                                                __ptext61 5780  
                                                __ptext53 45E0  
                                                __ptext45 4556  
                                                __ptext37 519C  
                                                __ptext29 5114  
                                                __ptext70 442A  
                                                __ptext62 1950  
                                                __ptext54 49D2  
                                                __ptext46 382C  
                                                __ptext38 4D42  
                                                __ptext71 560C  
                                                __ptext63 4DF8  
                                                __ptext55 2EC2  
                                                __ptext47 44C8  
                                                __ptext39 56C2  
                                                __ptext80 40D8  
                                                __ptext72 4A46  
                                                __ptext64 4DA0  
                                                __ptext56 53E2  
                                                __ptext48 3470  
                                                __ptext81 556E  
                                                __ptext73 1EB2  
                                                __ptext65 55E6  
                                                __ptext57 3B76  
                                                __ptext49 503A  
                                                __ptext90 4B9C  
                                                __ptext82 4F9E  
                                                __ptext74 5632  
                                                __ptext66 2374  
                                                __ptext58 5412  
                                                __ptext91 5298  
                                                __ptext83 476E  
                                                __ptext75 3E6A  
                                                __ptext67 27E6  
                                                __ptext59 2D42  
                                                __ptext92 418A  
                                                __ptext84 48E6  
                                                __ptext76 05FE  
                                                __ptext68 5158  
                                                __ptext93 51DE  
                                                __ptext85 525C  
                                                __ptext77 52D4  
                                                __ptext69 4EF8  
                                                __ptext94 57CA  
                                                __ptext86 5596  
                                                __ptext78 530C  
                                                __ptext95 4E4E  
                                                __ptext87 5658  
                                                __ptext79 394E  
                                                __ptext96 438A  
                                                __ptext88 549E  
                                                __ptext97 3A6C  
                                                __ptext89 54C8  
                                                __ptext98 4FEC  
                                                __ptext99 54F2  
                                            _SSP1CON1bits 000FC6  
                   enc424j600_enableAutoMACInsertion@temp 006E  
                                                _arp_init 49D2  
                                                _arp_send 1EB2  
                                      ipv4_setToAllZero@i 0062  
                         __size_of_ethernet_rxGetNewFrame 0512  
                                          _mac_setAllZero 560C  
                                  __end_of_arp_gratuitous 25B8  
                                                _ipv4_cmp 51DE  
                                                _ipSource 01F2  
                                             _OSCCON2bits 000FD2  
                                       ipAdressToString@i 0088  
                                      _ipProtocolToString 5086  
                         __end_of_ipv4_getIPSourceAddress 57A6  
                enc424j600_setGPDATAWritePointer@highByte 006E  
                         __end_of_ipv4_setIPSourceAddress 5780  
              __end_of_ipv4_getPreliminaryIPSourceAddress 57CA  
             __size_of_ipv4_getPreliminaryIPSourceAddress 0012  
                    ??_ipv4_getPreliminaryIPSourceAddress 0064  
                     ?_ipv4_getPreliminaryIPSourceAddress 0060  
                      _ipv4_getPreliminaryIPSourceAddress 57B8  
                                    ?_ipv4_generateAutoIP 0074  
                                           __size_of_main 0454  
                                           __size_of_rand 0056  
                                           __size_of_ltoa 0054  
                               _enc424j600_getPacketCount 573A  
                                       ??_ipv4_background 009D  
                                       ?_entireMemoryFull 0001  
                            __size_of_arp_handleNewPacket 01C2  
                 __end_of_enc424j600_getNextPacketPointer 5838  
                __size_of_enc424j600_getNextPacketPointer 000A  
                       ??_enc424j600_getNextPacketPointer 0062  
                        ?_enc424j600_getNextPacketPointer 0060  
                         _enc424j600_getNextPacketPointer 582E  
                 __end_of_enc424j600_setNextPacketPointer 5842  
                __size_of_enc424j600_setNextPacketPointer 000A  
                       ??_enc424j600_setNextPacketPointer 0062  
                        ?_enc424j600_setNextPacketPointer 0060  
                         _enc424j600_setNextPacketPointer 5838  
     ethernetController_writeDestinationMACAddress@opcode 0084  
                        __size_of_ethernetController_init 00A0  
                                         _checkForOverlap 394E  
                                     ?_ipProtocolToString 0060  
                                      ??_entireMemoryFull 0060  
                                             _parseNumber 47EE  
                                             ??_getMillis 0064  
                                                int$flags 004F  
                                 buttonHandler@resetValue 0003  
                                                mac_cmp@a 0060  
                        __size_of_checkForOverlapSwitched 00B2  
                                                mac_cmp@b 0062  
                                                mac_cmp@i 0066  
            enc424j600_readControlRegisterUnbanked@opcode 006D  
                                           _mac_isAllZero 53E2  
                   ipv4_streamToTransmissionBuffer@packet 007E  
                                     _ipv4_SrcAddrChanged 5780  
                                            _SSP1STATbits 000FC7  
                                             ??_hexToChar 0060  
                              ethernet_txFrameRequest@err 00A4  
                                             ??_arp_probe 0139  
                                 __size_of_ipv4_isAllZero 0030  
                               ipv4_setIPSourceAddress@ip 0060  
                               ethernet_rxGetNewFrame@err 0182  
                                        _UARTTransmitText 4E4E  
                                             ??_ipv4_init 0063  
                     __size_of_enc424j600_readPHYRegister 0122  
                                            ??_stack_init 00BD  
                                    arp_sendReply@request 0100  
                                 arp_sendRequest@ipSender 0100  
                                 arp_sendRequest@ipTarget 0104  
                                              _INTCONbits 000FF2  
                                    ??_ipProtocolToString 0062  
                                        ?_arp_setNewEntry 009A  
                                  ipv4_sendFrame@ipPacket 0134  
                                       arp_background@err 01F6  
                              __size_of_entireMemoryEmpty 0038  
                                            ??_updateTime 0001  
   ethernetController_writeEtherTypeFieldToBuffer@ethtype 006F  
                                        ?_arp_sendRequest 0100  
   ethernetController_writeEtherTypeFieldToBuffer@lowByte 007A  
                                       arp_gratuitous@err 00FD  
                                  __end_of_mac_setAllZero 5632  
                                               ultoa@base 0073  
                                     _memory_txFrameClear 5658  
                             __end_of_enc424j600_writeSPI 4D42  
                        handleStackBackgroundTasks@errArp 0189  
     ipv4_streamToTransmissionBuffer@ethernetPacketLength 00C0  
                                           _arp_sendReply 31AC  
                                                intlevel2 0000  
                                    ?_ipv4_SrcAddrChanged 0060  
                          __size_of_arp_parseFromRXBuffer 03FA  
                                         ?_arp_gratuitous 0134  
                           __end_of_arp_parseFromRXBuffer 1328  
                                                ltoa@base 0080  
                                   ??_ipv4_generateAutoIP 0078  
                                        ___lwmod@dividend 006E  
                                        ___lldiv@dividend 0060  
             ethernetController_getEtherTypeField@lowByte 007F  
      ethernetController_writeDestinationMACAddress@i_638 0085  
               ethernetController_streamFromRXBuffer@temp 0073  
                          enc424j600_readPHYRegister@addr 0076  
                                              _RCSTA1bits 000FAB  
                          enc424j600_readPHYRegister@data 006E  
                                        macToString@F5948 02D2  
                          enc424j600_readPHYRegister@temp 007F  
      ethernetController_writeDestinationMACAddress@field 0075  
                               arp_setNewEntry@maxSeconds 00AC  
                                              _OSCCONbits 000FD3  
                                 __size_of_ipv4_sendFrame 022E  
                               __size_of_ipAdressToString 01EE  
                                      __end_of_stack_init 582E  
                                            macToString@i 0095  
                                            macToString@j 0097  
                enc424j600_readPHYRegister@timeoutCounter 0079  
                              __end_of_enc424j600_initSPI 5720  
                              __end_of_enc424j600_readSPI 4C76  
                                    ?_memory_txFrameClear 0001  
                                      arp_probe@timeStart 0142  
                                          ?_mac_isAllZero 0060  
                                  _ethernet_rxGetNewFrame 00EC  
                                      __end_of_updateTime 5824  
                                    __CFG_CPUDIV$NOCLKDIV 000000  
                                       arp_probe@ipSender 014A  
                                       arp_probe@ipTarget 0134  
                                         _UARTTransmitInt 56C2  
                                      arp_setNewEntry@mac 009A  
                      ethernetController_sendPacket@field 0072  
            ethernetController_getSourceMACAddress@opcode 0078  
    ethernetController_writeEtherTypeFieldToBuffer@opcode 007C  
            __end_of_enc424j600_updateReceiveStatusVector 1644  
           __size_of_enc424j600_updateReceiveStatusVector 031C  
                  ??_enc424j600_updateReceiveStatusVector 0065  
                   ?_enc424j600_updateReceiveStatusVector 0060  
                    _enc424j600_updateReceiveStatusVector 1328  
                                   mac_setToBroadcast@mac 0060  
                                                ultoa@buf 006D  
                                                ultoa@val 006F  
                               ipv4_handleNewPacket@frame 00B5  
                                   ipv4_sendFrame@oldTime 01C2  
                __end_of_enc424j600_setGPDATAWritePointer 5298  
               __size_of_enc424j600_setGPDATAWritePointer 003C  
                      ??_enc424j600_setGPDATAWritePointer 006C  
                       ?_enc424j600_setGPDATAWritePointer 006A  
                        _enc424j600_setGPDATAWritePointer 525C  
                                        ___lldiv@quotient 0068  
                                         ___lwmod@divisor 0070  
                                  arp_sendRequest@request 0114  
                      enc424j600_setNextPacketPointer@ptr 0060  
                                         ___lwmod@counter 0072  
                            ??_ipv4_writeHeaderIntoBuffer 0079  
                                            ?_macToString 007A  
              enc424j600_readControlRegisterUnbanked@addr 006C  
              enc424j600_readControlRegisterUnbanked@data 006A  
                         ethernetController_getRSV@opcode 0076  
                    __end_of_ethernetController_softReset 3B76  
                   __size_of_ethernetController_softReset 010A  
                            _ethernetController_softReset 3A6C  
                                         ?_mac_setAllZero 0060  
                            __end_of_ipv4_handleNewPacket 2D42  
             ethernetController_getSourceMACAddress@field 006F  
                                      arp_sendReply@reply 0138  
                                          ?_arp_sendReply 0100  
                                   ??_ipv4_SrcAddrChanged 0062  
                                arp_handleNewPacket@frame 00FC  
                                      __CFG_FOSC$INTOSCIO 000000  
                                 ?_enc424j600_setTXLength 006E  
                                 __end_of_checkForOverlap 3A6C  
           __end_ofethernetController_getDeviceName@F6000 7A16  
                   ethernetController_getDeviceName@F6000 7A0B  
                          ?_ethernetController_dropPacket 0072  
                                       ?_ipv4_parseHeader 0074  
                                 _sevenSegmentUpdate$2500 0013  
                                      ??_ipv4_parseHeader 008B  
                                   ??_memory_txFrameClear 0060  
